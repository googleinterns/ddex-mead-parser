// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: avs/avs.proto

package avs;

public final class Avs {
  private Avs() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code avs.AdditionalRightsClaimStatus}
   */
  public enum AdditionalRightsClaimStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADDITIONAL_RIGHTS_CLAIM_STATUS_ACCEPTED = 0;</code>
     */
    ADDITIONAL_RIGHTS_CLAIM_STATUS_ACCEPTED(0),
    ;

    /**
     * <code>ADDITIONAL_RIGHTS_CLAIM_STATUS_ACCEPTED = 0;</code>
     */
    public static final int ADDITIONAL_RIGHTS_CLAIM_STATUS_ACCEPTED_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdditionalRightsClaimStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AdditionalRightsClaimStatus forNumber(int value) {
      switch (value) {
        case 0: return ADDITIONAL_RIGHTS_CLAIM_STATUS_ACCEPTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdditionalRightsClaimStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdditionalRightsClaimStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdditionalRightsClaimStatus>() {
            public AdditionalRightsClaimStatus findValueByNumber(int number) {
              return AdditionalRightsClaimStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(0);
    }

    private static final AdditionalRightsClaimStatus[] VALUES = values();

    public static AdditionalRightsClaimStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdditionalRightsClaimStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AdditionalRightsClaimStatus)
  }

  /**
   * Protobuf enum {@code avs.AdditionalTitleType}
   */
  public enum AdditionalTitleType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADDITIONAL_TITLE_TYPE_ORIGINAL_TITLE = 0;</code>
     */
    ADDITIONAL_TITLE_TYPE_ORIGINAL_TITLE(0),
    /**
     * <code>ADDITIONAL_TITLE_TYPE_FORMAL_TITLE = 1;</code>
     */
    ADDITIONAL_TITLE_TYPE_FORMAL_TITLE(1),
    /**
     * <code>ADDITIONAL_TITLE_TYPE_ALTERNATIVE_TITLE = 2;</code>
     */
    ADDITIONAL_TITLE_TYPE_ALTERNATIVE_TITLE(2),
    /**
     * <code>ADDITIONAL_TITLE_TYPE_USER_DEFINED = 3;</code>
     */
    ADDITIONAL_TITLE_TYPE_USER_DEFINED(3),
    /**
     * <code>ADDITIONAL_TITLE_TYPE_GROUPING_TITLE = 4;</code>
     */
    ADDITIONAL_TITLE_TYPE_GROUPING_TITLE(4),
    ;

    /**
     * <code>ADDITIONAL_TITLE_TYPE_ORIGINAL_TITLE = 0;</code>
     */
    public static final int ADDITIONAL_TITLE_TYPE_ORIGINAL_TITLE_VALUE = 0;
    /**
     * <code>ADDITIONAL_TITLE_TYPE_FORMAL_TITLE = 1;</code>
     */
    public static final int ADDITIONAL_TITLE_TYPE_FORMAL_TITLE_VALUE = 1;
    /**
     * <code>ADDITIONAL_TITLE_TYPE_ALTERNATIVE_TITLE = 2;</code>
     */
    public static final int ADDITIONAL_TITLE_TYPE_ALTERNATIVE_TITLE_VALUE = 2;
    /**
     * <code>ADDITIONAL_TITLE_TYPE_USER_DEFINED = 3;</code>
     */
    public static final int ADDITIONAL_TITLE_TYPE_USER_DEFINED_VALUE = 3;
    /**
     * <code>ADDITIONAL_TITLE_TYPE_GROUPING_TITLE = 4;</code>
     */
    public static final int ADDITIONAL_TITLE_TYPE_GROUPING_TITLE_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdditionalTitleType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AdditionalTitleType forNumber(int value) {
      switch (value) {
        case 0: return ADDITIONAL_TITLE_TYPE_ORIGINAL_TITLE;
        case 1: return ADDITIONAL_TITLE_TYPE_FORMAL_TITLE;
        case 2: return ADDITIONAL_TITLE_TYPE_ALTERNATIVE_TITLE;
        case 3: return ADDITIONAL_TITLE_TYPE_USER_DEFINED;
        case 4: return ADDITIONAL_TITLE_TYPE_GROUPING_TITLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdditionalTitleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdditionalTitleType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdditionalTitleType>() {
            public AdditionalTitleType findValueByNumber(int number) {
              return AdditionalTitleType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(1);
    }

    private static final AdditionalTitleType[] VALUES = values();

    public static AdditionalTitleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdditionalTitleType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AdditionalTitleType)
  }

  /**
   * Protobuf enum {@code avs.AdditionalUseType}
   */
  public enum AdditionalUseType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADDITIONAL_USE_TYPE_ALL = 0;</code>
     */
    ADDITIONAL_USE_TYPE_ALL(0),
    ;

    /**
     * <code>ADDITIONAL_USE_TYPE_ALL = 0;</code>
     */
    public static final int ADDITIONAL_USE_TYPE_ALL_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdditionalUseType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AdditionalUseType forNumber(int value) {
      switch (value) {
        case 0: return ADDITIONAL_USE_TYPE_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdditionalUseType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdditionalUseType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdditionalUseType>() {
            public AdditionalUseType findValueByNumber(int number) {
              return AdditionalUseType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(2);
    }

    private static final AdditionalUseType[] VALUES = values();

    public static AdditionalUseType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdditionalUseType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AdditionalUseType)
  }

  /**
   * Protobuf enum {@code avs.AdditionalVideoType}
   */
  public enum AdditionalVideoType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_INTERACTIVE_RESOURCE = 0;</code>
     */
    ADDITIONAL_VIDEO_TYPE_INTERACTIVE_RESOURCE(0),
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_DRAMA = 1;</code>
     */
    ADDITIONAL_VIDEO_TYPE_DRAMA(1),
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO = 2;</code>
     */
    ADDITIONAL_VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO(2),
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO = 3;</code>
     */
    ADDITIONAL_VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO(3),
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_WEB_RESOURCE = 4;</code>
     */
    ADDITIONAL_VIDEO_TYPE_WEB_RESOURCE(4),
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO = 5;</code>
     */
    ADDITIONAL_VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO(5),
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_USER_DEFINED = 6;</code>
     */
    ADDITIONAL_VIDEO_TYPE_USER_DEFINED(6),
    ;

    /**
     * <code>ADDITIONAL_VIDEO_TYPE_INTERACTIVE_RESOURCE = 0;</code>
     */
    public static final int ADDITIONAL_VIDEO_TYPE_INTERACTIVE_RESOURCE_VALUE = 0;
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_DRAMA = 1;</code>
     */
    public static final int ADDITIONAL_VIDEO_TYPE_DRAMA_VALUE = 1;
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO = 2;</code>
     */
    public static final int ADDITIONAL_VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO_VALUE = 2;
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO = 3;</code>
     */
    public static final int ADDITIONAL_VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO_VALUE = 3;
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_WEB_RESOURCE = 4;</code>
     */
    public static final int ADDITIONAL_VIDEO_TYPE_WEB_RESOURCE_VALUE = 4;
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO = 5;</code>
     */
    public static final int ADDITIONAL_VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO_VALUE = 5;
    /**
     * <code>ADDITIONAL_VIDEO_TYPE_USER_DEFINED = 6;</code>
     */
    public static final int ADDITIONAL_VIDEO_TYPE_USER_DEFINED_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdditionalVideoType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AdditionalVideoType forNumber(int value) {
      switch (value) {
        case 0: return ADDITIONAL_VIDEO_TYPE_INTERACTIVE_RESOURCE;
        case 1: return ADDITIONAL_VIDEO_TYPE_DRAMA;
        case 2: return ADDITIONAL_VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO;
        case 3: return ADDITIONAL_VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO;
        case 4: return ADDITIONAL_VIDEO_TYPE_WEB_RESOURCE;
        case 5: return ADDITIONAL_VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO;
        case 6: return ADDITIONAL_VIDEO_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdditionalVideoType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdditionalVideoType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdditionalVideoType>() {
            public AdditionalVideoType findValueByNumber(int number) {
              return AdditionalVideoType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(3);
    }

    private static final AdditionalVideoType[] VALUES = values();

    public static AdditionalVideoType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdditionalVideoType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AdditionalVideoType)
  }

  /**
   * Protobuf enum {@code avs.AdministratingRecordCompanyRole}
   */
  public enum AdministratingRecordCompanyRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_ROYALTY_ADMINISTRATOR = 0;</code>
     */
    ADMINISTRATING_RECORD_COMPANY_ROLE_ROYALTY_ADMINISTRATOR(0),
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_UNKNOWN = 1;</code>
     */
    ADMINISTRATING_RECORD_COMPANY_ROLE_UNKNOWN(1),
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_RIGHTS_ADMINISTRATOR = 2;</code>
     */
    ADMINISTRATING_RECORD_COMPANY_ROLE_RIGHTS_ADMINISTRATOR(2),
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_USER_DEFINED = 3;</code>
     */
    ADMINISTRATING_RECORD_COMPANY_ROLE_USER_DEFINED(3),
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_DESIGNATED_DSR_MESSAGE_RECIPIENT = 4;</code>
     */
    ADMINISTRATING_RECORD_COMPANY_ROLE_DESIGNATED_DSR_MESSAGE_RECIPIENT(4),
    ;

    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_ROYALTY_ADMINISTRATOR = 0;</code>
     */
    public static final int ADMINISTRATING_RECORD_COMPANY_ROLE_ROYALTY_ADMINISTRATOR_VALUE = 0;
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_UNKNOWN = 1;</code>
     */
    public static final int ADMINISTRATING_RECORD_COMPANY_ROLE_UNKNOWN_VALUE = 1;
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_RIGHTS_ADMINISTRATOR = 2;</code>
     */
    public static final int ADMINISTRATING_RECORD_COMPANY_ROLE_RIGHTS_ADMINISTRATOR_VALUE = 2;
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_USER_DEFINED = 3;</code>
     */
    public static final int ADMINISTRATING_RECORD_COMPANY_ROLE_USER_DEFINED_VALUE = 3;
    /**
     * <code>ADMINISTRATING_RECORD_COMPANY_ROLE_DESIGNATED_DSR_MESSAGE_RECIPIENT = 4;</code>
     */
    public static final int ADMINISTRATING_RECORD_COMPANY_ROLE_DESIGNATED_DSR_MESSAGE_RECIPIENT_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AdministratingRecordCompanyRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AdministratingRecordCompanyRole forNumber(int value) {
      switch (value) {
        case 0: return ADMINISTRATING_RECORD_COMPANY_ROLE_ROYALTY_ADMINISTRATOR;
        case 1: return ADMINISTRATING_RECORD_COMPANY_ROLE_UNKNOWN;
        case 2: return ADMINISTRATING_RECORD_COMPANY_ROLE_RIGHTS_ADMINISTRATOR;
        case 3: return ADMINISTRATING_RECORD_COMPANY_ROLE_USER_DEFINED;
        case 4: return ADMINISTRATING_RECORD_COMPANY_ROLE_DESIGNATED_DSR_MESSAGE_RECIPIENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AdministratingRecordCompanyRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AdministratingRecordCompanyRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AdministratingRecordCompanyRole>() {
            public AdministratingRecordCompanyRole findValueByNumber(int number) {
              return AdministratingRecordCompanyRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(4);
    }

    private static final AdministratingRecordCompanyRole[] VALUES = values();

    public static AdministratingRecordCompanyRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AdministratingRecordCompanyRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AdministratingRecordCompanyRole)
  }

  /**
   * Protobuf enum {@code avs.AffiliationType}
   */
  public enum AffiliationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AFFILIATION_TYPE_MUSIC_RIGHTS_SOCIETY = 0;</code>
     */
    AFFILIATION_TYPE_MUSIC_RIGHTS_SOCIETY(0),
    /**
     * <code>AFFILIATION_TYPE_MUSIC_PUBLISHER = 1;</code>
     */
    AFFILIATION_TYPE_MUSIC_PUBLISHER(1),
    /**
     * <code>AFFILIATION_TYPE_MUSIC_LICENSING_COMPANY = 2;</code>
     */
    AFFILIATION_TYPE_MUSIC_LICENSING_COMPANY(2),
    /**
     * <code>AFFILIATION_TYPE_RECORD_COMPANY = 3;</code>
     */
    AFFILIATION_TYPE_RECORD_COMPANY(3),
    /**
     * <code>AFFILIATION_TYPE_USER_DEFINED = 4;</code>
     */
    AFFILIATION_TYPE_USER_DEFINED(4),
    ;

    /**
     * <code>AFFILIATION_TYPE_MUSIC_RIGHTS_SOCIETY = 0;</code>
     */
    public static final int AFFILIATION_TYPE_MUSIC_RIGHTS_SOCIETY_VALUE = 0;
    /**
     * <code>AFFILIATION_TYPE_MUSIC_PUBLISHER = 1;</code>
     */
    public static final int AFFILIATION_TYPE_MUSIC_PUBLISHER_VALUE = 1;
    /**
     * <code>AFFILIATION_TYPE_MUSIC_LICENSING_COMPANY = 2;</code>
     */
    public static final int AFFILIATION_TYPE_MUSIC_LICENSING_COMPANY_VALUE = 2;
    /**
     * <code>AFFILIATION_TYPE_RECORD_COMPANY = 3;</code>
     */
    public static final int AFFILIATION_TYPE_RECORD_COMPANY_VALUE = 3;
    /**
     * <code>AFFILIATION_TYPE_USER_DEFINED = 4;</code>
     */
    public static final int AFFILIATION_TYPE_USER_DEFINED_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AffiliationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AffiliationType forNumber(int value) {
      switch (value) {
        case 0: return AFFILIATION_TYPE_MUSIC_RIGHTS_SOCIETY;
        case 1: return AFFILIATION_TYPE_MUSIC_PUBLISHER;
        case 2: return AFFILIATION_TYPE_MUSIC_LICENSING_COMPANY;
        case 3: return AFFILIATION_TYPE_RECORD_COMPANY;
        case 4: return AFFILIATION_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AffiliationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AffiliationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AffiliationType>() {
            public AffiliationType findValueByNumber(int number) {
              return AffiliationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(5);
    }

    private static final AffiliationType[] VALUES = values();

    public static AffiliationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AffiliationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AffiliationType)
  }

  /**
   * Protobuf enum {@code avs.AllTerritoryCode}
   */
  public enum AllTerritoryCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALL_TERRITORY_CODE_A_D = 0;</code>
     */
    ALL_TERRITORY_CODE_A_D(0),
    /**
     * <code>ALL_TERRITORY_CODE_A_E = 1;</code>
     */
    ALL_TERRITORY_CODE_A_E(1),
    /**
     * <code>ALL_TERRITORY_CODE_A_F = 2;</code>
     */
    ALL_TERRITORY_CODE_A_F(2),
    /**
     * <code>ALL_TERRITORY_CODE_A_G = 3;</code>
     */
    ALL_TERRITORY_CODE_A_G(3),
    /**
     * <code>ALL_TERRITORY_CODE_A_I = 4;</code>
     */
    ALL_TERRITORY_CODE_A_I(4),
    /**
     * <code>ALL_TERRITORY_CODE_A_L = 5;</code>
     */
    ALL_TERRITORY_CODE_A_L(5),
    /**
     * <code>ALL_TERRITORY_CODE_A_M = 6;</code>
     */
    ALL_TERRITORY_CODE_A_M(6),
    /**
     * <code>ALL_TERRITORY_CODE_A_N = 7;</code>
     */
    ALL_TERRITORY_CODE_A_N(7),
    /**
     * <code>ALL_TERRITORY_CODE_A_O = 8;</code>
     */
    ALL_TERRITORY_CODE_A_O(8),
    /**
     * <code>ALL_TERRITORY_CODE_A_Q = 9;</code>
     */
    ALL_TERRITORY_CODE_A_Q(9),
    /**
     * <code>ALL_TERRITORY_CODE_A_R = 10;</code>
     */
    ALL_TERRITORY_CODE_A_R(10),
    /**
     * <code>ALL_TERRITORY_CODE_A_S = 11;</code>
     */
    ALL_TERRITORY_CODE_A_S(11),
    /**
     * <code>ALL_TERRITORY_CODE_A_T = 12;</code>
     */
    ALL_TERRITORY_CODE_A_T(12),
    /**
     * <code>ALL_TERRITORY_CODE_A_U = 13;</code>
     */
    ALL_TERRITORY_CODE_A_U(13),
    /**
     * <code>ALL_TERRITORY_CODE_4 = 14;</code>
     */
    ALL_TERRITORY_CODE_4(14),
    /**
     * <code>ALL_TERRITORY_CODE_A_W = 15;</code>
     */
    ALL_TERRITORY_CODE_A_W(15),
    /**
     * <code>ALL_TERRITORY_CODE_A_X = 16;</code>
     */
    ALL_TERRITORY_CODE_A_X(16),
    /**
     * <code>ALL_TERRITORY_CODE_8 = 17;</code>
     */
    ALL_TERRITORY_CODE_8(17),
    /**
     * <code>ALL_TERRITORY_CODE_800 = 18;</code>
     */
    ALL_TERRITORY_CODE_800(18),
    /**
     * <code>ALL_TERRITORY_CODE_A_Z = 19;</code>
     */
    ALL_TERRITORY_CODE_A_Z(19),
    /**
     * <code>ALL_TERRITORY_CODE_804 = 20;</code>
     */
    ALL_TERRITORY_CODE_804(20),
    /**
     * <code>ALL_TERRITORY_CODE_B_A = 21;</code>
     */
    ALL_TERRITORY_CODE_B_A(21),
    /**
     * <code>ALL_TERRITORY_CODE_807 = 22;</code>
     */
    ALL_TERRITORY_CODE_807(22),
    /**
     * <code>ALL_TERRITORY_CODE_B_B = 23;</code>
     */
    ALL_TERRITORY_CODE_B_B(23),
    /**
     * <code>ALL_TERRITORY_CODE_B_D = 24;</code>
     */
    ALL_TERRITORY_CODE_B_D(24),
    /**
     * <code>ALL_TERRITORY_CODE_B_E = 25;</code>
     */
    ALL_TERRITORY_CODE_B_E(25),
    /**
     * <code>ALL_TERRITORY_CODE_B_F = 26;</code>
     */
    ALL_TERRITORY_CODE_B_F(26),
    /**
     * <code>ALL_TERRITORY_CODE_W_K_U_M = 27;</code>
     */
    ALL_TERRITORY_CODE_W_K_U_M(27),
    /**
     * <code>ALL_TERRITORY_CODE_B_G = 28;</code>
     */
    ALL_TERRITORY_CODE_B_G(28),
    /**
     * <code>ALL_TERRITORY_CODE_B_H = 29;</code>
     */
    ALL_TERRITORY_CODE_B_H(29),
    /**
     * <code>ALL_TERRITORY_CODE_B_I = 30;</code>
     */
    ALL_TERRITORY_CODE_B_I(30),
    /**
     * <code>ALL_TERRITORY_CODE_B_J = 31;</code>
     */
    ALL_TERRITORY_CODE_B_J(31),
    /**
     * <code>ALL_TERRITORY_CODE_B_L = 32;</code>
     */
    ALL_TERRITORY_CODE_B_L(32),
    /**
     * <code>ALL_TERRITORY_CODE_B_M = 33;</code>
     */
    ALL_TERRITORY_CODE_B_M(33),
    /**
     * <code>ALL_TERRITORY_CODE_B_N = 34;</code>
     */
    ALL_TERRITORY_CODE_B_N(34),
    /**
     * <code>ALL_TERRITORY_CODE_B_O = 35;</code>
     */
    ALL_TERRITORY_CODE_B_O(35),
    /**
     * <code>ALL_TERRITORY_CODE_B_Q = 36;</code>
     */
    ALL_TERRITORY_CODE_B_Q(36),
    /**
     * <code>ALL_TERRITORY_CODE_B_R = 37;</code>
     */
    ALL_TERRITORY_CODE_B_R(37),
    /**
     * <code>ALL_TERRITORY_CODE_B_S = 38;</code>
     */
    ALL_TERRITORY_CODE_B_S(38),
    /**
     * <code>ALL_TERRITORY_CODE_B_T = 39;</code>
     */
    ALL_TERRITORY_CODE_B_T(39),
    /**
     * <code>ALL_TERRITORY_CODE_B_V = 40;</code>
     */
    ALL_TERRITORY_CODE_B_V(40),
    /**
     * <code>ALL_TERRITORY_CODE_B_W = 41;</code>
     */
    ALL_TERRITORY_CODE_B_W(41),
    /**
     * <code>ALL_TERRITORY_CODE_B_Y = 42;</code>
     */
    ALL_TERRITORY_CODE_B_Y(42),
    /**
     * <code>ALL_TERRITORY_CODE_810 = 43;</code>
     */
    ALL_TERRITORY_CODE_810(43),
    /**
     * <code>ALL_TERRITORY_CODE_B_Z = 44;</code>
     */
    ALL_TERRITORY_CODE_B_Z(44),
    /**
     * <code>ALL_TERRITORY_CODE_C_A = 45;</code>
     */
    ALL_TERRITORY_CODE_C_A(45),
    /**
     * <code>ALL_TERRITORY_CODE_818 = 46;</code>
     */
    ALL_TERRITORY_CODE_818(46),
    /**
     * <code>ALL_TERRITORY_CODE_C_C = 47;</code>
     */
    ALL_TERRITORY_CODE_C_C(47),
    /**
     * <code>ALL_TERRITORY_CODE_C_D = 48;</code>
     */
    ALL_TERRITORY_CODE_C_D(48),
    /**
     * <code>ALL_TERRITORY_CODE_C_F = 49;</code>
     */
    ALL_TERRITORY_CODE_C_F(49),
    /**
     * <code>ALL_TERRITORY_CODE_C_G = 50;</code>
     */
    ALL_TERRITORY_CODE_C_G(50),
    /**
     * <code>ALL_TERRITORY_CODE_C_H = 51;</code>
     */
    ALL_TERRITORY_CODE_C_H(51),
    /**
     * <code>ALL_TERRITORY_CODE_C_I = 52;</code>
     */
    ALL_TERRITORY_CODE_C_I(52),
    /**
     * <code>ALL_TERRITORY_CODE_C_K = 53;</code>
     */
    ALL_TERRITORY_CODE_C_K(53),
    /**
     * <code>ALL_TERRITORY_CODE_2100 = 54;</code>
     */
    ALL_TERRITORY_CODE_2100(54),
    /**
     * <code>ALL_TERRITORY_CODE_C_L = 55;</code>
     */
    ALL_TERRITORY_CODE_C_L(55),
    /**
     * <code>ALL_TERRITORY_CODE_C_M = 56;</code>
     */
    ALL_TERRITORY_CODE_C_M(56),
    /**
     * <code>ALL_TERRITORY_CODE_C_N = 57;</code>
     */
    ALL_TERRITORY_CODE_C_N(57),
    /**
     * <code>ALL_TERRITORY_CODE_C_O = 58;</code>
     */
    ALL_TERRITORY_CODE_C_O(58),
    /**
     * <code>ALL_TERRITORY_CODE_C_R = 59;</code>
     */
    ALL_TERRITORY_CODE_C_R(59),
    /**
     * <code>ALL_TERRITORY_CODE_C_S = 60;</code>
     */
    ALL_TERRITORY_CODE_C_S(60),
    /**
     * <code>ALL_TERRITORY_CODE_C_U = 61;</code>
     */
    ALL_TERRITORY_CODE_C_U(61),
    /**
     * <code>ALL_TERRITORY_CODE_C_V = 62;</code>
     */
    ALL_TERRITORY_CODE_C_V(62),
    /**
     * <code>ALL_TERRITORY_CODE_C_W = 63;</code>
     */
    ALL_TERRITORY_CODE_C_W(63),
    /**
     * <code>ALL_TERRITORY_CODE_C_X = 64;</code>
     */
    ALL_TERRITORY_CODE_C_X(64),
    /**
     * <code>ALL_TERRITORY_CODE_C_Y = 65;</code>
     */
    ALL_TERRITORY_CODE_C_Y(65),
    /**
     * <code>ALL_TERRITORY_CODE_C_Z = 66;</code>
     */
    ALL_TERRITORY_CODE_C_Z(66),
    /**
     * <code>ALL_TERRITORY_CODE_702 = 67;</code>
     */
    ALL_TERRITORY_CODE_702(67),
    /**
     * <code>ALL_TERRITORY_CODE_703 = 68;</code>
     */
    ALL_TERRITORY_CODE_703(68),
    /**
     * <code>ALL_TERRITORY_CODE_704 = 69;</code>
     */
    ALL_TERRITORY_CODE_704(69),
    /**
     * <code>ALL_TERRITORY_CODE_705 = 70;</code>
     */
    ALL_TERRITORY_CODE_705(70),
    /**
     * <code>ALL_TERRITORY_CODE_826 = 71;</code>
     */
    ALL_TERRITORY_CODE_826(71),
    /**
     * <code>ALL_TERRITORY_CODE_706 = 72;</code>
     */
    ALL_TERRITORY_CODE_706(72),
    /**
     * <code>ALL_TERRITORY_CODE_D_E = 73;</code>
     */
    ALL_TERRITORY_CODE_D_E(73),
    /**
     * <code>ALL_TERRITORY_CODE_D_J = 74;</code>
     */
    ALL_TERRITORY_CODE_D_J(74),
    /**
     * <code>ALL_TERRITORY_CODE_D_K = 75;</code>
     */
    ALL_TERRITORY_CODE_D_K(75),
    /**
     * <code>ALL_TERRITORY_CODE_2111 = 76;</code>
     */
    ALL_TERRITORY_CODE_2111(76),
    /**
     * <code>ALL_TERRITORY_CODE_D_M = 77;</code>
     */
    ALL_TERRITORY_CODE_D_M(77),
    /**
     * <code>ALL_TERRITORY_CODE_2110 = 78;</code>
     */
    ALL_TERRITORY_CODE_2110(78),
    /**
     * <code>ALL_TERRITORY_CODE_D_O = 79;</code>
     */
    ALL_TERRITORY_CODE_D_O(79),
    /**
     * <code>ALL_TERRITORY_CODE_2108 = 80;</code>
     */
    ALL_TERRITORY_CODE_2108(80),
    /**
     * <code>ALL_TERRITORY_CODE_2107 = 81;</code>
     */
    ALL_TERRITORY_CODE_2107(81),
    /**
     * <code>ALL_TERRITORY_CODE_2106 = 82;</code>
     */
    ALL_TERRITORY_CODE_2106(82),
    /**
     * <code>ALL_TERRITORY_CODE_2105 = 83;</code>
     */
    ALL_TERRITORY_CODE_2105(83),
    /**
     * <code>ALL_TERRITORY_CODE_2104 = 84;</code>
     */
    ALL_TERRITORY_CODE_2104(84),
    /**
     * <code>ALL_TERRITORY_CODE_2103 = 85;</code>
     */
    ALL_TERRITORY_CODE_2103(85),
    /**
     * <code>ALL_TERRITORY_CODE_D_Z = 86;</code>
     */
    ALL_TERRITORY_CODE_D_Z(86),
    /**
     * <code>ALL_TERRITORY_CODE_710 = 87;</code>
     */
    ALL_TERRITORY_CODE_710(87),
    /**
     * <code>ALL_TERRITORY_CODE_2102 = 88;</code>
     */
    ALL_TERRITORY_CODE_2102(88),
    /**
     * <code>ALL_TERRITORY_CODE_2101 = 89;</code>
     */
    ALL_TERRITORY_CODE_2101(89),
    /**
     * <code>ALL_TERRITORY_CODE_834 = 90;</code>
     */
    ALL_TERRITORY_CODE_834(90),
    /**
     * <code>ALL_TERRITORY_CODE_716 = 91;</code>
     */
    ALL_TERRITORY_CODE_716(91),
    /**
     * <code>ALL_TERRITORY_CODE_E_C = 92;</code>
     */
    ALL_TERRITORY_CODE_E_C(92),
    /**
     * <code>ALL_TERRITORY_CODE_2109 = 93;</code>
     */
    ALL_TERRITORY_CODE_2109(93),
    /**
     * <code>ALL_TERRITORY_CODE_E_E = 94;</code>
     */
    ALL_TERRITORY_CODE_E_E(94),
    /**
     * <code>ALL_TERRITORY_CODE_B_Q_A_Q = 95;</code>
     */
    ALL_TERRITORY_CODE_B_Q_A_Q(95),
    /**
     * <code>ALL_TERRITORY_CODE_E_G = 96;</code>
     */
    ALL_TERRITORY_CODE_E_G(96),
    /**
     * <code>ALL_TERRITORY_CODE_E_H = 97;</code>
     */
    ALL_TERRITORY_CODE_E_H(97),
    /**
     * <code>ALL_TERRITORY_CODE_Y_U_C_S = 98;</code>
     */
    ALL_TERRITORY_CODE_Y_U_C_S(98),
    /**
     * <code>ALL_TERRITORY_CODE_2122 = 99;</code>
     */
    ALL_TERRITORY_CODE_2122(99),
    /**
     * <code>ALL_TERRITORY_CODE_2121 = 100;</code>
     */
    ALL_TERRITORY_CODE_2121(100),
    /**
     * <code>ALL_TERRITORY_CODE_2120 = 101;</code>
     */
    ALL_TERRITORY_CODE_2120(101),
    /**
     * <code>ALL_TERRITORY_CODE_E_R = 102;</code>
     */
    ALL_TERRITORY_CODE_E_R(102),
    /**
     * <code>ALL_TERRITORY_CODE_E_S = 103;</code>
     */
    ALL_TERRITORY_CODE_E_S(103),
    /**
     * <code>ALL_TERRITORY_CODE_E_T = 104;</code>
     */
    ALL_TERRITORY_CODE_E_T(104),
    /**
     * <code>ALL_TERRITORY_CODE_2119 = 105;</code>
     */
    ALL_TERRITORY_CODE_2119(105),
    /**
     * <code>ALL_TERRITORY_CODE_2118 = 106;</code>
     */
    ALL_TERRITORY_CODE_2118(106),
    /**
     * <code>ALL_TERRITORY_CODE_2117 = 107;</code>
     */
    ALL_TERRITORY_CODE_2117(107),
    /**
     * <code>ALL_TERRITORY_CODE_2116 = 108;</code>
     */
    ALL_TERRITORY_CODE_2116(108),
    /**
     * <code>ALL_TERRITORY_CODE_840 = 109;</code>
     */
    ALL_TERRITORY_CODE_840(109),
    /**
     * <code>ALL_TERRITORY_CODE_2115 = 110;</code>
     */
    ALL_TERRITORY_CODE_2115(110),
    /**
     * <code>ALL_TERRITORY_CODE_720 = 111;</code>
     */
    ALL_TERRITORY_CODE_720(111),
    /**
     * <code>ALL_TERRITORY_CODE_2114 = 112;</code>
     */
    ALL_TERRITORY_CODE_2114(112),
    /**
     * <code>ALL_TERRITORY_CODE_600 = 113;</code>
     */
    ALL_TERRITORY_CODE_600(113),
    /**
     * <code>ALL_TERRITORY_CODE_2113 = 114;</code>
     */
    ALL_TERRITORY_CODE_2113(114),
    /**
     * <code>ALL_TERRITORY_CODE_2112 = 115;</code>
     */
    ALL_TERRITORY_CODE_2112(115),
    /**
     * <code>ALL_TERRITORY_CODE_724 = 116;</code>
     */
    ALL_TERRITORY_CODE_724(116),
    /**
     * <code>ALL_TERRITORY_CODE_604 = 117;</code>
     */
    ALL_TERRITORY_CODE_604(117),
    /**
     * <code>ALL_TERRITORY_CODE_728 = 118;</code>
     */
    ALL_TERRITORY_CODE_728(118),
    /**
     * <code>ALL_TERRITORY_CODE_608 = 119;</code>
     */
    ALL_TERRITORY_CODE_608(119),
    /**
     * <code>ALL_TERRITORY_CODE_729 = 120;</code>
     */
    ALL_TERRITORY_CODE_729(120),
    /**
     * <code>ALL_TERRITORY_CODE_F_I = 121;</code>
     */
    ALL_TERRITORY_CODE_F_I(121),
    /**
     * <code>ALL_TERRITORY_CODE_F_J = 122;</code>
     */
    ALL_TERRITORY_CODE_F_J(122),
    /**
     * <code>ALL_TERRITORY_CODE_F_K = 123;</code>
     */
    ALL_TERRITORY_CODE_F_K(123),
    /**
     * <code>ALL_TERRITORY_CODE_F_M = 124;</code>
     */
    ALL_TERRITORY_CODE_F_M(124),
    /**
     * <code>ALL_TERRITORY_CODE_2133 = 125;</code>
     */
    ALL_TERRITORY_CODE_2133(125),
    /**
     * <code>ALL_TERRITORY_CODE_F_O = 126;</code>
     */
    ALL_TERRITORY_CODE_F_O(126),
    /**
     * <code>ALL_TERRITORY_CODE_2132 = 127;</code>
     */
    ALL_TERRITORY_CODE_2132(127),
    /**
     * <code>ALL_TERRITORY_CODE_2131 = 128;</code>
     */
    ALL_TERRITORY_CODE_2131(128),
    /**
     * <code>ALL_TERRITORY_CODE_2130 = 129;</code>
     */
    ALL_TERRITORY_CODE_2130(129),
    /**
     * <code>ALL_TERRITORY_CODE_F_R = 130;</code>
     */
    ALL_TERRITORY_CODE_F_R(130),
    /**
     * <code>ALL_TERRITORY_CODE_2129 = 131;</code>
     */
    ALL_TERRITORY_CODE_2129(131),
    /**
     * <code>ALL_TERRITORY_CODE_2128 = 132;</code>
     */
    ALL_TERRITORY_CODE_2128(132),
    /**
     * <code>ALL_TERRITORY_CODE_2127 = 133;</code>
     */
    ALL_TERRITORY_CODE_2127(133),
    /**
     * <code>ALL_TERRITORY_CODE_2126 = 134;</code>
     */
    ALL_TERRITORY_CODE_2126(134),
    /**
     * <code>ALL_TERRITORY_CODE_2125 = 135;</code>
     */
    ALL_TERRITORY_CODE_2125(135),
    /**
     * <code>ALL_TERRITORY_CODE_732 = 136;</code>
     */
    ALL_TERRITORY_CODE_732(136),
    /**
     * <code>ALL_TERRITORY_CODE_2124 = 137;</code>
     */
    ALL_TERRITORY_CODE_2124(137),
    /**
     * <code>ALL_TERRITORY_CODE_854 = 138;</code>
     */
    ALL_TERRITORY_CODE_854(138),
    /**
     * <code>ALL_TERRITORY_CODE_2123 = 139;</code>
     */
    ALL_TERRITORY_CODE_2123(139),
    /**
     * <code>ALL_TERRITORY_CODE_G_A = 140;</code>
     */
    ALL_TERRITORY_CODE_G_A(140),
    /**
     * <code>ALL_TERRITORY_CODE_736 = 141;</code>
     */
    ALL_TERRITORY_CODE_736(141),
    /**
     * <code>ALL_TERRITORY_CODE_G_B = 142;</code>
     */
    ALL_TERRITORY_CODE_G_B(142),
    /**
     * <code>ALL_TERRITORY_CODE_616 = 143;</code>
     */
    ALL_TERRITORY_CODE_616(143),
    /**
     * <code>ALL_TERRITORY_CODE_858 = 144;</code>
     */
    ALL_TERRITORY_CODE_858(144),
    /**
     * <code>ALL_TERRITORY_CODE_G_D = 145;</code>
     */
    ALL_TERRITORY_CODE_G_D(145),
    /**
     * <code>ALL_TERRITORY_CODE_G_E = 146;</code>
     */
    ALL_TERRITORY_CODE_G_E(146),
    /**
     * <code>ALL_TERRITORY_CODE_G_F = 147;</code>
     */
    ALL_TERRITORY_CODE_G_F(147),
    /**
     * <code>ALL_TERRITORY_CODE_G_G = 148;</code>
     */
    ALL_TERRITORY_CODE_G_G(148),
    /**
     * <code>ALL_TERRITORY_CODE_G_H = 149;</code>
     */
    ALL_TERRITORY_CODE_G_H(149),
    /**
     * <code>ALL_TERRITORY_CODE_G_I = 150;</code>
     */
    ALL_TERRITORY_CODE_G_I(150),
    /**
     * <code>ALL_TERRITORY_CODE_G_L = 151;</code>
     */
    ALL_TERRITORY_CODE_G_L(151),
    /**
     * <code>ALL_TERRITORY_CODE_G_M = 152;</code>
     */
    ALL_TERRITORY_CODE_G_M(152),
    /**
     * <code>ALL_TERRITORY_CODE_G_N = 153;</code>
     */
    ALL_TERRITORY_CODE_G_N(153),
    /**
     * <code>ALL_TERRITORY_CODE_G_P = 154;</code>
     */
    ALL_TERRITORY_CODE_G_P(154),
    /**
     * <code>ALL_TERRITORY_CODE_G_Q = 155;</code>
     */
    ALL_TERRITORY_CODE_G_Q(155),
    /**
     * <code>ALL_TERRITORY_CODE_G_R = 156;</code>
     */
    ALL_TERRITORY_CODE_G_R(156),
    /**
     * <code>ALL_TERRITORY_CODE_E_S__MINUS___M_L = 157;</code>
     */
    ALL_TERRITORY_CODE_E_S__MINUS___M_L(157),
    /**
     * <code>ALL_TERRITORY_CODE_G_S = 158;</code>
     */
    ALL_TERRITORY_CODE_G_S(158),
    /**
     * <code>ALL_TERRITORY_CODE_G_T = 159;</code>
     */
    ALL_TERRITORY_CODE_G_T(159),
    /**
     * <code>ALL_TERRITORY_CODE_G_U = 160;</code>
     */
    ALL_TERRITORY_CODE_G_U(160),
    /**
     * <code>ALL_TERRITORY_CODE_G_W = 161;</code>
     */
    ALL_TERRITORY_CODE_G_W(161),
    /**
     * <code>ALL_TERRITORY_CODE_G_Y = 162;</code>
     */
    ALL_TERRITORY_CODE_G_Y(162),
    /**
     * <code>ALL_TERRITORY_CODE_860 = 163;</code>
     */
    ALL_TERRITORY_CODE_860(163),
    /**
     * <code>ALL_TERRITORY_CODE_740 = 164;</code>
     */
    ALL_TERRITORY_CODE_740(164),
    /**
     * <code>ALL_TERRITORY_CODE_620 = 165;</code>
     */
    ALL_TERRITORY_CODE_620(165),
    /**
     * <code>ALL_TERRITORY_CODE_862 = 166;</code>
     */
    ALL_TERRITORY_CODE_862(166),
    /**
     * <code>ALL_TERRITORY_CODE_2136 = 167;</code>
     */
    ALL_TERRITORY_CODE_2136(167),
    /**
     * <code>ALL_TERRITORY_CODE_2134 = 168;</code>
     */
    ALL_TERRITORY_CODE_2134(168),
    /**
     * <code>ALL_TERRITORY_CODE_624 = 169;</code>
     */
    ALL_TERRITORY_CODE_624(169),
    /**
     * <code>ALL_TERRITORY_CODE_504 = 170;</code>
     */
    ALL_TERRITORY_CODE_504(170),
    /**
     * <code>ALL_TERRITORY_CODE_626 = 171;</code>
     */
    ALL_TERRITORY_CODE_626(171),
    /**
     * <code>ALL_TERRITORY_CODE_748 = 172;</code>
     */
    ALL_TERRITORY_CODE_748(172),
    /**
     * <code>ALL_TERRITORY_CODE_508 = 173;</code>
     */
    ALL_TERRITORY_CODE_508(173),
    /**
     * <code>ALL_TERRITORY_CODE_H_K = 174;</code>
     */
    ALL_TERRITORY_CODE_H_K(174),
    /**
     * <code>ALL_TERRITORY_CODE_H_M = 175;</code>
     */
    ALL_TERRITORY_CODE_H_M(175),
    /**
     * <code>ALL_TERRITORY_CODE_H_N = 176;</code>
     */
    ALL_TERRITORY_CODE_H_N(176),
    /**
     * <code>ALL_TERRITORY_CODE_H_R = 177;</code>
     */
    ALL_TERRITORY_CODE_H_R(177),
    /**
     * <code>ALL_TERRITORY_CODE_H_T = 178;</code>
     */
    ALL_TERRITORY_CODE_H_T(178),
    /**
     * <code>ALL_TERRITORY_CODE_H_U = 179;</code>
     */
    ALL_TERRITORY_CODE_H_U(179),
    /**
     * <code>ALL_TERRITORY_CODE_M_I_U_M = 180;</code>
     */
    ALL_TERRITORY_CODE_M_I_U_M(180),
    /**
     * <code>ALL_TERRITORY_CODE_630 = 181;</code>
     */
    ALL_TERRITORY_CODE_630(181),
    /**
     * <code>ALL_TERRITORY_CODE_752 = 182;</code>
     */
    ALL_TERRITORY_CODE_752(182),
    /**
     * <code>ALL_TERRITORY_CODE_512 = 183;</code>
     */
    ALL_TERRITORY_CODE_512(183),
    /**
     * <code>ALL_TERRITORY_CODE_634 = 184;</code>
     */
    ALL_TERRITORY_CODE_634(184),
    /**
     * <code>ALL_TERRITORY_CODE_N_Q_A_Q = 185;</code>
     */
    ALL_TERRITORY_CODE_N_Q_A_Q(185),
    /**
     * <code>ALL_TERRITORY_CODE_756 = 186;</code>
     */
    ALL_TERRITORY_CODE_756(186),
    /**
     * <code>ALL_TERRITORY_CODE_516 = 187;</code>
     */
    ALL_TERRITORY_CODE_516(187),
    /**
     * <code>ALL_TERRITORY_CODE_I_D = 188;</code>
     */
    ALL_TERRITORY_CODE_I_D(188),
    /**
     * <code>ALL_TERRITORY_CODE_I_E = 189;</code>
     */
    ALL_TERRITORY_CODE_I_E(189),
    /**
     * <code>ALL_TERRITORY_CODE_D_D_D_E = 190;</code>
     */
    ALL_TERRITORY_CODE_D_D_D_E(190),
    /**
     * <code>ALL_TERRITORY_CODE_I_L = 191;</code>
     */
    ALL_TERRITORY_CODE_I_L(191),
    /**
     * <code>ALL_TERRITORY_CODE_I_M = 192;</code>
     */
    ALL_TERRITORY_CODE_I_M(192),
    /**
     * <code>ALL_TERRITORY_CODE_I_N = 193;</code>
     */
    ALL_TERRITORY_CODE_I_N(193),
    /**
     * <code>ALL_TERRITORY_CODE_I_O = 194;</code>
     */
    ALL_TERRITORY_CODE_I_O(194),
    /**
     * <code>ALL_TERRITORY_CODE_I_Q = 195;</code>
     */
    ALL_TERRITORY_CODE_I_Q(195),
    /**
     * <code>ALL_TERRITORY_CODE_I_R = 196;</code>
     */
    ALL_TERRITORY_CODE_I_R(196),
    /**
     * <code>ALL_TERRITORY_CODE_I_S = 197;</code>
     */
    ALL_TERRITORY_CODE_I_S(197),
    /**
     * <code>ALL_TERRITORY_CODE_I_T = 198;</code>
     */
    ALL_TERRITORY_CODE_I_T(198),
    /**
     * <code>ALL_TERRITORY_CODE_B_U_M_M = 199;</code>
     */
    ALL_TERRITORY_CODE_B_U_M_M(199),
    /**
     * <code>ALL_TERRITORY_CODE_760 = 200;</code>
     */
    ALL_TERRITORY_CODE_760(200),
    /**
     * <code>ALL_TERRITORY_CODE_882 = 201;</code>
     */
    ALL_TERRITORY_CODE_882(201),
    /**
     * <code>ALL_TERRITORY_CODE_520 = 202;</code>
     */
    ALL_TERRITORY_CODE_520(202),
    /**
     * <code>ALL_TERRITORY_CODE_762 = 203;</code>
     */
    ALL_TERRITORY_CODE_762(203),
    /**
     * <code>ALL_TERRITORY_CODE_400 = 204;</code>
     */
    ALL_TERRITORY_CODE_400(204),
    /**
     * <code>ALL_TERRITORY_CODE_642 = 205;</code>
     */
    ALL_TERRITORY_CODE_642(205),
    /**
     * <code>ALL_TERRITORY_CODE_643 = 206;</code>
     */
    ALL_TERRITORY_CODE_643(206),
    /**
     * <code>ALL_TERRITORY_CODE_764 = 207;</code>
     */
    ALL_TERRITORY_CODE_764(207),
    /**
     * <code>ALL_TERRITORY_CODE_886 = 208;</code>
     */
    ALL_TERRITORY_CODE_886(208),
    /**
     * <code>ALL_TERRITORY_CODE_524 = 209;</code>
     */
    ALL_TERRITORY_CODE_524(209),
    /**
     * <code>ALL_TERRITORY_CODE_887 = 210;</code>
     */
    ALL_TERRITORY_CODE_887(210),
    /**
     * <code>ALL_TERRITORY_CODE_404 = 211;</code>
     */
    ALL_TERRITORY_CODE_404(211),
    /**
     * <code>ALL_TERRITORY_CODE_646 = 212;</code>
     */
    ALL_TERRITORY_CODE_646(212),
    /**
     * <code>ALL_TERRITORY_CODE_768 = 213;</code>
     */
    ALL_TERRITORY_CODE_768(213),
    /**
     * <code>ALL_TERRITORY_CODE_J_E = 214;</code>
     */
    ALL_TERRITORY_CODE_J_E(214),
    /**
     * <code>ALL_TERRITORY_CODE_528 = 215;</code>
     */
    ALL_TERRITORY_CODE_528(215),
    /**
     * <code>ALL_TERRITORY_CODE_408 = 216;</code>
     */
    ALL_TERRITORY_CODE_408(216),
    /**
     * <code>ALL_TERRITORY_CODE_F_X_F_R = 217;</code>
     */
    ALL_TERRITORY_CODE_F_X_F_R(217),
    /**
     * <code>ALL_TERRITORY_CODE_J_T_U_M = 218;</code>
     */
    ALL_TERRITORY_CODE_J_T_U_M(218),
    /**
     * <code>ALL_TERRITORY_CODE_J_M = 219;</code>
     */
    ALL_TERRITORY_CODE_J_M(219),
    /**
     * <code>ALL_TERRITORY_CODE_J_O = 220;</code>
     */
    ALL_TERRITORY_CODE_J_O(220),
    /**
     * <code>ALL_TERRITORY_CODE_J_P = 221;</code>
     */
    ALL_TERRITORY_CODE_J_P(221),
    /**
     * <code>ALL_TERRITORY_CODE_890 = 222;</code>
     */
    ALL_TERRITORY_CODE_890(222),
    /**
     * <code>ALL_TERRITORY_CODE_891 = 223;</code>
     */
    ALL_TERRITORY_CODE_891(223),
    /**
     * <code>ALL_TERRITORY_CODE_410 = 224;</code>
     */
    ALL_TERRITORY_CODE_410(224),
    /**
     * <code>ALL_TERRITORY_CODE_894 = 225;</code>
     */
    ALL_TERRITORY_CODE_894(225),
    /**
     * <code>ALL_TERRITORY_CODE_776 = 226;</code>
     */
    ALL_TERRITORY_CODE_776(226),
    /**
     * <code>ALL_TERRITORY_CODE_414 = 227;</code>
     */
    ALL_TERRITORY_CODE_414(227),
    /**
     * <code>ALL_TERRITORY_CODE_K_E = 228;</code>
     */
    ALL_TERRITORY_CODE_K_E(228),
    /**
     * <code>ALL_TERRITORY_CODE_417 = 229;</code>
     */
    ALL_TERRITORY_CODE_417(229),
    /**
     * <code>ALL_TERRITORY_CODE_659 = 230;</code>
     */
    ALL_TERRITORY_CODE_659(230),
    /**
     * <code>ALL_TERRITORY_CODE_418 = 231;</code>
     */
    ALL_TERRITORY_CODE_418(231),
    /**
     * <code>ALL_TERRITORY_CODE_S_K_I_N = 232;</code>
     */
    ALL_TERRITORY_CODE_S_K_I_N(232),
    /**
     * <code>ALL_TERRITORY_CODE_K_G = 233;</code>
     */
    ALL_TERRITORY_CODE_K_G(233),
    /**
     * <code>ALL_TERRITORY_CODE_K_H = 234;</code>
     */
    ALL_TERRITORY_CODE_K_H(234),
    /**
     * <code>ALL_TERRITORY_CODE_K_I = 235;</code>
     */
    ALL_TERRITORY_CODE_K_I(235),
    /**
     * <code>ALL_TERRITORY_CODE_P_Z_P_A = 236;</code>
     */
    ALL_TERRITORY_CODE_P_Z_P_A(236),
    /**
     * <code>ALL_TERRITORY_CODE_K_M = 237;</code>
     */
    ALL_TERRITORY_CODE_K_M(237),
    /**
     * <code>ALL_TERRITORY_CODE_N_T_H_H = 238;</code>
     */
    ALL_TERRITORY_CODE_N_T_H_H(238),
    /**
     * <code>ALL_TERRITORY_CODE_K_N = 239;</code>
     */
    ALL_TERRITORY_CODE_K_N(239),
    /**
     * <code>ALL_TERRITORY_CODE_K_P = 240;</code>
     */
    ALL_TERRITORY_CODE_K_P(240),
    /**
     * <code>ALL_TERRITORY_CODE_K_R = 241;</code>
     */
    ALL_TERRITORY_CODE_K_R(241),
    /**
     * <code>ALL_TERRITORY_CODE_K_W = 242;</code>
     */
    ALL_TERRITORY_CODE_K_W(242),
    /**
     * <code>ALL_TERRITORY_CODE_K_Y = 243;</code>
     */
    ALL_TERRITORY_CODE_K_Y(243),
    /**
     * <code>ALL_TERRITORY_CODE_K_Z = 244;</code>
     */
    ALL_TERRITORY_CODE_K_Z(244),
    /**
     * <code>ALL_TERRITORY_CODE_780 = 245;</code>
     */
    ALL_TERRITORY_CODE_780(245),
    /**
     * <code>ALL_TERRITORY_CODE_C_S_H_H = 246;</code>
     */
    ALL_TERRITORY_CODE_C_S_H_H(246),
    /**
     * <code>ALL_TERRITORY_CODE_540 = 247;</code>
     */
    ALL_TERRITORY_CODE_540(247),
    /**
     * <code>ALL_TERRITORY_CODE_662 = 248;</code>
     */
    ALL_TERRITORY_CODE_662(248),
    /**
     * <code>ALL_TERRITORY_CODE_300 = 249;</code>
     */
    ALL_TERRITORY_CODE_300(249),
    /**
     * <code>ALL_TERRITORY_CODE_784 = 250;</code>
     */
    ALL_TERRITORY_CODE_784(250),
    /**
     * <code>ALL_TERRITORY_CODE_422 = 251;</code>
     */
    ALL_TERRITORY_CODE_422(251),
    /**
     * <code>ALL_TERRITORY_CODE_L_A = 252;</code>
     */
    ALL_TERRITORY_CODE_L_A(252),
    /**
     * <code>ALL_TERRITORY_CODE_L_B = 253;</code>
     */
    ALL_TERRITORY_CODE_L_B(253),
    /**
     * <code>ALL_TERRITORY_CODE_L_C = 254;</code>
     */
    ALL_TERRITORY_CODE_L_C(254),
    /**
     * <code>ALL_TERRITORY_CODE_788 = 255;</code>
     */
    ALL_TERRITORY_CODE_788(255),
    /**
     * <code>ALL_TERRITORY_CODE_426 = 256;</code>
     */
    ALL_TERRITORY_CODE_426(256),
    /**
     * <code>ALL_TERRITORY_CODE_548 = 257;</code>
     */
    ALL_TERRITORY_CODE_548(257),
    /**
     * <code>ALL_TERRITORY_CODE_428 = 258;</code>
     */
    ALL_TERRITORY_CODE_428(258),
    /**
     * <code>ALL_TERRITORY_CODE_308 = 259;</code>
     */
    ALL_TERRITORY_CODE_308(259),
    /**
     * <code>ALL_TERRITORY_CODE_L_I = 260;</code>
     */
    ALL_TERRITORY_CODE_L_I(260),
    /**
     * <code>ALL_TERRITORY_CODE_L_K = 261;</code>
     */
    ALL_TERRITORY_CODE_L_K(261),
    /**
     * <code>ALL_TERRITORY_CODE_L_R = 262;</code>
     */
    ALL_TERRITORY_CODE_L_R(262),
    /**
     * <code>ALL_TERRITORY_CODE_L_S = 263;</code>
     */
    ALL_TERRITORY_CODE_L_S(263),
    /**
     * <code>ALL_TERRITORY_CODE_L_T = 264;</code>
     */
    ALL_TERRITORY_CODE_L_T(264),
    /**
     * <code>ALL_TERRITORY_CODE_L_U = 265;</code>
     */
    ALL_TERRITORY_CODE_L_U(265),
    /**
     * <code>ALL_TERRITORY_CODE_L_V = 266;</code>
     */
    ALL_TERRITORY_CODE_L_V(266),
    /**
     * <code>ALL_TERRITORY_CODE_L_Y = 267;</code>
     */
    ALL_TERRITORY_CODE_L_Y(267),
    /**
     * <code>ALL_TERRITORY_CODE_670 = 268;</code>
     */
    ALL_TERRITORY_CODE_670(268),
    /**
     * <code>ALL_TERRITORY_CODE_792 = 269;</code>
     */
    ALL_TERRITORY_CODE_792(269),
    /**
     * <code>ALL_TERRITORY_CODE_C_T_K_I = 270;</code>
     */
    ALL_TERRITORY_CODE_C_T_K_I(270),
    /**
     * <code>ALL_TERRITORY_CODE_430 = 271;</code>
     */
    ALL_TERRITORY_CODE_430(271),
    /**
     * <code>ALL_TERRITORY_CODE_674 = 272;</code>
     */
    ALL_TERRITORY_CODE_674(272),
    /**
     * <code>ALL_TERRITORY_CODE_795 = 273;</code>
     */
    ALL_TERRITORY_CODE_795(273),
    /**
     * <code>ALL_TERRITORY_CODE_M_A = 274;</code>
     */
    ALL_TERRITORY_CODE_M_A(274),
    /**
     * <code>ALL_TERRITORY_CODE_554 = 275;</code>
     */
    ALL_TERRITORY_CODE_554(275),
    /**
     * <code>ALL_TERRITORY_CODE_434 = 276;</code>
     */
    ALL_TERRITORY_CODE_434(276),
    /**
     * <code>ALL_TERRITORY_CODE_M_C = 277;</code>
     */
    ALL_TERRITORY_CODE_M_C(277),
    /**
     * <code>ALL_TERRITORY_CODE_798 = 278;</code>
     */
    ALL_TERRITORY_CODE_798(278),
    /**
     * <code>ALL_TERRITORY_CODE_M_D = 279;</code>
     */
    ALL_TERRITORY_CODE_M_D(279),
    /**
     * <code>ALL_TERRITORY_CODE_678 = 280;</code>
     */
    ALL_TERRITORY_CODE_678(280),
    /**
     * <code>ALL_TERRITORY_CODE_M_E = 281;</code>
     */
    ALL_TERRITORY_CODE_M_E(281),
    /**
     * <code>ALL_TERRITORY_CODE_558 = 282;</code>
     */
    ALL_TERRITORY_CODE_558(282),
    /**
     * <code>ALL_TERRITORY_CODE_M_F = 283;</code>
     */
    ALL_TERRITORY_CODE_M_F(283),
    /**
     * <code>ALL_TERRITORY_CODE_438 = 284;</code>
     */
    ALL_TERRITORY_CODE_438(284),
    /**
     * <code>ALL_TERRITORY_CODE_M_G = 285;</code>
     */
    ALL_TERRITORY_CODE_M_G(285),
    /**
     * <code>ALL_TERRITORY_CODE_M_H = 286;</code>
     */
    ALL_TERRITORY_CODE_M_H(286),
    /**
     * <code>ALL_TERRITORY_CODE_M_K = 287;</code>
     */
    ALL_TERRITORY_CODE_M_K(287),
    /**
     * <code>ALL_TERRITORY_CODE_M_L = 288;</code>
     */
    ALL_TERRITORY_CODE_M_L(288),
    /**
     * <code>ALL_TERRITORY_CODE_M_M = 289;</code>
     */
    ALL_TERRITORY_CODE_M_M(289),
    /**
     * <code>ALL_TERRITORY_CODE_M_N = 290;</code>
     */
    ALL_TERRITORY_CODE_M_N(290),
    /**
     * <code>ALL_TERRITORY_CODE_M_O = 291;</code>
     */
    ALL_TERRITORY_CODE_M_O(291),
    /**
     * <code>ALL_TERRITORY_CODE_M_P = 292;</code>
     */
    ALL_TERRITORY_CODE_M_P(292),
    /**
     * <code>ALL_TERRITORY_CODE_M_Q = 293;</code>
     */
    ALL_TERRITORY_CODE_M_Q(293),
    /**
     * <code>ALL_TERRITORY_CODE_M_R = 294;</code>
     */
    ALL_TERRITORY_CODE_M_R(294),
    /**
     * <code>ALL_TERRITORY_CODE_M_S = 295;</code>
     */
    ALL_TERRITORY_CODE_M_S(295),
    /**
     * <code>ALL_TERRITORY_CODE_M_T = 296;</code>
     */
    ALL_TERRITORY_CODE_M_T(296),
    /**
     * <code>ALL_TERRITORY_CODE_M_U = 297;</code>
     */
    ALL_TERRITORY_CODE_M_U(297),
    /**
     * <code>ALL_TERRITORY_CODE_M_V = 298;</code>
     */
    ALL_TERRITORY_CODE_M_V(298),
    /**
     * <code>ALL_TERRITORY_CODE_M_W = 299;</code>
     */
    ALL_TERRITORY_CODE_M_W(299),
    /**
     * <code>ALL_TERRITORY_CODE_M_X = 300;</code>
     */
    ALL_TERRITORY_CODE_M_X(300),
    /**
     * <code>ALL_TERRITORY_CODE_M_Y = 301;</code>
     */
    ALL_TERRITORY_CODE_M_Y(301),
    /**
     * <code>ALL_TERRITORY_CODE_M_Z = 302;</code>
     */
    ALL_TERRITORY_CODE_M_Z(302),
    /**
     * <code>ALL_TERRITORY_CODE_440 = 303;</code>
     */
    ALL_TERRITORY_CODE_440(303),
    /**
     * <code>ALL_TERRITORY_CODE_682 = 304;</code>
     */
    ALL_TERRITORY_CODE_682(304),
    /**
     * <code>ALL_TERRITORY_CODE_320 = 305;</code>
     */
    ALL_TERRITORY_CODE_320(305),
    /**
     * <code>ALL_TERRITORY_CODE_562 = 306;</code>
     */
    ALL_TERRITORY_CODE_562(306),
    /**
     * <code>ALL_TERRITORY_CODE_200 = 307;</code>
     */
    ALL_TERRITORY_CODE_200(307),
    /**
     * <code>ALL_TERRITORY_CODE_442 = 308;</code>
     */
    ALL_TERRITORY_CODE_442(308),
    /**
     * <code>ALL_TERRITORY_CODE_N_A = 309;</code>
     */
    ALL_TERRITORY_CODE_N_A(309),
    /**
     * <code>ALL_TERRITORY_CODE_Z_R_C_D = 310;</code>
     */
    ALL_TERRITORY_CODE_Z_R_C_D(310),
    /**
     * <code>ALL_TERRITORY_CODE_686 = 311;</code>
     */
    ALL_TERRITORY_CODE_686(311),
    /**
     * <code>ALL_TERRITORY_CODE_N_C = 312;</code>
     */
    ALL_TERRITORY_CODE_N_C(312),
    /**
     * <code>ALL_TERRITORY_CODE_203 = 313;</code>
     */
    ALL_TERRITORY_CODE_203(313),
    /**
     * <code>ALL_TERRITORY_CODE_324 = 314;</code>
     */
    ALL_TERRITORY_CODE_324(314),
    /**
     * <code>ALL_TERRITORY_CODE_566 = 315;</code>
     */
    ALL_TERRITORY_CODE_566(315),
    /**
     * <code>ALL_TERRITORY_CODE_204 = 316;</code>
     */
    ALL_TERRITORY_CODE_204(316),
    /**
     * <code>ALL_TERRITORY_CODE_688 = 317;</code>
     */
    ALL_TERRITORY_CODE_688(317),
    /**
     * <code>ALL_TERRITORY_CODE_N_E = 318;</code>
     */
    ALL_TERRITORY_CODE_N_E(318),
    /**
     * <code>ALL_TERRITORY_CODE_N_F = 319;</code>
     */
    ALL_TERRITORY_CODE_N_F(319),
    /**
     * <code>ALL_TERRITORY_CODE_N_G = 320;</code>
     */
    ALL_TERRITORY_CODE_N_G(320),
    /**
     * <code>ALL_TERRITORY_CODE_328 = 321;</code>
     */
    ALL_TERRITORY_CODE_328(321),
    /**
     * <code>ALL_TERRITORY_CODE_208 = 322;</code>
     */
    ALL_TERRITORY_CODE_208(322),
    /**
     * <code>ALL_TERRITORY_CODE_N_I = 323;</code>
     */
    ALL_TERRITORY_CODE_N_I(323),
    /**
     * <code>ALL_TERRITORY_CODE_N_L = 324;</code>
     */
    ALL_TERRITORY_CODE_N_L(324),
    /**
     * <code>ALL_TERRITORY_CODE_N_O = 325;</code>
     */
    ALL_TERRITORY_CODE_N_O(325),
    /**
     * <code>ALL_TERRITORY_CODE_N_P = 326;</code>
     */
    ALL_TERRITORY_CODE_N_P(326),
    /**
     * <code>ALL_TERRITORY_CODE_N_R = 327;</code>
     */
    ALL_TERRITORY_CODE_N_R(327),
    /**
     * <code>ALL_TERRITORY_CODE_N_U = 328;</code>
     */
    ALL_TERRITORY_CODE_N_U(328),
    /**
     * <code>ALL_TERRITORY_CODE_N_Z = 329;</code>
     */
    ALL_TERRITORY_CODE_N_Z(329),
    /**
     * <code>ALL_TERRITORY_CODE_690 = 330;</code>
     */
    ALL_TERRITORY_CODE_690(330),
    /**
     * <code>ALL_TERRITORY_CODE_V_D_V_N = 331;</code>
     */
    ALL_TERRITORY_CODE_V_D_V_N(331),
    /**
     * <code>ALL_TERRITORY_CODE_450 = 332;</code>
     */
    ALL_TERRITORY_CODE_450(332),
    /**
     * <code>ALL_TERRITORY_CODE_694 = 333;</code>
     */
    ALL_TERRITORY_CODE_694(333),
    /**
     * <code>ALL_TERRITORY_CODE_332 = 334;</code>
     */
    ALL_TERRITORY_CODE_332(334),
    /**
     * <code>ALL_TERRITORY_CODE_212 = 335;</code>
     */
    ALL_TERRITORY_CODE_212(335),
    /**
     * <code>ALL_TERRITORY_CODE_454 = 336;</code>
     */
    ALL_TERRITORY_CODE_454(336),
    /**
     * <code>ALL_TERRITORY_CODE_T_P_T_L = 337;</code>
     */
    ALL_TERRITORY_CODE_T_P_T_L(337),
    /**
     * <code>ALL_TERRITORY_CODE_214 = 338;</code>
     */
    ALL_TERRITORY_CODE_214(338),
    /**
     * <code>ALL_TERRITORY_CODE_336 = 339;</code>
     */
    ALL_TERRITORY_CODE_336(339),
    /**
     * <code>ALL_TERRITORY_CODE_578 = 340;</code>
     */
    ALL_TERRITORY_CODE_578(340),
    /**
     * <code>ALL_TERRITORY_CODE_458 = 341;</code>
     */
    ALL_TERRITORY_CODE_458(341),
    /**
     * <code>ALL_TERRITORY_CODE_218 = 342;</code>
     */
    ALL_TERRITORY_CODE_218(342),
    /**
     * <code>ALL_TERRITORY_CODE_N_H_V_U = 343;</code>
     */
    ALL_TERRITORY_CODE_N_H_V_U(343),
    /**
     * <code>ALL_TERRITORY_CODE_O_M = 344;</code>
     */
    ALL_TERRITORY_CODE_O_M(344),
    /**
     * <code>ALL_TERRITORY_CODE_340 = 345;</code>
     */
    ALL_TERRITORY_CODE_340(345),
    /**
     * <code>ALL_TERRITORY_CODE_462 = 346;</code>
     */
    ALL_TERRITORY_CODE_462(346),
    /**
     * <code>ALL_TERRITORY_CODE_583 = 347;</code>
     */
    ALL_TERRITORY_CODE_583(347),
    /**
     * <code>ALL_TERRITORY_CODE_H_V_B_F = 348;</code>
     */
    ALL_TERRITORY_CODE_H_V_B_F(348),
    /**
     * <code>ALL_TERRITORY_CODE_P_A = 349;</code>
     */
    ALL_TERRITORY_CODE_P_A(349),
    /**
     * <code>ALL_TERRITORY_CODE_100 = 350;</code>
     */
    ALL_TERRITORY_CODE_100(350),
    /**
     * <code>ALL_TERRITORY_CODE_584 = 351;</code>
     */
    ALL_TERRITORY_CODE_584(351),
    /**
     * <code>ALL_TERRITORY_CODE_222 = 352;</code>
     */
    ALL_TERRITORY_CODE_222(352),
    /**
     * <code>ALL_TERRITORY_CODE_585 = 353;</code>
     */
    ALL_TERRITORY_CODE_585(353),
    /**
     * <code>ALL_TERRITORY_CODE_344 = 354;</code>
     */
    ALL_TERRITORY_CODE_344(354),
    /**
     * <code>ALL_TERRITORY_CODE_586 = 355;</code>
     */
    ALL_TERRITORY_CODE_586(355),
    /**
     * <code>ALL_TERRITORY_CODE_A_N_H_H = 356;</code>
     */
    ALL_TERRITORY_CODE_A_N_H_H(356),
    /**
     * <code>ALL_TERRITORY_CODE_466 = 357;</code>
     */
    ALL_TERRITORY_CODE_466(357),
    /**
     * <code>ALL_TERRITORY_CODE_P_E = 358;</code>
     */
    ALL_TERRITORY_CODE_P_E(358),
    /**
     * <code>ALL_TERRITORY_CODE_104 = 359;</code>
     */
    ALL_TERRITORY_CODE_104(359),
    /**
     * <code>ALL_TERRITORY_CODE_P_F = 360;</code>
     */
    ALL_TERRITORY_CODE_P_F(360),
    /**
     * <code>ALL_TERRITORY_CODE_226 = 361;</code>
     */
    ALL_TERRITORY_CODE_226(361),
    /**
     * <code>ALL_TERRITORY_CODE_P_G = 362;</code>
     */
    ALL_TERRITORY_CODE_P_G(362),
    /**
     * <code>ALL_TERRITORY_CODE_348 = 363;</code>
     */
    ALL_TERRITORY_CODE_348(363),
    /**
     * <code>ALL_TERRITORY_CODE_P_H = 364;</code>
     */
    ALL_TERRITORY_CODE_P_H(364),
    /**
     * <code>ALL_TERRITORY_CODE_108 = 365;</code>
     */
    ALL_TERRITORY_CODE_108(365),
    /**
     * <code>ALL_TERRITORY_CODE_P_K = 366;</code>
     */
    ALL_TERRITORY_CODE_P_K(366),
    /**
     * <code>ALL_TERRITORY_CODE_P_L = 367;</code>
     */
    ALL_TERRITORY_CODE_P_L(367),
    /**
     * <code>ALL_TERRITORY_CODE_P_M = 368;</code>
     */
    ALL_TERRITORY_CODE_P_M(368),
    /**
     * <code>ALL_TERRITORY_CODE_P_N = 369;</code>
     */
    ALL_TERRITORY_CODE_P_N(369),
    /**
     * <code>ALL_TERRITORY_CODE_P_R = 370;</code>
     */
    ALL_TERRITORY_CODE_P_R(370),
    /**
     * <code>ALL_TERRITORY_CODE_P_S = 371;</code>
     */
    ALL_TERRITORY_CODE_P_S(371),
    /**
     * <code>ALL_TERRITORY_CODE_P_T = 372;</code>
     */
    ALL_TERRITORY_CODE_P_T(372),
    /**
     * <code>ALL_TERRITORY_CODE_P_W = 373;</code>
     */
    ALL_TERRITORY_CODE_P_W(373),
    /**
     * <code>ALL_TERRITORY_CODE_P_Y = 374;</code>
     */
    ALL_TERRITORY_CODE_P_Y(374),
    /**
     * <code>ALL_TERRITORY_CODE_470 = 375;</code>
     */
    ALL_TERRITORY_CODE_470(375),
    /**
     * <code>ALL_TERRITORY_CODE_591 = 376;</code>
     */
    ALL_TERRITORY_CODE_591(376),
    /**
     * <code>ALL_TERRITORY_CODE_230 = 377;</code>
     */
    ALL_TERRITORY_CODE_230(377),
    /**
     * <code>ALL_TERRITORY_CODE_Q_A = 378;</code>
     */
    ALL_TERRITORY_CODE_Q_A(378),
    /**
     * <code>ALL_TERRITORY_CODE_231 = 379;</code>
     */
    ALL_TERRITORY_CODE_231(379),
    /**
     * <code>ALL_TERRITORY_CODE_352 = 380;</code>
     */
    ALL_TERRITORY_CODE_352(380),
    /**
     * <code>ALL_TERRITORY_CODE_232 = 381;</code>
     */
    ALL_TERRITORY_CODE_232(381),
    /**
     * <code>ALL_TERRITORY_CODE_112 = 382;</code>
     */
    ALL_TERRITORY_CODE_112(382),
    /**
     * <code>ALL_TERRITORY_CODE_233 = 383;</code>
     */
    ALL_TERRITORY_CODE_233(383),
    /**
     * <code>ALL_TERRITORY_CODE_E_S__MINUS___C_E = 384;</code>
     */
    ALL_TERRITORY_CODE_E_S__MINUS___C_E(384),
    /**
     * <code>ALL_TERRITORY_CODE_356 = 385;</code>
     */
    ALL_TERRITORY_CODE_356(385),
    /**
     * <code>ALL_TERRITORY_CODE_598 = 386;</code>
     */
    ALL_TERRITORY_CODE_598(386),
    /**
     * <code>ALL_TERRITORY_CODE_478 = 387;</code>
     */
    ALL_TERRITORY_CODE_478(387),
    /**
     * <code>ALL_TERRITORY_CODE_116 = 388;</code>
     */
    ALL_TERRITORY_CODE_116(388),
    /**
     * <code>ALL_TERRITORY_CODE_P_C_H_H = 389;</code>
     */
    ALL_TERRITORY_CODE_P_C_H_H(389),
    /**
     * <code>ALL_TERRITORY_CODE_E_S__MINUS___C_N = 390;</code>
     */
    ALL_TERRITORY_CODE_E_S__MINUS___C_N(390),
    /**
     * <code>ALL_TERRITORY_CODE_12 = 391;</code>
     */
    ALL_TERRITORY_CODE_12(391),
    /**
     * <code>ALL_TERRITORY_CODE_480 = 392;</code>
     */
    ALL_TERRITORY_CODE_480(392),
    /**
     * <code>ALL_TERRITORY_CODE_360 = 393;</code>
     */
    ALL_TERRITORY_CODE_360(393),
    /**
     * <code>ALL_TERRITORY_CODE_120 = 394;</code>
     */
    ALL_TERRITORY_CODE_120(394),
    /**
     * <code>ALL_TERRITORY_CODE_242 = 395;</code>
     */
    ALL_TERRITORY_CODE_242(395),
    /**
     * <code>ALL_TERRITORY_CODE_484 = 396;</code>
     */
    ALL_TERRITORY_CODE_484(396),
    /**
     * <code>ALL_TERRITORY_CODE_364 = 397;</code>
     */
    ALL_TERRITORY_CODE_364(397),
    /**
     * <code>ALL_TERRITORY_CODE_R_E = 398;</code>
     */
    ALL_TERRITORY_CODE_R_E(398),
    /**
     * <code>ALL_TERRITORY_CODE_124 = 399;</code>
     */
    ALL_TERRITORY_CODE_124(399),
    /**
     * <code>ALL_TERRITORY_CODE_246 = 400;</code>
     */
    ALL_TERRITORY_CODE_246(400),
    /**
     * <code>ALL_TERRITORY_CODE_368 = 401;</code>
     */
    ALL_TERRITORY_CODE_368(401),
    /**
     * <code>ALL_TERRITORY_CODE_R_O = 402;</code>
     */
    ALL_TERRITORY_CODE_R_O(402),
    /**
     * <code>ALL_TERRITORY_CODE_20 = 403;</code>
     */
    ALL_TERRITORY_CODE_20(403),
    /**
     * <code>ALL_TERRITORY_CODE_R_S = 404;</code>
     */
    ALL_TERRITORY_CODE_R_S(404),
    /**
     * <code>ALL_TERRITORY_CODE_24 = 405;</code>
     */
    ALL_TERRITORY_CODE_24(405),
    /**
     * <code>ALL_TERRITORY_CODE_R_U = 406;</code>
     */
    ALL_TERRITORY_CODE_R_U(406),
    /**
     * <code>ALL_TERRITORY_CODE_R_W = 407;</code>
     */
    ALL_TERRITORY_CODE_R_W(407),
    /**
     * <code>ALL_TERRITORY_CODE_28 = 408;</code>
     */
    ALL_TERRITORY_CODE_28(408),
    /**
     * <code>ALL_TERRITORY_CODE_250 = 409;</code>
     */
    ALL_TERRITORY_CODE_250(409),
    /**
     * <code>ALL_TERRITORY_CODE_492 = 410;</code>
     */
    ALL_TERRITORY_CODE_492(410),
    /**
     * <code>ALL_TERRITORY_CODE_S_A = 411;</code>
     */
    ALL_TERRITORY_CODE_S_A(411),
    /**
     * <code>ALL_TERRITORY_CODE_372 = 412;</code>
     */
    ALL_TERRITORY_CODE_372(412),
    /**
     * <code>ALL_TERRITORY_CODE_S_B = 413;</code>
     */
    ALL_TERRITORY_CODE_S_B(413),
    /**
     * <code>ALL_TERRITORY_CODE_S_C = 414;</code>
     */
    ALL_TERRITORY_CODE_S_C(414),
    /**
     * <code>ALL_TERRITORY_CODE_132 = 415;</code>
     */
    ALL_TERRITORY_CODE_132(415),
    /**
     * <code>ALL_TERRITORY_CODE_S_D = 416;</code>
     */
    ALL_TERRITORY_CODE_S_D(416),
    /**
     * <code>ALL_TERRITORY_CODE_496 = 417;</code>
     */
    ALL_TERRITORY_CODE_496(417),
    /**
     * <code>ALL_TERRITORY_CODE_S_E = 418;</code>
     */
    ALL_TERRITORY_CODE_S_E(418),
    /**
     * <code>ALL_TERRITORY_CODE_376 = 419;</code>
     */
    ALL_TERRITORY_CODE_376(419),
    /**
     * <code>ALL_TERRITORY_CODE_498 = 420;</code>
     */
    ALL_TERRITORY_CODE_498(420),
    /**
     * <code>ALL_TERRITORY_CODE_S_G = 421;</code>
     */
    ALL_TERRITORY_CODE_S_G(421),
    /**
     * <code>ALL_TERRITORY_CODE_499 = 422;</code>
     */
    ALL_TERRITORY_CODE_499(422),
    /**
     * <code>ALL_TERRITORY_CODE_S_H = 423;</code>
     */
    ALL_TERRITORY_CODE_S_H(423),
    /**
     * <code>ALL_TERRITORY_CODE_258 = 424;</code>
     */
    ALL_TERRITORY_CODE_258(424),
    /**
     * <code>ALL_TERRITORY_CODE_S_I = 425;</code>
     */
    ALL_TERRITORY_CODE_S_I(425),
    /**
     * <code>ALL_TERRITORY_CODE_S_J = 426;</code>
     */
    ALL_TERRITORY_CODE_S_J(426),
    /**
     * <code>ALL_TERRITORY_CODE_S_K = 427;</code>
     */
    ALL_TERRITORY_CODE_S_K(427),
    /**
     * <code>ALL_TERRITORY_CODE_S_L = 428;</code>
     */
    ALL_TERRITORY_CODE_S_L(428),
    /**
     * <code>ALL_TERRITORY_CODE_S_M = 429;</code>
     */
    ALL_TERRITORY_CODE_S_M(429),
    /**
     * <code>ALL_TERRITORY_CODE_S_N = 430;</code>
     */
    ALL_TERRITORY_CODE_S_N(430),
    /**
     * <code>ALL_TERRITORY_CODE_S_O = 431;</code>
     */
    ALL_TERRITORY_CODE_S_O(431),
    /**
     * <code>ALL_TERRITORY_CODE_31 = 432;</code>
     */
    ALL_TERRITORY_CODE_31(432),
    /**
     * <code>ALL_TERRITORY_CODE_S_R = 433;</code>
     */
    ALL_TERRITORY_CODE_S_R(433),
    /**
     * <code>ALL_TERRITORY_CODE_32 = 434;</code>
     */
    ALL_TERRITORY_CODE_32(434),
    /**
     * <code>ALL_TERRITORY_CODE_S_S = 435;</code>
     */
    ALL_TERRITORY_CODE_S_S(435),
    /**
     * <code>ALL_TERRITORY_CODE_S_T = 436;</code>
     */
    ALL_TERRITORY_CODE_S_T(436),
    /**
     * <code>ALL_TERRITORY_CODE_S_V = 437;</code>
     */
    ALL_TERRITORY_CODE_S_V(437),
    /**
     * <code>ALL_TERRITORY_CODE_36 = 438;</code>
     */
    ALL_TERRITORY_CODE_36(438),
    /**
     * <code>ALL_TERRITORY_CODE_S_X = 439;</code>
     */
    ALL_TERRITORY_CODE_S_X(439),
    /**
     * <code>ALL_TERRITORY_CODE_S_Y = 440;</code>
     */
    ALL_TERRITORY_CODE_S_Y(440),
    /**
     * <code>ALL_TERRITORY_CODE_S_Z = 441;</code>
     */
    ALL_TERRITORY_CODE_S_Z(441),
    /**
     * <code>ALL_TERRITORY_CODE_380 = 442;</code>
     */
    ALL_TERRITORY_CODE_380(442),
    /**
     * <code>ALL_TERRITORY_CODE_140 = 443;</code>
     */
    ALL_TERRITORY_CODE_140(443),
    /**
     * <code>ALL_TERRITORY_CODE_262 = 444;</code>
     */
    ALL_TERRITORY_CODE_262(444),
    /**
     * <code>ALL_TERRITORY_CODE_T_C = 445;</code>
     */
    ALL_TERRITORY_CODE_T_C(445),
    /**
     * <code>ALL_TERRITORY_CODE_384 = 446;</code>
     */
    ALL_TERRITORY_CODE_384(446),
    /**
     * <code>ALL_TERRITORY_CODE_T_D = 447;</code>
     */
    ALL_TERRITORY_CODE_T_D(447),
    /**
     * <code>ALL_TERRITORY_CODE_144 = 448;</code>
     */
    ALL_TERRITORY_CODE_144(448),
    /**
     * <code>ALL_TERRITORY_CODE_T_F = 449;</code>
     */
    ALL_TERRITORY_CODE_T_F(449),
    /**
     * <code>ALL_TERRITORY_CODE_266 = 450;</code>
     */
    ALL_TERRITORY_CODE_266(450),
    /**
     * <code>ALL_TERRITORY_CODE_T_G = 451;</code>
     */
    ALL_TERRITORY_CODE_T_G(451),
    /**
     * <code>ALL_TERRITORY_CODE_388 = 452;</code>
     */
    ALL_TERRITORY_CODE_388(452),
    /**
     * <code>ALL_TERRITORY_CODE_T_H = 453;</code>
     */
    ALL_TERRITORY_CODE_T_H(453),
    /**
     * <code>ALL_TERRITORY_CODE_268 = 454;</code>
     */
    ALL_TERRITORY_CODE_268(454),
    /**
     * <code>ALL_TERRITORY_CODE_148 = 455;</code>
     */
    ALL_TERRITORY_CODE_148(455),
    /**
     * <code>ALL_TERRITORY_CODE_T_J = 456;</code>
     */
    ALL_TERRITORY_CODE_T_J(456),
    /**
     * <code>ALL_TERRITORY_CODE_T_K = 457;</code>
     */
    ALL_TERRITORY_CODE_T_K(457),
    /**
     * <code>ALL_TERRITORY_CODE_T_L = 458;</code>
     */
    ALL_TERRITORY_CODE_T_L(458),
    /**
     * <code>ALL_TERRITORY_CODE_T_M = 459;</code>
     */
    ALL_TERRITORY_CODE_T_M(459),
    /**
     * <code>ALL_TERRITORY_CODE_T_N = 460;</code>
     */
    ALL_TERRITORY_CODE_T_N(460),
    /**
     * <code>ALL_TERRITORY_CODE_T_O = 461;</code>
     */
    ALL_TERRITORY_CODE_T_O(461),
    /**
     * <code>ALL_TERRITORY_CODE_40 = 462;</code>
     */
    ALL_TERRITORY_CODE_40(462),
    /**
     * <code>ALL_TERRITORY_CODE_T_R = 463;</code>
     */
    ALL_TERRITORY_CODE_T_R(463),
    /**
     * <code>ALL_TERRITORY_CODE_G_E_H_H = 464;</code>
     */
    ALL_TERRITORY_CODE_G_E_H_H(464),
    /**
     * <code>ALL_TERRITORY_CODE_T_T = 465;</code>
     */
    ALL_TERRITORY_CODE_T_T(465),
    /**
     * <code>ALL_TERRITORY_CODE_44 = 466;</code>
     */
    ALL_TERRITORY_CODE_44(466),
    /**
     * <code>ALL_TERRITORY_CODE_T_V = 467;</code>
     */
    ALL_TERRITORY_CODE_T_V(467),
    /**
     * <code>ALL_TERRITORY_CODE_T_W = 468;</code>
     */
    ALL_TERRITORY_CODE_T_W(468),
    /**
     * <code>ALL_TERRITORY_CODE_48 = 469;</code>
     */
    ALL_TERRITORY_CODE_48(469),
    /**
     * <code>ALL_TERRITORY_CODE_T_Z = 470;</code>
     */
    ALL_TERRITORY_CODE_T_Z(470),
    /**
     * <code>ALL_TERRITORY_CODE_270 = 471;</code>
     */
    ALL_TERRITORY_CODE_270(471),
    /**
     * <code>ALL_TERRITORY_CODE_U_A = 472;</code>
     */
    ALL_TERRITORY_CODE_U_A(472),
    /**
     * <code>ALL_TERRITORY_CODE_392 = 473;</code>
     */
    ALL_TERRITORY_CODE_392(473),
    /**
     * <code>ALL_TERRITORY_CODE_152 = 474;</code>
     */
    ALL_TERRITORY_CODE_152(474),
    /**
     * <code>ALL_TERRITORY_CODE_276 = 475;</code>
     */
    ALL_TERRITORY_CODE_276(475),
    /**
     * <code>ALL_TERRITORY_CODE_U_G = 476;</code>
     */
    ALL_TERRITORY_CODE_U_G(476),
    /**
     * <code>ALL_TERRITORY_CODE_156 = 477;</code>
     */
    ALL_TERRITORY_CODE_156(477),
    /**
     * <code>ALL_TERRITORY_CODE_398 = 478;</code>
     */
    ALL_TERRITORY_CODE_398(478),
    /**
     * <code>ALL_TERRITORY_CODE_278 = 479;</code>
     */
    ALL_TERRITORY_CODE_278(479),
    /**
     * <code>ALL_TERRITORY_CODE_158 = 480;</code>
     */
    ALL_TERRITORY_CODE_158(480),
    /**
     * <code>ALL_TERRITORY_CODE_U_M = 481;</code>
     */
    ALL_TERRITORY_CODE_U_M(481),
    /**
     * <code>ALL_TERRITORY_CODE_50 = 482;</code>
     */
    ALL_TERRITORY_CODE_50(482),
    /**
     * <code>ALL_TERRITORY_CODE_51 = 483;</code>
     */
    ALL_TERRITORY_CODE_51(483),
    /**
     * <code>ALL_TERRITORY_CODE_52 = 484;</code>
     */
    ALL_TERRITORY_CODE_52(484),
    /**
     * <code>ALL_TERRITORY_CODE_U_S = 485;</code>
     */
    ALL_TERRITORY_CODE_U_S(485),
    /**
     * <code>ALL_TERRITORY_CODE_56 = 486;</code>
     */
    ALL_TERRITORY_CODE_56(486),
    /**
     * <code>ALL_TERRITORY_CODE_U_Y = 487;</code>
     */
    ALL_TERRITORY_CODE_U_Y(487),
    /**
     * <code>ALL_TERRITORY_CODE_U_Z = 488;</code>
     */
    ALL_TERRITORY_CODE_U_Z(488),
    /**
     * <code>ALL_TERRITORY_CODE_B_Y_A_A = 489;</code>
     */
    ALL_TERRITORY_CODE_B_Y_A_A(489),
    /**
     * <code>ALL_TERRITORY_CODE_280 = 490;</code>
     */
    ALL_TERRITORY_CODE_280(490),
    /**
     * <code>ALL_TERRITORY_CODE_V_A = 491;</code>
     */
    ALL_TERRITORY_CODE_V_A(491),
    /**
     * <code>ALL_TERRITORY_CODE_V_C = 492;</code>
     */
    ALL_TERRITORY_CODE_V_C(492),
    /**
     * <code>ALL_TERRITORY_CODE_V_E = 493;</code>
     */
    ALL_TERRITORY_CODE_V_E(493),
    /**
     * <code>ALL_TERRITORY_CODE_A_I_D_J = 494;</code>
     */
    ALL_TERRITORY_CODE_A_I_D_J(494),
    /**
     * <code>ALL_TERRITORY_CODE_V_G = 495;</code>
     */
    ALL_TERRITORY_CODE_V_G(495),
    /**
     * <code>ALL_TERRITORY_CODE_288 = 496;</code>
     */
    ALL_TERRITORY_CODE_288(496),
    /**
     * <code>ALL_TERRITORY_CODE_V_I = 497;</code>
     */
    ALL_TERRITORY_CODE_V_I(497),
    /**
     * <code>ALL_TERRITORY_CODE_V_N = 498;</code>
     */
    ALL_TERRITORY_CODE_V_N(498),
    /**
     * <code>ALL_TERRITORY_CODE_64 = 499;</code>
     */
    ALL_TERRITORY_CODE_64(499),
    /**
     * <code>ALL_TERRITORY_CODE_V_U = 500;</code>
     */
    ALL_TERRITORY_CODE_V_U(500),
    /**
     * <code>ALL_TERRITORY_CODE_68 = 501;</code>
     */
    ALL_TERRITORY_CODE_68(501),
    /**
     * <code>ALL_TERRITORY_CODE_S_U_H_H = 502;</code>
     */
    ALL_TERRITORY_CODE_S_U_H_H(502),
    /**
     * <code>ALL_TERRITORY_CODE_170 = 503;</code>
     */
    ALL_TERRITORY_CODE_170(503),
    /**
     * <code>ALL_TERRITORY_CODE_174 = 504;</code>
     */
    ALL_TERRITORY_CODE_174(504),
    /**
     * <code>ALL_TERRITORY_CODE_W_F = 505;</code>
     */
    ALL_TERRITORY_CODE_W_F(505),
    /**
     * <code>ALL_TERRITORY_CODE_296 = 506;</code>
     */
    ALL_TERRITORY_CODE_296(506),
    /**
     * <code>ALL_TERRITORY_CODE_178 = 507;</code>
     */
    ALL_TERRITORY_CODE_178(507),
    /**
     * <code>ALL_TERRITORY_CODE_70 = 508;</code>
     */
    ALL_TERRITORY_CODE_70(508),
    /**
     * <code>ALL_TERRITORY_CODE_72 = 509;</code>
     */
    ALL_TERRITORY_CODE_72(509),
    /**
     * <code>ALL_TERRITORY_CODE_W_S = 510;</code>
     */
    ALL_TERRITORY_CODE_W_S(510),
    /**
     * <code>ALL_TERRITORY_CODE_76 = 511;</code>
     */
    ALL_TERRITORY_CODE_76(511),
    /**
     * <code>ALL_TERRITORY_CODE_180 = 512;</code>
     */
    ALL_TERRITORY_CODE_180(512),
    /**
     * <code>ALL_TERRITORY_CODE_188 = 513;</code>
     */
    ALL_TERRITORY_CODE_188(513),
    /**
     * <code>ALL_TERRITORY_CODE_X_K = 514;</code>
     */
    ALL_TERRITORY_CODE_X_K(514),
    /**
     * <code>ALL_TERRITORY_CODE_84 = 515;</code>
     */
    ALL_TERRITORY_CODE_84(515),
    /**
     * <code>ALL_TERRITORY_CODE_191 = 516;</code>
     */
    ALL_TERRITORY_CODE_191(516),
    /**
     * <code>ALL_TERRITORY_CODE_192 = 517;</code>
     */
    ALL_TERRITORY_CODE_192(517),
    /**
     * <code>ALL_TERRITORY_CODE_Y_E = 518;</code>
     */
    ALL_TERRITORY_CODE_Y_E(518),
    /**
     * <code>ALL_TERRITORY_CODE_196 = 519;</code>
     */
    ALL_TERRITORY_CODE_196(519),
    /**
     * <code>ALL_TERRITORY_CODE_90 = 520;</code>
     */
    ALL_TERRITORY_CODE_90(520),
    /**
     * <code>ALL_TERRITORY_CODE_Y_T = 521;</code>
     */
    ALL_TERRITORY_CODE_Y_T(521),
    /**
     * <code>ALL_TERRITORY_CODE_96 = 522;</code>
     */
    ALL_TERRITORY_CODE_96(522),
    /**
     * <code>ALL_TERRITORY_CODE_Z_A = 523;</code>
     */
    ALL_TERRITORY_CODE_Z_A(523),
    /**
     * <code>ALL_TERRITORY_CODE_F_Q_H_H = 524;</code>
     */
    ALL_TERRITORY_CODE_F_Q_H_H(524),
    /**
     * <code>ALL_TERRITORY_CODE_WORLDWIDE = 525;</code>
     */
    ALL_TERRITORY_CODE_WORLDWIDE(525),
    /**
     * <code>ALL_TERRITORY_CODE_Z_M = 526;</code>
     */
    ALL_TERRITORY_CODE_Z_M(526),
    /**
     * <code>ALL_TERRITORY_CODE_Z_W = 527;</code>
     */
    ALL_TERRITORY_CODE_Z_W(527),
    /**
     * <code>ALL_TERRITORY_CODE_C_S_X_X = 528;</code>
     */
    ALL_TERRITORY_CODE_C_S_X_X(528),
    /**
     * <code>ALL_TERRITORY_CODE_P_U_U_M = 529;</code>
     */
    ALL_TERRITORY_CODE_P_U_U_M(529),
    /**
     * <code>ALL_TERRITORY_CODE_Y_D_Y_E = 530;</code>
     */
    ALL_TERRITORY_CODE_Y_D_Y_E(530),
    /**
     * <code>ALL_TERRITORY_CODE_D_Y_B_J = 531;</code>
     */
    ALL_TERRITORY_CODE_D_Y_B_J(531),
    /**
     * <code>ALL_TERRITORY_CODE_R_H_Z_W = 532;</code>
     */
    ALL_TERRITORY_CODE_R_H_Z_W(532),
    ;

    /**
     * <code>ALL_TERRITORY_CODE_A_D = 0;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_D_VALUE = 0;
    /**
     * <code>ALL_TERRITORY_CODE_A_E = 1;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_E_VALUE = 1;
    /**
     * <code>ALL_TERRITORY_CODE_A_F = 2;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_F_VALUE = 2;
    /**
     * <code>ALL_TERRITORY_CODE_A_G = 3;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_G_VALUE = 3;
    /**
     * <code>ALL_TERRITORY_CODE_A_I = 4;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_I_VALUE = 4;
    /**
     * <code>ALL_TERRITORY_CODE_A_L = 5;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_L_VALUE = 5;
    /**
     * <code>ALL_TERRITORY_CODE_A_M = 6;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_M_VALUE = 6;
    /**
     * <code>ALL_TERRITORY_CODE_A_N = 7;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_N_VALUE = 7;
    /**
     * <code>ALL_TERRITORY_CODE_A_O = 8;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_O_VALUE = 8;
    /**
     * <code>ALL_TERRITORY_CODE_A_Q = 9;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_Q_VALUE = 9;
    /**
     * <code>ALL_TERRITORY_CODE_A_R = 10;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_R_VALUE = 10;
    /**
     * <code>ALL_TERRITORY_CODE_A_S = 11;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_S_VALUE = 11;
    /**
     * <code>ALL_TERRITORY_CODE_A_T = 12;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_T_VALUE = 12;
    /**
     * <code>ALL_TERRITORY_CODE_A_U = 13;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_U_VALUE = 13;
    /**
     * <code>ALL_TERRITORY_CODE_4 = 14;</code>
     */
    public static final int ALL_TERRITORY_CODE_4_VALUE = 14;
    /**
     * <code>ALL_TERRITORY_CODE_A_W = 15;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_W_VALUE = 15;
    /**
     * <code>ALL_TERRITORY_CODE_A_X = 16;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_X_VALUE = 16;
    /**
     * <code>ALL_TERRITORY_CODE_8 = 17;</code>
     */
    public static final int ALL_TERRITORY_CODE_8_VALUE = 17;
    /**
     * <code>ALL_TERRITORY_CODE_800 = 18;</code>
     */
    public static final int ALL_TERRITORY_CODE_800_VALUE = 18;
    /**
     * <code>ALL_TERRITORY_CODE_A_Z = 19;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_Z_VALUE = 19;
    /**
     * <code>ALL_TERRITORY_CODE_804 = 20;</code>
     */
    public static final int ALL_TERRITORY_CODE_804_VALUE = 20;
    /**
     * <code>ALL_TERRITORY_CODE_B_A = 21;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_A_VALUE = 21;
    /**
     * <code>ALL_TERRITORY_CODE_807 = 22;</code>
     */
    public static final int ALL_TERRITORY_CODE_807_VALUE = 22;
    /**
     * <code>ALL_TERRITORY_CODE_B_B = 23;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_B_VALUE = 23;
    /**
     * <code>ALL_TERRITORY_CODE_B_D = 24;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_D_VALUE = 24;
    /**
     * <code>ALL_TERRITORY_CODE_B_E = 25;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_E_VALUE = 25;
    /**
     * <code>ALL_TERRITORY_CODE_B_F = 26;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_F_VALUE = 26;
    /**
     * <code>ALL_TERRITORY_CODE_W_K_U_M = 27;</code>
     */
    public static final int ALL_TERRITORY_CODE_W_K_U_M_VALUE = 27;
    /**
     * <code>ALL_TERRITORY_CODE_B_G = 28;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_G_VALUE = 28;
    /**
     * <code>ALL_TERRITORY_CODE_B_H = 29;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_H_VALUE = 29;
    /**
     * <code>ALL_TERRITORY_CODE_B_I = 30;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_I_VALUE = 30;
    /**
     * <code>ALL_TERRITORY_CODE_B_J = 31;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_J_VALUE = 31;
    /**
     * <code>ALL_TERRITORY_CODE_B_L = 32;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_L_VALUE = 32;
    /**
     * <code>ALL_TERRITORY_CODE_B_M = 33;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_M_VALUE = 33;
    /**
     * <code>ALL_TERRITORY_CODE_B_N = 34;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_N_VALUE = 34;
    /**
     * <code>ALL_TERRITORY_CODE_B_O = 35;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_O_VALUE = 35;
    /**
     * <code>ALL_TERRITORY_CODE_B_Q = 36;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_Q_VALUE = 36;
    /**
     * <code>ALL_TERRITORY_CODE_B_R = 37;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_R_VALUE = 37;
    /**
     * <code>ALL_TERRITORY_CODE_B_S = 38;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_S_VALUE = 38;
    /**
     * <code>ALL_TERRITORY_CODE_B_T = 39;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_T_VALUE = 39;
    /**
     * <code>ALL_TERRITORY_CODE_B_V = 40;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_V_VALUE = 40;
    /**
     * <code>ALL_TERRITORY_CODE_B_W = 41;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_W_VALUE = 41;
    /**
     * <code>ALL_TERRITORY_CODE_B_Y = 42;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_Y_VALUE = 42;
    /**
     * <code>ALL_TERRITORY_CODE_810 = 43;</code>
     */
    public static final int ALL_TERRITORY_CODE_810_VALUE = 43;
    /**
     * <code>ALL_TERRITORY_CODE_B_Z = 44;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_Z_VALUE = 44;
    /**
     * <code>ALL_TERRITORY_CODE_C_A = 45;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_A_VALUE = 45;
    /**
     * <code>ALL_TERRITORY_CODE_818 = 46;</code>
     */
    public static final int ALL_TERRITORY_CODE_818_VALUE = 46;
    /**
     * <code>ALL_TERRITORY_CODE_C_C = 47;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_C_VALUE = 47;
    /**
     * <code>ALL_TERRITORY_CODE_C_D = 48;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_D_VALUE = 48;
    /**
     * <code>ALL_TERRITORY_CODE_C_F = 49;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_F_VALUE = 49;
    /**
     * <code>ALL_TERRITORY_CODE_C_G = 50;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_G_VALUE = 50;
    /**
     * <code>ALL_TERRITORY_CODE_C_H = 51;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_H_VALUE = 51;
    /**
     * <code>ALL_TERRITORY_CODE_C_I = 52;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_I_VALUE = 52;
    /**
     * <code>ALL_TERRITORY_CODE_C_K = 53;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_K_VALUE = 53;
    /**
     * <code>ALL_TERRITORY_CODE_2100 = 54;</code>
     */
    public static final int ALL_TERRITORY_CODE_2100_VALUE = 54;
    /**
     * <code>ALL_TERRITORY_CODE_C_L = 55;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_L_VALUE = 55;
    /**
     * <code>ALL_TERRITORY_CODE_C_M = 56;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_M_VALUE = 56;
    /**
     * <code>ALL_TERRITORY_CODE_C_N = 57;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_N_VALUE = 57;
    /**
     * <code>ALL_TERRITORY_CODE_C_O = 58;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_O_VALUE = 58;
    /**
     * <code>ALL_TERRITORY_CODE_C_R = 59;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_R_VALUE = 59;
    /**
     * <code>ALL_TERRITORY_CODE_C_S = 60;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_S_VALUE = 60;
    /**
     * <code>ALL_TERRITORY_CODE_C_U = 61;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_U_VALUE = 61;
    /**
     * <code>ALL_TERRITORY_CODE_C_V = 62;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_V_VALUE = 62;
    /**
     * <code>ALL_TERRITORY_CODE_C_W = 63;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_W_VALUE = 63;
    /**
     * <code>ALL_TERRITORY_CODE_C_X = 64;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_X_VALUE = 64;
    /**
     * <code>ALL_TERRITORY_CODE_C_Y = 65;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_Y_VALUE = 65;
    /**
     * <code>ALL_TERRITORY_CODE_C_Z = 66;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_Z_VALUE = 66;
    /**
     * <code>ALL_TERRITORY_CODE_702 = 67;</code>
     */
    public static final int ALL_TERRITORY_CODE_702_VALUE = 67;
    /**
     * <code>ALL_TERRITORY_CODE_703 = 68;</code>
     */
    public static final int ALL_TERRITORY_CODE_703_VALUE = 68;
    /**
     * <code>ALL_TERRITORY_CODE_704 = 69;</code>
     */
    public static final int ALL_TERRITORY_CODE_704_VALUE = 69;
    /**
     * <code>ALL_TERRITORY_CODE_705 = 70;</code>
     */
    public static final int ALL_TERRITORY_CODE_705_VALUE = 70;
    /**
     * <code>ALL_TERRITORY_CODE_826 = 71;</code>
     */
    public static final int ALL_TERRITORY_CODE_826_VALUE = 71;
    /**
     * <code>ALL_TERRITORY_CODE_706 = 72;</code>
     */
    public static final int ALL_TERRITORY_CODE_706_VALUE = 72;
    /**
     * <code>ALL_TERRITORY_CODE_D_E = 73;</code>
     */
    public static final int ALL_TERRITORY_CODE_D_E_VALUE = 73;
    /**
     * <code>ALL_TERRITORY_CODE_D_J = 74;</code>
     */
    public static final int ALL_TERRITORY_CODE_D_J_VALUE = 74;
    /**
     * <code>ALL_TERRITORY_CODE_D_K = 75;</code>
     */
    public static final int ALL_TERRITORY_CODE_D_K_VALUE = 75;
    /**
     * <code>ALL_TERRITORY_CODE_2111 = 76;</code>
     */
    public static final int ALL_TERRITORY_CODE_2111_VALUE = 76;
    /**
     * <code>ALL_TERRITORY_CODE_D_M = 77;</code>
     */
    public static final int ALL_TERRITORY_CODE_D_M_VALUE = 77;
    /**
     * <code>ALL_TERRITORY_CODE_2110 = 78;</code>
     */
    public static final int ALL_TERRITORY_CODE_2110_VALUE = 78;
    /**
     * <code>ALL_TERRITORY_CODE_D_O = 79;</code>
     */
    public static final int ALL_TERRITORY_CODE_D_O_VALUE = 79;
    /**
     * <code>ALL_TERRITORY_CODE_2108 = 80;</code>
     */
    public static final int ALL_TERRITORY_CODE_2108_VALUE = 80;
    /**
     * <code>ALL_TERRITORY_CODE_2107 = 81;</code>
     */
    public static final int ALL_TERRITORY_CODE_2107_VALUE = 81;
    /**
     * <code>ALL_TERRITORY_CODE_2106 = 82;</code>
     */
    public static final int ALL_TERRITORY_CODE_2106_VALUE = 82;
    /**
     * <code>ALL_TERRITORY_CODE_2105 = 83;</code>
     */
    public static final int ALL_TERRITORY_CODE_2105_VALUE = 83;
    /**
     * <code>ALL_TERRITORY_CODE_2104 = 84;</code>
     */
    public static final int ALL_TERRITORY_CODE_2104_VALUE = 84;
    /**
     * <code>ALL_TERRITORY_CODE_2103 = 85;</code>
     */
    public static final int ALL_TERRITORY_CODE_2103_VALUE = 85;
    /**
     * <code>ALL_TERRITORY_CODE_D_Z = 86;</code>
     */
    public static final int ALL_TERRITORY_CODE_D_Z_VALUE = 86;
    /**
     * <code>ALL_TERRITORY_CODE_710 = 87;</code>
     */
    public static final int ALL_TERRITORY_CODE_710_VALUE = 87;
    /**
     * <code>ALL_TERRITORY_CODE_2102 = 88;</code>
     */
    public static final int ALL_TERRITORY_CODE_2102_VALUE = 88;
    /**
     * <code>ALL_TERRITORY_CODE_2101 = 89;</code>
     */
    public static final int ALL_TERRITORY_CODE_2101_VALUE = 89;
    /**
     * <code>ALL_TERRITORY_CODE_834 = 90;</code>
     */
    public static final int ALL_TERRITORY_CODE_834_VALUE = 90;
    /**
     * <code>ALL_TERRITORY_CODE_716 = 91;</code>
     */
    public static final int ALL_TERRITORY_CODE_716_VALUE = 91;
    /**
     * <code>ALL_TERRITORY_CODE_E_C = 92;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_C_VALUE = 92;
    /**
     * <code>ALL_TERRITORY_CODE_2109 = 93;</code>
     */
    public static final int ALL_TERRITORY_CODE_2109_VALUE = 93;
    /**
     * <code>ALL_TERRITORY_CODE_E_E = 94;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_E_VALUE = 94;
    /**
     * <code>ALL_TERRITORY_CODE_B_Q_A_Q = 95;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_Q_A_Q_VALUE = 95;
    /**
     * <code>ALL_TERRITORY_CODE_E_G = 96;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_G_VALUE = 96;
    /**
     * <code>ALL_TERRITORY_CODE_E_H = 97;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_H_VALUE = 97;
    /**
     * <code>ALL_TERRITORY_CODE_Y_U_C_S = 98;</code>
     */
    public static final int ALL_TERRITORY_CODE_Y_U_C_S_VALUE = 98;
    /**
     * <code>ALL_TERRITORY_CODE_2122 = 99;</code>
     */
    public static final int ALL_TERRITORY_CODE_2122_VALUE = 99;
    /**
     * <code>ALL_TERRITORY_CODE_2121 = 100;</code>
     */
    public static final int ALL_TERRITORY_CODE_2121_VALUE = 100;
    /**
     * <code>ALL_TERRITORY_CODE_2120 = 101;</code>
     */
    public static final int ALL_TERRITORY_CODE_2120_VALUE = 101;
    /**
     * <code>ALL_TERRITORY_CODE_E_R = 102;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_R_VALUE = 102;
    /**
     * <code>ALL_TERRITORY_CODE_E_S = 103;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_S_VALUE = 103;
    /**
     * <code>ALL_TERRITORY_CODE_E_T = 104;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_T_VALUE = 104;
    /**
     * <code>ALL_TERRITORY_CODE_2119 = 105;</code>
     */
    public static final int ALL_TERRITORY_CODE_2119_VALUE = 105;
    /**
     * <code>ALL_TERRITORY_CODE_2118 = 106;</code>
     */
    public static final int ALL_TERRITORY_CODE_2118_VALUE = 106;
    /**
     * <code>ALL_TERRITORY_CODE_2117 = 107;</code>
     */
    public static final int ALL_TERRITORY_CODE_2117_VALUE = 107;
    /**
     * <code>ALL_TERRITORY_CODE_2116 = 108;</code>
     */
    public static final int ALL_TERRITORY_CODE_2116_VALUE = 108;
    /**
     * <code>ALL_TERRITORY_CODE_840 = 109;</code>
     */
    public static final int ALL_TERRITORY_CODE_840_VALUE = 109;
    /**
     * <code>ALL_TERRITORY_CODE_2115 = 110;</code>
     */
    public static final int ALL_TERRITORY_CODE_2115_VALUE = 110;
    /**
     * <code>ALL_TERRITORY_CODE_720 = 111;</code>
     */
    public static final int ALL_TERRITORY_CODE_720_VALUE = 111;
    /**
     * <code>ALL_TERRITORY_CODE_2114 = 112;</code>
     */
    public static final int ALL_TERRITORY_CODE_2114_VALUE = 112;
    /**
     * <code>ALL_TERRITORY_CODE_600 = 113;</code>
     */
    public static final int ALL_TERRITORY_CODE_600_VALUE = 113;
    /**
     * <code>ALL_TERRITORY_CODE_2113 = 114;</code>
     */
    public static final int ALL_TERRITORY_CODE_2113_VALUE = 114;
    /**
     * <code>ALL_TERRITORY_CODE_2112 = 115;</code>
     */
    public static final int ALL_TERRITORY_CODE_2112_VALUE = 115;
    /**
     * <code>ALL_TERRITORY_CODE_724 = 116;</code>
     */
    public static final int ALL_TERRITORY_CODE_724_VALUE = 116;
    /**
     * <code>ALL_TERRITORY_CODE_604 = 117;</code>
     */
    public static final int ALL_TERRITORY_CODE_604_VALUE = 117;
    /**
     * <code>ALL_TERRITORY_CODE_728 = 118;</code>
     */
    public static final int ALL_TERRITORY_CODE_728_VALUE = 118;
    /**
     * <code>ALL_TERRITORY_CODE_608 = 119;</code>
     */
    public static final int ALL_TERRITORY_CODE_608_VALUE = 119;
    /**
     * <code>ALL_TERRITORY_CODE_729 = 120;</code>
     */
    public static final int ALL_TERRITORY_CODE_729_VALUE = 120;
    /**
     * <code>ALL_TERRITORY_CODE_F_I = 121;</code>
     */
    public static final int ALL_TERRITORY_CODE_F_I_VALUE = 121;
    /**
     * <code>ALL_TERRITORY_CODE_F_J = 122;</code>
     */
    public static final int ALL_TERRITORY_CODE_F_J_VALUE = 122;
    /**
     * <code>ALL_TERRITORY_CODE_F_K = 123;</code>
     */
    public static final int ALL_TERRITORY_CODE_F_K_VALUE = 123;
    /**
     * <code>ALL_TERRITORY_CODE_F_M = 124;</code>
     */
    public static final int ALL_TERRITORY_CODE_F_M_VALUE = 124;
    /**
     * <code>ALL_TERRITORY_CODE_2133 = 125;</code>
     */
    public static final int ALL_TERRITORY_CODE_2133_VALUE = 125;
    /**
     * <code>ALL_TERRITORY_CODE_F_O = 126;</code>
     */
    public static final int ALL_TERRITORY_CODE_F_O_VALUE = 126;
    /**
     * <code>ALL_TERRITORY_CODE_2132 = 127;</code>
     */
    public static final int ALL_TERRITORY_CODE_2132_VALUE = 127;
    /**
     * <code>ALL_TERRITORY_CODE_2131 = 128;</code>
     */
    public static final int ALL_TERRITORY_CODE_2131_VALUE = 128;
    /**
     * <code>ALL_TERRITORY_CODE_2130 = 129;</code>
     */
    public static final int ALL_TERRITORY_CODE_2130_VALUE = 129;
    /**
     * <code>ALL_TERRITORY_CODE_F_R = 130;</code>
     */
    public static final int ALL_TERRITORY_CODE_F_R_VALUE = 130;
    /**
     * <code>ALL_TERRITORY_CODE_2129 = 131;</code>
     */
    public static final int ALL_TERRITORY_CODE_2129_VALUE = 131;
    /**
     * <code>ALL_TERRITORY_CODE_2128 = 132;</code>
     */
    public static final int ALL_TERRITORY_CODE_2128_VALUE = 132;
    /**
     * <code>ALL_TERRITORY_CODE_2127 = 133;</code>
     */
    public static final int ALL_TERRITORY_CODE_2127_VALUE = 133;
    /**
     * <code>ALL_TERRITORY_CODE_2126 = 134;</code>
     */
    public static final int ALL_TERRITORY_CODE_2126_VALUE = 134;
    /**
     * <code>ALL_TERRITORY_CODE_2125 = 135;</code>
     */
    public static final int ALL_TERRITORY_CODE_2125_VALUE = 135;
    /**
     * <code>ALL_TERRITORY_CODE_732 = 136;</code>
     */
    public static final int ALL_TERRITORY_CODE_732_VALUE = 136;
    /**
     * <code>ALL_TERRITORY_CODE_2124 = 137;</code>
     */
    public static final int ALL_TERRITORY_CODE_2124_VALUE = 137;
    /**
     * <code>ALL_TERRITORY_CODE_854 = 138;</code>
     */
    public static final int ALL_TERRITORY_CODE_854_VALUE = 138;
    /**
     * <code>ALL_TERRITORY_CODE_2123 = 139;</code>
     */
    public static final int ALL_TERRITORY_CODE_2123_VALUE = 139;
    /**
     * <code>ALL_TERRITORY_CODE_G_A = 140;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_A_VALUE = 140;
    /**
     * <code>ALL_TERRITORY_CODE_736 = 141;</code>
     */
    public static final int ALL_TERRITORY_CODE_736_VALUE = 141;
    /**
     * <code>ALL_TERRITORY_CODE_G_B = 142;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_B_VALUE = 142;
    /**
     * <code>ALL_TERRITORY_CODE_616 = 143;</code>
     */
    public static final int ALL_TERRITORY_CODE_616_VALUE = 143;
    /**
     * <code>ALL_TERRITORY_CODE_858 = 144;</code>
     */
    public static final int ALL_TERRITORY_CODE_858_VALUE = 144;
    /**
     * <code>ALL_TERRITORY_CODE_G_D = 145;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_D_VALUE = 145;
    /**
     * <code>ALL_TERRITORY_CODE_G_E = 146;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_E_VALUE = 146;
    /**
     * <code>ALL_TERRITORY_CODE_G_F = 147;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_F_VALUE = 147;
    /**
     * <code>ALL_TERRITORY_CODE_G_G = 148;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_G_VALUE = 148;
    /**
     * <code>ALL_TERRITORY_CODE_G_H = 149;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_H_VALUE = 149;
    /**
     * <code>ALL_TERRITORY_CODE_G_I = 150;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_I_VALUE = 150;
    /**
     * <code>ALL_TERRITORY_CODE_G_L = 151;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_L_VALUE = 151;
    /**
     * <code>ALL_TERRITORY_CODE_G_M = 152;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_M_VALUE = 152;
    /**
     * <code>ALL_TERRITORY_CODE_G_N = 153;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_N_VALUE = 153;
    /**
     * <code>ALL_TERRITORY_CODE_G_P = 154;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_P_VALUE = 154;
    /**
     * <code>ALL_TERRITORY_CODE_G_Q = 155;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_Q_VALUE = 155;
    /**
     * <code>ALL_TERRITORY_CODE_G_R = 156;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_R_VALUE = 156;
    /**
     * <code>ALL_TERRITORY_CODE_E_S__MINUS___M_L = 157;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_S__MINUS___M_L_VALUE = 157;
    /**
     * <code>ALL_TERRITORY_CODE_G_S = 158;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_S_VALUE = 158;
    /**
     * <code>ALL_TERRITORY_CODE_G_T = 159;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_T_VALUE = 159;
    /**
     * <code>ALL_TERRITORY_CODE_G_U = 160;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_U_VALUE = 160;
    /**
     * <code>ALL_TERRITORY_CODE_G_W = 161;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_W_VALUE = 161;
    /**
     * <code>ALL_TERRITORY_CODE_G_Y = 162;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_Y_VALUE = 162;
    /**
     * <code>ALL_TERRITORY_CODE_860 = 163;</code>
     */
    public static final int ALL_TERRITORY_CODE_860_VALUE = 163;
    /**
     * <code>ALL_TERRITORY_CODE_740 = 164;</code>
     */
    public static final int ALL_TERRITORY_CODE_740_VALUE = 164;
    /**
     * <code>ALL_TERRITORY_CODE_620 = 165;</code>
     */
    public static final int ALL_TERRITORY_CODE_620_VALUE = 165;
    /**
     * <code>ALL_TERRITORY_CODE_862 = 166;</code>
     */
    public static final int ALL_TERRITORY_CODE_862_VALUE = 166;
    /**
     * <code>ALL_TERRITORY_CODE_2136 = 167;</code>
     */
    public static final int ALL_TERRITORY_CODE_2136_VALUE = 167;
    /**
     * <code>ALL_TERRITORY_CODE_2134 = 168;</code>
     */
    public static final int ALL_TERRITORY_CODE_2134_VALUE = 168;
    /**
     * <code>ALL_TERRITORY_CODE_624 = 169;</code>
     */
    public static final int ALL_TERRITORY_CODE_624_VALUE = 169;
    /**
     * <code>ALL_TERRITORY_CODE_504 = 170;</code>
     */
    public static final int ALL_TERRITORY_CODE_504_VALUE = 170;
    /**
     * <code>ALL_TERRITORY_CODE_626 = 171;</code>
     */
    public static final int ALL_TERRITORY_CODE_626_VALUE = 171;
    /**
     * <code>ALL_TERRITORY_CODE_748 = 172;</code>
     */
    public static final int ALL_TERRITORY_CODE_748_VALUE = 172;
    /**
     * <code>ALL_TERRITORY_CODE_508 = 173;</code>
     */
    public static final int ALL_TERRITORY_CODE_508_VALUE = 173;
    /**
     * <code>ALL_TERRITORY_CODE_H_K = 174;</code>
     */
    public static final int ALL_TERRITORY_CODE_H_K_VALUE = 174;
    /**
     * <code>ALL_TERRITORY_CODE_H_M = 175;</code>
     */
    public static final int ALL_TERRITORY_CODE_H_M_VALUE = 175;
    /**
     * <code>ALL_TERRITORY_CODE_H_N = 176;</code>
     */
    public static final int ALL_TERRITORY_CODE_H_N_VALUE = 176;
    /**
     * <code>ALL_TERRITORY_CODE_H_R = 177;</code>
     */
    public static final int ALL_TERRITORY_CODE_H_R_VALUE = 177;
    /**
     * <code>ALL_TERRITORY_CODE_H_T = 178;</code>
     */
    public static final int ALL_TERRITORY_CODE_H_T_VALUE = 178;
    /**
     * <code>ALL_TERRITORY_CODE_H_U = 179;</code>
     */
    public static final int ALL_TERRITORY_CODE_H_U_VALUE = 179;
    /**
     * <code>ALL_TERRITORY_CODE_M_I_U_M = 180;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_I_U_M_VALUE = 180;
    /**
     * <code>ALL_TERRITORY_CODE_630 = 181;</code>
     */
    public static final int ALL_TERRITORY_CODE_630_VALUE = 181;
    /**
     * <code>ALL_TERRITORY_CODE_752 = 182;</code>
     */
    public static final int ALL_TERRITORY_CODE_752_VALUE = 182;
    /**
     * <code>ALL_TERRITORY_CODE_512 = 183;</code>
     */
    public static final int ALL_TERRITORY_CODE_512_VALUE = 183;
    /**
     * <code>ALL_TERRITORY_CODE_634 = 184;</code>
     */
    public static final int ALL_TERRITORY_CODE_634_VALUE = 184;
    /**
     * <code>ALL_TERRITORY_CODE_N_Q_A_Q = 185;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_Q_A_Q_VALUE = 185;
    /**
     * <code>ALL_TERRITORY_CODE_756 = 186;</code>
     */
    public static final int ALL_TERRITORY_CODE_756_VALUE = 186;
    /**
     * <code>ALL_TERRITORY_CODE_516 = 187;</code>
     */
    public static final int ALL_TERRITORY_CODE_516_VALUE = 187;
    /**
     * <code>ALL_TERRITORY_CODE_I_D = 188;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_D_VALUE = 188;
    /**
     * <code>ALL_TERRITORY_CODE_I_E = 189;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_E_VALUE = 189;
    /**
     * <code>ALL_TERRITORY_CODE_D_D_D_E = 190;</code>
     */
    public static final int ALL_TERRITORY_CODE_D_D_D_E_VALUE = 190;
    /**
     * <code>ALL_TERRITORY_CODE_I_L = 191;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_L_VALUE = 191;
    /**
     * <code>ALL_TERRITORY_CODE_I_M = 192;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_M_VALUE = 192;
    /**
     * <code>ALL_TERRITORY_CODE_I_N = 193;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_N_VALUE = 193;
    /**
     * <code>ALL_TERRITORY_CODE_I_O = 194;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_O_VALUE = 194;
    /**
     * <code>ALL_TERRITORY_CODE_I_Q = 195;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_Q_VALUE = 195;
    /**
     * <code>ALL_TERRITORY_CODE_I_R = 196;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_R_VALUE = 196;
    /**
     * <code>ALL_TERRITORY_CODE_I_S = 197;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_S_VALUE = 197;
    /**
     * <code>ALL_TERRITORY_CODE_I_T = 198;</code>
     */
    public static final int ALL_TERRITORY_CODE_I_T_VALUE = 198;
    /**
     * <code>ALL_TERRITORY_CODE_B_U_M_M = 199;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_U_M_M_VALUE = 199;
    /**
     * <code>ALL_TERRITORY_CODE_760 = 200;</code>
     */
    public static final int ALL_TERRITORY_CODE_760_VALUE = 200;
    /**
     * <code>ALL_TERRITORY_CODE_882 = 201;</code>
     */
    public static final int ALL_TERRITORY_CODE_882_VALUE = 201;
    /**
     * <code>ALL_TERRITORY_CODE_520 = 202;</code>
     */
    public static final int ALL_TERRITORY_CODE_520_VALUE = 202;
    /**
     * <code>ALL_TERRITORY_CODE_762 = 203;</code>
     */
    public static final int ALL_TERRITORY_CODE_762_VALUE = 203;
    /**
     * <code>ALL_TERRITORY_CODE_400 = 204;</code>
     */
    public static final int ALL_TERRITORY_CODE_400_VALUE = 204;
    /**
     * <code>ALL_TERRITORY_CODE_642 = 205;</code>
     */
    public static final int ALL_TERRITORY_CODE_642_VALUE = 205;
    /**
     * <code>ALL_TERRITORY_CODE_643 = 206;</code>
     */
    public static final int ALL_TERRITORY_CODE_643_VALUE = 206;
    /**
     * <code>ALL_TERRITORY_CODE_764 = 207;</code>
     */
    public static final int ALL_TERRITORY_CODE_764_VALUE = 207;
    /**
     * <code>ALL_TERRITORY_CODE_886 = 208;</code>
     */
    public static final int ALL_TERRITORY_CODE_886_VALUE = 208;
    /**
     * <code>ALL_TERRITORY_CODE_524 = 209;</code>
     */
    public static final int ALL_TERRITORY_CODE_524_VALUE = 209;
    /**
     * <code>ALL_TERRITORY_CODE_887 = 210;</code>
     */
    public static final int ALL_TERRITORY_CODE_887_VALUE = 210;
    /**
     * <code>ALL_TERRITORY_CODE_404 = 211;</code>
     */
    public static final int ALL_TERRITORY_CODE_404_VALUE = 211;
    /**
     * <code>ALL_TERRITORY_CODE_646 = 212;</code>
     */
    public static final int ALL_TERRITORY_CODE_646_VALUE = 212;
    /**
     * <code>ALL_TERRITORY_CODE_768 = 213;</code>
     */
    public static final int ALL_TERRITORY_CODE_768_VALUE = 213;
    /**
     * <code>ALL_TERRITORY_CODE_J_E = 214;</code>
     */
    public static final int ALL_TERRITORY_CODE_J_E_VALUE = 214;
    /**
     * <code>ALL_TERRITORY_CODE_528 = 215;</code>
     */
    public static final int ALL_TERRITORY_CODE_528_VALUE = 215;
    /**
     * <code>ALL_TERRITORY_CODE_408 = 216;</code>
     */
    public static final int ALL_TERRITORY_CODE_408_VALUE = 216;
    /**
     * <code>ALL_TERRITORY_CODE_F_X_F_R = 217;</code>
     */
    public static final int ALL_TERRITORY_CODE_F_X_F_R_VALUE = 217;
    /**
     * <code>ALL_TERRITORY_CODE_J_T_U_M = 218;</code>
     */
    public static final int ALL_TERRITORY_CODE_J_T_U_M_VALUE = 218;
    /**
     * <code>ALL_TERRITORY_CODE_J_M = 219;</code>
     */
    public static final int ALL_TERRITORY_CODE_J_M_VALUE = 219;
    /**
     * <code>ALL_TERRITORY_CODE_J_O = 220;</code>
     */
    public static final int ALL_TERRITORY_CODE_J_O_VALUE = 220;
    /**
     * <code>ALL_TERRITORY_CODE_J_P = 221;</code>
     */
    public static final int ALL_TERRITORY_CODE_J_P_VALUE = 221;
    /**
     * <code>ALL_TERRITORY_CODE_890 = 222;</code>
     */
    public static final int ALL_TERRITORY_CODE_890_VALUE = 222;
    /**
     * <code>ALL_TERRITORY_CODE_891 = 223;</code>
     */
    public static final int ALL_TERRITORY_CODE_891_VALUE = 223;
    /**
     * <code>ALL_TERRITORY_CODE_410 = 224;</code>
     */
    public static final int ALL_TERRITORY_CODE_410_VALUE = 224;
    /**
     * <code>ALL_TERRITORY_CODE_894 = 225;</code>
     */
    public static final int ALL_TERRITORY_CODE_894_VALUE = 225;
    /**
     * <code>ALL_TERRITORY_CODE_776 = 226;</code>
     */
    public static final int ALL_TERRITORY_CODE_776_VALUE = 226;
    /**
     * <code>ALL_TERRITORY_CODE_414 = 227;</code>
     */
    public static final int ALL_TERRITORY_CODE_414_VALUE = 227;
    /**
     * <code>ALL_TERRITORY_CODE_K_E = 228;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_E_VALUE = 228;
    /**
     * <code>ALL_TERRITORY_CODE_417 = 229;</code>
     */
    public static final int ALL_TERRITORY_CODE_417_VALUE = 229;
    /**
     * <code>ALL_TERRITORY_CODE_659 = 230;</code>
     */
    public static final int ALL_TERRITORY_CODE_659_VALUE = 230;
    /**
     * <code>ALL_TERRITORY_CODE_418 = 231;</code>
     */
    public static final int ALL_TERRITORY_CODE_418_VALUE = 231;
    /**
     * <code>ALL_TERRITORY_CODE_S_K_I_N = 232;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_K_I_N_VALUE = 232;
    /**
     * <code>ALL_TERRITORY_CODE_K_G = 233;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_G_VALUE = 233;
    /**
     * <code>ALL_TERRITORY_CODE_K_H = 234;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_H_VALUE = 234;
    /**
     * <code>ALL_TERRITORY_CODE_K_I = 235;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_I_VALUE = 235;
    /**
     * <code>ALL_TERRITORY_CODE_P_Z_P_A = 236;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_Z_P_A_VALUE = 236;
    /**
     * <code>ALL_TERRITORY_CODE_K_M = 237;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_M_VALUE = 237;
    /**
     * <code>ALL_TERRITORY_CODE_N_T_H_H = 238;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_T_H_H_VALUE = 238;
    /**
     * <code>ALL_TERRITORY_CODE_K_N = 239;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_N_VALUE = 239;
    /**
     * <code>ALL_TERRITORY_CODE_K_P = 240;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_P_VALUE = 240;
    /**
     * <code>ALL_TERRITORY_CODE_K_R = 241;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_R_VALUE = 241;
    /**
     * <code>ALL_TERRITORY_CODE_K_W = 242;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_W_VALUE = 242;
    /**
     * <code>ALL_TERRITORY_CODE_K_Y = 243;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_Y_VALUE = 243;
    /**
     * <code>ALL_TERRITORY_CODE_K_Z = 244;</code>
     */
    public static final int ALL_TERRITORY_CODE_K_Z_VALUE = 244;
    /**
     * <code>ALL_TERRITORY_CODE_780 = 245;</code>
     */
    public static final int ALL_TERRITORY_CODE_780_VALUE = 245;
    /**
     * <code>ALL_TERRITORY_CODE_C_S_H_H = 246;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_S_H_H_VALUE = 246;
    /**
     * <code>ALL_TERRITORY_CODE_540 = 247;</code>
     */
    public static final int ALL_TERRITORY_CODE_540_VALUE = 247;
    /**
     * <code>ALL_TERRITORY_CODE_662 = 248;</code>
     */
    public static final int ALL_TERRITORY_CODE_662_VALUE = 248;
    /**
     * <code>ALL_TERRITORY_CODE_300 = 249;</code>
     */
    public static final int ALL_TERRITORY_CODE_300_VALUE = 249;
    /**
     * <code>ALL_TERRITORY_CODE_784 = 250;</code>
     */
    public static final int ALL_TERRITORY_CODE_784_VALUE = 250;
    /**
     * <code>ALL_TERRITORY_CODE_422 = 251;</code>
     */
    public static final int ALL_TERRITORY_CODE_422_VALUE = 251;
    /**
     * <code>ALL_TERRITORY_CODE_L_A = 252;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_A_VALUE = 252;
    /**
     * <code>ALL_TERRITORY_CODE_L_B = 253;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_B_VALUE = 253;
    /**
     * <code>ALL_TERRITORY_CODE_L_C = 254;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_C_VALUE = 254;
    /**
     * <code>ALL_TERRITORY_CODE_788 = 255;</code>
     */
    public static final int ALL_TERRITORY_CODE_788_VALUE = 255;
    /**
     * <code>ALL_TERRITORY_CODE_426 = 256;</code>
     */
    public static final int ALL_TERRITORY_CODE_426_VALUE = 256;
    /**
     * <code>ALL_TERRITORY_CODE_548 = 257;</code>
     */
    public static final int ALL_TERRITORY_CODE_548_VALUE = 257;
    /**
     * <code>ALL_TERRITORY_CODE_428 = 258;</code>
     */
    public static final int ALL_TERRITORY_CODE_428_VALUE = 258;
    /**
     * <code>ALL_TERRITORY_CODE_308 = 259;</code>
     */
    public static final int ALL_TERRITORY_CODE_308_VALUE = 259;
    /**
     * <code>ALL_TERRITORY_CODE_L_I = 260;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_I_VALUE = 260;
    /**
     * <code>ALL_TERRITORY_CODE_L_K = 261;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_K_VALUE = 261;
    /**
     * <code>ALL_TERRITORY_CODE_L_R = 262;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_R_VALUE = 262;
    /**
     * <code>ALL_TERRITORY_CODE_L_S = 263;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_S_VALUE = 263;
    /**
     * <code>ALL_TERRITORY_CODE_L_T = 264;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_T_VALUE = 264;
    /**
     * <code>ALL_TERRITORY_CODE_L_U = 265;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_U_VALUE = 265;
    /**
     * <code>ALL_TERRITORY_CODE_L_V = 266;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_V_VALUE = 266;
    /**
     * <code>ALL_TERRITORY_CODE_L_Y = 267;</code>
     */
    public static final int ALL_TERRITORY_CODE_L_Y_VALUE = 267;
    /**
     * <code>ALL_TERRITORY_CODE_670 = 268;</code>
     */
    public static final int ALL_TERRITORY_CODE_670_VALUE = 268;
    /**
     * <code>ALL_TERRITORY_CODE_792 = 269;</code>
     */
    public static final int ALL_TERRITORY_CODE_792_VALUE = 269;
    /**
     * <code>ALL_TERRITORY_CODE_C_T_K_I = 270;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_T_K_I_VALUE = 270;
    /**
     * <code>ALL_TERRITORY_CODE_430 = 271;</code>
     */
    public static final int ALL_TERRITORY_CODE_430_VALUE = 271;
    /**
     * <code>ALL_TERRITORY_CODE_674 = 272;</code>
     */
    public static final int ALL_TERRITORY_CODE_674_VALUE = 272;
    /**
     * <code>ALL_TERRITORY_CODE_795 = 273;</code>
     */
    public static final int ALL_TERRITORY_CODE_795_VALUE = 273;
    /**
     * <code>ALL_TERRITORY_CODE_M_A = 274;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_A_VALUE = 274;
    /**
     * <code>ALL_TERRITORY_CODE_554 = 275;</code>
     */
    public static final int ALL_TERRITORY_CODE_554_VALUE = 275;
    /**
     * <code>ALL_TERRITORY_CODE_434 = 276;</code>
     */
    public static final int ALL_TERRITORY_CODE_434_VALUE = 276;
    /**
     * <code>ALL_TERRITORY_CODE_M_C = 277;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_C_VALUE = 277;
    /**
     * <code>ALL_TERRITORY_CODE_798 = 278;</code>
     */
    public static final int ALL_TERRITORY_CODE_798_VALUE = 278;
    /**
     * <code>ALL_TERRITORY_CODE_M_D = 279;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_D_VALUE = 279;
    /**
     * <code>ALL_TERRITORY_CODE_678 = 280;</code>
     */
    public static final int ALL_TERRITORY_CODE_678_VALUE = 280;
    /**
     * <code>ALL_TERRITORY_CODE_M_E = 281;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_E_VALUE = 281;
    /**
     * <code>ALL_TERRITORY_CODE_558 = 282;</code>
     */
    public static final int ALL_TERRITORY_CODE_558_VALUE = 282;
    /**
     * <code>ALL_TERRITORY_CODE_M_F = 283;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_F_VALUE = 283;
    /**
     * <code>ALL_TERRITORY_CODE_438 = 284;</code>
     */
    public static final int ALL_TERRITORY_CODE_438_VALUE = 284;
    /**
     * <code>ALL_TERRITORY_CODE_M_G = 285;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_G_VALUE = 285;
    /**
     * <code>ALL_TERRITORY_CODE_M_H = 286;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_H_VALUE = 286;
    /**
     * <code>ALL_TERRITORY_CODE_M_K = 287;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_K_VALUE = 287;
    /**
     * <code>ALL_TERRITORY_CODE_M_L = 288;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_L_VALUE = 288;
    /**
     * <code>ALL_TERRITORY_CODE_M_M = 289;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_M_VALUE = 289;
    /**
     * <code>ALL_TERRITORY_CODE_M_N = 290;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_N_VALUE = 290;
    /**
     * <code>ALL_TERRITORY_CODE_M_O = 291;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_O_VALUE = 291;
    /**
     * <code>ALL_TERRITORY_CODE_M_P = 292;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_P_VALUE = 292;
    /**
     * <code>ALL_TERRITORY_CODE_M_Q = 293;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_Q_VALUE = 293;
    /**
     * <code>ALL_TERRITORY_CODE_M_R = 294;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_R_VALUE = 294;
    /**
     * <code>ALL_TERRITORY_CODE_M_S = 295;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_S_VALUE = 295;
    /**
     * <code>ALL_TERRITORY_CODE_M_T = 296;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_T_VALUE = 296;
    /**
     * <code>ALL_TERRITORY_CODE_M_U = 297;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_U_VALUE = 297;
    /**
     * <code>ALL_TERRITORY_CODE_M_V = 298;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_V_VALUE = 298;
    /**
     * <code>ALL_TERRITORY_CODE_M_W = 299;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_W_VALUE = 299;
    /**
     * <code>ALL_TERRITORY_CODE_M_X = 300;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_X_VALUE = 300;
    /**
     * <code>ALL_TERRITORY_CODE_M_Y = 301;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_Y_VALUE = 301;
    /**
     * <code>ALL_TERRITORY_CODE_M_Z = 302;</code>
     */
    public static final int ALL_TERRITORY_CODE_M_Z_VALUE = 302;
    /**
     * <code>ALL_TERRITORY_CODE_440 = 303;</code>
     */
    public static final int ALL_TERRITORY_CODE_440_VALUE = 303;
    /**
     * <code>ALL_TERRITORY_CODE_682 = 304;</code>
     */
    public static final int ALL_TERRITORY_CODE_682_VALUE = 304;
    /**
     * <code>ALL_TERRITORY_CODE_320 = 305;</code>
     */
    public static final int ALL_TERRITORY_CODE_320_VALUE = 305;
    /**
     * <code>ALL_TERRITORY_CODE_562 = 306;</code>
     */
    public static final int ALL_TERRITORY_CODE_562_VALUE = 306;
    /**
     * <code>ALL_TERRITORY_CODE_200 = 307;</code>
     */
    public static final int ALL_TERRITORY_CODE_200_VALUE = 307;
    /**
     * <code>ALL_TERRITORY_CODE_442 = 308;</code>
     */
    public static final int ALL_TERRITORY_CODE_442_VALUE = 308;
    /**
     * <code>ALL_TERRITORY_CODE_N_A = 309;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_A_VALUE = 309;
    /**
     * <code>ALL_TERRITORY_CODE_Z_R_C_D = 310;</code>
     */
    public static final int ALL_TERRITORY_CODE_Z_R_C_D_VALUE = 310;
    /**
     * <code>ALL_TERRITORY_CODE_686 = 311;</code>
     */
    public static final int ALL_TERRITORY_CODE_686_VALUE = 311;
    /**
     * <code>ALL_TERRITORY_CODE_N_C = 312;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_C_VALUE = 312;
    /**
     * <code>ALL_TERRITORY_CODE_203 = 313;</code>
     */
    public static final int ALL_TERRITORY_CODE_203_VALUE = 313;
    /**
     * <code>ALL_TERRITORY_CODE_324 = 314;</code>
     */
    public static final int ALL_TERRITORY_CODE_324_VALUE = 314;
    /**
     * <code>ALL_TERRITORY_CODE_566 = 315;</code>
     */
    public static final int ALL_TERRITORY_CODE_566_VALUE = 315;
    /**
     * <code>ALL_TERRITORY_CODE_204 = 316;</code>
     */
    public static final int ALL_TERRITORY_CODE_204_VALUE = 316;
    /**
     * <code>ALL_TERRITORY_CODE_688 = 317;</code>
     */
    public static final int ALL_TERRITORY_CODE_688_VALUE = 317;
    /**
     * <code>ALL_TERRITORY_CODE_N_E = 318;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_E_VALUE = 318;
    /**
     * <code>ALL_TERRITORY_CODE_N_F = 319;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_F_VALUE = 319;
    /**
     * <code>ALL_TERRITORY_CODE_N_G = 320;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_G_VALUE = 320;
    /**
     * <code>ALL_TERRITORY_CODE_328 = 321;</code>
     */
    public static final int ALL_TERRITORY_CODE_328_VALUE = 321;
    /**
     * <code>ALL_TERRITORY_CODE_208 = 322;</code>
     */
    public static final int ALL_TERRITORY_CODE_208_VALUE = 322;
    /**
     * <code>ALL_TERRITORY_CODE_N_I = 323;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_I_VALUE = 323;
    /**
     * <code>ALL_TERRITORY_CODE_N_L = 324;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_L_VALUE = 324;
    /**
     * <code>ALL_TERRITORY_CODE_N_O = 325;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_O_VALUE = 325;
    /**
     * <code>ALL_TERRITORY_CODE_N_P = 326;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_P_VALUE = 326;
    /**
     * <code>ALL_TERRITORY_CODE_N_R = 327;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_R_VALUE = 327;
    /**
     * <code>ALL_TERRITORY_CODE_N_U = 328;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_U_VALUE = 328;
    /**
     * <code>ALL_TERRITORY_CODE_N_Z = 329;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_Z_VALUE = 329;
    /**
     * <code>ALL_TERRITORY_CODE_690 = 330;</code>
     */
    public static final int ALL_TERRITORY_CODE_690_VALUE = 330;
    /**
     * <code>ALL_TERRITORY_CODE_V_D_V_N = 331;</code>
     */
    public static final int ALL_TERRITORY_CODE_V_D_V_N_VALUE = 331;
    /**
     * <code>ALL_TERRITORY_CODE_450 = 332;</code>
     */
    public static final int ALL_TERRITORY_CODE_450_VALUE = 332;
    /**
     * <code>ALL_TERRITORY_CODE_694 = 333;</code>
     */
    public static final int ALL_TERRITORY_CODE_694_VALUE = 333;
    /**
     * <code>ALL_TERRITORY_CODE_332 = 334;</code>
     */
    public static final int ALL_TERRITORY_CODE_332_VALUE = 334;
    /**
     * <code>ALL_TERRITORY_CODE_212 = 335;</code>
     */
    public static final int ALL_TERRITORY_CODE_212_VALUE = 335;
    /**
     * <code>ALL_TERRITORY_CODE_454 = 336;</code>
     */
    public static final int ALL_TERRITORY_CODE_454_VALUE = 336;
    /**
     * <code>ALL_TERRITORY_CODE_T_P_T_L = 337;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_P_T_L_VALUE = 337;
    /**
     * <code>ALL_TERRITORY_CODE_214 = 338;</code>
     */
    public static final int ALL_TERRITORY_CODE_214_VALUE = 338;
    /**
     * <code>ALL_TERRITORY_CODE_336 = 339;</code>
     */
    public static final int ALL_TERRITORY_CODE_336_VALUE = 339;
    /**
     * <code>ALL_TERRITORY_CODE_578 = 340;</code>
     */
    public static final int ALL_TERRITORY_CODE_578_VALUE = 340;
    /**
     * <code>ALL_TERRITORY_CODE_458 = 341;</code>
     */
    public static final int ALL_TERRITORY_CODE_458_VALUE = 341;
    /**
     * <code>ALL_TERRITORY_CODE_218 = 342;</code>
     */
    public static final int ALL_TERRITORY_CODE_218_VALUE = 342;
    /**
     * <code>ALL_TERRITORY_CODE_N_H_V_U = 343;</code>
     */
    public static final int ALL_TERRITORY_CODE_N_H_V_U_VALUE = 343;
    /**
     * <code>ALL_TERRITORY_CODE_O_M = 344;</code>
     */
    public static final int ALL_TERRITORY_CODE_O_M_VALUE = 344;
    /**
     * <code>ALL_TERRITORY_CODE_340 = 345;</code>
     */
    public static final int ALL_TERRITORY_CODE_340_VALUE = 345;
    /**
     * <code>ALL_TERRITORY_CODE_462 = 346;</code>
     */
    public static final int ALL_TERRITORY_CODE_462_VALUE = 346;
    /**
     * <code>ALL_TERRITORY_CODE_583 = 347;</code>
     */
    public static final int ALL_TERRITORY_CODE_583_VALUE = 347;
    /**
     * <code>ALL_TERRITORY_CODE_H_V_B_F = 348;</code>
     */
    public static final int ALL_TERRITORY_CODE_H_V_B_F_VALUE = 348;
    /**
     * <code>ALL_TERRITORY_CODE_P_A = 349;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_A_VALUE = 349;
    /**
     * <code>ALL_TERRITORY_CODE_100 = 350;</code>
     */
    public static final int ALL_TERRITORY_CODE_100_VALUE = 350;
    /**
     * <code>ALL_TERRITORY_CODE_584 = 351;</code>
     */
    public static final int ALL_TERRITORY_CODE_584_VALUE = 351;
    /**
     * <code>ALL_TERRITORY_CODE_222 = 352;</code>
     */
    public static final int ALL_TERRITORY_CODE_222_VALUE = 352;
    /**
     * <code>ALL_TERRITORY_CODE_585 = 353;</code>
     */
    public static final int ALL_TERRITORY_CODE_585_VALUE = 353;
    /**
     * <code>ALL_TERRITORY_CODE_344 = 354;</code>
     */
    public static final int ALL_TERRITORY_CODE_344_VALUE = 354;
    /**
     * <code>ALL_TERRITORY_CODE_586 = 355;</code>
     */
    public static final int ALL_TERRITORY_CODE_586_VALUE = 355;
    /**
     * <code>ALL_TERRITORY_CODE_A_N_H_H = 356;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_N_H_H_VALUE = 356;
    /**
     * <code>ALL_TERRITORY_CODE_466 = 357;</code>
     */
    public static final int ALL_TERRITORY_CODE_466_VALUE = 357;
    /**
     * <code>ALL_TERRITORY_CODE_P_E = 358;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_E_VALUE = 358;
    /**
     * <code>ALL_TERRITORY_CODE_104 = 359;</code>
     */
    public static final int ALL_TERRITORY_CODE_104_VALUE = 359;
    /**
     * <code>ALL_TERRITORY_CODE_P_F = 360;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_F_VALUE = 360;
    /**
     * <code>ALL_TERRITORY_CODE_226 = 361;</code>
     */
    public static final int ALL_TERRITORY_CODE_226_VALUE = 361;
    /**
     * <code>ALL_TERRITORY_CODE_P_G = 362;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_G_VALUE = 362;
    /**
     * <code>ALL_TERRITORY_CODE_348 = 363;</code>
     */
    public static final int ALL_TERRITORY_CODE_348_VALUE = 363;
    /**
     * <code>ALL_TERRITORY_CODE_P_H = 364;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_H_VALUE = 364;
    /**
     * <code>ALL_TERRITORY_CODE_108 = 365;</code>
     */
    public static final int ALL_TERRITORY_CODE_108_VALUE = 365;
    /**
     * <code>ALL_TERRITORY_CODE_P_K = 366;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_K_VALUE = 366;
    /**
     * <code>ALL_TERRITORY_CODE_P_L = 367;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_L_VALUE = 367;
    /**
     * <code>ALL_TERRITORY_CODE_P_M = 368;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_M_VALUE = 368;
    /**
     * <code>ALL_TERRITORY_CODE_P_N = 369;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_N_VALUE = 369;
    /**
     * <code>ALL_TERRITORY_CODE_P_R = 370;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_R_VALUE = 370;
    /**
     * <code>ALL_TERRITORY_CODE_P_S = 371;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_S_VALUE = 371;
    /**
     * <code>ALL_TERRITORY_CODE_P_T = 372;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_T_VALUE = 372;
    /**
     * <code>ALL_TERRITORY_CODE_P_W = 373;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_W_VALUE = 373;
    /**
     * <code>ALL_TERRITORY_CODE_P_Y = 374;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_Y_VALUE = 374;
    /**
     * <code>ALL_TERRITORY_CODE_470 = 375;</code>
     */
    public static final int ALL_TERRITORY_CODE_470_VALUE = 375;
    /**
     * <code>ALL_TERRITORY_CODE_591 = 376;</code>
     */
    public static final int ALL_TERRITORY_CODE_591_VALUE = 376;
    /**
     * <code>ALL_TERRITORY_CODE_230 = 377;</code>
     */
    public static final int ALL_TERRITORY_CODE_230_VALUE = 377;
    /**
     * <code>ALL_TERRITORY_CODE_Q_A = 378;</code>
     */
    public static final int ALL_TERRITORY_CODE_Q_A_VALUE = 378;
    /**
     * <code>ALL_TERRITORY_CODE_231 = 379;</code>
     */
    public static final int ALL_TERRITORY_CODE_231_VALUE = 379;
    /**
     * <code>ALL_TERRITORY_CODE_352 = 380;</code>
     */
    public static final int ALL_TERRITORY_CODE_352_VALUE = 380;
    /**
     * <code>ALL_TERRITORY_CODE_232 = 381;</code>
     */
    public static final int ALL_TERRITORY_CODE_232_VALUE = 381;
    /**
     * <code>ALL_TERRITORY_CODE_112 = 382;</code>
     */
    public static final int ALL_TERRITORY_CODE_112_VALUE = 382;
    /**
     * <code>ALL_TERRITORY_CODE_233 = 383;</code>
     */
    public static final int ALL_TERRITORY_CODE_233_VALUE = 383;
    /**
     * <code>ALL_TERRITORY_CODE_E_S__MINUS___C_E = 384;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_S__MINUS___C_E_VALUE = 384;
    /**
     * <code>ALL_TERRITORY_CODE_356 = 385;</code>
     */
    public static final int ALL_TERRITORY_CODE_356_VALUE = 385;
    /**
     * <code>ALL_TERRITORY_CODE_598 = 386;</code>
     */
    public static final int ALL_TERRITORY_CODE_598_VALUE = 386;
    /**
     * <code>ALL_TERRITORY_CODE_478 = 387;</code>
     */
    public static final int ALL_TERRITORY_CODE_478_VALUE = 387;
    /**
     * <code>ALL_TERRITORY_CODE_116 = 388;</code>
     */
    public static final int ALL_TERRITORY_CODE_116_VALUE = 388;
    /**
     * <code>ALL_TERRITORY_CODE_P_C_H_H = 389;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_C_H_H_VALUE = 389;
    /**
     * <code>ALL_TERRITORY_CODE_E_S__MINUS___C_N = 390;</code>
     */
    public static final int ALL_TERRITORY_CODE_E_S__MINUS___C_N_VALUE = 390;
    /**
     * <code>ALL_TERRITORY_CODE_12 = 391;</code>
     */
    public static final int ALL_TERRITORY_CODE_12_VALUE = 391;
    /**
     * <code>ALL_TERRITORY_CODE_480 = 392;</code>
     */
    public static final int ALL_TERRITORY_CODE_480_VALUE = 392;
    /**
     * <code>ALL_TERRITORY_CODE_360 = 393;</code>
     */
    public static final int ALL_TERRITORY_CODE_360_VALUE = 393;
    /**
     * <code>ALL_TERRITORY_CODE_120 = 394;</code>
     */
    public static final int ALL_TERRITORY_CODE_120_VALUE = 394;
    /**
     * <code>ALL_TERRITORY_CODE_242 = 395;</code>
     */
    public static final int ALL_TERRITORY_CODE_242_VALUE = 395;
    /**
     * <code>ALL_TERRITORY_CODE_484 = 396;</code>
     */
    public static final int ALL_TERRITORY_CODE_484_VALUE = 396;
    /**
     * <code>ALL_TERRITORY_CODE_364 = 397;</code>
     */
    public static final int ALL_TERRITORY_CODE_364_VALUE = 397;
    /**
     * <code>ALL_TERRITORY_CODE_R_E = 398;</code>
     */
    public static final int ALL_TERRITORY_CODE_R_E_VALUE = 398;
    /**
     * <code>ALL_TERRITORY_CODE_124 = 399;</code>
     */
    public static final int ALL_TERRITORY_CODE_124_VALUE = 399;
    /**
     * <code>ALL_TERRITORY_CODE_246 = 400;</code>
     */
    public static final int ALL_TERRITORY_CODE_246_VALUE = 400;
    /**
     * <code>ALL_TERRITORY_CODE_368 = 401;</code>
     */
    public static final int ALL_TERRITORY_CODE_368_VALUE = 401;
    /**
     * <code>ALL_TERRITORY_CODE_R_O = 402;</code>
     */
    public static final int ALL_TERRITORY_CODE_R_O_VALUE = 402;
    /**
     * <code>ALL_TERRITORY_CODE_20 = 403;</code>
     */
    public static final int ALL_TERRITORY_CODE_20_VALUE = 403;
    /**
     * <code>ALL_TERRITORY_CODE_R_S = 404;</code>
     */
    public static final int ALL_TERRITORY_CODE_R_S_VALUE = 404;
    /**
     * <code>ALL_TERRITORY_CODE_24 = 405;</code>
     */
    public static final int ALL_TERRITORY_CODE_24_VALUE = 405;
    /**
     * <code>ALL_TERRITORY_CODE_R_U = 406;</code>
     */
    public static final int ALL_TERRITORY_CODE_R_U_VALUE = 406;
    /**
     * <code>ALL_TERRITORY_CODE_R_W = 407;</code>
     */
    public static final int ALL_TERRITORY_CODE_R_W_VALUE = 407;
    /**
     * <code>ALL_TERRITORY_CODE_28 = 408;</code>
     */
    public static final int ALL_TERRITORY_CODE_28_VALUE = 408;
    /**
     * <code>ALL_TERRITORY_CODE_250 = 409;</code>
     */
    public static final int ALL_TERRITORY_CODE_250_VALUE = 409;
    /**
     * <code>ALL_TERRITORY_CODE_492 = 410;</code>
     */
    public static final int ALL_TERRITORY_CODE_492_VALUE = 410;
    /**
     * <code>ALL_TERRITORY_CODE_S_A = 411;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_A_VALUE = 411;
    /**
     * <code>ALL_TERRITORY_CODE_372 = 412;</code>
     */
    public static final int ALL_TERRITORY_CODE_372_VALUE = 412;
    /**
     * <code>ALL_TERRITORY_CODE_S_B = 413;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_B_VALUE = 413;
    /**
     * <code>ALL_TERRITORY_CODE_S_C = 414;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_C_VALUE = 414;
    /**
     * <code>ALL_TERRITORY_CODE_132 = 415;</code>
     */
    public static final int ALL_TERRITORY_CODE_132_VALUE = 415;
    /**
     * <code>ALL_TERRITORY_CODE_S_D = 416;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_D_VALUE = 416;
    /**
     * <code>ALL_TERRITORY_CODE_496 = 417;</code>
     */
    public static final int ALL_TERRITORY_CODE_496_VALUE = 417;
    /**
     * <code>ALL_TERRITORY_CODE_S_E = 418;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_E_VALUE = 418;
    /**
     * <code>ALL_TERRITORY_CODE_376 = 419;</code>
     */
    public static final int ALL_TERRITORY_CODE_376_VALUE = 419;
    /**
     * <code>ALL_TERRITORY_CODE_498 = 420;</code>
     */
    public static final int ALL_TERRITORY_CODE_498_VALUE = 420;
    /**
     * <code>ALL_TERRITORY_CODE_S_G = 421;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_G_VALUE = 421;
    /**
     * <code>ALL_TERRITORY_CODE_499 = 422;</code>
     */
    public static final int ALL_TERRITORY_CODE_499_VALUE = 422;
    /**
     * <code>ALL_TERRITORY_CODE_S_H = 423;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_H_VALUE = 423;
    /**
     * <code>ALL_TERRITORY_CODE_258 = 424;</code>
     */
    public static final int ALL_TERRITORY_CODE_258_VALUE = 424;
    /**
     * <code>ALL_TERRITORY_CODE_S_I = 425;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_I_VALUE = 425;
    /**
     * <code>ALL_TERRITORY_CODE_S_J = 426;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_J_VALUE = 426;
    /**
     * <code>ALL_TERRITORY_CODE_S_K = 427;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_K_VALUE = 427;
    /**
     * <code>ALL_TERRITORY_CODE_S_L = 428;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_L_VALUE = 428;
    /**
     * <code>ALL_TERRITORY_CODE_S_M = 429;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_M_VALUE = 429;
    /**
     * <code>ALL_TERRITORY_CODE_S_N = 430;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_N_VALUE = 430;
    /**
     * <code>ALL_TERRITORY_CODE_S_O = 431;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_O_VALUE = 431;
    /**
     * <code>ALL_TERRITORY_CODE_31 = 432;</code>
     */
    public static final int ALL_TERRITORY_CODE_31_VALUE = 432;
    /**
     * <code>ALL_TERRITORY_CODE_S_R = 433;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_R_VALUE = 433;
    /**
     * <code>ALL_TERRITORY_CODE_32 = 434;</code>
     */
    public static final int ALL_TERRITORY_CODE_32_VALUE = 434;
    /**
     * <code>ALL_TERRITORY_CODE_S_S = 435;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_S_VALUE = 435;
    /**
     * <code>ALL_TERRITORY_CODE_S_T = 436;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_T_VALUE = 436;
    /**
     * <code>ALL_TERRITORY_CODE_S_V = 437;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_V_VALUE = 437;
    /**
     * <code>ALL_TERRITORY_CODE_36 = 438;</code>
     */
    public static final int ALL_TERRITORY_CODE_36_VALUE = 438;
    /**
     * <code>ALL_TERRITORY_CODE_S_X = 439;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_X_VALUE = 439;
    /**
     * <code>ALL_TERRITORY_CODE_S_Y = 440;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_Y_VALUE = 440;
    /**
     * <code>ALL_TERRITORY_CODE_S_Z = 441;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_Z_VALUE = 441;
    /**
     * <code>ALL_TERRITORY_CODE_380 = 442;</code>
     */
    public static final int ALL_TERRITORY_CODE_380_VALUE = 442;
    /**
     * <code>ALL_TERRITORY_CODE_140 = 443;</code>
     */
    public static final int ALL_TERRITORY_CODE_140_VALUE = 443;
    /**
     * <code>ALL_TERRITORY_CODE_262 = 444;</code>
     */
    public static final int ALL_TERRITORY_CODE_262_VALUE = 444;
    /**
     * <code>ALL_TERRITORY_CODE_T_C = 445;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_C_VALUE = 445;
    /**
     * <code>ALL_TERRITORY_CODE_384 = 446;</code>
     */
    public static final int ALL_TERRITORY_CODE_384_VALUE = 446;
    /**
     * <code>ALL_TERRITORY_CODE_T_D = 447;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_D_VALUE = 447;
    /**
     * <code>ALL_TERRITORY_CODE_144 = 448;</code>
     */
    public static final int ALL_TERRITORY_CODE_144_VALUE = 448;
    /**
     * <code>ALL_TERRITORY_CODE_T_F = 449;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_F_VALUE = 449;
    /**
     * <code>ALL_TERRITORY_CODE_266 = 450;</code>
     */
    public static final int ALL_TERRITORY_CODE_266_VALUE = 450;
    /**
     * <code>ALL_TERRITORY_CODE_T_G = 451;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_G_VALUE = 451;
    /**
     * <code>ALL_TERRITORY_CODE_388 = 452;</code>
     */
    public static final int ALL_TERRITORY_CODE_388_VALUE = 452;
    /**
     * <code>ALL_TERRITORY_CODE_T_H = 453;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_H_VALUE = 453;
    /**
     * <code>ALL_TERRITORY_CODE_268 = 454;</code>
     */
    public static final int ALL_TERRITORY_CODE_268_VALUE = 454;
    /**
     * <code>ALL_TERRITORY_CODE_148 = 455;</code>
     */
    public static final int ALL_TERRITORY_CODE_148_VALUE = 455;
    /**
     * <code>ALL_TERRITORY_CODE_T_J = 456;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_J_VALUE = 456;
    /**
     * <code>ALL_TERRITORY_CODE_T_K = 457;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_K_VALUE = 457;
    /**
     * <code>ALL_TERRITORY_CODE_T_L = 458;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_L_VALUE = 458;
    /**
     * <code>ALL_TERRITORY_CODE_T_M = 459;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_M_VALUE = 459;
    /**
     * <code>ALL_TERRITORY_CODE_T_N = 460;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_N_VALUE = 460;
    /**
     * <code>ALL_TERRITORY_CODE_T_O = 461;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_O_VALUE = 461;
    /**
     * <code>ALL_TERRITORY_CODE_40 = 462;</code>
     */
    public static final int ALL_TERRITORY_CODE_40_VALUE = 462;
    /**
     * <code>ALL_TERRITORY_CODE_T_R = 463;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_R_VALUE = 463;
    /**
     * <code>ALL_TERRITORY_CODE_G_E_H_H = 464;</code>
     */
    public static final int ALL_TERRITORY_CODE_G_E_H_H_VALUE = 464;
    /**
     * <code>ALL_TERRITORY_CODE_T_T = 465;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_T_VALUE = 465;
    /**
     * <code>ALL_TERRITORY_CODE_44 = 466;</code>
     */
    public static final int ALL_TERRITORY_CODE_44_VALUE = 466;
    /**
     * <code>ALL_TERRITORY_CODE_T_V = 467;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_V_VALUE = 467;
    /**
     * <code>ALL_TERRITORY_CODE_T_W = 468;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_W_VALUE = 468;
    /**
     * <code>ALL_TERRITORY_CODE_48 = 469;</code>
     */
    public static final int ALL_TERRITORY_CODE_48_VALUE = 469;
    /**
     * <code>ALL_TERRITORY_CODE_T_Z = 470;</code>
     */
    public static final int ALL_TERRITORY_CODE_T_Z_VALUE = 470;
    /**
     * <code>ALL_TERRITORY_CODE_270 = 471;</code>
     */
    public static final int ALL_TERRITORY_CODE_270_VALUE = 471;
    /**
     * <code>ALL_TERRITORY_CODE_U_A = 472;</code>
     */
    public static final int ALL_TERRITORY_CODE_U_A_VALUE = 472;
    /**
     * <code>ALL_TERRITORY_CODE_392 = 473;</code>
     */
    public static final int ALL_TERRITORY_CODE_392_VALUE = 473;
    /**
     * <code>ALL_TERRITORY_CODE_152 = 474;</code>
     */
    public static final int ALL_TERRITORY_CODE_152_VALUE = 474;
    /**
     * <code>ALL_TERRITORY_CODE_276 = 475;</code>
     */
    public static final int ALL_TERRITORY_CODE_276_VALUE = 475;
    /**
     * <code>ALL_TERRITORY_CODE_U_G = 476;</code>
     */
    public static final int ALL_TERRITORY_CODE_U_G_VALUE = 476;
    /**
     * <code>ALL_TERRITORY_CODE_156 = 477;</code>
     */
    public static final int ALL_TERRITORY_CODE_156_VALUE = 477;
    /**
     * <code>ALL_TERRITORY_CODE_398 = 478;</code>
     */
    public static final int ALL_TERRITORY_CODE_398_VALUE = 478;
    /**
     * <code>ALL_TERRITORY_CODE_278 = 479;</code>
     */
    public static final int ALL_TERRITORY_CODE_278_VALUE = 479;
    /**
     * <code>ALL_TERRITORY_CODE_158 = 480;</code>
     */
    public static final int ALL_TERRITORY_CODE_158_VALUE = 480;
    /**
     * <code>ALL_TERRITORY_CODE_U_M = 481;</code>
     */
    public static final int ALL_TERRITORY_CODE_U_M_VALUE = 481;
    /**
     * <code>ALL_TERRITORY_CODE_50 = 482;</code>
     */
    public static final int ALL_TERRITORY_CODE_50_VALUE = 482;
    /**
     * <code>ALL_TERRITORY_CODE_51 = 483;</code>
     */
    public static final int ALL_TERRITORY_CODE_51_VALUE = 483;
    /**
     * <code>ALL_TERRITORY_CODE_52 = 484;</code>
     */
    public static final int ALL_TERRITORY_CODE_52_VALUE = 484;
    /**
     * <code>ALL_TERRITORY_CODE_U_S = 485;</code>
     */
    public static final int ALL_TERRITORY_CODE_U_S_VALUE = 485;
    /**
     * <code>ALL_TERRITORY_CODE_56 = 486;</code>
     */
    public static final int ALL_TERRITORY_CODE_56_VALUE = 486;
    /**
     * <code>ALL_TERRITORY_CODE_U_Y = 487;</code>
     */
    public static final int ALL_TERRITORY_CODE_U_Y_VALUE = 487;
    /**
     * <code>ALL_TERRITORY_CODE_U_Z = 488;</code>
     */
    public static final int ALL_TERRITORY_CODE_U_Z_VALUE = 488;
    /**
     * <code>ALL_TERRITORY_CODE_B_Y_A_A = 489;</code>
     */
    public static final int ALL_TERRITORY_CODE_B_Y_A_A_VALUE = 489;
    /**
     * <code>ALL_TERRITORY_CODE_280 = 490;</code>
     */
    public static final int ALL_TERRITORY_CODE_280_VALUE = 490;
    /**
     * <code>ALL_TERRITORY_CODE_V_A = 491;</code>
     */
    public static final int ALL_TERRITORY_CODE_V_A_VALUE = 491;
    /**
     * <code>ALL_TERRITORY_CODE_V_C = 492;</code>
     */
    public static final int ALL_TERRITORY_CODE_V_C_VALUE = 492;
    /**
     * <code>ALL_TERRITORY_CODE_V_E = 493;</code>
     */
    public static final int ALL_TERRITORY_CODE_V_E_VALUE = 493;
    /**
     * <code>ALL_TERRITORY_CODE_A_I_D_J = 494;</code>
     */
    public static final int ALL_TERRITORY_CODE_A_I_D_J_VALUE = 494;
    /**
     * <code>ALL_TERRITORY_CODE_V_G = 495;</code>
     */
    public static final int ALL_TERRITORY_CODE_V_G_VALUE = 495;
    /**
     * <code>ALL_TERRITORY_CODE_288 = 496;</code>
     */
    public static final int ALL_TERRITORY_CODE_288_VALUE = 496;
    /**
     * <code>ALL_TERRITORY_CODE_V_I = 497;</code>
     */
    public static final int ALL_TERRITORY_CODE_V_I_VALUE = 497;
    /**
     * <code>ALL_TERRITORY_CODE_V_N = 498;</code>
     */
    public static final int ALL_TERRITORY_CODE_V_N_VALUE = 498;
    /**
     * <code>ALL_TERRITORY_CODE_64 = 499;</code>
     */
    public static final int ALL_TERRITORY_CODE_64_VALUE = 499;
    /**
     * <code>ALL_TERRITORY_CODE_V_U = 500;</code>
     */
    public static final int ALL_TERRITORY_CODE_V_U_VALUE = 500;
    /**
     * <code>ALL_TERRITORY_CODE_68 = 501;</code>
     */
    public static final int ALL_TERRITORY_CODE_68_VALUE = 501;
    /**
     * <code>ALL_TERRITORY_CODE_S_U_H_H = 502;</code>
     */
    public static final int ALL_TERRITORY_CODE_S_U_H_H_VALUE = 502;
    /**
     * <code>ALL_TERRITORY_CODE_170 = 503;</code>
     */
    public static final int ALL_TERRITORY_CODE_170_VALUE = 503;
    /**
     * <code>ALL_TERRITORY_CODE_174 = 504;</code>
     */
    public static final int ALL_TERRITORY_CODE_174_VALUE = 504;
    /**
     * <code>ALL_TERRITORY_CODE_W_F = 505;</code>
     */
    public static final int ALL_TERRITORY_CODE_W_F_VALUE = 505;
    /**
     * <code>ALL_TERRITORY_CODE_296 = 506;</code>
     */
    public static final int ALL_TERRITORY_CODE_296_VALUE = 506;
    /**
     * <code>ALL_TERRITORY_CODE_178 = 507;</code>
     */
    public static final int ALL_TERRITORY_CODE_178_VALUE = 507;
    /**
     * <code>ALL_TERRITORY_CODE_70 = 508;</code>
     */
    public static final int ALL_TERRITORY_CODE_70_VALUE = 508;
    /**
     * <code>ALL_TERRITORY_CODE_72 = 509;</code>
     */
    public static final int ALL_TERRITORY_CODE_72_VALUE = 509;
    /**
     * <code>ALL_TERRITORY_CODE_W_S = 510;</code>
     */
    public static final int ALL_TERRITORY_CODE_W_S_VALUE = 510;
    /**
     * <code>ALL_TERRITORY_CODE_76 = 511;</code>
     */
    public static final int ALL_TERRITORY_CODE_76_VALUE = 511;
    /**
     * <code>ALL_TERRITORY_CODE_180 = 512;</code>
     */
    public static final int ALL_TERRITORY_CODE_180_VALUE = 512;
    /**
     * <code>ALL_TERRITORY_CODE_188 = 513;</code>
     */
    public static final int ALL_TERRITORY_CODE_188_VALUE = 513;
    /**
     * <code>ALL_TERRITORY_CODE_X_K = 514;</code>
     */
    public static final int ALL_TERRITORY_CODE_X_K_VALUE = 514;
    /**
     * <code>ALL_TERRITORY_CODE_84 = 515;</code>
     */
    public static final int ALL_TERRITORY_CODE_84_VALUE = 515;
    /**
     * <code>ALL_TERRITORY_CODE_191 = 516;</code>
     */
    public static final int ALL_TERRITORY_CODE_191_VALUE = 516;
    /**
     * <code>ALL_TERRITORY_CODE_192 = 517;</code>
     */
    public static final int ALL_TERRITORY_CODE_192_VALUE = 517;
    /**
     * <code>ALL_TERRITORY_CODE_Y_E = 518;</code>
     */
    public static final int ALL_TERRITORY_CODE_Y_E_VALUE = 518;
    /**
     * <code>ALL_TERRITORY_CODE_196 = 519;</code>
     */
    public static final int ALL_TERRITORY_CODE_196_VALUE = 519;
    /**
     * <code>ALL_TERRITORY_CODE_90 = 520;</code>
     */
    public static final int ALL_TERRITORY_CODE_90_VALUE = 520;
    /**
     * <code>ALL_TERRITORY_CODE_Y_T = 521;</code>
     */
    public static final int ALL_TERRITORY_CODE_Y_T_VALUE = 521;
    /**
     * <code>ALL_TERRITORY_CODE_96 = 522;</code>
     */
    public static final int ALL_TERRITORY_CODE_96_VALUE = 522;
    /**
     * <code>ALL_TERRITORY_CODE_Z_A = 523;</code>
     */
    public static final int ALL_TERRITORY_CODE_Z_A_VALUE = 523;
    /**
     * <code>ALL_TERRITORY_CODE_F_Q_H_H = 524;</code>
     */
    public static final int ALL_TERRITORY_CODE_F_Q_H_H_VALUE = 524;
    /**
     * <code>ALL_TERRITORY_CODE_WORLDWIDE = 525;</code>
     */
    public static final int ALL_TERRITORY_CODE_WORLDWIDE_VALUE = 525;
    /**
     * <code>ALL_TERRITORY_CODE_Z_M = 526;</code>
     */
    public static final int ALL_TERRITORY_CODE_Z_M_VALUE = 526;
    /**
     * <code>ALL_TERRITORY_CODE_Z_W = 527;</code>
     */
    public static final int ALL_TERRITORY_CODE_Z_W_VALUE = 527;
    /**
     * <code>ALL_TERRITORY_CODE_C_S_X_X = 528;</code>
     */
    public static final int ALL_TERRITORY_CODE_C_S_X_X_VALUE = 528;
    /**
     * <code>ALL_TERRITORY_CODE_P_U_U_M = 529;</code>
     */
    public static final int ALL_TERRITORY_CODE_P_U_U_M_VALUE = 529;
    /**
     * <code>ALL_TERRITORY_CODE_Y_D_Y_E = 530;</code>
     */
    public static final int ALL_TERRITORY_CODE_Y_D_Y_E_VALUE = 530;
    /**
     * <code>ALL_TERRITORY_CODE_D_Y_B_J = 531;</code>
     */
    public static final int ALL_TERRITORY_CODE_D_Y_B_J_VALUE = 531;
    /**
     * <code>ALL_TERRITORY_CODE_R_H_Z_W = 532;</code>
     */
    public static final int ALL_TERRITORY_CODE_R_H_Z_W_VALUE = 532;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AllTerritoryCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AllTerritoryCode forNumber(int value) {
      switch (value) {
        case 0: return ALL_TERRITORY_CODE_A_D;
        case 1: return ALL_TERRITORY_CODE_A_E;
        case 2: return ALL_TERRITORY_CODE_A_F;
        case 3: return ALL_TERRITORY_CODE_A_G;
        case 4: return ALL_TERRITORY_CODE_A_I;
        case 5: return ALL_TERRITORY_CODE_A_L;
        case 6: return ALL_TERRITORY_CODE_A_M;
        case 7: return ALL_TERRITORY_CODE_A_N;
        case 8: return ALL_TERRITORY_CODE_A_O;
        case 9: return ALL_TERRITORY_CODE_A_Q;
        case 10: return ALL_TERRITORY_CODE_A_R;
        case 11: return ALL_TERRITORY_CODE_A_S;
        case 12: return ALL_TERRITORY_CODE_A_T;
        case 13: return ALL_TERRITORY_CODE_A_U;
        case 14: return ALL_TERRITORY_CODE_4;
        case 15: return ALL_TERRITORY_CODE_A_W;
        case 16: return ALL_TERRITORY_CODE_A_X;
        case 17: return ALL_TERRITORY_CODE_8;
        case 18: return ALL_TERRITORY_CODE_800;
        case 19: return ALL_TERRITORY_CODE_A_Z;
        case 20: return ALL_TERRITORY_CODE_804;
        case 21: return ALL_TERRITORY_CODE_B_A;
        case 22: return ALL_TERRITORY_CODE_807;
        case 23: return ALL_TERRITORY_CODE_B_B;
        case 24: return ALL_TERRITORY_CODE_B_D;
        case 25: return ALL_TERRITORY_CODE_B_E;
        case 26: return ALL_TERRITORY_CODE_B_F;
        case 27: return ALL_TERRITORY_CODE_W_K_U_M;
        case 28: return ALL_TERRITORY_CODE_B_G;
        case 29: return ALL_TERRITORY_CODE_B_H;
        case 30: return ALL_TERRITORY_CODE_B_I;
        case 31: return ALL_TERRITORY_CODE_B_J;
        case 32: return ALL_TERRITORY_CODE_B_L;
        case 33: return ALL_TERRITORY_CODE_B_M;
        case 34: return ALL_TERRITORY_CODE_B_N;
        case 35: return ALL_TERRITORY_CODE_B_O;
        case 36: return ALL_TERRITORY_CODE_B_Q;
        case 37: return ALL_TERRITORY_CODE_B_R;
        case 38: return ALL_TERRITORY_CODE_B_S;
        case 39: return ALL_TERRITORY_CODE_B_T;
        case 40: return ALL_TERRITORY_CODE_B_V;
        case 41: return ALL_TERRITORY_CODE_B_W;
        case 42: return ALL_TERRITORY_CODE_B_Y;
        case 43: return ALL_TERRITORY_CODE_810;
        case 44: return ALL_TERRITORY_CODE_B_Z;
        case 45: return ALL_TERRITORY_CODE_C_A;
        case 46: return ALL_TERRITORY_CODE_818;
        case 47: return ALL_TERRITORY_CODE_C_C;
        case 48: return ALL_TERRITORY_CODE_C_D;
        case 49: return ALL_TERRITORY_CODE_C_F;
        case 50: return ALL_TERRITORY_CODE_C_G;
        case 51: return ALL_TERRITORY_CODE_C_H;
        case 52: return ALL_TERRITORY_CODE_C_I;
        case 53: return ALL_TERRITORY_CODE_C_K;
        case 54: return ALL_TERRITORY_CODE_2100;
        case 55: return ALL_TERRITORY_CODE_C_L;
        case 56: return ALL_TERRITORY_CODE_C_M;
        case 57: return ALL_TERRITORY_CODE_C_N;
        case 58: return ALL_TERRITORY_CODE_C_O;
        case 59: return ALL_TERRITORY_CODE_C_R;
        case 60: return ALL_TERRITORY_CODE_C_S;
        case 61: return ALL_TERRITORY_CODE_C_U;
        case 62: return ALL_TERRITORY_CODE_C_V;
        case 63: return ALL_TERRITORY_CODE_C_W;
        case 64: return ALL_TERRITORY_CODE_C_X;
        case 65: return ALL_TERRITORY_CODE_C_Y;
        case 66: return ALL_TERRITORY_CODE_C_Z;
        case 67: return ALL_TERRITORY_CODE_702;
        case 68: return ALL_TERRITORY_CODE_703;
        case 69: return ALL_TERRITORY_CODE_704;
        case 70: return ALL_TERRITORY_CODE_705;
        case 71: return ALL_TERRITORY_CODE_826;
        case 72: return ALL_TERRITORY_CODE_706;
        case 73: return ALL_TERRITORY_CODE_D_E;
        case 74: return ALL_TERRITORY_CODE_D_J;
        case 75: return ALL_TERRITORY_CODE_D_K;
        case 76: return ALL_TERRITORY_CODE_2111;
        case 77: return ALL_TERRITORY_CODE_D_M;
        case 78: return ALL_TERRITORY_CODE_2110;
        case 79: return ALL_TERRITORY_CODE_D_O;
        case 80: return ALL_TERRITORY_CODE_2108;
        case 81: return ALL_TERRITORY_CODE_2107;
        case 82: return ALL_TERRITORY_CODE_2106;
        case 83: return ALL_TERRITORY_CODE_2105;
        case 84: return ALL_TERRITORY_CODE_2104;
        case 85: return ALL_TERRITORY_CODE_2103;
        case 86: return ALL_TERRITORY_CODE_D_Z;
        case 87: return ALL_TERRITORY_CODE_710;
        case 88: return ALL_TERRITORY_CODE_2102;
        case 89: return ALL_TERRITORY_CODE_2101;
        case 90: return ALL_TERRITORY_CODE_834;
        case 91: return ALL_TERRITORY_CODE_716;
        case 92: return ALL_TERRITORY_CODE_E_C;
        case 93: return ALL_TERRITORY_CODE_2109;
        case 94: return ALL_TERRITORY_CODE_E_E;
        case 95: return ALL_TERRITORY_CODE_B_Q_A_Q;
        case 96: return ALL_TERRITORY_CODE_E_G;
        case 97: return ALL_TERRITORY_CODE_E_H;
        case 98: return ALL_TERRITORY_CODE_Y_U_C_S;
        case 99: return ALL_TERRITORY_CODE_2122;
        case 100: return ALL_TERRITORY_CODE_2121;
        case 101: return ALL_TERRITORY_CODE_2120;
        case 102: return ALL_TERRITORY_CODE_E_R;
        case 103: return ALL_TERRITORY_CODE_E_S;
        case 104: return ALL_TERRITORY_CODE_E_T;
        case 105: return ALL_TERRITORY_CODE_2119;
        case 106: return ALL_TERRITORY_CODE_2118;
        case 107: return ALL_TERRITORY_CODE_2117;
        case 108: return ALL_TERRITORY_CODE_2116;
        case 109: return ALL_TERRITORY_CODE_840;
        case 110: return ALL_TERRITORY_CODE_2115;
        case 111: return ALL_TERRITORY_CODE_720;
        case 112: return ALL_TERRITORY_CODE_2114;
        case 113: return ALL_TERRITORY_CODE_600;
        case 114: return ALL_TERRITORY_CODE_2113;
        case 115: return ALL_TERRITORY_CODE_2112;
        case 116: return ALL_TERRITORY_CODE_724;
        case 117: return ALL_TERRITORY_CODE_604;
        case 118: return ALL_TERRITORY_CODE_728;
        case 119: return ALL_TERRITORY_CODE_608;
        case 120: return ALL_TERRITORY_CODE_729;
        case 121: return ALL_TERRITORY_CODE_F_I;
        case 122: return ALL_TERRITORY_CODE_F_J;
        case 123: return ALL_TERRITORY_CODE_F_K;
        case 124: return ALL_TERRITORY_CODE_F_M;
        case 125: return ALL_TERRITORY_CODE_2133;
        case 126: return ALL_TERRITORY_CODE_F_O;
        case 127: return ALL_TERRITORY_CODE_2132;
        case 128: return ALL_TERRITORY_CODE_2131;
        case 129: return ALL_TERRITORY_CODE_2130;
        case 130: return ALL_TERRITORY_CODE_F_R;
        case 131: return ALL_TERRITORY_CODE_2129;
        case 132: return ALL_TERRITORY_CODE_2128;
        case 133: return ALL_TERRITORY_CODE_2127;
        case 134: return ALL_TERRITORY_CODE_2126;
        case 135: return ALL_TERRITORY_CODE_2125;
        case 136: return ALL_TERRITORY_CODE_732;
        case 137: return ALL_TERRITORY_CODE_2124;
        case 138: return ALL_TERRITORY_CODE_854;
        case 139: return ALL_TERRITORY_CODE_2123;
        case 140: return ALL_TERRITORY_CODE_G_A;
        case 141: return ALL_TERRITORY_CODE_736;
        case 142: return ALL_TERRITORY_CODE_G_B;
        case 143: return ALL_TERRITORY_CODE_616;
        case 144: return ALL_TERRITORY_CODE_858;
        case 145: return ALL_TERRITORY_CODE_G_D;
        case 146: return ALL_TERRITORY_CODE_G_E;
        case 147: return ALL_TERRITORY_CODE_G_F;
        case 148: return ALL_TERRITORY_CODE_G_G;
        case 149: return ALL_TERRITORY_CODE_G_H;
        case 150: return ALL_TERRITORY_CODE_G_I;
        case 151: return ALL_TERRITORY_CODE_G_L;
        case 152: return ALL_TERRITORY_CODE_G_M;
        case 153: return ALL_TERRITORY_CODE_G_N;
        case 154: return ALL_TERRITORY_CODE_G_P;
        case 155: return ALL_TERRITORY_CODE_G_Q;
        case 156: return ALL_TERRITORY_CODE_G_R;
        case 157: return ALL_TERRITORY_CODE_E_S__MINUS___M_L;
        case 158: return ALL_TERRITORY_CODE_G_S;
        case 159: return ALL_TERRITORY_CODE_G_T;
        case 160: return ALL_TERRITORY_CODE_G_U;
        case 161: return ALL_TERRITORY_CODE_G_W;
        case 162: return ALL_TERRITORY_CODE_G_Y;
        case 163: return ALL_TERRITORY_CODE_860;
        case 164: return ALL_TERRITORY_CODE_740;
        case 165: return ALL_TERRITORY_CODE_620;
        case 166: return ALL_TERRITORY_CODE_862;
        case 167: return ALL_TERRITORY_CODE_2136;
        case 168: return ALL_TERRITORY_CODE_2134;
        case 169: return ALL_TERRITORY_CODE_624;
        case 170: return ALL_TERRITORY_CODE_504;
        case 171: return ALL_TERRITORY_CODE_626;
        case 172: return ALL_TERRITORY_CODE_748;
        case 173: return ALL_TERRITORY_CODE_508;
        case 174: return ALL_TERRITORY_CODE_H_K;
        case 175: return ALL_TERRITORY_CODE_H_M;
        case 176: return ALL_TERRITORY_CODE_H_N;
        case 177: return ALL_TERRITORY_CODE_H_R;
        case 178: return ALL_TERRITORY_CODE_H_T;
        case 179: return ALL_TERRITORY_CODE_H_U;
        case 180: return ALL_TERRITORY_CODE_M_I_U_M;
        case 181: return ALL_TERRITORY_CODE_630;
        case 182: return ALL_TERRITORY_CODE_752;
        case 183: return ALL_TERRITORY_CODE_512;
        case 184: return ALL_TERRITORY_CODE_634;
        case 185: return ALL_TERRITORY_CODE_N_Q_A_Q;
        case 186: return ALL_TERRITORY_CODE_756;
        case 187: return ALL_TERRITORY_CODE_516;
        case 188: return ALL_TERRITORY_CODE_I_D;
        case 189: return ALL_TERRITORY_CODE_I_E;
        case 190: return ALL_TERRITORY_CODE_D_D_D_E;
        case 191: return ALL_TERRITORY_CODE_I_L;
        case 192: return ALL_TERRITORY_CODE_I_M;
        case 193: return ALL_TERRITORY_CODE_I_N;
        case 194: return ALL_TERRITORY_CODE_I_O;
        case 195: return ALL_TERRITORY_CODE_I_Q;
        case 196: return ALL_TERRITORY_CODE_I_R;
        case 197: return ALL_TERRITORY_CODE_I_S;
        case 198: return ALL_TERRITORY_CODE_I_T;
        case 199: return ALL_TERRITORY_CODE_B_U_M_M;
        case 200: return ALL_TERRITORY_CODE_760;
        case 201: return ALL_TERRITORY_CODE_882;
        case 202: return ALL_TERRITORY_CODE_520;
        case 203: return ALL_TERRITORY_CODE_762;
        case 204: return ALL_TERRITORY_CODE_400;
        case 205: return ALL_TERRITORY_CODE_642;
        case 206: return ALL_TERRITORY_CODE_643;
        case 207: return ALL_TERRITORY_CODE_764;
        case 208: return ALL_TERRITORY_CODE_886;
        case 209: return ALL_TERRITORY_CODE_524;
        case 210: return ALL_TERRITORY_CODE_887;
        case 211: return ALL_TERRITORY_CODE_404;
        case 212: return ALL_TERRITORY_CODE_646;
        case 213: return ALL_TERRITORY_CODE_768;
        case 214: return ALL_TERRITORY_CODE_J_E;
        case 215: return ALL_TERRITORY_CODE_528;
        case 216: return ALL_TERRITORY_CODE_408;
        case 217: return ALL_TERRITORY_CODE_F_X_F_R;
        case 218: return ALL_TERRITORY_CODE_J_T_U_M;
        case 219: return ALL_TERRITORY_CODE_J_M;
        case 220: return ALL_TERRITORY_CODE_J_O;
        case 221: return ALL_TERRITORY_CODE_J_P;
        case 222: return ALL_TERRITORY_CODE_890;
        case 223: return ALL_TERRITORY_CODE_891;
        case 224: return ALL_TERRITORY_CODE_410;
        case 225: return ALL_TERRITORY_CODE_894;
        case 226: return ALL_TERRITORY_CODE_776;
        case 227: return ALL_TERRITORY_CODE_414;
        case 228: return ALL_TERRITORY_CODE_K_E;
        case 229: return ALL_TERRITORY_CODE_417;
        case 230: return ALL_TERRITORY_CODE_659;
        case 231: return ALL_TERRITORY_CODE_418;
        case 232: return ALL_TERRITORY_CODE_S_K_I_N;
        case 233: return ALL_TERRITORY_CODE_K_G;
        case 234: return ALL_TERRITORY_CODE_K_H;
        case 235: return ALL_TERRITORY_CODE_K_I;
        case 236: return ALL_TERRITORY_CODE_P_Z_P_A;
        case 237: return ALL_TERRITORY_CODE_K_M;
        case 238: return ALL_TERRITORY_CODE_N_T_H_H;
        case 239: return ALL_TERRITORY_CODE_K_N;
        case 240: return ALL_TERRITORY_CODE_K_P;
        case 241: return ALL_TERRITORY_CODE_K_R;
        case 242: return ALL_TERRITORY_CODE_K_W;
        case 243: return ALL_TERRITORY_CODE_K_Y;
        case 244: return ALL_TERRITORY_CODE_K_Z;
        case 245: return ALL_TERRITORY_CODE_780;
        case 246: return ALL_TERRITORY_CODE_C_S_H_H;
        case 247: return ALL_TERRITORY_CODE_540;
        case 248: return ALL_TERRITORY_CODE_662;
        case 249: return ALL_TERRITORY_CODE_300;
        case 250: return ALL_TERRITORY_CODE_784;
        case 251: return ALL_TERRITORY_CODE_422;
        case 252: return ALL_TERRITORY_CODE_L_A;
        case 253: return ALL_TERRITORY_CODE_L_B;
        case 254: return ALL_TERRITORY_CODE_L_C;
        case 255: return ALL_TERRITORY_CODE_788;
        case 256: return ALL_TERRITORY_CODE_426;
        case 257: return ALL_TERRITORY_CODE_548;
        case 258: return ALL_TERRITORY_CODE_428;
        case 259: return ALL_TERRITORY_CODE_308;
        case 260: return ALL_TERRITORY_CODE_L_I;
        case 261: return ALL_TERRITORY_CODE_L_K;
        case 262: return ALL_TERRITORY_CODE_L_R;
        case 263: return ALL_TERRITORY_CODE_L_S;
        case 264: return ALL_TERRITORY_CODE_L_T;
        case 265: return ALL_TERRITORY_CODE_L_U;
        case 266: return ALL_TERRITORY_CODE_L_V;
        case 267: return ALL_TERRITORY_CODE_L_Y;
        case 268: return ALL_TERRITORY_CODE_670;
        case 269: return ALL_TERRITORY_CODE_792;
        case 270: return ALL_TERRITORY_CODE_C_T_K_I;
        case 271: return ALL_TERRITORY_CODE_430;
        case 272: return ALL_TERRITORY_CODE_674;
        case 273: return ALL_TERRITORY_CODE_795;
        case 274: return ALL_TERRITORY_CODE_M_A;
        case 275: return ALL_TERRITORY_CODE_554;
        case 276: return ALL_TERRITORY_CODE_434;
        case 277: return ALL_TERRITORY_CODE_M_C;
        case 278: return ALL_TERRITORY_CODE_798;
        case 279: return ALL_TERRITORY_CODE_M_D;
        case 280: return ALL_TERRITORY_CODE_678;
        case 281: return ALL_TERRITORY_CODE_M_E;
        case 282: return ALL_TERRITORY_CODE_558;
        case 283: return ALL_TERRITORY_CODE_M_F;
        case 284: return ALL_TERRITORY_CODE_438;
        case 285: return ALL_TERRITORY_CODE_M_G;
        case 286: return ALL_TERRITORY_CODE_M_H;
        case 287: return ALL_TERRITORY_CODE_M_K;
        case 288: return ALL_TERRITORY_CODE_M_L;
        case 289: return ALL_TERRITORY_CODE_M_M;
        case 290: return ALL_TERRITORY_CODE_M_N;
        case 291: return ALL_TERRITORY_CODE_M_O;
        case 292: return ALL_TERRITORY_CODE_M_P;
        case 293: return ALL_TERRITORY_CODE_M_Q;
        case 294: return ALL_TERRITORY_CODE_M_R;
        case 295: return ALL_TERRITORY_CODE_M_S;
        case 296: return ALL_TERRITORY_CODE_M_T;
        case 297: return ALL_TERRITORY_CODE_M_U;
        case 298: return ALL_TERRITORY_CODE_M_V;
        case 299: return ALL_TERRITORY_CODE_M_W;
        case 300: return ALL_TERRITORY_CODE_M_X;
        case 301: return ALL_TERRITORY_CODE_M_Y;
        case 302: return ALL_TERRITORY_CODE_M_Z;
        case 303: return ALL_TERRITORY_CODE_440;
        case 304: return ALL_TERRITORY_CODE_682;
        case 305: return ALL_TERRITORY_CODE_320;
        case 306: return ALL_TERRITORY_CODE_562;
        case 307: return ALL_TERRITORY_CODE_200;
        case 308: return ALL_TERRITORY_CODE_442;
        case 309: return ALL_TERRITORY_CODE_N_A;
        case 310: return ALL_TERRITORY_CODE_Z_R_C_D;
        case 311: return ALL_TERRITORY_CODE_686;
        case 312: return ALL_TERRITORY_CODE_N_C;
        case 313: return ALL_TERRITORY_CODE_203;
        case 314: return ALL_TERRITORY_CODE_324;
        case 315: return ALL_TERRITORY_CODE_566;
        case 316: return ALL_TERRITORY_CODE_204;
        case 317: return ALL_TERRITORY_CODE_688;
        case 318: return ALL_TERRITORY_CODE_N_E;
        case 319: return ALL_TERRITORY_CODE_N_F;
        case 320: return ALL_TERRITORY_CODE_N_G;
        case 321: return ALL_TERRITORY_CODE_328;
        case 322: return ALL_TERRITORY_CODE_208;
        case 323: return ALL_TERRITORY_CODE_N_I;
        case 324: return ALL_TERRITORY_CODE_N_L;
        case 325: return ALL_TERRITORY_CODE_N_O;
        case 326: return ALL_TERRITORY_CODE_N_P;
        case 327: return ALL_TERRITORY_CODE_N_R;
        case 328: return ALL_TERRITORY_CODE_N_U;
        case 329: return ALL_TERRITORY_CODE_N_Z;
        case 330: return ALL_TERRITORY_CODE_690;
        case 331: return ALL_TERRITORY_CODE_V_D_V_N;
        case 332: return ALL_TERRITORY_CODE_450;
        case 333: return ALL_TERRITORY_CODE_694;
        case 334: return ALL_TERRITORY_CODE_332;
        case 335: return ALL_TERRITORY_CODE_212;
        case 336: return ALL_TERRITORY_CODE_454;
        case 337: return ALL_TERRITORY_CODE_T_P_T_L;
        case 338: return ALL_TERRITORY_CODE_214;
        case 339: return ALL_TERRITORY_CODE_336;
        case 340: return ALL_TERRITORY_CODE_578;
        case 341: return ALL_TERRITORY_CODE_458;
        case 342: return ALL_TERRITORY_CODE_218;
        case 343: return ALL_TERRITORY_CODE_N_H_V_U;
        case 344: return ALL_TERRITORY_CODE_O_M;
        case 345: return ALL_TERRITORY_CODE_340;
        case 346: return ALL_TERRITORY_CODE_462;
        case 347: return ALL_TERRITORY_CODE_583;
        case 348: return ALL_TERRITORY_CODE_H_V_B_F;
        case 349: return ALL_TERRITORY_CODE_P_A;
        case 350: return ALL_TERRITORY_CODE_100;
        case 351: return ALL_TERRITORY_CODE_584;
        case 352: return ALL_TERRITORY_CODE_222;
        case 353: return ALL_TERRITORY_CODE_585;
        case 354: return ALL_TERRITORY_CODE_344;
        case 355: return ALL_TERRITORY_CODE_586;
        case 356: return ALL_TERRITORY_CODE_A_N_H_H;
        case 357: return ALL_TERRITORY_CODE_466;
        case 358: return ALL_TERRITORY_CODE_P_E;
        case 359: return ALL_TERRITORY_CODE_104;
        case 360: return ALL_TERRITORY_CODE_P_F;
        case 361: return ALL_TERRITORY_CODE_226;
        case 362: return ALL_TERRITORY_CODE_P_G;
        case 363: return ALL_TERRITORY_CODE_348;
        case 364: return ALL_TERRITORY_CODE_P_H;
        case 365: return ALL_TERRITORY_CODE_108;
        case 366: return ALL_TERRITORY_CODE_P_K;
        case 367: return ALL_TERRITORY_CODE_P_L;
        case 368: return ALL_TERRITORY_CODE_P_M;
        case 369: return ALL_TERRITORY_CODE_P_N;
        case 370: return ALL_TERRITORY_CODE_P_R;
        case 371: return ALL_TERRITORY_CODE_P_S;
        case 372: return ALL_TERRITORY_CODE_P_T;
        case 373: return ALL_TERRITORY_CODE_P_W;
        case 374: return ALL_TERRITORY_CODE_P_Y;
        case 375: return ALL_TERRITORY_CODE_470;
        case 376: return ALL_TERRITORY_CODE_591;
        case 377: return ALL_TERRITORY_CODE_230;
        case 378: return ALL_TERRITORY_CODE_Q_A;
        case 379: return ALL_TERRITORY_CODE_231;
        case 380: return ALL_TERRITORY_CODE_352;
        case 381: return ALL_TERRITORY_CODE_232;
        case 382: return ALL_TERRITORY_CODE_112;
        case 383: return ALL_TERRITORY_CODE_233;
        case 384: return ALL_TERRITORY_CODE_E_S__MINUS___C_E;
        case 385: return ALL_TERRITORY_CODE_356;
        case 386: return ALL_TERRITORY_CODE_598;
        case 387: return ALL_TERRITORY_CODE_478;
        case 388: return ALL_TERRITORY_CODE_116;
        case 389: return ALL_TERRITORY_CODE_P_C_H_H;
        case 390: return ALL_TERRITORY_CODE_E_S__MINUS___C_N;
        case 391: return ALL_TERRITORY_CODE_12;
        case 392: return ALL_TERRITORY_CODE_480;
        case 393: return ALL_TERRITORY_CODE_360;
        case 394: return ALL_TERRITORY_CODE_120;
        case 395: return ALL_TERRITORY_CODE_242;
        case 396: return ALL_TERRITORY_CODE_484;
        case 397: return ALL_TERRITORY_CODE_364;
        case 398: return ALL_TERRITORY_CODE_R_E;
        case 399: return ALL_TERRITORY_CODE_124;
        case 400: return ALL_TERRITORY_CODE_246;
        case 401: return ALL_TERRITORY_CODE_368;
        case 402: return ALL_TERRITORY_CODE_R_O;
        case 403: return ALL_TERRITORY_CODE_20;
        case 404: return ALL_TERRITORY_CODE_R_S;
        case 405: return ALL_TERRITORY_CODE_24;
        case 406: return ALL_TERRITORY_CODE_R_U;
        case 407: return ALL_TERRITORY_CODE_R_W;
        case 408: return ALL_TERRITORY_CODE_28;
        case 409: return ALL_TERRITORY_CODE_250;
        case 410: return ALL_TERRITORY_CODE_492;
        case 411: return ALL_TERRITORY_CODE_S_A;
        case 412: return ALL_TERRITORY_CODE_372;
        case 413: return ALL_TERRITORY_CODE_S_B;
        case 414: return ALL_TERRITORY_CODE_S_C;
        case 415: return ALL_TERRITORY_CODE_132;
        case 416: return ALL_TERRITORY_CODE_S_D;
        case 417: return ALL_TERRITORY_CODE_496;
        case 418: return ALL_TERRITORY_CODE_S_E;
        case 419: return ALL_TERRITORY_CODE_376;
        case 420: return ALL_TERRITORY_CODE_498;
        case 421: return ALL_TERRITORY_CODE_S_G;
        case 422: return ALL_TERRITORY_CODE_499;
        case 423: return ALL_TERRITORY_CODE_S_H;
        case 424: return ALL_TERRITORY_CODE_258;
        case 425: return ALL_TERRITORY_CODE_S_I;
        case 426: return ALL_TERRITORY_CODE_S_J;
        case 427: return ALL_TERRITORY_CODE_S_K;
        case 428: return ALL_TERRITORY_CODE_S_L;
        case 429: return ALL_TERRITORY_CODE_S_M;
        case 430: return ALL_TERRITORY_CODE_S_N;
        case 431: return ALL_TERRITORY_CODE_S_O;
        case 432: return ALL_TERRITORY_CODE_31;
        case 433: return ALL_TERRITORY_CODE_S_R;
        case 434: return ALL_TERRITORY_CODE_32;
        case 435: return ALL_TERRITORY_CODE_S_S;
        case 436: return ALL_TERRITORY_CODE_S_T;
        case 437: return ALL_TERRITORY_CODE_S_V;
        case 438: return ALL_TERRITORY_CODE_36;
        case 439: return ALL_TERRITORY_CODE_S_X;
        case 440: return ALL_TERRITORY_CODE_S_Y;
        case 441: return ALL_TERRITORY_CODE_S_Z;
        case 442: return ALL_TERRITORY_CODE_380;
        case 443: return ALL_TERRITORY_CODE_140;
        case 444: return ALL_TERRITORY_CODE_262;
        case 445: return ALL_TERRITORY_CODE_T_C;
        case 446: return ALL_TERRITORY_CODE_384;
        case 447: return ALL_TERRITORY_CODE_T_D;
        case 448: return ALL_TERRITORY_CODE_144;
        case 449: return ALL_TERRITORY_CODE_T_F;
        case 450: return ALL_TERRITORY_CODE_266;
        case 451: return ALL_TERRITORY_CODE_T_G;
        case 452: return ALL_TERRITORY_CODE_388;
        case 453: return ALL_TERRITORY_CODE_T_H;
        case 454: return ALL_TERRITORY_CODE_268;
        case 455: return ALL_TERRITORY_CODE_148;
        case 456: return ALL_TERRITORY_CODE_T_J;
        case 457: return ALL_TERRITORY_CODE_T_K;
        case 458: return ALL_TERRITORY_CODE_T_L;
        case 459: return ALL_TERRITORY_CODE_T_M;
        case 460: return ALL_TERRITORY_CODE_T_N;
        case 461: return ALL_TERRITORY_CODE_T_O;
        case 462: return ALL_TERRITORY_CODE_40;
        case 463: return ALL_TERRITORY_CODE_T_R;
        case 464: return ALL_TERRITORY_CODE_G_E_H_H;
        case 465: return ALL_TERRITORY_CODE_T_T;
        case 466: return ALL_TERRITORY_CODE_44;
        case 467: return ALL_TERRITORY_CODE_T_V;
        case 468: return ALL_TERRITORY_CODE_T_W;
        case 469: return ALL_TERRITORY_CODE_48;
        case 470: return ALL_TERRITORY_CODE_T_Z;
        case 471: return ALL_TERRITORY_CODE_270;
        case 472: return ALL_TERRITORY_CODE_U_A;
        case 473: return ALL_TERRITORY_CODE_392;
        case 474: return ALL_TERRITORY_CODE_152;
        case 475: return ALL_TERRITORY_CODE_276;
        case 476: return ALL_TERRITORY_CODE_U_G;
        case 477: return ALL_TERRITORY_CODE_156;
        case 478: return ALL_TERRITORY_CODE_398;
        case 479: return ALL_TERRITORY_CODE_278;
        case 480: return ALL_TERRITORY_CODE_158;
        case 481: return ALL_TERRITORY_CODE_U_M;
        case 482: return ALL_TERRITORY_CODE_50;
        case 483: return ALL_TERRITORY_CODE_51;
        case 484: return ALL_TERRITORY_CODE_52;
        case 485: return ALL_TERRITORY_CODE_U_S;
        case 486: return ALL_TERRITORY_CODE_56;
        case 487: return ALL_TERRITORY_CODE_U_Y;
        case 488: return ALL_TERRITORY_CODE_U_Z;
        case 489: return ALL_TERRITORY_CODE_B_Y_A_A;
        case 490: return ALL_TERRITORY_CODE_280;
        case 491: return ALL_TERRITORY_CODE_V_A;
        case 492: return ALL_TERRITORY_CODE_V_C;
        case 493: return ALL_TERRITORY_CODE_V_E;
        case 494: return ALL_TERRITORY_CODE_A_I_D_J;
        case 495: return ALL_TERRITORY_CODE_V_G;
        case 496: return ALL_TERRITORY_CODE_288;
        case 497: return ALL_TERRITORY_CODE_V_I;
        case 498: return ALL_TERRITORY_CODE_V_N;
        case 499: return ALL_TERRITORY_CODE_64;
        case 500: return ALL_TERRITORY_CODE_V_U;
        case 501: return ALL_TERRITORY_CODE_68;
        case 502: return ALL_TERRITORY_CODE_S_U_H_H;
        case 503: return ALL_TERRITORY_CODE_170;
        case 504: return ALL_TERRITORY_CODE_174;
        case 505: return ALL_TERRITORY_CODE_W_F;
        case 506: return ALL_TERRITORY_CODE_296;
        case 507: return ALL_TERRITORY_CODE_178;
        case 508: return ALL_TERRITORY_CODE_70;
        case 509: return ALL_TERRITORY_CODE_72;
        case 510: return ALL_TERRITORY_CODE_W_S;
        case 511: return ALL_TERRITORY_CODE_76;
        case 512: return ALL_TERRITORY_CODE_180;
        case 513: return ALL_TERRITORY_CODE_188;
        case 514: return ALL_TERRITORY_CODE_X_K;
        case 515: return ALL_TERRITORY_CODE_84;
        case 516: return ALL_TERRITORY_CODE_191;
        case 517: return ALL_TERRITORY_CODE_192;
        case 518: return ALL_TERRITORY_CODE_Y_E;
        case 519: return ALL_TERRITORY_CODE_196;
        case 520: return ALL_TERRITORY_CODE_90;
        case 521: return ALL_TERRITORY_CODE_Y_T;
        case 522: return ALL_TERRITORY_CODE_96;
        case 523: return ALL_TERRITORY_CODE_Z_A;
        case 524: return ALL_TERRITORY_CODE_F_Q_H_H;
        case 525: return ALL_TERRITORY_CODE_WORLDWIDE;
        case 526: return ALL_TERRITORY_CODE_Z_M;
        case 527: return ALL_TERRITORY_CODE_Z_W;
        case 528: return ALL_TERRITORY_CODE_C_S_X_X;
        case 529: return ALL_TERRITORY_CODE_P_U_U_M;
        case 530: return ALL_TERRITORY_CODE_Y_D_Y_E;
        case 531: return ALL_TERRITORY_CODE_D_Y_B_J;
        case 532: return ALL_TERRITORY_CODE_R_H_Z_W;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AllTerritoryCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AllTerritoryCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AllTerritoryCode>() {
            public AllTerritoryCode findValueByNumber(int number) {
              return AllTerritoryCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(6);
    }

    private static final AllTerritoryCode[] VALUES = values();

    public static AllTerritoryCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AllTerritoryCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AllTerritoryCode)
  }

  /**
   * Protobuf enum {@code avs.ArtistRole}
   */
  public enum ArtistRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ARTIST_ROLE_CALLIGRAPHER = 0;</code>
     */
    ARTIST_ROLE_CALLIGRAPHER(0),
    /**
     * <code>ARTIST_ROLE_CARTOONIST = 1;</code>
     */
    ARTIST_ROLE_CARTOONIST(1),
    /**
     * <code>ARTIST_ROLE_DRAUGHTSMAN = 2;</code>
     */
    ARTIST_ROLE_DRAUGHTSMAN(2),
    /**
     * <code>ARTIST_ROLE_ART_COPYIST = 3;</code>
     */
    ARTIST_ROLE_ART_COPYIST(3),
    /**
     * <code>ARTIST_ROLE_DELINEATOR = 4;</code>
     */
    ARTIST_ROLE_DELINEATOR(4),
    /**
     * <code>ARTIST_ROLE_COMPUTER_PROGRAMMER = 5;</code>
     */
    ARTIST_ROLE_COMPUTER_PROGRAMMER(5),
    /**
     * <code>ARTIST_ROLE_DESIGNER = 6;</code>
     */
    ARTIST_ROLE_DESIGNER(6),
    /**
     * <code>ARTIST_ROLE_UNKNOWN = 7;</code>
     */
    ARTIST_ROLE_UNKNOWN(7),
    /**
     * <code>ARTIST_ROLE_ILLUSTRATOR = 8;</code>
     */
    ARTIST_ROLE_ILLUSTRATOR(8),
    /**
     * <code>ARTIST_ROLE_MUSIC_COPYIST = 9;</code>
     */
    ARTIST_ROLE_MUSIC_COPYIST(9),
    /**
     * <code>ARTIST_ROLE_COMPUTER_GRAPHIC_CREATOR = 10;</code>
     */
    ARTIST_ROLE_COMPUTER_GRAPHIC_CREATOR(10),
    /**
     * <code>ARTIST_ROLE_PHOTOGRAPHER = 11;</code>
     */
    ARTIST_ROLE_PHOTOGRAPHER(11),
    /**
     * <code>ARTIST_ROLE_CARTOGRAPHER = 12;</code>
     */
    ARTIST_ROLE_CARTOGRAPHER(12),
    /**
     * <code>ARTIST_ROLE_PAINTER = 13;</code>
     */
    ARTIST_ROLE_PAINTER(13),
    /**
     * <code>ARTIST_ROLE_FACSIMILIST = 14;</code>
     */
    ARTIST_ROLE_FACSIMILIST(14),
    /**
     * <code>ARTIST_ROLE_GRAPHIC_ARTIST = 15;</code>
     */
    ARTIST_ROLE_GRAPHIC_ARTIST(15),
    /**
     * <code>ARTIST_ROLE_TYPE_DESIGNER = 16;</code>
     */
    ARTIST_ROLE_TYPE_DESIGNER(16),
    /**
     * <code>ARTIST_ROLE_NOT_SPECIFIED = 17;</code>
     */
    ARTIST_ROLE_NOT_SPECIFIED(17),
    /**
     * <code>ARTIST_ROLE_USER_DEFINED = 18;</code>
     */
    ARTIST_ROLE_USER_DEFINED(18),
    ;

    /**
     * <code>ARTIST_ROLE_CALLIGRAPHER = 0;</code>
     */
    public static final int ARTIST_ROLE_CALLIGRAPHER_VALUE = 0;
    /**
     * <code>ARTIST_ROLE_CARTOONIST = 1;</code>
     */
    public static final int ARTIST_ROLE_CARTOONIST_VALUE = 1;
    /**
     * <code>ARTIST_ROLE_DRAUGHTSMAN = 2;</code>
     */
    public static final int ARTIST_ROLE_DRAUGHTSMAN_VALUE = 2;
    /**
     * <code>ARTIST_ROLE_ART_COPYIST = 3;</code>
     */
    public static final int ARTIST_ROLE_ART_COPYIST_VALUE = 3;
    /**
     * <code>ARTIST_ROLE_DELINEATOR = 4;</code>
     */
    public static final int ARTIST_ROLE_DELINEATOR_VALUE = 4;
    /**
     * <code>ARTIST_ROLE_COMPUTER_PROGRAMMER = 5;</code>
     */
    public static final int ARTIST_ROLE_COMPUTER_PROGRAMMER_VALUE = 5;
    /**
     * <code>ARTIST_ROLE_DESIGNER = 6;</code>
     */
    public static final int ARTIST_ROLE_DESIGNER_VALUE = 6;
    /**
     * <code>ARTIST_ROLE_UNKNOWN = 7;</code>
     */
    public static final int ARTIST_ROLE_UNKNOWN_VALUE = 7;
    /**
     * <code>ARTIST_ROLE_ILLUSTRATOR = 8;</code>
     */
    public static final int ARTIST_ROLE_ILLUSTRATOR_VALUE = 8;
    /**
     * <code>ARTIST_ROLE_MUSIC_COPYIST = 9;</code>
     */
    public static final int ARTIST_ROLE_MUSIC_COPYIST_VALUE = 9;
    /**
     * <code>ARTIST_ROLE_COMPUTER_GRAPHIC_CREATOR = 10;</code>
     */
    public static final int ARTIST_ROLE_COMPUTER_GRAPHIC_CREATOR_VALUE = 10;
    /**
     * <code>ARTIST_ROLE_PHOTOGRAPHER = 11;</code>
     */
    public static final int ARTIST_ROLE_PHOTOGRAPHER_VALUE = 11;
    /**
     * <code>ARTIST_ROLE_CARTOGRAPHER = 12;</code>
     */
    public static final int ARTIST_ROLE_CARTOGRAPHER_VALUE = 12;
    /**
     * <code>ARTIST_ROLE_PAINTER = 13;</code>
     */
    public static final int ARTIST_ROLE_PAINTER_VALUE = 13;
    /**
     * <code>ARTIST_ROLE_FACSIMILIST = 14;</code>
     */
    public static final int ARTIST_ROLE_FACSIMILIST_VALUE = 14;
    /**
     * <code>ARTIST_ROLE_GRAPHIC_ARTIST = 15;</code>
     */
    public static final int ARTIST_ROLE_GRAPHIC_ARTIST_VALUE = 15;
    /**
     * <code>ARTIST_ROLE_TYPE_DESIGNER = 16;</code>
     */
    public static final int ARTIST_ROLE_TYPE_DESIGNER_VALUE = 16;
    /**
     * <code>ARTIST_ROLE_NOT_SPECIFIED = 17;</code>
     */
    public static final int ARTIST_ROLE_NOT_SPECIFIED_VALUE = 17;
    /**
     * <code>ARTIST_ROLE_USER_DEFINED = 18;</code>
     */
    public static final int ARTIST_ROLE_USER_DEFINED_VALUE = 18;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ArtistRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ArtistRole forNumber(int value) {
      switch (value) {
        case 0: return ARTIST_ROLE_CALLIGRAPHER;
        case 1: return ARTIST_ROLE_CARTOONIST;
        case 2: return ARTIST_ROLE_DRAUGHTSMAN;
        case 3: return ARTIST_ROLE_ART_COPYIST;
        case 4: return ARTIST_ROLE_DELINEATOR;
        case 5: return ARTIST_ROLE_COMPUTER_PROGRAMMER;
        case 6: return ARTIST_ROLE_DESIGNER;
        case 7: return ARTIST_ROLE_UNKNOWN;
        case 8: return ARTIST_ROLE_ILLUSTRATOR;
        case 9: return ARTIST_ROLE_MUSIC_COPYIST;
        case 10: return ARTIST_ROLE_COMPUTER_GRAPHIC_CREATOR;
        case 11: return ARTIST_ROLE_PHOTOGRAPHER;
        case 12: return ARTIST_ROLE_CARTOGRAPHER;
        case 13: return ARTIST_ROLE_PAINTER;
        case 14: return ARTIST_ROLE_FACSIMILIST;
        case 15: return ARTIST_ROLE_GRAPHIC_ARTIST;
        case 16: return ARTIST_ROLE_TYPE_DESIGNER;
        case 17: return ARTIST_ROLE_NOT_SPECIFIED;
        case 18: return ARTIST_ROLE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ArtistRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ArtistRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ArtistRole>() {
            public ArtistRole findValueByNumber(int number) {
              return ArtistRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(7);
    }

    private static final ArtistRole[] VALUES = values();

    public static ArtistRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ArtistRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ArtistRole)
  }

  /**
   * Protobuf enum {@code avs.ArtistType}
   */
  public enum ArtistType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ARTIST_TYPE_DUET = 0;</code>
     */
    ARTIST_TYPE_DUET(0),
    /**
     * <code>ARTIST_TYPE_STRING_QUARTET = 1;</code>
     */
    ARTIST_TYPE_STRING_QUARTET(1),
    /**
     * <code>ARTIST_TYPE_WIND_ENSEMBLE = 2;</code>
     */
    ARTIST_TYPE_WIND_ENSEMBLE(2),
    /**
     * <code>ARTIST_TYPE_INSTRUMENT_AND_ACCOMPANIMENT = 3;</code>
     */
    ARTIST_TYPE_INSTRUMENT_AND_ACCOMPANIMENT(3),
    /**
     * <code>ARTIST_TYPE_JAZZ_COMBO = 4;</code>
     */
    ARTIST_TYPE_JAZZ_COMBO(4),
    /**
     * <code>ARTIST_TYPE_SOLO_INSTRUMENT = 5;</code>
     */
    ARTIST_TYPE_SOLO_INSTRUMENT(5),
    /**
     * <code>ARTIST_TYPE_FOLK_GROUP = 6;</code>
     */
    ARTIST_TYPE_FOLK_GROUP(6),
    /**
     * <code>ARTIST_TYPE_REGGAE_BAND = 7;</code>
     */
    ARTIST_TYPE_REGGAE_BAND(7),
    /**
     * <code>ARTIST_TYPE_ELECTRONIC_GROUP = 8;</code>
     */
    ARTIST_TYPE_ELECTRONIC_GROUP(8),
    /**
     * <code>ARTIST_TYPE_USER_DEFINED = 9;</code>
     */
    ARTIST_TYPE_USER_DEFINED(9),
    /**
     * <code>ARTIST_TYPE_PIANO_ENSEMBLE = 10;</code>
     */
    ARTIST_TYPE_PIANO_ENSEMBLE(10),
    /**
     * <code>ARTIST_TYPE_MARCHING_BAND = 11;</code>
     */
    ARTIST_TYPE_MARCHING_BAND(11),
    /**
     * <code>ARTIST_TYPE_PIANO_TRIO = 12;</code>
     */
    ARTIST_TYPE_PIANO_TRIO(12),
    /**
     * <code>ARTIST_TYPE_POP_BAND = 13;</code>
     */
    ARTIST_TYPE_POP_BAND(13),
    /**
     * <code>ARTIST_TYPE_A_CAPPELLA_ENSEMBLE = 14;</code>
     */
    ARTIST_TYPE_A_CAPPELLA_ENSEMBLE(14),
    /**
     * <code>ARTIST_TYPE_TRIO = 15;</code>
     */
    ARTIST_TYPE_TRIO(15),
    /**
     * <code>ARTIST_TYPE_VOICE_AND_ACCOMPANIMENT = 16;</code>
     */
    ARTIST_TYPE_VOICE_AND_ACCOMPANIMENT(16),
    /**
     * <code>ARTIST_TYPE_STRING_QUINTET = 17;</code>
     */
    ARTIST_TYPE_STRING_QUINTET(17),
    /**
     * <code>ARTIST_TYPE_BIG_BAND = 18;</code>
     */
    ARTIST_TYPE_BIG_BAND(18),
    /**
     * <code>ARTIST_TYPE_ORCHESTRA = 19;</code>
     */
    ARTIST_TYPE_ORCHESTRA(19),
    /**
     * <code>ARTIST_TYPE_COUNTRY_GROUP = 20;</code>
     */
    ARTIST_TYPE_COUNTRY_GROUP(20),
    /**
     * <code>ARTIST_TYPE_CHAMBER_ORCHESTRA = 21;</code>
     */
    ARTIST_TYPE_CHAMBER_ORCHESTRA(21),
    /**
     * <code>ARTIST_TYPE_MARIACHI_BAND = 22;</code>
     */
    ARTIST_TYPE_MARIACHI_BAND(22),
    /**
     * <code>ARTIST_TYPE_BARBERSHOP_ENSEMBLE = 23;</code>
     */
    ARTIST_TYPE_BARBERSHOP_ENSEMBLE(23),
    /**
     * <code>ARTIST_TYPE_PIPE_AND_DRUM_GROUP = 24;</code>
     */
    ARTIST_TYPE_PIPE_AND_DRUM_GROUP(24),
    /**
     * <code>ARTIST_TYPE_PIANO_QUINTET = 25;</code>
     */
    ARTIST_TYPE_PIANO_QUINTET(25),
    /**
     * <code>ARTIST_TYPE_FIFE_AND_DRUM_CORPS = 26;</code>
     */
    ARTIST_TYPE_FIFE_AND_DRUM_CORPS(26),
    /**
     * <code>ARTIST_TYPE_ROCK_BAND = 27;</code>
     */
    ARTIST_TYPE_ROCK_BAND(27),
    /**
     * <code>ARTIST_TYPE_BRASS_BAND = 28;</code>
     */
    ARTIST_TYPE_BRASS_BAND(28),
    /**
     * <code>ARTIST_TYPE_LATIN_GROUP = 29;</code>
     */
    ARTIST_TYPE_LATIN_GROUP(29),
    /**
     * <code>ARTIST_TYPE_PIANO_QUARTET = 30;</code>
     */
    ARTIST_TYPE_PIANO_QUARTET(30),
    /**
     * <code>ARTIST_TYPE_SOLO_VOICE = 31;</code>
     */
    ARTIST_TYPE_SOLO_VOICE(31),
    /**
     * <code>ARTIST_TYPE_STRING_ENSEMBLE = 32;</code>
     */
    ARTIST_TYPE_STRING_ENSEMBLE(32),
    ;

    /**
     * <code>ARTIST_TYPE_DUET = 0;</code>
     */
    public static final int ARTIST_TYPE_DUET_VALUE = 0;
    /**
     * <code>ARTIST_TYPE_STRING_QUARTET = 1;</code>
     */
    public static final int ARTIST_TYPE_STRING_QUARTET_VALUE = 1;
    /**
     * <code>ARTIST_TYPE_WIND_ENSEMBLE = 2;</code>
     */
    public static final int ARTIST_TYPE_WIND_ENSEMBLE_VALUE = 2;
    /**
     * <code>ARTIST_TYPE_INSTRUMENT_AND_ACCOMPANIMENT = 3;</code>
     */
    public static final int ARTIST_TYPE_INSTRUMENT_AND_ACCOMPANIMENT_VALUE = 3;
    /**
     * <code>ARTIST_TYPE_JAZZ_COMBO = 4;</code>
     */
    public static final int ARTIST_TYPE_JAZZ_COMBO_VALUE = 4;
    /**
     * <code>ARTIST_TYPE_SOLO_INSTRUMENT = 5;</code>
     */
    public static final int ARTIST_TYPE_SOLO_INSTRUMENT_VALUE = 5;
    /**
     * <code>ARTIST_TYPE_FOLK_GROUP = 6;</code>
     */
    public static final int ARTIST_TYPE_FOLK_GROUP_VALUE = 6;
    /**
     * <code>ARTIST_TYPE_REGGAE_BAND = 7;</code>
     */
    public static final int ARTIST_TYPE_REGGAE_BAND_VALUE = 7;
    /**
     * <code>ARTIST_TYPE_ELECTRONIC_GROUP = 8;</code>
     */
    public static final int ARTIST_TYPE_ELECTRONIC_GROUP_VALUE = 8;
    /**
     * <code>ARTIST_TYPE_USER_DEFINED = 9;</code>
     */
    public static final int ARTIST_TYPE_USER_DEFINED_VALUE = 9;
    /**
     * <code>ARTIST_TYPE_PIANO_ENSEMBLE = 10;</code>
     */
    public static final int ARTIST_TYPE_PIANO_ENSEMBLE_VALUE = 10;
    /**
     * <code>ARTIST_TYPE_MARCHING_BAND = 11;</code>
     */
    public static final int ARTIST_TYPE_MARCHING_BAND_VALUE = 11;
    /**
     * <code>ARTIST_TYPE_PIANO_TRIO = 12;</code>
     */
    public static final int ARTIST_TYPE_PIANO_TRIO_VALUE = 12;
    /**
     * <code>ARTIST_TYPE_POP_BAND = 13;</code>
     */
    public static final int ARTIST_TYPE_POP_BAND_VALUE = 13;
    /**
     * <code>ARTIST_TYPE_A_CAPPELLA_ENSEMBLE = 14;</code>
     */
    public static final int ARTIST_TYPE_A_CAPPELLA_ENSEMBLE_VALUE = 14;
    /**
     * <code>ARTIST_TYPE_TRIO = 15;</code>
     */
    public static final int ARTIST_TYPE_TRIO_VALUE = 15;
    /**
     * <code>ARTIST_TYPE_VOICE_AND_ACCOMPANIMENT = 16;</code>
     */
    public static final int ARTIST_TYPE_VOICE_AND_ACCOMPANIMENT_VALUE = 16;
    /**
     * <code>ARTIST_TYPE_STRING_QUINTET = 17;</code>
     */
    public static final int ARTIST_TYPE_STRING_QUINTET_VALUE = 17;
    /**
     * <code>ARTIST_TYPE_BIG_BAND = 18;</code>
     */
    public static final int ARTIST_TYPE_BIG_BAND_VALUE = 18;
    /**
     * <code>ARTIST_TYPE_ORCHESTRA = 19;</code>
     */
    public static final int ARTIST_TYPE_ORCHESTRA_VALUE = 19;
    /**
     * <code>ARTIST_TYPE_COUNTRY_GROUP = 20;</code>
     */
    public static final int ARTIST_TYPE_COUNTRY_GROUP_VALUE = 20;
    /**
     * <code>ARTIST_TYPE_CHAMBER_ORCHESTRA = 21;</code>
     */
    public static final int ARTIST_TYPE_CHAMBER_ORCHESTRA_VALUE = 21;
    /**
     * <code>ARTIST_TYPE_MARIACHI_BAND = 22;</code>
     */
    public static final int ARTIST_TYPE_MARIACHI_BAND_VALUE = 22;
    /**
     * <code>ARTIST_TYPE_BARBERSHOP_ENSEMBLE = 23;</code>
     */
    public static final int ARTIST_TYPE_BARBERSHOP_ENSEMBLE_VALUE = 23;
    /**
     * <code>ARTIST_TYPE_PIPE_AND_DRUM_GROUP = 24;</code>
     */
    public static final int ARTIST_TYPE_PIPE_AND_DRUM_GROUP_VALUE = 24;
    /**
     * <code>ARTIST_TYPE_PIANO_QUINTET = 25;</code>
     */
    public static final int ARTIST_TYPE_PIANO_QUINTET_VALUE = 25;
    /**
     * <code>ARTIST_TYPE_FIFE_AND_DRUM_CORPS = 26;</code>
     */
    public static final int ARTIST_TYPE_FIFE_AND_DRUM_CORPS_VALUE = 26;
    /**
     * <code>ARTIST_TYPE_ROCK_BAND = 27;</code>
     */
    public static final int ARTIST_TYPE_ROCK_BAND_VALUE = 27;
    /**
     * <code>ARTIST_TYPE_BRASS_BAND = 28;</code>
     */
    public static final int ARTIST_TYPE_BRASS_BAND_VALUE = 28;
    /**
     * <code>ARTIST_TYPE_LATIN_GROUP = 29;</code>
     */
    public static final int ARTIST_TYPE_LATIN_GROUP_VALUE = 29;
    /**
     * <code>ARTIST_TYPE_PIANO_QUARTET = 30;</code>
     */
    public static final int ARTIST_TYPE_PIANO_QUARTET_VALUE = 30;
    /**
     * <code>ARTIST_TYPE_SOLO_VOICE = 31;</code>
     */
    public static final int ARTIST_TYPE_SOLO_VOICE_VALUE = 31;
    /**
     * <code>ARTIST_TYPE_STRING_ENSEMBLE = 32;</code>
     */
    public static final int ARTIST_TYPE_STRING_ENSEMBLE_VALUE = 32;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ArtistType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ArtistType forNumber(int value) {
      switch (value) {
        case 0: return ARTIST_TYPE_DUET;
        case 1: return ARTIST_TYPE_STRING_QUARTET;
        case 2: return ARTIST_TYPE_WIND_ENSEMBLE;
        case 3: return ARTIST_TYPE_INSTRUMENT_AND_ACCOMPANIMENT;
        case 4: return ARTIST_TYPE_JAZZ_COMBO;
        case 5: return ARTIST_TYPE_SOLO_INSTRUMENT;
        case 6: return ARTIST_TYPE_FOLK_GROUP;
        case 7: return ARTIST_TYPE_REGGAE_BAND;
        case 8: return ARTIST_TYPE_ELECTRONIC_GROUP;
        case 9: return ARTIST_TYPE_USER_DEFINED;
        case 10: return ARTIST_TYPE_PIANO_ENSEMBLE;
        case 11: return ARTIST_TYPE_MARCHING_BAND;
        case 12: return ARTIST_TYPE_PIANO_TRIO;
        case 13: return ARTIST_TYPE_POP_BAND;
        case 14: return ARTIST_TYPE_A_CAPPELLA_ENSEMBLE;
        case 15: return ARTIST_TYPE_TRIO;
        case 16: return ARTIST_TYPE_VOICE_AND_ACCOMPANIMENT;
        case 17: return ARTIST_TYPE_STRING_QUINTET;
        case 18: return ARTIST_TYPE_BIG_BAND;
        case 19: return ARTIST_TYPE_ORCHESTRA;
        case 20: return ARTIST_TYPE_COUNTRY_GROUP;
        case 21: return ARTIST_TYPE_CHAMBER_ORCHESTRA;
        case 22: return ARTIST_TYPE_MARIACHI_BAND;
        case 23: return ARTIST_TYPE_BARBERSHOP_ENSEMBLE;
        case 24: return ARTIST_TYPE_PIPE_AND_DRUM_GROUP;
        case 25: return ARTIST_TYPE_PIANO_QUINTET;
        case 26: return ARTIST_TYPE_FIFE_AND_DRUM_CORPS;
        case 27: return ARTIST_TYPE_ROCK_BAND;
        case 28: return ARTIST_TYPE_BRASS_BAND;
        case 29: return ARTIST_TYPE_LATIN_GROUP;
        case 30: return ARTIST_TYPE_PIANO_QUARTET;
        case 31: return ARTIST_TYPE_SOLO_VOICE;
        case 32: return ARTIST_TYPE_STRING_ENSEMBLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ArtistType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ArtistType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ArtistType>() {
            public ArtistType findValueByNumber(int number) {
              return ArtistType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(8);
    }

    private static final ArtistType[] VALUES = values();

    public static ArtistType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ArtistType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ArtistType)
  }

  /**
   * Protobuf enum {@code avs.AspectRatioType}
   */
  public enum AspectRatioType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ASPECT_RATIO_TYPE_P_A_R = 0;</code>
     */
    ASPECT_RATIO_TYPE_P_A_R(0),
    /**
     * <code>ASPECT_RATIO_TYPE_D_A_R = 1;</code>
     */
    ASPECT_RATIO_TYPE_D_A_R(1),
    ;

    /**
     * <code>ASPECT_RATIO_TYPE_P_A_R = 0;</code>
     */
    public static final int ASPECT_RATIO_TYPE_P_A_R_VALUE = 0;
    /**
     * <code>ASPECT_RATIO_TYPE_D_A_R = 1;</code>
     */
    public static final int ASPECT_RATIO_TYPE_D_A_R_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AspectRatioType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AspectRatioType forNumber(int value) {
      switch (value) {
        case 0: return ASPECT_RATIO_TYPE_P_A_R;
        case 1: return ASPECT_RATIO_TYPE_D_A_R;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AspectRatioType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AspectRatioType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AspectRatioType>() {
            public AspectRatioType findValueByNumber(int number) {
              return AspectRatioType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(9);
    }

    private static final AspectRatioType[] VALUES = values();

    public static AspectRatioType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AspectRatioType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AspectRatioType)
  }

  /**
   * Protobuf enum {@code avs.AsserterType}
   */
  public enum AsserterType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ASSERTER_TYPE_COLLECTION_SOCIETY = 0;</code>
     */
    ASSERTER_TYPE_COLLECTION_SOCIETY(0),
    /**
     * <code>ASSERTER_TYPE_RECORD_COMPANY_WITH_INTEREST_IN_RESOURCE = 1;</code>
     */
    ASSERTER_TYPE_RECORD_COMPANY_WITH_INTEREST_IN_RESOURCE(1),
    /**
     * <code>ASSERTER_TYPE_MUSIC_LICENSING_COMPANY = 2;</code>
     */
    ASSERTER_TYPE_MUSIC_LICENSING_COMPANY(2),
    /**
     * <code>ASSERTER_TYPE_PUBLISHER = 3;</code>
     */
    ASSERTER_TYPE_PUBLISHER(3),
    /**
     * <code>ASSERTER_TYPE_INTERESTED_PUBLISHER = 4;</code>
     */
    ASSERTER_TYPE_INTERESTED_PUBLISHER(4),
    /**
     * <code>ASSERTER_TYPE_THIRD_PARTY = 5;</code>
     */
    ASSERTER_TYPE_THIRD_PARTY(5),
    ;

    /**
     * <code>ASSERTER_TYPE_COLLECTION_SOCIETY = 0;</code>
     */
    public static final int ASSERTER_TYPE_COLLECTION_SOCIETY_VALUE = 0;
    /**
     * <code>ASSERTER_TYPE_RECORD_COMPANY_WITH_INTEREST_IN_RESOURCE = 1;</code>
     */
    public static final int ASSERTER_TYPE_RECORD_COMPANY_WITH_INTEREST_IN_RESOURCE_VALUE = 1;
    /**
     * <code>ASSERTER_TYPE_MUSIC_LICENSING_COMPANY = 2;</code>
     */
    public static final int ASSERTER_TYPE_MUSIC_LICENSING_COMPANY_VALUE = 2;
    /**
     * <code>ASSERTER_TYPE_PUBLISHER = 3;</code>
     */
    public static final int ASSERTER_TYPE_PUBLISHER_VALUE = 3;
    /**
     * <code>ASSERTER_TYPE_INTERESTED_PUBLISHER = 4;</code>
     */
    public static final int ASSERTER_TYPE_INTERESTED_PUBLISHER_VALUE = 4;
    /**
     * <code>ASSERTER_TYPE_THIRD_PARTY = 5;</code>
     */
    public static final int ASSERTER_TYPE_THIRD_PARTY_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AsserterType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AsserterType forNumber(int value) {
      switch (value) {
        case 0: return ASSERTER_TYPE_COLLECTION_SOCIETY;
        case 1: return ASSERTER_TYPE_RECORD_COMPANY_WITH_INTEREST_IN_RESOURCE;
        case 2: return ASSERTER_TYPE_MUSIC_LICENSING_COMPANY;
        case 3: return ASSERTER_TYPE_PUBLISHER;
        case 4: return ASSERTER_TYPE_INTERESTED_PUBLISHER;
        case 5: return ASSERTER_TYPE_THIRD_PARTY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AsserterType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AsserterType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AsserterType>() {
            public AsserterType findValueByNumber(int number) {
              return AsserterType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(10);
    }

    private static final AsserterType[] VALUES = values();

    public static AsserterType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AsserterType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AsserterType)
  }

  /**
   * Protobuf enum {@code avs.AssertionStatus}
   */
  public enum AssertionStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ASSERTION_STATUS_VERIFIED = 0;</code>
     */
    ASSERTION_STATUS_VERIFIED(0),
    ;

    /**
     * <code>ASSERTION_STATUS_VERIFIED = 0;</code>
     */
    public static final int ASSERTION_STATUS_VERIFIED_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AssertionStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AssertionStatus forNumber(int value) {
      switch (value) {
        case 0: return ASSERTION_STATUS_VERIFIED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AssertionStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AssertionStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AssertionStatus>() {
            public AssertionStatus findValueByNumber(int number) {
              return AssertionStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(11);
    }

    private static final AssertionStatus[] VALUES = values();

    public static AssertionStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AssertionStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AssertionStatus)
  }

  /**
   * Protobuf enum {@code avs.AudioCodecType}
   */
  public enum AudioCodecType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AUDIO_CODEC_TYPE_VORBIS = 0;</code>
     */
    AUDIO_CODEC_TYPE_VORBIS(0),
    /**
     * <code>AUDIO_CODEC_TYPE_A_A_C = 1;</code>
     */
    AUDIO_CODEC_TYPE_A_A_C(1),
    /**
     * <code>AUDIO_CODEC_TYPE_A_D_P_C_M = 2;</code>
     */
    AUDIO_CODEC_TYPE_A_D_P_C_M(2),
    /**
     * <code>AUDIO_CODEC_TYPE_M_P = 3;</code>
     */
    AUDIO_CODEC_TYPE_M_P(3),
    /**
     * <code>AUDIO_CODEC_TYPE_Q_C_E_L_P = 4;</code>
     */
    AUDIO_CODEC_TYPE_Q_C_E_L_P(4),
    /**
     * <code>AUDIO_CODEC_TYPE_A_M_R = 5;</code>
     */
    AUDIO_CODEC_TYPE_A_M_R(5),
    /**
     * <code>AUDIO_CODEC_TYPE_F_L_A_C = 6;</code>
     */
    AUDIO_CODEC_TYPE_F_L_A_C(6),
    /**
     * <code>AUDIO_CODEC_TYPE_MU_LAW = 7;</code>
     */
    AUDIO_CODEC_TYPE_MU_LAW(7),
    /**
     * <code>AUDIO_CODEC_TYPE_W_M_A = 8;</code>
     */
    AUDIO_CODEC_TYPE_W_M_A(8),
    /**
     * <code>AUDIO_CODEC_TYPE_REAL_AUDIO = 9;</code>
     */
    AUDIO_CODEC_TYPE_REAL_AUDIO(9),
    /**
     * <code>AUDIO_CODEC_TYPE_M_P2 = 10;</code>
     */
    AUDIO_CODEC_TYPE_M_P2(10),
    /**
     * <code>AUDIO_CODEC_TYPE_M_P3 = 11;</code>
     */
    AUDIO_CODEC_TYPE_M_P3(11),
    /**
     * <code>AUDIO_CODEC_TYPE_SHOCKWAVE = 12;</code>
     */
    AUDIO_CODEC_TYPE_SHOCKWAVE(12),
    /**
     * <code>AUDIO_CODEC_TYPE_ATMOS = 13;</code>
     */
    AUDIO_CODEC_TYPE_ATMOS(13),
    /**
     * <code>AUDIO_CODEC_TYPE_UNKNOWN = 14;</code>
     */
    AUDIO_CODEC_TYPE_UNKNOWN(14),
    /**
     * <code>AUDIO_CODEC_TYPE_A_M_R__MINUS___N_B = 15;</code>
     */
    AUDIO_CODEC_TYPE_A_M_R__MINUS___N_B(15),
    /**
     * <code>AUDIO_CODEC_TYPE_P_D_M = 16;</code>
     */
    AUDIO_CODEC_TYPE_P_D_M(16),
    /**
     * <code>AUDIO_CODEC_TYPE_P_C_M = 17;</code>
     */
    AUDIO_CODEC_TYPE_P_C_M(17),
    /**
     * <code>AUDIO_CODEC_TYPE_A_M_R__MINUS___W_B = 18;</code>
     */
    AUDIO_CODEC_TYPE_A_M_R__MINUS___W_B(18),
    /**
     * <code>AUDIO_CODEC_TYPE_M_Q_A = 19;</code>
     */
    AUDIO_CODEC_TYPE_M_Q_A(19),
    /**
     * <code>AUDIO_CODEC_TYPE_USER_DEFINED = 20;</code>
     */
    AUDIO_CODEC_TYPE_USER_DEFINED(20),
    /**
     * <code>AUDIO_CODEC_TYPE_A_LAW = 21;</code>
     */
    AUDIO_CODEC_TYPE_A_LAW(21),
    ;

    /**
     * <code>AUDIO_CODEC_TYPE_VORBIS = 0;</code>
     */
    public static final int AUDIO_CODEC_TYPE_VORBIS_VALUE = 0;
    /**
     * <code>AUDIO_CODEC_TYPE_A_A_C = 1;</code>
     */
    public static final int AUDIO_CODEC_TYPE_A_A_C_VALUE = 1;
    /**
     * <code>AUDIO_CODEC_TYPE_A_D_P_C_M = 2;</code>
     */
    public static final int AUDIO_CODEC_TYPE_A_D_P_C_M_VALUE = 2;
    /**
     * <code>AUDIO_CODEC_TYPE_M_P = 3;</code>
     */
    public static final int AUDIO_CODEC_TYPE_M_P_VALUE = 3;
    /**
     * <code>AUDIO_CODEC_TYPE_Q_C_E_L_P = 4;</code>
     */
    public static final int AUDIO_CODEC_TYPE_Q_C_E_L_P_VALUE = 4;
    /**
     * <code>AUDIO_CODEC_TYPE_A_M_R = 5;</code>
     */
    public static final int AUDIO_CODEC_TYPE_A_M_R_VALUE = 5;
    /**
     * <code>AUDIO_CODEC_TYPE_F_L_A_C = 6;</code>
     */
    public static final int AUDIO_CODEC_TYPE_F_L_A_C_VALUE = 6;
    /**
     * <code>AUDIO_CODEC_TYPE_MU_LAW = 7;</code>
     */
    public static final int AUDIO_CODEC_TYPE_MU_LAW_VALUE = 7;
    /**
     * <code>AUDIO_CODEC_TYPE_W_M_A = 8;</code>
     */
    public static final int AUDIO_CODEC_TYPE_W_M_A_VALUE = 8;
    /**
     * <code>AUDIO_CODEC_TYPE_REAL_AUDIO = 9;</code>
     */
    public static final int AUDIO_CODEC_TYPE_REAL_AUDIO_VALUE = 9;
    /**
     * <code>AUDIO_CODEC_TYPE_M_P2 = 10;</code>
     */
    public static final int AUDIO_CODEC_TYPE_M_P2_VALUE = 10;
    /**
     * <code>AUDIO_CODEC_TYPE_M_P3 = 11;</code>
     */
    public static final int AUDIO_CODEC_TYPE_M_P3_VALUE = 11;
    /**
     * <code>AUDIO_CODEC_TYPE_SHOCKWAVE = 12;</code>
     */
    public static final int AUDIO_CODEC_TYPE_SHOCKWAVE_VALUE = 12;
    /**
     * <code>AUDIO_CODEC_TYPE_ATMOS = 13;</code>
     */
    public static final int AUDIO_CODEC_TYPE_ATMOS_VALUE = 13;
    /**
     * <code>AUDIO_CODEC_TYPE_UNKNOWN = 14;</code>
     */
    public static final int AUDIO_CODEC_TYPE_UNKNOWN_VALUE = 14;
    /**
     * <code>AUDIO_CODEC_TYPE_A_M_R__MINUS___N_B = 15;</code>
     */
    public static final int AUDIO_CODEC_TYPE_A_M_R__MINUS___N_B_VALUE = 15;
    /**
     * <code>AUDIO_CODEC_TYPE_P_D_M = 16;</code>
     */
    public static final int AUDIO_CODEC_TYPE_P_D_M_VALUE = 16;
    /**
     * <code>AUDIO_CODEC_TYPE_P_C_M = 17;</code>
     */
    public static final int AUDIO_CODEC_TYPE_P_C_M_VALUE = 17;
    /**
     * <code>AUDIO_CODEC_TYPE_A_M_R__MINUS___W_B = 18;</code>
     */
    public static final int AUDIO_CODEC_TYPE_A_M_R__MINUS___W_B_VALUE = 18;
    /**
     * <code>AUDIO_CODEC_TYPE_M_Q_A = 19;</code>
     */
    public static final int AUDIO_CODEC_TYPE_M_Q_A_VALUE = 19;
    /**
     * <code>AUDIO_CODEC_TYPE_USER_DEFINED = 20;</code>
     */
    public static final int AUDIO_CODEC_TYPE_USER_DEFINED_VALUE = 20;
    /**
     * <code>AUDIO_CODEC_TYPE_A_LAW = 21;</code>
     */
    public static final int AUDIO_CODEC_TYPE_A_LAW_VALUE = 21;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AudioCodecType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AudioCodecType forNumber(int value) {
      switch (value) {
        case 0: return AUDIO_CODEC_TYPE_VORBIS;
        case 1: return AUDIO_CODEC_TYPE_A_A_C;
        case 2: return AUDIO_CODEC_TYPE_A_D_P_C_M;
        case 3: return AUDIO_CODEC_TYPE_M_P;
        case 4: return AUDIO_CODEC_TYPE_Q_C_E_L_P;
        case 5: return AUDIO_CODEC_TYPE_A_M_R;
        case 6: return AUDIO_CODEC_TYPE_F_L_A_C;
        case 7: return AUDIO_CODEC_TYPE_MU_LAW;
        case 8: return AUDIO_CODEC_TYPE_W_M_A;
        case 9: return AUDIO_CODEC_TYPE_REAL_AUDIO;
        case 10: return AUDIO_CODEC_TYPE_M_P2;
        case 11: return AUDIO_CODEC_TYPE_M_P3;
        case 12: return AUDIO_CODEC_TYPE_SHOCKWAVE;
        case 13: return AUDIO_CODEC_TYPE_ATMOS;
        case 14: return AUDIO_CODEC_TYPE_UNKNOWN;
        case 15: return AUDIO_CODEC_TYPE_A_M_R__MINUS___N_B;
        case 16: return AUDIO_CODEC_TYPE_P_D_M;
        case 17: return AUDIO_CODEC_TYPE_P_C_M;
        case 18: return AUDIO_CODEC_TYPE_A_M_R__MINUS___W_B;
        case 19: return AUDIO_CODEC_TYPE_M_Q_A;
        case 20: return AUDIO_CODEC_TYPE_USER_DEFINED;
        case 21: return AUDIO_CODEC_TYPE_A_LAW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AudioCodecType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AudioCodecType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AudioCodecType>() {
            public AudioCodecType findValueByNumber(int number) {
              return AudioCodecType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(12);
    }

    private static final AudioCodecType[] VALUES = values();

    public static AudioCodecType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AudioCodecType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.AudioCodecType)
  }

  /**
   * Protobuf enum {@code avs.BasisForRevenueAllocation}
   */
  public enum BasisForRevenueAllocation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_PROXY = 0;</code>
     */
    BASIS_FOR_REVENUE_ALLOCATION_PROXY(0),
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_USAGE_LOG = 1;</code>
     */
    BASIS_FOR_REVENUE_ALLOCATION_USAGE_LOG(1),
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_DERIVED = 2;</code>
     */
    BASIS_FOR_REVENUE_ALLOCATION_DERIVED(2),
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_FULL_CENSUS = 3;</code>
     */
    BASIS_FOR_REVENUE_ALLOCATION_FULL_CENSUS(3),
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_MARKET_SHARE = 4;</code>
     */
    BASIS_FOR_REVENUE_ALLOCATION_MARKET_SHARE(4),
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_SAMPLE_CENSUS = 5;</code>
     */
    BASIS_FOR_REVENUE_ALLOCATION_SAMPLE_CENSUS(5),
    ;

    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_PROXY = 0;</code>
     */
    public static final int BASIS_FOR_REVENUE_ALLOCATION_PROXY_VALUE = 0;
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_USAGE_LOG = 1;</code>
     */
    public static final int BASIS_FOR_REVENUE_ALLOCATION_USAGE_LOG_VALUE = 1;
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_DERIVED = 2;</code>
     */
    public static final int BASIS_FOR_REVENUE_ALLOCATION_DERIVED_VALUE = 2;
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_FULL_CENSUS = 3;</code>
     */
    public static final int BASIS_FOR_REVENUE_ALLOCATION_FULL_CENSUS_VALUE = 3;
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_MARKET_SHARE = 4;</code>
     */
    public static final int BASIS_FOR_REVENUE_ALLOCATION_MARKET_SHARE_VALUE = 4;
    /**
     * <code>BASIS_FOR_REVENUE_ALLOCATION_SAMPLE_CENSUS = 5;</code>
     */
    public static final int BASIS_FOR_REVENUE_ALLOCATION_SAMPLE_CENSUS_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BasisForRevenueAllocation valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BasisForRevenueAllocation forNumber(int value) {
      switch (value) {
        case 0: return BASIS_FOR_REVENUE_ALLOCATION_PROXY;
        case 1: return BASIS_FOR_REVENUE_ALLOCATION_USAGE_LOG;
        case 2: return BASIS_FOR_REVENUE_ALLOCATION_DERIVED;
        case 3: return BASIS_FOR_REVENUE_ALLOCATION_FULL_CENSUS;
        case 4: return BASIS_FOR_REVENUE_ALLOCATION_MARKET_SHARE;
        case 5: return BASIS_FOR_REVENUE_ALLOCATION_SAMPLE_CENSUS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BasisForRevenueAllocation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BasisForRevenueAllocation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BasisForRevenueAllocation>() {
            public BasisForRevenueAllocation findValueByNumber(int number) {
              return BasisForRevenueAllocation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(13);
    }

    private static final BasisForRevenueAllocation[] VALUES = values();

    public static BasisForRevenueAllocation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BasisForRevenueAllocation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.BasisForRevenueAllocation)
  }

  /**
   * Protobuf enum {@code avs.BinaryDataType}
   */
  public enum BinaryDataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BINARY_DATA_TYPE_HEX_BINARY = 0;</code>
     */
    BINARY_DATA_TYPE_HEX_BINARY(0),
    /**
     * <code>BINARY_DATA_TYPE_BINARY64 = 1;</code>
     */
    BINARY_DATA_TYPE_BINARY64(1),
    ;

    /**
     * <code>BINARY_DATA_TYPE_HEX_BINARY = 0;</code>
     */
    public static final int BINARY_DATA_TYPE_HEX_BINARY_VALUE = 0;
    /**
     * <code>BINARY_DATA_TYPE_BINARY64 = 1;</code>
     */
    public static final int BINARY_DATA_TYPE_BINARY64_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BinaryDataType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BinaryDataType forNumber(int value) {
      switch (value) {
        case 0: return BINARY_DATA_TYPE_HEX_BINARY;
        case 1: return BINARY_DATA_TYPE_BINARY64;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BinaryDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BinaryDataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BinaryDataType>() {
            public BinaryDataType findValueByNumber(int number) {
              return BinaryDataType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(14);
    }

    private static final BinaryDataType[] VALUES = values();

    public static BinaryDataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BinaryDataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.BinaryDataType)
  }

  /**
   * Protobuf enum {@code avs.BusinessMusicalWorkContributorRole}
   */
  public enum BusinessMusicalWorkContributorRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER = 0;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER(0),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER = 1;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER(1),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER = 2;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER(2),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER = 3;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER(3),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN = 4;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN(4),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER = 5;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER(5),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER = 6;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER(6),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER = 7;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER(7),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT = 8;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT(8),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED = 9;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED(9),
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER = 10;</code>
     */
    BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER(10),
    ;

    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER = 0;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER_VALUE = 0;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER = 1;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER_VALUE = 1;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER = 2;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER_VALUE = 2;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER = 3;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER_VALUE = 3;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN = 4;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN_VALUE = 4;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER = 5;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER_VALUE = 5;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER = 6;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER_VALUE = 6;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER = 7;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER_VALUE = 7;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT = 8;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT_VALUE = 8;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED = 9;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED_VALUE = 9;
    /**
     * <code>BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER = 10;</code>
     */
    public static final int BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER_VALUE = 10;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BusinessMusicalWorkContributorRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BusinessMusicalWorkContributorRole forNumber(int value) {
      switch (value) {
        case 0: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER;
        case 1: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER;
        case 2: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER;
        case 3: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER;
        case 4: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN;
        case 5: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER;
        case 6: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER;
        case 7: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER;
        case 8: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT;
        case 9: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED;
        case 10: return BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BusinessMusicalWorkContributorRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BusinessMusicalWorkContributorRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BusinessMusicalWorkContributorRole>() {
            public BusinessMusicalWorkContributorRole findValueByNumber(int number) {
              return BusinessMusicalWorkContributorRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(15);
    }

    private static final BusinessMusicalWorkContributorRole[] VALUES = values();

    public static BusinessMusicalWorkContributorRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BusinessMusicalWorkContributorRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.BusinessMusicalWorkContributorRole)
  }

  /**
   * Protobuf enum {@code avs.CarrierType}
   */
  public enum CarrierType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CARRIER_TYPE_FAN_PACK = 0;</code>
     */
    CARRIER_TYPE_FAN_PACK(0),
    /**
     * <code>CARRIER_TYPE_SACD_PLUS_DVD_VIDEO = 1;</code>
     */
    CARRIER_TYPE_SACD_PLUS_DVD_VIDEO(1),
    /**
     * <code>CARRIER_TYPE_CD_MAXI_SINGLE_ENHANCED = 2;</code>
     */
    CARRIER_TYPE_CD_MAXI_SINGLE_ENHANCED(2),
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO_LP_PLUS_CD_LP_OR_CD_SINGLE = 3;</code>
     */
    CARRIER_TYPE_DVD_VIDEO_LP_PLUS_CD_LP_OR_CD_SINGLE(3),
    /**
     * <code>CARRIER_TYPE_MINI_DISC_E_P = 4;</code>
     */
    CARRIER_TYPE_MINI_DISC_E_P(4),
    /**
     * <code>CARRIER_TYPE_S_A_C_D = 5;</code>
     */
    CARRIER_TYPE_S_A_C_D(5),
    /**
     * <code>CARRIER_TYPE_PRE_PAID_CARD = 6;</code>
     */
    CARRIER_TYPE_PRE_PAID_CARD(6),
    /**
     * <code>CARRIER_TYPE_LASER_DISC_LP12_INCH_N_T_S_C = 7;</code>
     */
    CARRIER_TYPE_LASER_DISC_LP12_INCH_N_T_S_C(7),
    /**
     * <code>CARRIER_TYPE_SACD_LP_STEREO_SURROUND_CD_AUDIO = 8;</code>
     */
    CARRIER_TYPE_SACD_LP_STEREO_SURROUND_CD_AUDIO(8),
    /**
     * <code>CARRIER_TYPE_MC_IDENTICAL_TO_C_D = 9;</code>
     */
    CARRIER_TYPE_MC_IDENTICAL_TO_C_D(9),
    /**
     * <code>CARRIER_TYPE_CD_EP = 10;</code>
     */
    CARRIER_TYPE_CD_EP(10),
    /**
     * <code>CARRIER_TYPE_CD_LP_PLUS_DVD_VIDEO = 11;</code>
     */
    CARRIER_TYPE_CD_LP_PLUS_DVD_VIDEO(11),
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO_LP_P_A_L = 12;</code>
     */
    CARRIER_TYPE_DVD_VIDEO_LP_P_A_L(12),
    /**
     * <code>CARRIER_TYPE_BLU_RAY = 13;</code>
     */
    CARRIER_TYPE_BLU_RAY(13),
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_SINGLE2_TRACKS = 14;</code>
     */
    CARRIER_TYPE_CD_EXTRA_SINGLE2_TRACKS(14),
    /**
     * <code>CARRIER_TYPE_CD_LP_PLUS_CD_VIDEO = 15;</code>
     */
    CARRIER_TYPE_CD_LP_PLUS_CD_VIDEO(15),
    /**
     * <code>CARRIER_TYPE_COMBI_PACK = 16;</code>
     */
    CARRIER_TYPE_COMBI_PACK(16),
    /**
     * <code>CARRIER_TYPE_USER_DEFINED = 17;</code>
     */
    CARRIER_TYPE_USER_DEFINED(17),
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_N_T_S_C = 18;</code>
     */
    CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_N_T_S_C(18),
    /**
     * <code>CARRIER_TYPE_SACD_LP_STEREO = 19;</code>
     */
    CARRIER_TYPE_SACD_LP_STEREO(19),
    /**
     * <code>CARRIER_TYPE_33RPM10_INCH_SINGLE = 20;</code>
     */
    CARRIER_TYPE_33RPM10_INCH_SINGLE(20),
    /**
     * <code>CARRIER_TYPE_MINI_DISC_COMPILATION = 21;</code>
     */
    CARRIER_TYPE_MINI_DISC_COMPILATION(21),
    /**
     * <code>CARRIER_TYPE_33RPM12_INCH_L_P = 22;</code>
     */
    CARRIER_TYPE_33RPM12_INCH_L_P(22),
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO_LP_N_T_S_C = 23;</code>
     */
    CARRIER_TYPE_DVD_VIDEO_LP_N_T_S_C(23),
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO = 24;</code>
     */
    CARRIER_TYPE_DVD_VIDEO(24),
    /**
     * <code>CARRIER_TYPE_SACD_COMPILATION = 25;</code>
     */
    CARRIER_TYPE_SACD_COMPILATION(25),
    /**
     * <code>CARRIER_TYPE_MC_SINGLE_IDENTICAL_TO_C_D_S = 26;</code>
     */
    CARRIER_TYPE_MC_SINGLE_IDENTICAL_TO_C_D_S(26),
    /**
     * <code>CARRIER_TYPE_DVD_AUDIO5_MAXI_SINGLE = 27;</code>
     */
    CARRIER_TYPE_DVD_AUDIO5_MAXI_SINGLE(27),
    /**
     * <code>CARRIER_TYPE_CD_MAXI_SINGLE3_INCH = 28;</code>
     */
    CARRIER_TYPE_CD_MAXI_SINGLE3_INCH(28),
    /**
     * <code>CARRIER_TYPE_CD_LP5_INCH = 29;</code>
     */
    CARRIER_TYPE_CD_LP5_INCH(29),
    /**
     * <code>CARRIER_TYPE_MERCHANDISE = 30;</code>
     */
    CARRIER_TYPE_MERCHANDISE(30),
    /**
     * <code>CARRIER_TYPE_LP_COMPILATION = 31;</code>
     */
    CARRIER_TYPE_LP_COMPILATION(31),
    /**
     * <code>CARRIER_TYPE_45RPM12_INCH_MAXI_SINGLE = 32;</code>
     */
    CARRIER_TYPE_45RPM12_INCH_MAXI_SINGLE(32),
    /**
     * <code>CARRIER_TYPE_CD_VIDEO5_LP_N_T_S_C = 33;</code>
     */
    CARRIER_TYPE_CD_VIDEO5_LP_N_T_S_C(33),
    /**
     * <code>CARRIER_TYPE_45RPM7_INCH_SINGLE = 34;</code>
     */
    CARRIER_TYPE_45RPM7_INCH_SINGLE(34),
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_COMPILATION = 35;</code>
     */
    CARRIER_TYPE_CD_EXTRA_COMPILATION(35),
    /**
     * <code>CARRIER_TYPE_CD_LP_ENHANCED = 36;</code>
     */
    CARRIER_TYPE_CD_LP_ENHANCED(36),
    /**
     * <code>CARRIER_TYPE_33RPM7_INCH_L_P = 37;</code>
     */
    CARRIER_TYPE_33RPM7_INCH_L_P(37),
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_P_A_L = 38;</code>
     */
    CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_P_A_L(38),
    /**
     * <code>CARRIER_TYPE_CD_PLUS_CD_BONUS = 39;</code>
     */
    CARRIER_TYPE_CD_PLUS_CD_BONUS(39),
    /**
     * <code>CARRIER_TYPE_CD_VIDEO_AUDIO_COMPATIBLE = 40;</code>
     */
    CARRIER_TYPE_CD_VIDEO_AUDIO_COMPATIBLE(40),
    /**
     * <code>CARRIER_TYPE_CD_ROM = 41;</code>
     */
    CARRIER_TYPE_CD_ROM(41),
    /**
     * <code>CARRIER_TYPE_CD_SINGLE = 42;</code>
     */
    CARRIER_TYPE_CD_SINGLE(42),
    /**
     * <code>CARRIER_TYPE_MC_COMP_IDENTICAL_TO_CD_COMP = 43;</code>
     */
    CARRIER_TYPE_MC_COMP_IDENTICAL_TO_CD_COMP(43),
    /**
     * <code>CARRIER_TYPE_MINI_DISC_SINGLE_MAXI_SINGLE = 44;</code>
     */
    CARRIER_TYPE_MINI_DISC_SINGLE_MAXI_SINGLE(44),
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO5_SINGLE_P_A_L = 45;</code>
     */
    CARRIER_TYPE_DVD_VIDEO5_SINGLE_P_A_L(45),
    /**
     * <code>CARRIER_TYPE_MEMORY_DEVICE = 46;</code>
     */
    CARRIER_TYPE_MEMORY_DEVICE(46),
    /**
     * <code>CARRIER_TYPE_VHS_P_A_L = 47;</code>
     */
    CARRIER_TYPE_VHS_P_A_L(47),
    /**
     * <code>CARRIER_TYPE_SACD_LP_STEREO_SURROUND = 48;</code>
     */
    CARRIER_TYPE_SACD_LP_STEREO_SURROUND(48),
    /**
     * <code>CARRIER_TYPE_DVD_AUDIO_L_P = 49;</code>
     */
    CARRIER_TYPE_DVD_AUDIO_L_P(49),
    /**
     * <code>CARRIER_TYPE_DVD_AUDIO = 50;</code>
     */
    CARRIER_TYPE_DVD_AUDIO(50),
    /**
     * <code>CARRIER_TYPE_DVD_SINGLE = 51;</code>
     */
    CARRIER_TYPE_DVD_SINGLE(51),
    /**
     * <code>CARRIER_TYPE_33RPM12_INCH_MAXI_SINGLE = 52;</code>
     */
    CARRIER_TYPE_33RPM12_INCH_MAXI_SINGLE(52),
    /**
     * <code>CARRIER_TYPE_C_D = 53;</code>
     */
    CARRIER_TYPE_C_D(53),
    /**
     * <code>CARRIER_TYPE_CD_MAXI_SINGLE_REMIX = 54;</code>
     */
    CARRIER_TYPE_CD_MAXI_SINGLE_REMIX(54),
    /**
     * <code>CARRIER_TYPE_MINI_DISC = 55;</code>
     */
    CARRIER_TYPE_MINI_DISC(55),
    /**
     * <code>CARRIER_TYPE_MEMORY_DEVICE_AUDIO_L_P = 56;</code>
     */
    CARRIER_TYPE_MEMORY_DEVICE_AUDIO_L_P(56),
    /**
     * <code>CARRIER_TYPE_33RPM10_INCH_L_P = 57;</code>
     */
    CARRIER_TYPE_33RPM10_INCH_L_P(57),
    /**
     * <code>CARRIER_TYPE_45RPM12_INCH_SINGLE = 58;</code>
     */
    CARRIER_TYPE_45RPM12_INCH_SINGLE(58),
    /**
     * <code>CARRIER_TYPE_7_INCH_MAXI_SINGLE_REMIX = 59;</code>
     */
    CARRIER_TYPE_7_INCH_MAXI_SINGLE_REMIX(59),
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO5_SINGLE_N_T_S_C = 60;</code>
     */
    CARRIER_TYPE_DVD_VIDEO5_SINGLE_N_T_S_C(60),
    /**
     * <code>CARRIER_TYPE_VHS_PLUS_CD_LP = 61;</code>
     */
    CARRIER_TYPE_VHS_PLUS_CD_LP(61),
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_MAXI_REMIX = 62;</code>
     */
    CARRIER_TYPE_CD_EXTRA_MAXI_REMIX(62),
    /**
     * <code>CARRIER_TYPE_45RPM10_INCH_MAXI_SINGLE = 63;</code>
     */
    CARRIER_TYPE_45RPM10_INCH_MAXI_SINGLE(63),
    /**
     * <code>CARRIER_TYPE_45RPM10_INCH_L_P = 64;</code>
     */
    CARRIER_TYPE_45RPM10_INCH_L_P(64),
    /**
     * <code>CARRIER_TYPE_LP_COMP_IDENTICAL_TO_CD_COMP = 65;</code>
     */
    CARRIER_TYPE_LP_COMP_IDENTICAL_TO_CD_COMP(65),
    /**
     * <code>CARRIER_TYPE_LP_IDENTICAL_TO_C_D = 66;</code>
     */
    CARRIER_TYPE_LP_IDENTICAL_TO_C_D(66),
    /**
     * <code>CARRIER_TYPE_MC_COMPILATION = 67;</code>
     */
    CARRIER_TYPE_MC_COMPILATION(67),
    /**
     * <code>CARRIER_TYPE_CD_EP_ENHANCED = 68;</code>
     */
    CARRIER_TYPE_CD_EP_ENHANCED(68),
    /**
     * <code>CARRIER_TYPE_M_C = 69;</code>
     */
    CARRIER_TYPE_M_C(69),
    /**
     * <code>CARRIER_TYPE_DCC_COMPILATION = 70;</code>
     */
    CARRIER_TYPE_DCC_COMPILATION(70),
    /**
     * <code>CARRIER_TYPE_FILE_SYSTEM = 71;</code>
     */
    CARRIER_TYPE_FILE_SYSTEM(71),
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_L_P = 72;</code>
     */
    CARRIER_TYPE_CD_EXTRA_L_P(72),
    /**
     * <code>CARRIER_TYPE_CD_LP_PLUS_DVD_AUDIO = 73;</code>
     */
    CARRIER_TYPE_CD_LP_PLUS_DVD_AUDIO(73),
    /**
     * <code>CARRIER_TYPE_MC_DOUBLE_L_P = 74;</code>
     */
    CARRIER_TYPE_MC_DOUBLE_L_P(74),
    /**
     * <code>CARRIER_TYPE_MC_L_P = 75;</code>
     */
    CARRIER_TYPE_MC_L_P(75),
    /**
     * <code>CARRIER_TYPE_D_C_C = 76;</code>
     */
    CARRIER_TYPE_D_C_C(76),
    /**
     * <code>CARRIER_TYPE_HD_DVD_VIDEO_LP = 77;</code>
     */
    CARRIER_TYPE_HD_DVD_VIDEO_LP(77),
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_E_P = 78;</code>
     */
    CARRIER_TYPE_CD_EXTRA_E_P(78),
    /**
     * <code>CARRIER_TYPE_DVD_AUDIO_SINGLE = 79;</code>
     */
    CARRIER_TYPE_DVD_AUDIO_SINGLE(79),
    /**
     * <code>CARRIER_TYPE_MEMORY_DEVICE_MIX_L_P = 80;</code>
     */
    CARRIER_TYPE_MEMORY_DEVICE_MIX_L_P(80),
    /**
     * <code>CARRIER_TYPE_MEMORY_DEVICE_VIDEO_L_P = 81;</code>
     */
    CARRIER_TYPE_MEMORY_DEVICE_VIDEO_L_P(81),
    /**
     * <code>CARRIER_TYPE_33RPM12_INCH_LP20_TRACKS = 82;</code>
     */
    CARRIER_TYPE_33RPM12_INCH_LP20_TRACKS(82),
    /**
     * <code>CARRIER_TYPE_ONLINE_SYSTEM = 83;</code>
     */
    CARRIER_TYPE_ONLINE_SYSTEM(83),
    /**
     * <code>CARRIER_TYPE_VHS_N_T_S_C = 84;</code>
     */
    CARRIER_TYPE_VHS_N_T_S_C(84),
    /**
     * <code>CARRIER_TYPE_VHS_S_E_C_A_M = 85;</code>
     */
    CARRIER_TYPE_VHS_S_E_C_A_M(85),
    /**
     * <code>CARRIER_TYPE_MC_E_P = 86;</code>
     */
    CARRIER_TYPE_MC_E_P(86),
    /**
     * <code>CARRIER_TYPE_45RPM7_INCH_E_P = 87;</code>
     */
    CARRIER_TYPE_45RPM7_INCH_E_P(87),
    /**
     * <code>CARRIER_TYPE_DVD_ROM = 88;</code>
     */
    CARRIER_TYPE_DVD_ROM(88),
    /**
     * <code>CARRIER_TYPE_CD_COMPILATION = 89;</code>
     */
    CARRIER_TYPE_CD_COMPILATION(89),
    /**
     * <code>CARRIER_TYPE_45RPM10_INCH_SINGLE = 90;</code>
     */
    CARRIER_TYPE_45RPM10_INCH_SINGLE(90),
    /**
     * <code>CARRIER_TYPE_MC_REMIX = 91;</code>
     */
    CARRIER_TYPE_MC_REMIX(91),
    /**
     * <code>CARRIER_TYPE_MINI_DISC_MAXI_REMIX = 92;</code>
     */
    CARRIER_TYPE_MINI_DISC_MAXI_REMIX(92),
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_SINGLE = 93;</code>
     */
    CARRIER_TYPE_CD_EXTRA_SINGLE(93),
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_MAXI_SINGLE = 94;</code>
     */
    CARRIER_TYPE_CD_EXTRA_MAXI_SINGLE(94),
    /**
     * <code>CARRIER_TYPE_CD_VIDEO5_LP_P_A_L = 95;</code>
     */
    CARRIER_TYPE_CD_VIDEO5_LP_P_A_L(95),
    /**
     * <code>CARRIER_TYPE_SACD_LP_SURROUND_CD_AUDIO = 96;</code>
     */
    CARRIER_TYPE_SACD_LP_SURROUND_CD_AUDIO(96),
    /**
     * <code>CARRIER_TYPE_CD_SINGLE5_INCH = 97;</code>
     */
    CARRIER_TYPE_CD_SINGLE5_INCH(97),
    /**
     * <code>CARRIER_TYPE_33RPM12_INCH_SINGLE = 98;</code>
     */
    CARRIER_TYPE_33RPM12_INCH_SINGLE(98),
    /**
     * <code>CARRIER_TYPE_33RPM7_INCH_SINGLE = 99;</code>
     */
    CARRIER_TYPE_33RPM7_INCH_SINGLE(99),
    /**
     * <code>CARRIER_TYPE_DUAL_DISC = 100;</code>
     */
    CARRIER_TYPE_DUAL_DISC(100),
    /**
     * <code>CARRIER_TYPE_D_V_D = 101;</code>
     */
    CARRIER_TYPE_D_V_D(101),
    /**
     * <code>CARRIER_TYPE_12_INCH_DISCO_SINGLE_REMIX = 102;</code>
     */
    CARRIER_TYPE_12_INCH_DISCO_SINGLE_REMIX(102),
    /**
     * <code>CARRIER_TYPE_CD_SINGLE3_INCH = 103;</code>
     */
    CARRIER_TYPE_CD_SINGLE3_INCH(103),
    /**
     * <code>CARRIER_TYPE_CD_LP_PLUS_WEB = 104;</code>
     */
    CARRIER_TYPE_CD_LP_PLUS_WEB(104),
    /**
     * <code>CARRIER_TYPE_CD_LP = 105;</code>
     */
    CARRIER_TYPE_CD_LP(105),
    /**
     * <code>CARRIER_TYPE_CD_PLUS_DVD_BONUS = 106;</code>
     */
    CARRIER_TYPE_CD_PLUS_DVD_BONUS(106),
    /**
     * <code>CARRIER_TYPE_45RPM12_INCH_L_P = 107;</code>
     */
    CARRIER_TYPE_45RPM12_INCH_L_P(107),
    /**
     * <code>CARRIER_TYPE_SACD_LP_STEREO_CD_AUDIO = 108;</code>
     */
    CARRIER_TYPE_SACD_LP_STEREO_CD_AUDIO(108),
    /**
     * <code>CARRIER_TYPE_MC_MAXI_SINGLE = 109;</code>
     */
    CARRIER_TYPE_MC_MAXI_SINGLE(109),
    /**
     * <code>CARRIER_TYPE_MC_SINGLE = 110;</code>
     */
    CARRIER_TYPE_MC_SINGLE(110),
    /**
     * <code>CARRIER_TYPE_CD_MAXI_SINGLE = 111;</code>
     */
    CARRIER_TYPE_CD_MAXI_SINGLE(111),
    ;

    /**
     * <code>CARRIER_TYPE_FAN_PACK = 0;</code>
     */
    public static final int CARRIER_TYPE_FAN_PACK_VALUE = 0;
    /**
     * <code>CARRIER_TYPE_SACD_PLUS_DVD_VIDEO = 1;</code>
     */
    public static final int CARRIER_TYPE_SACD_PLUS_DVD_VIDEO_VALUE = 1;
    /**
     * <code>CARRIER_TYPE_CD_MAXI_SINGLE_ENHANCED = 2;</code>
     */
    public static final int CARRIER_TYPE_CD_MAXI_SINGLE_ENHANCED_VALUE = 2;
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO_LP_PLUS_CD_LP_OR_CD_SINGLE = 3;</code>
     */
    public static final int CARRIER_TYPE_DVD_VIDEO_LP_PLUS_CD_LP_OR_CD_SINGLE_VALUE = 3;
    /**
     * <code>CARRIER_TYPE_MINI_DISC_E_P = 4;</code>
     */
    public static final int CARRIER_TYPE_MINI_DISC_E_P_VALUE = 4;
    /**
     * <code>CARRIER_TYPE_S_A_C_D = 5;</code>
     */
    public static final int CARRIER_TYPE_S_A_C_D_VALUE = 5;
    /**
     * <code>CARRIER_TYPE_PRE_PAID_CARD = 6;</code>
     */
    public static final int CARRIER_TYPE_PRE_PAID_CARD_VALUE = 6;
    /**
     * <code>CARRIER_TYPE_LASER_DISC_LP12_INCH_N_T_S_C = 7;</code>
     */
    public static final int CARRIER_TYPE_LASER_DISC_LP12_INCH_N_T_S_C_VALUE = 7;
    /**
     * <code>CARRIER_TYPE_SACD_LP_STEREO_SURROUND_CD_AUDIO = 8;</code>
     */
    public static final int CARRIER_TYPE_SACD_LP_STEREO_SURROUND_CD_AUDIO_VALUE = 8;
    /**
     * <code>CARRIER_TYPE_MC_IDENTICAL_TO_C_D = 9;</code>
     */
    public static final int CARRIER_TYPE_MC_IDENTICAL_TO_C_D_VALUE = 9;
    /**
     * <code>CARRIER_TYPE_CD_EP = 10;</code>
     */
    public static final int CARRIER_TYPE_CD_EP_VALUE = 10;
    /**
     * <code>CARRIER_TYPE_CD_LP_PLUS_DVD_VIDEO = 11;</code>
     */
    public static final int CARRIER_TYPE_CD_LP_PLUS_DVD_VIDEO_VALUE = 11;
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO_LP_P_A_L = 12;</code>
     */
    public static final int CARRIER_TYPE_DVD_VIDEO_LP_P_A_L_VALUE = 12;
    /**
     * <code>CARRIER_TYPE_BLU_RAY = 13;</code>
     */
    public static final int CARRIER_TYPE_BLU_RAY_VALUE = 13;
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_SINGLE2_TRACKS = 14;</code>
     */
    public static final int CARRIER_TYPE_CD_EXTRA_SINGLE2_TRACKS_VALUE = 14;
    /**
     * <code>CARRIER_TYPE_CD_LP_PLUS_CD_VIDEO = 15;</code>
     */
    public static final int CARRIER_TYPE_CD_LP_PLUS_CD_VIDEO_VALUE = 15;
    /**
     * <code>CARRIER_TYPE_COMBI_PACK = 16;</code>
     */
    public static final int CARRIER_TYPE_COMBI_PACK_VALUE = 16;
    /**
     * <code>CARRIER_TYPE_USER_DEFINED = 17;</code>
     */
    public static final int CARRIER_TYPE_USER_DEFINED_VALUE = 17;
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_N_T_S_C = 18;</code>
     */
    public static final int CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_N_T_S_C_VALUE = 18;
    /**
     * <code>CARRIER_TYPE_SACD_LP_STEREO = 19;</code>
     */
    public static final int CARRIER_TYPE_SACD_LP_STEREO_VALUE = 19;
    /**
     * <code>CARRIER_TYPE_33RPM10_INCH_SINGLE = 20;</code>
     */
    public static final int CARRIER_TYPE_33RPM10_INCH_SINGLE_VALUE = 20;
    /**
     * <code>CARRIER_TYPE_MINI_DISC_COMPILATION = 21;</code>
     */
    public static final int CARRIER_TYPE_MINI_DISC_COMPILATION_VALUE = 21;
    /**
     * <code>CARRIER_TYPE_33RPM12_INCH_L_P = 22;</code>
     */
    public static final int CARRIER_TYPE_33RPM12_INCH_L_P_VALUE = 22;
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO_LP_N_T_S_C = 23;</code>
     */
    public static final int CARRIER_TYPE_DVD_VIDEO_LP_N_T_S_C_VALUE = 23;
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO = 24;</code>
     */
    public static final int CARRIER_TYPE_DVD_VIDEO_VALUE = 24;
    /**
     * <code>CARRIER_TYPE_SACD_COMPILATION = 25;</code>
     */
    public static final int CARRIER_TYPE_SACD_COMPILATION_VALUE = 25;
    /**
     * <code>CARRIER_TYPE_MC_SINGLE_IDENTICAL_TO_C_D_S = 26;</code>
     */
    public static final int CARRIER_TYPE_MC_SINGLE_IDENTICAL_TO_C_D_S_VALUE = 26;
    /**
     * <code>CARRIER_TYPE_DVD_AUDIO5_MAXI_SINGLE = 27;</code>
     */
    public static final int CARRIER_TYPE_DVD_AUDIO5_MAXI_SINGLE_VALUE = 27;
    /**
     * <code>CARRIER_TYPE_CD_MAXI_SINGLE3_INCH = 28;</code>
     */
    public static final int CARRIER_TYPE_CD_MAXI_SINGLE3_INCH_VALUE = 28;
    /**
     * <code>CARRIER_TYPE_CD_LP5_INCH = 29;</code>
     */
    public static final int CARRIER_TYPE_CD_LP5_INCH_VALUE = 29;
    /**
     * <code>CARRIER_TYPE_MERCHANDISE = 30;</code>
     */
    public static final int CARRIER_TYPE_MERCHANDISE_VALUE = 30;
    /**
     * <code>CARRIER_TYPE_LP_COMPILATION = 31;</code>
     */
    public static final int CARRIER_TYPE_LP_COMPILATION_VALUE = 31;
    /**
     * <code>CARRIER_TYPE_45RPM12_INCH_MAXI_SINGLE = 32;</code>
     */
    public static final int CARRIER_TYPE_45RPM12_INCH_MAXI_SINGLE_VALUE = 32;
    /**
     * <code>CARRIER_TYPE_CD_VIDEO5_LP_N_T_S_C = 33;</code>
     */
    public static final int CARRIER_TYPE_CD_VIDEO5_LP_N_T_S_C_VALUE = 33;
    /**
     * <code>CARRIER_TYPE_45RPM7_INCH_SINGLE = 34;</code>
     */
    public static final int CARRIER_TYPE_45RPM7_INCH_SINGLE_VALUE = 34;
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_COMPILATION = 35;</code>
     */
    public static final int CARRIER_TYPE_CD_EXTRA_COMPILATION_VALUE = 35;
    /**
     * <code>CARRIER_TYPE_CD_LP_ENHANCED = 36;</code>
     */
    public static final int CARRIER_TYPE_CD_LP_ENHANCED_VALUE = 36;
    /**
     * <code>CARRIER_TYPE_33RPM7_INCH_L_P = 37;</code>
     */
    public static final int CARRIER_TYPE_33RPM7_INCH_L_P_VALUE = 37;
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_P_A_L = 38;</code>
     */
    public static final int CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_P_A_L_VALUE = 38;
    /**
     * <code>CARRIER_TYPE_CD_PLUS_CD_BONUS = 39;</code>
     */
    public static final int CARRIER_TYPE_CD_PLUS_CD_BONUS_VALUE = 39;
    /**
     * <code>CARRIER_TYPE_CD_VIDEO_AUDIO_COMPATIBLE = 40;</code>
     */
    public static final int CARRIER_TYPE_CD_VIDEO_AUDIO_COMPATIBLE_VALUE = 40;
    /**
     * <code>CARRIER_TYPE_CD_ROM = 41;</code>
     */
    public static final int CARRIER_TYPE_CD_ROM_VALUE = 41;
    /**
     * <code>CARRIER_TYPE_CD_SINGLE = 42;</code>
     */
    public static final int CARRIER_TYPE_CD_SINGLE_VALUE = 42;
    /**
     * <code>CARRIER_TYPE_MC_COMP_IDENTICAL_TO_CD_COMP = 43;</code>
     */
    public static final int CARRIER_TYPE_MC_COMP_IDENTICAL_TO_CD_COMP_VALUE = 43;
    /**
     * <code>CARRIER_TYPE_MINI_DISC_SINGLE_MAXI_SINGLE = 44;</code>
     */
    public static final int CARRIER_TYPE_MINI_DISC_SINGLE_MAXI_SINGLE_VALUE = 44;
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO5_SINGLE_P_A_L = 45;</code>
     */
    public static final int CARRIER_TYPE_DVD_VIDEO5_SINGLE_P_A_L_VALUE = 45;
    /**
     * <code>CARRIER_TYPE_MEMORY_DEVICE = 46;</code>
     */
    public static final int CARRIER_TYPE_MEMORY_DEVICE_VALUE = 46;
    /**
     * <code>CARRIER_TYPE_VHS_P_A_L = 47;</code>
     */
    public static final int CARRIER_TYPE_VHS_P_A_L_VALUE = 47;
    /**
     * <code>CARRIER_TYPE_SACD_LP_STEREO_SURROUND = 48;</code>
     */
    public static final int CARRIER_TYPE_SACD_LP_STEREO_SURROUND_VALUE = 48;
    /**
     * <code>CARRIER_TYPE_DVD_AUDIO_L_P = 49;</code>
     */
    public static final int CARRIER_TYPE_DVD_AUDIO_L_P_VALUE = 49;
    /**
     * <code>CARRIER_TYPE_DVD_AUDIO = 50;</code>
     */
    public static final int CARRIER_TYPE_DVD_AUDIO_VALUE = 50;
    /**
     * <code>CARRIER_TYPE_DVD_SINGLE = 51;</code>
     */
    public static final int CARRIER_TYPE_DVD_SINGLE_VALUE = 51;
    /**
     * <code>CARRIER_TYPE_33RPM12_INCH_MAXI_SINGLE = 52;</code>
     */
    public static final int CARRIER_TYPE_33RPM12_INCH_MAXI_SINGLE_VALUE = 52;
    /**
     * <code>CARRIER_TYPE_C_D = 53;</code>
     */
    public static final int CARRIER_TYPE_C_D_VALUE = 53;
    /**
     * <code>CARRIER_TYPE_CD_MAXI_SINGLE_REMIX = 54;</code>
     */
    public static final int CARRIER_TYPE_CD_MAXI_SINGLE_REMIX_VALUE = 54;
    /**
     * <code>CARRIER_TYPE_MINI_DISC = 55;</code>
     */
    public static final int CARRIER_TYPE_MINI_DISC_VALUE = 55;
    /**
     * <code>CARRIER_TYPE_MEMORY_DEVICE_AUDIO_L_P = 56;</code>
     */
    public static final int CARRIER_TYPE_MEMORY_DEVICE_AUDIO_L_P_VALUE = 56;
    /**
     * <code>CARRIER_TYPE_33RPM10_INCH_L_P = 57;</code>
     */
    public static final int CARRIER_TYPE_33RPM10_INCH_L_P_VALUE = 57;
    /**
     * <code>CARRIER_TYPE_45RPM12_INCH_SINGLE = 58;</code>
     */
    public static final int CARRIER_TYPE_45RPM12_INCH_SINGLE_VALUE = 58;
    /**
     * <code>CARRIER_TYPE_7_INCH_MAXI_SINGLE_REMIX = 59;</code>
     */
    public static final int CARRIER_TYPE_7_INCH_MAXI_SINGLE_REMIX_VALUE = 59;
    /**
     * <code>CARRIER_TYPE_DVD_VIDEO5_SINGLE_N_T_S_C = 60;</code>
     */
    public static final int CARRIER_TYPE_DVD_VIDEO5_SINGLE_N_T_S_C_VALUE = 60;
    /**
     * <code>CARRIER_TYPE_VHS_PLUS_CD_LP = 61;</code>
     */
    public static final int CARRIER_TYPE_VHS_PLUS_CD_LP_VALUE = 61;
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_MAXI_REMIX = 62;</code>
     */
    public static final int CARRIER_TYPE_CD_EXTRA_MAXI_REMIX_VALUE = 62;
    /**
     * <code>CARRIER_TYPE_45RPM10_INCH_MAXI_SINGLE = 63;</code>
     */
    public static final int CARRIER_TYPE_45RPM10_INCH_MAXI_SINGLE_VALUE = 63;
    /**
     * <code>CARRIER_TYPE_45RPM10_INCH_L_P = 64;</code>
     */
    public static final int CARRIER_TYPE_45RPM10_INCH_L_P_VALUE = 64;
    /**
     * <code>CARRIER_TYPE_LP_COMP_IDENTICAL_TO_CD_COMP = 65;</code>
     */
    public static final int CARRIER_TYPE_LP_COMP_IDENTICAL_TO_CD_COMP_VALUE = 65;
    /**
     * <code>CARRIER_TYPE_LP_IDENTICAL_TO_C_D = 66;</code>
     */
    public static final int CARRIER_TYPE_LP_IDENTICAL_TO_C_D_VALUE = 66;
    /**
     * <code>CARRIER_TYPE_MC_COMPILATION = 67;</code>
     */
    public static final int CARRIER_TYPE_MC_COMPILATION_VALUE = 67;
    /**
     * <code>CARRIER_TYPE_CD_EP_ENHANCED = 68;</code>
     */
    public static final int CARRIER_TYPE_CD_EP_ENHANCED_VALUE = 68;
    /**
     * <code>CARRIER_TYPE_M_C = 69;</code>
     */
    public static final int CARRIER_TYPE_M_C_VALUE = 69;
    /**
     * <code>CARRIER_TYPE_DCC_COMPILATION = 70;</code>
     */
    public static final int CARRIER_TYPE_DCC_COMPILATION_VALUE = 70;
    /**
     * <code>CARRIER_TYPE_FILE_SYSTEM = 71;</code>
     */
    public static final int CARRIER_TYPE_FILE_SYSTEM_VALUE = 71;
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_L_P = 72;</code>
     */
    public static final int CARRIER_TYPE_CD_EXTRA_L_P_VALUE = 72;
    /**
     * <code>CARRIER_TYPE_CD_LP_PLUS_DVD_AUDIO = 73;</code>
     */
    public static final int CARRIER_TYPE_CD_LP_PLUS_DVD_AUDIO_VALUE = 73;
    /**
     * <code>CARRIER_TYPE_MC_DOUBLE_L_P = 74;</code>
     */
    public static final int CARRIER_TYPE_MC_DOUBLE_L_P_VALUE = 74;
    /**
     * <code>CARRIER_TYPE_MC_L_P = 75;</code>
     */
    public static final int CARRIER_TYPE_MC_L_P_VALUE = 75;
    /**
     * <code>CARRIER_TYPE_D_C_C = 76;</code>
     */
    public static final int CARRIER_TYPE_D_C_C_VALUE = 76;
    /**
     * <code>CARRIER_TYPE_HD_DVD_VIDEO_LP = 77;</code>
     */
    public static final int CARRIER_TYPE_HD_DVD_VIDEO_LP_VALUE = 77;
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_E_P = 78;</code>
     */
    public static final int CARRIER_TYPE_CD_EXTRA_E_P_VALUE = 78;
    /**
     * <code>CARRIER_TYPE_DVD_AUDIO_SINGLE = 79;</code>
     */
    public static final int CARRIER_TYPE_DVD_AUDIO_SINGLE_VALUE = 79;
    /**
     * <code>CARRIER_TYPE_MEMORY_DEVICE_MIX_L_P = 80;</code>
     */
    public static final int CARRIER_TYPE_MEMORY_DEVICE_MIX_L_P_VALUE = 80;
    /**
     * <code>CARRIER_TYPE_MEMORY_DEVICE_VIDEO_L_P = 81;</code>
     */
    public static final int CARRIER_TYPE_MEMORY_DEVICE_VIDEO_L_P_VALUE = 81;
    /**
     * <code>CARRIER_TYPE_33RPM12_INCH_LP20_TRACKS = 82;</code>
     */
    public static final int CARRIER_TYPE_33RPM12_INCH_LP20_TRACKS_VALUE = 82;
    /**
     * <code>CARRIER_TYPE_ONLINE_SYSTEM = 83;</code>
     */
    public static final int CARRIER_TYPE_ONLINE_SYSTEM_VALUE = 83;
    /**
     * <code>CARRIER_TYPE_VHS_N_T_S_C = 84;</code>
     */
    public static final int CARRIER_TYPE_VHS_N_T_S_C_VALUE = 84;
    /**
     * <code>CARRIER_TYPE_VHS_S_E_C_A_M = 85;</code>
     */
    public static final int CARRIER_TYPE_VHS_S_E_C_A_M_VALUE = 85;
    /**
     * <code>CARRIER_TYPE_MC_E_P = 86;</code>
     */
    public static final int CARRIER_TYPE_MC_E_P_VALUE = 86;
    /**
     * <code>CARRIER_TYPE_45RPM7_INCH_E_P = 87;</code>
     */
    public static final int CARRIER_TYPE_45RPM7_INCH_E_P_VALUE = 87;
    /**
     * <code>CARRIER_TYPE_DVD_ROM = 88;</code>
     */
    public static final int CARRIER_TYPE_DVD_ROM_VALUE = 88;
    /**
     * <code>CARRIER_TYPE_CD_COMPILATION = 89;</code>
     */
    public static final int CARRIER_TYPE_CD_COMPILATION_VALUE = 89;
    /**
     * <code>CARRIER_TYPE_45RPM10_INCH_SINGLE = 90;</code>
     */
    public static final int CARRIER_TYPE_45RPM10_INCH_SINGLE_VALUE = 90;
    /**
     * <code>CARRIER_TYPE_MC_REMIX = 91;</code>
     */
    public static final int CARRIER_TYPE_MC_REMIX_VALUE = 91;
    /**
     * <code>CARRIER_TYPE_MINI_DISC_MAXI_REMIX = 92;</code>
     */
    public static final int CARRIER_TYPE_MINI_DISC_MAXI_REMIX_VALUE = 92;
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_SINGLE = 93;</code>
     */
    public static final int CARRIER_TYPE_CD_EXTRA_SINGLE_VALUE = 93;
    /**
     * <code>CARRIER_TYPE_CD_EXTRA_MAXI_SINGLE = 94;</code>
     */
    public static final int CARRIER_TYPE_CD_EXTRA_MAXI_SINGLE_VALUE = 94;
    /**
     * <code>CARRIER_TYPE_CD_VIDEO5_LP_P_A_L = 95;</code>
     */
    public static final int CARRIER_TYPE_CD_VIDEO5_LP_P_A_L_VALUE = 95;
    /**
     * <code>CARRIER_TYPE_SACD_LP_SURROUND_CD_AUDIO = 96;</code>
     */
    public static final int CARRIER_TYPE_SACD_LP_SURROUND_CD_AUDIO_VALUE = 96;
    /**
     * <code>CARRIER_TYPE_CD_SINGLE5_INCH = 97;</code>
     */
    public static final int CARRIER_TYPE_CD_SINGLE5_INCH_VALUE = 97;
    /**
     * <code>CARRIER_TYPE_33RPM12_INCH_SINGLE = 98;</code>
     */
    public static final int CARRIER_TYPE_33RPM12_INCH_SINGLE_VALUE = 98;
    /**
     * <code>CARRIER_TYPE_33RPM7_INCH_SINGLE = 99;</code>
     */
    public static final int CARRIER_TYPE_33RPM7_INCH_SINGLE_VALUE = 99;
    /**
     * <code>CARRIER_TYPE_DUAL_DISC = 100;</code>
     */
    public static final int CARRIER_TYPE_DUAL_DISC_VALUE = 100;
    /**
     * <code>CARRIER_TYPE_D_V_D = 101;</code>
     */
    public static final int CARRIER_TYPE_D_V_D_VALUE = 101;
    /**
     * <code>CARRIER_TYPE_12_INCH_DISCO_SINGLE_REMIX = 102;</code>
     */
    public static final int CARRIER_TYPE_12_INCH_DISCO_SINGLE_REMIX_VALUE = 102;
    /**
     * <code>CARRIER_TYPE_CD_SINGLE3_INCH = 103;</code>
     */
    public static final int CARRIER_TYPE_CD_SINGLE3_INCH_VALUE = 103;
    /**
     * <code>CARRIER_TYPE_CD_LP_PLUS_WEB = 104;</code>
     */
    public static final int CARRIER_TYPE_CD_LP_PLUS_WEB_VALUE = 104;
    /**
     * <code>CARRIER_TYPE_CD_LP = 105;</code>
     */
    public static final int CARRIER_TYPE_CD_LP_VALUE = 105;
    /**
     * <code>CARRIER_TYPE_CD_PLUS_DVD_BONUS = 106;</code>
     */
    public static final int CARRIER_TYPE_CD_PLUS_DVD_BONUS_VALUE = 106;
    /**
     * <code>CARRIER_TYPE_45RPM12_INCH_L_P = 107;</code>
     */
    public static final int CARRIER_TYPE_45RPM12_INCH_L_P_VALUE = 107;
    /**
     * <code>CARRIER_TYPE_SACD_LP_STEREO_CD_AUDIO = 108;</code>
     */
    public static final int CARRIER_TYPE_SACD_LP_STEREO_CD_AUDIO_VALUE = 108;
    /**
     * <code>CARRIER_TYPE_MC_MAXI_SINGLE = 109;</code>
     */
    public static final int CARRIER_TYPE_MC_MAXI_SINGLE_VALUE = 109;
    /**
     * <code>CARRIER_TYPE_MC_SINGLE = 110;</code>
     */
    public static final int CARRIER_TYPE_MC_SINGLE_VALUE = 110;
    /**
     * <code>CARRIER_TYPE_CD_MAXI_SINGLE = 111;</code>
     */
    public static final int CARRIER_TYPE_CD_MAXI_SINGLE_VALUE = 111;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CarrierType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CarrierType forNumber(int value) {
      switch (value) {
        case 0: return CARRIER_TYPE_FAN_PACK;
        case 1: return CARRIER_TYPE_SACD_PLUS_DVD_VIDEO;
        case 2: return CARRIER_TYPE_CD_MAXI_SINGLE_ENHANCED;
        case 3: return CARRIER_TYPE_DVD_VIDEO_LP_PLUS_CD_LP_OR_CD_SINGLE;
        case 4: return CARRIER_TYPE_MINI_DISC_E_P;
        case 5: return CARRIER_TYPE_S_A_C_D;
        case 6: return CARRIER_TYPE_PRE_PAID_CARD;
        case 7: return CARRIER_TYPE_LASER_DISC_LP12_INCH_N_T_S_C;
        case 8: return CARRIER_TYPE_SACD_LP_STEREO_SURROUND_CD_AUDIO;
        case 9: return CARRIER_TYPE_MC_IDENTICAL_TO_C_D;
        case 10: return CARRIER_TYPE_CD_EP;
        case 11: return CARRIER_TYPE_CD_LP_PLUS_DVD_VIDEO;
        case 12: return CARRIER_TYPE_DVD_VIDEO_LP_P_A_L;
        case 13: return CARRIER_TYPE_BLU_RAY;
        case 14: return CARRIER_TYPE_CD_EXTRA_SINGLE2_TRACKS;
        case 15: return CARRIER_TYPE_CD_LP_PLUS_CD_VIDEO;
        case 16: return CARRIER_TYPE_COMBI_PACK;
        case 17: return CARRIER_TYPE_USER_DEFINED;
        case 18: return CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_N_T_S_C;
        case 19: return CARRIER_TYPE_SACD_LP_STEREO;
        case 20: return CARRIER_TYPE_33RPM10_INCH_SINGLE;
        case 21: return CARRIER_TYPE_MINI_DISC_COMPILATION;
        case 22: return CARRIER_TYPE_33RPM12_INCH_L_P;
        case 23: return CARRIER_TYPE_DVD_VIDEO_LP_N_T_S_C;
        case 24: return CARRIER_TYPE_DVD_VIDEO;
        case 25: return CARRIER_TYPE_SACD_COMPILATION;
        case 26: return CARRIER_TYPE_MC_SINGLE_IDENTICAL_TO_C_D_S;
        case 27: return CARRIER_TYPE_DVD_AUDIO5_MAXI_SINGLE;
        case 28: return CARRIER_TYPE_CD_MAXI_SINGLE3_INCH;
        case 29: return CARRIER_TYPE_CD_LP5_INCH;
        case 30: return CARRIER_TYPE_MERCHANDISE;
        case 31: return CARRIER_TYPE_LP_COMPILATION;
        case 32: return CARRIER_TYPE_45RPM12_INCH_MAXI_SINGLE;
        case 33: return CARRIER_TYPE_CD_VIDEO5_LP_N_T_S_C;
        case 34: return CARRIER_TYPE_45RPM7_INCH_SINGLE;
        case 35: return CARRIER_TYPE_CD_EXTRA_COMPILATION;
        case 36: return CARRIER_TYPE_CD_LP_ENHANCED;
        case 37: return CARRIER_TYPE_33RPM7_INCH_L_P;
        case 38: return CARRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_P_A_L;
        case 39: return CARRIER_TYPE_CD_PLUS_CD_BONUS;
        case 40: return CARRIER_TYPE_CD_VIDEO_AUDIO_COMPATIBLE;
        case 41: return CARRIER_TYPE_CD_ROM;
        case 42: return CARRIER_TYPE_CD_SINGLE;
        case 43: return CARRIER_TYPE_MC_COMP_IDENTICAL_TO_CD_COMP;
        case 44: return CARRIER_TYPE_MINI_DISC_SINGLE_MAXI_SINGLE;
        case 45: return CARRIER_TYPE_DVD_VIDEO5_SINGLE_P_A_L;
        case 46: return CARRIER_TYPE_MEMORY_DEVICE;
        case 47: return CARRIER_TYPE_VHS_P_A_L;
        case 48: return CARRIER_TYPE_SACD_LP_STEREO_SURROUND;
        case 49: return CARRIER_TYPE_DVD_AUDIO_L_P;
        case 50: return CARRIER_TYPE_DVD_AUDIO;
        case 51: return CARRIER_TYPE_DVD_SINGLE;
        case 52: return CARRIER_TYPE_33RPM12_INCH_MAXI_SINGLE;
        case 53: return CARRIER_TYPE_C_D;
        case 54: return CARRIER_TYPE_CD_MAXI_SINGLE_REMIX;
        case 55: return CARRIER_TYPE_MINI_DISC;
        case 56: return CARRIER_TYPE_MEMORY_DEVICE_AUDIO_L_P;
        case 57: return CARRIER_TYPE_33RPM10_INCH_L_P;
        case 58: return CARRIER_TYPE_45RPM12_INCH_SINGLE;
        case 59: return CARRIER_TYPE_7_INCH_MAXI_SINGLE_REMIX;
        case 60: return CARRIER_TYPE_DVD_VIDEO5_SINGLE_N_T_S_C;
        case 61: return CARRIER_TYPE_VHS_PLUS_CD_LP;
        case 62: return CARRIER_TYPE_CD_EXTRA_MAXI_REMIX;
        case 63: return CARRIER_TYPE_45RPM10_INCH_MAXI_SINGLE;
        case 64: return CARRIER_TYPE_45RPM10_INCH_L_P;
        case 65: return CARRIER_TYPE_LP_COMP_IDENTICAL_TO_CD_COMP;
        case 66: return CARRIER_TYPE_LP_IDENTICAL_TO_C_D;
        case 67: return CARRIER_TYPE_MC_COMPILATION;
        case 68: return CARRIER_TYPE_CD_EP_ENHANCED;
        case 69: return CARRIER_TYPE_M_C;
        case 70: return CARRIER_TYPE_DCC_COMPILATION;
        case 71: return CARRIER_TYPE_FILE_SYSTEM;
        case 72: return CARRIER_TYPE_CD_EXTRA_L_P;
        case 73: return CARRIER_TYPE_CD_LP_PLUS_DVD_AUDIO;
        case 74: return CARRIER_TYPE_MC_DOUBLE_L_P;
        case 75: return CARRIER_TYPE_MC_L_P;
        case 76: return CARRIER_TYPE_D_C_C;
        case 77: return CARRIER_TYPE_HD_DVD_VIDEO_LP;
        case 78: return CARRIER_TYPE_CD_EXTRA_E_P;
        case 79: return CARRIER_TYPE_DVD_AUDIO_SINGLE;
        case 80: return CARRIER_TYPE_MEMORY_DEVICE_MIX_L_P;
        case 81: return CARRIER_TYPE_MEMORY_DEVICE_VIDEO_L_P;
        case 82: return CARRIER_TYPE_33RPM12_INCH_LP20_TRACKS;
        case 83: return CARRIER_TYPE_ONLINE_SYSTEM;
        case 84: return CARRIER_TYPE_VHS_N_T_S_C;
        case 85: return CARRIER_TYPE_VHS_S_E_C_A_M;
        case 86: return CARRIER_TYPE_MC_E_P;
        case 87: return CARRIER_TYPE_45RPM7_INCH_E_P;
        case 88: return CARRIER_TYPE_DVD_ROM;
        case 89: return CARRIER_TYPE_CD_COMPILATION;
        case 90: return CARRIER_TYPE_45RPM10_INCH_SINGLE;
        case 91: return CARRIER_TYPE_MC_REMIX;
        case 92: return CARRIER_TYPE_MINI_DISC_MAXI_REMIX;
        case 93: return CARRIER_TYPE_CD_EXTRA_SINGLE;
        case 94: return CARRIER_TYPE_CD_EXTRA_MAXI_SINGLE;
        case 95: return CARRIER_TYPE_CD_VIDEO5_LP_P_A_L;
        case 96: return CARRIER_TYPE_SACD_LP_SURROUND_CD_AUDIO;
        case 97: return CARRIER_TYPE_CD_SINGLE5_INCH;
        case 98: return CARRIER_TYPE_33RPM12_INCH_SINGLE;
        case 99: return CARRIER_TYPE_33RPM7_INCH_SINGLE;
        case 100: return CARRIER_TYPE_DUAL_DISC;
        case 101: return CARRIER_TYPE_D_V_D;
        case 102: return CARRIER_TYPE_12_INCH_DISCO_SINGLE_REMIX;
        case 103: return CARRIER_TYPE_CD_SINGLE3_INCH;
        case 104: return CARRIER_TYPE_CD_LP_PLUS_WEB;
        case 105: return CARRIER_TYPE_CD_LP;
        case 106: return CARRIER_TYPE_CD_PLUS_DVD_BONUS;
        case 107: return CARRIER_TYPE_45RPM12_INCH_L_P;
        case 108: return CARRIER_TYPE_SACD_LP_STEREO_CD_AUDIO;
        case 109: return CARRIER_TYPE_MC_MAXI_SINGLE;
        case 110: return CARRIER_TYPE_MC_SINGLE;
        case 111: return CARRIER_TYPE_CD_MAXI_SINGLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CarrierType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CarrierType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CarrierType>() {
            public CarrierType findValueByNumber(int number) {
              return CarrierType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(16);
    }

    private static final CarrierType[] VALUES = values();

    public static CarrierType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CarrierType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CarrierType)
  }

  /**
   * Protobuf enum {@code avs.CatalogTransferType}
   */
  public enum CatalogTransferType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CATALOG_TRANSFER_TYPE_US_STATUTORY_REVERSION = 0;</code>
     */
    CATALOG_TRANSFER_TYPE_US_STATUTORY_REVERSION(0),
    ;

    /**
     * <code>CATALOG_TRANSFER_TYPE_US_STATUTORY_REVERSION = 0;</code>
     */
    public static final int CATALOG_TRANSFER_TYPE_US_STATUTORY_REVERSION_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CatalogTransferType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CatalogTransferType forNumber(int value) {
      switch (value) {
        case 0: return CATALOG_TRANSFER_TYPE_US_STATUTORY_REVERSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CatalogTransferType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CatalogTransferType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CatalogTransferType>() {
            public CatalogTransferType findValueByNumber(int number) {
              return CatalogTransferType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(17);
    }

    private static final CatalogTransferType[] VALUES = values();

    public static CatalogTransferType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CatalogTransferType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CatalogTransferType)
  }

  /**
   * Protobuf enum {@code avs.CdProtectionType}
   */
  public enum CdProtectionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CD_PROTECTION_TYPE_KEY2_AUDIO = 0;</code>
     */
    CD_PROTECTION_TYPE_KEY2_AUDIO(0),
    /**
     * <code>CD_PROTECTION_TYPE_UNKNOWN = 1;</code>
     */
    CD_PROTECTION_TYPE_UNKNOWN(1),
    /**
     * <code>CD_PROTECTION_TYPE_C_D_S100 = 2;</code>
     */
    CD_PROTECTION_TYPE_C_D_S100(2),
    /**
     * <code>CD_PROTECTION_TYPE_NOT_PROTECTED = 3;</code>
     */
    CD_PROTECTION_TYPE_NOT_PROTECTED(3),
    /**
     * <code>CD_PROTECTION_TYPE_C_D_S300 = 4;</code>
     */
    CD_PROTECTION_TYPE_C_D_S300(4),
    /**
     * <code>CD_PROTECTION_TYPE_MEDIA_MAX_C_D3 = 5;</code>
     */
    CD_PROTECTION_TYPE_MEDIA_MAX_C_D3(5),
    /**
     * <code>CD_PROTECTION_TYPE_C_D_S200 = 6;</code>
     */
    CD_PROTECTION_TYPE_C_D_S200(6),
    /**
     * <code>CD_PROTECTION_TYPE_USER_DEFINED = 7;</code>
     */
    CD_PROTECTION_TYPE_USER_DEFINED(7),
    ;

    /**
     * <code>CD_PROTECTION_TYPE_KEY2_AUDIO = 0;</code>
     */
    public static final int CD_PROTECTION_TYPE_KEY2_AUDIO_VALUE = 0;
    /**
     * <code>CD_PROTECTION_TYPE_UNKNOWN = 1;</code>
     */
    public static final int CD_PROTECTION_TYPE_UNKNOWN_VALUE = 1;
    /**
     * <code>CD_PROTECTION_TYPE_C_D_S100 = 2;</code>
     */
    public static final int CD_PROTECTION_TYPE_C_D_S100_VALUE = 2;
    /**
     * <code>CD_PROTECTION_TYPE_NOT_PROTECTED = 3;</code>
     */
    public static final int CD_PROTECTION_TYPE_NOT_PROTECTED_VALUE = 3;
    /**
     * <code>CD_PROTECTION_TYPE_C_D_S300 = 4;</code>
     */
    public static final int CD_PROTECTION_TYPE_C_D_S300_VALUE = 4;
    /**
     * <code>CD_PROTECTION_TYPE_MEDIA_MAX_C_D3 = 5;</code>
     */
    public static final int CD_PROTECTION_TYPE_MEDIA_MAX_C_D3_VALUE = 5;
    /**
     * <code>CD_PROTECTION_TYPE_C_D_S200 = 6;</code>
     */
    public static final int CD_PROTECTION_TYPE_C_D_S200_VALUE = 6;
    /**
     * <code>CD_PROTECTION_TYPE_USER_DEFINED = 7;</code>
     */
    public static final int CD_PROTECTION_TYPE_USER_DEFINED_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CdProtectionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CdProtectionType forNumber(int value) {
      switch (value) {
        case 0: return CD_PROTECTION_TYPE_KEY2_AUDIO;
        case 1: return CD_PROTECTION_TYPE_UNKNOWN;
        case 2: return CD_PROTECTION_TYPE_C_D_S100;
        case 3: return CD_PROTECTION_TYPE_NOT_PROTECTED;
        case 4: return CD_PROTECTION_TYPE_C_D_S300;
        case 5: return CD_PROTECTION_TYPE_MEDIA_MAX_C_D3;
        case 6: return CD_PROTECTION_TYPE_C_D_S200;
        case 7: return CD_PROTECTION_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CdProtectionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CdProtectionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CdProtectionType>() {
            public CdProtectionType findValueByNumber(int number) {
              return CdProtectionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(18);
    }

    private static final CdProtectionType[] VALUES = values();

    public static CdProtectionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CdProtectionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CdProtectionType)
  }

  /**
   * Protobuf enum {@code avs.CharacterType}
   */
  public enum CharacterType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHARACTER_TYPE_OTHER_CHARACTER = 0;</code>
     */
    CHARACTER_TYPE_OTHER_CHARACTER(0),
    /**
     * <code>CHARACTER_TYPE_MAIN_CHARACTER = 1;</code>
     */
    CHARACTER_TYPE_MAIN_CHARACTER(1),
    /**
     * <code>CHARACTER_TYPE_SUPPORTING_CHARACTER = 2;</code>
     */
    CHARACTER_TYPE_SUPPORTING_CHARACTER(2),
    ;

    /**
     * <code>CHARACTER_TYPE_OTHER_CHARACTER = 0;</code>
     */
    public static final int CHARACTER_TYPE_OTHER_CHARACTER_VALUE = 0;
    /**
     * <code>CHARACTER_TYPE_MAIN_CHARACTER = 1;</code>
     */
    public static final int CHARACTER_TYPE_MAIN_CHARACTER_VALUE = 1;
    /**
     * <code>CHARACTER_TYPE_SUPPORTING_CHARACTER = 2;</code>
     */
    public static final int CHARACTER_TYPE_SUPPORTING_CHARACTER_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CharacterType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CharacterType forNumber(int value) {
      switch (value) {
        case 0: return CHARACTER_TYPE_OTHER_CHARACTER;
        case 1: return CHARACTER_TYPE_MAIN_CHARACTER;
        case 2: return CHARACTER_TYPE_SUPPORTING_CHARACTER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CharacterType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CharacterType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CharacterType>() {
            public CharacterType findValueByNumber(int number) {
              return CharacterType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(19);
    }

    private static final CharacterType[] VALUES = values();

    public static CharacterType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CharacterType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CharacterType)
  }

  /**
   * Protobuf enum {@code avs.ClaimStatus}
   */
  public enum ClaimStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLAIM_STATUS_OVER_CLAIM = 0;</code>
     */
    CLAIM_STATUS_OVER_CLAIM(0),
    /**
     * <code>CLAIM_STATUS_COMPLETE_CLAIM = 1;</code>
     */
    CLAIM_STATUS_COMPLETE_CLAIM(1),
    /**
     * <code>CLAIM_STATUS_UNDER_CLAIM = 2;</code>
     */
    CLAIM_STATUS_UNDER_CLAIM(2),
    /**
     * <code>CLAIM_STATUS_COMPLETE_UNDER_CLAIM = 3;</code>
     */
    CLAIM_STATUS_COMPLETE_UNDER_CLAIM(3),
    /**
     * <code>CLAIM_STATUS_INCOMPLETE_UNDER_CLAIM = 4;</code>
     */
    CLAIM_STATUS_INCOMPLETE_UNDER_CLAIM(4),
    /**
     * <code>CLAIM_STATUS_INCOMPLETE_CLAIM = 5;</code>
     */
    CLAIM_STATUS_INCOMPLETE_CLAIM(5),
    /**
     * <code>CLAIM_STATUS_MINOR_OVER_CLAIM = 6;</code>
     */
    CLAIM_STATUS_MINOR_OVER_CLAIM(6),
    /**
     * <code>CLAIM_STATUS_MAJOR_OVER_CLAIM = 7;</code>
     */
    CLAIM_STATUS_MAJOR_OVER_CLAIM(7),
    ;

    /**
     * <code>CLAIM_STATUS_OVER_CLAIM = 0;</code>
     */
    public static final int CLAIM_STATUS_OVER_CLAIM_VALUE = 0;
    /**
     * <code>CLAIM_STATUS_COMPLETE_CLAIM = 1;</code>
     */
    public static final int CLAIM_STATUS_COMPLETE_CLAIM_VALUE = 1;
    /**
     * <code>CLAIM_STATUS_UNDER_CLAIM = 2;</code>
     */
    public static final int CLAIM_STATUS_UNDER_CLAIM_VALUE = 2;
    /**
     * <code>CLAIM_STATUS_COMPLETE_UNDER_CLAIM = 3;</code>
     */
    public static final int CLAIM_STATUS_COMPLETE_UNDER_CLAIM_VALUE = 3;
    /**
     * <code>CLAIM_STATUS_INCOMPLETE_UNDER_CLAIM = 4;</code>
     */
    public static final int CLAIM_STATUS_INCOMPLETE_UNDER_CLAIM_VALUE = 4;
    /**
     * <code>CLAIM_STATUS_INCOMPLETE_CLAIM = 5;</code>
     */
    public static final int CLAIM_STATUS_INCOMPLETE_CLAIM_VALUE = 5;
    /**
     * <code>CLAIM_STATUS_MINOR_OVER_CLAIM = 6;</code>
     */
    public static final int CLAIM_STATUS_MINOR_OVER_CLAIM_VALUE = 6;
    /**
     * <code>CLAIM_STATUS_MAJOR_OVER_CLAIM = 7;</code>
     */
    public static final int CLAIM_STATUS_MAJOR_OVER_CLAIM_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClaimStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ClaimStatus forNumber(int value) {
      switch (value) {
        case 0: return CLAIM_STATUS_OVER_CLAIM;
        case 1: return CLAIM_STATUS_COMPLETE_CLAIM;
        case 2: return CLAIM_STATUS_UNDER_CLAIM;
        case 3: return CLAIM_STATUS_COMPLETE_UNDER_CLAIM;
        case 4: return CLAIM_STATUS_INCOMPLETE_UNDER_CLAIM;
        case 5: return CLAIM_STATUS_INCOMPLETE_CLAIM;
        case 6: return CLAIM_STATUS_MINOR_OVER_CLAIM;
        case 7: return CLAIM_STATUS_MAJOR_OVER_CLAIM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClaimStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ClaimStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClaimStatus>() {
            public ClaimStatus findValueByNumber(int number) {
              return ClaimStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(20);
    }

    private static final ClaimStatus[] VALUES = values();

    public static ClaimStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ClaimStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ClaimStatus)
  }

  /**
   * Protobuf enum {@code avs.ClassifiedGenre}
   */
  public enum ClassifiedGenre
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLASSIFIED_GENRE_HIP_HOP = 0;</code>
     */
    CLASSIFIED_GENRE_HIP_HOP(0),
    /**
     * <code>CLASSIFIED_GENRE_R__APO__N__APO___B = 1;</code>
     */
    CLASSIFIED_GENRE_R__APO__N__APO___B(1),
    /**
     * <code>CLASSIFIED_GENRE_SPOKEN = 2;</code>
     */
    CLASSIFIED_GENRE_SPOKEN(2),
    /**
     * <code>CLASSIFIED_GENRE_ROCK = 3;</code>
     */
    CLASSIFIED_GENRE_ROCK(3),
    /**
     * <code>CLASSIFIED_GENRE_ELECTRONIC_MUSIC = 4;</code>
     */
    CLASSIFIED_GENRE_ELECTRONIC_MUSIC(4),
    /**
     * <code>CLASSIFIED_GENRE_FOLK = 5;</code>
     */
    CLASSIFIED_GENRE_FOLK(5),
    /**
     * <code>CLASSIFIED_GENRE_BLUES = 6;</code>
     */
    CLASSIFIED_GENRE_BLUES(6),
    /**
     * <code>CLASSIFIED_GENRE_POP = 7;</code>
     */
    CLASSIFIED_GENRE_POP(7),
    /**
     * <code>CLASSIFIED_GENRE_COUNTRY_MUSIC = 8;</code>
     */
    CLASSIFIED_GENRE_COUNTRY_MUSIC(8),
    /**
     * <code>CLASSIFIED_GENRE_WORLD_MUSIC = 9;</code>
     */
    CLASSIFIED_GENRE_WORLD_MUSIC(9),
    /**
     * <code>CLASSIFIED_GENRE_JAZZ = 10;</code>
     */
    CLASSIFIED_GENRE_JAZZ(10),
    /**
     * <code>CLASSIFIED_GENRE_CLASSICAL_MUSIC = 11;</code>
     */
    CLASSIFIED_GENRE_CLASSICAL_MUSIC(11),
    /**
     * <code>CLASSIFIED_GENRE_GOSPEL = 12;</code>
     */
    CLASSIFIED_GENRE_GOSPEL(12),
    /**
     * <code>CLASSIFIED_GENRE_LATIN = 13;</code>
     */
    CLASSIFIED_GENRE_LATIN(13),
    /**
     * <code>CLASSIFIED_GENRE_TRADITIONAL = 14;</code>
     */
    CLASSIFIED_GENRE_TRADITIONAL(14),
    /**
     * <code>CLASSIFIED_GENRE_REGGAE = 15;</code>
     */
    CLASSIFIED_GENRE_REGGAE(15),
    /**
     * <code>CLASSIFIED_GENRE_USER_DEFINED = 16;</code>
     */
    CLASSIFIED_GENRE_USER_DEFINED(16),
    ;

    /**
     * <code>CLASSIFIED_GENRE_HIP_HOP = 0;</code>
     */
    public static final int CLASSIFIED_GENRE_HIP_HOP_VALUE = 0;
    /**
     * <code>CLASSIFIED_GENRE_R__APO__N__APO___B = 1;</code>
     */
    public static final int CLASSIFIED_GENRE_R__APO__N__APO___B_VALUE = 1;
    /**
     * <code>CLASSIFIED_GENRE_SPOKEN = 2;</code>
     */
    public static final int CLASSIFIED_GENRE_SPOKEN_VALUE = 2;
    /**
     * <code>CLASSIFIED_GENRE_ROCK = 3;</code>
     */
    public static final int CLASSIFIED_GENRE_ROCK_VALUE = 3;
    /**
     * <code>CLASSIFIED_GENRE_ELECTRONIC_MUSIC = 4;</code>
     */
    public static final int CLASSIFIED_GENRE_ELECTRONIC_MUSIC_VALUE = 4;
    /**
     * <code>CLASSIFIED_GENRE_FOLK = 5;</code>
     */
    public static final int CLASSIFIED_GENRE_FOLK_VALUE = 5;
    /**
     * <code>CLASSIFIED_GENRE_BLUES = 6;</code>
     */
    public static final int CLASSIFIED_GENRE_BLUES_VALUE = 6;
    /**
     * <code>CLASSIFIED_GENRE_POP = 7;</code>
     */
    public static final int CLASSIFIED_GENRE_POP_VALUE = 7;
    /**
     * <code>CLASSIFIED_GENRE_COUNTRY_MUSIC = 8;</code>
     */
    public static final int CLASSIFIED_GENRE_COUNTRY_MUSIC_VALUE = 8;
    /**
     * <code>CLASSIFIED_GENRE_WORLD_MUSIC = 9;</code>
     */
    public static final int CLASSIFIED_GENRE_WORLD_MUSIC_VALUE = 9;
    /**
     * <code>CLASSIFIED_GENRE_JAZZ = 10;</code>
     */
    public static final int CLASSIFIED_GENRE_JAZZ_VALUE = 10;
    /**
     * <code>CLASSIFIED_GENRE_CLASSICAL_MUSIC = 11;</code>
     */
    public static final int CLASSIFIED_GENRE_CLASSICAL_MUSIC_VALUE = 11;
    /**
     * <code>CLASSIFIED_GENRE_GOSPEL = 12;</code>
     */
    public static final int CLASSIFIED_GENRE_GOSPEL_VALUE = 12;
    /**
     * <code>CLASSIFIED_GENRE_LATIN = 13;</code>
     */
    public static final int CLASSIFIED_GENRE_LATIN_VALUE = 13;
    /**
     * <code>CLASSIFIED_GENRE_TRADITIONAL = 14;</code>
     */
    public static final int CLASSIFIED_GENRE_TRADITIONAL_VALUE = 14;
    /**
     * <code>CLASSIFIED_GENRE_REGGAE = 15;</code>
     */
    public static final int CLASSIFIED_GENRE_REGGAE_VALUE = 15;
    /**
     * <code>CLASSIFIED_GENRE_USER_DEFINED = 16;</code>
     */
    public static final int CLASSIFIED_GENRE_USER_DEFINED_VALUE = 16;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClassifiedGenre valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ClassifiedGenre forNumber(int value) {
      switch (value) {
        case 0: return CLASSIFIED_GENRE_HIP_HOP;
        case 1: return CLASSIFIED_GENRE_R__APO__N__APO___B;
        case 2: return CLASSIFIED_GENRE_SPOKEN;
        case 3: return CLASSIFIED_GENRE_ROCK;
        case 4: return CLASSIFIED_GENRE_ELECTRONIC_MUSIC;
        case 5: return CLASSIFIED_GENRE_FOLK;
        case 6: return CLASSIFIED_GENRE_BLUES;
        case 7: return CLASSIFIED_GENRE_POP;
        case 8: return CLASSIFIED_GENRE_COUNTRY_MUSIC;
        case 9: return CLASSIFIED_GENRE_WORLD_MUSIC;
        case 10: return CLASSIFIED_GENRE_JAZZ;
        case 11: return CLASSIFIED_GENRE_CLASSICAL_MUSIC;
        case 12: return CLASSIFIED_GENRE_GOSPEL;
        case 13: return CLASSIFIED_GENRE_LATIN;
        case 14: return CLASSIFIED_GENRE_TRADITIONAL;
        case 15: return CLASSIFIED_GENRE_REGGAE;
        case 16: return CLASSIFIED_GENRE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClassifiedGenre>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ClassifiedGenre> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClassifiedGenre>() {
            public ClassifiedGenre findValueByNumber(int number) {
              return ClassifiedGenre.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(21);
    }

    private static final ClassifiedGenre[] VALUES = values();

    public static ClassifiedGenre valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ClassifiedGenre(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ClassifiedGenre)
  }

  /**
   * Protobuf enum {@code avs.CodingType}
   */
  public enum CodingType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CODING_TYPE_LOSSY = 0;</code>
     */
    CODING_TYPE_LOSSY(0),
    /**
     * <code>CODING_TYPE_LOSSLESS = 1;</code>
     */
    CODING_TYPE_LOSSLESS(1),
    ;

    /**
     * <code>CODING_TYPE_LOSSY = 0;</code>
     */
    public static final int CODING_TYPE_LOSSY_VALUE = 0;
    /**
     * <code>CODING_TYPE_LOSSLESS = 1;</code>
     */
    public static final int CODING_TYPE_LOSSLESS_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CodingType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CodingType forNumber(int value) {
      switch (value) {
        case 0: return CODING_TYPE_LOSSY;
        case 1: return CODING_TYPE_LOSSLESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CodingType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CodingType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CodingType>() {
            public CodingType findValueByNumber(int number) {
              return CodingType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(22);
    }

    private static final CodingType[] VALUES = values();

    public static CodingType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CodingType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CodingType)
  }

  /**
   * Protobuf enum {@code avs.CollectionMandateType}
   */
  public enum CollectionMandateType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COLLECTION_MANDATE_TYPE_PERFORMER = 0;</code>
     */
    COLLECTION_MANDATE_TYPE_PERFORMER(0),
    /**
     * <code>COLLECTION_MANDATE_TYPE_RIGHTS_ORGANIZATION = 1;</code>
     */
    COLLECTION_MANDATE_TYPE_RIGHTS_ORGANIZATION(1),
    ;

    /**
     * <code>COLLECTION_MANDATE_TYPE_PERFORMER = 0;</code>
     */
    public static final int COLLECTION_MANDATE_TYPE_PERFORMER_VALUE = 0;
    /**
     * <code>COLLECTION_MANDATE_TYPE_RIGHTS_ORGANIZATION = 1;</code>
     */
    public static final int COLLECTION_MANDATE_TYPE_RIGHTS_ORGANIZATION_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CollectionMandateType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CollectionMandateType forNumber(int value) {
      switch (value) {
        case 0: return COLLECTION_MANDATE_TYPE_PERFORMER;
        case 1: return COLLECTION_MANDATE_TYPE_RIGHTS_ORGANIZATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CollectionMandateType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CollectionMandateType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CollectionMandateType>() {
            public CollectionMandateType findValueByNumber(int number) {
              return CollectionMandateType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(23);
    }

    private static final CollectionMandateType[] VALUES = values();

    public static CollectionMandateType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CollectionMandateType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CollectionMandateType)
  }

  /**
   * Protobuf enum {@code avs.CommentaryNoteType}
   */
  public enum CommentaryNoteType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMMENTARY_NOTE_TYPE_USER_DEFINED = 0;</code>
     */
    COMMENTARY_NOTE_TYPE_USER_DEFINED(0),
    ;

    /**
     * <code>COMMENTARY_NOTE_TYPE_USER_DEFINED = 0;</code>
     */
    public static final int COMMENTARY_NOTE_TYPE_USER_DEFINED_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommentaryNoteType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CommentaryNoteType forNumber(int value) {
      switch (value) {
        case 0: return COMMENTARY_NOTE_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommentaryNoteType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CommentaryNoteType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommentaryNoteType>() {
            public CommentaryNoteType findValueByNumber(int number) {
              return CommentaryNoteType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(24);
    }

    private static final CommentaryNoteType[] VALUES = values();

    public static CommentaryNoteType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CommentaryNoteType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CommentaryNoteType)
  }

  /**
   * Protobuf enum {@code avs.CommercialModelType}
   */
  public enum CommercialModelType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMMERCIAL_MODEL_TYPE_AS_PER_CONTRACT = 0;</code>
     */
    COMMERCIAL_MODEL_TYPE_AS_PER_CONTRACT(0),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_FREE_OF_CHARGE_MODEL = 1;</code>
     */
    COMMERCIAL_MODEL_TYPE_FREE_OF_CHARGE_MODEL(1),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_ADVERTISEMENT_SUPPORTED_MODEL = 2;</code>
     */
    COMMERCIAL_MODEL_TYPE_ADVERTISEMENT_SUPPORTED_MODEL(2),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_UNKNOWN = 3;</code>
     */
    COMMERCIAL_MODEL_TYPE_UNKNOWN(3),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_RIGHTS_CLAIM_MODEL = 4;</code>
     */
    COMMERCIAL_MODEL_TYPE_RIGHTS_CLAIM_MODEL(4),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_SUBSCRIPTION_MODEL = 5;</code>
     */
    COMMERCIAL_MODEL_TYPE_SUBSCRIPTION_MODEL(5),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_PERFORMANCE_ROYALTIES_MODEL = 6;</code>
     */
    COMMERCIAL_MODEL_TYPE_PERFORMANCE_ROYALTIES_MODEL(6),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_DEVICE_FEE_MODEL = 7;</code>
     */
    COMMERCIAL_MODEL_TYPE_DEVICE_FEE_MODEL(7),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_USER_DEFINED = 8;</code>
     */
    COMMERCIAL_MODEL_TYPE_USER_DEFINED(8),
    /**
     * <code>COMMERCIAL_MODEL_TYPE_PAY_AS_YOU_GO_MODEL = 9;</code>
     */
    COMMERCIAL_MODEL_TYPE_PAY_AS_YOU_GO_MODEL(9),
    ;

    /**
     * <code>COMMERCIAL_MODEL_TYPE_AS_PER_CONTRACT = 0;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_AS_PER_CONTRACT_VALUE = 0;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_FREE_OF_CHARGE_MODEL = 1;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_FREE_OF_CHARGE_MODEL_VALUE = 1;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_ADVERTISEMENT_SUPPORTED_MODEL = 2;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_ADVERTISEMENT_SUPPORTED_MODEL_VALUE = 2;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_UNKNOWN = 3;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_UNKNOWN_VALUE = 3;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_RIGHTS_CLAIM_MODEL = 4;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_RIGHTS_CLAIM_MODEL_VALUE = 4;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_SUBSCRIPTION_MODEL = 5;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_SUBSCRIPTION_MODEL_VALUE = 5;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_PERFORMANCE_ROYALTIES_MODEL = 6;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_PERFORMANCE_ROYALTIES_MODEL_VALUE = 6;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_DEVICE_FEE_MODEL = 7;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_DEVICE_FEE_MODEL_VALUE = 7;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_USER_DEFINED = 8;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_USER_DEFINED_VALUE = 8;
    /**
     * <code>COMMERCIAL_MODEL_TYPE_PAY_AS_YOU_GO_MODEL = 9;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE_PAY_AS_YOU_GO_MODEL_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommercialModelType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CommercialModelType forNumber(int value) {
      switch (value) {
        case 0: return COMMERCIAL_MODEL_TYPE_AS_PER_CONTRACT;
        case 1: return COMMERCIAL_MODEL_TYPE_FREE_OF_CHARGE_MODEL;
        case 2: return COMMERCIAL_MODEL_TYPE_ADVERTISEMENT_SUPPORTED_MODEL;
        case 3: return COMMERCIAL_MODEL_TYPE_UNKNOWN;
        case 4: return COMMERCIAL_MODEL_TYPE_RIGHTS_CLAIM_MODEL;
        case 5: return COMMERCIAL_MODEL_TYPE_SUBSCRIPTION_MODEL;
        case 6: return COMMERCIAL_MODEL_TYPE_PERFORMANCE_ROYALTIES_MODEL;
        case 7: return COMMERCIAL_MODEL_TYPE_DEVICE_FEE_MODEL;
        case 8: return COMMERCIAL_MODEL_TYPE_USER_DEFINED;
        case 9: return COMMERCIAL_MODEL_TYPE_PAY_AS_YOU_GO_MODEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommercialModelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CommercialModelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommercialModelType>() {
            public CommercialModelType findValueByNumber(int number) {
              return CommercialModelType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(25);
    }

    private static final CommercialModelType[] VALUES = values();

    public static CommercialModelType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CommercialModelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CommercialModelType)
  }

  /**
   * Protobuf enum {@code avs.CommercialModelType_ERN}
   */
  public enum CommercialModelType_ERN
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_FREE_OF_CHARGE_MODEL = 0;</code>
     */
    COMMERCIAL_MODEL_TYPE__E_R_N_FREE_OF_CHARGE_MODEL(0),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_ADVERTISEMENT_SUPPORTED_MODEL = 1;</code>
     */
    COMMERCIAL_MODEL_TYPE__E_R_N_ADVERTISEMENT_SUPPORTED_MODEL(1),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_RIGHTS_CLAIM_MODEL = 2;</code>
     */
    COMMERCIAL_MODEL_TYPE__E_R_N_RIGHTS_CLAIM_MODEL(2),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_SUBSCRIPTION_MODEL = 3;</code>
     */
    COMMERCIAL_MODEL_TYPE__E_R_N_SUBSCRIPTION_MODEL(3),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_PERFORMANCE_ROYALTIES_MODEL = 4;</code>
     */
    COMMERCIAL_MODEL_TYPE__E_R_N_PERFORMANCE_ROYALTIES_MODEL(4),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_DEVICE_FEE_MODEL = 5;</code>
     */
    COMMERCIAL_MODEL_TYPE__E_R_N_DEVICE_FEE_MODEL(5),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_USER_DEFINED = 6;</code>
     */
    COMMERCIAL_MODEL_TYPE__E_R_N_USER_DEFINED(6),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_PAY_AS_YOU_GO_MODEL = 7;</code>
     */
    COMMERCIAL_MODEL_TYPE__E_R_N_PAY_AS_YOU_GO_MODEL(7),
    ;

    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_FREE_OF_CHARGE_MODEL = 0;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__E_R_N_FREE_OF_CHARGE_MODEL_VALUE = 0;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_ADVERTISEMENT_SUPPORTED_MODEL = 1;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__E_R_N_ADVERTISEMENT_SUPPORTED_MODEL_VALUE = 1;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_RIGHTS_CLAIM_MODEL = 2;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__E_R_N_RIGHTS_CLAIM_MODEL_VALUE = 2;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_SUBSCRIPTION_MODEL = 3;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__E_R_N_SUBSCRIPTION_MODEL_VALUE = 3;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_PERFORMANCE_ROYALTIES_MODEL = 4;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__E_R_N_PERFORMANCE_ROYALTIES_MODEL_VALUE = 4;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_DEVICE_FEE_MODEL = 5;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__E_R_N_DEVICE_FEE_MODEL_VALUE = 5;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_USER_DEFINED = 6;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__E_R_N_USER_DEFINED_VALUE = 6;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__E_R_N_PAY_AS_YOU_GO_MODEL = 7;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__E_R_N_PAY_AS_YOU_GO_MODEL_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommercialModelType_ERN valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CommercialModelType_ERN forNumber(int value) {
      switch (value) {
        case 0: return COMMERCIAL_MODEL_TYPE__E_R_N_FREE_OF_CHARGE_MODEL;
        case 1: return COMMERCIAL_MODEL_TYPE__E_R_N_ADVERTISEMENT_SUPPORTED_MODEL;
        case 2: return COMMERCIAL_MODEL_TYPE__E_R_N_RIGHTS_CLAIM_MODEL;
        case 3: return COMMERCIAL_MODEL_TYPE__E_R_N_SUBSCRIPTION_MODEL;
        case 4: return COMMERCIAL_MODEL_TYPE__E_R_N_PERFORMANCE_ROYALTIES_MODEL;
        case 5: return COMMERCIAL_MODEL_TYPE__E_R_N_DEVICE_FEE_MODEL;
        case 6: return COMMERCIAL_MODEL_TYPE__E_R_N_USER_DEFINED;
        case 7: return COMMERCIAL_MODEL_TYPE__E_R_N_PAY_AS_YOU_GO_MODEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommercialModelType_ERN>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CommercialModelType_ERN> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommercialModelType_ERN>() {
            public CommercialModelType_ERN findValueByNumber(int number) {
              return CommercialModelType_ERN.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(26);
    }

    private static final CommercialModelType_ERN[] VALUES = values();

    public static CommercialModelType_ERN valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CommercialModelType_ERN(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CommercialModelType_ERN)
  }

  /**
   * Protobuf enum {@code avs.CommercialModelType_MWNL}
   */
  public enum CommercialModelType_MWNL
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMMERCIAL_MODEL_TYPE__M_W_N_L_ADVERTISEMENT_SUPPORTED_MODEL = 0;</code>
     */
    COMMERCIAL_MODEL_TYPE__M_W_N_L_ADVERTISEMENT_SUPPORTED_MODEL(0),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__M_W_N_L_SUBSCRIPTION_MODEL = 1;</code>
     */
    COMMERCIAL_MODEL_TYPE__M_W_N_L_SUBSCRIPTION_MODEL(1),
    /**
     * <code>COMMERCIAL_MODEL_TYPE__M_W_N_L_PAY_AS_YOU_GO_MODEL = 2;</code>
     */
    COMMERCIAL_MODEL_TYPE__M_W_N_L_PAY_AS_YOU_GO_MODEL(2),
    ;

    /**
     * <code>COMMERCIAL_MODEL_TYPE__M_W_N_L_ADVERTISEMENT_SUPPORTED_MODEL = 0;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__M_W_N_L_ADVERTISEMENT_SUPPORTED_MODEL_VALUE = 0;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__M_W_N_L_SUBSCRIPTION_MODEL = 1;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__M_W_N_L_SUBSCRIPTION_MODEL_VALUE = 1;
    /**
     * <code>COMMERCIAL_MODEL_TYPE__M_W_N_L_PAY_AS_YOU_GO_MODEL = 2;</code>
     */
    public static final int COMMERCIAL_MODEL_TYPE__M_W_N_L_PAY_AS_YOU_GO_MODEL_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CommercialModelType_MWNL valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CommercialModelType_MWNL forNumber(int value) {
      switch (value) {
        case 0: return COMMERCIAL_MODEL_TYPE__M_W_N_L_ADVERTISEMENT_SUPPORTED_MODEL;
        case 1: return COMMERCIAL_MODEL_TYPE__M_W_N_L_SUBSCRIPTION_MODEL;
        case 2: return COMMERCIAL_MODEL_TYPE__M_W_N_L_PAY_AS_YOU_GO_MODEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommercialModelType_MWNL>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CommercialModelType_MWNL> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommercialModelType_MWNL>() {
            public CommercialModelType_MWNL findValueByNumber(int number) {
              return CommercialModelType_MWNL.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(27);
    }

    private static final CommercialModelType_MWNL[] VALUES = values();

    public static CommercialModelType_MWNL valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CommercialModelType_MWNL(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CommercialModelType_MWNL)
  }

  /**
   * Protobuf enum {@code avs.CompilationType}
   */
  public enum CompilationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMPILATION_TYPE_NOT_COMPILED = 0;</code>
     */
    COMPILATION_TYPE_NOT_COMPILED(0),
    /**
     * <code>COMPILATION_TYPE_INTERNAL_COMPILATION = 1;</code>
     */
    COMPILATION_TYPE_INTERNAL_COMPILATION(1),
    /**
     * <code>COMPILATION_TYPE_NON_INTERNAL_COMPILATION = 2;</code>
     */
    COMPILATION_TYPE_NON_INTERNAL_COMPILATION(2),
    ;

    /**
     * <code>COMPILATION_TYPE_NOT_COMPILED = 0;</code>
     */
    public static final int COMPILATION_TYPE_NOT_COMPILED_VALUE = 0;
    /**
     * <code>COMPILATION_TYPE_INTERNAL_COMPILATION = 1;</code>
     */
    public static final int COMPILATION_TYPE_INTERNAL_COMPILATION_VALUE = 1;
    /**
     * <code>COMPILATION_TYPE_NON_INTERNAL_COMPILATION = 2;</code>
     */
    public static final int COMPILATION_TYPE_NON_INTERNAL_COMPILATION_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CompilationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CompilationType forNumber(int value) {
      switch (value) {
        case 0: return COMPILATION_TYPE_NOT_COMPILED;
        case 1: return COMPILATION_TYPE_INTERNAL_COMPILATION;
        case 2: return COMPILATION_TYPE_NON_INTERNAL_COMPILATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CompilationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CompilationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CompilationType>() {
            public CompilationType findValueByNumber(int number) {
              return CompilationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(28);
    }

    private static final CompilationType[] VALUES = values();

    public static CompilationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CompilationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CompilationType)
  }

  /**
   * Protobuf enum {@code avs.CompositeMusicalWorkType}
   */
  public enum CompositeMusicalWorkType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMPOSITE_MUSICAL_WORK_TYPE_POTPOURRI = 0;</code>
     */
    COMPOSITE_MUSICAL_WORK_TYPE_POTPOURRI(0),
    /**
     * <code>COMPOSITE_MUSICAL_WORK_TYPE_MEDLEY = 1;</code>
     */
    COMPOSITE_MUSICAL_WORK_TYPE_MEDLEY(1),
    /**
     * <code>COMPOSITE_MUSICAL_WORK_TYPE_NEITHER = 2;</code>
     */
    COMPOSITE_MUSICAL_WORK_TYPE_NEITHER(2),
    ;

    /**
     * <code>COMPOSITE_MUSICAL_WORK_TYPE_POTPOURRI = 0;</code>
     */
    public static final int COMPOSITE_MUSICAL_WORK_TYPE_POTPOURRI_VALUE = 0;
    /**
     * <code>COMPOSITE_MUSICAL_WORK_TYPE_MEDLEY = 1;</code>
     */
    public static final int COMPOSITE_MUSICAL_WORK_TYPE_MEDLEY_VALUE = 1;
    /**
     * <code>COMPOSITE_MUSICAL_WORK_TYPE_NEITHER = 2;</code>
     */
    public static final int COMPOSITE_MUSICAL_WORK_TYPE_NEITHER_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CompositeMusicalWorkType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CompositeMusicalWorkType forNumber(int value) {
      switch (value) {
        case 0: return COMPOSITE_MUSICAL_WORK_TYPE_POTPOURRI;
        case 1: return COMPOSITE_MUSICAL_WORK_TYPE_MEDLEY;
        case 2: return COMPOSITE_MUSICAL_WORK_TYPE_NEITHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CompositeMusicalWorkType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CompositeMusicalWorkType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CompositeMusicalWorkType>() {
            public CompositeMusicalWorkType findValueByNumber(int number) {
              return CompositeMusicalWorkType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(29);
    }

    private static final CompositeMusicalWorkType[] VALUES = values();

    public static CompositeMusicalWorkType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CompositeMusicalWorkType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CompositeMusicalWorkType)
  }

  /**
   * Protobuf enum {@code avs.ContainerFormat}
   */
  public enum ContainerFormat
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CONTAINER_FORMAT_M_P4 = 0;</code>
     */
    CONTAINER_FORMAT_M_P4(0),
    /**
     * <code>CONTAINER_FORMAT_QUICK_TIME = 1;</code>
     */
    CONTAINER_FORMAT_QUICK_TIME(1),
    /**
     * <code>CONTAINER_FORMAT_REAL_MEDIA = 2;</code>
     */
    CONTAINER_FORMAT_REAL_MEDIA(2),
    /**
     * <code>CONTAINER_FORMAT_A_V_I = 3;</code>
     */
    CONTAINER_FORMAT_A_V_I(3),
    /**
     * <code>CONTAINER_FORMAT_A_I_F_F = 4;</code>
     */
    CONTAINER_FORMAT_A_I_F_F(4),
    /**
     * <code>CONTAINER_FORMAT_R_M_F = 5;</code>
     */
    CONTAINER_FORMAT_R_M_F(5),
    /**
     * <code>CONTAINER_FORMAT_USER_DEFINED = 6;</code>
     */
    CONTAINER_FORMAT_USER_DEFINED(6),
    /**
     * <code>CONTAINER_FORMAT_W_A_V = 7;</code>
     */
    CONTAINER_FORMAT_W_A_V(7),
    /**
     * <code>CONTAINER_FORMAT_OGG = 8;</code>
     */
    CONTAINER_FORMAT_OGG(8),
    ;

    /**
     * <code>CONTAINER_FORMAT_M_P4 = 0;</code>
     */
    public static final int CONTAINER_FORMAT_M_P4_VALUE = 0;
    /**
     * <code>CONTAINER_FORMAT_QUICK_TIME = 1;</code>
     */
    public static final int CONTAINER_FORMAT_QUICK_TIME_VALUE = 1;
    /**
     * <code>CONTAINER_FORMAT_REAL_MEDIA = 2;</code>
     */
    public static final int CONTAINER_FORMAT_REAL_MEDIA_VALUE = 2;
    /**
     * <code>CONTAINER_FORMAT_A_V_I = 3;</code>
     */
    public static final int CONTAINER_FORMAT_A_V_I_VALUE = 3;
    /**
     * <code>CONTAINER_FORMAT_A_I_F_F = 4;</code>
     */
    public static final int CONTAINER_FORMAT_A_I_F_F_VALUE = 4;
    /**
     * <code>CONTAINER_FORMAT_R_M_F = 5;</code>
     */
    public static final int CONTAINER_FORMAT_R_M_F_VALUE = 5;
    /**
     * <code>CONTAINER_FORMAT_USER_DEFINED = 6;</code>
     */
    public static final int CONTAINER_FORMAT_USER_DEFINED_VALUE = 6;
    /**
     * <code>CONTAINER_FORMAT_W_A_V = 7;</code>
     */
    public static final int CONTAINER_FORMAT_W_A_V_VALUE = 7;
    /**
     * <code>CONTAINER_FORMAT_OGG = 8;</code>
     */
    public static final int CONTAINER_FORMAT_OGG_VALUE = 8;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContainerFormat valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ContainerFormat forNumber(int value) {
      switch (value) {
        case 0: return CONTAINER_FORMAT_M_P4;
        case 1: return CONTAINER_FORMAT_QUICK_TIME;
        case 2: return CONTAINER_FORMAT_REAL_MEDIA;
        case 3: return CONTAINER_FORMAT_A_V_I;
        case 4: return CONTAINER_FORMAT_A_I_F_F;
        case 5: return CONTAINER_FORMAT_R_M_F;
        case 6: return CONTAINER_FORMAT_USER_DEFINED;
        case 7: return CONTAINER_FORMAT_W_A_V;
        case 8: return CONTAINER_FORMAT_OGG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContainerFormat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ContainerFormat> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContainerFormat>() {
            public ContainerFormat findValueByNumber(int number) {
              return ContainerFormat.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(30);
    }

    private static final ContainerFormat[] VALUES = values();

    public static ContainerFormat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ContainerFormat(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ContainerFormat)
  }

  /**
   * Protobuf enum {@code avs.ContributorClaimStatus}
   */
  public enum ContributorClaimStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_CONFLICT = 0;</code>
     */
    CONTRIBUTOR_CLAIM_STATUS_CONFLICT(0),
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_REVOKED = 1;</code>
     */
    CONTRIBUTOR_CLAIM_STATUS_REVOKED(1),
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_NO_CONFLICT = 2;</code>
     */
    CONTRIBUTOR_CLAIM_STATUS_NO_CONFLICT(2),
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_PENDING_REVIEW = 3;</code>
     */
    CONTRIBUTOR_CLAIM_STATUS_PENDING_REVIEW(3),
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_REJECTED = 4;</code>
     */
    CONTRIBUTOR_CLAIM_STATUS_REJECTED(4),
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_DATA_INCONSISTENT = 5;</code>
     */
    CONTRIBUTOR_CLAIM_STATUS_DATA_INCONSISTENT(5),
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_ACCEPTED = 6;</code>
     */
    CONTRIBUTOR_CLAIM_STATUS_ACCEPTED(6),
    ;

    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_CONFLICT = 0;</code>
     */
    public static final int CONTRIBUTOR_CLAIM_STATUS_CONFLICT_VALUE = 0;
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_REVOKED = 1;</code>
     */
    public static final int CONTRIBUTOR_CLAIM_STATUS_REVOKED_VALUE = 1;
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_NO_CONFLICT = 2;</code>
     */
    public static final int CONTRIBUTOR_CLAIM_STATUS_NO_CONFLICT_VALUE = 2;
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_PENDING_REVIEW = 3;</code>
     */
    public static final int CONTRIBUTOR_CLAIM_STATUS_PENDING_REVIEW_VALUE = 3;
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_REJECTED = 4;</code>
     */
    public static final int CONTRIBUTOR_CLAIM_STATUS_REJECTED_VALUE = 4;
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_DATA_INCONSISTENT = 5;</code>
     */
    public static final int CONTRIBUTOR_CLAIM_STATUS_DATA_INCONSISTENT_VALUE = 5;
    /**
     * <code>CONTRIBUTOR_CLAIM_STATUS_ACCEPTED = 6;</code>
     */
    public static final int CONTRIBUTOR_CLAIM_STATUS_ACCEPTED_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContributorClaimStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ContributorClaimStatus forNumber(int value) {
      switch (value) {
        case 0: return CONTRIBUTOR_CLAIM_STATUS_CONFLICT;
        case 1: return CONTRIBUTOR_CLAIM_STATUS_REVOKED;
        case 2: return CONTRIBUTOR_CLAIM_STATUS_NO_CONFLICT;
        case 3: return CONTRIBUTOR_CLAIM_STATUS_PENDING_REVIEW;
        case 4: return CONTRIBUTOR_CLAIM_STATUS_REJECTED;
        case 5: return CONTRIBUTOR_CLAIM_STATUS_DATA_INCONSISTENT;
        case 6: return CONTRIBUTOR_CLAIM_STATUS_ACCEPTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContributorClaimStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ContributorClaimStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContributorClaimStatus>() {
            public ContributorClaimStatus findValueByNumber(int number) {
              return ContributorClaimStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(31);
    }

    private static final ContributorClaimStatus[] VALUES = values();

    public static ContributorClaimStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ContributorClaimStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ContributorClaimStatus)
  }

  /**
   * Protobuf enum {@code avs.ContributorRole}
   */
  public enum ContributorRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CONTRIBUTOR_ROLE_ARTIST = 0;</code>
     */
    CONTRIBUTOR_ROLE_ARTIST(0),
    /**
     * <code>CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL = 1;</code>
     */
    CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL(1),
    /**
     * <code>CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER = 2;</code>
     */
    CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER(2),
    /**
     * <code>CONTRIBUTOR_ROLE_INTERVIEWED_GUEST = 3;</code>
     */
    CONTRIBUTOR_ROLE_INTERVIEWED_GUEST(3),
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER = 4;</code>
     */
    CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER(4),
    /**
     * <code>CONTRIBUTOR_ROLE_CONCEPTOR = 5;</code>
     */
    CONTRIBUTOR_ROLE_CONCEPTOR(5),
    /**
     * <code>CONTRIBUTOR_ROLE_ART_COPYIST = 6;</code>
     */
    CONTRIBUTOR_ROLE_ART_COPYIST(6),
    /**
     * <code>CONTRIBUTOR_ROLE_SERIES_PRODUCER = 7;</code>
     */
    CONTRIBUTOR_ROLE_SERIES_PRODUCER(7),
    /**
     * <code>CONTRIBUTOR_ROLE_PRE_PRODUCTION = 8;</code>
     */
    CONTRIBUTOR_ROLE_PRE_PRODUCTION(8),
    /**
     * <code>CONTRIBUTOR_ROLE_LITHOGRAPHER = 9;</code>
     */
    CONTRIBUTOR_ROLE_LITHOGRAPHER(9),
    /**
     * <code>CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER = 10;</code>
     */
    CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER(10),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER = 11;</code>
     */
    CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER(11),
    /**
     * <code>CONTRIBUTOR_ROLE_TAPE_OPERATOR = 12;</code>
     */
    CONTRIBUTOR_ROLE_TAPE_OPERATOR(12),
    /**
     * <code>CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER = 13;</code>
     */
    CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER(13),
    /**
     * <code>CONTRIBUTOR_ROLE_UNKNOWN = 14;</code>
     */
    CONTRIBUTOR_ROLE_UNKNOWN(14),
    /**
     * <code>CONTRIBUTOR_ROLE_ANNOUNCER = 15;</code>
     */
    CONTRIBUTOR_ROLE_ANNOUNCER(15),
    /**
     * <code>CONTRIBUTOR_ROLE_PUPPETEER = 16;</code>
     */
    CONTRIBUTOR_ROLE_PUPPETEER(16),
    /**
     * <code>CONTRIBUTOR_ROLE_TRANSLATOR = 17;</code>
     */
    CONTRIBUTOR_ROLE_TRANSLATOR(17),
    /**
     * <code>CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST = 18;</code>
     */
    CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST(18),
    /**
     * <code>CONTRIBUTOR_ROLE_MUSICIAN = 19;</code>
     */
    CONTRIBUTOR_ROLE_MUSICIAN(19),
    /**
     * <code>CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER = 20;</code>
     */
    CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER(20),
    /**
     * <code>CONTRIBUTOR_ROLE_ACTOR = 21;</code>
     */
    CONTRIBUTOR_ROLE_ACTOR(21),
    /**
     * <code>CONTRIBUTOR_ROLE_SUB_LYRICIST = 22;</code>
     */
    CONTRIBUTOR_ROLE_SUB_LYRICIST(22),
    /**
     * <code>CONTRIBUTOR_ROLE_PAINTER = 23;</code>
     */
    CONTRIBUTOR_ROLE_PAINTER(23),
    /**
     * <code>CONTRIBUTOR_ROLE_STORY_TELLER = 24;</code>
     */
    CONTRIBUTOR_ROLE_STORY_TELLER(24),
    /**
     * <code>CONTRIBUTOR_ROLE_USER_DEFINED = 25;</code>
     */
    CONTRIBUTOR_ROLE_USER_DEFINED(25),
    /**
     * <code>CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR = 26;</code>
     */
    CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR(26),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR = 27;</code>
     */
    CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR(27),
    /**
     * <code>CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR = 28;</code>
     */
    CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR(28),
    /**
     * <code>CONTRIBUTOR_ROLE_PLAYWRIGHT = 29;</code>
     */
    CONTRIBUTOR_ROLE_PLAYWRIGHT(29),
    /**
     * <code>CONTRIBUTOR_ROLE_ORCHESTRA = 30;</code>
     */
    CONTRIBUTOR_ROLE_ORCHESTRA(30),
    /**
     * <code>CONTRIBUTOR_ROLE_SUB_ARRANGER = 31;</code>
     */
    CONTRIBUTOR_ROLE_SUB_ARRANGER(31),
    /**
     * <code>CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER = 32;</code>
     */
    CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER(32),
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_PRODUCER = 33;</code>
     */
    CONTRIBUTOR_ROLE_VOCAL_PRODUCER(33),
    /**
     * <code>CONTRIBUTOR_ROLE_SCENIC_OPERATIVE = 34;</code>
     */
    CONTRIBUTOR_ROLE_SCENIC_OPERATIVE(34),
    /**
     * <code>CONTRIBUTOR_ROLE_PROGRAMMER = 35;</code>
     */
    CONTRIBUTOR_ROLE_PROGRAMMER(35),
    /**
     * <code>CONTRIBUTOR_ROLE_STUDIO_PRODUCER = 36;</code>
     */
    CONTRIBUTOR_ROLE_STUDIO_PRODUCER(36),
    /**
     * <code>CONTRIBUTOR_ROLE_STAGE_DIRECTOR = 37;</code>
     */
    CONTRIBUTOR_ROLE_STAGE_DIRECTOR(37),
    /**
     * <code>CONTRIBUTOR_ROLE_AUTHOR = 38;</code>
     */
    CONTRIBUTOR_ROLE_AUTHOR(38),
    /**
     * <code>CONTRIBUTOR_ROLE_LIBRETTIST = 39;</code>
     */
    CONTRIBUTOR_ROLE_LIBRETTIST(39),
    /**
     * <code>CONTRIBUTOR_ROLE_TYPE_DESIGNER = 40;</code>
     */
    CONTRIBUTOR_ROLE_TYPE_DESIGNER(40),
    /**
     * <code>CONTRIBUTOR_ROLE_GROUP_MEMBER = 41;</code>
     */
    CONTRIBUTOR_ROLE_GROUP_MEMBER(41),
    /**
     * <code>CONTRIBUTOR_ROLE_VISUAL_EDITOR = 42;</code>
     */
    CONTRIBUTOR_ROLE_VISUAL_EDITOR(42),
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_ARRANGER = 43;</code>
     */
    CONTRIBUTOR_ROLE_VOCAL_ARRANGER(43),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR = 44;</code>
     */
    CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR(44),
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_DIRECTOR = 45;</code>
     */
    CONTRIBUTOR_ROLE_FILM_DIRECTOR(45),
    /**
     * <code>CONTRIBUTOR_ROLE_CLAPPER_LOADER = 46;</code>
     */
    CONTRIBUTOR_ROLE_CLAPPER_LOADER(46),
    /**
     * <code>CONTRIBUTOR_ROLE_REMIXING_ENGINEER = 47;</code>
     */
    CONTRIBUTOR_ROLE_REMIXING_ENGINEER(47),
    /**
     * <code>CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER = 48;</code>
     */
    CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER(48),
    /**
     * <code>CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER = 49;</code>
     */
    CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER(49),
    /**
     * <code>CONTRIBUTOR_ROLE_HAIRDRESSER = 50;</code>
     */
    CONTRIBUTOR_ROLE_HAIRDRESSER(50),
    /**
     * <code>CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER = 51;</code>
     */
    CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER(51),
    /**
     * <code>CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS = 52;</code>
     */
    CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS(52),
    /**
     * <code>CONTRIBUTOR_ROLE_COSTUME_DESIGNER = 53;</code>
     */
    CONTRIBUTOR_ROLE_COSTUME_DESIGNER(53),
    /**
     * <code>CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT = 54;</code>
     */
    CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT(54),
    /**
     * <code>CONTRIBUTOR_ROLE_SPEAKER = 55;</code>
     */
    CONTRIBUTOR_ROLE_SPEAKER(55),
    /**
     * <code>CONTRIBUTOR_ROLE_LOCATION_MANAGER = 56;</code>
     */
    CONTRIBUTOR_ROLE_LOCATION_MANAGER(56),
    /**
     * <code>CONTRIBUTOR_ROLE_CALLIGRAPHER = 57;</code>
     */
    CONTRIBUTOR_ROLE_CALLIGRAPHER(57),
    /**
     * <code>CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER = 58;</code>
     */
    CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER(58),
    /**
     * <code>CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT = 59;</code>
     */
    CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT(59),
    /**
     * <code>CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER = 60;</code>
     */
    CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER(60),
    /**
     * <code>CONTRIBUTOR_ROLE_LEADMAN = 61;</code>
     */
    CONTRIBUTOR_ROLE_LEADMAN(61),
    /**
     * <code>CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER = 62;</code>
     */
    CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER(62),
    /**
     * <code>CONTRIBUTOR_ROLE_REVIEWER = 63;</code>
     */
    CONTRIBUTOR_ROLE_REVIEWER(63),
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_ENGINEER = 64;</code>
     */
    CONTRIBUTOR_ROLE_VOCAL_ENGINEER(64),
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT = 65;</code>
     */
    CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT(65),
    /**
     * <code>CONTRIBUTOR_ROLE_DRESSER = 66;</code>
     */
    CONTRIBUTOR_ROLE_DRESSER(66),
    /**
     * <code>CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD = 67;</code>
     */
    CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD(67),
    /**
     * <code>CONTRIBUTOR_ROLE_BALANCE_ENGINEER = 68;</code>
     */
    CONTRIBUTOR_ROLE_BALANCE_ENGINEER(68),
    /**
     * <code>CONTRIBUTOR_ROLE_CORRESPONDENT = 69;</code>
     */
    CONTRIBUTOR_ROLE_CORRESPONDENT(69),
    /**
     * <code>CONTRIBUTOR_ROLE_CONSULTANT = 70;</code>
     */
    CONTRIBUTOR_ROLE_CONSULTANT(70),
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_GROUP = 71;</code>
     */
    CONTRIBUTOR_ROLE_MUSIC_GROUP(71),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR = 72;</code>
     */
    CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR(72),
    /**
     * <code>CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER = 73;</code>
     */
    CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER(73),
    /**
     * <code>CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL = 74;</code>
     */
    CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL(74),
    /**
     * <code>CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR = 75;</code>
     */
    CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR(75),
    /**
     * <code>CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER = 76;</code>
     */
    CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER(76),
    /**
     * <code>CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER = 77;</code>
     */
    CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER(77),
    /**
     * <code>CONTRIBUTOR_ROLE_RESTAGER = 78;</code>
     */
    CONTRIBUTOR_ROLE_RESTAGER(78),
    /**
     * <code>CONTRIBUTOR_ROLE_JOURNALIST = 79;</code>
     */
    CONTRIBUTOR_ROLE_JOURNALIST(79),
    /**
     * <code>CONTRIBUTOR_ROLE_D_J = 80;</code>
     */
    CONTRIBUTOR_ROLE_D_J(80),
    /**
     * <code>CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST = 81;</code>
     */
    CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST(81),
    /**
     * <code>CONTRIBUTOR_ROLE_CIRCUS_ARTIST = 82;</code>
     */
    CONTRIBUTOR_ROLE_CIRCUS_ARTIST(82),
    /**
     * <code>CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER = 83;</code>
     */
    CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER(83),
    /**
     * <code>CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR = 84;</code>
     */
    CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR(84),
    /**
     * <code>CONTRIBUTOR_ROLE_CREATOR = 85;</code>
     */
    CONTRIBUTOR_ROLE_CREATOR(85),
    /**
     * <code>CONTRIBUTOR_ROLE_DIALOGUE_COACH = 86;</code>
     */
    CONTRIBUTOR_ROLE_DIALOGUE_COACH(86),
    /**
     * <code>CONTRIBUTOR_ROLE_FIGHT_DIRECTOR = 87;</code>
     */
    CONTRIBUTOR_ROLE_FIGHT_DIRECTOR(87),
    /**
     * <code>CONTRIBUTOR_ROLE_ANCHOR_PERSON = 88;</code>
     */
    CONTRIBUTOR_ROLE_ANCHOR_PERSON(88),
    /**
     * <code>CONTRIBUTOR_ROLE_COMPILATION_PRODUCER = 89;</code>
     */
    CONTRIBUTOR_ROLE_COMPILATION_PRODUCER(89),
    /**
     * <code>CONTRIBUTOR_ROLE_CONTRACTOR = 90;</code>
     */
    CONTRIBUTOR_ROLE_CONTRACTOR(90),
    /**
     * <code>CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER = 91;</code>
     */
    CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER(91),
    /**
     * <code>CONTRIBUTOR_ROLE_ORIGINAL_ARTIST = 92;</code>
     */
    CONTRIBUTOR_ROLE_ORIGINAL_ARTIST(92),
    /**
     * <code>CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR = 93;</code>
     */
    CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR(93),
    /**
     * <code>CONTRIBUTOR_ROLE_COMPILER = 94;</code>
     */
    CONTRIBUTOR_ROLE_COMPILER(94),
    /**
     * <code>CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER = 95;</code>
     */
    CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER(95),
    /**
     * <code>CONTRIBUTOR_ROLE_ARRANGER = 96;</code>
     */
    CONTRIBUTOR_ROLE_ARRANGER(96),
    /**
     * <code>CONTRIBUTOR_ROLE_ART_DIRECTOR = 97;</code>
     */
    CONTRIBUTOR_ROLE_ART_DIRECTOR(97),
    /**
     * <code>CONTRIBUTOR_ROLE_KEY_GRIP = 98;</code>
     */
    CONTRIBUTOR_ROLE_KEY_GRIP(98),
    /**
     * <code>CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER = 99;</code>
     */
    CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER(99),
    /**
     * <code>CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR = 100;</code>
     */
    CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR(100),
    /**
     * <code>CONTRIBUTOR_ROLE_ACCOMPANYIST = 101;</code>
     */
    CONTRIBUTOR_ROLE_ACCOMPANYIST(101),
    /**
     * <code>CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY = 102;</code>
     */
    CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY(102),
    /**
     * <code>CONTRIBUTOR_ROLE_DANCER = 103;</code>
     */
    CONTRIBUTOR_ROLE_DANCER(103),
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_EDITOR = 104;</code>
     */
    CONTRIBUTOR_ROLE_FILM_EDITOR(104),
    /**
     * <code>CONTRIBUTOR_ROLE_STRING_PRODUCER = 105;</code>
     */
    CONTRIBUTOR_ROLE_STRING_PRODUCER(105),
    /**
     * <code>CONTRIBUTOR_ROLE_ANNOTATOR = 106;</code>
     */
    CONTRIBUTOR_ROLE_ANNOTATOR(106),
    /**
     * <code>CONTRIBUTOR_ROLE_SCULPTOR = 107;</code>
     */
    CONTRIBUTOR_ROLE_SCULPTOR(107),
    /**
     * <code>CONTRIBUTOR_ROLE_INTERVIEWER = 108;</code>
     */
    CONTRIBUTOR_ROLE_INTERVIEWER(108),
    /**
     * <code>CONTRIBUTOR_ROLE_PHOTOGRAPHER = 109;</code>
     */
    CONTRIBUTOR_ROLE_PHOTOGRAPHER(109),
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER = 110;</code>
     */
    CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER(110),
    /**
     * <code>CONTRIBUTOR_ROLE_CONDUCTOR = 111;</code>
     */
    CONTRIBUTOR_ROLE_CONDUCTOR(111),
    /**
     * <code>CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER = 112;</code>
     */
    CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER(112),
    /**
     * <code>CONTRIBUTOR_ROLE_REISSUE_PRODUCER = 113;</code>
     */
    CONTRIBUTOR_ROLE_REISSUE_PRODUCER(113),
    /**
     * <code>CONTRIBUTOR_ROLE_CARPENTER = 114;</code>
     */
    CONTRIBUTOR_ROLE_CARPENTER(114),
    /**
     * <code>CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR = 115;</code>
     */
    CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR(115),
    /**
     * <code>CONTRIBUTOR_ROLE_LEAD_PERFORMER = 116;</code>
     */
    CONTRIBUTOR_ROLE_LEAD_PERFORMER(116),
    /**
     * <code>CONTRIBUTOR_ROLE_POST_PRODUCER = 117;</code>
     */
    CONTRIBUTOR_ROLE_POST_PRODUCER(117),
    /**
     * <code>CONTRIBUTOR_ROLE_CHOREOGRAPHER = 118;</code>
     */
    CONTRIBUTOR_ROLE_CHOREOGRAPHER(118),
    /**
     * <code>CONTRIBUTOR_ROLE_COMMENTATOR = 119;</code>
     */
    CONTRIBUTOR_ROLE_COMMENTATOR(119),
    /**
     * <code>CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER = 120;</code>
     */
    CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER(120),
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER = 121;</code>
     */
    CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER(121),
    /**
     * <code>CONTRIBUTOR_ROLE_CO_MIXER = 122;</code>
     */
    CONTRIBUTOR_ROLE_CO_MIXER(122),
    /**
     * <code>CONTRIBUTOR_ROLE_EXPERT = 123;</code>
     */
    CONTRIBUTOR_ROLE_EXPERT(123),
    /**
     * <code>CONTRIBUTOR_ROLE_CAUSEUR = 124;</code>
     */
    CONTRIBUTOR_ROLE_CAUSEUR(124),
    /**
     * <code>CONTRIBUTOR_ROLE_CHORUS_MASTER = 125;</code>
     */
    CONTRIBUTOR_ROLE_CHORUS_MASTER(125),
    /**
     * <code>CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER = 126;</code>
     */
    CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER(126),
    /**
     * <code>CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT = 127;</code>
     */
    CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT(127),
    /**
     * <code>CONTRIBUTOR_ROLE_SET_DRESSER = 128;</code>
     */
    CONTRIBUTOR_ROLE_SET_DRESSER(128),
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER = 129;</code>
     */
    CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER(129),
    /**
     * <code>CONTRIBUTOR_ROLE_CHOIR = 130;</code>
     */
    CONTRIBUTOR_ROLE_CHOIR(130),
    /**
     * <code>CONTRIBUTOR_ROLE_ENGINEER = 131;</code>
     */
    CONTRIBUTOR_ROLE_ENGINEER(131),
    /**
     * <code>CONTRIBUTOR_ROLE_CO_PRODUCER = 132;</code>
     */
    CONTRIBUTOR_ROLE_CO_PRODUCER(132),
    /**
     * <code>CONTRIBUTOR_ROLE_BOOK_PRODUCER = 133;</code>
     */
    CONTRIBUTOR_ROLE_BOOK_PRODUCER(133),
    /**
     * <code>CONTRIBUTOR_ROLE_RESEARCHER = 134;</code>
     */
    CONTRIBUTOR_ROLE_RESEARCHER(134),
    /**
     * <code>CONTRIBUTOR_ROLE_SOUND_DESIGNER = 135;</code>
     */
    CONTRIBUTOR_ROLE_SOUND_DESIGNER(135),
    /**
     * <code>CONTRIBUTOR_ROLE_DISSERTANT = 136;</code>
     */
    CONTRIBUTOR_ROLE_DISSERTANT(136),
    /**
     * <code>CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN = 137;</code>
     */
    CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN(137),
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_ARRANGER = 138;</code>
     */
    CONTRIBUTOR_ROLE_MUSIC_ARRANGER(138),
    /**
     * <code>CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT = 139;</code>
     */
    CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT(139),
    /**
     * <code>CONTRIBUTOR_ROLE_VOICE_ACTOR = 140;</code>
     */
    CONTRIBUTOR_ROLE_VOICE_ACTOR(140),
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR = 141;</code>
     */
    CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR(141),
    /**
     * <code>CONTRIBUTOR_ROLE_WARDROBE = 142;</code>
     */
    CONTRIBUTOR_ROLE_WARDROBE(142),
    /**
     * <code>CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN = 143;</code>
     */
    CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN(143),
    /**
     * <code>CONTRIBUTOR_ROLE_STUNTS = 144;</code>
     */
    CONTRIBUTOR_ROLE_STUNTS(144),
    /**
     * <code>CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER = 145;</code>
     */
    CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER(145),
    /**
     * <code>CONTRIBUTOR_ROLE_NEWS_PRODUCER = 146;</code>
     */
    CONTRIBUTOR_ROLE_NEWS_PRODUCER(146),
    /**
     * <code>CONTRIBUTOR_ROLE_LEAD_VOCALIST = 147;</code>
     */
    CONTRIBUTOR_ROLE_LEAD_VOCALIST(147),
    /**
     * <code>CONTRIBUTOR_ROLE_SPONSOR = 148;</code>
     */
    CONTRIBUTOR_ROLE_SPONSOR(148),
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY = 149;</code>
     */
    CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY(149),
    /**
     * <code>CONTRIBUTOR_ROLE_VIDEO_PRODUCER = 150;</code>
     */
    CONTRIBUTOR_ROLE_VIDEO_PRODUCER(150),
    /**
     * <code>CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR = 151;</code>
     */
    CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR(151),
    /**
     * <code>CONTRIBUTOR_ROLE_AURAL_TRAINER = 152;</code>
     */
    CONTRIBUTOR_ROLE_AURAL_TRAINER(152),
    /**
     * <code>CONTRIBUTOR_ROLE_CASTING_DIRECTOR = 153;</code>
     */
    CONTRIBUTOR_ROLE_CASTING_DIRECTOR(153),
    /**
     * <code>CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER = 154;</code>
     */
    CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER(154),
    /**
     * <code>CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER = 155;</code>
     */
    CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER(155),
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_CONDUCTOR = 156;</code>
     */
    CONTRIBUTOR_ROLE_SECOND_CONDUCTOR(156),
    /**
     * <code>CONTRIBUTOR_ROLE_EDITOR = 157;</code>
     */
    CONTRIBUTOR_ROLE_EDITOR(157),
    /**
     * <code>CONTRIBUTOR_ROLE_KEY_CHARACTER = 158;</code>
     */
    CONTRIBUTOR_ROLE_KEY_CHARACTER(158),
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_MANAGER = 159;</code>
     */
    CONTRIBUTOR_ROLE_PRODUCTION_MANAGER(159),
    /**
     * <code>CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER = 160;</code>
     */
    CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER(160),
    /**
     * <code>CONTRIBUTOR_ROLE_REDACTOR = 161;</code>
     */
    CONTRIBUTOR_ROLE_REDACTOR(161),
    /**
     * <code>CONTRIBUTOR_ROLE_CARTOONIST = 162;</code>
     */
    CONTRIBUTOR_ROLE_CARTOONIST(162),
    /**
     * <code>CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER = 163;</code>
     */
    CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER(163),
    /**
     * <code>CONTRIBUTOR_ROLE_CONCERT_MASTER = 164;</code>
     */
    CONTRIBUTOR_ROLE_CONCERT_MASTER(164),
    /**
     * <code>CONTRIBUTOR_ROLE_WOOD_ENGRAVER = 165;</code>
     */
    CONTRIBUTOR_ROLE_WOOD_ENGRAVER(165),
    /**
     * <code>CONTRIBUTOR_ROLE_STUDIO_PERSONNEL = 166;</code>
     */
    CONTRIBUTOR_ROLE_STUDIO_PERSONNEL(166),
    /**
     * <code>CONTRIBUTOR_ROLE_COMEDIAN = 167;</code>
     */
    CONTRIBUTOR_ROLE_COMEDIAN(167),
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_COPYIST = 168;</code>
     */
    CONTRIBUTOR_ROLE_MUSIC_COPYIST(168),
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_COMPANY = 169;</code>
     */
    CONTRIBUTOR_ROLE_PRODUCTION_COMPANY(169),
    /**
     * <code>CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN = 170;</code>
     */
    CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN(170),
    /**
     * <code>CONTRIBUTOR_ROLE_PYROTECHNICIAN = 171;</code>
     */
    CONTRIBUTOR_ROLE_PYROTECHNICIAN(171),
    /**
     * <code>CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR = 172;</code>
     */
    CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR(172),
    /**
     * <code>CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER = 173;</code>
     */
    CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER(173),
    /**
     * <code>CONTRIBUTOR_ROLE_CONTINUITY_CHECKER = 174;</code>
     */
    CONTRIBUTOR_ROLE_CONTINUITY_CHECKER(174),
    /**
     * <code>CONTRIBUTOR_ROLE_SOLOIST = 175;</code>
     */
    CONTRIBUTOR_ROLE_SOLOIST(175),
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER = 176;</code>
     */
    CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER(176),
    /**
     * <code>CONTRIBUTOR_ROLE_REMIXED_ARTIST = 177;</code>
     */
    CONTRIBUTOR_ROLE_REMIXED_ARTIST(177),
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_PUBLISHER = 178;</code>
     */
    CONTRIBUTOR_ROLE_MUSIC_PUBLISHER(178),
    /**
     * <code>CONTRIBUTOR_ROLE_DIRECTOR = 179;</code>
     */
    CONTRIBUTOR_ROLE_DIRECTOR(179),
    /**
     * <code>CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER = 180;</code>
     */
    CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER(180),
    /**
     * <code>CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF = 181;</code>
     */
    CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF(181),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN = 182;</code>
     */
    CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN(182),
    /**
     * <code>CONTRIBUTOR_ROLE_SOUND_SUPERVISOR = 183;</code>
     */
    CONTRIBUTOR_ROLE_SOUND_SUPERVISOR(183),
    /**
     * <code>CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR = 184;</code>
     */
    CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR(184),
    /**
     * <code>CONTRIBUTOR_ROLE_ARMOURER = 185;</code>
     */
    CONTRIBUTOR_ROLE_ARMOURER(185),
    /**
     * <code>CONTRIBUTOR_ROLE_PROJECT_ENGINEER = 186;</code>
     */
    CONTRIBUTOR_ROLE_PROJECT_ENGINEER(186),
    /**
     * <code>CONTRIBUTOR_ROLE_NOT_SPECIFIED = 187;</code>
     */
    CONTRIBUTOR_ROLE_NOT_SPECIFIED(187),
    /**
     * <code>CONTRIBUTOR_ROLE_SOUND_MIXER = 188;</code>
     */
    CONTRIBUTOR_ROLE_SOUND_MIXER(188),
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_ENGINEER = 189;</code>
     */
    CONTRIBUTOR_ROLE_SECOND_ENGINEER(189),
    /**
     * <code>CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER = 190;</code>
     */
    CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER(190),
    /**
     * <code>CONTRIBUTOR_ROLE_CAMERA_OPERATOR = 191;</code>
     */
    CONTRIBUTOR_ROLE_CAMERA_OPERATOR(191),
    /**
     * <code>CONTRIBUTOR_ROLE_OVERDUB_ENGINEER = 192;</code>
     */
    CONTRIBUTOR_ROLE_OVERDUB_ENGINEER(192),
    /**
     * <code>CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT = 193;</code>
     */
    CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT(193),
    /**
     * <code>CONTRIBUTOR_ROLE_VIDEOGRAPHER = 194;</code>
     */
    CONTRIBUTOR_ROLE_VIDEOGRAPHER(194),
    /**
     * <code>CONTRIBUTOR_ROLE_BAND_LEADER = 195;</code>
     */
    CONTRIBUTOR_ROLE_BAND_LEADER(195),
    /**
     * <code>CONTRIBUTOR_ROLE_SUBTITLES_EDITOR = 196;</code>
     */
    CONTRIBUTOR_ROLE_SUBTITLES_EDITOR(196),
    /**
     * <code>CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR = 197;</code>
     */
    CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR(197),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_EDITOR = 198;</code>
     */
    CONTRIBUTOR_ROLE_ASSISTANT_EDITOR(198),
    /**
     * <code>CONTRIBUTOR_ROLE_SUB_PUBLISHER = 199;</code>
     */
    CONTRIBUTOR_ROLE_SUB_PUBLISHER(199),
    /**
     * <code>CONTRIBUTOR_ROLE_MIXING_ENGINEER = 200;</code>
     */
    CONTRIBUTOR_ROLE_MIXING_ENGINEER(200),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER = 201;</code>
     */
    CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER(201),
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR = 202;</code>
     */
    CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR(202),
    /**
     * <code>CONTRIBUTOR_ROLE_BINDER = 203;</code>
     */
    CONTRIBUTOR_ROLE_BINDER(203),
    /**
     * <code>CONTRIBUTOR_ROLE_CO_DIRECTOR = 204;</code>
     */
    CONTRIBUTOR_ROLE_CO_DIRECTOR(204),
    /**
     * <code>CONTRIBUTOR_ROLE_GRIP = 205;</code>
     */
    CONTRIBUTOR_ROLE_GRIP(205),
    /**
     * <code>CONTRIBUTOR_ROLE_METAL_ENGRAVER = 206;</code>
     */
    CONTRIBUTOR_ROLE_METAL_ENGRAVER(206),
    /**
     * <code>CONTRIBUTOR_ROLE_BOOK_DESIGNER = 207;</code>
     */
    CONTRIBUTOR_ROLE_BOOK_DESIGNER(207),
    /**
     * <code>CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR = 208;</code>
     */
    CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR(208),
    /**
     * <code>CONTRIBUTOR_ROLE_CARTOGRAPHER = 209;</code>
     */
    CONTRIBUTOR_ROLE_CARTOGRAPHER(209),
    /**
     * <code>CONTRIBUTOR_ROLE_COMPOSER_LYRICIST = 210;</code>
     */
    CONTRIBUTOR_ROLE_COMPOSER_LYRICIST(210),
    /**
     * <code>CONTRIBUTOR_ROLE_MAKE_UP_ARTIST = 211;</code>
     */
    CONTRIBUTOR_ROLE_MAKE_UP_ARTIST(211),
    /**
     * <code>CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER = 212;</code>
     */
    CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER(212),
    /**
     * <code>CONTRIBUTOR_ROLE_COMPOSER = 213;</code>
     */
    CONTRIBUTOR_ROLE_COMPOSER(213),
    /**
     * <code>CONTRIBUTOR_ROLE_PLAYBACK_SINGER = 214;</code>
     */
    CONTRIBUTOR_ROLE_PLAYBACK_SINGER(214),
    /**
     * <code>CONTRIBUTOR_ROLE_STRING_ENGINEER = 215;</code>
     */
    CONTRIBUTOR_ROLE_STRING_ENGINEER(215),
    /**
     * <code>CONTRIBUTOR_ROLE_DRAUGHTSMAN = 216;</code>
     */
    CONTRIBUTOR_ROLE_DRAUGHTSMAN(216),
    /**
     * <code>CONTRIBUTOR_ROLE_PROGRAM_PRODUCER = 217;</code>
     */
    CONTRIBUTOR_ROLE_PROGRAM_PRODUCER(217),
    /**
     * <code>CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER = 218;</code>
     */
    CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER(218),
    /**
     * <code>CONTRIBUTOR_ROLE_WOODCUTTER = 219;</code>
     */
    CONTRIBUTOR_ROLE_WOODCUTTER(219),
    /**
     * <code>CONTRIBUTOR_ROLE_VIDEO_DIRECTOR = 220;</code>
     */
    CONTRIBUTOR_ROLE_VIDEO_DIRECTOR(220),
    /**
     * <code>CONTRIBUTOR_ROLE_REPORTER = 221;</code>
     */
    CONTRIBUTOR_ROLE_REPORTER(221),
    /**
     * <code>CONTRIBUTOR_ROLE_TONMEISTER = 222;</code>
     */
    CONTRIBUTOR_ROLE_TONMEISTER(222),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR = 223;</code>
     */
    CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR(223),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER = 224;</code>
     */
    CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER(224),
    /**
     * <code>CONTRIBUTOR_ROLE_ETCHER = 225;</code>
     */
    CONTRIBUTOR_ROLE_ETCHER(225),
    /**
     * <code>CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER = 226;</code>
     */
    CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER(226),
    /**
     * <code>CONTRIBUTOR_ROLE_ANIMATOR = 227;</code>
     */
    CONTRIBUTOR_ROLE_ANIMATOR(227),
    /**
     * <code>CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR = 228;</code>
     */
    CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR(228),
    /**
     * <code>CONTRIBUTOR_ROLE_GUEST_CONDUCTOR = 229;</code>
     */
    CONTRIBUTOR_ROLE_GUEST_CONDUCTOR(229),
    /**
     * <code>CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN = 230;</code>
     */
    CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN(230),
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR = 231;</code>
     */
    CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR(231),
    /**
     * <code>CONTRIBUTOR_ROLE_INITIAL_PRODUCER = 232;</code>
     */
    CONTRIBUTOR_ROLE_INITIAL_PRODUCER(232),
    /**
     * <code>CONTRIBUTOR_ROLE_RUBRICATOR = 233;</code>
     */
    CONTRIBUTOR_ROLE_RUBRICATOR(233),
    /**
     * <code>CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR = 234;</code>
     */
    CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR(234),
    /**
     * <code>CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER = 235;</code>
     */
    CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER(235),
    /**
     * <code>CONTRIBUTOR_ROLE_RIGGER = 236;</code>
     */
    CONTRIBUTOR_ROLE_RIGGER(236),
    /**
     * <code>CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN = 237;</code>
     */
    CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN(237),
    /**
     * <code>CONTRIBUTOR_ROLE_COLOR_SEPARATOR = 238;</code>
     */
    CONTRIBUTOR_ROLE_COLOR_SEPARATOR(238),
    /**
     * <code>CONTRIBUTOR_ROLE_REPETITEUR = 239;</code>
     */
    CONTRIBUTOR_ROLE_REPETITEUR(239),
    /**
     * <code>CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER = 240;</code>
     */
    CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER(240),
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT = 241;</code>
     */
    CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT(241),
    /**
     * <code>CONTRIBUTOR_ROLE_MIXER = 242;</code>
     */
    CONTRIBUTOR_ROLE_MIXER(242),
    /**
     * <code>CONTRIBUTOR_ROLE_BINDING_DESIGNER = 243;</code>
     */
    CONTRIBUTOR_ROLE_BINDING_DESIGNER(243),
    /**
     * <code>CONTRIBUTOR_ROLE_ADAPTER = 244;</code>
     */
    CONTRIBUTOR_ROLE_ADAPTER(244),
    /**
     * <code>CONTRIBUTOR_ROLE_DELINEATOR = 245;</code>
     */
    CONTRIBUTOR_ROLE_DELINEATOR(245),
    /**
     * <code>CONTRIBUTOR_ROLE_BOOK_PUBLISHER = 246;</code>
     */
    CONTRIBUTOR_ROLE_BOOK_PUBLISHER(246),
    /**
     * <code>CONTRIBUTOR_ROLE_ENCODER = 247;</code>
     */
    CONTRIBUTOR_ROLE_ENCODER(247),
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER = 248;</code>
     */
    CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER(248),
    /**
     * <code>CONTRIBUTOR_ROLE_MANUFACTURER = 249;</code>
     */
    CONTRIBUTOR_ROLE_MANUFACTURER(249),
    /**
     * <code>CONTRIBUTOR_ROLE_RECORDING_ENGINEER = 250;</code>
     */
    CONTRIBUTOR_ROLE_RECORDING_ENGINEER(250),
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER = 251;</code>
     */
    CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER(251),
    /**
     * <code>CONTRIBUTOR_ROLE_FACSIMILIST = 252;</code>
     */
    CONTRIBUTOR_ROLE_FACSIMILIST(252),
    /**
     * <code>CONTRIBUTOR_ROLE_KEY_TALENT = 253;</code>
     */
    CONTRIBUTOR_ROLE_KEY_TALENT(253),
    /**
     * <code>CONTRIBUTOR_ROLE_CLUB_D_J = 254;</code>
     */
    CONTRIBUTOR_ROLE_CLUB_D_J(254),
    /**
     * <code>CONTRIBUTOR_ROLE_COVER_DESIGNER = 255;</code>
     */
    CONTRIBUTOR_ROLE_COVER_DESIGNER(255),
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER = 256;</code>
     */
    CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER(256),
    /**
     * <code>CONTRIBUTOR_ROLE_TRACKING_ENGINEER = 257;</code>
     */
    CONTRIBUTOR_ROLE_TRACKING_ENGINEER(257),
    /**
     * <code>CONTRIBUTOR_ROLE_PERFORMER = 258;</code>
     */
    CONTRIBUTOR_ROLE_PERFORMER(258),
    /**
     * <code>CONTRIBUTOR_ROLE_SET_DESIGNER = 259;</code>
     */
    CONTRIBUTOR_ROLE_SET_DESIGNER(259),
    /**
     * <code>CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER = 260;</code>
     */
    CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER(260),
    /**
     * <code>CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER = 261;</code>
     */
    CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER(261),
    /**
     * <code>CONTRIBUTOR_ROLE_ILLUSTRATOR = 262;</code>
     */
    CONTRIBUTOR_ROLE_ILLUSTRATOR(262),
    /**
     * <code>CONTRIBUTOR_ROLE_NEWS_READER = 263;</code>
     */
    CONTRIBUTOR_ROLE_NEWS_READER(263),
    /**
     * <code>CONTRIBUTOR_ROLE_DUBBER = 264;</code>
     */
    CONTRIBUTOR_ROLE_DUBBER(264),
    /**
     * <code>CONTRIBUTOR_ROLE_ENSEMBLE = 265;</code>
     */
    CONTRIBUTOR_ROLE_ENSEMBLE(265),
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER = 266;</code>
     */
    CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER(266),
    /**
     * <code>CONTRIBUTOR_ROLE_FOLEY_EDITOR = 267;</code>
     */
    CONTRIBUTOR_ROLE_FOLEY_EDITOR(267),
    /**
     * <code>CONTRIBUTOR_ROLE_MATTE_ARTIST = 268;</code>
     */
    CONTRIBUTOR_ROLE_MATTE_ARTIST(268),
    /**
     * <code>CONTRIBUTOR_ROLE_ENGRAVER = 269;</code>
     */
    CONTRIBUTOR_ROLE_ENGRAVER(269),
    /**
     * <code>CONTRIBUTOR_ROLE_LYRICIST = 270;</code>
     */
    CONTRIBUTOR_ROLE_LYRICIST(270),
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_DIRECTOR = 271;</code>
     */
    CONTRIBUTOR_ROLE_MUSIC_DIRECTOR(271),
    /**
     * <code>CONTRIBUTOR_ROLE_RUNNER = 272;</code>
     */
    CONTRIBUTOR_ROLE_RUNNER(272),
    /**
     * <code>CONTRIBUTOR_ROLE_PROPERTY_MANAGER = 273;</code>
     */
    CONTRIBUTOR_ROLE_PROPERTY_MANAGER(273),
    /**
     * <code>CONTRIBUTOR_ROLE_CHOIR_MEMBER = 274;</code>
     */
    CONTRIBUTOR_ROLE_CHOIR_MEMBER(274),
    /**
     * <code>CONTRIBUTOR_ROLE_ANIMAL_TRAINER = 275;</code>
     */
    CONTRIBUTOR_ROLE_ANIMAL_TRAINER(275),
    /**
     * <code>CONTRIBUTOR_ROLE_FOLEY_MIXER = 276;</code>
     */
    CONTRIBUTOR_ROLE_FOLEY_MIXER(276),
    /**
     * <code>CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER = 277;</code>
     */
    CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER(277),
    /**
     * <code>CONTRIBUTOR_ROLE_DESIGNER = 278;</code>
     */
    CONTRIBUTOR_ROLE_DESIGNER(278),
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_PRODUCER = 279;</code>
     */
    CONTRIBUTOR_ROLE_FILM_PRODUCER(279),
    /**
     * <code>CONTRIBUTOR_ROLE_MASTERING_ENGINEER = 280;</code>
     */
    CONTRIBUTOR_ROLE_MASTERING_ENGINEER(280),
    /**
     * <code>CONTRIBUTOR_ROLE_PLATE_MAKER = 281;</code>
     */
    CONTRIBUTOR_ROLE_PLATE_MAKER(281),
    /**
     * <code>CONTRIBUTOR_ROLE_SUPPORTING_ACTOR = 282;</code>
     */
    CONTRIBUTOR_ROLE_SUPPORTING_ACTOR(282),
    /**
     * <code>CONTRIBUTOR_ROLE_GREENSMAN = 283;</code>
     */
    CONTRIBUTOR_ROLE_GREENSMAN(283),
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR = 284;</code>
     */
    CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR(284),
    /**
     * <code>CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR = 285;</code>
     */
    CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR(285),
    /**
     * <code>CONTRIBUTOR_ROLE_FOCUS_PULLER = 286;</code>
     */
    CONTRIBUTOR_ROLE_FOCUS_PULLER(286),
    /**
     * <code>CONTRIBUTOR_ROLE_REMIXER = 287;</code>
     */
    CONTRIBUTOR_ROLE_REMIXER(287),
    /**
     * <code>CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD = 288;</code>
     */
    CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD(288),
    /**
     * <code>CONTRIBUTOR_ROLE_SOUND_RECORDIST = 289;</code>
     */
    CONTRIBUTOR_ROLE_SOUND_RECORDIST(289),
    /**
     * <code>CONTRIBUTOR_ROLE_STRINGS_DIRECTOR = 290;</code>
     */
    CONTRIBUTOR_ROLE_STRINGS_DIRECTOR(290),
    /**
     * <code>CONTRIBUTOR_ROLE_VISION_MIXER = 291;</code>
     */
    CONTRIBUTOR_ROLE_VISION_MIXER(291),
    /**
     * <code>CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER = 292;</code>
     */
    CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER(292),
    /**
     * <code>CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR = 293;</code>
     */
    CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR(293),
    /**
     * <code>CONTRIBUTOR_ROLE_STAGE_ENGINEER = 294;</code>
     */
    CONTRIBUTOR_ROLE_STAGE_ENGINEER(294),
    /**
     * <code>CONTRIBUTOR_ROLE_STUDIO_MUSICIAN = 295;</code>
     */
    CONTRIBUTOR_ROLE_STUDIO_MUSICIAN(295),
    /**
     * <code>CONTRIBUTOR_ROLE_VOCALIST = 296;</code>
     */
    CONTRIBUTOR_ROLE_VOCALIST(296),
    /**
     * <code>CONTRIBUTOR_ROLE_FOLEY_ARTIST = 297;</code>
     */
    CONTRIBUTOR_ROLE_FOLEY_ARTIST(297),
    /**
     * <code>CONTRIBUTOR_ROLE_ARCHITECT = 298;</code>
     */
    CONTRIBUTOR_ROLE_ARCHITECT(298),
    /**
     * <code>CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY = 299;</code>
     */
    CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY(299),
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR = 300;</code>
     */
    CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR(300),
    /**
     * <code>CONTRIBUTOR_ROLE_FLOOR_MANAGER = 301;</code>
     */
    CONTRIBUTOR_ROLE_FLOOR_MANAGER(301),
    /**
     * <code>CONTRIBUTOR_ROLE_GRAPHIC_ARTIST = 302;</code>
     */
    CONTRIBUTOR_ROLE_GRAPHIC_ARTIST(302),
    /**
     * <code>CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER = 303;</code>
     */
    CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER(303),
    /**
     * <code>CONTRIBUTOR_ROLE_CENSOR = 304;</code>
     */
    CONTRIBUTOR_ROLE_CENSOR(304),
    /**
     * <code>CONTRIBUTOR_ROLE_NARRATOR = 305;</code>
     */
    CONTRIBUTOR_ROLE_NARRATOR(305),
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER = 306;</code>
     */
    CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER(306),
    ;

    /**
     * <code>CONTRIBUTOR_ROLE_ARTIST = 0;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ARTIST_VALUE = 0;
    /**
     * <code>CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL = 1;</code>
     */
    public static final int CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL_VALUE = 1;
    /**
     * <code>CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER = 2;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER_VALUE = 2;
    /**
     * <code>CONTRIBUTOR_ROLE_INTERVIEWED_GUEST = 3;</code>
     */
    public static final int CONTRIBUTOR_ROLE_INTERVIEWED_GUEST_VALUE = 3;
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER = 4;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER_VALUE = 4;
    /**
     * <code>CONTRIBUTOR_ROLE_CONCEPTOR = 5;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CONCEPTOR_VALUE = 5;
    /**
     * <code>CONTRIBUTOR_ROLE_ART_COPYIST = 6;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ART_COPYIST_VALUE = 6;
    /**
     * <code>CONTRIBUTOR_ROLE_SERIES_PRODUCER = 7;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SERIES_PRODUCER_VALUE = 7;
    /**
     * <code>CONTRIBUTOR_ROLE_PRE_PRODUCTION = 8;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRE_PRODUCTION_VALUE = 8;
    /**
     * <code>CONTRIBUTOR_ROLE_LITHOGRAPHER = 9;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LITHOGRAPHER_VALUE = 9;
    /**
     * <code>CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER = 10;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER_VALUE = 10;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER = 11;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER_VALUE = 11;
    /**
     * <code>CONTRIBUTOR_ROLE_TAPE_OPERATOR = 12;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TAPE_OPERATOR_VALUE = 12;
    /**
     * <code>CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER = 13;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER_VALUE = 13;
    /**
     * <code>CONTRIBUTOR_ROLE_UNKNOWN = 14;</code>
     */
    public static final int CONTRIBUTOR_ROLE_UNKNOWN_VALUE = 14;
    /**
     * <code>CONTRIBUTOR_ROLE_ANNOUNCER = 15;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ANNOUNCER_VALUE = 15;
    /**
     * <code>CONTRIBUTOR_ROLE_PUPPETEER = 16;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PUPPETEER_VALUE = 16;
    /**
     * <code>CONTRIBUTOR_ROLE_TRANSLATOR = 17;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TRANSLATOR_VALUE = 17;
    /**
     * <code>CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST = 18;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST_VALUE = 18;
    /**
     * <code>CONTRIBUTOR_ROLE_MUSICIAN = 19;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MUSICIAN_VALUE = 19;
    /**
     * <code>CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER = 20;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER_VALUE = 20;
    /**
     * <code>CONTRIBUTOR_ROLE_ACTOR = 21;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ACTOR_VALUE = 21;
    /**
     * <code>CONTRIBUTOR_ROLE_SUB_LYRICIST = 22;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SUB_LYRICIST_VALUE = 22;
    /**
     * <code>CONTRIBUTOR_ROLE_PAINTER = 23;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PAINTER_VALUE = 23;
    /**
     * <code>CONTRIBUTOR_ROLE_STORY_TELLER = 24;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STORY_TELLER_VALUE = 24;
    /**
     * <code>CONTRIBUTOR_ROLE_USER_DEFINED = 25;</code>
     */
    public static final int CONTRIBUTOR_ROLE_USER_DEFINED_VALUE = 25;
    /**
     * <code>CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR = 26;</code>
     */
    public static final int CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR_VALUE = 26;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR = 27;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR_VALUE = 27;
    /**
     * <code>CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR = 28;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR_VALUE = 28;
    /**
     * <code>CONTRIBUTOR_ROLE_PLAYWRIGHT = 29;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PLAYWRIGHT_VALUE = 29;
    /**
     * <code>CONTRIBUTOR_ROLE_ORCHESTRA = 30;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ORCHESTRA_VALUE = 30;
    /**
     * <code>CONTRIBUTOR_ROLE_SUB_ARRANGER = 31;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SUB_ARRANGER_VALUE = 31;
    /**
     * <code>CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER = 32;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER_VALUE = 32;
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_PRODUCER = 33;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VOCAL_PRODUCER_VALUE = 33;
    /**
     * <code>CONTRIBUTOR_ROLE_SCENIC_OPERATIVE = 34;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SCENIC_OPERATIVE_VALUE = 34;
    /**
     * <code>CONTRIBUTOR_ROLE_PROGRAMMER = 35;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PROGRAMMER_VALUE = 35;
    /**
     * <code>CONTRIBUTOR_ROLE_STUDIO_PRODUCER = 36;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STUDIO_PRODUCER_VALUE = 36;
    /**
     * <code>CONTRIBUTOR_ROLE_STAGE_DIRECTOR = 37;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STAGE_DIRECTOR_VALUE = 37;
    /**
     * <code>CONTRIBUTOR_ROLE_AUTHOR = 38;</code>
     */
    public static final int CONTRIBUTOR_ROLE_AUTHOR_VALUE = 38;
    /**
     * <code>CONTRIBUTOR_ROLE_LIBRETTIST = 39;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LIBRETTIST_VALUE = 39;
    /**
     * <code>CONTRIBUTOR_ROLE_TYPE_DESIGNER = 40;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TYPE_DESIGNER_VALUE = 40;
    /**
     * <code>CONTRIBUTOR_ROLE_GROUP_MEMBER = 41;</code>
     */
    public static final int CONTRIBUTOR_ROLE_GROUP_MEMBER_VALUE = 41;
    /**
     * <code>CONTRIBUTOR_ROLE_VISUAL_EDITOR = 42;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VISUAL_EDITOR_VALUE = 42;
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_ARRANGER = 43;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VOCAL_ARRANGER_VALUE = 43;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR = 44;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR_VALUE = 44;
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_DIRECTOR = 45;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FILM_DIRECTOR_VALUE = 45;
    /**
     * <code>CONTRIBUTOR_ROLE_CLAPPER_LOADER = 46;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CLAPPER_LOADER_VALUE = 46;
    /**
     * <code>CONTRIBUTOR_ROLE_REMIXING_ENGINEER = 47;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REMIXING_ENGINEER_VALUE = 47;
    /**
     * <code>CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER = 48;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER_VALUE = 48;
    /**
     * <code>CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER = 49;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER_VALUE = 49;
    /**
     * <code>CONTRIBUTOR_ROLE_HAIRDRESSER = 50;</code>
     */
    public static final int CONTRIBUTOR_ROLE_HAIRDRESSER_VALUE = 50;
    /**
     * <code>CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER = 51;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER_VALUE = 51;
    /**
     * <code>CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS = 52;</code>
     */
    public static final int CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS_VALUE = 52;
    /**
     * <code>CONTRIBUTOR_ROLE_COSTUME_DESIGNER = 53;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COSTUME_DESIGNER_VALUE = 53;
    /**
     * <code>CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT = 54;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT_VALUE = 54;
    /**
     * <code>CONTRIBUTOR_ROLE_SPEAKER = 55;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SPEAKER_VALUE = 55;
    /**
     * <code>CONTRIBUTOR_ROLE_LOCATION_MANAGER = 56;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LOCATION_MANAGER_VALUE = 56;
    /**
     * <code>CONTRIBUTOR_ROLE_CALLIGRAPHER = 57;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CALLIGRAPHER_VALUE = 57;
    /**
     * <code>CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER = 58;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER_VALUE = 58;
    /**
     * <code>CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT = 59;</code>
     */
    public static final int CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT_VALUE = 59;
    /**
     * <code>CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER = 60;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER_VALUE = 60;
    /**
     * <code>CONTRIBUTOR_ROLE_LEADMAN = 61;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LEADMAN_VALUE = 61;
    /**
     * <code>CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER = 62;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER_VALUE = 62;
    /**
     * <code>CONTRIBUTOR_ROLE_REVIEWER = 63;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REVIEWER_VALUE = 63;
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_ENGINEER = 64;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VOCAL_ENGINEER_VALUE = 64;
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT = 65;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT_VALUE = 65;
    /**
     * <code>CONTRIBUTOR_ROLE_DRESSER = 66;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DRESSER_VALUE = 66;
    /**
     * <code>CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD = 67;</code>
     */
    public static final int CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD_VALUE = 67;
    /**
     * <code>CONTRIBUTOR_ROLE_BALANCE_ENGINEER = 68;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BALANCE_ENGINEER_VALUE = 68;
    /**
     * <code>CONTRIBUTOR_ROLE_CORRESPONDENT = 69;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CORRESPONDENT_VALUE = 69;
    /**
     * <code>CONTRIBUTOR_ROLE_CONSULTANT = 70;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CONSULTANT_VALUE = 70;
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_GROUP = 71;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MUSIC_GROUP_VALUE = 71;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR = 72;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR_VALUE = 72;
    /**
     * <code>CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER = 73;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER_VALUE = 73;
    /**
     * <code>CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL = 74;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL_VALUE = 74;
    /**
     * <code>CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR = 75;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR_VALUE = 75;
    /**
     * <code>CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER = 76;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER_VALUE = 76;
    /**
     * <code>CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER = 77;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER_VALUE = 77;
    /**
     * <code>CONTRIBUTOR_ROLE_RESTAGER = 78;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RESTAGER_VALUE = 78;
    /**
     * <code>CONTRIBUTOR_ROLE_JOURNALIST = 79;</code>
     */
    public static final int CONTRIBUTOR_ROLE_JOURNALIST_VALUE = 79;
    /**
     * <code>CONTRIBUTOR_ROLE_D_J = 80;</code>
     */
    public static final int CONTRIBUTOR_ROLE_D_J_VALUE = 80;
    /**
     * <code>CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST = 81;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST_VALUE = 81;
    /**
     * <code>CONTRIBUTOR_ROLE_CIRCUS_ARTIST = 82;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CIRCUS_ARTIST_VALUE = 82;
    /**
     * <code>CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER = 83;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER_VALUE = 83;
    /**
     * <code>CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR = 84;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR_VALUE = 84;
    /**
     * <code>CONTRIBUTOR_ROLE_CREATOR = 85;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CREATOR_VALUE = 85;
    /**
     * <code>CONTRIBUTOR_ROLE_DIALOGUE_COACH = 86;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DIALOGUE_COACH_VALUE = 86;
    /**
     * <code>CONTRIBUTOR_ROLE_FIGHT_DIRECTOR = 87;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FIGHT_DIRECTOR_VALUE = 87;
    /**
     * <code>CONTRIBUTOR_ROLE_ANCHOR_PERSON = 88;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ANCHOR_PERSON_VALUE = 88;
    /**
     * <code>CONTRIBUTOR_ROLE_COMPILATION_PRODUCER = 89;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMPILATION_PRODUCER_VALUE = 89;
    /**
     * <code>CONTRIBUTOR_ROLE_CONTRACTOR = 90;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CONTRACTOR_VALUE = 90;
    /**
     * <code>CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER = 91;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER_VALUE = 91;
    /**
     * <code>CONTRIBUTOR_ROLE_ORIGINAL_ARTIST = 92;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ORIGINAL_ARTIST_VALUE = 92;
    /**
     * <code>CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR = 93;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR_VALUE = 93;
    /**
     * <code>CONTRIBUTOR_ROLE_COMPILER = 94;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMPILER_VALUE = 94;
    /**
     * <code>CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER = 95;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER_VALUE = 95;
    /**
     * <code>CONTRIBUTOR_ROLE_ARRANGER = 96;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ARRANGER_VALUE = 96;
    /**
     * <code>CONTRIBUTOR_ROLE_ART_DIRECTOR = 97;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ART_DIRECTOR_VALUE = 97;
    /**
     * <code>CONTRIBUTOR_ROLE_KEY_GRIP = 98;</code>
     */
    public static final int CONTRIBUTOR_ROLE_KEY_GRIP_VALUE = 98;
    /**
     * <code>CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER = 99;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER_VALUE = 99;
    /**
     * <code>CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR = 100;</code>
     */
    public static final int CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR_VALUE = 100;
    /**
     * <code>CONTRIBUTOR_ROLE_ACCOMPANYIST = 101;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ACCOMPANYIST_VALUE = 101;
    /**
     * <code>CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY = 102;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY_VALUE = 102;
    /**
     * <code>CONTRIBUTOR_ROLE_DANCER = 103;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DANCER_VALUE = 103;
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_EDITOR = 104;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FILM_EDITOR_VALUE = 104;
    /**
     * <code>CONTRIBUTOR_ROLE_STRING_PRODUCER = 105;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STRING_PRODUCER_VALUE = 105;
    /**
     * <code>CONTRIBUTOR_ROLE_ANNOTATOR = 106;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ANNOTATOR_VALUE = 106;
    /**
     * <code>CONTRIBUTOR_ROLE_SCULPTOR = 107;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SCULPTOR_VALUE = 107;
    /**
     * <code>CONTRIBUTOR_ROLE_INTERVIEWER = 108;</code>
     */
    public static final int CONTRIBUTOR_ROLE_INTERVIEWER_VALUE = 108;
    /**
     * <code>CONTRIBUTOR_ROLE_PHOTOGRAPHER = 109;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PHOTOGRAPHER_VALUE = 109;
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER = 110;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER_VALUE = 110;
    /**
     * <code>CONTRIBUTOR_ROLE_CONDUCTOR = 111;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CONDUCTOR_VALUE = 111;
    /**
     * <code>CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER = 112;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER_VALUE = 112;
    /**
     * <code>CONTRIBUTOR_ROLE_REISSUE_PRODUCER = 113;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REISSUE_PRODUCER_VALUE = 113;
    /**
     * <code>CONTRIBUTOR_ROLE_CARPENTER = 114;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CARPENTER_VALUE = 114;
    /**
     * <code>CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR = 115;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR_VALUE = 115;
    /**
     * <code>CONTRIBUTOR_ROLE_LEAD_PERFORMER = 116;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LEAD_PERFORMER_VALUE = 116;
    /**
     * <code>CONTRIBUTOR_ROLE_POST_PRODUCER = 117;</code>
     */
    public static final int CONTRIBUTOR_ROLE_POST_PRODUCER_VALUE = 117;
    /**
     * <code>CONTRIBUTOR_ROLE_CHOREOGRAPHER = 118;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CHOREOGRAPHER_VALUE = 118;
    /**
     * <code>CONTRIBUTOR_ROLE_COMMENTATOR = 119;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMMENTATOR_VALUE = 119;
    /**
     * <code>CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER = 120;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER_VALUE = 120;
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER = 121;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER_VALUE = 121;
    /**
     * <code>CONTRIBUTOR_ROLE_CO_MIXER = 122;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CO_MIXER_VALUE = 122;
    /**
     * <code>CONTRIBUTOR_ROLE_EXPERT = 123;</code>
     */
    public static final int CONTRIBUTOR_ROLE_EXPERT_VALUE = 123;
    /**
     * <code>CONTRIBUTOR_ROLE_CAUSEUR = 124;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CAUSEUR_VALUE = 124;
    /**
     * <code>CONTRIBUTOR_ROLE_CHORUS_MASTER = 125;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CHORUS_MASTER_VALUE = 125;
    /**
     * <code>CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER = 126;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER_VALUE = 126;
    /**
     * <code>CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT = 127;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT_VALUE = 127;
    /**
     * <code>CONTRIBUTOR_ROLE_SET_DRESSER = 128;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SET_DRESSER_VALUE = 128;
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER = 129;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER_VALUE = 129;
    /**
     * <code>CONTRIBUTOR_ROLE_CHOIR = 130;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CHOIR_VALUE = 130;
    /**
     * <code>CONTRIBUTOR_ROLE_ENGINEER = 131;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ENGINEER_VALUE = 131;
    /**
     * <code>CONTRIBUTOR_ROLE_CO_PRODUCER = 132;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CO_PRODUCER_VALUE = 132;
    /**
     * <code>CONTRIBUTOR_ROLE_BOOK_PRODUCER = 133;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BOOK_PRODUCER_VALUE = 133;
    /**
     * <code>CONTRIBUTOR_ROLE_RESEARCHER = 134;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RESEARCHER_VALUE = 134;
    /**
     * <code>CONTRIBUTOR_ROLE_SOUND_DESIGNER = 135;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SOUND_DESIGNER_VALUE = 135;
    /**
     * <code>CONTRIBUTOR_ROLE_DISSERTANT = 136;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DISSERTANT_VALUE = 136;
    /**
     * <code>CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN = 137;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN_VALUE = 137;
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_ARRANGER = 138;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MUSIC_ARRANGER_VALUE = 138;
    /**
     * <code>CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT = 139;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT_VALUE = 139;
    /**
     * <code>CONTRIBUTOR_ROLE_VOICE_ACTOR = 140;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VOICE_ACTOR_VALUE = 140;
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR = 141;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR_VALUE = 141;
    /**
     * <code>CONTRIBUTOR_ROLE_WARDROBE = 142;</code>
     */
    public static final int CONTRIBUTOR_ROLE_WARDROBE_VALUE = 142;
    /**
     * <code>CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN = 143;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN_VALUE = 143;
    /**
     * <code>CONTRIBUTOR_ROLE_STUNTS = 144;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STUNTS_VALUE = 144;
    /**
     * <code>CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER = 145;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER_VALUE = 145;
    /**
     * <code>CONTRIBUTOR_ROLE_NEWS_PRODUCER = 146;</code>
     */
    public static final int CONTRIBUTOR_ROLE_NEWS_PRODUCER_VALUE = 146;
    /**
     * <code>CONTRIBUTOR_ROLE_LEAD_VOCALIST = 147;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LEAD_VOCALIST_VALUE = 147;
    /**
     * <code>CONTRIBUTOR_ROLE_SPONSOR = 148;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SPONSOR_VALUE = 148;
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY = 149;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY_VALUE = 149;
    /**
     * <code>CONTRIBUTOR_ROLE_VIDEO_PRODUCER = 150;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VIDEO_PRODUCER_VALUE = 150;
    /**
     * <code>CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR = 151;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR_VALUE = 151;
    /**
     * <code>CONTRIBUTOR_ROLE_AURAL_TRAINER = 152;</code>
     */
    public static final int CONTRIBUTOR_ROLE_AURAL_TRAINER_VALUE = 152;
    /**
     * <code>CONTRIBUTOR_ROLE_CASTING_DIRECTOR = 153;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CASTING_DIRECTOR_VALUE = 153;
    /**
     * <code>CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER = 154;</code>
     */
    public static final int CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER_VALUE = 154;
    /**
     * <code>CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER = 155;</code>
     */
    public static final int CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER_VALUE = 155;
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_CONDUCTOR = 156;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SECOND_CONDUCTOR_VALUE = 156;
    /**
     * <code>CONTRIBUTOR_ROLE_EDITOR = 157;</code>
     */
    public static final int CONTRIBUTOR_ROLE_EDITOR_VALUE = 157;
    /**
     * <code>CONTRIBUTOR_ROLE_KEY_CHARACTER = 158;</code>
     */
    public static final int CONTRIBUTOR_ROLE_KEY_CHARACTER_VALUE = 158;
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_MANAGER = 159;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRODUCTION_MANAGER_VALUE = 159;
    /**
     * <code>CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER = 160;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER_VALUE = 160;
    /**
     * <code>CONTRIBUTOR_ROLE_REDACTOR = 161;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REDACTOR_VALUE = 161;
    /**
     * <code>CONTRIBUTOR_ROLE_CARTOONIST = 162;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CARTOONIST_VALUE = 162;
    /**
     * <code>CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER = 163;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER_VALUE = 163;
    /**
     * <code>CONTRIBUTOR_ROLE_CONCERT_MASTER = 164;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CONCERT_MASTER_VALUE = 164;
    /**
     * <code>CONTRIBUTOR_ROLE_WOOD_ENGRAVER = 165;</code>
     */
    public static final int CONTRIBUTOR_ROLE_WOOD_ENGRAVER_VALUE = 165;
    /**
     * <code>CONTRIBUTOR_ROLE_STUDIO_PERSONNEL = 166;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STUDIO_PERSONNEL_VALUE = 166;
    /**
     * <code>CONTRIBUTOR_ROLE_COMEDIAN = 167;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMEDIAN_VALUE = 167;
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_COPYIST = 168;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MUSIC_COPYIST_VALUE = 168;
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_COMPANY = 169;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRODUCTION_COMPANY_VALUE = 169;
    /**
     * <code>CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN = 170;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN_VALUE = 170;
    /**
     * <code>CONTRIBUTOR_ROLE_PYROTECHNICIAN = 171;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PYROTECHNICIAN_VALUE = 171;
    /**
     * <code>CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR = 172;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR_VALUE = 172;
    /**
     * <code>CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER = 173;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER_VALUE = 173;
    /**
     * <code>CONTRIBUTOR_ROLE_CONTINUITY_CHECKER = 174;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CONTINUITY_CHECKER_VALUE = 174;
    /**
     * <code>CONTRIBUTOR_ROLE_SOLOIST = 175;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SOLOIST_VALUE = 175;
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER = 176;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER_VALUE = 176;
    /**
     * <code>CONTRIBUTOR_ROLE_REMIXED_ARTIST = 177;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REMIXED_ARTIST_VALUE = 177;
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_PUBLISHER = 178;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MUSIC_PUBLISHER_VALUE = 178;
    /**
     * <code>CONTRIBUTOR_ROLE_DIRECTOR = 179;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DIRECTOR_VALUE = 179;
    /**
     * <code>CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER = 180;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER_VALUE = 180;
    /**
     * <code>CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF = 181;</code>
     */
    public static final int CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF_VALUE = 181;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN = 182;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN_VALUE = 182;
    /**
     * <code>CONTRIBUTOR_ROLE_SOUND_SUPERVISOR = 183;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SOUND_SUPERVISOR_VALUE = 183;
    /**
     * <code>CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR = 184;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR_VALUE = 184;
    /**
     * <code>CONTRIBUTOR_ROLE_ARMOURER = 185;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ARMOURER_VALUE = 185;
    /**
     * <code>CONTRIBUTOR_ROLE_PROJECT_ENGINEER = 186;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PROJECT_ENGINEER_VALUE = 186;
    /**
     * <code>CONTRIBUTOR_ROLE_NOT_SPECIFIED = 187;</code>
     */
    public static final int CONTRIBUTOR_ROLE_NOT_SPECIFIED_VALUE = 187;
    /**
     * <code>CONTRIBUTOR_ROLE_SOUND_MIXER = 188;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SOUND_MIXER_VALUE = 188;
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_ENGINEER = 189;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SECOND_ENGINEER_VALUE = 189;
    /**
     * <code>CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER = 190;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER_VALUE = 190;
    /**
     * <code>CONTRIBUTOR_ROLE_CAMERA_OPERATOR = 191;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CAMERA_OPERATOR_VALUE = 191;
    /**
     * <code>CONTRIBUTOR_ROLE_OVERDUB_ENGINEER = 192;</code>
     */
    public static final int CONTRIBUTOR_ROLE_OVERDUB_ENGINEER_VALUE = 192;
    /**
     * <code>CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT = 193;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT_VALUE = 193;
    /**
     * <code>CONTRIBUTOR_ROLE_VIDEOGRAPHER = 194;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VIDEOGRAPHER_VALUE = 194;
    /**
     * <code>CONTRIBUTOR_ROLE_BAND_LEADER = 195;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BAND_LEADER_VALUE = 195;
    /**
     * <code>CONTRIBUTOR_ROLE_SUBTITLES_EDITOR = 196;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SUBTITLES_EDITOR_VALUE = 196;
    /**
     * <code>CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR = 197;</code>
     */
    public static final int CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR_VALUE = 197;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_EDITOR = 198;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSISTANT_EDITOR_VALUE = 198;
    /**
     * <code>CONTRIBUTOR_ROLE_SUB_PUBLISHER = 199;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SUB_PUBLISHER_VALUE = 199;
    /**
     * <code>CONTRIBUTOR_ROLE_MIXING_ENGINEER = 200;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MIXING_ENGINEER_VALUE = 200;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER = 201;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER_VALUE = 201;
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR = 202;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR_VALUE = 202;
    /**
     * <code>CONTRIBUTOR_ROLE_BINDER = 203;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BINDER_VALUE = 203;
    /**
     * <code>CONTRIBUTOR_ROLE_CO_DIRECTOR = 204;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CO_DIRECTOR_VALUE = 204;
    /**
     * <code>CONTRIBUTOR_ROLE_GRIP = 205;</code>
     */
    public static final int CONTRIBUTOR_ROLE_GRIP_VALUE = 205;
    /**
     * <code>CONTRIBUTOR_ROLE_METAL_ENGRAVER = 206;</code>
     */
    public static final int CONTRIBUTOR_ROLE_METAL_ENGRAVER_VALUE = 206;
    /**
     * <code>CONTRIBUTOR_ROLE_BOOK_DESIGNER = 207;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BOOK_DESIGNER_VALUE = 207;
    /**
     * <code>CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR = 208;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR_VALUE = 208;
    /**
     * <code>CONTRIBUTOR_ROLE_CARTOGRAPHER = 209;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CARTOGRAPHER_VALUE = 209;
    /**
     * <code>CONTRIBUTOR_ROLE_COMPOSER_LYRICIST = 210;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMPOSER_LYRICIST_VALUE = 210;
    /**
     * <code>CONTRIBUTOR_ROLE_MAKE_UP_ARTIST = 211;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MAKE_UP_ARTIST_VALUE = 211;
    /**
     * <code>CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER = 212;</code>
     */
    public static final int CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER_VALUE = 212;
    /**
     * <code>CONTRIBUTOR_ROLE_COMPOSER = 213;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COMPOSER_VALUE = 213;
    /**
     * <code>CONTRIBUTOR_ROLE_PLAYBACK_SINGER = 214;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PLAYBACK_SINGER_VALUE = 214;
    /**
     * <code>CONTRIBUTOR_ROLE_STRING_ENGINEER = 215;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STRING_ENGINEER_VALUE = 215;
    /**
     * <code>CONTRIBUTOR_ROLE_DRAUGHTSMAN = 216;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DRAUGHTSMAN_VALUE = 216;
    /**
     * <code>CONTRIBUTOR_ROLE_PROGRAM_PRODUCER = 217;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PROGRAM_PRODUCER_VALUE = 217;
    /**
     * <code>CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER = 218;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER_VALUE = 218;
    /**
     * <code>CONTRIBUTOR_ROLE_WOODCUTTER = 219;</code>
     */
    public static final int CONTRIBUTOR_ROLE_WOODCUTTER_VALUE = 219;
    /**
     * <code>CONTRIBUTOR_ROLE_VIDEO_DIRECTOR = 220;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VIDEO_DIRECTOR_VALUE = 220;
    /**
     * <code>CONTRIBUTOR_ROLE_REPORTER = 221;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REPORTER_VALUE = 221;
    /**
     * <code>CONTRIBUTOR_ROLE_TONMEISTER = 222;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TONMEISTER_VALUE = 222;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR = 223;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR_VALUE = 223;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER = 224;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER_VALUE = 224;
    /**
     * <code>CONTRIBUTOR_ROLE_ETCHER = 225;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ETCHER_VALUE = 225;
    /**
     * <code>CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER = 226;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER_VALUE = 226;
    /**
     * <code>CONTRIBUTOR_ROLE_ANIMATOR = 227;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ANIMATOR_VALUE = 227;
    /**
     * <code>CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR = 228;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR_VALUE = 228;
    /**
     * <code>CONTRIBUTOR_ROLE_GUEST_CONDUCTOR = 229;</code>
     */
    public static final int CONTRIBUTOR_ROLE_GUEST_CONDUCTOR_VALUE = 229;
    /**
     * <code>CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN = 230;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN_VALUE = 230;
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR = 231;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR_VALUE = 231;
    /**
     * <code>CONTRIBUTOR_ROLE_INITIAL_PRODUCER = 232;</code>
     */
    public static final int CONTRIBUTOR_ROLE_INITIAL_PRODUCER_VALUE = 232;
    /**
     * <code>CONTRIBUTOR_ROLE_RUBRICATOR = 233;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RUBRICATOR_VALUE = 233;
    /**
     * <code>CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR = 234;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR_VALUE = 234;
    /**
     * <code>CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER = 235;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER_VALUE = 235;
    /**
     * <code>CONTRIBUTOR_ROLE_RIGGER = 236;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RIGGER_VALUE = 236;
    /**
     * <code>CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN = 237;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN_VALUE = 237;
    /**
     * <code>CONTRIBUTOR_ROLE_COLOR_SEPARATOR = 238;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COLOR_SEPARATOR_VALUE = 238;
    /**
     * <code>CONTRIBUTOR_ROLE_REPETITEUR = 239;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REPETITEUR_VALUE = 239;
    /**
     * <code>CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER = 240;</code>
     */
    public static final int CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER_VALUE = 240;
    /**
     * <code>CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT = 241;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT_VALUE = 241;
    /**
     * <code>CONTRIBUTOR_ROLE_MIXER = 242;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MIXER_VALUE = 242;
    /**
     * <code>CONTRIBUTOR_ROLE_BINDING_DESIGNER = 243;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BINDING_DESIGNER_VALUE = 243;
    /**
     * <code>CONTRIBUTOR_ROLE_ADAPTER = 244;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ADAPTER_VALUE = 244;
    /**
     * <code>CONTRIBUTOR_ROLE_DELINEATOR = 245;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DELINEATOR_VALUE = 245;
    /**
     * <code>CONTRIBUTOR_ROLE_BOOK_PUBLISHER = 246;</code>
     */
    public static final int CONTRIBUTOR_ROLE_BOOK_PUBLISHER_VALUE = 246;
    /**
     * <code>CONTRIBUTOR_ROLE_ENCODER = 247;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ENCODER_VALUE = 247;
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER = 248;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER_VALUE = 248;
    /**
     * <code>CONTRIBUTOR_ROLE_MANUFACTURER = 249;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MANUFACTURER_VALUE = 249;
    /**
     * <code>CONTRIBUTOR_ROLE_RECORDING_ENGINEER = 250;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RECORDING_ENGINEER_VALUE = 250;
    /**
     * <code>CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER = 251;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER_VALUE = 251;
    /**
     * <code>CONTRIBUTOR_ROLE_FACSIMILIST = 252;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FACSIMILIST_VALUE = 252;
    /**
     * <code>CONTRIBUTOR_ROLE_KEY_TALENT = 253;</code>
     */
    public static final int CONTRIBUTOR_ROLE_KEY_TALENT_VALUE = 253;
    /**
     * <code>CONTRIBUTOR_ROLE_CLUB_D_J = 254;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CLUB_D_J_VALUE = 254;
    /**
     * <code>CONTRIBUTOR_ROLE_COVER_DESIGNER = 255;</code>
     */
    public static final int CONTRIBUTOR_ROLE_COVER_DESIGNER_VALUE = 255;
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER = 256;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER_VALUE = 256;
    /**
     * <code>CONTRIBUTOR_ROLE_TRACKING_ENGINEER = 257;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TRACKING_ENGINEER_VALUE = 257;
    /**
     * <code>CONTRIBUTOR_ROLE_PERFORMER = 258;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PERFORMER_VALUE = 258;
    /**
     * <code>CONTRIBUTOR_ROLE_SET_DESIGNER = 259;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SET_DESIGNER_VALUE = 259;
    /**
     * <code>CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER = 260;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER_VALUE = 260;
    /**
     * <code>CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER = 261;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER_VALUE = 261;
    /**
     * <code>CONTRIBUTOR_ROLE_ILLUSTRATOR = 262;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ILLUSTRATOR_VALUE = 262;
    /**
     * <code>CONTRIBUTOR_ROLE_NEWS_READER = 263;</code>
     */
    public static final int CONTRIBUTOR_ROLE_NEWS_READER_VALUE = 263;
    /**
     * <code>CONTRIBUTOR_ROLE_DUBBER = 264;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DUBBER_VALUE = 264;
    /**
     * <code>CONTRIBUTOR_ROLE_ENSEMBLE = 265;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ENSEMBLE_VALUE = 265;
    /**
     * <code>CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER = 266;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER_VALUE = 266;
    /**
     * <code>CONTRIBUTOR_ROLE_FOLEY_EDITOR = 267;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FOLEY_EDITOR_VALUE = 267;
    /**
     * <code>CONTRIBUTOR_ROLE_MATTE_ARTIST = 268;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MATTE_ARTIST_VALUE = 268;
    /**
     * <code>CONTRIBUTOR_ROLE_ENGRAVER = 269;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ENGRAVER_VALUE = 269;
    /**
     * <code>CONTRIBUTOR_ROLE_LYRICIST = 270;</code>
     */
    public static final int CONTRIBUTOR_ROLE_LYRICIST_VALUE = 270;
    /**
     * <code>CONTRIBUTOR_ROLE_MUSIC_DIRECTOR = 271;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MUSIC_DIRECTOR_VALUE = 271;
    /**
     * <code>CONTRIBUTOR_ROLE_RUNNER = 272;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RUNNER_VALUE = 272;
    /**
     * <code>CONTRIBUTOR_ROLE_PROPERTY_MANAGER = 273;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PROPERTY_MANAGER_VALUE = 273;
    /**
     * <code>CONTRIBUTOR_ROLE_CHOIR_MEMBER = 274;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CHOIR_MEMBER_VALUE = 274;
    /**
     * <code>CONTRIBUTOR_ROLE_ANIMAL_TRAINER = 275;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ANIMAL_TRAINER_VALUE = 275;
    /**
     * <code>CONTRIBUTOR_ROLE_FOLEY_MIXER = 276;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FOLEY_MIXER_VALUE = 276;
    /**
     * <code>CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER = 277;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER_VALUE = 277;
    /**
     * <code>CONTRIBUTOR_ROLE_DESIGNER = 278;</code>
     */
    public static final int CONTRIBUTOR_ROLE_DESIGNER_VALUE = 278;
    /**
     * <code>CONTRIBUTOR_ROLE_FILM_PRODUCER = 279;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FILM_PRODUCER_VALUE = 279;
    /**
     * <code>CONTRIBUTOR_ROLE_MASTERING_ENGINEER = 280;</code>
     */
    public static final int CONTRIBUTOR_ROLE_MASTERING_ENGINEER_VALUE = 280;
    /**
     * <code>CONTRIBUTOR_ROLE_PLATE_MAKER = 281;</code>
     */
    public static final int CONTRIBUTOR_ROLE_PLATE_MAKER_VALUE = 281;
    /**
     * <code>CONTRIBUTOR_ROLE_SUPPORTING_ACTOR = 282;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SUPPORTING_ACTOR_VALUE = 282;
    /**
     * <code>CONTRIBUTOR_ROLE_GREENSMAN = 283;</code>
     */
    public static final int CONTRIBUTOR_ROLE_GREENSMAN_VALUE = 283;
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR = 284;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR_VALUE = 284;
    /**
     * <code>CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR = 285;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR_VALUE = 285;
    /**
     * <code>CONTRIBUTOR_ROLE_FOCUS_PULLER = 286;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FOCUS_PULLER_VALUE = 286;
    /**
     * <code>CONTRIBUTOR_ROLE_REMIXER = 287;</code>
     */
    public static final int CONTRIBUTOR_ROLE_REMIXER_VALUE = 287;
    /**
     * <code>CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD = 288;</code>
     */
    public static final int CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD_VALUE = 288;
    /**
     * <code>CONTRIBUTOR_ROLE_SOUND_RECORDIST = 289;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SOUND_RECORDIST_VALUE = 289;
    /**
     * <code>CONTRIBUTOR_ROLE_STRINGS_DIRECTOR = 290;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STRINGS_DIRECTOR_VALUE = 290;
    /**
     * <code>CONTRIBUTOR_ROLE_VISION_MIXER = 291;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VISION_MIXER_VALUE = 291;
    /**
     * <code>CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER = 292;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER_VALUE = 292;
    /**
     * <code>CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR = 293;</code>
     */
    public static final int CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR_VALUE = 293;
    /**
     * <code>CONTRIBUTOR_ROLE_STAGE_ENGINEER = 294;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STAGE_ENGINEER_VALUE = 294;
    /**
     * <code>CONTRIBUTOR_ROLE_STUDIO_MUSICIAN = 295;</code>
     */
    public static final int CONTRIBUTOR_ROLE_STUDIO_MUSICIAN_VALUE = 295;
    /**
     * <code>CONTRIBUTOR_ROLE_VOCALIST = 296;</code>
     */
    public static final int CONTRIBUTOR_ROLE_VOCALIST_VALUE = 296;
    /**
     * <code>CONTRIBUTOR_ROLE_FOLEY_ARTIST = 297;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FOLEY_ARTIST_VALUE = 297;
    /**
     * <code>CONTRIBUTOR_ROLE_ARCHITECT = 298;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ARCHITECT_VALUE = 298;
    /**
     * <code>CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY = 299;</code>
     */
    public static final int CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY_VALUE = 299;
    /**
     * <code>CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR = 300;</code>
     */
    public static final int CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR_VALUE = 300;
    /**
     * <code>CONTRIBUTOR_ROLE_FLOOR_MANAGER = 301;</code>
     */
    public static final int CONTRIBUTOR_ROLE_FLOOR_MANAGER_VALUE = 301;
    /**
     * <code>CONTRIBUTOR_ROLE_GRAPHIC_ARTIST = 302;</code>
     */
    public static final int CONTRIBUTOR_ROLE_GRAPHIC_ARTIST_VALUE = 302;
    /**
     * <code>CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER = 303;</code>
     */
    public static final int CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER_VALUE = 303;
    /**
     * <code>CONTRIBUTOR_ROLE_CENSOR = 304;</code>
     */
    public static final int CONTRIBUTOR_ROLE_CENSOR_VALUE = 304;
    /**
     * <code>CONTRIBUTOR_ROLE_NARRATOR = 305;</code>
     */
    public static final int CONTRIBUTOR_ROLE_NARRATOR_VALUE = 305;
    /**
     * <code>CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER = 306;</code>
     */
    public static final int CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER_VALUE = 306;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContributorRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ContributorRole forNumber(int value) {
      switch (value) {
        case 0: return CONTRIBUTOR_ROLE_ARTIST;
        case 1: return CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL;
        case 2: return CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER;
        case 3: return CONTRIBUTOR_ROLE_INTERVIEWED_GUEST;
        case 4: return CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER;
        case 5: return CONTRIBUTOR_ROLE_CONCEPTOR;
        case 6: return CONTRIBUTOR_ROLE_ART_COPYIST;
        case 7: return CONTRIBUTOR_ROLE_SERIES_PRODUCER;
        case 8: return CONTRIBUTOR_ROLE_PRE_PRODUCTION;
        case 9: return CONTRIBUTOR_ROLE_LITHOGRAPHER;
        case 10: return CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER;
        case 11: return CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER;
        case 12: return CONTRIBUTOR_ROLE_TAPE_OPERATOR;
        case 13: return CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER;
        case 14: return CONTRIBUTOR_ROLE_UNKNOWN;
        case 15: return CONTRIBUTOR_ROLE_ANNOUNCER;
        case 16: return CONTRIBUTOR_ROLE_PUPPETEER;
        case 17: return CONTRIBUTOR_ROLE_TRANSLATOR;
        case 18: return CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST;
        case 19: return CONTRIBUTOR_ROLE_MUSICIAN;
        case 20: return CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER;
        case 21: return CONTRIBUTOR_ROLE_ACTOR;
        case 22: return CONTRIBUTOR_ROLE_SUB_LYRICIST;
        case 23: return CONTRIBUTOR_ROLE_PAINTER;
        case 24: return CONTRIBUTOR_ROLE_STORY_TELLER;
        case 25: return CONTRIBUTOR_ROLE_USER_DEFINED;
        case 26: return CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR;
        case 27: return CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR;
        case 28: return CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR;
        case 29: return CONTRIBUTOR_ROLE_PLAYWRIGHT;
        case 30: return CONTRIBUTOR_ROLE_ORCHESTRA;
        case 31: return CONTRIBUTOR_ROLE_SUB_ARRANGER;
        case 32: return CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER;
        case 33: return CONTRIBUTOR_ROLE_VOCAL_PRODUCER;
        case 34: return CONTRIBUTOR_ROLE_SCENIC_OPERATIVE;
        case 35: return CONTRIBUTOR_ROLE_PROGRAMMER;
        case 36: return CONTRIBUTOR_ROLE_STUDIO_PRODUCER;
        case 37: return CONTRIBUTOR_ROLE_STAGE_DIRECTOR;
        case 38: return CONTRIBUTOR_ROLE_AUTHOR;
        case 39: return CONTRIBUTOR_ROLE_LIBRETTIST;
        case 40: return CONTRIBUTOR_ROLE_TYPE_DESIGNER;
        case 41: return CONTRIBUTOR_ROLE_GROUP_MEMBER;
        case 42: return CONTRIBUTOR_ROLE_VISUAL_EDITOR;
        case 43: return CONTRIBUTOR_ROLE_VOCAL_ARRANGER;
        case 44: return CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR;
        case 45: return CONTRIBUTOR_ROLE_FILM_DIRECTOR;
        case 46: return CONTRIBUTOR_ROLE_CLAPPER_LOADER;
        case 47: return CONTRIBUTOR_ROLE_REMIXING_ENGINEER;
        case 48: return CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER;
        case 49: return CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER;
        case 50: return CONTRIBUTOR_ROLE_HAIRDRESSER;
        case 51: return CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER;
        case 52: return CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS;
        case 53: return CONTRIBUTOR_ROLE_COSTUME_DESIGNER;
        case 54: return CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT;
        case 55: return CONTRIBUTOR_ROLE_SPEAKER;
        case 56: return CONTRIBUTOR_ROLE_LOCATION_MANAGER;
        case 57: return CONTRIBUTOR_ROLE_CALLIGRAPHER;
        case 58: return CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER;
        case 59: return CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT;
        case 60: return CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER;
        case 61: return CONTRIBUTOR_ROLE_LEADMAN;
        case 62: return CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER;
        case 63: return CONTRIBUTOR_ROLE_REVIEWER;
        case 64: return CONTRIBUTOR_ROLE_VOCAL_ENGINEER;
        case 65: return CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT;
        case 66: return CONTRIBUTOR_ROLE_DRESSER;
        case 67: return CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD;
        case 68: return CONTRIBUTOR_ROLE_BALANCE_ENGINEER;
        case 69: return CONTRIBUTOR_ROLE_CORRESPONDENT;
        case 70: return CONTRIBUTOR_ROLE_CONSULTANT;
        case 71: return CONTRIBUTOR_ROLE_MUSIC_GROUP;
        case 72: return CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR;
        case 73: return CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER;
        case 74: return CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL;
        case 75: return CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR;
        case 76: return CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER;
        case 77: return CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER;
        case 78: return CONTRIBUTOR_ROLE_RESTAGER;
        case 79: return CONTRIBUTOR_ROLE_JOURNALIST;
        case 80: return CONTRIBUTOR_ROLE_D_J;
        case 81: return CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST;
        case 82: return CONTRIBUTOR_ROLE_CIRCUS_ARTIST;
        case 83: return CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER;
        case 84: return CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR;
        case 85: return CONTRIBUTOR_ROLE_CREATOR;
        case 86: return CONTRIBUTOR_ROLE_DIALOGUE_COACH;
        case 87: return CONTRIBUTOR_ROLE_FIGHT_DIRECTOR;
        case 88: return CONTRIBUTOR_ROLE_ANCHOR_PERSON;
        case 89: return CONTRIBUTOR_ROLE_COMPILATION_PRODUCER;
        case 90: return CONTRIBUTOR_ROLE_CONTRACTOR;
        case 91: return CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER;
        case 92: return CONTRIBUTOR_ROLE_ORIGINAL_ARTIST;
        case 93: return CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR;
        case 94: return CONTRIBUTOR_ROLE_COMPILER;
        case 95: return CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER;
        case 96: return CONTRIBUTOR_ROLE_ARRANGER;
        case 97: return CONTRIBUTOR_ROLE_ART_DIRECTOR;
        case 98: return CONTRIBUTOR_ROLE_KEY_GRIP;
        case 99: return CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER;
        case 100: return CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR;
        case 101: return CONTRIBUTOR_ROLE_ACCOMPANYIST;
        case 102: return CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY;
        case 103: return CONTRIBUTOR_ROLE_DANCER;
        case 104: return CONTRIBUTOR_ROLE_FILM_EDITOR;
        case 105: return CONTRIBUTOR_ROLE_STRING_PRODUCER;
        case 106: return CONTRIBUTOR_ROLE_ANNOTATOR;
        case 107: return CONTRIBUTOR_ROLE_SCULPTOR;
        case 108: return CONTRIBUTOR_ROLE_INTERVIEWER;
        case 109: return CONTRIBUTOR_ROLE_PHOTOGRAPHER;
        case 110: return CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER;
        case 111: return CONTRIBUTOR_ROLE_CONDUCTOR;
        case 112: return CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER;
        case 113: return CONTRIBUTOR_ROLE_REISSUE_PRODUCER;
        case 114: return CONTRIBUTOR_ROLE_CARPENTER;
        case 115: return CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR;
        case 116: return CONTRIBUTOR_ROLE_LEAD_PERFORMER;
        case 117: return CONTRIBUTOR_ROLE_POST_PRODUCER;
        case 118: return CONTRIBUTOR_ROLE_CHOREOGRAPHER;
        case 119: return CONTRIBUTOR_ROLE_COMMENTATOR;
        case 120: return CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER;
        case 121: return CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER;
        case 122: return CONTRIBUTOR_ROLE_CO_MIXER;
        case 123: return CONTRIBUTOR_ROLE_EXPERT;
        case 124: return CONTRIBUTOR_ROLE_CAUSEUR;
        case 125: return CONTRIBUTOR_ROLE_CHORUS_MASTER;
        case 126: return CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER;
        case 127: return CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT;
        case 128: return CONTRIBUTOR_ROLE_SET_DRESSER;
        case 129: return CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER;
        case 130: return CONTRIBUTOR_ROLE_CHOIR;
        case 131: return CONTRIBUTOR_ROLE_ENGINEER;
        case 132: return CONTRIBUTOR_ROLE_CO_PRODUCER;
        case 133: return CONTRIBUTOR_ROLE_BOOK_PRODUCER;
        case 134: return CONTRIBUTOR_ROLE_RESEARCHER;
        case 135: return CONTRIBUTOR_ROLE_SOUND_DESIGNER;
        case 136: return CONTRIBUTOR_ROLE_DISSERTANT;
        case 137: return CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN;
        case 138: return CONTRIBUTOR_ROLE_MUSIC_ARRANGER;
        case 139: return CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT;
        case 140: return CONTRIBUTOR_ROLE_VOICE_ACTOR;
        case 141: return CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR;
        case 142: return CONTRIBUTOR_ROLE_WARDROBE;
        case 143: return CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN;
        case 144: return CONTRIBUTOR_ROLE_STUNTS;
        case 145: return CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER;
        case 146: return CONTRIBUTOR_ROLE_NEWS_PRODUCER;
        case 147: return CONTRIBUTOR_ROLE_LEAD_VOCALIST;
        case 148: return CONTRIBUTOR_ROLE_SPONSOR;
        case 149: return CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY;
        case 150: return CONTRIBUTOR_ROLE_VIDEO_PRODUCER;
        case 151: return CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR;
        case 152: return CONTRIBUTOR_ROLE_AURAL_TRAINER;
        case 153: return CONTRIBUTOR_ROLE_CASTING_DIRECTOR;
        case 154: return CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER;
        case 155: return CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER;
        case 156: return CONTRIBUTOR_ROLE_SECOND_CONDUCTOR;
        case 157: return CONTRIBUTOR_ROLE_EDITOR;
        case 158: return CONTRIBUTOR_ROLE_KEY_CHARACTER;
        case 159: return CONTRIBUTOR_ROLE_PRODUCTION_MANAGER;
        case 160: return CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER;
        case 161: return CONTRIBUTOR_ROLE_REDACTOR;
        case 162: return CONTRIBUTOR_ROLE_CARTOONIST;
        case 163: return CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER;
        case 164: return CONTRIBUTOR_ROLE_CONCERT_MASTER;
        case 165: return CONTRIBUTOR_ROLE_WOOD_ENGRAVER;
        case 166: return CONTRIBUTOR_ROLE_STUDIO_PERSONNEL;
        case 167: return CONTRIBUTOR_ROLE_COMEDIAN;
        case 168: return CONTRIBUTOR_ROLE_MUSIC_COPYIST;
        case 169: return CONTRIBUTOR_ROLE_PRODUCTION_COMPANY;
        case 170: return CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN;
        case 171: return CONTRIBUTOR_ROLE_PYROTECHNICIAN;
        case 172: return CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR;
        case 173: return CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER;
        case 174: return CONTRIBUTOR_ROLE_CONTINUITY_CHECKER;
        case 175: return CONTRIBUTOR_ROLE_SOLOIST;
        case 176: return CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER;
        case 177: return CONTRIBUTOR_ROLE_REMIXED_ARTIST;
        case 178: return CONTRIBUTOR_ROLE_MUSIC_PUBLISHER;
        case 179: return CONTRIBUTOR_ROLE_DIRECTOR;
        case 180: return CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER;
        case 181: return CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF;
        case 182: return CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN;
        case 183: return CONTRIBUTOR_ROLE_SOUND_SUPERVISOR;
        case 184: return CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR;
        case 185: return CONTRIBUTOR_ROLE_ARMOURER;
        case 186: return CONTRIBUTOR_ROLE_PROJECT_ENGINEER;
        case 187: return CONTRIBUTOR_ROLE_NOT_SPECIFIED;
        case 188: return CONTRIBUTOR_ROLE_SOUND_MIXER;
        case 189: return CONTRIBUTOR_ROLE_SECOND_ENGINEER;
        case 190: return CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER;
        case 191: return CONTRIBUTOR_ROLE_CAMERA_OPERATOR;
        case 192: return CONTRIBUTOR_ROLE_OVERDUB_ENGINEER;
        case 193: return CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT;
        case 194: return CONTRIBUTOR_ROLE_VIDEOGRAPHER;
        case 195: return CONTRIBUTOR_ROLE_BAND_LEADER;
        case 196: return CONTRIBUTOR_ROLE_SUBTITLES_EDITOR;
        case 197: return CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR;
        case 198: return CONTRIBUTOR_ROLE_ASSISTANT_EDITOR;
        case 199: return CONTRIBUTOR_ROLE_SUB_PUBLISHER;
        case 200: return CONTRIBUTOR_ROLE_MIXING_ENGINEER;
        case 201: return CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER;
        case 202: return CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR;
        case 203: return CONTRIBUTOR_ROLE_BINDER;
        case 204: return CONTRIBUTOR_ROLE_CO_DIRECTOR;
        case 205: return CONTRIBUTOR_ROLE_GRIP;
        case 206: return CONTRIBUTOR_ROLE_METAL_ENGRAVER;
        case 207: return CONTRIBUTOR_ROLE_BOOK_DESIGNER;
        case 208: return CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR;
        case 209: return CONTRIBUTOR_ROLE_CARTOGRAPHER;
        case 210: return CONTRIBUTOR_ROLE_COMPOSER_LYRICIST;
        case 211: return CONTRIBUTOR_ROLE_MAKE_UP_ARTIST;
        case 212: return CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER;
        case 213: return CONTRIBUTOR_ROLE_COMPOSER;
        case 214: return CONTRIBUTOR_ROLE_PLAYBACK_SINGER;
        case 215: return CONTRIBUTOR_ROLE_STRING_ENGINEER;
        case 216: return CONTRIBUTOR_ROLE_DRAUGHTSMAN;
        case 217: return CONTRIBUTOR_ROLE_PROGRAM_PRODUCER;
        case 218: return CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER;
        case 219: return CONTRIBUTOR_ROLE_WOODCUTTER;
        case 220: return CONTRIBUTOR_ROLE_VIDEO_DIRECTOR;
        case 221: return CONTRIBUTOR_ROLE_REPORTER;
        case 222: return CONTRIBUTOR_ROLE_TONMEISTER;
        case 223: return CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR;
        case 224: return CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER;
        case 225: return CONTRIBUTOR_ROLE_ETCHER;
        case 226: return CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER;
        case 227: return CONTRIBUTOR_ROLE_ANIMATOR;
        case 228: return CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR;
        case 229: return CONTRIBUTOR_ROLE_GUEST_CONDUCTOR;
        case 230: return CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN;
        case 231: return CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR;
        case 232: return CONTRIBUTOR_ROLE_INITIAL_PRODUCER;
        case 233: return CONTRIBUTOR_ROLE_RUBRICATOR;
        case 234: return CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR;
        case 235: return CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER;
        case 236: return CONTRIBUTOR_ROLE_RIGGER;
        case 237: return CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN;
        case 238: return CONTRIBUTOR_ROLE_COLOR_SEPARATOR;
        case 239: return CONTRIBUTOR_ROLE_REPETITEUR;
        case 240: return CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER;
        case 241: return CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT;
        case 242: return CONTRIBUTOR_ROLE_MIXER;
        case 243: return CONTRIBUTOR_ROLE_BINDING_DESIGNER;
        case 244: return CONTRIBUTOR_ROLE_ADAPTER;
        case 245: return CONTRIBUTOR_ROLE_DELINEATOR;
        case 246: return CONTRIBUTOR_ROLE_BOOK_PUBLISHER;
        case 247: return CONTRIBUTOR_ROLE_ENCODER;
        case 248: return CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER;
        case 249: return CONTRIBUTOR_ROLE_MANUFACTURER;
        case 250: return CONTRIBUTOR_ROLE_RECORDING_ENGINEER;
        case 251: return CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER;
        case 252: return CONTRIBUTOR_ROLE_FACSIMILIST;
        case 253: return CONTRIBUTOR_ROLE_KEY_TALENT;
        case 254: return CONTRIBUTOR_ROLE_CLUB_D_J;
        case 255: return CONTRIBUTOR_ROLE_COVER_DESIGNER;
        case 256: return CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER;
        case 257: return CONTRIBUTOR_ROLE_TRACKING_ENGINEER;
        case 258: return CONTRIBUTOR_ROLE_PERFORMER;
        case 259: return CONTRIBUTOR_ROLE_SET_DESIGNER;
        case 260: return CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER;
        case 261: return CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER;
        case 262: return CONTRIBUTOR_ROLE_ILLUSTRATOR;
        case 263: return CONTRIBUTOR_ROLE_NEWS_READER;
        case 264: return CONTRIBUTOR_ROLE_DUBBER;
        case 265: return CONTRIBUTOR_ROLE_ENSEMBLE;
        case 266: return CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER;
        case 267: return CONTRIBUTOR_ROLE_FOLEY_EDITOR;
        case 268: return CONTRIBUTOR_ROLE_MATTE_ARTIST;
        case 269: return CONTRIBUTOR_ROLE_ENGRAVER;
        case 270: return CONTRIBUTOR_ROLE_LYRICIST;
        case 271: return CONTRIBUTOR_ROLE_MUSIC_DIRECTOR;
        case 272: return CONTRIBUTOR_ROLE_RUNNER;
        case 273: return CONTRIBUTOR_ROLE_PROPERTY_MANAGER;
        case 274: return CONTRIBUTOR_ROLE_CHOIR_MEMBER;
        case 275: return CONTRIBUTOR_ROLE_ANIMAL_TRAINER;
        case 276: return CONTRIBUTOR_ROLE_FOLEY_MIXER;
        case 277: return CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER;
        case 278: return CONTRIBUTOR_ROLE_DESIGNER;
        case 279: return CONTRIBUTOR_ROLE_FILM_PRODUCER;
        case 280: return CONTRIBUTOR_ROLE_MASTERING_ENGINEER;
        case 281: return CONTRIBUTOR_ROLE_PLATE_MAKER;
        case 282: return CONTRIBUTOR_ROLE_SUPPORTING_ACTOR;
        case 283: return CONTRIBUTOR_ROLE_GREENSMAN;
        case 284: return CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR;
        case 285: return CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR;
        case 286: return CONTRIBUTOR_ROLE_FOCUS_PULLER;
        case 287: return CONTRIBUTOR_ROLE_REMIXER;
        case 288: return CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD;
        case 289: return CONTRIBUTOR_ROLE_SOUND_RECORDIST;
        case 290: return CONTRIBUTOR_ROLE_STRINGS_DIRECTOR;
        case 291: return CONTRIBUTOR_ROLE_VISION_MIXER;
        case 292: return CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER;
        case 293: return CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR;
        case 294: return CONTRIBUTOR_ROLE_STAGE_ENGINEER;
        case 295: return CONTRIBUTOR_ROLE_STUDIO_MUSICIAN;
        case 296: return CONTRIBUTOR_ROLE_VOCALIST;
        case 297: return CONTRIBUTOR_ROLE_FOLEY_ARTIST;
        case 298: return CONTRIBUTOR_ROLE_ARCHITECT;
        case 299: return CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY;
        case 300: return CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR;
        case 301: return CONTRIBUTOR_ROLE_FLOOR_MANAGER;
        case 302: return CONTRIBUTOR_ROLE_GRAPHIC_ARTIST;
        case 303: return CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER;
        case 304: return CONTRIBUTOR_ROLE_CENSOR;
        case 305: return CONTRIBUTOR_ROLE_NARRATOR;
        case 306: return CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContributorRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ContributorRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContributorRole>() {
            public ContributorRole findValueByNumber(int number) {
              return ContributorRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(32);
    }

    private static final ContributorRole[] VALUES = values();

    public static ContributorRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ContributorRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ContributorRole)
  }

  /**
   * Protobuf enum {@code avs.CreativeMusicalWorkContributorRole}
   */
  public enum CreativeMusicalWorkContributorRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR = 0;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR(0),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER = 1;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER(1),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR = 2;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR(2),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST = 3;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST(3),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL = 4;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL(4),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT = 5;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT(5),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST = 6;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST(6),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR = 7;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR(7),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER = 8;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER(8),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR = 9;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR(9),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER = 10;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER(10),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER = 11;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER(11),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER = 12;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER(12),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER = 13;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER(13),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR = 14;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR(14),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT = 15;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT(15),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST = 16;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST(16),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST = 17;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST(17),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS = 18;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS(18),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR = 19;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR(19),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER = 20;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER(20),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER = 21;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER(21),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER = 22;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER(22),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER = 23;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER(23),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT = 24;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT(24),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER = 25;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER(25),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER = 26;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER(26),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER = 27;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER(27),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER = 28;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER(28),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT = 29;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT(29),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD = 30;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD(30),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR = 31;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR(31),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR = 32;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR(32),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR = 33;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR(33),
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST = 34;</code>
     */
    CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST(34),
    ;

    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR = 0;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR_VALUE = 0;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER = 1;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER_VALUE = 1;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR = 2;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR_VALUE = 2;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST = 3;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST_VALUE = 3;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL = 4;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL_VALUE = 4;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT = 5;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT_VALUE = 5;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST = 6;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST_VALUE = 6;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR = 7;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR_VALUE = 7;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER = 8;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER_VALUE = 8;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR = 9;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR_VALUE = 9;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER = 10;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER_VALUE = 10;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER = 11;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER_VALUE = 11;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER = 12;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER_VALUE = 12;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER = 13;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER_VALUE = 13;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR = 14;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR_VALUE = 14;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT = 15;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT_VALUE = 15;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST = 16;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST_VALUE = 16;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST = 17;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST_VALUE = 17;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS = 18;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS_VALUE = 18;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR = 19;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR_VALUE = 19;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER = 20;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER_VALUE = 20;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER = 21;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_VALUE = 21;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER = 22;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER_VALUE = 22;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER = 23;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER_VALUE = 23;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT = 24;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT_VALUE = 24;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER = 25;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER_VALUE = 25;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER = 26;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER_VALUE = 26;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER = 27;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER_VALUE = 27;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER = 28;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER_VALUE = 28;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT = 29;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT_VALUE = 29;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD = 30;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD_VALUE = 30;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR = 31;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR_VALUE = 31;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR = 32;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR_VALUE = 32;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR = 33;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_VALUE = 33;
    /**
     * <code>CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST = 34;</code>
     */
    public static final int CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST_VALUE = 34;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CreativeMusicalWorkContributorRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CreativeMusicalWorkContributorRole forNumber(int value) {
      switch (value) {
        case 0: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR;
        case 1: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER;
        case 2: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR;
        case 3: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST;
        case 4: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL;
        case 5: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT;
        case 6: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST;
        case 7: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR;
        case 8: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER;
        case 9: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR;
        case 10: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER;
        case 11: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER;
        case 12: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER;
        case 13: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER;
        case 14: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR;
        case 15: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT;
        case 16: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST;
        case 17: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST;
        case 18: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS;
        case 19: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR;
        case 20: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER;
        case 21: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER;
        case 22: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER;
        case 23: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER;
        case 24: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT;
        case 25: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER;
        case 26: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER;
        case 27: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER;
        case 28: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER;
        case 29: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT;
        case 30: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD;
        case 31: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR;
        case 32: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR;
        case 33: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR;
        case 34: return CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CreativeMusicalWorkContributorRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CreativeMusicalWorkContributorRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CreativeMusicalWorkContributorRole>() {
            public CreativeMusicalWorkContributorRole findValueByNumber(int number) {
              return CreativeMusicalWorkContributorRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(33);
    }

    private static final CreativeMusicalWorkContributorRole[] VALUES = values();

    public static CreativeMusicalWorkContributorRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CreativeMusicalWorkContributorRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CreativeMusicalWorkContributorRole)
  }

  /**
   * Protobuf enum {@code avs.CueOrigin}
   */
  public enum CueOrigin
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CUE_ORIGIN_UNKNOWN = 0;</code>
     */
    CUE_ORIGIN_UNKNOWN(0),
    /**
     * <code>CUE_ORIGIN_PREEXISTING_MUSIC = 1;</code>
     */
    CUE_ORIGIN_PREEXISTING_MUSIC(1),
    /**
     * <code>CUE_ORIGIN_SPECIALLY_COMMISSIONED_MUSIC = 2;</code>
     */
    CUE_ORIGIN_SPECIALLY_COMMISSIONED_MUSIC(2),
    /**
     * <code>CUE_ORIGIN_USER_DEFINED = 3;</code>
     */
    CUE_ORIGIN_USER_DEFINED(3),
    /**
     * <code>CUE_ORIGIN_LIBRARY_MUSIC = 4;</code>
     */
    CUE_ORIGIN_LIBRARY_MUSIC(4),
    ;

    /**
     * <code>CUE_ORIGIN_UNKNOWN = 0;</code>
     */
    public static final int CUE_ORIGIN_UNKNOWN_VALUE = 0;
    /**
     * <code>CUE_ORIGIN_PREEXISTING_MUSIC = 1;</code>
     */
    public static final int CUE_ORIGIN_PREEXISTING_MUSIC_VALUE = 1;
    /**
     * <code>CUE_ORIGIN_SPECIALLY_COMMISSIONED_MUSIC = 2;</code>
     */
    public static final int CUE_ORIGIN_SPECIALLY_COMMISSIONED_MUSIC_VALUE = 2;
    /**
     * <code>CUE_ORIGIN_USER_DEFINED = 3;</code>
     */
    public static final int CUE_ORIGIN_USER_DEFINED_VALUE = 3;
    /**
     * <code>CUE_ORIGIN_LIBRARY_MUSIC = 4;</code>
     */
    public static final int CUE_ORIGIN_LIBRARY_MUSIC_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CueOrigin valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CueOrigin forNumber(int value) {
      switch (value) {
        case 0: return CUE_ORIGIN_UNKNOWN;
        case 1: return CUE_ORIGIN_PREEXISTING_MUSIC;
        case 2: return CUE_ORIGIN_SPECIALLY_COMMISSIONED_MUSIC;
        case 3: return CUE_ORIGIN_USER_DEFINED;
        case 4: return CUE_ORIGIN_LIBRARY_MUSIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CueOrigin>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CueOrigin> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CueOrigin>() {
            public CueOrigin findValueByNumber(int number) {
              return CueOrigin.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(34);
    }

    private static final CueOrigin[] VALUES = values();

    public static CueOrigin valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CueOrigin(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CueOrigin)
  }

  /**
   * Protobuf enum {@code avs.CueSheetType}
   */
  public enum CueSheetType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CUE_SHEET_TYPE_SUMMARISED_CUE_SHEET = 0;</code>
     */
    CUE_SHEET_TYPE_SUMMARISED_CUE_SHEET(0),
    /**
     * <code>CUE_SHEET_TYPE_STANDARD_CUE_SHEET = 1;</code>
     */
    CUE_SHEET_TYPE_STANDARD_CUE_SHEET(1),
    /**
     * <code>CUE_SHEET_TYPE_SURROGATE_CUE_SHEET = 2;</code>
     */
    CUE_SHEET_TYPE_SURROGATE_CUE_SHEET(2),
    /**
     * <code>CUE_SHEET_TYPE_AVERAGE_CUE_SHEET = 3;</code>
     */
    CUE_SHEET_TYPE_AVERAGE_CUE_SHEET(3),
    /**
     * <code>CUE_SHEET_TYPE_COMPOSITE_CUE_SHEET = 4;</code>
     */
    CUE_SHEET_TYPE_COMPOSITE_CUE_SHEET(4),
    ;

    /**
     * <code>CUE_SHEET_TYPE_SUMMARISED_CUE_SHEET = 0;</code>
     */
    public static final int CUE_SHEET_TYPE_SUMMARISED_CUE_SHEET_VALUE = 0;
    /**
     * <code>CUE_SHEET_TYPE_STANDARD_CUE_SHEET = 1;</code>
     */
    public static final int CUE_SHEET_TYPE_STANDARD_CUE_SHEET_VALUE = 1;
    /**
     * <code>CUE_SHEET_TYPE_SURROGATE_CUE_SHEET = 2;</code>
     */
    public static final int CUE_SHEET_TYPE_SURROGATE_CUE_SHEET_VALUE = 2;
    /**
     * <code>CUE_SHEET_TYPE_AVERAGE_CUE_SHEET = 3;</code>
     */
    public static final int CUE_SHEET_TYPE_AVERAGE_CUE_SHEET_VALUE = 3;
    /**
     * <code>CUE_SHEET_TYPE_COMPOSITE_CUE_SHEET = 4;</code>
     */
    public static final int CUE_SHEET_TYPE_COMPOSITE_CUE_SHEET_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CueSheetType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CueSheetType forNumber(int value) {
      switch (value) {
        case 0: return CUE_SHEET_TYPE_SUMMARISED_CUE_SHEET;
        case 1: return CUE_SHEET_TYPE_STANDARD_CUE_SHEET;
        case 2: return CUE_SHEET_TYPE_SURROGATE_CUE_SHEET;
        case 3: return CUE_SHEET_TYPE_AVERAGE_CUE_SHEET;
        case 4: return CUE_SHEET_TYPE_COMPOSITE_CUE_SHEET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CueSheetType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CueSheetType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CueSheetType>() {
            public CueSheetType findValueByNumber(int number) {
              return CueSheetType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(35);
    }

    private static final CueSheetType[] VALUES = values();

    public static CueSheetType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CueSheetType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CueSheetType)
  }

  /**
   * Protobuf enum {@code avs.CueUseType}
   */
  public enum CueUseType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CUE_USE_TYPE_BUMPER = 0;</code>
     */
    CUE_USE_TYPE_BUMPER(0),
    /**
     * <code>CUE_USE_TYPE_ESSENTIAL_PART = 1;</code>
     */
    CUE_USE_TYPE_ESSENTIAL_PART(1),
    /**
     * <code>CUE_USE_TYPE_BACKGROUND = 2;</code>
     */
    CUE_USE_TYPE_BACKGROUND(2),
    /**
     * <code>CUE_USE_TYPE_ON_SCREEN_MUSIC = 3;</code>
     */
    CUE_USE_TYPE_ON_SCREEN_MUSIC(3),
    /**
     * <code>CUE_USE_TYPE_FILM_THEME = 4;</code>
     */
    CUE_USE_TYPE_FILM_THEME(4),
    /**
     * <code>CUE_USE_TYPE_AUDIO_LOGO = 5;</code>
     */
    CUE_USE_TYPE_AUDIO_LOGO(5),
    /**
     * <code>CUE_USE_TYPE_INDISTINGUISHABLE_BACKGROUND = 6;</code>
     */
    CUE_USE_TYPE_INDISTINGUISHABLE_BACKGROUND(6),
    /**
     * <code>CUE_USE_TYPE_THEME = 7;</code>
     */
    CUE_USE_TYPE_THEME(7),
    /**
     * <code>CUE_USE_TYPE_USER_DEFINED = 8;</code>
     */
    CUE_USE_TYPE_USER_DEFINED(8),
    /**
     * <code>CUE_USE_TYPE_ROLLED_UP_CUE = 9;</code>
     */
    CUE_USE_TYPE_ROLLED_UP_CUE(9),
    ;

    /**
     * <code>CUE_USE_TYPE_BUMPER = 0;</code>
     */
    public static final int CUE_USE_TYPE_BUMPER_VALUE = 0;
    /**
     * <code>CUE_USE_TYPE_ESSENTIAL_PART = 1;</code>
     */
    public static final int CUE_USE_TYPE_ESSENTIAL_PART_VALUE = 1;
    /**
     * <code>CUE_USE_TYPE_BACKGROUND = 2;</code>
     */
    public static final int CUE_USE_TYPE_BACKGROUND_VALUE = 2;
    /**
     * <code>CUE_USE_TYPE_ON_SCREEN_MUSIC = 3;</code>
     */
    public static final int CUE_USE_TYPE_ON_SCREEN_MUSIC_VALUE = 3;
    /**
     * <code>CUE_USE_TYPE_FILM_THEME = 4;</code>
     */
    public static final int CUE_USE_TYPE_FILM_THEME_VALUE = 4;
    /**
     * <code>CUE_USE_TYPE_AUDIO_LOGO = 5;</code>
     */
    public static final int CUE_USE_TYPE_AUDIO_LOGO_VALUE = 5;
    /**
     * <code>CUE_USE_TYPE_INDISTINGUISHABLE_BACKGROUND = 6;</code>
     */
    public static final int CUE_USE_TYPE_INDISTINGUISHABLE_BACKGROUND_VALUE = 6;
    /**
     * <code>CUE_USE_TYPE_THEME = 7;</code>
     */
    public static final int CUE_USE_TYPE_THEME_VALUE = 7;
    /**
     * <code>CUE_USE_TYPE_USER_DEFINED = 8;</code>
     */
    public static final int CUE_USE_TYPE_USER_DEFINED_VALUE = 8;
    /**
     * <code>CUE_USE_TYPE_ROLLED_UP_CUE = 9;</code>
     */
    public static final int CUE_USE_TYPE_ROLLED_UP_CUE_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CueUseType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CueUseType forNumber(int value) {
      switch (value) {
        case 0: return CUE_USE_TYPE_BUMPER;
        case 1: return CUE_USE_TYPE_ESSENTIAL_PART;
        case 2: return CUE_USE_TYPE_BACKGROUND;
        case 3: return CUE_USE_TYPE_ON_SCREEN_MUSIC;
        case 4: return CUE_USE_TYPE_FILM_THEME;
        case 5: return CUE_USE_TYPE_AUDIO_LOGO;
        case 6: return CUE_USE_TYPE_INDISTINGUISHABLE_BACKGROUND;
        case 7: return CUE_USE_TYPE_THEME;
        case 8: return CUE_USE_TYPE_USER_DEFINED;
        case 9: return CUE_USE_TYPE_ROLLED_UP_CUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CueUseType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CueUseType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CueUseType>() {
            public CueUseType findValueByNumber(int number) {
              return CueUseType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(36);
    }

    private static final CueUseType[] VALUES = values();

    public static CueUseType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CueUseType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CueUseType)
  }

  /**
   * Protobuf enum {@code avs.CurrencyCode}
   */
  public enum CurrencyCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CURRENCY_CODE_F_J_D = 0;</code>
     */
    CURRENCY_CODE_F_J_D(0),
    /**
     * <code>CURRENCY_CODE_M_X_N = 1;</code>
     */
    CURRENCY_CODE_M_X_N(1),
    /**
     * <code>CURRENCY_CODE_S_T_D = 2;</code>
     */
    CURRENCY_CODE_S_T_D(2),
    /**
     * <code>CURRENCY_CODE_S_C_R = 3;</code>
     */
    CURRENCY_CODE_S_C_R(3),
    /**
     * <code>CURRENCY_CODE_L_V_L = 4;</code>
     */
    CURRENCY_CODE_L_V_L(4),
    /**
     * <code>CURRENCY_CODE_C_D_F = 5;</code>
     */
    CURRENCY_CODE_C_D_F(5),
    /**
     * <code>CURRENCY_CODE_B_B_D = 6;</code>
     */
    CURRENCY_CODE_B_B_D(6),
    /**
     * <code>CURRENCY_CODE_G_T_Q = 7;</code>
     */
    CURRENCY_CODE_G_T_Q(7),
    /**
     * <code>CURRENCY_CODE_C_L_P = 8;</code>
     */
    CURRENCY_CODE_C_L_P(8),
    /**
     * <code>CURRENCY_CODE_H_N_L = 9;</code>
     */
    CURRENCY_CODE_H_N_L(9),
    /**
     * <code>CURRENCY_CODE_U_G_X = 10;</code>
     */
    CURRENCY_CODE_U_G_X(10),
    /**
     * <code>CURRENCY_CODE_M_X_V = 11;</code>
     */
    CURRENCY_CODE_M_X_V(11),
    /**
     * <code>CURRENCY_CODE_Z_A_R = 12;</code>
     */
    CURRENCY_CODE_Z_A_R(12),
    /**
     * <code>CURRENCY_CODE_T_N_D = 13;</code>
     */
    CURRENCY_CODE_T_N_D(13),
    /**
     * <code>CURRENCY_CODE_S_T_N = 14;</code>
     */
    CURRENCY_CODE_S_T_N(14),
    /**
     * <code>CURRENCY_CODE_C_U_C = 15;</code>
     */
    CURRENCY_CODE_C_U_C(15),
    /**
     * <code>CURRENCY_CODE_B_S_D = 16;</code>
     */
    CURRENCY_CODE_B_S_D(16),
    /**
     * <code>CURRENCY_CODE_S_L_L = 17;</code>
     */
    CURRENCY_CODE_S_L_L(17),
    /**
     * <code>CURRENCY_CODE_S_D_G = 18;</code>
     */
    CURRENCY_CODE_S_D_G(18),
    /**
     * <code>CURRENCY_CODE_I_Q_D = 19;</code>
     */
    CURRENCY_CODE_I_Q_D(19),
    /**
     * <code>CURRENCY_CODE_C_U_P = 20;</code>
     */
    CURRENCY_CODE_C_U_P(20),
    /**
     * <code>CURRENCY_CODE_G_M_D = 21;</code>
     */
    CURRENCY_CODE_G_M_D(21),
    /**
     * <code>CURRENCY_CODE_T_W_D = 22;</code>
     */
    CURRENCY_CODE_T_W_D(22),
    /**
     * <code>CURRENCY_CODE_R_S_D = 23;</code>
     */
    CURRENCY_CODE_R_S_D(23),
    /**
     * <code>CURRENCY_CODE_D_O_P = 24;</code>
     */
    CURRENCY_CODE_D_O_P(24),
    /**
     * <code>CURRENCY_CODE_U_Y_I = 25;</code>
     */
    CURRENCY_CODE_U_Y_I(25),
    /**
     * <code>CURRENCY_CODE_K_M_F = 26;</code>
     */
    CURRENCY_CODE_K_M_F(26),
    /**
     * <code>CURRENCY_CODE_M_Y_R = 27;</code>
     */
    CURRENCY_CODE_M_Y_R(27),
    /**
     * <code>CURRENCY_CODE_F_K_P = 28;</code>
     */
    CURRENCY_CODE_F_K_P(28),
    /**
     * <code>CURRENCY_CODE_X_O_F = 29;</code>
     */
    CURRENCY_CODE_X_O_F(29),
    /**
     * <code>CURRENCY_CODE_G_E_L = 30;</code>
     */
    CURRENCY_CODE_G_E_L(30),
    /**
     * <code>CURRENCY_CODE_U_Y_U = 31;</code>
     */
    CURRENCY_CODE_U_Y_U(31),
    /**
     * <code>CURRENCY_CODE_M_A_D = 32;</code>
     */
    CURRENCY_CODE_M_A_D(32),
    /**
     * <code>CURRENCY_CODE_C_V_E = 33;</code>
     */
    CURRENCY_CODE_C_V_E(33),
    /**
     * <code>CURRENCY_CODE_T_O_P = 34;</code>
     */
    CURRENCY_CODE_T_O_P(34),
    /**
     * <code>CURRENCY_CODE_A_Z_N = 35;</code>
     */
    CURRENCY_CODE_A_Z_N(35),
    /**
     * <code>CURRENCY_CODE_O_M_R = 36;</code>
     */
    CURRENCY_CODE_O_M_R(36),
    /**
     * <code>CURRENCY_CODE_P_G_K = 37;</code>
     */
    CURRENCY_CODE_P_G_K(37),
    /**
     * <code>CURRENCY_CODE_K_E_S = 38;</code>
     */
    CURRENCY_CODE_K_E_S(38),
    /**
     * <code>CURRENCY_CODE_S_E_K = 39;</code>
     */
    CURRENCY_CODE_S_E_K(39),
    /**
     * <code>CURRENCY_CODE_B_T_N = 40;</code>
     */
    CURRENCY_CODE_B_T_N(40),
    /**
     * <code>CURRENCY_CODE_U_A_H = 41;</code>
     */
    CURRENCY_CODE_U_A_H(41),
    /**
     * <code>CURRENCY_CODE_G_N_F = 42;</code>
     */
    CURRENCY_CODE_G_N_F(42),
    /**
     * <code>CURRENCY_CODE_E_R_N = 43;</code>
     */
    CURRENCY_CODE_E_R_N(43),
    /**
     * <code>CURRENCY_CODE_M_Z_N = 44;</code>
     */
    CURRENCY_CODE_M_Z_N(44),
    /**
     * <code>CURRENCY_CODE_S_V_C = 45;</code>
     */
    CURRENCY_CODE_S_V_C(45),
    /**
     * <code>CURRENCY_CODE_A_R_S = 46;</code>
     */
    CURRENCY_CODE_A_R_S(46),
    /**
     * <code>CURRENCY_CODE_Q_A_R = 47;</code>
     */
    CURRENCY_CODE_Q_A_R(47),
    /**
     * <code>CURRENCY_CODE_I_R_R = 48;</code>
     */
    CURRENCY_CODE_I_R_R(48),
    /**
     * <code>CURRENCY_CODE_M_R_O = 49;</code>
     */
    CURRENCY_CODE_M_R_O(49),
    /**
     * <code>CURRENCY_CODE_C_N_Y = 50;</code>
     */
    CURRENCY_CODE_C_N_Y(50),
    /**
     * <code>CURRENCY_CODE_T_H_B = 51;</code>
     */
    CURRENCY_CODE_T_H_B(51),
    /**
     * <code>CURRENCY_CODE_U_Z_S = 52;</code>
     */
    CURRENCY_CODE_U_Z_S(52),
    /**
     * <code>CURRENCY_CODE_X_P_F = 53;</code>
     */
    CURRENCY_CODE_X_P_F(53),
    /**
     * <code>CURRENCY_CODE_M_R_U = 54;</code>
     */
    CURRENCY_CODE_M_R_U(54),
    /**
     * <code>CURRENCY_CODE_B_D_T = 55;</code>
     */
    CURRENCY_CODE_B_D_T(55),
    /**
     * <code>CURRENCY_CODE_L_Y_D = 56;</code>
     */
    CURRENCY_CODE_L_Y_D(56),
    /**
     * <code>CURRENCY_CODE_B_M_D = 57;</code>
     */
    CURRENCY_CODE_B_M_D(57),
    /**
     * <code>CURRENCY_CODE_K_W_D = 58;</code>
     */
    CURRENCY_CODE_K_W_D(58),
    /**
     * <code>CURRENCY_CODE_P_H_P = 59;</code>
     */
    CURRENCY_CODE_P_H_P(59),
    /**
     * <code>CURRENCY_CODE_R_U_B = 60;</code>
     */
    CURRENCY_CODE_R_U_B(60),
    /**
     * <code>CURRENCY_CODE_P_Y_G = 61;</code>
     */
    CURRENCY_CODE_P_Y_G(61),
    /**
     * <code>CURRENCY_CODE_I_S_K = 62;</code>
     */
    CURRENCY_CODE_I_S_K(62),
    /**
     * <code>CURRENCY_CODE_J_M_D = 63;</code>
     */
    CURRENCY_CODE_J_M_D(63),
    /**
     * <code>CURRENCY_CODE_C_O_P = 64;</code>
     */
    CURRENCY_CODE_C_O_P(64),
    /**
     * <code>CURRENCY_CODE_M_K_D = 65;</code>
     */
    CURRENCY_CODE_M_K_D(65),
    /**
     * <code>CURRENCY_CODE_U_S_D = 66;</code>
     */
    CURRENCY_CODE_U_S_D(66),
    /**
     * <code>CURRENCY_CODE_C_O_U = 67;</code>
     */
    CURRENCY_CODE_C_O_U(67),
    /**
     * <code>CURRENCY_CODE_D_Z_D = 68;</code>
     */
    CURRENCY_CODE_D_Z_D(68),
    /**
     * <code>CURRENCY_CODE_P_A_B = 69;</code>
     */
    CURRENCY_CODE_P_A_B(69),
    /**
     * <code>CURRENCY_CODE_S_G_D = 70;</code>
     */
    CURRENCY_CODE_S_G_D(70),
    /**
     * <code>CURRENCY_CODE_E_T_B = 71;</code>
     */
    CURRENCY_CODE_E_T_B(71),
    /**
     * <code>CURRENCY_CODE_K_G_S = 72;</code>
     */
    CURRENCY_CODE_K_G_S(72),
    /**
     * <code>CURRENCY_CODE_S_O_S = 73;</code>
     */
    CURRENCY_CODE_S_O_S(73),
    /**
     * <code>CURRENCY_CODE_V_U_V = 74;</code>
     */
    CURRENCY_CODE_V_U_V(74),
    /**
     * <code>CURRENCY_CODE_V_E_F = 75;</code>
     */
    CURRENCY_CODE_V_E_F(75),
    /**
     * <code>CURRENCY_CODE_L_A_K = 76;</code>
     */
    CURRENCY_CODE_L_A_K(76),
    /**
     * <code>CURRENCY_CODE_B_N_D = 77;</code>
     */
    CURRENCY_CODE_B_N_D(77),
    /**
     * <code>CURRENCY_CODE_X_A_F = 78;</code>
     */
    CURRENCY_CODE_X_A_F(78),
    /**
     * <code>CURRENCY_CODE_L_R_D = 79;</code>
     */
    CURRENCY_CODE_L_R_D(79),
    /**
     * <code>CURRENCY_CODE_C_H_F = 80;</code>
     */
    CURRENCY_CODE_C_H_F(80),
    /**
     * <code>CURRENCY_CODE_H_R_K = 81;</code>
     */
    CURRENCY_CODE_H_R_K(81),
    /**
     * <code>CURRENCY_CODE_A_L_L = 82;</code>
     */
    CURRENCY_CODE_A_L_L(82),
    /**
     * <code>CURRENCY_CODE_D_J_F = 83;</code>
     */
    CURRENCY_CODE_D_J_F(83),
    /**
     * <code>CURRENCY_CODE_M_T_L = 84;</code>
     */
    CURRENCY_CODE_M_T_L(84),
    /**
     * <code>CURRENCY_CODE_V_E_S = 85;</code>
     */
    CURRENCY_CODE_V_E_S(85),
    /**
     * <code>CURRENCY_CODE_Z_M_W = 86;</code>
     */
    CURRENCY_CODE_Z_M_W(86),
    /**
     * <code>CURRENCY_CODE_T_Z_S = 87;</code>
     */
    CURRENCY_CODE_T_Z_S(87),
    /**
     * <code>CURRENCY_CODE_V_N_D = 88;</code>
     */
    CURRENCY_CODE_V_N_D(88),
    /**
     * <code>CURRENCY_CODE_A_U_D = 89;</code>
     */
    CURRENCY_CODE_A_U_D(89),
    /**
     * <code>CURRENCY_CODE_I_L_S = 90;</code>
     */
    CURRENCY_CODE_I_L_S(90),
    /**
     * <code>CURRENCY_CODE_G_H_S = 91;</code>
     */
    CURRENCY_CODE_G_H_S(91),
    /**
     * <code>CURRENCY_CODE_G_Y_D = 92;</code>
     */
    CURRENCY_CODE_G_Y_D(92),
    /**
     * <code>CURRENCY_CODE_K_P_W = 93;</code>
     */
    CURRENCY_CODE_K_P_W(93),
    /**
     * <code>CURRENCY_CODE_B_O_B = 94;</code>
     */
    CURRENCY_CODE_B_O_B(94),
    /**
     * <code>CURRENCY_CODE_K_H_R = 95;</code>
     */
    CURRENCY_CODE_K_H_R(95),
    /**
     * <code>CURRENCY_CODE_M_D_L = 96;</code>
     */
    CURRENCY_CODE_M_D_L(96),
    /**
     * <code>CURRENCY_CODE_I_D_R = 97;</code>
     */
    CURRENCY_CODE_I_D_R(97),
    /**
     * <code>CURRENCY_CODE_K_Y_D = 98;</code>
     */
    CURRENCY_CODE_K_Y_D(98),
    /**
     * <code>CURRENCY_CODE_A_M_D = 99;</code>
     */
    CURRENCY_CODE_A_M_D(99),
    /**
     * <code>CURRENCY_CODE_B_W_P = 100;</code>
     */
    CURRENCY_CODE_B_W_P(100),
    /**
     * <code>CURRENCY_CODE_S_H_P = 101;</code>
     */
    CURRENCY_CODE_S_H_P(101),
    /**
     * <code>CURRENCY_CODE_T_R_Y = 102;</code>
     */
    CURRENCY_CODE_T_R_Y(102),
    /**
     * <code>CURRENCY_CODE_L_B_P = 103;</code>
     */
    CURRENCY_CODE_L_B_P(103),
    /**
     * <code>CURRENCY_CODE_C_Y_P = 104;</code>
     */
    CURRENCY_CODE_C_Y_P(104),
    /**
     * <code>CURRENCY_CODE_T_J_S = 105;</code>
     */
    CURRENCY_CODE_T_J_S(105),
    /**
     * <code>CURRENCY_CODE_J_O_D = 106;</code>
     */
    CURRENCY_CODE_J_O_D(106),
    /**
     * <code>CURRENCY_CODE_A_E_D = 107;</code>
     */
    CURRENCY_CODE_A_E_D(107),
    /**
     * <code>CURRENCY_CODE_H_K_D = 108;</code>
     */
    CURRENCY_CODE_H_K_D(108),
    /**
     * <code>CURRENCY_CODE_R_W_F = 109;</code>
     */
    CURRENCY_CODE_R_W_F(109),
    /**
     * <code>CURRENCY_CODE_E_U_R = 110;</code>
     */
    CURRENCY_CODE_E_U_R(110),
    /**
     * <code>CURRENCY_CODE_L_S_L = 111;</code>
     */
    CURRENCY_CODE_L_S_L(111),
    /**
     * <code>CURRENCY_CODE_D_K_K = 112;</code>
     */
    CURRENCY_CODE_D_K_K(112),
    /**
     * <code>CURRENCY_CODE_C_A_D = 113;</code>
     */
    CURRENCY_CODE_C_A_D(113),
    /**
     * <code>CURRENCY_CODE_B_G_N = 114;</code>
     */
    CURRENCY_CODE_B_G_N(114),
    /**
     * <code>CURRENCY_CODE_B_O_V = 115;</code>
     */
    CURRENCY_CODE_B_O_V(115),
    /**
     * <code>CURRENCY_CODE_M_M_K = 116;</code>
     */
    CURRENCY_CODE_M_M_K(116),
    /**
     * <code>CURRENCY_CODE_E_E_K = 117;</code>
     */
    CURRENCY_CODE_E_E_K(117),
    /**
     * <code>CURRENCY_CODE_M_U_R = 118;</code>
     */
    CURRENCY_CODE_M_U_R(118),
    /**
     * <code>CURRENCY_CODE_N_O_K = 119;</code>
     */
    CURRENCY_CODE_N_O_K(119),
    /**
     * <code>CURRENCY_CODE_S_Y_P = 120;</code>
     */
    CURRENCY_CODE_S_Y_P(120),
    /**
     * <code>CURRENCY_CODE_Z_W_L = 121;</code>
     */
    CURRENCY_CODE_Z_W_L(121),
    /**
     * <code>CURRENCY_CODE_R_O_L = 122;</code>
     */
    CURRENCY_CODE_R_O_L(122),
    /**
     * <code>CURRENCY_CODE_G_I_P = 123;</code>
     */
    CURRENCY_CODE_G_I_P(123),
    /**
     * <code>CURRENCY_CODE_R_O_N = 124;</code>
     */
    CURRENCY_CODE_R_O_N(124),
    /**
     * <code>CURRENCY_CODE_L_K_R = 125;</code>
     */
    CURRENCY_CODE_L_K_R(125),
    /**
     * <code>CURRENCY_CODE_N_G_N = 126;</code>
     */
    CURRENCY_CODE_N_G_N(126),
    /**
     * <code>CURRENCY_CODE_C_R_C = 127;</code>
     */
    CURRENCY_CODE_C_R_C(127),
    /**
     * <code>CURRENCY_CODE_C_Z_K = 128;</code>
     */
    CURRENCY_CODE_C_Z_K(128),
    /**
     * <code>CURRENCY_CODE_P_K_R = 129;</code>
     */
    CURRENCY_CODE_P_K_R(129),
    /**
     * <code>CURRENCY_CODE_X_C_D = 130;</code>
     */
    CURRENCY_CODE_X_C_D(130),
    /**
     * <code>CURRENCY_CODE_A_N_G = 131;</code>
     */
    CURRENCY_CODE_A_N_G(131),
    /**
     * <code>CURRENCY_CODE_H_T_G = 132;</code>
     */
    CURRENCY_CODE_H_T_G(132),
    /**
     * <code>CURRENCY_CODE_B_H_D = 133;</code>
     */
    CURRENCY_CODE_B_H_D(133),
    /**
     * <code>CURRENCY_CODE_S_I_T = 134;</code>
     */
    CURRENCY_CODE_S_I_T(134),
    /**
     * <code>CURRENCY_CODE_K_Z_T = 135;</code>
     */
    CURRENCY_CODE_K_Z_T(135),
    /**
     * <code>CURRENCY_CODE_S_R_D = 136;</code>
     */
    CURRENCY_CODE_S_R_D(136),
    /**
     * <code>CURRENCY_CODE_S_Z_L = 137;</code>
     */
    CURRENCY_CODE_S_Z_L(137),
    /**
     * <code>CURRENCY_CODE_S_A_R = 138;</code>
     */
    CURRENCY_CODE_S_A_R(138),
    /**
     * <code>CURRENCY_CODE_T_T_D = 139;</code>
     */
    CURRENCY_CODE_T_T_D(139),
    /**
     * <code>CURRENCY_CODE_L_T_L = 140;</code>
     */
    CURRENCY_CODE_L_T_L(140),
    /**
     * <code>CURRENCY_CODE_Y_E_R = 141;</code>
     */
    CURRENCY_CODE_Y_E_R(141),
    /**
     * <code>CURRENCY_CODE_M_V_R = 142;</code>
     */
    CURRENCY_CODE_M_V_R(142),
    /**
     * <code>CURRENCY_CODE_A_F_N = 143;</code>
     */
    CURRENCY_CODE_A_F_N(143),
    /**
     * <code>CURRENCY_CODE_I_N_R = 144;</code>
     */
    CURRENCY_CODE_I_N_R(144),
    /**
     * <code>CURRENCY_CODE_A_W_G = 145;</code>
     */
    CURRENCY_CODE_A_W_G(145),
    /**
     * <code>CURRENCY_CODE_K_R_W = 146;</code>
     */
    CURRENCY_CODE_K_R_W(146),
    /**
     * <code>CURRENCY_CODE_N_P_R = 147;</code>
     */
    CURRENCY_CODE_N_P_R(147),
    /**
     * <code>CURRENCY_CODE_J_P_Y = 148;</code>
     */
    CURRENCY_CODE_J_P_Y(148),
    /**
     * <code>CURRENCY_CODE_M_N_T = 149;</code>
     */
    CURRENCY_CODE_M_N_T(149),
    /**
     * <code>CURRENCY_CODE_A_O_A = 150;</code>
     */
    CURRENCY_CODE_A_O_A(150),
    /**
     * <code>CURRENCY_CODE_P_L_N = 151;</code>
     */
    CURRENCY_CODE_P_L_N(151),
    /**
     * <code>CURRENCY_CODE_G_B_P = 152;</code>
     */
    CURRENCY_CODE_G_B_P(152),
    /**
     * <code>CURRENCY_CODE_S_B_D = 153;</code>
     */
    CURRENCY_CODE_S_B_D(153),
    /**
     * <code>CURRENCY_CODE_H_U_F = 154;</code>
     */
    CURRENCY_CODE_H_U_F(154),
    /**
     * <code>CURRENCY_CODE_B_Y_R = 155;</code>
     */
    CURRENCY_CODE_B_Y_R(155),
    /**
     * <code>CURRENCY_CODE_B_I_F = 156;</code>
     */
    CURRENCY_CODE_B_I_F(156),
    /**
     * <code>CURRENCY_CODE_M_W_K = 157;</code>
     */
    CURRENCY_CODE_M_W_K(157),
    /**
     * <code>CURRENCY_CODE_M_G_A = 158;</code>
     */
    CURRENCY_CODE_M_G_A(158),
    /**
     * <code>CURRENCY_CODE_B_Z_D = 159;</code>
     */
    CURRENCY_CODE_B_Z_D(159),
    /**
     * <code>CURRENCY_CODE_B_A_M = 160;</code>
     */
    CURRENCY_CODE_B_A_M(160),
    /**
     * <code>CURRENCY_CODE_E_G_P = 161;</code>
     */
    CURRENCY_CODE_E_G_P(161),
    /**
     * <code>CURRENCY_CODE_M_O_P = 162;</code>
     */
    CURRENCY_CODE_M_O_P(162),
    /**
     * <code>CURRENCY_CODE_N_A_D = 163;</code>
     */
    CURRENCY_CODE_N_A_D(163),
    /**
     * <code>CURRENCY_CODE_S_S_P = 164;</code>
     */
    CURRENCY_CODE_S_S_P(164),
    /**
     * <code>CURRENCY_CODE_S_K_K = 165;</code>
     */
    CURRENCY_CODE_S_K_K(165),
    /**
     * <code>CURRENCY_CODE_N_I_O = 166;</code>
     */
    CURRENCY_CODE_N_I_O(166),
    /**
     * <code>CURRENCY_CODE_P_E_N = 167;</code>
     */
    CURRENCY_CODE_P_E_N(167),
    /**
     * <code>CURRENCY_CODE_N_Z_D = 168;</code>
     */
    CURRENCY_CODE_N_Z_D(168),
    /**
     * <code>CURRENCY_CODE_W_S_T = 169;</code>
     */
    CURRENCY_CODE_W_S_T(169),
    /**
     * <code>CURRENCY_CODE_T_M_T = 170;</code>
     */
    CURRENCY_CODE_T_M_T(170),
    /**
     * <code>CURRENCY_CODE_C_L_F = 171;</code>
     */
    CURRENCY_CODE_C_L_F(171),
    /**
     * <code>CURRENCY_CODE_B_R_L = 172;</code>
     */
    CURRENCY_CODE_B_R_L(172),
    ;

    /**
     * <code>CURRENCY_CODE_F_J_D = 0;</code>
     */
    public static final int CURRENCY_CODE_F_J_D_VALUE = 0;
    /**
     * <code>CURRENCY_CODE_M_X_N = 1;</code>
     */
    public static final int CURRENCY_CODE_M_X_N_VALUE = 1;
    /**
     * <code>CURRENCY_CODE_S_T_D = 2;</code>
     */
    public static final int CURRENCY_CODE_S_T_D_VALUE = 2;
    /**
     * <code>CURRENCY_CODE_S_C_R = 3;</code>
     */
    public static final int CURRENCY_CODE_S_C_R_VALUE = 3;
    /**
     * <code>CURRENCY_CODE_L_V_L = 4;</code>
     */
    public static final int CURRENCY_CODE_L_V_L_VALUE = 4;
    /**
     * <code>CURRENCY_CODE_C_D_F = 5;</code>
     */
    public static final int CURRENCY_CODE_C_D_F_VALUE = 5;
    /**
     * <code>CURRENCY_CODE_B_B_D = 6;</code>
     */
    public static final int CURRENCY_CODE_B_B_D_VALUE = 6;
    /**
     * <code>CURRENCY_CODE_G_T_Q = 7;</code>
     */
    public static final int CURRENCY_CODE_G_T_Q_VALUE = 7;
    /**
     * <code>CURRENCY_CODE_C_L_P = 8;</code>
     */
    public static final int CURRENCY_CODE_C_L_P_VALUE = 8;
    /**
     * <code>CURRENCY_CODE_H_N_L = 9;</code>
     */
    public static final int CURRENCY_CODE_H_N_L_VALUE = 9;
    /**
     * <code>CURRENCY_CODE_U_G_X = 10;</code>
     */
    public static final int CURRENCY_CODE_U_G_X_VALUE = 10;
    /**
     * <code>CURRENCY_CODE_M_X_V = 11;</code>
     */
    public static final int CURRENCY_CODE_M_X_V_VALUE = 11;
    /**
     * <code>CURRENCY_CODE_Z_A_R = 12;</code>
     */
    public static final int CURRENCY_CODE_Z_A_R_VALUE = 12;
    /**
     * <code>CURRENCY_CODE_T_N_D = 13;</code>
     */
    public static final int CURRENCY_CODE_T_N_D_VALUE = 13;
    /**
     * <code>CURRENCY_CODE_S_T_N = 14;</code>
     */
    public static final int CURRENCY_CODE_S_T_N_VALUE = 14;
    /**
     * <code>CURRENCY_CODE_C_U_C = 15;</code>
     */
    public static final int CURRENCY_CODE_C_U_C_VALUE = 15;
    /**
     * <code>CURRENCY_CODE_B_S_D = 16;</code>
     */
    public static final int CURRENCY_CODE_B_S_D_VALUE = 16;
    /**
     * <code>CURRENCY_CODE_S_L_L = 17;</code>
     */
    public static final int CURRENCY_CODE_S_L_L_VALUE = 17;
    /**
     * <code>CURRENCY_CODE_S_D_G = 18;</code>
     */
    public static final int CURRENCY_CODE_S_D_G_VALUE = 18;
    /**
     * <code>CURRENCY_CODE_I_Q_D = 19;</code>
     */
    public static final int CURRENCY_CODE_I_Q_D_VALUE = 19;
    /**
     * <code>CURRENCY_CODE_C_U_P = 20;</code>
     */
    public static final int CURRENCY_CODE_C_U_P_VALUE = 20;
    /**
     * <code>CURRENCY_CODE_G_M_D = 21;</code>
     */
    public static final int CURRENCY_CODE_G_M_D_VALUE = 21;
    /**
     * <code>CURRENCY_CODE_T_W_D = 22;</code>
     */
    public static final int CURRENCY_CODE_T_W_D_VALUE = 22;
    /**
     * <code>CURRENCY_CODE_R_S_D = 23;</code>
     */
    public static final int CURRENCY_CODE_R_S_D_VALUE = 23;
    /**
     * <code>CURRENCY_CODE_D_O_P = 24;</code>
     */
    public static final int CURRENCY_CODE_D_O_P_VALUE = 24;
    /**
     * <code>CURRENCY_CODE_U_Y_I = 25;</code>
     */
    public static final int CURRENCY_CODE_U_Y_I_VALUE = 25;
    /**
     * <code>CURRENCY_CODE_K_M_F = 26;</code>
     */
    public static final int CURRENCY_CODE_K_M_F_VALUE = 26;
    /**
     * <code>CURRENCY_CODE_M_Y_R = 27;</code>
     */
    public static final int CURRENCY_CODE_M_Y_R_VALUE = 27;
    /**
     * <code>CURRENCY_CODE_F_K_P = 28;</code>
     */
    public static final int CURRENCY_CODE_F_K_P_VALUE = 28;
    /**
     * <code>CURRENCY_CODE_X_O_F = 29;</code>
     */
    public static final int CURRENCY_CODE_X_O_F_VALUE = 29;
    /**
     * <code>CURRENCY_CODE_G_E_L = 30;</code>
     */
    public static final int CURRENCY_CODE_G_E_L_VALUE = 30;
    /**
     * <code>CURRENCY_CODE_U_Y_U = 31;</code>
     */
    public static final int CURRENCY_CODE_U_Y_U_VALUE = 31;
    /**
     * <code>CURRENCY_CODE_M_A_D = 32;</code>
     */
    public static final int CURRENCY_CODE_M_A_D_VALUE = 32;
    /**
     * <code>CURRENCY_CODE_C_V_E = 33;</code>
     */
    public static final int CURRENCY_CODE_C_V_E_VALUE = 33;
    /**
     * <code>CURRENCY_CODE_T_O_P = 34;</code>
     */
    public static final int CURRENCY_CODE_T_O_P_VALUE = 34;
    /**
     * <code>CURRENCY_CODE_A_Z_N = 35;</code>
     */
    public static final int CURRENCY_CODE_A_Z_N_VALUE = 35;
    /**
     * <code>CURRENCY_CODE_O_M_R = 36;</code>
     */
    public static final int CURRENCY_CODE_O_M_R_VALUE = 36;
    /**
     * <code>CURRENCY_CODE_P_G_K = 37;</code>
     */
    public static final int CURRENCY_CODE_P_G_K_VALUE = 37;
    /**
     * <code>CURRENCY_CODE_K_E_S = 38;</code>
     */
    public static final int CURRENCY_CODE_K_E_S_VALUE = 38;
    /**
     * <code>CURRENCY_CODE_S_E_K = 39;</code>
     */
    public static final int CURRENCY_CODE_S_E_K_VALUE = 39;
    /**
     * <code>CURRENCY_CODE_B_T_N = 40;</code>
     */
    public static final int CURRENCY_CODE_B_T_N_VALUE = 40;
    /**
     * <code>CURRENCY_CODE_U_A_H = 41;</code>
     */
    public static final int CURRENCY_CODE_U_A_H_VALUE = 41;
    /**
     * <code>CURRENCY_CODE_G_N_F = 42;</code>
     */
    public static final int CURRENCY_CODE_G_N_F_VALUE = 42;
    /**
     * <code>CURRENCY_CODE_E_R_N = 43;</code>
     */
    public static final int CURRENCY_CODE_E_R_N_VALUE = 43;
    /**
     * <code>CURRENCY_CODE_M_Z_N = 44;</code>
     */
    public static final int CURRENCY_CODE_M_Z_N_VALUE = 44;
    /**
     * <code>CURRENCY_CODE_S_V_C = 45;</code>
     */
    public static final int CURRENCY_CODE_S_V_C_VALUE = 45;
    /**
     * <code>CURRENCY_CODE_A_R_S = 46;</code>
     */
    public static final int CURRENCY_CODE_A_R_S_VALUE = 46;
    /**
     * <code>CURRENCY_CODE_Q_A_R = 47;</code>
     */
    public static final int CURRENCY_CODE_Q_A_R_VALUE = 47;
    /**
     * <code>CURRENCY_CODE_I_R_R = 48;</code>
     */
    public static final int CURRENCY_CODE_I_R_R_VALUE = 48;
    /**
     * <code>CURRENCY_CODE_M_R_O = 49;</code>
     */
    public static final int CURRENCY_CODE_M_R_O_VALUE = 49;
    /**
     * <code>CURRENCY_CODE_C_N_Y = 50;</code>
     */
    public static final int CURRENCY_CODE_C_N_Y_VALUE = 50;
    /**
     * <code>CURRENCY_CODE_T_H_B = 51;</code>
     */
    public static final int CURRENCY_CODE_T_H_B_VALUE = 51;
    /**
     * <code>CURRENCY_CODE_U_Z_S = 52;</code>
     */
    public static final int CURRENCY_CODE_U_Z_S_VALUE = 52;
    /**
     * <code>CURRENCY_CODE_X_P_F = 53;</code>
     */
    public static final int CURRENCY_CODE_X_P_F_VALUE = 53;
    /**
     * <code>CURRENCY_CODE_M_R_U = 54;</code>
     */
    public static final int CURRENCY_CODE_M_R_U_VALUE = 54;
    /**
     * <code>CURRENCY_CODE_B_D_T = 55;</code>
     */
    public static final int CURRENCY_CODE_B_D_T_VALUE = 55;
    /**
     * <code>CURRENCY_CODE_L_Y_D = 56;</code>
     */
    public static final int CURRENCY_CODE_L_Y_D_VALUE = 56;
    /**
     * <code>CURRENCY_CODE_B_M_D = 57;</code>
     */
    public static final int CURRENCY_CODE_B_M_D_VALUE = 57;
    /**
     * <code>CURRENCY_CODE_K_W_D = 58;</code>
     */
    public static final int CURRENCY_CODE_K_W_D_VALUE = 58;
    /**
     * <code>CURRENCY_CODE_P_H_P = 59;</code>
     */
    public static final int CURRENCY_CODE_P_H_P_VALUE = 59;
    /**
     * <code>CURRENCY_CODE_R_U_B = 60;</code>
     */
    public static final int CURRENCY_CODE_R_U_B_VALUE = 60;
    /**
     * <code>CURRENCY_CODE_P_Y_G = 61;</code>
     */
    public static final int CURRENCY_CODE_P_Y_G_VALUE = 61;
    /**
     * <code>CURRENCY_CODE_I_S_K = 62;</code>
     */
    public static final int CURRENCY_CODE_I_S_K_VALUE = 62;
    /**
     * <code>CURRENCY_CODE_J_M_D = 63;</code>
     */
    public static final int CURRENCY_CODE_J_M_D_VALUE = 63;
    /**
     * <code>CURRENCY_CODE_C_O_P = 64;</code>
     */
    public static final int CURRENCY_CODE_C_O_P_VALUE = 64;
    /**
     * <code>CURRENCY_CODE_M_K_D = 65;</code>
     */
    public static final int CURRENCY_CODE_M_K_D_VALUE = 65;
    /**
     * <code>CURRENCY_CODE_U_S_D = 66;</code>
     */
    public static final int CURRENCY_CODE_U_S_D_VALUE = 66;
    /**
     * <code>CURRENCY_CODE_C_O_U = 67;</code>
     */
    public static final int CURRENCY_CODE_C_O_U_VALUE = 67;
    /**
     * <code>CURRENCY_CODE_D_Z_D = 68;</code>
     */
    public static final int CURRENCY_CODE_D_Z_D_VALUE = 68;
    /**
     * <code>CURRENCY_CODE_P_A_B = 69;</code>
     */
    public static final int CURRENCY_CODE_P_A_B_VALUE = 69;
    /**
     * <code>CURRENCY_CODE_S_G_D = 70;</code>
     */
    public static final int CURRENCY_CODE_S_G_D_VALUE = 70;
    /**
     * <code>CURRENCY_CODE_E_T_B = 71;</code>
     */
    public static final int CURRENCY_CODE_E_T_B_VALUE = 71;
    /**
     * <code>CURRENCY_CODE_K_G_S = 72;</code>
     */
    public static final int CURRENCY_CODE_K_G_S_VALUE = 72;
    /**
     * <code>CURRENCY_CODE_S_O_S = 73;</code>
     */
    public static final int CURRENCY_CODE_S_O_S_VALUE = 73;
    /**
     * <code>CURRENCY_CODE_V_U_V = 74;</code>
     */
    public static final int CURRENCY_CODE_V_U_V_VALUE = 74;
    /**
     * <code>CURRENCY_CODE_V_E_F = 75;</code>
     */
    public static final int CURRENCY_CODE_V_E_F_VALUE = 75;
    /**
     * <code>CURRENCY_CODE_L_A_K = 76;</code>
     */
    public static final int CURRENCY_CODE_L_A_K_VALUE = 76;
    /**
     * <code>CURRENCY_CODE_B_N_D = 77;</code>
     */
    public static final int CURRENCY_CODE_B_N_D_VALUE = 77;
    /**
     * <code>CURRENCY_CODE_X_A_F = 78;</code>
     */
    public static final int CURRENCY_CODE_X_A_F_VALUE = 78;
    /**
     * <code>CURRENCY_CODE_L_R_D = 79;</code>
     */
    public static final int CURRENCY_CODE_L_R_D_VALUE = 79;
    /**
     * <code>CURRENCY_CODE_C_H_F = 80;</code>
     */
    public static final int CURRENCY_CODE_C_H_F_VALUE = 80;
    /**
     * <code>CURRENCY_CODE_H_R_K = 81;</code>
     */
    public static final int CURRENCY_CODE_H_R_K_VALUE = 81;
    /**
     * <code>CURRENCY_CODE_A_L_L = 82;</code>
     */
    public static final int CURRENCY_CODE_A_L_L_VALUE = 82;
    /**
     * <code>CURRENCY_CODE_D_J_F = 83;</code>
     */
    public static final int CURRENCY_CODE_D_J_F_VALUE = 83;
    /**
     * <code>CURRENCY_CODE_M_T_L = 84;</code>
     */
    public static final int CURRENCY_CODE_M_T_L_VALUE = 84;
    /**
     * <code>CURRENCY_CODE_V_E_S = 85;</code>
     */
    public static final int CURRENCY_CODE_V_E_S_VALUE = 85;
    /**
     * <code>CURRENCY_CODE_Z_M_W = 86;</code>
     */
    public static final int CURRENCY_CODE_Z_M_W_VALUE = 86;
    /**
     * <code>CURRENCY_CODE_T_Z_S = 87;</code>
     */
    public static final int CURRENCY_CODE_T_Z_S_VALUE = 87;
    /**
     * <code>CURRENCY_CODE_V_N_D = 88;</code>
     */
    public static final int CURRENCY_CODE_V_N_D_VALUE = 88;
    /**
     * <code>CURRENCY_CODE_A_U_D = 89;</code>
     */
    public static final int CURRENCY_CODE_A_U_D_VALUE = 89;
    /**
     * <code>CURRENCY_CODE_I_L_S = 90;</code>
     */
    public static final int CURRENCY_CODE_I_L_S_VALUE = 90;
    /**
     * <code>CURRENCY_CODE_G_H_S = 91;</code>
     */
    public static final int CURRENCY_CODE_G_H_S_VALUE = 91;
    /**
     * <code>CURRENCY_CODE_G_Y_D = 92;</code>
     */
    public static final int CURRENCY_CODE_G_Y_D_VALUE = 92;
    /**
     * <code>CURRENCY_CODE_K_P_W = 93;</code>
     */
    public static final int CURRENCY_CODE_K_P_W_VALUE = 93;
    /**
     * <code>CURRENCY_CODE_B_O_B = 94;</code>
     */
    public static final int CURRENCY_CODE_B_O_B_VALUE = 94;
    /**
     * <code>CURRENCY_CODE_K_H_R = 95;</code>
     */
    public static final int CURRENCY_CODE_K_H_R_VALUE = 95;
    /**
     * <code>CURRENCY_CODE_M_D_L = 96;</code>
     */
    public static final int CURRENCY_CODE_M_D_L_VALUE = 96;
    /**
     * <code>CURRENCY_CODE_I_D_R = 97;</code>
     */
    public static final int CURRENCY_CODE_I_D_R_VALUE = 97;
    /**
     * <code>CURRENCY_CODE_K_Y_D = 98;</code>
     */
    public static final int CURRENCY_CODE_K_Y_D_VALUE = 98;
    /**
     * <code>CURRENCY_CODE_A_M_D = 99;</code>
     */
    public static final int CURRENCY_CODE_A_M_D_VALUE = 99;
    /**
     * <code>CURRENCY_CODE_B_W_P = 100;</code>
     */
    public static final int CURRENCY_CODE_B_W_P_VALUE = 100;
    /**
     * <code>CURRENCY_CODE_S_H_P = 101;</code>
     */
    public static final int CURRENCY_CODE_S_H_P_VALUE = 101;
    /**
     * <code>CURRENCY_CODE_T_R_Y = 102;</code>
     */
    public static final int CURRENCY_CODE_T_R_Y_VALUE = 102;
    /**
     * <code>CURRENCY_CODE_L_B_P = 103;</code>
     */
    public static final int CURRENCY_CODE_L_B_P_VALUE = 103;
    /**
     * <code>CURRENCY_CODE_C_Y_P = 104;</code>
     */
    public static final int CURRENCY_CODE_C_Y_P_VALUE = 104;
    /**
     * <code>CURRENCY_CODE_T_J_S = 105;</code>
     */
    public static final int CURRENCY_CODE_T_J_S_VALUE = 105;
    /**
     * <code>CURRENCY_CODE_J_O_D = 106;</code>
     */
    public static final int CURRENCY_CODE_J_O_D_VALUE = 106;
    /**
     * <code>CURRENCY_CODE_A_E_D = 107;</code>
     */
    public static final int CURRENCY_CODE_A_E_D_VALUE = 107;
    /**
     * <code>CURRENCY_CODE_H_K_D = 108;</code>
     */
    public static final int CURRENCY_CODE_H_K_D_VALUE = 108;
    /**
     * <code>CURRENCY_CODE_R_W_F = 109;</code>
     */
    public static final int CURRENCY_CODE_R_W_F_VALUE = 109;
    /**
     * <code>CURRENCY_CODE_E_U_R = 110;</code>
     */
    public static final int CURRENCY_CODE_E_U_R_VALUE = 110;
    /**
     * <code>CURRENCY_CODE_L_S_L = 111;</code>
     */
    public static final int CURRENCY_CODE_L_S_L_VALUE = 111;
    /**
     * <code>CURRENCY_CODE_D_K_K = 112;</code>
     */
    public static final int CURRENCY_CODE_D_K_K_VALUE = 112;
    /**
     * <code>CURRENCY_CODE_C_A_D = 113;</code>
     */
    public static final int CURRENCY_CODE_C_A_D_VALUE = 113;
    /**
     * <code>CURRENCY_CODE_B_G_N = 114;</code>
     */
    public static final int CURRENCY_CODE_B_G_N_VALUE = 114;
    /**
     * <code>CURRENCY_CODE_B_O_V = 115;</code>
     */
    public static final int CURRENCY_CODE_B_O_V_VALUE = 115;
    /**
     * <code>CURRENCY_CODE_M_M_K = 116;</code>
     */
    public static final int CURRENCY_CODE_M_M_K_VALUE = 116;
    /**
     * <code>CURRENCY_CODE_E_E_K = 117;</code>
     */
    public static final int CURRENCY_CODE_E_E_K_VALUE = 117;
    /**
     * <code>CURRENCY_CODE_M_U_R = 118;</code>
     */
    public static final int CURRENCY_CODE_M_U_R_VALUE = 118;
    /**
     * <code>CURRENCY_CODE_N_O_K = 119;</code>
     */
    public static final int CURRENCY_CODE_N_O_K_VALUE = 119;
    /**
     * <code>CURRENCY_CODE_S_Y_P = 120;</code>
     */
    public static final int CURRENCY_CODE_S_Y_P_VALUE = 120;
    /**
     * <code>CURRENCY_CODE_Z_W_L = 121;</code>
     */
    public static final int CURRENCY_CODE_Z_W_L_VALUE = 121;
    /**
     * <code>CURRENCY_CODE_R_O_L = 122;</code>
     */
    public static final int CURRENCY_CODE_R_O_L_VALUE = 122;
    /**
     * <code>CURRENCY_CODE_G_I_P = 123;</code>
     */
    public static final int CURRENCY_CODE_G_I_P_VALUE = 123;
    /**
     * <code>CURRENCY_CODE_R_O_N = 124;</code>
     */
    public static final int CURRENCY_CODE_R_O_N_VALUE = 124;
    /**
     * <code>CURRENCY_CODE_L_K_R = 125;</code>
     */
    public static final int CURRENCY_CODE_L_K_R_VALUE = 125;
    /**
     * <code>CURRENCY_CODE_N_G_N = 126;</code>
     */
    public static final int CURRENCY_CODE_N_G_N_VALUE = 126;
    /**
     * <code>CURRENCY_CODE_C_R_C = 127;</code>
     */
    public static final int CURRENCY_CODE_C_R_C_VALUE = 127;
    /**
     * <code>CURRENCY_CODE_C_Z_K = 128;</code>
     */
    public static final int CURRENCY_CODE_C_Z_K_VALUE = 128;
    /**
     * <code>CURRENCY_CODE_P_K_R = 129;</code>
     */
    public static final int CURRENCY_CODE_P_K_R_VALUE = 129;
    /**
     * <code>CURRENCY_CODE_X_C_D = 130;</code>
     */
    public static final int CURRENCY_CODE_X_C_D_VALUE = 130;
    /**
     * <code>CURRENCY_CODE_A_N_G = 131;</code>
     */
    public static final int CURRENCY_CODE_A_N_G_VALUE = 131;
    /**
     * <code>CURRENCY_CODE_H_T_G = 132;</code>
     */
    public static final int CURRENCY_CODE_H_T_G_VALUE = 132;
    /**
     * <code>CURRENCY_CODE_B_H_D = 133;</code>
     */
    public static final int CURRENCY_CODE_B_H_D_VALUE = 133;
    /**
     * <code>CURRENCY_CODE_S_I_T = 134;</code>
     */
    public static final int CURRENCY_CODE_S_I_T_VALUE = 134;
    /**
     * <code>CURRENCY_CODE_K_Z_T = 135;</code>
     */
    public static final int CURRENCY_CODE_K_Z_T_VALUE = 135;
    /**
     * <code>CURRENCY_CODE_S_R_D = 136;</code>
     */
    public static final int CURRENCY_CODE_S_R_D_VALUE = 136;
    /**
     * <code>CURRENCY_CODE_S_Z_L = 137;</code>
     */
    public static final int CURRENCY_CODE_S_Z_L_VALUE = 137;
    /**
     * <code>CURRENCY_CODE_S_A_R = 138;</code>
     */
    public static final int CURRENCY_CODE_S_A_R_VALUE = 138;
    /**
     * <code>CURRENCY_CODE_T_T_D = 139;</code>
     */
    public static final int CURRENCY_CODE_T_T_D_VALUE = 139;
    /**
     * <code>CURRENCY_CODE_L_T_L = 140;</code>
     */
    public static final int CURRENCY_CODE_L_T_L_VALUE = 140;
    /**
     * <code>CURRENCY_CODE_Y_E_R = 141;</code>
     */
    public static final int CURRENCY_CODE_Y_E_R_VALUE = 141;
    /**
     * <code>CURRENCY_CODE_M_V_R = 142;</code>
     */
    public static final int CURRENCY_CODE_M_V_R_VALUE = 142;
    /**
     * <code>CURRENCY_CODE_A_F_N = 143;</code>
     */
    public static final int CURRENCY_CODE_A_F_N_VALUE = 143;
    /**
     * <code>CURRENCY_CODE_I_N_R = 144;</code>
     */
    public static final int CURRENCY_CODE_I_N_R_VALUE = 144;
    /**
     * <code>CURRENCY_CODE_A_W_G = 145;</code>
     */
    public static final int CURRENCY_CODE_A_W_G_VALUE = 145;
    /**
     * <code>CURRENCY_CODE_K_R_W = 146;</code>
     */
    public static final int CURRENCY_CODE_K_R_W_VALUE = 146;
    /**
     * <code>CURRENCY_CODE_N_P_R = 147;</code>
     */
    public static final int CURRENCY_CODE_N_P_R_VALUE = 147;
    /**
     * <code>CURRENCY_CODE_J_P_Y = 148;</code>
     */
    public static final int CURRENCY_CODE_J_P_Y_VALUE = 148;
    /**
     * <code>CURRENCY_CODE_M_N_T = 149;</code>
     */
    public static final int CURRENCY_CODE_M_N_T_VALUE = 149;
    /**
     * <code>CURRENCY_CODE_A_O_A = 150;</code>
     */
    public static final int CURRENCY_CODE_A_O_A_VALUE = 150;
    /**
     * <code>CURRENCY_CODE_P_L_N = 151;</code>
     */
    public static final int CURRENCY_CODE_P_L_N_VALUE = 151;
    /**
     * <code>CURRENCY_CODE_G_B_P = 152;</code>
     */
    public static final int CURRENCY_CODE_G_B_P_VALUE = 152;
    /**
     * <code>CURRENCY_CODE_S_B_D = 153;</code>
     */
    public static final int CURRENCY_CODE_S_B_D_VALUE = 153;
    /**
     * <code>CURRENCY_CODE_H_U_F = 154;</code>
     */
    public static final int CURRENCY_CODE_H_U_F_VALUE = 154;
    /**
     * <code>CURRENCY_CODE_B_Y_R = 155;</code>
     */
    public static final int CURRENCY_CODE_B_Y_R_VALUE = 155;
    /**
     * <code>CURRENCY_CODE_B_I_F = 156;</code>
     */
    public static final int CURRENCY_CODE_B_I_F_VALUE = 156;
    /**
     * <code>CURRENCY_CODE_M_W_K = 157;</code>
     */
    public static final int CURRENCY_CODE_M_W_K_VALUE = 157;
    /**
     * <code>CURRENCY_CODE_M_G_A = 158;</code>
     */
    public static final int CURRENCY_CODE_M_G_A_VALUE = 158;
    /**
     * <code>CURRENCY_CODE_B_Z_D = 159;</code>
     */
    public static final int CURRENCY_CODE_B_Z_D_VALUE = 159;
    /**
     * <code>CURRENCY_CODE_B_A_M = 160;</code>
     */
    public static final int CURRENCY_CODE_B_A_M_VALUE = 160;
    /**
     * <code>CURRENCY_CODE_E_G_P = 161;</code>
     */
    public static final int CURRENCY_CODE_E_G_P_VALUE = 161;
    /**
     * <code>CURRENCY_CODE_M_O_P = 162;</code>
     */
    public static final int CURRENCY_CODE_M_O_P_VALUE = 162;
    /**
     * <code>CURRENCY_CODE_N_A_D = 163;</code>
     */
    public static final int CURRENCY_CODE_N_A_D_VALUE = 163;
    /**
     * <code>CURRENCY_CODE_S_S_P = 164;</code>
     */
    public static final int CURRENCY_CODE_S_S_P_VALUE = 164;
    /**
     * <code>CURRENCY_CODE_S_K_K = 165;</code>
     */
    public static final int CURRENCY_CODE_S_K_K_VALUE = 165;
    /**
     * <code>CURRENCY_CODE_N_I_O = 166;</code>
     */
    public static final int CURRENCY_CODE_N_I_O_VALUE = 166;
    /**
     * <code>CURRENCY_CODE_P_E_N = 167;</code>
     */
    public static final int CURRENCY_CODE_P_E_N_VALUE = 167;
    /**
     * <code>CURRENCY_CODE_N_Z_D = 168;</code>
     */
    public static final int CURRENCY_CODE_N_Z_D_VALUE = 168;
    /**
     * <code>CURRENCY_CODE_W_S_T = 169;</code>
     */
    public static final int CURRENCY_CODE_W_S_T_VALUE = 169;
    /**
     * <code>CURRENCY_CODE_T_M_T = 170;</code>
     */
    public static final int CURRENCY_CODE_T_M_T_VALUE = 170;
    /**
     * <code>CURRENCY_CODE_C_L_F = 171;</code>
     */
    public static final int CURRENCY_CODE_C_L_F_VALUE = 171;
    /**
     * <code>CURRENCY_CODE_B_R_L = 172;</code>
     */
    public static final int CURRENCY_CODE_B_R_L_VALUE = 172;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CurrencyCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CurrencyCode forNumber(int value) {
      switch (value) {
        case 0: return CURRENCY_CODE_F_J_D;
        case 1: return CURRENCY_CODE_M_X_N;
        case 2: return CURRENCY_CODE_S_T_D;
        case 3: return CURRENCY_CODE_S_C_R;
        case 4: return CURRENCY_CODE_L_V_L;
        case 5: return CURRENCY_CODE_C_D_F;
        case 6: return CURRENCY_CODE_B_B_D;
        case 7: return CURRENCY_CODE_G_T_Q;
        case 8: return CURRENCY_CODE_C_L_P;
        case 9: return CURRENCY_CODE_H_N_L;
        case 10: return CURRENCY_CODE_U_G_X;
        case 11: return CURRENCY_CODE_M_X_V;
        case 12: return CURRENCY_CODE_Z_A_R;
        case 13: return CURRENCY_CODE_T_N_D;
        case 14: return CURRENCY_CODE_S_T_N;
        case 15: return CURRENCY_CODE_C_U_C;
        case 16: return CURRENCY_CODE_B_S_D;
        case 17: return CURRENCY_CODE_S_L_L;
        case 18: return CURRENCY_CODE_S_D_G;
        case 19: return CURRENCY_CODE_I_Q_D;
        case 20: return CURRENCY_CODE_C_U_P;
        case 21: return CURRENCY_CODE_G_M_D;
        case 22: return CURRENCY_CODE_T_W_D;
        case 23: return CURRENCY_CODE_R_S_D;
        case 24: return CURRENCY_CODE_D_O_P;
        case 25: return CURRENCY_CODE_U_Y_I;
        case 26: return CURRENCY_CODE_K_M_F;
        case 27: return CURRENCY_CODE_M_Y_R;
        case 28: return CURRENCY_CODE_F_K_P;
        case 29: return CURRENCY_CODE_X_O_F;
        case 30: return CURRENCY_CODE_G_E_L;
        case 31: return CURRENCY_CODE_U_Y_U;
        case 32: return CURRENCY_CODE_M_A_D;
        case 33: return CURRENCY_CODE_C_V_E;
        case 34: return CURRENCY_CODE_T_O_P;
        case 35: return CURRENCY_CODE_A_Z_N;
        case 36: return CURRENCY_CODE_O_M_R;
        case 37: return CURRENCY_CODE_P_G_K;
        case 38: return CURRENCY_CODE_K_E_S;
        case 39: return CURRENCY_CODE_S_E_K;
        case 40: return CURRENCY_CODE_B_T_N;
        case 41: return CURRENCY_CODE_U_A_H;
        case 42: return CURRENCY_CODE_G_N_F;
        case 43: return CURRENCY_CODE_E_R_N;
        case 44: return CURRENCY_CODE_M_Z_N;
        case 45: return CURRENCY_CODE_S_V_C;
        case 46: return CURRENCY_CODE_A_R_S;
        case 47: return CURRENCY_CODE_Q_A_R;
        case 48: return CURRENCY_CODE_I_R_R;
        case 49: return CURRENCY_CODE_M_R_O;
        case 50: return CURRENCY_CODE_C_N_Y;
        case 51: return CURRENCY_CODE_T_H_B;
        case 52: return CURRENCY_CODE_U_Z_S;
        case 53: return CURRENCY_CODE_X_P_F;
        case 54: return CURRENCY_CODE_M_R_U;
        case 55: return CURRENCY_CODE_B_D_T;
        case 56: return CURRENCY_CODE_L_Y_D;
        case 57: return CURRENCY_CODE_B_M_D;
        case 58: return CURRENCY_CODE_K_W_D;
        case 59: return CURRENCY_CODE_P_H_P;
        case 60: return CURRENCY_CODE_R_U_B;
        case 61: return CURRENCY_CODE_P_Y_G;
        case 62: return CURRENCY_CODE_I_S_K;
        case 63: return CURRENCY_CODE_J_M_D;
        case 64: return CURRENCY_CODE_C_O_P;
        case 65: return CURRENCY_CODE_M_K_D;
        case 66: return CURRENCY_CODE_U_S_D;
        case 67: return CURRENCY_CODE_C_O_U;
        case 68: return CURRENCY_CODE_D_Z_D;
        case 69: return CURRENCY_CODE_P_A_B;
        case 70: return CURRENCY_CODE_S_G_D;
        case 71: return CURRENCY_CODE_E_T_B;
        case 72: return CURRENCY_CODE_K_G_S;
        case 73: return CURRENCY_CODE_S_O_S;
        case 74: return CURRENCY_CODE_V_U_V;
        case 75: return CURRENCY_CODE_V_E_F;
        case 76: return CURRENCY_CODE_L_A_K;
        case 77: return CURRENCY_CODE_B_N_D;
        case 78: return CURRENCY_CODE_X_A_F;
        case 79: return CURRENCY_CODE_L_R_D;
        case 80: return CURRENCY_CODE_C_H_F;
        case 81: return CURRENCY_CODE_H_R_K;
        case 82: return CURRENCY_CODE_A_L_L;
        case 83: return CURRENCY_CODE_D_J_F;
        case 84: return CURRENCY_CODE_M_T_L;
        case 85: return CURRENCY_CODE_V_E_S;
        case 86: return CURRENCY_CODE_Z_M_W;
        case 87: return CURRENCY_CODE_T_Z_S;
        case 88: return CURRENCY_CODE_V_N_D;
        case 89: return CURRENCY_CODE_A_U_D;
        case 90: return CURRENCY_CODE_I_L_S;
        case 91: return CURRENCY_CODE_G_H_S;
        case 92: return CURRENCY_CODE_G_Y_D;
        case 93: return CURRENCY_CODE_K_P_W;
        case 94: return CURRENCY_CODE_B_O_B;
        case 95: return CURRENCY_CODE_K_H_R;
        case 96: return CURRENCY_CODE_M_D_L;
        case 97: return CURRENCY_CODE_I_D_R;
        case 98: return CURRENCY_CODE_K_Y_D;
        case 99: return CURRENCY_CODE_A_M_D;
        case 100: return CURRENCY_CODE_B_W_P;
        case 101: return CURRENCY_CODE_S_H_P;
        case 102: return CURRENCY_CODE_T_R_Y;
        case 103: return CURRENCY_CODE_L_B_P;
        case 104: return CURRENCY_CODE_C_Y_P;
        case 105: return CURRENCY_CODE_T_J_S;
        case 106: return CURRENCY_CODE_J_O_D;
        case 107: return CURRENCY_CODE_A_E_D;
        case 108: return CURRENCY_CODE_H_K_D;
        case 109: return CURRENCY_CODE_R_W_F;
        case 110: return CURRENCY_CODE_E_U_R;
        case 111: return CURRENCY_CODE_L_S_L;
        case 112: return CURRENCY_CODE_D_K_K;
        case 113: return CURRENCY_CODE_C_A_D;
        case 114: return CURRENCY_CODE_B_G_N;
        case 115: return CURRENCY_CODE_B_O_V;
        case 116: return CURRENCY_CODE_M_M_K;
        case 117: return CURRENCY_CODE_E_E_K;
        case 118: return CURRENCY_CODE_M_U_R;
        case 119: return CURRENCY_CODE_N_O_K;
        case 120: return CURRENCY_CODE_S_Y_P;
        case 121: return CURRENCY_CODE_Z_W_L;
        case 122: return CURRENCY_CODE_R_O_L;
        case 123: return CURRENCY_CODE_G_I_P;
        case 124: return CURRENCY_CODE_R_O_N;
        case 125: return CURRENCY_CODE_L_K_R;
        case 126: return CURRENCY_CODE_N_G_N;
        case 127: return CURRENCY_CODE_C_R_C;
        case 128: return CURRENCY_CODE_C_Z_K;
        case 129: return CURRENCY_CODE_P_K_R;
        case 130: return CURRENCY_CODE_X_C_D;
        case 131: return CURRENCY_CODE_A_N_G;
        case 132: return CURRENCY_CODE_H_T_G;
        case 133: return CURRENCY_CODE_B_H_D;
        case 134: return CURRENCY_CODE_S_I_T;
        case 135: return CURRENCY_CODE_K_Z_T;
        case 136: return CURRENCY_CODE_S_R_D;
        case 137: return CURRENCY_CODE_S_Z_L;
        case 138: return CURRENCY_CODE_S_A_R;
        case 139: return CURRENCY_CODE_T_T_D;
        case 140: return CURRENCY_CODE_L_T_L;
        case 141: return CURRENCY_CODE_Y_E_R;
        case 142: return CURRENCY_CODE_M_V_R;
        case 143: return CURRENCY_CODE_A_F_N;
        case 144: return CURRENCY_CODE_I_N_R;
        case 145: return CURRENCY_CODE_A_W_G;
        case 146: return CURRENCY_CODE_K_R_W;
        case 147: return CURRENCY_CODE_N_P_R;
        case 148: return CURRENCY_CODE_J_P_Y;
        case 149: return CURRENCY_CODE_M_N_T;
        case 150: return CURRENCY_CODE_A_O_A;
        case 151: return CURRENCY_CODE_P_L_N;
        case 152: return CURRENCY_CODE_G_B_P;
        case 153: return CURRENCY_CODE_S_B_D;
        case 154: return CURRENCY_CODE_H_U_F;
        case 155: return CURRENCY_CODE_B_Y_R;
        case 156: return CURRENCY_CODE_B_I_F;
        case 157: return CURRENCY_CODE_M_W_K;
        case 158: return CURRENCY_CODE_M_G_A;
        case 159: return CURRENCY_CODE_B_Z_D;
        case 160: return CURRENCY_CODE_B_A_M;
        case 161: return CURRENCY_CODE_E_G_P;
        case 162: return CURRENCY_CODE_M_O_P;
        case 163: return CURRENCY_CODE_N_A_D;
        case 164: return CURRENCY_CODE_S_S_P;
        case 165: return CURRENCY_CODE_S_K_K;
        case 166: return CURRENCY_CODE_N_I_O;
        case 167: return CURRENCY_CODE_P_E_N;
        case 168: return CURRENCY_CODE_N_Z_D;
        case 169: return CURRENCY_CODE_W_S_T;
        case 170: return CURRENCY_CODE_T_M_T;
        case 171: return CURRENCY_CODE_C_L_F;
        case 172: return CURRENCY_CODE_B_R_L;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CurrencyCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CurrencyCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CurrencyCode>() {
            public CurrencyCode findValueByNumber(int number) {
              return CurrencyCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(37);
    }

    private static final CurrencyCode[] VALUES = values();

    public static CurrencyCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CurrencyCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CurrencyCode)
  }

  /**
   * Protobuf enum {@code avs.CurrentTerritoryCode}
   */
  public enum CurrentTerritoryCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CURRENT_TERRITORY_CODE_A_D = 0;</code>
     */
    CURRENT_TERRITORY_CODE_A_D(0),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_E = 1;</code>
     */
    CURRENT_TERRITORY_CODE_A_E(1),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_F = 2;</code>
     */
    CURRENT_TERRITORY_CODE_A_F(2),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_G = 3;</code>
     */
    CURRENT_TERRITORY_CODE_A_G(3),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_I = 4;</code>
     */
    CURRENT_TERRITORY_CODE_A_I(4),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_L = 5;</code>
     */
    CURRENT_TERRITORY_CODE_A_L(5),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_M = 6;</code>
     */
    CURRENT_TERRITORY_CODE_A_M(6),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_N = 7;</code>
     */
    CURRENT_TERRITORY_CODE_A_N(7),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_O = 8;</code>
     */
    CURRENT_TERRITORY_CODE_A_O(8),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_Q = 9;</code>
     */
    CURRENT_TERRITORY_CODE_A_Q(9),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_R = 10;</code>
     */
    CURRENT_TERRITORY_CODE_A_R(10),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_S = 11;</code>
     */
    CURRENT_TERRITORY_CODE_A_S(11),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_T = 12;</code>
     */
    CURRENT_TERRITORY_CODE_A_T(12),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_U = 13;</code>
     */
    CURRENT_TERRITORY_CODE_A_U(13),
    /**
     * <code>CURRENT_TERRITORY_CODE_4 = 14;</code>
     */
    CURRENT_TERRITORY_CODE_4(14),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_W = 15;</code>
     */
    CURRENT_TERRITORY_CODE_A_W(15),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_X = 16;</code>
     */
    CURRENT_TERRITORY_CODE_A_X(16),
    /**
     * <code>CURRENT_TERRITORY_CODE_8 = 17;</code>
     */
    CURRENT_TERRITORY_CODE_8(17),
    /**
     * <code>CURRENT_TERRITORY_CODE_800 = 18;</code>
     */
    CURRENT_TERRITORY_CODE_800(18),
    /**
     * <code>CURRENT_TERRITORY_CODE_A_Z = 19;</code>
     */
    CURRENT_TERRITORY_CODE_A_Z(19),
    /**
     * <code>CURRENT_TERRITORY_CODE_804 = 20;</code>
     */
    CURRENT_TERRITORY_CODE_804(20),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_A = 21;</code>
     */
    CURRENT_TERRITORY_CODE_B_A(21),
    /**
     * <code>CURRENT_TERRITORY_CODE_807 = 22;</code>
     */
    CURRENT_TERRITORY_CODE_807(22),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_B = 23;</code>
     */
    CURRENT_TERRITORY_CODE_B_B(23),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_D = 24;</code>
     */
    CURRENT_TERRITORY_CODE_B_D(24),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_E = 25;</code>
     */
    CURRENT_TERRITORY_CODE_B_E(25),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_F = 26;</code>
     */
    CURRENT_TERRITORY_CODE_B_F(26),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_G = 27;</code>
     */
    CURRENT_TERRITORY_CODE_B_G(27),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_H = 28;</code>
     */
    CURRENT_TERRITORY_CODE_B_H(28),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_I = 29;</code>
     */
    CURRENT_TERRITORY_CODE_B_I(29),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_J = 30;</code>
     */
    CURRENT_TERRITORY_CODE_B_J(30),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_L = 31;</code>
     */
    CURRENT_TERRITORY_CODE_B_L(31),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_M = 32;</code>
     */
    CURRENT_TERRITORY_CODE_B_M(32),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_N = 33;</code>
     */
    CURRENT_TERRITORY_CODE_B_N(33),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_O = 34;</code>
     */
    CURRENT_TERRITORY_CODE_B_O(34),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_Q = 35;</code>
     */
    CURRENT_TERRITORY_CODE_B_Q(35),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_R = 36;</code>
     */
    CURRENT_TERRITORY_CODE_B_R(36),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_S = 37;</code>
     */
    CURRENT_TERRITORY_CODE_B_S(37),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_T = 38;</code>
     */
    CURRENT_TERRITORY_CODE_B_T(38),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_V = 39;</code>
     */
    CURRENT_TERRITORY_CODE_B_V(39),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_W = 40;</code>
     */
    CURRENT_TERRITORY_CODE_B_W(40),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_Y = 41;</code>
     */
    CURRENT_TERRITORY_CODE_B_Y(41),
    /**
     * <code>CURRENT_TERRITORY_CODE_810 = 42;</code>
     */
    CURRENT_TERRITORY_CODE_810(42),
    /**
     * <code>CURRENT_TERRITORY_CODE_B_Z = 43;</code>
     */
    CURRENT_TERRITORY_CODE_B_Z(43),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_A = 44;</code>
     */
    CURRENT_TERRITORY_CODE_C_A(44),
    /**
     * <code>CURRENT_TERRITORY_CODE_818 = 45;</code>
     */
    CURRENT_TERRITORY_CODE_818(45),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_C = 46;</code>
     */
    CURRENT_TERRITORY_CODE_C_C(46),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_D = 47;</code>
     */
    CURRENT_TERRITORY_CODE_C_D(47),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_F = 48;</code>
     */
    CURRENT_TERRITORY_CODE_C_F(48),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_G = 49;</code>
     */
    CURRENT_TERRITORY_CODE_C_G(49),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_H = 50;</code>
     */
    CURRENT_TERRITORY_CODE_C_H(50),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_I = 51;</code>
     */
    CURRENT_TERRITORY_CODE_C_I(51),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_K = 52;</code>
     */
    CURRENT_TERRITORY_CODE_C_K(52),
    /**
     * <code>CURRENT_TERRITORY_CODE_2100 = 53;</code>
     */
    CURRENT_TERRITORY_CODE_2100(53),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_L = 54;</code>
     */
    CURRENT_TERRITORY_CODE_C_L(54),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_M = 55;</code>
     */
    CURRENT_TERRITORY_CODE_C_M(55),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_N = 56;</code>
     */
    CURRENT_TERRITORY_CODE_C_N(56),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_O = 57;</code>
     */
    CURRENT_TERRITORY_CODE_C_O(57),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_R = 58;</code>
     */
    CURRENT_TERRITORY_CODE_C_R(58),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_S = 59;</code>
     */
    CURRENT_TERRITORY_CODE_C_S(59),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_U = 60;</code>
     */
    CURRENT_TERRITORY_CODE_C_U(60),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_V = 61;</code>
     */
    CURRENT_TERRITORY_CODE_C_V(61),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_W = 62;</code>
     */
    CURRENT_TERRITORY_CODE_C_W(62),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_X = 63;</code>
     */
    CURRENT_TERRITORY_CODE_C_X(63),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_Y = 64;</code>
     */
    CURRENT_TERRITORY_CODE_C_Y(64),
    /**
     * <code>CURRENT_TERRITORY_CODE_C_Z = 65;</code>
     */
    CURRENT_TERRITORY_CODE_C_Z(65),
    /**
     * <code>CURRENT_TERRITORY_CODE_702 = 66;</code>
     */
    CURRENT_TERRITORY_CODE_702(66),
    /**
     * <code>CURRENT_TERRITORY_CODE_703 = 67;</code>
     */
    CURRENT_TERRITORY_CODE_703(67),
    /**
     * <code>CURRENT_TERRITORY_CODE_704 = 68;</code>
     */
    CURRENT_TERRITORY_CODE_704(68),
    /**
     * <code>CURRENT_TERRITORY_CODE_705 = 69;</code>
     */
    CURRENT_TERRITORY_CODE_705(69),
    /**
     * <code>CURRENT_TERRITORY_CODE_826 = 70;</code>
     */
    CURRENT_TERRITORY_CODE_826(70),
    /**
     * <code>CURRENT_TERRITORY_CODE_706 = 71;</code>
     */
    CURRENT_TERRITORY_CODE_706(71),
    /**
     * <code>CURRENT_TERRITORY_CODE_D_E = 72;</code>
     */
    CURRENT_TERRITORY_CODE_D_E(72),
    /**
     * <code>CURRENT_TERRITORY_CODE_D_J = 73;</code>
     */
    CURRENT_TERRITORY_CODE_D_J(73),
    /**
     * <code>CURRENT_TERRITORY_CODE_D_K = 74;</code>
     */
    CURRENT_TERRITORY_CODE_D_K(74),
    /**
     * <code>CURRENT_TERRITORY_CODE_2111 = 75;</code>
     */
    CURRENT_TERRITORY_CODE_2111(75),
    /**
     * <code>CURRENT_TERRITORY_CODE_D_M = 76;</code>
     */
    CURRENT_TERRITORY_CODE_D_M(76),
    /**
     * <code>CURRENT_TERRITORY_CODE_2110 = 77;</code>
     */
    CURRENT_TERRITORY_CODE_2110(77),
    /**
     * <code>CURRENT_TERRITORY_CODE_D_O = 78;</code>
     */
    CURRENT_TERRITORY_CODE_D_O(78),
    /**
     * <code>CURRENT_TERRITORY_CODE_2108 = 79;</code>
     */
    CURRENT_TERRITORY_CODE_2108(79),
    /**
     * <code>CURRENT_TERRITORY_CODE_2107 = 80;</code>
     */
    CURRENT_TERRITORY_CODE_2107(80),
    /**
     * <code>CURRENT_TERRITORY_CODE_2106 = 81;</code>
     */
    CURRENT_TERRITORY_CODE_2106(81),
    /**
     * <code>CURRENT_TERRITORY_CODE_2105 = 82;</code>
     */
    CURRENT_TERRITORY_CODE_2105(82),
    /**
     * <code>CURRENT_TERRITORY_CODE_2104 = 83;</code>
     */
    CURRENT_TERRITORY_CODE_2104(83),
    /**
     * <code>CURRENT_TERRITORY_CODE_2103 = 84;</code>
     */
    CURRENT_TERRITORY_CODE_2103(84),
    /**
     * <code>CURRENT_TERRITORY_CODE_D_Z = 85;</code>
     */
    CURRENT_TERRITORY_CODE_D_Z(85),
    /**
     * <code>CURRENT_TERRITORY_CODE_710 = 86;</code>
     */
    CURRENT_TERRITORY_CODE_710(86),
    /**
     * <code>CURRENT_TERRITORY_CODE_2102 = 87;</code>
     */
    CURRENT_TERRITORY_CODE_2102(87),
    /**
     * <code>CURRENT_TERRITORY_CODE_2101 = 88;</code>
     */
    CURRENT_TERRITORY_CODE_2101(88),
    /**
     * <code>CURRENT_TERRITORY_CODE_834 = 89;</code>
     */
    CURRENT_TERRITORY_CODE_834(89),
    /**
     * <code>CURRENT_TERRITORY_CODE_716 = 90;</code>
     */
    CURRENT_TERRITORY_CODE_716(90),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_C = 91;</code>
     */
    CURRENT_TERRITORY_CODE_E_C(91),
    /**
     * <code>CURRENT_TERRITORY_CODE_2109 = 92;</code>
     */
    CURRENT_TERRITORY_CODE_2109(92),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_E = 93;</code>
     */
    CURRENT_TERRITORY_CODE_E_E(93),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_G = 94;</code>
     */
    CURRENT_TERRITORY_CODE_E_G(94),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_H = 95;</code>
     */
    CURRENT_TERRITORY_CODE_E_H(95),
    /**
     * <code>CURRENT_TERRITORY_CODE_2122 = 96;</code>
     */
    CURRENT_TERRITORY_CODE_2122(96),
    /**
     * <code>CURRENT_TERRITORY_CODE_2121 = 97;</code>
     */
    CURRENT_TERRITORY_CODE_2121(97),
    /**
     * <code>CURRENT_TERRITORY_CODE_2120 = 98;</code>
     */
    CURRENT_TERRITORY_CODE_2120(98),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_R = 99;</code>
     */
    CURRENT_TERRITORY_CODE_E_R(99),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_S = 100;</code>
     */
    CURRENT_TERRITORY_CODE_E_S(100),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_T = 101;</code>
     */
    CURRENT_TERRITORY_CODE_E_T(101),
    /**
     * <code>CURRENT_TERRITORY_CODE_2119 = 102;</code>
     */
    CURRENT_TERRITORY_CODE_2119(102),
    /**
     * <code>CURRENT_TERRITORY_CODE_2118 = 103;</code>
     */
    CURRENT_TERRITORY_CODE_2118(103),
    /**
     * <code>CURRENT_TERRITORY_CODE_2117 = 104;</code>
     */
    CURRENT_TERRITORY_CODE_2117(104),
    /**
     * <code>CURRENT_TERRITORY_CODE_2116 = 105;</code>
     */
    CURRENT_TERRITORY_CODE_2116(105),
    /**
     * <code>CURRENT_TERRITORY_CODE_840 = 106;</code>
     */
    CURRENT_TERRITORY_CODE_840(106),
    /**
     * <code>CURRENT_TERRITORY_CODE_2115 = 107;</code>
     */
    CURRENT_TERRITORY_CODE_2115(107),
    /**
     * <code>CURRENT_TERRITORY_CODE_720 = 108;</code>
     */
    CURRENT_TERRITORY_CODE_720(108),
    /**
     * <code>CURRENT_TERRITORY_CODE_2114 = 109;</code>
     */
    CURRENT_TERRITORY_CODE_2114(109),
    /**
     * <code>CURRENT_TERRITORY_CODE_600 = 110;</code>
     */
    CURRENT_TERRITORY_CODE_600(110),
    /**
     * <code>CURRENT_TERRITORY_CODE_2113 = 111;</code>
     */
    CURRENT_TERRITORY_CODE_2113(111),
    /**
     * <code>CURRENT_TERRITORY_CODE_2112 = 112;</code>
     */
    CURRENT_TERRITORY_CODE_2112(112),
    /**
     * <code>CURRENT_TERRITORY_CODE_724 = 113;</code>
     */
    CURRENT_TERRITORY_CODE_724(113),
    /**
     * <code>CURRENT_TERRITORY_CODE_604 = 114;</code>
     */
    CURRENT_TERRITORY_CODE_604(114),
    /**
     * <code>CURRENT_TERRITORY_CODE_728 = 115;</code>
     */
    CURRENT_TERRITORY_CODE_728(115),
    /**
     * <code>CURRENT_TERRITORY_CODE_608 = 116;</code>
     */
    CURRENT_TERRITORY_CODE_608(116),
    /**
     * <code>CURRENT_TERRITORY_CODE_729 = 117;</code>
     */
    CURRENT_TERRITORY_CODE_729(117),
    /**
     * <code>CURRENT_TERRITORY_CODE_F_I = 118;</code>
     */
    CURRENT_TERRITORY_CODE_F_I(118),
    /**
     * <code>CURRENT_TERRITORY_CODE_F_J = 119;</code>
     */
    CURRENT_TERRITORY_CODE_F_J(119),
    /**
     * <code>CURRENT_TERRITORY_CODE_F_K = 120;</code>
     */
    CURRENT_TERRITORY_CODE_F_K(120),
    /**
     * <code>CURRENT_TERRITORY_CODE_F_M = 121;</code>
     */
    CURRENT_TERRITORY_CODE_F_M(121),
    /**
     * <code>CURRENT_TERRITORY_CODE_2133 = 122;</code>
     */
    CURRENT_TERRITORY_CODE_2133(122),
    /**
     * <code>CURRENT_TERRITORY_CODE_F_O = 123;</code>
     */
    CURRENT_TERRITORY_CODE_F_O(123),
    /**
     * <code>CURRENT_TERRITORY_CODE_2132 = 124;</code>
     */
    CURRENT_TERRITORY_CODE_2132(124),
    /**
     * <code>CURRENT_TERRITORY_CODE_2131 = 125;</code>
     */
    CURRENT_TERRITORY_CODE_2131(125),
    /**
     * <code>CURRENT_TERRITORY_CODE_2130 = 126;</code>
     */
    CURRENT_TERRITORY_CODE_2130(126),
    /**
     * <code>CURRENT_TERRITORY_CODE_F_R = 127;</code>
     */
    CURRENT_TERRITORY_CODE_F_R(127),
    /**
     * <code>CURRENT_TERRITORY_CODE_2129 = 128;</code>
     */
    CURRENT_TERRITORY_CODE_2129(128),
    /**
     * <code>CURRENT_TERRITORY_CODE_2128 = 129;</code>
     */
    CURRENT_TERRITORY_CODE_2128(129),
    /**
     * <code>CURRENT_TERRITORY_CODE_2127 = 130;</code>
     */
    CURRENT_TERRITORY_CODE_2127(130),
    /**
     * <code>CURRENT_TERRITORY_CODE_2126 = 131;</code>
     */
    CURRENT_TERRITORY_CODE_2126(131),
    /**
     * <code>CURRENT_TERRITORY_CODE_2125 = 132;</code>
     */
    CURRENT_TERRITORY_CODE_2125(132),
    /**
     * <code>CURRENT_TERRITORY_CODE_732 = 133;</code>
     */
    CURRENT_TERRITORY_CODE_732(133),
    /**
     * <code>CURRENT_TERRITORY_CODE_2124 = 134;</code>
     */
    CURRENT_TERRITORY_CODE_2124(134),
    /**
     * <code>CURRENT_TERRITORY_CODE_854 = 135;</code>
     */
    CURRENT_TERRITORY_CODE_854(135),
    /**
     * <code>CURRENT_TERRITORY_CODE_2123 = 136;</code>
     */
    CURRENT_TERRITORY_CODE_2123(136),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_A = 137;</code>
     */
    CURRENT_TERRITORY_CODE_G_A(137),
    /**
     * <code>CURRENT_TERRITORY_CODE_736 = 138;</code>
     */
    CURRENT_TERRITORY_CODE_736(138),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_B = 139;</code>
     */
    CURRENT_TERRITORY_CODE_G_B(139),
    /**
     * <code>CURRENT_TERRITORY_CODE_616 = 140;</code>
     */
    CURRENT_TERRITORY_CODE_616(140),
    /**
     * <code>CURRENT_TERRITORY_CODE_858 = 141;</code>
     */
    CURRENT_TERRITORY_CODE_858(141),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_D = 142;</code>
     */
    CURRENT_TERRITORY_CODE_G_D(142),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_E = 143;</code>
     */
    CURRENT_TERRITORY_CODE_G_E(143),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_F = 144;</code>
     */
    CURRENT_TERRITORY_CODE_G_F(144),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_G = 145;</code>
     */
    CURRENT_TERRITORY_CODE_G_G(145),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_H = 146;</code>
     */
    CURRENT_TERRITORY_CODE_G_H(146),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_I = 147;</code>
     */
    CURRENT_TERRITORY_CODE_G_I(147),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_L = 148;</code>
     */
    CURRENT_TERRITORY_CODE_G_L(148),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_M = 149;</code>
     */
    CURRENT_TERRITORY_CODE_G_M(149),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_N = 150;</code>
     */
    CURRENT_TERRITORY_CODE_G_N(150),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_P = 151;</code>
     */
    CURRENT_TERRITORY_CODE_G_P(151),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_Q = 152;</code>
     */
    CURRENT_TERRITORY_CODE_G_Q(152),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_R = 153;</code>
     */
    CURRENT_TERRITORY_CODE_G_R(153),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_S__MINUS___M_L = 154;</code>
     */
    CURRENT_TERRITORY_CODE_E_S__MINUS___M_L(154),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_S = 155;</code>
     */
    CURRENT_TERRITORY_CODE_G_S(155),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_T = 156;</code>
     */
    CURRENT_TERRITORY_CODE_G_T(156),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_U = 157;</code>
     */
    CURRENT_TERRITORY_CODE_G_U(157),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_W = 158;</code>
     */
    CURRENT_TERRITORY_CODE_G_W(158),
    /**
     * <code>CURRENT_TERRITORY_CODE_G_Y = 159;</code>
     */
    CURRENT_TERRITORY_CODE_G_Y(159),
    /**
     * <code>CURRENT_TERRITORY_CODE_860 = 160;</code>
     */
    CURRENT_TERRITORY_CODE_860(160),
    /**
     * <code>CURRENT_TERRITORY_CODE_740 = 161;</code>
     */
    CURRENT_TERRITORY_CODE_740(161),
    /**
     * <code>CURRENT_TERRITORY_CODE_620 = 162;</code>
     */
    CURRENT_TERRITORY_CODE_620(162),
    /**
     * <code>CURRENT_TERRITORY_CODE_862 = 163;</code>
     */
    CURRENT_TERRITORY_CODE_862(163),
    /**
     * <code>CURRENT_TERRITORY_CODE_2136 = 164;</code>
     */
    CURRENT_TERRITORY_CODE_2136(164),
    /**
     * <code>CURRENT_TERRITORY_CODE_2134 = 165;</code>
     */
    CURRENT_TERRITORY_CODE_2134(165),
    /**
     * <code>CURRENT_TERRITORY_CODE_624 = 166;</code>
     */
    CURRENT_TERRITORY_CODE_624(166),
    /**
     * <code>CURRENT_TERRITORY_CODE_504 = 167;</code>
     */
    CURRENT_TERRITORY_CODE_504(167),
    /**
     * <code>CURRENT_TERRITORY_CODE_626 = 168;</code>
     */
    CURRENT_TERRITORY_CODE_626(168),
    /**
     * <code>CURRENT_TERRITORY_CODE_748 = 169;</code>
     */
    CURRENT_TERRITORY_CODE_748(169),
    /**
     * <code>CURRENT_TERRITORY_CODE_508 = 170;</code>
     */
    CURRENT_TERRITORY_CODE_508(170),
    /**
     * <code>CURRENT_TERRITORY_CODE_H_K = 171;</code>
     */
    CURRENT_TERRITORY_CODE_H_K(171),
    /**
     * <code>CURRENT_TERRITORY_CODE_H_M = 172;</code>
     */
    CURRENT_TERRITORY_CODE_H_M(172),
    /**
     * <code>CURRENT_TERRITORY_CODE_H_N = 173;</code>
     */
    CURRENT_TERRITORY_CODE_H_N(173),
    /**
     * <code>CURRENT_TERRITORY_CODE_H_R = 174;</code>
     */
    CURRENT_TERRITORY_CODE_H_R(174),
    /**
     * <code>CURRENT_TERRITORY_CODE_H_T = 175;</code>
     */
    CURRENT_TERRITORY_CODE_H_T(175),
    /**
     * <code>CURRENT_TERRITORY_CODE_H_U = 176;</code>
     */
    CURRENT_TERRITORY_CODE_H_U(176),
    /**
     * <code>CURRENT_TERRITORY_CODE_630 = 177;</code>
     */
    CURRENT_TERRITORY_CODE_630(177),
    /**
     * <code>CURRENT_TERRITORY_CODE_752 = 178;</code>
     */
    CURRENT_TERRITORY_CODE_752(178),
    /**
     * <code>CURRENT_TERRITORY_CODE_512 = 179;</code>
     */
    CURRENT_TERRITORY_CODE_512(179),
    /**
     * <code>CURRENT_TERRITORY_CODE_634 = 180;</code>
     */
    CURRENT_TERRITORY_CODE_634(180),
    /**
     * <code>CURRENT_TERRITORY_CODE_756 = 181;</code>
     */
    CURRENT_TERRITORY_CODE_756(181),
    /**
     * <code>CURRENT_TERRITORY_CODE_516 = 182;</code>
     */
    CURRENT_TERRITORY_CODE_516(182),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_D = 183;</code>
     */
    CURRENT_TERRITORY_CODE_I_D(183),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_E = 184;</code>
     */
    CURRENT_TERRITORY_CODE_I_E(184),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_L = 185;</code>
     */
    CURRENT_TERRITORY_CODE_I_L(185),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_M = 186;</code>
     */
    CURRENT_TERRITORY_CODE_I_M(186),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_N = 187;</code>
     */
    CURRENT_TERRITORY_CODE_I_N(187),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_O = 188;</code>
     */
    CURRENT_TERRITORY_CODE_I_O(188),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_Q = 189;</code>
     */
    CURRENT_TERRITORY_CODE_I_Q(189),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_R = 190;</code>
     */
    CURRENT_TERRITORY_CODE_I_R(190),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_S = 191;</code>
     */
    CURRENT_TERRITORY_CODE_I_S(191),
    /**
     * <code>CURRENT_TERRITORY_CODE_I_T = 192;</code>
     */
    CURRENT_TERRITORY_CODE_I_T(192),
    /**
     * <code>CURRENT_TERRITORY_CODE_760 = 193;</code>
     */
    CURRENT_TERRITORY_CODE_760(193),
    /**
     * <code>CURRENT_TERRITORY_CODE_882 = 194;</code>
     */
    CURRENT_TERRITORY_CODE_882(194),
    /**
     * <code>CURRENT_TERRITORY_CODE_520 = 195;</code>
     */
    CURRENT_TERRITORY_CODE_520(195),
    /**
     * <code>CURRENT_TERRITORY_CODE_762 = 196;</code>
     */
    CURRENT_TERRITORY_CODE_762(196),
    /**
     * <code>CURRENT_TERRITORY_CODE_400 = 197;</code>
     */
    CURRENT_TERRITORY_CODE_400(197),
    /**
     * <code>CURRENT_TERRITORY_CODE_642 = 198;</code>
     */
    CURRENT_TERRITORY_CODE_642(198),
    /**
     * <code>CURRENT_TERRITORY_CODE_643 = 199;</code>
     */
    CURRENT_TERRITORY_CODE_643(199),
    /**
     * <code>CURRENT_TERRITORY_CODE_764 = 200;</code>
     */
    CURRENT_TERRITORY_CODE_764(200),
    /**
     * <code>CURRENT_TERRITORY_CODE_886 = 201;</code>
     */
    CURRENT_TERRITORY_CODE_886(201),
    /**
     * <code>CURRENT_TERRITORY_CODE_524 = 202;</code>
     */
    CURRENT_TERRITORY_CODE_524(202),
    /**
     * <code>CURRENT_TERRITORY_CODE_887 = 203;</code>
     */
    CURRENT_TERRITORY_CODE_887(203),
    /**
     * <code>CURRENT_TERRITORY_CODE_404 = 204;</code>
     */
    CURRENT_TERRITORY_CODE_404(204),
    /**
     * <code>CURRENT_TERRITORY_CODE_646 = 205;</code>
     */
    CURRENT_TERRITORY_CODE_646(205),
    /**
     * <code>CURRENT_TERRITORY_CODE_768 = 206;</code>
     */
    CURRENT_TERRITORY_CODE_768(206),
    /**
     * <code>CURRENT_TERRITORY_CODE_J_E = 207;</code>
     */
    CURRENT_TERRITORY_CODE_J_E(207),
    /**
     * <code>CURRENT_TERRITORY_CODE_528 = 208;</code>
     */
    CURRENT_TERRITORY_CODE_528(208),
    /**
     * <code>CURRENT_TERRITORY_CODE_408 = 209;</code>
     */
    CURRENT_TERRITORY_CODE_408(209),
    /**
     * <code>CURRENT_TERRITORY_CODE_J_M = 210;</code>
     */
    CURRENT_TERRITORY_CODE_J_M(210),
    /**
     * <code>CURRENT_TERRITORY_CODE_J_O = 211;</code>
     */
    CURRENT_TERRITORY_CODE_J_O(211),
    /**
     * <code>CURRENT_TERRITORY_CODE_J_P = 212;</code>
     */
    CURRENT_TERRITORY_CODE_J_P(212),
    /**
     * <code>CURRENT_TERRITORY_CODE_890 = 213;</code>
     */
    CURRENT_TERRITORY_CODE_890(213),
    /**
     * <code>CURRENT_TERRITORY_CODE_891 = 214;</code>
     */
    CURRENT_TERRITORY_CODE_891(214),
    /**
     * <code>CURRENT_TERRITORY_CODE_410 = 215;</code>
     */
    CURRENT_TERRITORY_CODE_410(215),
    /**
     * <code>CURRENT_TERRITORY_CODE_894 = 216;</code>
     */
    CURRENT_TERRITORY_CODE_894(216),
    /**
     * <code>CURRENT_TERRITORY_CODE_776 = 217;</code>
     */
    CURRENT_TERRITORY_CODE_776(217),
    /**
     * <code>CURRENT_TERRITORY_CODE_414 = 218;</code>
     */
    CURRENT_TERRITORY_CODE_414(218),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_E = 219;</code>
     */
    CURRENT_TERRITORY_CODE_K_E(219),
    /**
     * <code>CURRENT_TERRITORY_CODE_417 = 220;</code>
     */
    CURRENT_TERRITORY_CODE_417(220),
    /**
     * <code>CURRENT_TERRITORY_CODE_659 = 221;</code>
     */
    CURRENT_TERRITORY_CODE_659(221),
    /**
     * <code>CURRENT_TERRITORY_CODE_418 = 222;</code>
     */
    CURRENT_TERRITORY_CODE_418(222),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_G = 223;</code>
     */
    CURRENT_TERRITORY_CODE_K_G(223),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_H = 224;</code>
     */
    CURRENT_TERRITORY_CODE_K_H(224),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_I = 225;</code>
     */
    CURRENT_TERRITORY_CODE_K_I(225),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_M = 226;</code>
     */
    CURRENT_TERRITORY_CODE_K_M(226),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_N = 227;</code>
     */
    CURRENT_TERRITORY_CODE_K_N(227),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_P = 228;</code>
     */
    CURRENT_TERRITORY_CODE_K_P(228),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_R = 229;</code>
     */
    CURRENT_TERRITORY_CODE_K_R(229),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_W = 230;</code>
     */
    CURRENT_TERRITORY_CODE_K_W(230),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_Y = 231;</code>
     */
    CURRENT_TERRITORY_CODE_K_Y(231),
    /**
     * <code>CURRENT_TERRITORY_CODE_K_Z = 232;</code>
     */
    CURRENT_TERRITORY_CODE_K_Z(232),
    /**
     * <code>CURRENT_TERRITORY_CODE_780 = 233;</code>
     */
    CURRENT_TERRITORY_CODE_780(233),
    /**
     * <code>CURRENT_TERRITORY_CODE_540 = 234;</code>
     */
    CURRENT_TERRITORY_CODE_540(234),
    /**
     * <code>CURRENT_TERRITORY_CODE_662 = 235;</code>
     */
    CURRENT_TERRITORY_CODE_662(235),
    /**
     * <code>CURRENT_TERRITORY_CODE_300 = 236;</code>
     */
    CURRENT_TERRITORY_CODE_300(236),
    /**
     * <code>CURRENT_TERRITORY_CODE_784 = 237;</code>
     */
    CURRENT_TERRITORY_CODE_784(237),
    /**
     * <code>CURRENT_TERRITORY_CODE_422 = 238;</code>
     */
    CURRENT_TERRITORY_CODE_422(238),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_A = 239;</code>
     */
    CURRENT_TERRITORY_CODE_L_A(239),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_B = 240;</code>
     */
    CURRENT_TERRITORY_CODE_L_B(240),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_C = 241;</code>
     */
    CURRENT_TERRITORY_CODE_L_C(241),
    /**
     * <code>CURRENT_TERRITORY_CODE_788 = 242;</code>
     */
    CURRENT_TERRITORY_CODE_788(242),
    /**
     * <code>CURRENT_TERRITORY_CODE_426 = 243;</code>
     */
    CURRENT_TERRITORY_CODE_426(243),
    /**
     * <code>CURRENT_TERRITORY_CODE_548 = 244;</code>
     */
    CURRENT_TERRITORY_CODE_548(244),
    /**
     * <code>CURRENT_TERRITORY_CODE_428 = 245;</code>
     */
    CURRENT_TERRITORY_CODE_428(245),
    /**
     * <code>CURRENT_TERRITORY_CODE_308 = 246;</code>
     */
    CURRENT_TERRITORY_CODE_308(246),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_I = 247;</code>
     */
    CURRENT_TERRITORY_CODE_L_I(247),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_K = 248;</code>
     */
    CURRENT_TERRITORY_CODE_L_K(248),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_R = 249;</code>
     */
    CURRENT_TERRITORY_CODE_L_R(249),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_S = 250;</code>
     */
    CURRENT_TERRITORY_CODE_L_S(250),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_T = 251;</code>
     */
    CURRENT_TERRITORY_CODE_L_T(251),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_U = 252;</code>
     */
    CURRENT_TERRITORY_CODE_L_U(252),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_V = 253;</code>
     */
    CURRENT_TERRITORY_CODE_L_V(253),
    /**
     * <code>CURRENT_TERRITORY_CODE_L_Y = 254;</code>
     */
    CURRENT_TERRITORY_CODE_L_Y(254),
    /**
     * <code>CURRENT_TERRITORY_CODE_670 = 255;</code>
     */
    CURRENT_TERRITORY_CODE_670(255),
    /**
     * <code>CURRENT_TERRITORY_CODE_792 = 256;</code>
     */
    CURRENT_TERRITORY_CODE_792(256),
    /**
     * <code>CURRENT_TERRITORY_CODE_430 = 257;</code>
     */
    CURRENT_TERRITORY_CODE_430(257),
    /**
     * <code>CURRENT_TERRITORY_CODE_674 = 258;</code>
     */
    CURRENT_TERRITORY_CODE_674(258),
    /**
     * <code>CURRENT_TERRITORY_CODE_795 = 259;</code>
     */
    CURRENT_TERRITORY_CODE_795(259),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_A = 260;</code>
     */
    CURRENT_TERRITORY_CODE_M_A(260),
    /**
     * <code>CURRENT_TERRITORY_CODE_554 = 261;</code>
     */
    CURRENT_TERRITORY_CODE_554(261),
    /**
     * <code>CURRENT_TERRITORY_CODE_434 = 262;</code>
     */
    CURRENT_TERRITORY_CODE_434(262),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_C = 263;</code>
     */
    CURRENT_TERRITORY_CODE_M_C(263),
    /**
     * <code>CURRENT_TERRITORY_CODE_798 = 264;</code>
     */
    CURRENT_TERRITORY_CODE_798(264),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_D = 265;</code>
     */
    CURRENT_TERRITORY_CODE_M_D(265),
    /**
     * <code>CURRENT_TERRITORY_CODE_678 = 266;</code>
     */
    CURRENT_TERRITORY_CODE_678(266),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_E = 267;</code>
     */
    CURRENT_TERRITORY_CODE_M_E(267),
    /**
     * <code>CURRENT_TERRITORY_CODE_558 = 268;</code>
     */
    CURRENT_TERRITORY_CODE_558(268),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_F = 269;</code>
     */
    CURRENT_TERRITORY_CODE_M_F(269),
    /**
     * <code>CURRENT_TERRITORY_CODE_438 = 270;</code>
     */
    CURRENT_TERRITORY_CODE_438(270),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_G = 271;</code>
     */
    CURRENT_TERRITORY_CODE_M_G(271),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_H = 272;</code>
     */
    CURRENT_TERRITORY_CODE_M_H(272),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_K = 273;</code>
     */
    CURRENT_TERRITORY_CODE_M_K(273),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_L = 274;</code>
     */
    CURRENT_TERRITORY_CODE_M_L(274),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_M = 275;</code>
     */
    CURRENT_TERRITORY_CODE_M_M(275),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_N = 276;</code>
     */
    CURRENT_TERRITORY_CODE_M_N(276),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_O = 277;</code>
     */
    CURRENT_TERRITORY_CODE_M_O(277),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_P = 278;</code>
     */
    CURRENT_TERRITORY_CODE_M_P(278),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_Q = 279;</code>
     */
    CURRENT_TERRITORY_CODE_M_Q(279),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_R = 280;</code>
     */
    CURRENT_TERRITORY_CODE_M_R(280),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_S = 281;</code>
     */
    CURRENT_TERRITORY_CODE_M_S(281),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_T = 282;</code>
     */
    CURRENT_TERRITORY_CODE_M_T(282),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_U = 283;</code>
     */
    CURRENT_TERRITORY_CODE_M_U(283),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_V = 284;</code>
     */
    CURRENT_TERRITORY_CODE_M_V(284),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_W = 285;</code>
     */
    CURRENT_TERRITORY_CODE_M_W(285),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_X = 286;</code>
     */
    CURRENT_TERRITORY_CODE_M_X(286),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_Y = 287;</code>
     */
    CURRENT_TERRITORY_CODE_M_Y(287),
    /**
     * <code>CURRENT_TERRITORY_CODE_M_Z = 288;</code>
     */
    CURRENT_TERRITORY_CODE_M_Z(288),
    /**
     * <code>CURRENT_TERRITORY_CODE_440 = 289;</code>
     */
    CURRENT_TERRITORY_CODE_440(289),
    /**
     * <code>CURRENT_TERRITORY_CODE_682 = 290;</code>
     */
    CURRENT_TERRITORY_CODE_682(290),
    /**
     * <code>CURRENT_TERRITORY_CODE_320 = 291;</code>
     */
    CURRENT_TERRITORY_CODE_320(291),
    /**
     * <code>CURRENT_TERRITORY_CODE_562 = 292;</code>
     */
    CURRENT_TERRITORY_CODE_562(292),
    /**
     * <code>CURRENT_TERRITORY_CODE_200 = 293;</code>
     */
    CURRENT_TERRITORY_CODE_200(293),
    /**
     * <code>CURRENT_TERRITORY_CODE_442 = 294;</code>
     */
    CURRENT_TERRITORY_CODE_442(294),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_A = 295;</code>
     */
    CURRENT_TERRITORY_CODE_N_A(295),
    /**
     * <code>CURRENT_TERRITORY_CODE_686 = 296;</code>
     */
    CURRENT_TERRITORY_CODE_686(296),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_C = 297;</code>
     */
    CURRENT_TERRITORY_CODE_N_C(297),
    /**
     * <code>CURRENT_TERRITORY_CODE_203 = 298;</code>
     */
    CURRENT_TERRITORY_CODE_203(298),
    /**
     * <code>CURRENT_TERRITORY_CODE_324 = 299;</code>
     */
    CURRENT_TERRITORY_CODE_324(299),
    /**
     * <code>CURRENT_TERRITORY_CODE_566 = 300;</code>
     */
    CURRENT_TERRITORY_CODE_566(300),
    /**
     * <code>CURRENT_TERRITORY_CODE_204 = 301;</code>
     */
    CURRENT_TERRITORY_CODE_204(301),
    /**
     * <code>CURRENT_TERRITORY_CODE_688 = 302;</code>
     */
    CURRENT_TERRITORY_CODE_688(302),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_E = 303;</code>
     */
    CURRENT_TERRITORY_CODE_N_E(303),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_F = 304;</code>
     */
    CURRENT_TERRITORY_CODE_N_F(304),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_G = 305;</code>
     */
    CURRENT_TERRITORY_CODE_N_G(305),
    /**
     * <code>CURRENT_TERRITORY_CODE_328 = 306;</code>
     */
    CURRENT_TERRITORY_CODE_328(306),
    /**
     * <code>CURRENT_TERRITORY_CODE_208 = 307;</code>
     */
    CURRENT_TERRITORY_CODE_208(307),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_I = 308;</code>
     */
    CURRENT_TERRITORY_CODE_N_I(308),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_L = 309;</code>
     */
    CURRENT_TERRITORY_CODE_N_L(309),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_O = 310;</code>
     */
    CURRENT_TERRITORY_CODE_N_O(310),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_P = 311;</code>
     */
    CURRENT_TERRITORY_CODE_N_P(311),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_R = 312;</code>
     */
    CURRENT_TERRITORY_CODE_N_R(312),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_U = 313;</code>
     */
    CURRENT_TERRITORY_CODE_N_U(313),
    /**
     * <code>CURRENT_TERRITORY_CODE_N_Z = 314;</code>
     */
    CURRENT_TERRITORY_CODE_N_Z(314),
    /**
     * <code>CURRENT_TERRITORY_CODE_690 = 315;</code>
     */
    CURRENT_TERRITORY_CODE_690(315),
    /**
     * <code>CURRENT_TERRITORY_CODE_450 = 316;</code>
     */
    CURRENT_TERRITORY_CODE_450(316),
    /**
     * <code>CURRENT_TERRITORY_CODE_694 = 317;</code>
     */
    CURRENT_TERRITORY_CODE_694(317),
    /**
     * <code>CURRENT_TERRITORY_CODE_332 = 318;</code>
     */
    CURRENT_TERRITORY_CODE_332(318),
    /**
     * <code>CURRENT_TERRITORY_CODE_212 = 319;</code>
     */
    CURRENT_TERRITORY_CODE_212(319),
    /**
     * <code>CURRENT_TERRITORY_CODE_454 = 320;</code>
     */
    CURRENT_TERRITORY_CODE_454(320),
    /**
     * <code>CURRENT_TERRITORY_CODE_214 = 321;</code>
     */
    CURRENT_TERRITORY_CODE_214(321),
    /**
     * <code>CURRENT_TERRITORY_CODE_336 = 322;</code>
     */
    CURRENT_TERRITORY_CODE_336(322),
    /**
     * <code>CURRENT_TERRITORY_CODE_578 = 323;</code>
     */
    CURRENT_TERRITORY_CODE_578(323),
    /**
     * <code>CURRENT_TERRITORY_CODE_458 = 324;</code>
     */
    CURRENT_TERRITORY_CODE_458(324),
    /**
     * <code>CURRENT_TERRITORY_CODE_218 = 325;</code>
     */
    CURRENT_TERRITORY_CODE_218(325),
    /**
     * <code>CURRENT_TERRITORY_CODE_O_M = 326;</code>
     */
    CURRENT_TERRITORY_CODE_O_M(326),
    /**
     * <code>CURRENT_TERRITORY_CODE_340 = 327;</code>
     */
    CURRENT_TERRITORY_CODE_340(327),
    /**
     * <code>CURRENT_TERRITORY_CODE_462 = 328;</code>
     */
    CURRENT_TERRITORY_CODE_462(328),
    /**
     * <code>CURRENT_TERRITORY_CODE_583 = 329;</code>
     */
    CURRENT_TERRITORY_CODE_583(329),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_A = 330;</code>
     */
    CURRENT_TERRITORY_CODE_P_A(330),
    /**
     * <code>CURRENT_TERRITORY_CODE_100 = 331;</code>
     */
    CURRENT_TERRITORY_CODE_100(331),
    /**
     * <code>CURRENT_TERRITORY_CODE_584 = 332;</code>
     */
    CURRENT_TERRITORY_CODE_584(332),
    /**
     * <code>CURRENT_TERRITORY_CODE_222 = 333;</code>
     */
    CURRENT_TERRITORY_CODE_222(333),
    /**
     * <code>CURRENT_TERRITORY_CODE_585 = 334;</code>
     */
    CURRENT_TERRITORY_CODE_585(334),
    /**
     * <code>CURRENT_TERRITORY_CODE_344 = 335;</code>
     */
    CURRENT_TERRITORY_CODE_344(335),
    /**
     * <code>CURRENT_TERRITORY_CODE_586 = 336;</code>
     */
    CURRENT_TERRITORY_CODE_586(336),
    /**
     * <code>CURRENT_TERRITORY_CODE_466 = 337;</code>
     */
    CURRENT_TERRITORY_CODE_466(337),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_E = 338;</code>
     */
    CURRENT_TERRITORY_CODE_P_E(338),
    /**
     * <code>CURRENT_TERRITORY_CODE_104 = 339;</code>
     */
    CURRENT_TERRITORY_CODE_104(339),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_F = 340;</code>
     */
    CURRENT_TERRITORY_CODE_P_F(340),
    /**
     * <code>CURRENT_TERRITORY_CODE_226 = 341;</code>
     */
    CURRENT_TERRITORY_CODE_226(341),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_G = 342;</code>
     */
    CURRENT_TERRITORY_CODE_P_G(342),
    /**
     * <code>CURRENT_TERRITORY_CODE_348 = 343;</code>
     */
    CURRENT_TERRITORY_CODE_348(343),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_H = 344;</code>
     */
    CURRENT_TERRITORY_CODE_P_H(344),
    /**
     * <code>CURRENT_TERRITORY_CODE_108 = 345;</code>
     */
    CURRENT_TERRITORY_CODE_108(345),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_K = 346;</code>
     */
    CURRENT_TERRITORY_CODE_P_K(346),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_L = 347;</code>
     */
    CURRENT_TERRITORY_CODE_P_L(347),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_M = 348;</code>
     */
    CURRENT_TERRITORY_CODE_P_M(348),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_N = 349;</code>
     */
    CURRENT_TERRITORY_CODE_P_N(349),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_R = 350;</code>
     */
    CURRENT_TERRITORY_CODE_P_R(350),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_S = 351;</code>
     */
    CURRENT_TERRITORY_CODE_P_S(351),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_T = 352;</code>
     */
    CURRENT_TERRITORY_CODE_P_T(352),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_W = 353;</code>
     */
    CURRENT_TERRITORY_CODE_P_W(353),
    /**
     * <code>CURRENT_TERRITORY_CODE_P_Y = 354;</code>
     */
    CURRENT_TERRITORY_CODE_P_Y(354),
    /**
     * <code>CURRENT_TERRITORY_CODE_470 = 355;</code>
     */
    CURRENT_TERRITORY_CODE_470(355),
    /**
     * <code>CURRENT_TERRITORY_CODE_591 = 356;</code>
     */
    CURRENT_TERRITORY_CODE_591(356),
    /**
     * <code>CURRENT_TERRITORY_CODE_230 = 357;</code>
     */
    CURRENT_TERRITORY_CODE_230(357),
    /**
     * <code>CURRENT_TERRITORY_CODE_Q_A = 358;</code>
     */
    CURRENT_TERRITORY_CODE_Q_A(358),
    /**
     * <code>CURRENT_TERRITORY_CODE_231 = 359;</code>
     */
    CURRENT_TERRITORY_CODE_231(359),
    /**
     * <code>CURRENT_TERRITORY_CODE_352 = 360;</code>
     */
    CURRENT_TERRITORY_CODE_352(360),
    /**
     * <code>CURRENT_TERRITORY_CODE_232 = 361;</code>
     */
    CURRENT_TERRITORY_CODE_232(361),
    /**
     * <code>CURRENT_TERRITORY_CODE_112 = 362;</code>
     */
    CURRENT_TERRITORY_CODE_112(362),
    /**
     * <code>CURRENT_TERRITORY_CODE_233 = 363;</code>
     */
    CURRENT_TERRITORY_CODE_233(363),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_S__MINUS___C_E = 364;</code>
     */
    CURRENT_TERRITORY_CODE_E_S__MINUS___C_E(364),
    /**
     * <code>CURRENT_TERRITORY_CODE_356 = 365;</code>
     */
    CURRENT_TERRITORY_CODE_356(365),
    /**
     * <code>CURRENT_TERRITORY_CODE_598 = 366;</code>
     */
    CURRENT_TERRITORY_CODE_598(366),
    /**
     * <code>CURRENT_TERRITORY_CODE_478 = 367;</code>
     */
    CURRENT_TERRITORY_CODE_478(367),
    /**
     * <code>CURRENT_TERRITORY_CODE_116 = 368;</code>
     */
    CURRENT_TERRITORY_CODE_116(368),
    /**
     * <code>CURRENT_TERRITORY_CODE_E_S__MINUS___C_N = 369;</code>
     */
    CURRENT_TERRITORY_CODE_E_S__MINUS___C_N(369),
    /**
     * <code>CURRENT_TERRITORY_CODE_12 = 370;</code>
     */
    CURRENT_TERRITORY_CODE_12(370),
    /**
     * <code>CURRENT_TERRITORY_CODE_480 = 371;</code>
     */
    CURRENT_TERRITORY_CODE_480(371),
    /**
     * <code>CURRENT_TERRITORY_CODE_360 = 372;</code>
     */
    CURRENT_TERRITORY_CODE_360(372),
    /**
     * <code>CURRENT_TERRITORY_CODE_120 = 373;</code>
     */
    CURRENT_TERRITORY_CODE_120(373),
    /**
     * <code>CURRENT_TERRITORY_CODE_242 = 374;</code>
     */
    CURRENT_TERRITORY_CODE_242(374),
    /**
     * <code>CURRENT_TERRITORY_CODE_484 = 375;</code>
     */
    CURRENT_TERRITORY_CODE_484(375),
    /**
     * <code>CURRENT_TERRITORY_CODE_364 = 376;</code>
     */
    CURRENT_TERRITORY_CODE_364(376),
    /**
     * <code>CURRENT_TERRITORY_CODE_R_E = 377;</code>
     */
    CURRENT_TERRITORY_CODE_R_E(377),
    /**
     * <code>CURRENT_TERRITORY_CODE_124 = 378;</code>
     */
    CURRENT_TERRITORY_CODE_124(378),
    /**
     * <code>CURRENT_TERRITORY_CODE_246 = 379;</code>
     */
    CURRENT_TERRITORY_CODE_246(379),
    /**
     * <code>CURRENT_TERRITORY_CODE_368 = 380;</code>
     */
    CURRENT_TERRITORY_CODE_368(380),
    /**
     * <code>CURRENT_TERRITORY_CODE_R_O = 381;</code>
     */
    CURRENT_TERRITORY_CODE_R_O(381),
    /**
     * <code>CURRENT_TERRITORY_CODE_20 = 382;</code>
     */
    CURRENT_TERRITORY_CODE_20(382),
    /**
     * <code>CURRENT_TERRITORY_CODE_R_S = 383;</code>
     */
    CURRENT_TERRITORY_CODE_R_S(383),
    /**
     * <code>CURRENT_TERRITORY_CODE_24 = 384;</code>
     */
    CURRENT_TERRITORY_CODE_24(384),
    /**
     * <code>CURRENT_TERRITORY_CODE_R_U = 385;</code>
     */
    CURRENT_TERRITORY_CODE_R_U(385),
    /**
     * <code>CURRENT_TERRITORY_CODE_R_W = 386;</code>
     */
    CURRENT_TERRITORY_CODE_R_W(386),
    /**
     * <code>CURRENT_TERRITORY_CODE_28 = 387;</code>
     */
    CURRENT_TERRITORY_CODE_28(387),
    /**
     * <code>CURRENT_TERRITORY_CODE_250 = 388;</code>
     */
    CURRENT_TERRITORY_CODE_250(388),
    /**
     * <code>CURRENT_TERRITORY_CODE_492 = 389;</code>
     */
    CURRENT_TERRITORY_CODE_492(389),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_A = 390;</code>
     */
    CURRENT_TERRITORY_CODE_S_A(390),
    /**
     * <code>CURRENT_TERRITORY_CODE_372 = 391;</code>
     */
    CURRENT_TERRITORY_CODE_372(391),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_B = 392;</code>
     */
    CURRENT_TERRITORY_CODE_S_B(392),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_C = 393;</code>
     */
    CURRENT_TERRITORY_CODE_S_C(393),
    /**
     * <code>CURRENT_TERRITORY_CODE_132 = 394;</code>
     */
    CURRENT_TERRITORY_CODE_132(394),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_D = 395;</code>
     */
    CURRENT_TERRITORY_CODE_S_D(395),
    /**
     * <code>CURRENT_TERRITORY_CODE_496 = 396;</code>
     */
    CURRENT_TERRITORY_CODE_496(396),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_E = 397;</code>
     */
    CURRENT_TERRITORY_CODE_S_E(397),
    /**
     * <code>CURRENT_TERRITORY_CODE_376 = 398;</code>
     */
    CURRENT_TERRITORY_CODE_376(398),
    /**
     * <code>CURRENT_TERRITORY_CODE_498 = 399;</code>
     */
    CURRENT_TERRITORY_CODE_498(399),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_G = 400;</code>
     */
    CURRENT_TERRITORY_CODE_S_G(400),
    /**
     * <code>CURRENT_TERRITORY_CODE_499 = 401;</code>
     */
    CURRENT_TERRITORY_CODE_499(401),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_H = 402;</code>
     */
    CURRENT_TERRITORY_CODE_S_H(402),
    /**
     * <code>CURRENT_TERRITORY_CODE_258 = 403;</code>
     */
    CURRENT_TERRITORY_CODE_258(403),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_I = 404;</code>
     */
    CURRENT_TERRITORY_CODE_S_I(404),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_J = 405;</code>
     */
    CURRENT_TERRITORY_CODE_S_J(405),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_K = 406;</code>
     */
    CURRENT_TERRITORY_CODE_S_K(406),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_L = 407;</code>
     */
    CURRENT_TERRITORY_CODE_S_L(407),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_M = 408;</code>
     */
    CURRENT_TERRITORY_CODE_S_M(408),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_N = 409;</code>
     */
    CURRENT_TERRITORY_CODE_S_N(409),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_O = 410;</code>
     */
    CURRENT_TERRITORY_CODE_S_O(410),
    /**
     * <code>CURRENT_TERRITORY_CODE_31 = 411;</code>
     */
    CURRENT_TERRITORY_CODE_31(411),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_R = 412;</code>
     */
    CURRENT_TERRITORY_CODE_S_R(412),
    /**
     * <code>CURRENT_TERRITORY_CODE_32 = 413;</code>
     */
    CURRENT_TERRITORY_CODE_32(413),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_S = 414;</code>
     */
    CURRENT_TERRITORY_CODE_S_S(414),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_T = 415;</code>
     */
    CURRENT_TERRITORY_CODE_S_T(415),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_V = 416;</code>
     */
    CURRENT_TERRITORY_CODE_S_V(416),
    /**
     * <code>CURRENT_TERRITORY_CODE_36 = 417;</code>
     */
    CURRENT_TERRITORY_CODE_36(417),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_X = 418;</code>
     */
    CURRENT_TERRITORY_CODE_S_X(418),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_Y = 419;</code>
     */
    CURRENT_TERRITORY_CODE_S_Y(419),
    /**
     * <code>CURRENT_TERRITORY_CODE_S_Z = 420;</code>
     */
    CURRENT_TERRITORY_CODE_S_Z(420),
    /**
     * <code>CURRENT_TERRITORY_CODE_380 = 421;</code>
     */
    CURRENT_TERRITORY_CODE_380(421),
    /**
     * <code>CURRENT_TERRITORY_CODE_140 = 422;</code>
     */
    CURRENT_TERRITORY_CODE_140(422),
    /**
     * <code>CURRENT_TERRITORY_CODE_262 = 423;</code>
     */
    CURRENT_TERRITORY_CODE_262(423),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_C = 424;</code>
     */
    CURRENT_TERRITORY_CODE_T_C(424),
    /**
     * <code>CURRENT_TERRITORY_CODE_384 = 425;</code>
     */
    CURRENT_TERRITORY_CODE_384(425),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_D = 426;</code>
     */
    CURRENT_TERRITORY_CODE_T_D(426),
    /**
     * <code>CURRENT_TERRITORY_CODE_144 = 427;</code>
     */
    CURRENT_TERRITORY_CODE_144(427),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_F = 428;</code>
     */
    CURRENT_TERRITORY_CODE_T_F(428),
    /**
     * <code>CURRENT_TERRITORY_CODE_266 = 429;</code>
     */
    CURRENT_TERRITORY_CODE_266(429),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_G = 430;</code>
     */
    CURRENT_TERRITORY_CODE_T_G(430),
    /**
     * <code>CURRENT_TERRITORY_CODE_388 = 431;</code>
     */
    CURRENT_TERRITORY_CODE_388(431),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_H = 432;</code>
     */
    CURRENT_TERRITORY_CODE_T_H(432),
    /**
     * <code>CURRENT_TERRITORY_CODE_268 = 433;</code>
     */
    CURRENT_TERRITORY_CODE_268(433),
    /**
     * <code>CURRENT_TERRITORY_CODE_148 = 434;</code>
     */
    CURRENT_TERRITORY_CODE_148(434),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_J = 435;</code>
     */
    CURRENT_TERRITORY_CODE_T_J(435),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_K = 436;</code>
     */
    CURRENT_TERRITORY_CODE_T_K(436),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_L = 437;</code>
     */
    CURRENT_TERRITORY_CODE_T_L(437),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_M = 438;</code>
     */
    CURRENT_TERRITORY_CODE_T_M(438),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_N = 439;</code>
     */
    CURRENT_TERRITORY_CODE_T_N(439),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_O = 440;</code>
     */
    CURRENT_TERRITORY_CODE_T_O(440),
    /**
     * <code>CURRENT_TERRITORY_CODE_40 = 441;</code>
     */
    CURRENT_TERRITORY_CODE_40(441),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_R = 442;</code>
     */
    CURRENT_TERRITORY_CODE_T_R(442),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_T = 443;</code>
     */
    CURRENT_TERRITORY_CODE_T_T(443),
    /**
     * <code>CURRENT_TERRITORY_CODE_44 = 444;</code>
     */
    CURRENT_TERRITORY_CODE_44(444),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_V = 445;</code>
     */
    CURRENT_TERRITORY_CODE_T_V(445),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_W = 446;</code>
     */
    CURRENT_TERRITORY_CODE_T_W(446),
    /**
     * <code>CURRENT_TERRITORY_CODE_48 = 447;</code>
     */
    CURRENT_TERRITORY_CODE_48(447),
    /**
     * <code>CURRENT_TERRITORY_CODE_T_Z = 448;</code>
     */
    CURRENT_TERRITORY_CODE_T_Z(448),
    /**
     * <code>CURRENT_TERRITORY_CODE_270 = 449;</code>
     */
    CURRENT_TERRITORY_CODE_270(449),
    /**
     * <code>CURRENT_TERRITORY_CODE_U_A = 450;</code>
     */
    CURRENT_TERRITORY_CODE_U_A(450),
    /**
     * <code>CURRENT_TERRITORY_CODE_392 = 451;</code>
     */
    CURRENT_TERRITORY_CODE_392(451),
    /**
     * <code>CURRENT_TERRITORY_CODE_152 = 452;</code>
     */
    CURRENT_TERRITORY_CODE_152(452),
    /**
     * <code>CURRENT_TERRITORY_CODE_276 = 453;</code>
     */
    CURRENT_TERRITORY_CODE_276(453),
    /**
     * <code>CURRENT_TERRITORY_CODE_U_G = 454;</code>
     */
    CURRENT_TERRITORY_CODE_U_G(454),
    /**
     * <code>CURRENT_TERRITORY_CODE_156 = 455;</code>
     */
    CURRENT_TERRITORY_CODE_156(455),
    /**
     * <code>CURRENT_TERRITORY_CODE_398 = 456;</code>
     */
    CURRENT_TERRITORY_CODE_398(456),
    /**
     * <code>CURRENT_TERRITORY_CODE_278 = 457;</code>
     */
    CURRENT_TERRITORY_CODE_278(457),
    /**
     * <code>CURRENT_TERRITORY_CODE_158 = 458;</code>
     */
    CURRENT_TERRITORY_CODE_158(458),
    /**
     * <code>CURRENT_TERRITORY_CODE_U_M = 459;</code>
     */
    CURRENT_TERRITORY_CODE_U_M(459),
    /**
     * <code>CURRENT_TERRITORY_CODE_50 = 460;</code>
     */
    CURRENT_TERRITORY_CODE_50(460),
    /**
     * <code>CURRENT_TERRITORY_CODE_51 = 461;</code>
     */
    CURRENT_TERRITORY_CODE_51(461),
    /**
     * <code>CURRENT_TERRITORY_CODE_52 = 462;</code>
     */
    CURRENT_TERRITORY_CODE_52(462),
    /**
     * <code>CURRENT_TERRITORY_CODE_U_S = 463;</code>
     */
    CURRENT_TERRITORY_CODE_U_S(463),
    /**
     * <code>CURRENT_TERRITORY_CODE_56 = 464;</code>
     */
    CURRENT_TERRITORY_CODE_56(464),
    /**
     * <code>CURRENT_TERRITORY_CODE_U_Y = 465;</code>
     */
    CURRENT_TERRITORY_CODE_U_Y(465),
    /**
     * <code>CURRENT_TERRITORY_CODE_U_Z = 466;</code>
     */
    CURRENT_TERRITORY_CODE_U_Z(466),
    /**
     * <code>CURRENT_TERRITORY_CODE_280 = 467;</code>
     */
    CURRENT_TERRITORY_CODE_280(467),
    /**
     * <code>CURRENT_TERRITORY_CODE_V_A = 468;</code>
     */
    CURRENT_TERRITORY_CODE_V_A(468),
    /**
     * <code>CURRENT_TERRITORY_CODE_V_C = 469;</code>
     */
    CURRENT_TERRITORY_CODE_V_C(469),
    /**
     * <code>CURRENT_TERRITORY_CODE_V_E = 470;</code>
     */
    CURRENT_TERRITORY_CODE_V_E(470),
    /**
     * <code>CURRENT_TERRITORY_CODE_V_G = 471;</code>
     */
    CURRENT_TERRITORY_CODE_V_G(471),
    /**
     * <code>CURRENT_TERRITORY_CODE_288 = 472;</code>
     */
    CURRENT_TERRITORY_CODE_288(472),
    /**
     * <code>CURRENT_TERRITORY_CODE_V_I = 473;</code>
     */
    CURRENT_TERRITORY_CODE_V_I(473),
    /**
     * <code>CURRENT_TERRITORY_CODE_V_N = 474;</code>
     */
    CURRENT_TERRITORY_CODE_V_N(474),
    /**
     * <code>CURRENT_TERRITORY_CODE_64 = 475;</code>
     */
    CURRENT_TERRITORY_CODE_64(475),
    /**
     * <code>CURRENT_TERRITORY_CODE_V_U = 476;</code>
     */
    CURRENT_TERRITORY_CODE_V_U(476),
    /**
     * <code>CURRENT_TERRITORY_CODE_68 = 477;</code>
     */
    CURRENT_TERRITORY_CODE_68(477),
    /**
     * <code>CURRENT_TERRITORY_CODE_170 = 478;</code>
     */
    CURRENT_TERRITORY_CODE_170(478),
    /**
     * <code>CURRENT_TERRITORY_CODE_174 = 479;</code>
     */
    CURRENT_TERRITORY_CODE_174(479),
    /**
     * <code>CURRENT_TERRITORY_CODE_W_F = 480;</code>
     */
    CURRENT_TERRITORY_CODE_W_F(480),
    /**
     * <code>CURRENT_TERRITORY_CODE_296 = 481;</code>
     */
    CURRENT_TERRITORY_CODE_296(481),
    /**
     * <code>CURRENT_TERRITORY_CODE_178 = 482;</code>
     */
    CURRENT_TERRITORY_CODE_178(482),
    /**
     * <code>CURRENT_TERRITORY_CODE_70 = 483;</code>
     */
    CURRENT_TERRITORY_CODE_70(483),
    /**
     * <code>CURRENT_TERRITORY_CODE_72 = 484;</code>
     */
    CURRENT_TERRITORY_CODE_72(484),
    /**
     * <code>CURRENT_TERRITORY_CODE_W_S = 485;</code>
     */
    CURRENT_TERRITORY_CODE_W_S(485),
    /**
     * <code>CURRENT_TERRITORY_CODE_76 = 486;</code>
     */
    CURRENT_TERRITORY_CODE_76(486),
    /**
     * <code>CURRENT_TERRITORY_CODE_180 = 487;</code>
     */
    CURRENT_TERRITORY_CODE_180(487),
    /**
     * <code>CURRENT_TERRITORY_CODE_188 = 488;</code>
     */
    CURRENT_TERRITORY_CODE_188(488),
    /**
     * <code>CURRENT_TERRITORY_CODE_X_K = 489;</code>
     */
    CURRENT_TERRITORY_CODE_X_K(489),
    /**
     * <code>CURRENT_TERRITORY_CODE_84 = 490;</code>
     */
    CURRENT_TERRITORY_CODE_84(490),
    /**
     * <code>CURRENT_TERRITORY_CODE_191 = 491;</code>
     */
    CURRENT_TERRITORY_CODE_191(491),
    /**
     * <code>CURRENT_TERRITORY_CODE_192 = 492;</code>
     */
    CURRENT_TERRITORY_CODE_192(492),
    /**
     * <code>CURRENT_TERRITORY_CODE_Y_E = 493;</code>
     */
    CURRENT_TERRITORY_CODE_Y_E(493),
    /**
     * <code>CURRENT_TERRITORY_CODE_196 = 494;</code>
     */
    CURRENT_TERRITORY_CODE_196(494),
    /**
     * <code>CURRENT_TERRITORY_CODE_90 = 495;</code>
     */
    CURRENT_TERRITORY_CODE_90(495),
    /**
     * <code>CURRENT_TERRITORY_CODE_Y_T = 496;</code>
     */
    CURRENT_TERRITORY_CODE_Y_T(496),
    /**
     * <code>CURRENT_TERRITORY_CODE_96 = 497;</code>
     */
    CURRENT_TERRITORY_CODE_96(497),
    /**
     * <code>CURRENT_TERRITORY_CODE_Z_A = 498;</code>
     */
    CURRENT_TERRITORY_CODE_Z_A(498),
    /**
     * <code>CURRENT_TERRITORY_CODE_WORLDWIDE = 499;</code>
     */
    CURRENT_TERRITORY_CODE_WORLDWIDE(499),
    /**
     * <code>CURRENT_TERRITORY_CODE_Z_M = 500;</code>
     */
    CURRENT_TERRITORY_CODE_Z_M(500),
    /**
     * <code>CURRENT_TERRITORY_CODE_Z_W = 501;</code>
     */
    CURRENT_TERRITORY_CODE_Z_W(501),
    ;

    /**
     * <code>CURRENT_TERRITORY_CODE_A_D = 0;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_D_VALUE = 0;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_E = 1;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_E_VALUE = 1;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_F = 2;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_F_VALUE = 2;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_G = 3;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_G_VALUE = 3;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_I = 4;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_I_VALUE = 4;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_L = 5;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_L_VALUE = 5;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_M = 6;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_M_VALUE = 6;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_N = 7;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_N_VALUE = 7;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_O = 8;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_O_VALUE = 8;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_Q = 9;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_Q_VALUE = 9;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_R = 10;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_R_VALUE = 10;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_S = 11;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_S_VALUE = 11;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_T = 12;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_T_VALUE = 12;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_U = 13;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_U_VALUE = 13;
    /**
     * <code>CURRENT_TERRITORY_CODE_4 = 14;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_4_VALUE = 14;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_W = 15;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_W_VALUE = 15;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_X = 16;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_X_VALUE = 16;
    /**
     * <code>CURRENT_TERRITORY_CODE_8 = 17;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_8_VALUE = 17;
    /**
     * <code>CURRENT_TERRITORY_CODE_800 = 18;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_800_VALUE = 18;
    /**
     * <code>CURRENT_TERRITORY_CODE_A_Z = 19;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_A_Z_VALUE = 19;
    /**
     * <code>CURRENT_TERRITORY_CODE_804 = 20;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_804_VALUE = 20;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_A = 21;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_A_VALUE = 21;
    /**
     * <code>CURRENT_TERRITORY_CODE_807 = 22;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_807_VALUE = 22;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_B = 23;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_B_VALUE = 23;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_D = 24;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_D_VALUE = 24;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_E = 25;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_E_VALUE = 25;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_F = 26;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_F_VALUE = 26;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_G = 27;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_G_VALUE = 27;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_H = 28;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_H_VALUE = 28;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_I = 29;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_I_VALUE = 29;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_J = 30;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_J_VALUE = 30;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_L = 31;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_L_VALUE = 31;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_M = 32;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_M_VALUE = 32;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_N = 33;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_N_VALUE = 33;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_O = 34;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_O_VALUE = 34;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_Q = 35;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_Q_VALUE = 35;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_R = 36;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_R_VALUE = 36;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_S = 37;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_S_VALUE = 37;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_T = 38;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_T_VALUE = 38;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_V = 39;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_V_VALUE = 39;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_W = 40;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_W_VALUE = 40;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_Y = 41;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_Y_VALUE = 41;
    /**
     * <code>CURRENT_TERRITORY_CODE_810 = 42;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_810_VALUE = 42;
    /**
     * <code>CURRENT_TERRITORY_CODE_B_Z = 43;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_B_Z_VALUE = 43;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_A = 44;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_A_VALUE = 44;
    /**
     * <code>CURRENT_TERRITORY_CODE_818 = 45;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_818_VALUE = 45;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_C = 46;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_C_VALUE = 46;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_D = 47;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_D_VALUE = 47;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_F = 48;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_F_VALUE = 48;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_G = 49;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_G_VALUE = 49;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_H = 50;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_H_VALUE = 50;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_I = 51;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_I_VALUE = 51;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_K = 52;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_K_VALUE = 52;
    /**
     * <code>CURRENT_TERRITORY_CODE_2100 = 53;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2100_VALUE = 53;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_L = 54;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_L_VALUE = 54;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_M = 55;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_M_VALUE = 55;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_N = 56;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_N_VALUE = 56;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_O = 57;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_O_VALUE = 57;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_R = 58;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_R_VALUE = 58;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_S = 59;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_S_VALUE = 59;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_U = 60;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_U_VALUE = 60;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_V = 61;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_V_VALUE = 61;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_W = 62;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_W_VALUE = 62;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_X = 63;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_X_VALUE = 63;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_Y = 64;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_Y_VALUE = 64;
    /**
     * <code>CURRENT_TERRITORY_CODE_C_Z = 65;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_C_Z_VALUE = 65;
    /**
     * <code>CURRENT_TERRITORY_CODE_702 = 66;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_702_VALUE = 66;
    /**
     * <code>CURRENT_TERRITORY_CODE_703 = 67;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_703_VALUE = 67;
    /**
     * <code>CURRENT_TERRITORY_CODE_704 = 68;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_704_VALUE = 68;
    /**
     * <code>CURRENT_TERRITORY_CODE_705 = 69;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_705_VALUE = 69;
    /**
     * <code>CURRENT_TERRITORY_CODE_826 = 70;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_826_VALUE = 70;
    /**
     * <code>CURRENT_TERRITORY_CODE_706 = 71;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_706_VALUE = 71;
    /**
     * <code>CURRENT_TERRITORY_CODE_D_E = 72;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_D_E_VALUE = 72;
    /**
     * <code>CURRENT_TERRITORY_CODE_D_J = 73;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_D_J_VALUE = 73;
    /**
     * <code>CURRENT_TERRITORY_CODE_D_K = 74;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_D_K_VALUE = 74;
    /**
     * <code>CURRENT_TERRITORY_CODE_2111 = 75;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2111_VALUE = 75;
    /**
     * <code>CURRENT_TERRITORY_CODE_D_M = 76;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_D_M_VALUE = 76;
    /**
     * <code>CURRENT_TERRITORY_CODE_2110 = 77;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2110_VALUE = 77;
    /**
     * <code>CURRENT_TERRITORY_CODE_D_O = 78;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_D_O_VALUE = 78;
    /**
     * <code>CURRENT_TERRITORY_CODE_2108 = 79;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2108_VALUE = 79;
    /**
     * <code>CURRENT_TERRITORY_CODE_2107 = 80;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2107_VALUE = 80;
    /**
     * <code>CURRENT_TERRITORY_CODE_2106 = 81;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2106_VALUE = 81;
    /**
     * <code>CURRENT_TERRITORY_CODE_2105 = 82;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2105_VALUE = 82;
    /**
     * <code>CURRENT_TERRITORY_CODE_2104 = 83;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2104_VALUE = 83;
    /**
     * <code>CURRENT_TERRITORY_CODE_2103 = 84;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2103_VALUE = 84;
    /**
     * <code>CURRENT_TERRITORY_CODE_D_Z = 85;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_D_Z_VALUE = 85;
    /**
     * <code>CURRENT_TERRITORY_CODE_710 = 86;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_710_VALUE = 86;
    /**
     * <code>CURRENT_TERRITORY_CODE_2102 = 87;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2102_VALUE = 87;
    /**
     * <code>CURRENT_TERRITORY_CODE_2101 = 88;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2101_VALUE = 88;
    /**
     * <code>CURRENT_TERRITORY_CODE_834 = 89;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_834_VALUE = 89;
    /**
     * <code>CURRENT_TERRITORY_CODE_716 = 90;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_716_VALUE = 90;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_C = 91;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_C_VALUE = 91;
    /**
     * <code>CURRENT_TERRITORY_CODE_2109 = 92;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2109_VALUE = 92;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_E = 93;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_E_VALUE = 93;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_G = 94;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_G_VALUE = 94;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_H = 95;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_H_VALUE = 95;
    /**
     * <code>CURRENT_TERRITORY_CODE_2122 = 96;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2122_VALUE = 96;
    /**
     * <code>CURRENT_TERRITORY_CODE_2121 = 97;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2121_VALUE = 97;
    /**
     * <code>CURRENT_TERRITORY_CODE_2120 = 98;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2120_VALUE = 98;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_R = 99;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_R_VALUE = 99;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_S = 100;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_S_VALUE = 100;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_T = 101;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_T_VALUE = 101;
    /**
     * <code>CURRENT_TERRITORY_CODE_2119 = 102;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2119_VALUE = 102;
    /**
     * <code>CURRENT_TERRITORY_CODE_2118 = 103;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2118_VALUE = 103;
    /**
     * <code>CURRENT_TERRITORY_CODE_2117 = 104;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2117_VALUE = 104;
    /**
     * <code>CURRENT_TERRITORY_CODE_2116 = 105;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2116_VALUE = 105;
    /**
     * <code>CURRENT_TERRITORY_CODE_840 = 106;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_840_VALUE = 106;
    /**
     * <code>CURRENT_TERRITORY_CODE_2115 = 107;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2115_VALUE = 107;
    /**
     * <code>CURRENT_TERRITORY_CODE_720 = 108;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_720_VALUE = 108;
    /**
     * <code>CURRENT_TERRITORY_CODE_2114 = 109;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2114_VALUE = 109;
    /**
     * <code>CURRENT_TERRITORY_CODE_600 = 110;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_600_VALUE = 110;
    /**
     * <code>CURRENT_TERRITORY_CODE_2113 = 111;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2113_VALUE = 111;
    /**
     * <code>CURRENT_TERRITORY_CODE_2112 = 112;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2112_VALUE = 112;
    /**
     * <code>CURRENT_TERRITORY_CODE_724 = 113;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_724_VALUE = 113;
    /**
     * <code>CURRENT_TERRITORY_CODE_604 = 114;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_604_VALUE = 114;
    /**
     * <code>CURRENT_TERRITORY_CODE_728 = 115;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_728_VALUE = 115;
    /**
     * <code>CURRENT_TERRITORY_CODE_608 = 116;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_608_VALUE = 116;
    /**
     * <code>CURRENT_TERRITORY_CODE_729 = 117;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_729_VALUE = 117;
    /**
     * <code>CURRENT_TERRITORY_CODE_F_I = 118;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_F_I_VALUE = 118;
    /**
     * <code>CURRENT_TERRITORY_CODE_F_J = 119;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_F_J_VALUE = 119;
    /**
     * <code>CURRENT_TERRITORY_CODE_F_K = 120;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_F_K_VALUE = 120;
    /**
     * <code>CURRENT_TERRITORY_CODE_F_M = 121;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_F_M_VALUE = 121;
    /**
     * <code>CURRENT_TERRITORY_CODE_2133 = 122;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2133_VALUE = 122;
    /**
     * <code>CURRENT_TERRITORY_CODE_F_O = 123;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_F_O_VALUE = 123;
    /**
     * <code>CURRENT_TERRITORY_CODE_2132 = 124;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2132_VALUE = 124;
    /**
     * <code>CURRENT_TERRITORY_CODE_2131 = 125;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2131_VALUE = 125;
    /**
     * <code>CURRENT_TERRITORY_CODE_2130 = 126;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2130_VALUE = 126;
    /**
     * <code>CURRENT_TERRITORY_CODE_F_R = 127;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_F_R_VALUE = 127;
    /**
     * <code>CURRENT_TERRITORY_CODE_2129 = 128;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2129_VALUE = 128;
    /**
     * <code>CURRENT_TERRITORY_CODE_2128 = 129;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2128_VALUE = 129;
    /**
     * <code>CURRENT_TERRITORY_CODE_2127 = 130;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2127_VALUE = 130;
    /**
     * <code>CURRENT_TERRITORY_CODE_2126 = 131;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2126_VALUE = 131;
    /**
     * <code>CURRENT_TERRITORY_CODE_2125 = 132;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2125_VALUE = 132;
    /**
     * <code>CURRENT_TERRITORY_CODE_732 = 133;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_732_VALUE = 133;
    /**
     * <code>CURRENT_TERRITORY_CODE_2124 = 134;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2124_VALUE = 134;
    /**
     * <code>CURRENT_TERRITORY_CODE_854 = 135;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_854_VALUE = 135;
    /**
     * <code>CURRENT_TERRITORY_CODE_2123 = 136;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2123_VALUE = 136;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_A = 137;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_A_VALUE = 137;
    /**
     * <code>CURRENT_TERRITORY_CODE_736 = 138;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_736_VALUE = 138;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_B = 139;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_B_VALUE = 139;
    /**
     * <code>CURRENT_TERRITORY_CODE_616 = 140;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_616_VALUE = 140;
    /**
     * <code>CURRENT_TERRITORY_CODE_858 = 141;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_858_VALUE = 141;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_D = 142;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_D_VALUE = 142;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_E = 143;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_E_VALUE = 143;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_F = 144;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_F_VALUE = 144;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_G = 145;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_G_VALUE = 145;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_H = 146;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_H_VALUE = 146;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_I = 147;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_I_VALUE = 147;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_L = 148;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_L_VALUE = 148;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_M = 149;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_M_VALUE = 149;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_N = 150;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_N_VALUE = 150;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_P = 151;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_P_VALUE = 151;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_Q = 152;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_Q_VALUE = 152;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_R = 153;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_R_VALUE = 153;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_S__MINUS___M_L = 154;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_S__MINUS___M_L_VALUE = 154;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_S = 155;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_S_VALUE = 155;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_T = 156;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_T_VALUE = 156;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_U = 157;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_U_VALUE = 157;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_W = 158;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_W_VALUE = 158;
    /**
     * <code>CURRENT_TERRITORY_CODE_G_Y = 159;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_G_Y_VALUE = 159;
    /**
     * <code>CURRENT_TERRITORY_CODE_860 = 160;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_860_VALUE = 160;
    /**
     * <code>CURRENT_TERRITORY_CODE_740 = 161;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_740_VALUE = 161;
    /**
     * <code>CURRENT_TERRITORY_CODE_620 = 162;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_620_VALUE = 162;
    /**
     * <code>CURRENT_TERRITORY_CODE_862 = 163;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_862_VALUE = 163;
    /**
     * <code>CURRENT_TERRITORY_CODE_2136 = 164;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2136_VALUE = 164;
    /**
     * <code>CURRENT_TERRITORY_CODE_2134 = 165;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_2134_VALUE = 165;
    /**
     * <code>CURRENT_TERRITORY_CODE_624 = 166;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_624_VALUE = 166;
    /**
     * <code>CURRENT_TERRITORY_CODE_504 = 167;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_504_VALUE = 167;
    /**
     * <code>CURRENT_TERRITORY_CODE_626 = 168;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_626_VALUE = 168;
    /**
     * <code>CURRENT_TERRITORY_CODE_748 = 169;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_748_VALUE = 169;
    /**
     * <code>CURRENT_TERRITORY_CODE_508 = 170;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_508_VALUE = 170;
    /**
     * <code>CURRENT_TERRITORY_CODE_H_K = 171;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_H_K_VALUE = 171;
    /**
     * <code>CURRENT_TERRITORY_CODE_H_M = 172;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_H_M_VALUE = 172;
    /**
     * <code>CURRENT_TERRITORY_CODE_H_N = 173;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_H_N_VALUE = 173;
    /**
     * <code>CURRENT_TERRITORY_CODE_H_R = 174;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_H_R_VALUE = 174;
    /**
     * <code>CURRENT_TERRITORY_CODE_H_T = 175;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_H_T_VALUE = 175;
    /**
     * <code>CURRENT_TERRITORY_CODE_H_U = 176;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_H_U_VALUE = 176;
    /**
     * <code>CURRENT_TERRITORY_CODE_630 = 177;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_630_VALUE = 177;
    /**
     * <code>CURRENT_TERRITORY_CODE_752 = 178;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_752_VALUE = 178;
    /**
     * <code>CURRENT_TERRITORY_CODE_512 = 179;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_512_VALUE = 179;
    /**
     * <code>CURRENT_TERRITORY_CODE_634 = 180;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_634_VALUE = 180;
    /**
     * <code>CURRENT_TERRITORY_CODE_756 = 181;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_756_VALUE = 181;
    /**
     * <code>CURRENT_TERRITORY_CODE_516 = 182;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_516_VALUE = 182;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_D = 183;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_D_VALUE = 183;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_E = 184;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_E_VALUE = 184;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_L = 185;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_L_VALUE = 185;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_M = 186;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_M_VALUE = 186;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_N = 187;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_N_VALUE = 187;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_O = 188;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_O_VALUE = 188;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_Q = 189;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_Q_VALUE = 189;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_R = 190;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_R_VALUE = 190;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_S = 191;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_S_VALUE = 191;
    /**
     * <code>CURRENT_TERRITORY_CODE_I_T = 192;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_I_T_VALUE = 192;
    /**
     * <code>CURRENT_TERRITORY_CODE_760 = 193;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_760_VALUE = 193;
    /**
     * <code>CURRENT_TERRITORY_CODE_882 = 194;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_882_VALUE = 194;
    /**
     * <code>CURRENT_TERRITORY_CODE_520 = 195;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_520_VALUE = 195;
    /**
     * <code>CURRENT_TERRITORY_CODE_762 = 196;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_762_VALUE = 196;
    /**
     * <code>CURRENT_TERRITORY_CODE_400 = 197;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_400_VALUE = 197;
    /**
     * <code>CURRENT_TERRITORY_CODE_642 = 198;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_642_VALUE = 198;
    /**
     * <code>CURRENT_TERRITORY_CODE_643 = 199;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_643_VALUE = 199;
    /**
     * <code>CURRENT_TERRITORY_CODE_764 = 200;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_764_VALUE = 200;
    /**
     * <code>CURRENT_TERRITORY_CODE_886 = 201;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_886_VALUE = 201;
    /**
     * <code>CURRENT_TERRITORY_CODE_524 = 202;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_524_VALUE = 202;
    /**
     * <code>CURRENT_TERRITORY_CODE_887 = 203;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_887_VALUE = 203;
    /**
     * <code>CURRENT_TERRITORY_CODE_404 = 204;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_404_VALUE = 204;
    /**
     * <code>CURRENT_TERRITORY_CODE_646 = 205;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_646_VALUE = 205;
    /**
     * <code>CURRENT_TERRITORY_CODE_768 = 206;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_768_VALUE = 206;
    /**
     * <code>CURRENT_TERRITORY_CODE_J_E = 207;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_J_E_VALUE = 207;
    /**
     * <code>CURRENT_TERRITORY_CODE_528 = 208;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_528_VALUE = 208;
    /**
     * <code>CURRENT_TERRITORY_CODE_408 = 209;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_408_VALUE = 209;
    /**
     * <code>CURRENT_TERRITORY_CODE_J_M = 210;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_J_M_VALUE = 210;
    /**
     * <code>CURRENT_TERRITORY_CODE_J_O = 211;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_J_O_VALUE = 211;
    /**
     * <code>CURRENT_TERRITORY_CODE_J_P = 212;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_J_P_VALUE = 212;
    /**
     * <code>CURRENT_TERRITORY_CODE_890 = 213;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_890_VALUE = 213;
    /**
     * <code>CURRENT_TERRITORY_CODE_891 = 214;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_891_VALUE = 214;
    /**
     * <code>CURRENT_TERRITORY_CODE_410 = 215;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_410_VALUE = 215;
    /**
     * <code>CURRENT_TERRITORY_CODE_894 = 216;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_894_VALUE = 216;
    /**
     * <code>CURRENT_TERRITORY_CODE_776 = 217;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_776_VALUE = 217;
    /**
     * <code>CURRENT_TERRITORY_CODE_414 = 218;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_414_VALUE = 218;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_E = 219;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_E_VALUE = 219;
    /**
     * <code>CURRENT_TERRITORY_CODE_417 = 220;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_417_VALUE = 220;
    /**
     * <code>CURRENT_TERRITORY_CODE_659 = 221;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_659_VALUE = 221;
    /**
     * <code>CURRENT_TERRITORY_CODE_418 = 222;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_418_VALUE = 222;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_G = 223;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_G_VALUE = 223;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_H = 224;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_H_VALUE = 224;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_I = 225;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_I_VALUE = 225;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_M = 226;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_M_VALUE = 226;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_N = 227;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_N_VALUE = 227;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_P = 228;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_P_VALUE = 228;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_R = 229;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_R_VALUE = 229;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_W = 230;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_W_VALUE = 230;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_Y = 231;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_Y_VALUE = 231;
    /**
     * <code>CURRENT_TERRITORY_CODE_K_Z = 232;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_K_Z_VALUE = 232;
    /**
     * <code>CURRENT_TERRITORY_CODE_780 = 233;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_780_VALUE = 233;
    /**
     * <code>CURRENT_TERRITORY_CODE_540 = 234;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_540_VALUE = 234;
    /**
     * <code>CURRENT_TERRITORY_CODE_662 = 235;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_662_VALUE = 235;
    /**
     * <code>CURRENT_TERRITORY_CODE_300 = 236;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_300_VALUE = 236;
    /**
     * <code>CURRENT_TERRITORY_CODE_784 = 237;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_784_VALUE = 237;
    /**
     * <code>CURRENT_TERRITORY_CODE_422 = 238;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_422_VALUE = 238;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_A = 239;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_A_VALUE = 239;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_B = 240;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_B_VALUE = 240;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_C = 241;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_C_VALUE = 241;
    /**
     * <code>CURRENT_TERRITORY_CODE_788 = 242;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_788_VALUE = 242;
    /**
     * <code>CURRENT_TERRITORY_CODE_426 = 243;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_426_VALUE = 243;
    /**
     * <code>CURRENT_TERRITORY_CODE_548 = 244;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_548_VALUE = 244;
    /**
     * <code>CURRENT_TERRITORY_CODE_428 = 245;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_428_VALUE = 245;
    /**
     * <code>CURRENT_TERRITORY_CODE_308 = 246;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_308_VALUE = 246;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_I = 247;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_I_VALUE = 247;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_K = 248;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_K_VALUE = 248;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_R = 249;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_R_VALUE = 249;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_S = 250;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_S_VALUE = 250;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_T = 251;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_T_VALUE = 251;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_U = 252;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_U_VALUE = 252;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_V = 253;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_V_VALUE = 253;
    /**
     * <code>CURRENT_TERRITORY_CODE_L_Y = 254;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_L_Y_VALUE = 254;
    /**
     * <code>CURRENT_TERRITORY_CODE_670 = 255;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_670_VALUE = 255;
    /**
     * <code>CURRENT_TERRITORY_CODE_792 = 256;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_792_VALUE = 256;
    /**
     * <code>CURRENT_TERRITORY_CODE_430 = 257;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_430_VALUE = 257;
    /**
     * <code>CURRENT_TERRITORY_CODE_674 = 258;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_674_VALUE = 258;
    /**
     * <code>CURRENT_TERRITORY_CODE_795 = 259;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_795_VALUE = 259;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_A = 260;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_A_VALUE = 260;
    /**
     * <code>CURRENT_TERRITORY_CODE_554 = 261;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_554_VALUE = 261;
    /**
     * <code>CURRENT_TERRITORY_CODE_434 = 262;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_434_VALUE = 262;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_C = 263;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_C_VALUE = 263;
    /**
     * <code>CURRENT_TERRITORY_CODE_798 = 264;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_798_VALUE = 264;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_D = 265;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_D_VALUE = 265;
    /**
     * <code>CURRENT_TERRITORY_CODE_678 = 266;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_678_VALUE = 266;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_E = 267;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_E_VALUE = 267;
    /**
     * <code>CURRENT_TERRITORY_CODE_558 = 268;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_558_VALUE = 268;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_F = 269;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_F_VALUE = 269;
    /**
     * <code>CURRENT_TERRITORY_CODE_438 = 270;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_438_VALUE = 270;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_G = 271;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_G_VALUE = 271;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_H = 272;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_H_VALUE = 272;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_K = 273;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_K_VALUE = 273;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_L = 274;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_L_VALUE = 274;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_M = 275;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_M_VALUE = 275;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_N = 276;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_N_VALUE = 276;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_O = 277;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_O_VALUE = 277;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_P = 278;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_P_VALUE = 278;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_Q = 279;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_Q_VALUE = 279;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_R = 280;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_R_VALUE = 280;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_S = 281;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_S_VALUE = 281;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_T = 282;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_T_VALUE = 282;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_U = 283;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_U_VALUE = 283;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_V = 284;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_V_VALUE = 284;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_W = 285;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_W_VALUE = 285;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_X = 286;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_X_VALUE = 286;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_Y = 287;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_Y_VALUE = 287;
    /**
     * <code>CURRENT_TERRITORY_CODE_M_Z = 288;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_M_Z_VALUE = 288;
    /**
     * <code>CURRENT_TERRITORY_CODE_440 = 289;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_440_VALUE = 289;
    /**
     * <code>CURRENT_TERRITORY_CODE_682 = 290;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_682_VALUE = 290;
    /**
     * <code>CURRENT_TERRITORY_CODE_320 = 291;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_320_VALUE = 291;
    /**
     * <code>CURRENT_TERRITORY_CODE_562 = 292;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_562_VALUE = 292;
    /**
     * <code>CURRENT_TERRITORY_CODE_200 = 293;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_200_VALUE = 293;
    /**
     * <code>CURRENT_TERRITORY_CODE_442 = 294;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_442_VALUE = 294;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_A = 295;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_A_VALUE = 295;
    /**
     * <code>CURRENT_TERRITORY_CODE_686 = 296;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_686_VALUE = 296;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_C = 297;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_C_VALUE = 297;
    /**
     * <code>CURRENT_TERRITORY_CODE_203 = 298;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_203_VALUE = 298;
    /**
     * <code>CURRENT_TERRITORY_CODE_324 = 299;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_324_VALUE = 299;
    /**
     * <code>CURRENT_TERRITORY_CODE_566 = 300;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_566_VALUE = 300;
    /**
     * <code>CURRENT_TERRITORY_CODE_204 = 301;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_204_VALUE = 301;
    /**
     * <code>CURRENT_TERRITORY_CODE_688 = 302;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_688_VALUE = 302;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_E = 303;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_E_VALUE = 303;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_F = 304;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_F_VALUE = 304;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_G = 305;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_G_VALUE = 305;
    /**
     * <code>CURRENT_TERRITORY_CODE_328 = 306;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_328_VALUE = 306;
    /**
     * <code>CURRENT_TERRITORY_CODE_208 = 307;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_208_VALUE = 307;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_I = 308;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_I_VALUE = 308;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_L = 309;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_L_VALUE = 309;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_O = 310;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_O_VALUE = 310;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_P = 311;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_P_VALUE = 311;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_R = 312;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_R_VALUE = 312;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_U = 313;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_U_VALUE = 313;
    /**
     * <code>CURRENT_TERRITORY_CODE_N_Z = 314;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_N_Z_VALUE = 314;
    /**
     * <code>CURRENT_TERRITORY_CODE_690 = 315;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_690_VALUE = 315;
    /**
     * <code>CURRENT_TERRITORY_CODE_450 = 316;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_450_VALUE = 316;
    /**
     * <code>CURRENT_TERRITORY_CODE_694 = 317;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_694_VALUE = 317;
    /**
     * <code>CURRENT_TERRITORY_CODE_332 = 318;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_332_VALUE = 318;
    /**
     * <code>CURRENT_TERRITORY_CODE_212 = 319;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_212_VALUE = 319;
    /**
     * <code>CURRENT_TERRITORY_CODE_454 = 320;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_454_VALUE = 320;
    /**
     * <code>CURRENT_TERRITORY_CODE_214 = 321;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_214_VALUE = 321;
    /**
     * <code>CURRENT_TERRITORY_CODE_336 = 322;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_336_VALUE = 322;
    /**
     * <code>CURRENT_TERRITORY_CODE_578 = 323;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_578_VALUE = 323;
    /**
     * <code>CURRENT_TERRITORY_CODE_458 = 324;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_458_VALUE = 324;
    /**
     * <code>CURRENT_TERRITORY_CODE_218 = 325;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_218_VALUE = 325;
    /**
     * <code>CURRENT_TERRITORY_CODE_O_M = 326;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_O_M_VALUE = 326;
    /**
     * <code>CURRENT_TERRITORY_CODE_340 = 327;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_340_VALUE = 327;
    /**
     * <code>CURRENT_TERRITORY_CODE_462 = 328;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_462_VALUE = 328;
    /**
     * <code>CURRENT_TERRITORY_CODE_583 = 329;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_583_VALUE = 329;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_A = 330;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_A_VALUE = 330;
    /**
     * <code>CURRENT_TERRITORY_CODE_100 = 331;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_100_VALUE = 331;
    /**
     * <code>CURRENT_TERRITORY_CODE_584 = 332;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_584_VALUE = 332;
    /**
     * <code>CURRENT_TERRITORY_CODE_222 = 333;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_222_VALUE = 333;
    /**
     * <code>CURRENT_TERRITORY_CODE_585 = 334;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_585_VALUE = 334;
    /**
     * <code>CURRENT_TERRITORY_CODE_344 = 335;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_344_VALUE = 335;
    /**
     * <code>CURRENT_TERRITORY_CODE_586 = 336;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_586_VALUE = 336;
    /**
     * <code>CURRENT_TERRITORY_CODE_466 = 337;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_466_VALUE = 337;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_E = 338;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_E_VALUE = 338;
    /**
     * <code>CURRENT_TERRITORY_CODE_104 = 339;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_104_VALUE = 339;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_F = 340;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_F_VALUE = 340;
    /**
     * <code>CURRENT_TERRITORY_CODE_226 = 341;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_226_VALUE = 341;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_G = 342;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_G_VALUE = 342;
    /**
     * <code>CURRENT_TERRITORY_CODE_348 = 343;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_348_VALUE = 343;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_H = 344;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_H_VALUE = 344;
    /**
     * <code>CURRENT_TERRITORY_CODE_108 = 345;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_108_VALUE = 345;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_K = 346;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_K_VALUE = 346;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_L = 347;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_L_VALUE = 347;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_M = 348;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_M_VALUE = 348;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_N = 349;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_N_VALUE = 349;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_R = 350;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_R_VALUE = 350;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_S = 351;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_S_VALUE = 351;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_T = 352;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_T_VALUE = 352;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_W = 353;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_W_VALUE = 353;
    /**
     * <code>CURRENT_TERRITORY_CODE_P_Y = 354;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_P_Y_VALUE = 354;
    /**
     * <code>CURRENT_TERRITORY_CODE_470 = 355;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_470_VALUE = 355;
    /**
     * <code>CURRENT_TERRITORY_CODE_591 = 356;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_591_VALUE = 356;
    /**
     * <code>CURRENT_TERRITORY_CODE_230 = 357;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_230_VALUE = 357;
    /**
     * <code>CURRENT_TERRITORY_CODE_Q_A = 358;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_Q_A_VALUE = 358;
    /**
     * <code>CURRENT_TERRITORY_CODE_231 = 359;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_231_VALUE = 359;
    /**
     * <code>CURRENT_TERRITORY_CODE_352 = 360;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_352_VALUE = 360;
    /**
     * <code>CURRENT_TERRITORY_CODE_232 = 361;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_232_VALUE = 361;
    /**
     * <code>CURRENT_TERRITORY_CODE_112 = 362;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_112_VALUE = 362;
    /**
     * <code>CURRENT_TERRITORY_CODE_233 = 363;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_233_VALUE = 363;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_S__MINUS___C_E = 364;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_S__MINUS___C_E_VALUE = 364;
    /**
     * <code>CURRENT_TERRITORY_CODE_356 = 365;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_356_VALUE = 365;
    /**
     * <code>CURRENT_TERRITORY_CODE_598 = 366;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_598_VALUE = 366;
    /**
     * <code>CURRENT_TERRITORY_CODE_478 = 367;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_478_VALUE = 367;
    /**
     * <code>CURRENT_TERRITORY_CODE_116 = 368;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_116_VALUE = 368;
    /**
     * <code>CURRENT_TERRITORY_CODE_E_S__MINUS___C_N = 369;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_E_S__MINUS___C_N_VALUE = 369;
    /**
     * <code>CURRENT_TERRITORY_CODE_12 = 370;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_12_VALUE = 370;
    /**
     * <code>CURRENT_TERRITORY_CODE_480 = 371;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_480_VALUE = 371;
    /**
     * <code>CURRENT_TERRITORY_CODE_360 = 372;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_360_VALUE = 372;
    /**
     * <code>CURRENT_TERRITORY_CODE_120 = 373;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_120_VALUE = 373;
    /**
     * <code>CURRENT_TERRITORY_CODE_242 = 374;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_242_VALUE = 374;
    /**
     * <code>CURRENT_TERRITORY_CODE_484 = 375;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_484_VALUE = 375;
    /**
     * <code>CURRENT_TERRITORY_CODE_364 = 376;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_364_VALUE = 376;
    /**
     * <code>CURRENT_TERRITORY_CODE_R_E = 377;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_R_E_VALUE = 377;
    /**
     * <code>CURRENT_TERRITORY_CODE_124 = 378;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_124_VALUE = 378;
    /**
     * <code>CURRENT_TERRITORY_CODE_246 = 379;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_246_VALUE = 379;
    /**
     * <code>CURRENT_TERRITORY_CODE_368 = 380;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_368_VALUE = 380;
    /**
     * <code>CURRENT_TERRITORY_CODE_R_O = 381;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_R_O_VALUE = 381;
    /**
     * <code>CURRENT_TERRITORY_CODE_20 = 382;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_20_VALUE = 382;
    /**
     * <code>CURRENT_TERRITORY_CODE_R_S = 383;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_R_S_VALUE = 383;
    /**
     * <code>CURRENT_TERRITORY_CODE_24 = 384;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_24_VALUE = 384;
    /**
     * <code>CURRENT_TERRITORY_CODE_R_U = 385;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_R_U_VALUE = 385;
    /**
     * <code>CURRENT_TERRITORY_CODE_R_W = 386;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_R_W_VALUE = 386;
    /**
     * <code>CURRENT_TERRITORY_CODE_28 = 387;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_28_VALUE = 387;
    /**
     * <code>CURRENT_TERRITORY_CODE_250 = 388;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_250_VALUE = 388;
    /**
     * <code>CURRENT_TERRITORY_CODE_492 = 389;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_492_VALUE = 389;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_A = 390;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_A_VALUE = 390;
    /**
     * <code>CURRENT_TERRITORY_CODE_372 = 391;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_372_VALUE = 391;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_B = 392;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_B_VALUE = 392;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_C = 393;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_C_VALUE = 393;
    /**
     * <code>CURRENT_TERRITORY_CODE_132 = 394;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_132_VALUE = 394;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_D = 395;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_D_VALUE = 395;
    /**
     * <code>CURRENT_TERRITORY_CODE_496 = 396;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_496_VALUE = 396;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_E = 397;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_E_VALUE = 397;
    /**
     * <code>CURRENT_TERRITORY_CODE_376 = 398;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_376_VALUE = 398;
    /**
     * <code>CURRENT_TERRITORY_CODE_498 = 399;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_498_VALUE = 399;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_G = 400;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_G_VALUE = 400;
    /**
     * <code>CURRENT_TERRITORY_CODE_499 = 401;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_499_VALUE = 401;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_H = 402;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_H_VALUE = 402;
    /**
     * <code>CURRENT_TERRITORY_CODE_258 = 403;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_258_VALUE = 403;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_I = 404;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_I_VALUE = 404;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_J = 405;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_J_VALUE = 405;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_K = 406;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_K_VALUE = 406;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_L = 407;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_L_VALUE = 407;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_M = 408;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_M_VALUE = 408;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_N = 409;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_N_VALUE = 409;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_O = 410;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_O_VALUE = 410;
    /**
     * <code>CURRENT_TERRITORY_CODE_31 = 411;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_31_VALUE = 411;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_R = 412;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_R_VALUE = 412;
    /**
     * <code>CURRENT_TERRITORY_CODE_32 = 413;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_32_VALUE = 413;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_S = 414;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_S_VALUE = 414;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_T = 415;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_T_VALUE = 415;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_V = 416;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_V_VALUE = 416;
    /**
     * <code>CURRENT_TERRITORY_CODE_36 = 417;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_36_VALUE = 417;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_X = 418;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_X_VALUE = 418;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_Y = 419;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_Y_VALUE = 419;
    /**
     * <code>CURRENT_TERRITORY_CODE_S_Z = 420;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_S_Z_VALUE = 420;
    /**
     * <code>CURRENT_TERRITORY_CODE_380 = 421;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_380_VALUE = 421;
    /**
     * <code>CURRENT_TERRITORY_CODE_140 = 422;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_140_VALUE = 422;
    /**
     * <code>CURRENT_TERRITORY_CODE_262 = 423;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_262_VALUE = 423;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_C = 424;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_C_VALUE = 424;
    /**
     * <code>CURRENT_TERRITORY_CODE_384 = 425;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_384_VALUE = 425;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_D = 426;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_D_VALUE = 426;
    /**
     * <code>CURRENT_TERRITORY_CODE_144 = 427;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_144_VALUE = 427;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_F = 428;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_F_VALUE = 428;
    /**
     * <code>CURRENT_TERRITORY_CODE_266 = 429;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_266_VALUE = 429;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_G = 430;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_G_VALUE = 430;
    /**
     * <code>CURRENT_TERRITORY_CODE_388 = 431;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_388_VALUE = 431;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_H = 432;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_H_VALUE = 432;
    /**
     * <code>CURRENT_TERRITORY_CODE_268 = 433;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_268_VALUE = 433;
    /**
     * <code>CURRENT_TERRITORY_CODE_148 = 434;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_148_VALUE = 434;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_J = 435;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_J_VALUE = 435;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_K = 436;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_K_VALUE = 436;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_L = 437;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_L_VALUE = 437;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_M = 438;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_M_VALUE = 438;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_N = 439;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_N_VALUE = 439;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_O = 440;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_O_VALUE = 440;
    /**
     * <code>CURRENT_TERRITORY_CODE_40 = 441;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_40_VALUE = 441;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_R = 442;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_R_VALUE = 442;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_T = 443;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_T_VALUE = 443;
    /**
     * <code>CURRENT_TERRITORY_CODE_44 = 444;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_44_VALUE = 444;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_V = 445;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_V_VALUE = 445;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_W = 446;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_W_VALUE = 446;
    /**
     * <code>CURRENT_TERRITORY_CODE_48 = 447;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_48_VALUE = 447;
    /**
     * <code>CURRENT_TERRITORY_CODE_T_Z = 448;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_T_Z_VALUE = 448;
    /**
     * <code>CURRENT_TERRITORY_CODE_270 = 449;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_270_VALUE = 449;
    /**
     * <code>CURRENT_TERRITORY_CODE_U_A = 450;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_U_A_VALUE = 450;
    /**
     * <code>CURRENT_TERRITORY_CODE_392 = 451;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_392_VALUE = 451;
    /**
     * <code>CURRENT_TERRITORY_CODE_152 = 452;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_152_VALUE = 452;
    /**
     * <code>CURRENT_TERRITORY_CODE_276 = 453;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_276_VALUE = 453;
    /**
     * <code>CURRENT_TERRITORY_CODE_U_G = 454;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_U_G_VALUE = 454;
    /**
     * <code>CURRENT_TERRITORY_CODE_156 = 455;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_156_VALUE = 455;
    /**
     * <code>CURRENT_TERRITORY_CODE_398 = 456;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_398_VALUE = 456;
    /**
     * <code>CURRENT_TERRITORY_CODE_278 = 457;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_278_VALUE = 457;
    /**
     * <code>CURRENT_TERRITORY_CODE_158 = 458;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_158_VALUE = 458;
    /**
     * <code>CURRENT_TERRITORY_CODE_U_M = 459;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_U_M_VALUE = 459;
    /**
     * <code>CURRENT_TERRITORY_CODE_50 = 460;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_50_VALUE = 460;
    /**
     * <code>CURRENT_TERRITORY_CODE_51 = 461;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_51_VALUE = 461;
    /**
     * <code>CURRENT_TERRITORY_CODE_52 = 462;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_52_VALUE = 462;
    /**
     * <code>CURRENT_TERRITORY_CODE_U_S = 463;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_U_S_VALUE = 463;
    /**
     * <code>CURRENT_TERRITORY_CODE_56 = 464;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_56_VALUE = 464;
    /**
     * <code>CURRENT_TERRITORY_CODE_U_Y = 465;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_U_Y_VALUE = 465;
    /**
     * <code>CURRENT_TERRITORY_CODE_U_Z = 466;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_U_Z_VALUE = 466;
    /**
     * <code>CURRENT_TERRITORY_CODE_280 = 467;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_280_VALUE = 467;
    /**
     * <code>CURRENT_TERRITORY_CODE_V_A = 468;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_V_A_VALUE = 468;
    /**
     * <code>CURRENT_TERRITORY_CODE_V_C = 469;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_V_C_VALUE = 469;
    /**
     * <code>CURRENT_TERRITORY_CODE_V_E = 470;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_V_E_VALUE = 470;
    /**
     * <code>CURRENT_TERRITORY_CODE_V_G = 471;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_V_G_VALUE = 471;
    /**
     * <code>CURRENT_TERRITORY_CODE_288 = 472;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_288_VALUE = 472;
    /**
     * <code>CURRENT_TERRITORY_CODE_V_I = 473;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_V_I_VALUE = 473;
    /**
     * <code>CURRENT_TERRITORY_CODE_V_N = 474;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_V_N_VALUE = 474;
    /**
     * <code>CURRENT_TERRITORY_CODE_64 = 475;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_64_VALUE = 475;
    /**
     * <code>CURRENT_TERRITORY_CODE_V_U = 476;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_V_U_VALUE = 476;
    /**
     * <code>CURRENT_TERRITORY_CODE_68 = 477;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_68_VALUE = 477;
    /**
     * <code>CURRENT_TERRITORY_CODE_170 = 478;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_170_VALUE = 478;
    /**
     * <code>CURRENT_TERRITORY_CODE_174 = 479;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_174_VALUE = 479;
    /**
     * <code>CURRENT_TERRITORY_CODE_W_F = 480;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_W_F_VALUE = 480;
    /**
     * <code>CURRENT_TERRITORY_CODE_296 = 481;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_296_VALUE = 481;
    /**
     * <code>CURRENT_TERRITORY_CODE_178 = 482;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_178_VALUE = 482;
    /**
     * <code>CURRENT_TERRITORY_CODE_70 = 483;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_70_VALUE = 483;
    /**
     * <code>CURRENT_TERRITORY_CODE_72 = 484;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_72_VALUE = 484;
    /**
     * <code>CURRENT_TERRITORY_CODE_W_S = 485;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_W_S_VALUE = 485;
    /**
     * <code>CURRENT_TERRITORY_CODE_76 = 486;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_76_VALUE = 486;
    /**
     * <code>CURRENT_TERRITORY_CODE_180 = 487;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_180_VALUE = 487;
    /**
     * <code>CURRENT_TERRITORY_CODE_188 = 488;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_188_VALUE = 488;
    /**
     * <code>CURRENT_TERRITORY_CODE_X_K = 489;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_X_K_VALUE = 489;
    /**
     * <code>CURRENT_TERRITORY_CODE_84 = 490;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_84_VALUE = 490;
    /**
     * <code>CURRENT_TERRITORY_CODE_191 = 491;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_191_VALUE = 491;
    /**
     * <code>CURRENT_TERRITORY_CODE_192 = 492;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_192_VALUE = 492;
    /**
     * <code>CURRENT_TERRITORY_CODE_Y_E = 493;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_Y_E_VALUE = 493;
    /**
     * <code>CURRENT_TERRITORY_CODE_196 = 494;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_196_VALUE = 494;
    /**
     * <code>CURRENT_TERRITORY_CODE_90 = 495;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_90_VALUE = 495;
    /**
     * <code>CURRENT_TERRITORY_CODE_Y_T = 496;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_Y_T_VALUE = 496;
    /**
     * <code>CURRENT_TERRITORY_CODE_96 = 497;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_96_VALUE = 497;
    /**
     * <code>CURRENT_TERRITORY_CODE_Z_A = 498;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_Z_A_VALUE = 498;
    /**
     * <code>CURRENT_TERRITORY_CODE_WORLDWIDE = 499;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_WORLDWIDE_VALUE = 499;
    /**
     * <code>CURRENT_TERRITORY_CODE_Z_M = 500;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_Z_M_VALUE = 500;
    /**
     * <code>CURRENT_TERRITORY_CODE_Z_W = 501;</code>
     */
    public static final int CURRENT_TERRITORY_CODE_Z_W_VALUE = 501;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CurrentTerritoryCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CurrentTerritoryCode forNumber(int value) {
      switch (value) {
        case 0: return CURRENT_TERRITORY_CODE_A_D;
        case 1: return CURRENT_TERRITORY_CODE_A_E;
        case 2: return CURRENT_TERRITORY_CODE_A_F;
        case 3: return CURRENT_TERRITORY_CODE_A_G;
        case 4: return CURRENT_TERRITORY_CODE_A_I;
        case 5: return CURRENT_TERRITORY_CODE_A_L;
        case 6: return CURRENT_TERRITORY_CODE_A_M;
        case 7: return CURRENT_TERRITORY_CODE_A_N;
        case 8: return CURRENT_TERRITORY_CODE_A_O;
        case 9: return CURRENT_TERRITORY_CODE_A_Q;
        case 10: return CURRENT_TERRITORY_CODE_A_R;
        case 11: return CURRENT_TERRITORY_CODE_A_S;
        case 12: return CURRENT_TERRITORY_CODE_A_T;
        case 13: return CURRENT_TERRITORY_CODE_A_U;
        case 14: return CURRENT_TERRITORY_CODE_4;
        case 15: return CURRENT_TERRITORY_CODE_A_W;
        case 16: return CURRENT_TERRITORY_CODE_A_X;
        case 17: return CURRENT_TERRITORY_CODE_8;
        case 18: return CURRENT_TERRITORY_CODE_800;
        case 19: return CURRENT_TERRITORY_CODE_A_Z;
        case 20: return CURRENT_TERRITORY_CODE_804;
        case 21: return CURRENT_TERRITORY_CODE_B_A;
        case 22: return CURRENT_TERRITORY_CODE_807;
        case 23: return CURRENT_TERRITORY_CODE_B_B;
        case 24: return CURRENT_TERRITORY_CODE_B_D;
        case 25: return CURRENT_TERRITORY_CODE_B_E;
        case 26: return CURRENT_TERRITORY_CODE_B_F;
        case 27: return CURRENT_TERRITORY_CODE_B_G;
        case 28: return CURRENT_TERRITORY_CODE_B_H;
        case 29: return CURRENT_TERRITORY_CODE_B_I;
        case 30: return CURRENT_TERRITORY_CODE_B_J;
        case 31: return CURRENT_TERRITORY_CODE_B_L;
        case 32: return CURRENT_TERRITORY_CODE_B_M;
        case 33: return CURRENT_TERRITORY_CODE_B_N;
        case 34: return CURRENT_TERRITORY_CODE_B_O;
        case 35: return CURRENT_TERRITORY_CODE_B_Q;
        case 36: return CURRENT_TERRITORY_CODE_B_R;
        case 37: return CURRENT_TERRITORY_CODE_B_S;
        case 38: return CURRENT_TERRITORY_CODE_B_T;
        case 39: return CURRENT_TERRITORY_CODE_B_V;
        case 40: return CURRENT_TERRITORY_CODE_B_W;
        case 41: return CURRENT_TERRITORY_CODE_B_Y;
        case 42: return CURRENT_TERRITORY_CODE_810;
        case 43: return CURRENT_TERRITORY_CODE_B_Z;
        case 44: return CURRENT_TERRITORY_CODE_C_A;
        case 45: return CURRENT_TERRITORY_CODE_818;
        case 46: return CURRENT_TERRITORY_CODE_C_C;
        case 47: return CURRENT_TERRITORY_CODE_C_D;
        case 48: return CURRENT_TERRITORY_CODE_C_F;
        case 49: return CURRENT_TERRITORY_CODE_C_G;
        case 50: return CURRENT_TERRITORY_CODE_C_H;
        case 51: return CURRENT_TERRITORY_CODE_C_I;
        case 52: return CURRENT_TERRITORY_CODE_C_K;
        case 53: return CURRENT_TERRITORY_CODE_2100;
        case 54: return CURRENT_TERRITORY_CODE_C_L;
        case 55: return CURRENT_TERRITORY_CODE_C_M;
        case 56: return CURRENT_TERRITORY_CODE_C_N;
        case 57: return CURRENT_TERRITORY_CODE_C_O;
        case 58: return CURRENT_TERRITORY_CODE_C_R;
        case 59: return CURRENT_TERRITORY_CODE_C_S;
        case 60: return CURRENT_TERRITORY_CODE_C_U;
        case 61: return CURRENT_TERRITORY_CODE_C_V;
        case 62: return CURRENT_TERRITORY_CODE_C_W;
        case 63: return CURRENT_TERRITORY_CODE_C_X;
        case 64: return CURRENT_TERRITORY_CODE_C_Y;
        case 65: return CURRENT_TERRITORY_CODE_C_Z;
        case 66: return CURRENT_TERRITORY_CODE_702;
        case 67: return CURRENT_TERRITORY_CODE_703;
        case 68: return CURRENT_TERRITORY_CODE_704;
        case 69: return CURRENT_TERRITORY_CODE_705;
        case 70: return CURRENT_TERRITORY_CODE_826;
        case 71: return CURRENT_TERRITORY_CODE_706;
        case 72: return CURRENT_TERRITORY_CODE_D_E;
        case 73: return CURRENT_TERRITORY_CODE_D_J;
        case 74: return CURRENT_TERRITORY_CODE_D_K;
        case 75: return CURRENT_TERRITORY_CODE_2111;
        case 76: return CURRENT_TERRITORY_CODE_D_M;
        case 77: return CURRENT_TERRITORY_CODE_2110;
        case 78: return CURRENT_TERRITORY_CODE_D_O;
        case 79: return CURRENT_TERRITORY_CODE_2108;
        case 80: return CURRENT_TERRITORY_CODE_2107;
        case 81: return CURRENT_TERRITORY_CODE_2106;
        case 82: return CURRENT_TERRITORY_CODE_2105;
        case 83: return CURRENT_TERRITORY_CODE_2104;
        case 84: return CURRENT_TERRITORY_CODE_2103;
        case 85: return CURRENT_TERRITORY_CODE_D_Z;
        case 86: return CURRENT_TERRITORY_CODE_710;
        case 87: return CURRENT_TERRITORY_CODE_2102;
        case 88: return CURRENT_TERRITORY_CODE_2101;
        case 89: return CURRENT_TERRITORY_CODE_834;
        case 90: return CURRENT_TERRITORY_CODE_716;
        case 91: return CURRENT_TERRITORY_CODE_E_C;
        case 92: return CURRENT_TERRITORY_CODE_2109;
        case 93: return CURRENT_TERRITORY_CODE_E_E;
        case 94: return CURRENT_TERRITORY_CODE_E_G;
        case 95: return CURRENT_TERRITORY_CODE_E_H;
        case 96: return CURRENT_TERRITORY_CODE_2122;
        case 97: return CURRENT_TERRITORY_CODE_2121;
        case 98: return CURRENT_TERRITORY_CODE_2120;
        case 99: return CURRENT_TERRITORY_CODE_E_R;
        case 100: return CURRENT_TERRITORY_CODE_E_S;
        case 101: return CURRENT_TERRITORY_CODE_E_T;
        case 102: return CURRENT_TERRITORY_CODE_2119;
        case 103: return CURRENT_TERRITORY_CODE_2118;
        case 104: return CURRENT_TERRITORY_CODE_2117;
        case 105: return CURRENT_TERRITORY_CODE_2116;
        case 106: return CURRENT_TERRITORY_CODE_840;
        case 107: return CURRENT_TERRITORY_CODE_2115;
        case 108: return CURRENT_TERRITORY_CODE_720;
        case 109: return CURRENT_TERRITORY_CODE_2114;
        case 110: return CURRENT_TERRITORY_CODE_600;
        case 111: return CURRENT_TERRITORY_CODE_2113;
        case 112: return CURRENT_TERRITORY_CODE_2112;
        case 113: return CURRENT_TERRITORY_CODE_724;
        case 114: return CURRENT_TERRITORY_CODE_604;
        case 115: return CURRENT_TERRITORY_CODE_728;
        case 116: return CURRENT_TERRITORY_CODE_608;
        case 117: return CURRENT_TERRITORY_CODE_729;
        case 118: return CURRENT_TERRITORY_CODE_F_I;
        case 119: return CURRENT_TERRITORY_CODE_F_J;
        case 120: return CURRENT_TERRITORY_CODE_F_K;
        case 121: return CURRENT_TERRITORY_CODE_F_M;
        case 122: return CURRENT_TERRITORY_CODE_2133;
        case 123: return CURRENT_TERRITORY_CODE_F_O;
        case 124: return CURRENT_TERRITORY_CODE_2132;
        case 125: return CURRENT_TERRITORY_CODE_2131;
        case 126: return CURRENT_TERRITORY_CODE_2130;
        case 127: return CURRENT_TERRITORY_CODE_F_R;
        case 128: return CURRENT_TERRITORY_CODE_2129;
        case 129: return CURRENT_TERRITORY_CODE_2128;
        case 130: return CURRENT_TERRITORY_CODE_2127;
        case 131: return CURRENT_TERRITORY_CODE_2126;
        case 132: return CURRENT_TERRITORY_CODE_2125;
        case 133: return CURRENT_TERRITORY_CODE_732;
        case 134: return CURRENT_TERRITORY_CODE_2124;
        case 135: return CURRENT_TERRITORY_CODE_854;
        case 136: return CURRENT_TERRITORY_CODE_2123;
        case 137: return CURRENT_TERRITORY_CODE_G_A;
        case 138: return CURRENT_TERRITORY_CODE_736;
        case 139: return CURRENT_TERRITORY_CODE_G_B;
        case 140: return CURRENT_TERRITORY_CODE_616;
        case 141: return CURRENT_TERRITORY_CODE_858;
        case 142: return CURRENT_TERRITORY_CODE_G_D;
        case 143: return CURRENT_TERRITORY_CODE_G_E;
        case 144: return CURRENT_TERRITORY_CODE_G_F;
        case 145: return CURRENT_TERRITORY_CODE_G_G;
        case 146: return CURRENT_TERRITORY_CODE_G_H;
        case 147: return CURRENT_TERRITORY_CODE_G_I;
        case 148: return CURRENT_TERRITORY_CODE_G_L;
        case 149: return CURRENT_TERRITORY_CODE_G_M;
        case 150: return CURRENT_TERRITORY_CODE_G_N;
        case 151: return CURRENT_TERRITORY_CODE_G_P;
        case 152: return CURRENT_TERRITORY_CODE_G_Q;
        case 153: return CURRENT_TERRITORY_CODE_G_R;
        case 154: return CURRENT_TERRITORY_CODE_E_S__MINUS___M_L;
        case 155: return CURRENT_TERRITORY_CODE_G_S;
        case 156: return CURRENT_TERRITORY_CODE_G_T;
        case 157: return CURRENT_TERRITORY_CODE_G_U;
        case 158: return CURRENT_TERRITORY_CODE_G_W;
        case 159: return CURRENT_TERRITORY_CODE_G_Y;
        case 160: return CURRENT_TERRITORY_CODE_860;
        case 161: return CURRENT_TERRITORY_CODE_740;
        case 162: return CURRENT_TERRITORY_CODE_620;
        case 163: return CURRENT_TERRITORY_CODE_862;
        case 164: return CURRENT_TERRITORY_CODE_2136;
        case 165: return CURRENT_TERRITORY_CODE_2134;
        case 166: return CURRENT_TERRITORY_CODE_624;
        case 167: return CURRENT_TERRITORY_CODE_504;
        case 168: return CURRENT_TERRITORY_CODE_626;
        case 169: return CURRENT_TERRITORY_CODE_748;
        case 170: return CURRENT_TERRITORY_CODE_508;
        case 171: return CURRENT_TERRITORY_CODE_H_K;
        case 172: return CURRENT_TERRITORY_CODE_H_M;
        case 173: return CURRENT_TERRITORY_CODE_H_N;
        case 174: return CURRENT_TERRITORY_CODE_H_R;
        case 175: return CURRENT_TERRITORY_CODE_H_T;
        case 176: return CURRENT_TERRITORY_CODE_H_U;
        case 177: return CURRENT_TERRITORY_CODE_630;
        case 178: return CURRENT_TERRITORY_CODE_752;
        case 179: return CURRENT_TERRITORY_CODE_512;
        case 180: return CURRENT_TERRITORY_CODE_634;
        case 181: return CURRENT_TERRITORY_CODE_756;
        case 182: return CURRENT_TERRITORY_CODE_516;
        case 183: return CURRENT_TERRITORY_CODE_I_D;
        case 184: return CURRENT_TERRITORY_CODE_I_E;
        case 185: return CURRENT_TERRITORY_CODE_I_L;
        case 186: return CURRENT_TERRITORY_CODE_I_M;
        case 187: return CURRENT_TERRITORY_CODE_I_N;
        case 188: return CURRENT_TERRITORY_CODE_I_O;
        case 189: return CURRENT_TERRITORY_CODE_I_Q;
        case 190: return CURRENT_TERRITORY_CODE_I_R;
        case 191: return CURRENT_TERRITORY_CODE_I_S;
        case 192: return CURRENT_TERRITORY_CODE_I_T;
        case 193: return CURRENT_TERRITORY_CODE_760;
        case 194: return CURRENT_TERRITORY_CODE_882;
        case 195: return CURRENT_TERRITORY_CODE_520;
        case 196: return CURRENT_TERRITORY_CODE_762;
        case 197: return CURRENT_TERRITORY_CODE_400;
        case 198: return CURRENT_TERRITORY_CODE_642;
        case 199: return CURRENT_TERRITORY_CODE_643;
        case 200: return CURRENT_TERRITORY_CODE_764;
        case 201: return CURRENT_TERRITORY_CODE_886;
        case 202: return CURRENT_TERRITORY_CODE_524;
        case 203: return CURRENT_TERRITORY_CODE_887;
        case 204: return CURRENT_TERRITORY_CODE_404;
        case 205: return CURRENT_TERRITORY_CODE_646;
        case 206: return CURRENT_TERRITORY_CODE_768;
        case 207: return CURRENT_TERRITORY_CODE_J_E;
        case 208: return CURRENT_TERRITORY_CODE_528;
        case 209: return CURRENT_TERRITORY_CODE_408;
        case 210: return CURRENT_TERRITORY_CODE_J_M;
        case 211: return CURRENT_TERRITORY_CODE_J_O;
        case 212: return CURRENT_TERRITORY_CODE_J_P;
        case 213: return CURRENT_TERRITORY_CODE_890;
        case 214: return CURRENT_TERRITORY_CODE_891;
        case 215: return CURRENT_TERRITORY_CODE_410;
        case 216: return CURRENT_TERRITORY_CODE_894;
        case 217: return CURRENT_TERRITORY_CODE_776;
        case 218: return CURRENT_TERRITORY_CODE_414;
        case 219: return CURRENT_TERRITORY_CODE_K_E;
        case 220: return CURRENT_TERRITORY_CODE_417;
        case 221: return CURRENT_TERRITORY_CODE_659;
        case 222: return CURRENT_TERRITORY_CODE_418;
        case 223: return CURRENT_TERRITORY_CODE_K_G;
        case 224: return CURRENT_TERRITORY_CODE_K_H;
        case 225: return CURRENT_TERRITORY_CODE_K_I;
        case 226: return CURRENT_TERRITORY_CODE_K_M;
        case 227: return CURRENT_TERRITORY_CODE_K_N;
        case 228: return CURRENT_TERRITORY_CODE_K_P;
        case 229: return CURRENT_TERRITORY_CODE_K_R;
        case 230: return CURRENT_TERRITORY_CODE_K_W;
        case 231: return CURRENT_TERRITORY_CODE_K_Y;
        case 232: return CURRENT_TERRITORY_CODE_K_Z;
        case 233: return CURRENT_TERRITORY_CODE_780;
        case 234: return CURRENT_TERRITORY_CODE_540;
        case 235: return CURRENT_TERRITORY_CODE_662;
        case 236: return CURRENT_TERRITORY_CODE_300;
        case 237: return CURRENT_TERRITORY_CODE_784;
        case 238: return CURRENT_TERRITORY_CODE_422;
        case 239: return CURRENT_TERRITORY_CODE_L_A;
        case 240: return CURRENT_TERRITORY_CODE_L_B;
        case 241: return CURRENT_TERRITORY_CODE_L_C;
        case 242: return CURRENT_TERRITORY_CODE_788;
        case 243: return CURRENT_TERRITORY_CODE_426;
        case 244: return CURRENT_TERRITORY_CODE_548;
        case 245: return CURRENT_TERRITORY_CODE_428;
        case 246: return CURRENT_TERRITORY_CODE_308;
        case 247: return CURRENT_TERRITORY_CODE_L_I;
        case 248: return CURRENT_TERRITORY_CODE_L_K;
        case 249: return CURRENT_TERRITORY_CODE_L_R;
        case 250: return CURRENT_TERRITORY_CODE_L_S;
        case 251: return CURRENT_TERRITORY_CODE_L_T;
        case 252: return CURRENT_TERRITORY_CODE_L_U;
        case 253: return CURRENT_TERRITORY_CODE_L_V;
        case 254: return CURRENT_TERRITORY_CODE_L_Y;
        case 255: return CURRENT_TERRITORY_CODE_670;
        case 256: return CURRENT_TERRITORY_CODE_792;
        case 257: return CURRENT_TERRITORY_CODE_430;
        case 258: return CURRENT_TERRITORY_CODE_674;
        case 259: return CURRENT_TERRITORY_CODE_795;
        case 260: return CURRENT_TERRITORY_CODE_M_A;
        case 261: return CURRENT_TERRITORY_CODE_554;
        case 262: return CURRENT_TERRITORY_CODE_434;
        case 263: return CURRENT_TERRITORY_CODE_M_C;
        case 264: return CURRENT_TERRITORY_CODE_798;
        case 265: return CURRENT_TERRITORY_CODE_M_D;
        case 266: return CURRENT_TERRITORY_CODE_678;
        case 267: return CURRENT_TERRITORY_CODE_M_E;
        case 268: return CURRENT_TERRITORY_CODE_558;
        case 269: return CURRENT_TERRITORY_CODE_M_F;
        case 270: return CURRENT_TERRITORY_CODE_438;
        case 271: return CURRENT_TERRITORY_CODE_M_G;
        case 272: return CURRENT_TERRITORY_CODE_M_H;
        case 273: return CURRENT_TERRITORY_CODE_M_K;
        case 274: return CURRENT_TERRITORY_CODE_M_L;
        case 275: return CURRENT_TERRITORY_CODE_M_M;
        case 276: return CURRENT_TERRITORY_CODE_M_N;
        case 277: return CURRENT_TERRITORY_CODE_M_O;
        case 278: return CURRENT_TERRITORY_CODE_M_P;
        case 279: return CURRENT_TERRITORY_CODE_M_Q;
        case 280: return CURRENT_TERRITORY_CODE_M_R;
        case 281: return CURRENT_TERRITORY_CODE_M_S;
        case 282: return CURRENT_TERRITORY_CODE_M_T;
        case 283: return CURRENT_TERRITORY_CODE_M_U;
        case 284: return CURRENT_TERRITORY_CODE_M_V;
        case 285: return CURRENT_TERRITORY_CODE_M_W;
        case 286: return CURRENT_TERRITORY_CODE_M_X;
        case 287: return CURRENT_TERRITORY_CODE_M_Y;
        case 288: return CURRENT_TERRITORY_CODE_M_Z;
        case 289: return CURRENT_TERRITORY_CODE_440;
        case 290: return CURRENT_TERRITORY_CODE_682;
        case 291: return CURRENT_TERRITORY_CODE_320;
        case 292: return CURRENT_TERRITORY_CODE_562;
        case 293: return CURRENT_TERRITORY_CODE_200;
        case 294: return CURRENT_TERRITORY_CODE_442;
        case 295: return CURRENT_TERRITORY_CODE_N_A;
        case 296: return CURRENT_TERRITORY_CODE_686;
        case 297: return CURRENT_TERRITORY_CODE_N_C;
        case 298: return CURRENT_TERRITORY_CODE_203;
        case 299: return CURRENT_TERRITORY_CODE_324;
        case 300: return CURRENT_TERRITORY_CODE_566;
        case 301: return CURRENT_TERRITORY_CODE_204;
        case 302: return CURRENT_TERRITORY_CODE_688;
        case 303: return CURRENT_TERRITORY_CODE_N_E;
        case 304: return CURRENT_TERRITORY_CODE_N_F;
        case 305: return CURRENT_TERRITORY_CODE_N_G;
        case 306: return CURRENT_TERRITORY_CODE_328;
        case 307: return CURRENT_TERRITORY_CODE_208;
        case 308: return CURRENT_TERRITORY_CODE_N_I;
        case 309: return CURRENT_TERRITORY_CODE_N_L;
        case 310: return CURRENT_TERRITORY_CODE_N_O;
        case 311: return CURRENT_TERRITORY_CODE_N_P;
        case 312: return CURRENT_TERRITORY_CODE_N_R;
        case 313: return CURRENT_TERRITORY_CODE_N_U;
        case 314: return CURRENT_TERRITORY_CODE_N_Z;
        case 315: return CURRENT_TERRITORY_CODE_690;
        case 316: return CURRENT_TERRITORY_CODE_450;
        case 317: return CURRENT_TERRITORY_CODE_694;
        case 318: return CURRENT_TERRITORY_CODE_332;
        case 319: return CURRENT_TERRITORY_CODE_212;
        case 320: return CURRENT_TERRITORY_CODE_454;
        case 321: return CURRENT_TERRITORY_CODE_214;
        case 322: return CURRENT_TERRITORY_CODE_336;
        case 323: return CURRENT_TERRITORY_CODE_578;
        case 324: return CURRENT_TERRITORY_CODE_458;
        case 325: return CURRENT_TERRITORY_CODE_218;
        case 326: return CURRENT_TERRITORY_CODE_O_M;
        case 327: return CURRENT_TERRITORY_CODE_340;
        case 328: return CURRENT_TERRITORY_CODE_462;
        case 329: return CURRENT_TERRITORY_CODE_583;
        case 330: return CURRENT_TERRITORY_CODE_P_A;
        case 331: return CURRENT_TERRITORY_CODE_100;
        case 332: return CURRENT_TERRITORY_CODE_584;
        case 333: return CURRENT_TERRITORY_CODE_222;
        case 334: return CURRENT_TERRITORY_CODE_585;
        case 335: return CURRENT_TERRITORY_CODE_344;
        case 336: return CURRENT_TERRITORY_CODE_586;
        case 337: return CURRENT_TERRITORY_CODE_466;
        case 338: return CURRENT_TERRITORY_CODE_P_E;
        case 339: return CURRENT_TERRITORY_CODE_104;
        case 340: return CURRENT_TERRITORY_CODE_P_F;
        case 341: return CURRENT_TERRITORY_CODE_226;
        case 342: return CURRENT_TERRITORY_CODE_P_G;
        case 343: return CURRENT_TERRITORY_CODE_348;
        case 344: return CURRENT_TERRITORY_CODE_P_H;
        case 345: return CURRENT_TERRITORY_CODE_108;
        case 346: return CURRENT_TERRITORY_CODE_P_K;
        case 347: return CURRENT_TERRITORY_CODE_P_L;
        case 348: return CURRENT_TERRITORY_CODE_P_M;
        case 349: return CURRENT_TERRITORY_CODE_P_N;
        case 350: return CURRENT_TERRITORY_CODE_P_R;
        case 351: return CURRENT_TERRITORY_CODE_P_S;
        case 352: return CURRENT_TERRITORY_CODE_P_T;
        case 353: return CURRENT_TERRITORY_CODE_P_W;
        case 354: return CURRENT_TERRITORY_CODE_P_Y;
        case 355: return CURRENT_TERRITORY_CODE_470;
        case 356: return CURRENT_TERRITORY_CODE_591;
        case 357: return CURRENT_TERRITORY_CODE_230;
        case 358: return CURRENT_TERRITORY_CODE_Q_A;
        case 359: return CURRENT_TERRITORY_CODE_231;
        case 360: return CURRENT_TERRITORY_CODE_352;
        case 361: return CURRENT_TERRITORY_CODE_232;
        case 362: return CURRENT_TERRITORY_CODE_112;
        case 363: return CURRENT_TERRITORY_CODE_233;
        case 364: return CURRENT_TERRITORY_CODE_E_S__MINUS___C_E;
        case 365: return CURRENT_TERRITORY_CODE_356;
        case 366: return CURRENT_TERRITORY_CODE_598;
        case 367: return CURRENT_TERRITORY_CODE_478;
        case 368: return CURRENT_TERRITORY_CODE_116;
        case 369: return CURRENT_TERRITORY_CODE_E_S__MINUS___C_N;
        case 370: return CURRENT_TERRITORY_CODE_12;
        case 371: return CURRENT_TERRITORY_CODE_480;
        case 372: return CURRENT_TERRITORY_CODE_360;
        case 373: return CURRENT_TERRITORY_CODE_120;
        case 374: return CURRENT_TERRITORY_CODE_242;
        case 375: return CURRENT_TERRITORY_CODE_484;
        case 376: return CURRENT_TERRITORY_CODE_364;
        case 377: return CURRENT_TERRITORY_CODE_R_E;
        case 378: return CURRENT_TERRITORY_CODE_124;
        case 379: return CURRENT_TERRITORY_CODE_246;
        case 380: return CURRENT_TERRITORY_CODE_368;
        case 381: return CURRENT_TERRITORY_CODE_R_O;
        case 382: return CURRENT_TERRITORY_CODE_20;
        case 383: return CURRENT_TERRITORY_CODE_R_S;
        case 384: return CURRENT_TERRITORY_CODE_24;
        case 385: return CURRENT_TERRITORY_CODE_R_U;
        case 386: return CURRENT_TERRITORY_CODE_R_W;
        case 387: return CURRENT_TERRITORY_CODE_28;
        case 388: return CURRENT_TERRITORY_CODE_250;
        case 389: return CURRENT_TERRITORY_CODE_492;
        case 390: return CURRENT_TERRITORY_CODE_S_A;
        case 391: return CURRENT_TERRITORY_CODE_372;
        case 392: return CURRENT_TERRITORY_CODE_S_B;
        case 393: return CURRENT_TERRITORY_CODE_S_C;
        case 394: return CURRENT_TERRITORY_CODE_132;
        case 395: return CURRENT_TERRITORY_CODE_S_D;
        case 396: return CURRENT_TERRITORY_CODE_496;
        case 397: return CURRENT_TERRITORY_CODE_S_E;
        case 398: return CURRENT_TERRITORY_CODE_376;
        case 399: return CURRENT_TERRITORY_CODE_498;
        case 400: return CURRENT_TERRITORY_CODE_S_G;
        case 401: return CURRENT_TERRITORY_CODE_499;
        case 402: return CURRENT_TERRITORY_CODE_S_H;
        case 403: return CURRENT_TERRITORY_CODE_258;
        case 404: return CURRENT_TERRITORY_CODE_S_I;
        case 405: return CURRENT_TERRITORY_CODE_S_J;
        case 406: return CURRENT_TERRITORY_CODE_S_K;
        case 407: return CURRENT_TERRITORY_CODE_S_L;
        case 408: return CURRENT_TERRITORY_CODE_S_M;
        case 409: return CURRENT_TERRITORY_CODE_S_N;
        case 410: return CURRENT_TERRITORY_CODE_S_O;
        case 411: return CURRENT_TERRITORY_CODE_31;
        case 412: return CURRENT_TERRITORY_CODE_S_R;
        case 413: return CURRENT_TERRITORY_CODE_32;
        case 414: return CURRENT_TERRITORY_CODE_S_S;
        case 415: return CURRENT_TERRITORY_CODE_S_T;
        case 416: return CURRENT_TERRITORY_CODE_S_V;
        case 417: return CURRENT_TERRITORY_CODE_36;
        case 418: return CURRENT_TERRITORY_CODE_S_X;
        case 419: return CURRENT_TERRITORY_CODE_S_Y;
        case 420: return CURRENT_TERRITORY_CODE_S_Z;
        case 421: return CURRENT_TERRITORY_CODE_380;
        case 422: return CURRENT_TERRITORY_CODE_140;
        case 423: return CURRENT_TERRITORY_CODE_262;
        case 424: return CURRENT_TERRITORY_CODE_T_C;
        case 425: return CURRENT_TERRITORY_CODE_384;
        case 426: return CURRENT_TERRITORY_CODE_T_D;
        case 427: return CURRENT_TERRITORY_CODE_144;
        case 428: return CURRENT_TERRITORY_CODE_T_F;
        case 429: return CURRENT_TERRITORY_CODE_266;
        case 430: return CURRENT_TERRITORY_CODE_T_G;
        case 431: return CURRENT_TERRITORY_CODE_388;
        case 432: return CURRENT_TERRITORY_CODE_T_H;
        case 433: return CURRENT_TERRITORY_CODE_268;
        case 434: return CURRENT_TERRITORY_CODE_148;
        case 435: return CURRENT_TERRITORY_CODE_T_J;
        case 436: return CURRENT_TERRITORY_CODE_T_K;
        case 437: return CURRENT_TERRITORY_CODE_T_L;
        case 438: return CURRENT_TERRITORY_CODE_T_M;
        case 439: return CURRENT_TERRITORY_CODE_T_N;
        case 440: return CURRENT_TERRITORY_CODE_T_O;
        case 441: return CURRENT_TERRITORY_CODE_40;
        case 442: return CURRENT_TERRITORY_CODE_T_R;
        case 443: return CURRENT_TERRITORY_CODE_T_T;
        case 444: return CURRENT_TERRITORY_CODE_44;
        case 445: return CURRENT_TERRITORY_CODE_T_V;
        case 446: return CURRENT_TERRITORY_CODE_T_W;
        case 447: return CURRENT_TERRITORY_CODE_48;
        case 448: return CURRENT_TERRITORY_CODE_T_Z;
        case 449: return CURRENT_TERRITORY_CODE_270;
        case 450: return CURRENT_TERRITORY_CODE_U_A;
        case 451: return CURRENT_TERRITORY_CODE_392;
        case 452: return CURRENT_TERRITORY_CODE_152;
        case 453: return CURRENT_TERRITORY_CODE_276;
        case 454: return CURRENT_TERRITORY_CODE_U_G;
        case 455: return CURRENT_TERRITORY_CODE_156;
        case 456: return CURRENT_TERRITORY_CODE_398;
        case 457: return CURRENT_TERRITORY_CODE_278;
        case 458: return CURRENT_TERRITORY_CODE_158;
        case 459: return CURRENT_TERRITORY_CODE_U_M;
        case 460: return CURRENT_TERRITORY_CODE_50;
        case 461: return CURRENT_TERRITORY_CODE_51;
        case 462: return CURRENT_TERRITORY_CODE_52;
        case 463: return CURRENT_TERRITORY_CODE_U_S;
        case 464: return CURRENT_TERRITORY_CODE_56;
        case 465: return CURRENT_TERRITORY_CODE_U_Y;
        case 466: return CURRENT_TERRITORY_CODE_U_Z;
        case 467: return CURRENT_TERRITORY_CODE_280;
        case 468: return CURRENT_TERRITORY_CODE_V_A;
        case 469: return CURRENT_TERRITORY_CODE_V_C;
        case 470: return CURRENT_TERRITORY_CODE_V_E;
        case 471: return CURRENT_TERRITORY_CODE_V_G;
        case 472: return CURRENT_TERRITORY_CODE_288;
        case 473: return CURRENT_TERRITORY_CODE_V_I;
        case 474: return CURRENT_TERRITORY_CODE_V_N;
        case 475: return CURRENT_TERRITORY_CODE_64;
        case 476: return CURRENT_TERRITORY_CODE_V_U;
        case 477: return CURRENT_TERRITORY_CODE_68;
        case 478: return CURRENT_TERRITORY_CODE_170;
        case 479: return CURRENT_TERRITORY_CODE_174;
        case 480: return CURRENT_TERRITORY_CODE_W_F;
        case 481: return CURRENT_TERRITORY_CODE_296;
        case 482: return CURRENT_TERRITORY_CODE_178;
        case 483: return CURRENT_TERRITORY_CODE_70;
        case 484: return CURRENT_TERRITORY_CODE_72;
        case 485: return CURRENT_TERRITORY_CODE_W_S;
        case 486: return CURRENT_TERRITORY_CODE_76;
        case 487: return CURRENT_TERRITORY_CODE_180;
        case 488: return CURRENT_TERRITORY_CODE_188;
        case 489: return CURRENT_TERRITORY_CODE_X_K;
        case 490: return CURRENT_TERRITORY_CODE_84;
        case 491: return CURRENT_TERRITORY_CODE_191;
        case 492: return CURRENT_TERRITORY_CODE_192;
        case 493: return CURRENT_TERRITORY_CODE_Y_E;
        case 494: return CURRENT_TERRITORY_CODE_196;
        case 495: return CURRENT_TERRITORY_CODE_90;
        case 496: return CURRENT_TERRITORY_CODE_Y_T;
        case 497: return CURRENT_TERRITORY_CODE_96;
        case 498: return CURRENT_TERRITORY_CODE_Z_A;
        case 499: return CURRENT_TERRITORY_CODE_WORLDWIDE;
        case 500: return CURRENT_TERRITORY_CODE_Z_M;
        case 501: return CURRENT_TERRITORY_CODE_Z_W;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CurrentTerritoryCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CurrentTerritoryCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CurrentTerritoryCode>() {
            public CurrentTerritoryCode findValueByNumber(int number) {
              return CurrentTerritoryCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(38);
    }

    private static final CurrentTerritoryCode[] VALUES = values();

    public static CurrentTerritoryCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CurrentTerritoryCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.CurrentTerritoryCode)
  }

  /**
   * Protobuf enum {@code avs.DanceStyle}
   */
  public enum DanceStyle
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DANCE_STYLE_CHARLESTON = 0;</code>
     */
    DANCE_STYLE_CHARLESTON(0),
    /**
     * <code>DANCE_STYLE_SAMBA = 1;</code>
     */
    DANCE_STYLE_SAMBA(1),
    /**
     * <code>DANCE_STYLE_WATUSI = 2;</code>
     */
    DANCE_STYLE_WATUSI(2),
    /**
     * <code>DANCE_STYLE_SQUARE_DANCE = 3;</code>
     */
    DANCE_STYLE_SQUARE_DANCE(3),
    /**
     * <code>DANCE_STYLE_DOUGIE = 4;</code>
     */
    DANCE_STYLE_DOUGIE(4),
    /**
     * <code>DANCE_STYLE_TURFING = 5;</code>
     */
    DANCE_STYLE_TURFING(5),
    /**
     * <code>DANCE_STYLE_CONTRADANCE = 6;</code>
     */
    DANCE_STYLE_CONTRADANCE(6),
    /**
     * <code>DANCE_STYLE_BOLERO = 7;</code>
     */
    DANCE_STYLE_BOLERO(7),
    /**
     * <code>DANCE_STYLE_POLONAISE = 8;</code>
     */
    DANCE_STYLE_POLONAISE(8),
    /**
     * <code>DANCE_STYLE_QUICKSTEP = 9;</code>
     */
    DANCE_STYLE_QUICKSTEP(9),
    /**
     * <code>DANCE_STYLE_DANSBAND = 10;</code>
     */
    DANCE_STYLE_DANSBAND(10),
    /**
     * <code>DANCE_STYLE_RUMBA = 11;</code>
     */
    DANCE_STYLE_RUMBA(11),
    /**
     * <code>DANCE_STYLE_LINDY_HOP = 12;</code>
     */
    DANCE_STYLE_LINDY_HOP(12),
    /**
     * <code>DANCE_STYLE_LIQUID_DANCE = 13;</code>
     */
    DANCE_STYLE_LIQUID_DANCE(13),
    /**
     * <code>DANCE_STYLE_SWING = 14;</code>
     */
    DANCE_STYLE_SWING(14),
    /**
     * <code>DANCE_STYLE_POPPING = 15;</code>
     */
    DANCE_STYLE_POPPING(15),
    /**
     * <code>DANCE_STYLE_WESTERN_SWING = 16;</code>
     */
    DANCE_STYLE_WESTERN_SWING(16),
    /**
     * <code>DANCE_STYLE_USER_DEFINED = 17;</code>
     */
    DANCE_STYLE_USER_DEFINED(17),
    /**
     * <code>DANCE_STYLE_LINE_DANCE = 18;</code>
     */
    DANCE_STYLE_LINE_DANCE(18),
    /**
     * <code>DANCE_STYLE_CAROLINA_SHAG = 19;</code>
     */
    DANCE_STYLE_CAROLINA_SHAG(19),
    /**
     * <code>DANCE_STYLE_PASODOBLE = 20;</code>
     */
    DANCE_STYLE_PASODOBLE(20),
    /**
     * <code>DANCE_STYLE_ACRO_DANCE = 21;</code>
     */
    DANCE_STYLE_ACRO_DANCE(21),
    /**
     * <code>DANCE_STYLE_TRADITIONAL_DANCE = 22;</code>
     */
    DANCE_STYLE_TRADITIONAL_DANCE(22),
    /**
     * <code>DANCE_STYLE_BALLET = 23;</code>
     */
    DANCE_STYLE_BALLET(23),
    /**
     * <code>DANCE_STYLE_FORRO = 24;</code>
     */
    DANCE_STYLE_FORRO(24),
    /**
     * <code>DANCE_STYLE_UP_ROCKING = 25;</code>
     */
    DANCE_STYLE_UP_ROCKING(25),
    /**
     * <code>DANCE_STYLE_CAKEWALK = 26;</code>
     */
    DANCE_STYLE_CAKEWALK(26),
    /**
     * <code>DANCE_STYLE_CONTEMPORARY_DANCE = 27;</code>
     */
    DANCE_STYLE_CONTEMPORARY_DANCE(27),
    /**
     * <code>DANCE_STYLE_MAMBO = 28;</code>
     */
    DANCE_STYLE_MAMBO(28),
    /**
     * <code>DANCE_STYLE_SALSA = 29;</code>
     */
    DANCE_STYLE_SALSA(29),
    /**
     * <code>DANCE_STYLE_HAND_JIVE = 30;</code>
     */
    DANCE_STYLE_HAND_JIVE(30),
    /**
     * <code>DANCE_STYLE_BARCAROLLE = 31;</code>
     */
    DANCE_STYLE_BARCAROLLE(31),
    /**
     * <code>DANCE_STYLE_CHA_CHA = 32;</code>
     */
    DANCE_STYLE_CHA_CHA(32),
    /**
     * <code>DANCE_STYLE_EAST_COAST_SWING = 33;</code>
     */
    DANCE_STYLE_EAST_COAST_SWING(33),
    /**
     * <code>DANCE_STYLE_COUNTRY_TWO_STEP = 34;</code>
     */
    DANCE_STYLE_COUNTRY_TWO_STEP(34),
    /**
     * <code>DANCE_STYLE_FOXTROT = 35;</code>
     */
    DANCE_STYLE_FOXTROT(35),
    /**
     * <code>DANCE_STYLE_WALTZ = 36;</code>
     */
    DANCE_STYLE_WALTZ(36),
    /**
     * <code>DANCE_STYLE_TRIPLE_STEP = 37;</code>
     */
    DANCE_STYLE_TRIPLE_STEP(37),
    /**
     * <code>DANCE_STYLE_HUSTLE = 38;</code>
     */
    DANCE_STYLE_HUSTLE(38),
    /**
     * <code>DANCE_STYLE_JITTERBUG = 39;</code>
     */
    DANCE_STYLE_JITTERBUG(39),
    /**
     * <code>DANCE_STYLE_VIENNESE_WALTZ = 40;</code>
     */
    DANCE_STYLE_VIENNESE_WALTZ(40),
    /**
     * <code>DANCE_STYLE_BALLROOM = 41;</code>
     */
    DANCE_STYLE_BALLROOM(41),
    /**
     * <code>DANCE_STYLE_BUMP = 42;</code>
     */
    DANCE_STYLE_BUMP(42),
    /**
     * <code>DANCE_STYLE_COUNTRY_WESTERN_DANCE = 43;</code>
     */
    DANCE_STYLE_COUNTRY_WESTERN_DANCE(43),
    /**
     * <code>DANCE_STYLE_INTERPRETIVE = 44;</code>
     */
    DANCE_STYLE_INTERPRETIVE(44),
    /**
     * <code>DANCE_STYLE_SLOW_WALTZ = 45;</code>
     */
    DANCE_STYLE_SLOW_WALTZ(45),
    /**
     * <code>DANCE_STYLE_MAZURKA = 46;</code>
     */
    DANCE_STYLE_MAZURKA(46),
    /**
     * <code>DANCE_STYLE_THE_TWIST = 47;</code>
     */
    DANCE_STYLE_THE_TWIST(47),
    /**
     * <code>DANCE_STYLE_STEPPING = 48;</code>
     */
    DANCE_STYLE_STEPPING(48),
    /**
     * <code>DANCE_STYLE_BREAKDOWN = 49;</code>
     */
    DANCE_STYLE_BREAKDOWN(49),
    /**
     * <code>DANCE_STYLE_TAP_DANCING = 50;</code>
     */
    DANCE_STYLE_TAP_DANCING(50),
    /**
     * <code>DANCE_STYLE_RODEO_SWING = 51;</code>
     */
    DANCE_STYLE_RODEO_SWING(51),
    /**
     * <code>DANCE_STYLE_CAN_CAN = 52;</code>
     */
    DANCE_STYLE_CAN_CAN(52),
    /**
     * <code>DANCE_STYLE_LOCKING = 53;</code>
     */
    DANCE_STYLE_LOCKING(53),
    /**
     * <code>DANCE_STYLE_DISCO_DANCE = 54;</code>
     */
    DANCE_STYLE_DISCO_DANCE(54),
    /**
     * <code>DANCE_STYLE_TANGO = 55;</code>
     */
    DANCE_STYLE_TANGO(55),
    /**
     * <code>DANCE_STYLE_CONGA_LINE = 56;</code>
     */
    DANCE_STYLE_CONGA_LINE(56),
    /**
     * <code>DANCE_STYLE_JIG = 57;</code>
     */
    DANCE_STYLE_JIG(57),
    /**
     * <code>DANCE_STYLE_WEST_COAST_SWING = 58;</code>
     */
    DANCE_STYLE_WEST_COAST_SWING(58),
    /**
     * <code>DANCE_STYLE_COWBOY_CHA_CHA = 59;</code>
     */
    DANCE_STYLE_COWBOY_CHA_CHA(59),
    /**
     * <code>DANCE_STYLE_HIP_HOP_DANCE = 60;</code>
     */
    DANCE_STYLE_HIP_HOP_DANCE(60),
    /**
     * <code>DANCE_STYLE_JIVE = 61;</code>
     */
    DANCE_STYLE_JIVE(61),
    /**
     * <code>DANCE_STYLE_MODERN_DANCE = 62;</code>
     */
    DANCE_STYLE_MODERN_DANCE(62),
    /**
     * <code>DANCE_STYLE_JAZZ_DANCE = 63;</code>
     */
    DANCE_STYLE_JAZZ_DANCE(63),
    /**
     * <code>DANCE_STYLE_LYRICAL_HIP_HOP_DANCE = 64;</code>
     */
    DANCE_STYLE_LYRICAL_HIP_HOP_DANCE(64),
    /**
     * <code>DANCE_STYLE_BREAKDANCE = 65;</code>
     */
    DANCE_STYLE_BREAKDANCE(65),
    /**
     * <code>DANCE_STYLE_ROBOT = 66;</code>
     */
    DANCE_STYLE_ROBOT(66),
    ;

    /**
     * <code>DANCE_STYLE_CHARLESTON = 0;</code>
     */
    public static final int DANCE_STYLE_CHARLESTON_VALUE = 0;
    /**
     * <code>DANCE_STYLE_SAMBA = 1;</code>
     */
    public static final int DANCE_STYLE_SAMBA_VALUE = 1;
    /**
     * <code>DANCE_STYLE_WATUSI = 2;</code>
     */
    public static final int DANCE_STYLE_WATUSI_VALUE = 2;
    /**
     * <code>DANCE_STYLE_SQUARE_DANCE = 3;</code>
     */
    public static final int DANCE_STYLE_SQUARE_DANCE_VALUE = 3;
    /**
     * <code>DANCE_STYLE_DOUGIE = 4;</code>
     */
    public static final int DANCE_STYLE_DOUGIE_VALUE = 4;
    /**
     * <code>DANCE_STYLE_TURFING = 5;</code>
     */
    public static final int DANCE_STYLE_TURFING_VALUE = 5;
    /**
     * <code>DANCE_STYLE_CONTRADANCE = 6;</code>
     */
    public static final int DANCE_STYLE_CONTRADANCE_VALUE = 6;
    /**
     * <code>DANCE_STYLE_BOLERO = 7;</code>
     */
    public static final int DANCE_STYLE_BOLERO_VALUE = 7;
    /**
     * <code>DANCE_STYLE_POLONAISE = 8;</code>
     */
    public static final int DANCE_STYLE_POLONAISE_VALUE = 8;
    /**
     * <code>DANCE_STYLE_QUICKSTEP = 9;</code>
     */
    public static final int DANCE_STYLE_QUICKSTEP_VALUE = 9;
    /**
     * <code>DANCE_STYLE_DANSBAND = 10;</code>
     */
    public static final int DANCE_STYLE_DANSBAND_VALUE = 10;
    /**
     * <code>DANCE_STYLE_RUMBA = 11;</code>
     */
    public static final int DANCE_STYLE_RUMBA_VALUE = 11;
    /**
     * <code>DANCE_STYLE_LINDY_HOP = 12;</code>
     */
    public static final int DANCE_STYLE_LINDY_HOP_VALUE = 12;
    /**
     * <code>DANCE_STYLE_LIQUID_DANCE = 13;</code>
     */
    public static final int DANCE_STYLE_LIQUID_DANCE_VALUE = 13;
    /**
     * <code>DANCE_STYLE_SWING = 14;</code>
     */
    public static final int DANCE_STYLE_SWING_VALUE = 14;
    /**
     * <code>DANCE_STYLE_POPPING = 15;</code>
     */
    public static final int DANCE_STYLE_POPPING_VALUE = 15;
    /**
     * <code>DANCE_STYLE_WESTERN_SWING = 16;</code>
     */
    public static final int DANCE_STYLE_WESTERN_SWING_VALUE = 16;
    /**
     * <code>DANCE_STYLE_USER_DEFINED = 17;</code>
     */
    public static final int DANCE_STYLE_USER_DEFINED_VALUE = 17;
    /**
     * <code>DANCE_STYLE_LINE_DANCE = 18;</code>
     */
    public static final int DANCE_STYLE_LINE_DANCE_VALUE = 18;
    /**
     * <code>DANCE_STYLE_CAROLINA_SHAG = 19;</code>
     */
    public static final int DANCE_STYLE_CAROLINA_SHAG_VALUE = 19;
    /**
     * <code>DANCE_STYLE_PASODOBLE = 20;</code>
     */
    public static final int DANCE_STYLE_PASODOBLE_VALUE = 20;
    /**
     * <code>DANCE_STYLE_ACRO_DANCE = 21;</code>
     */
    public static final int DANCE_STYLE_ACRO_DANCE_VALUE = 21;
    /**
     * <code>DANCE_STYLE_TRADITIONAL_DANCE = 22;</code>
     */
    public static final int DANCE_STYLE_TRADITIONAL_DANCE_VALUE = 22;
    /**
     * <code>DANCE_STYLE_BALLET = 23;</code>
     */
    public static final int DANCE_STYLE_BALLET_VALUE = 23;
    /**
     * <code>DANCE_STYLE_FORRO = 24;</code>
     */
    public static final int DANCE_STYLE_FORRO_VALUE = 24;
    /**
     * <code>DANCE_STYLE_UP_ROCKING = 25;</code>
     */
    public static final int DANCE_STYLE_UP_ROCKING_VALUE = 25;
    /**
     * <code>DANCE_STYLE_CAKEWALK = 26;</code>
     */
    public static final int DANCE_STYLE_CAKEWALK_VALUE = 26;
    /**
     * <code>DANCE_STYLE_CONTEMPORARY_DANCE = 27;</code>
     */
    public static final int DANCE_STYLE_CONTEMPORARY_DANCE_VALUE = 27;
    /**
     * <code>DANCE_STYLE_MAMBO = 28;</code>
     */
    public static final int DANCE_STYLE_MAMBO_VALUE = 28;
    /**
     * <code>DANCE_STYLE_SALSA = 29;</code>
     */
    public static final int DANCE_STYLE_SALSA_VALUE = 29;
    /**
     * <code>DANCE_STYLE_HAND_JIVE = 30;</code>
     */
    public static final int DANCE_STYLE_HAND_JIVE_VALUE = 30;
    /**
     * <code>DANCE_STYLE_BARCAROLLE = 31;</code>
     */
    public static final int DANCE_STYLE_BARCAROLLE_VALUE = 31;
    /**
     * <code>DANCE_STYLE_CHA_CHA = 32;</code>
     */
    public static final int DANCE_STYLE_CHA_CHA_VALUE = 32;
    /**
     * <code>DANCE_STYLE_EAST_COAST_SWING = 33;</code>
     */
    public static final int DANCE_STYLE_EAST_COAST_SWING_VALUE = 33;
    /**
     * <code>DANCE_STYLE_COUNTRY_TWO_STEP = 34;</code>
     */
    public static final int DANCE_STYLE_COUNTRY_TWO_STEP_VALUE = 34;
    /**
     * <code>DANCE_STYLE_FOXTROT = 35;</code>
     */
    public static final int DANCE_STYLE_FOXTROT_VALUE = 35;
    /**
     * <code>DANCE_STYLE_WALTZ = 36;</code>
     */
    public static final int DANCE_STYLE_WALTZ_VALUE = 36;
    /**
     * <code>DANCE_STYLE_TRIPLE_STEP = 37;</code>
     */
    public static final int DANCE_STYLE_TRIPLE_STEP_VALUE = 37;
    /**
     * <code>DANCE_STYLE_HUSTLE = 38;</code>
     */
    public static final int DANCE_STYLE_HUSTLE_VALUE = 38;
    /**
     * <code>DANCE_STYLE_JITTERBUG = 39;</code>
     */
    public static final int DANCE_STYLE_JITTERBUG_VALUE = 39;
    /**
     * <code>DANCE_STYLE_VIENNESE_WALTZ = 40;</code>
     */
    public static final int DANCE_STYLE_VIENNESE_WALTZ_VALUE = 40;
    /**
     * <code>DANCE_STYLE_BALLROOM = 41;</code>
     */
    public static final int DANCE_STYLE_BALLROOM_VALUE = 41;
    /**
     * <code>DANCE_STYLE_BUMP = 42;</code>
     */
    public static final int DANCE_STYLE_BUMP_VALUE = 42;
    /**
     * <code>DANCE_STYLE_COUNTRY_WESTERN_DANCE = 43;</code>
     */
    public static final int DANCE_STYLE_COUNTRY_WESTERN_DANCE_VALUE = 43;
    /**
     * <code>DANCE_STYLE_INTERPRETIVE = 44;</code>
     */
    public static final int DANCE_STYLE_INTERPRETIVE_VALUE = 44;
    /**
     * <code>DANCE_STYLE_SLOW_WALTZ = 45;</code>
     */
    public static final int DANCE_STYLE_SLOW_WALTZ_VALUE = 45;
    /**
     * <code>DANCE_STYLE_MAZURKA = 46;</code>
     */
    public static final int DANCE_STYLE_MAZURKA_VALUE = 46;
    /**
     * <code>DANCE_STYLE_THE_TWIST = 47;</code>
     */
    public static final int DANCE_STYLE_THE_TWIST_VALUE = 47;
    /**
     * <code>DANCE_STYLE_STEPPING = 48;</code>
     */
    public static final int DANCE_STYLE_STEPPING_VALUE = 48;
    /**
     * <code>DANCE_STYLE_BREAKDOWN = 49;</code>
     */
    public static final int DANCE_STYLE_BREAKDOWN_VALUE = 49;
    /**
     * <code>DANCE_STYLE_TAP_DANCING = 50;</code>
     */
    public static final int DANCE_STYLE_TAP_DANCING_VALUE = 50;
    /**
     * <code>DANCE_STYLE_RODEO_SWING = 51;</code>
     */
    public static final int DANCE_STYLE_RODEO_SWING_VALUE = 51;
    /**
     * <code>DANCE_STYLE_CAN_CAN = 52;</code>
     */
    public static final int DANCE_STYLE_CAN_CAN_VALUE = 52;
    /**
     * <code>DANCE_STYLE_LOCKING = 53;</code>
     */
    public static final int DANCE_STYLE_LOCKING_VALUE = 53;
    /**
     * <code>DANCE_STYLE_DISCO_DANCE = 54;</code>
     */
    public static final int DANCE_STYLE_DISCO_DANCE_VALUE = 54;
    /**
     * <code>DANCE_STYLE_TANGO = 55;</code>
     */
    public static final int DANCE_STYLE_TANGO_VALUE = 55;
    /**
     * <code>DANCE_STYLE_CONGA_LINE = 56;</code>
     */
    public static final int DANCE_STYLE_CONGA_LINE_VALUE = 56;
    /**
     * <code>DANCE_STYLE_JIG = 57;</code>
     */
    public static final int DANCE_STYLE_JIG_VALUE = 57;
    /**
     * <code>DANCE_STYLE_WEST_COAST_SWING = 58;</code>
     */
    public static final int DANCE_STYLE_WEST_COAST_SWING_VALUE = 58;
    /**
     * <code>DANCE_STYLE_COWBOY_CHA_CHA = 59;</code>
     */
    public static final int DANCE_STYLE_COWBOY_CHA_CHA_VALUE = 59;
    /**
     * <code>DANCE_STYLE_HIP_HOP_DANCE = 60;</code>
     */
    public static final int DANCE_STYLE_HIP_HOP_DANCE_VALUE = 60;
    /**
     * <code>DANCE_STYLE_JIVE = 61;</code>
     */
    public static final int DANCE_STYLE_JIVE_VALUE = 61;
    /**
     * <code>DANCE_STYLE_MODERN_DANCE = 62;</code>
     */
    public static final int DANCE_STYLE_MODERN_DANCE_VALUE = 62;
    /**
     * <code>DANCE_STYLE_JAZZ_DANCE = 63;</code>
     */
    public static final int DANCE_STYLE_JAZZ_DANCE_VALUE = 63;
    /**
     * <code>DANCE_STYLE_LYRICAL_HIP_HOP_DANCE = 64;</code>
     */
    public static final int DANCE_STYLE_LYRICAL_HIP_HOP_DANCE_VALUE = 64;
    /**
     * <code>DANCE_STYLE_BREAKDANCE = 65;</code>
     */
    public static final int DANCE_STYLE_BREAKDANCE_VALUE = 65;
    /**
     * <code>DANCE_STYLE_ROBOT = 66;</code>
     */
    public static final int DANCE_STYLE_ROBOT_VALUE = 66;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DanceStyle valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DanceStyle forNumber(int value) {
      switch (value) {
        case 0: return DANCE_STYLE_CHARLESTON;
        case 1: return DANCE_STYLE_SAMBA;
        case 2: return DANCE_STYLE_WATUSI;
        case 3: return DANCE_STYLE_SQUARE_DANCE;
        case 4: return DANCE_STYLE_DOUGIE;
        case 5: return DANCE_STYLE_TURFING;
        case 6: return DANCE_STYLE_CONTRADANCE;
        case 7: return DANCE_STYLE_BOLERO;
        case 8: return DANCE_STYLE_POLONAISE;
        case 9: return DANCE_STYLE_QUICKSTEP;
        case 10: return DANCE_STYLE_DANSBAND;
        case 11: return DANCE_STYLE_RUMBA;
        case 12: return DANCE_STYLE_LINDY_HOP;
        case 13: return DANCE_STYLE_LIQUID_DANCE;
        case 14: return DANCE_STYLE_SWING;
        case 15: return DANCE_STYLE_POPPING;
        case 16: return DANCE_STYLE_WESTERN_SWING;
        case 17: return DANCE_STYLE_USER_DEFINED;
        case 18: return DANCE_STYLE_LINE_DANCE;
        case 19: return DANCE_STYLE_CAROLINA_SHAG;
        case 20: return DANCE_STYLE_PASODOBLE;
        case 21: return DANCE_STYLE_ACRO_DANCE;
        case 22: return DANCE_STYLE_TRADITIONAL_DANCE;
        case 23: return DANCE_STYLE_BALLET;
        case 24: return DANCE_STYLE_FORRO;
        case 25: return DANCE_STYLE_UP_ROCKING;
        case 26: return DANCE_STYLE_CAKEWALK;
        case 27: return DANCE_STYLE_CONTEMPORARY_DANCE;
        case 28: return DANCE_STYLE_MAMBO;
        case 29: return DANCE_STYLE_SALSA;
        case 30: return DANCE_STYLE_HAND_JIVE;
        case 31: return DANCE_STYLE_BARCAROLLE;
        case 32: return DANCE_STYLE_CHA_CHA;
        case 33: return DANCE_STYLE_EAST_COAST_SWING;
        case 34: return DANCE_STYLE_COUNTRY_TWO_STEP;
        case 35: return DANCE_STYLE_FOXTROT;
        case 36: return DANCE_STYLE_WALTZ;
        case 37: return DANCE_STYLE_TRIPLE_STEP;
        case 38: return DANCE_STYLE_HUSTLE;
        case 39: return DANCE_STYLE_JITTERBUG;
        case 40: return DANCE_STYLE_VIENNESE_WALTZ;
        case 41: return DANCE_STYLE_BALLROOM;
        case 42: return DANCE_STYLE_BUMP;
        case 43: return DANCE_STYLE_COUNTRY_WESTERN_DANCE;
        case 44: return DANCE_STYLE_INTERPRETIVE;
        case 45: return DANCE_STYLE_SLOW_WALTZ;
        case 46: return DANCE_STYLE_MAZURKA;
        case 47: return DANCE_STYLE_THE_TWIST;
        case 48: return DANCE_STYLE_STEPPING;
        case 49: return DANCE_STYLE_BREAKDOWN;
        case 50: return DANCE_STYLE_TAP_DANCING;
        case 51: return DANCE_STYLE_RODEO_SWING;
        case 52: return DANCE_STYLE_CAN_CAN;
        case 53: return DANCE_STYLE_LOCKING;
        case 54: return DANCE_STYLE_DISCO_DANCE;
        case 55: return DANCE_STYLE_TANGO;
        case 56: return DANCE_STYLE_CONGA_LINE;
        case 57: return DANCE_STYLE_JIG;
        case 58: return DANCE_STYLE_WEST_COAST_SWING;
        case 59: return DANCE_STYLE_COWBOY_CHA_CHA;
        case 60: return DANCE_STYLE_HIP_HOP_DANCE;
        case 61: return DANCE_STYLE_JIVE;
        case 62: return DANCE_STYLE_MODERN_DANCE;
        case 63: return DANCE_STYLE_JAZZ_DANCE;
        case 64: return DANCE_STYLE_LYRICAL_HIP_HOP_DANCE;
        case 65: return DANCE_STYLE_BREAKDANCE;
        case 66: return DANCE_STYLE_ROBOT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DanceStyle>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DanceStyle> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DanceStyle>() {
            public DanceStyle findValueByNumber(int number) {
              return DanceStyle.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(39);
    }

    private static final DanceStyle[] VALUES = values();

    public static DanceStyle valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DanceStyle(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DanceStyle)
  }

  /**
   * Protobuf enum {@code avs.DataCarrierFormat}
   */
  public enum DataCarrierFormat
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DATA_CARRIER_FORMAT_B_FORMAT_VIDEO = 0;</code>
     */
    DATA_CARRIER_FORMAT_B_FORMAT_VIDEO(0),
    /**
     * <code>DATA_CARRIER_FORMAT_I_S_O9660 = 1;</code>
     */
    DATA_CARRIER_FORMAT_I_S_O9660(1),
    /**
     * <code>DATA_CARRIER_FORMAT_R_A_D_A_R_I_I = 2;</code>
     */
    DATA_CARRIER_FORMAT_R_A_D_A_R_I_I(2),
    /**
     * <code>DATA_CARRIER_FORMAT_DIRECT_STREAM_DIGITAL = 3;</code>
     */
    DATA_CARRIER_FORMAT_DIRECT_STREAM_DIGITAL(3),
    /**
     * <code>DATA_CARRIER_FORMAT_DIGITAL_AUDIO_TAPE = 4;</code>
     */
    DATA_CARRIER_FORMAT_DIGITAL_AUDIO_TAPE(4),
    /**
     * <code>DATA_CARRIER_FORMAT_DIGITAL_DATA_STORAGE_TAPE = 5;</code>
     */
    DATA_CARRIER_FORMAT_DIGITAL_DATA_STORAGE_TAPE(5),
    /**
     * <code>DATA_CARRIER_FORMAT_LINEAR_TAPE_FILE_SYSTEM = 6;</code>
     */
    DATA_CARRIER_FORMAT_LINEAR_TAPE_FILE_SYSTEM(6),
    /**
     * <code>DATA_CARRIER_FORMAT_R_A_D_A_R = 7;</code>
     */
    DATA_CARRIER_FORMAT_R_A_D_A_R(7),
    /**
     * <code>DATA_CARRIER_FORMAT_STREAMING_DATA = 8;</code>
     */
    DATA_CARRIER_FORMAT_STREAMING_DATA(8),
    /**
     * <code>DATA_CARRIER_FORMAT_PCM_DIGITAL = 9;</code>
     */
    DATA_CARRIER_FORMAT_PCM_DIGITAL(9),
    /**
     * <code>DATA_CARRIER_FORMAT_D1_DIGITAL_VIDEO = 10;</code>
     */
    DATA_CARRIER_FORMAT_D1_DIGITAL_VIDEO(10),
    /**
     * <code>DATA_CARRIER_FORMAT_A_D_A_T = 11;</code>
     */
    DATA_CARRIER_FORMAT_A_D_A_T(11),
    /**
     * <code>DATA_CARRIER_FORMAT_ANALOG_AUDIO = 12;</code>
     */
    DATA_CARRIER_FORMAT_ANALOG_AUDIO(12),
    /**
     * <code>DATA_CARRIER_FORMAT_D2_DIGITAL_VIDEO = 13;</code>
     */
    DATA_CARRIER_FORMAT_D2_DIGITAL_VIDEO(13),
    /**
     * <code>DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM_PLUS = 14;</code>
     */
    DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM_PLUS(14),
    /**
     * <code>DATA_CARRIER_FORMAT_PROPRIETARY = 15;</code>
     */
    DATA_CARRIER_FORMAT_PROPRIETARY(15),
    /**
     * <code>DATA_CARRIER_FORMAT_D4_DIGITAL_VIDEO = 16;</code>
     */
    DATA_CARRIER_FORMAT_D4_DIGITAL_VIDEO(16),
    /**
     * <code>DATA_CARRIER_FORMAT_COMPACT_DISK_DIGITAL_AUDIO = 17;</code>
     */
    DATA_CARRIER_FORMAT_COMPACT_DISK_DIGITAL_AUDIO(17),
    /**
     * <code>DATA_CARRIER_FORMAT_D3_DIGITAL_VIDEO = 18;</code>
     */
    DATA_CARRIER_FORMAT_D3_DIGITAL_VIDEO(18),
    /**
     * <code>DATA_CARRIER_FORMAT_BETACAM_S_X = 19;</code>
     */
    DATA_CARRIER_FORMAT_BETACAM_S_X(19),
    /**
     * <code>DATA_CARRIER_FORMAT_BETAMAX = 20;</code>
     */
    DATA_CARRIER_FORMAT_BETAMAX(20),
    /**
     * <code>DATA_CARRIER_FORMAT_C_FORMAT_VIDEO = 21;</code>
     */
    DATA_CARRIER_FORMAT_C_FORMAT_VIDEO(21),
    /**
     * <code>DATA_CARRIER_FORMAT_DIGITAL_COMPONENT_VIDEOCASSETTE = 22;</code>
     */
    DATA_CARRIER_FORMAT_DIGITAL_COMPONENT_VIDEOCASSETTE(22),
    /**
     * <code>DATA_CARRIER_FORMAT_D_V_C_P_R_O = 23;</code>
     */
    DATA_CARRIER_FORMAT_D_V_C_P_R_O(23),
    /**
     * <code>DATA_CARRIER_FORMAT_JVC_PCM_DIGITAL = 24;</code>
     */
    DATA_CARRIER_FORMAT_JVC_PCM_DIGITAL(24),
    /**
     * <code>DATA_CARRIER_FORMAT_D_V_C_P_R_O50 = 25;</code>
     */
    DATA_CARRIER_FORMAT_D_V_C_P_R_O50(25),
    /**
     * <code>DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM = 26;</code>
     */
    DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM(26),
    /**
     * <code>DATA_CARRIER_FORMAT_PRO_DIGI = 27;</code>
     */
    DATA_CARRIER_FORMAT_PRO_DIGI(27),
    /**
     * <code>DATA_CARRIER_FORMAT_BETACAM_S_P = 28;</code>
     */
    DATA_CARRIER_FORMAT_BETACAM_S_P(28),
    /**
     * <code>DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE_32_BIT = 29;</code>
     */
    DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE_32_BIT(29),
    /**
     * <code>DATA_CARRIER_FORMAT_MASTERLINK = 30;</code>
     */
    DATA_CARRIER_FORMAT_MASTERLINK(30),
    /**
     * <code>DATA_CARRIER_FORMAT_NOT_APPLICABLE = 31;</code>
     */
    DATA_CARRIER_FORMAT_NOT_APPLICABLE(31),
    /**
     * <code>DATA_CARRIER_FORMAT_NEW_TECHNOLOGY_FILE_SYSTEM = 32;</code>
     */
    DATA_CARRIER_FORMAT_NEW_TECHNOLOGY_FILE_SYSTEM(32),
    /**
     * <code>DATA_CARRIER_FORMAT_D6_DIGITAL_VIDEO = 33;</code>
     */
    DATA_CARRIER_FORMAT_D6_DIGITAL_VIDEO(33),
    /**
     * <code>DATA_CARRIER_FORMAT_TRANSVERSE_TRACK_QUADRAPLEX_VIDEO = 34;</code>
     */
    DATA_CARRIER_FORMAT_TRANSVERSE_TRACK_QUADRAPLEX_VIDEO(34),
    /**
     * <code>DATA_CARRIER_FORMAT_D_T_R_S = 35;</code>
     */
    DATA_CARRIER_FORMAT_D_T_R_S(35),
    /**
     * <code>DATA_CARRIER_FORMAT_A_FORMAT_VIDEO = 36;</code>
     */
    DATA_CARRIER_FORMAT_A_FORMAT_VIDEO(36),
    /**
     * <code>DATA_CARRIER_FORMAT_D_V_C_P_R_O_H_D = 37;</code>
     */
    DATA_CARRIER_FORMAT_D_V_C_P_R_O_H_D(37),
    /**
     * <code>DATA_CARRIER_FORMAT_D5_DIGITAL_VIDEO = 38;</code>
     */
    DATA_CARRIER_FORMAT_D5_DIGITAL_VIDEO(38),
    /**
     * <code>DATA_CARRIER_FORMAT_DVCPRO_PROGRESSIVE = 39;</code>
     */
    DATA_CARRIER_FORMAT_DVCPRO_PROGRESSIVE(39),
    /**
     * <code>DATA_CARRIER_FORMAT_SONY_P_C_M1630 = 40;</code>
     */
    DATA_CARRIER_FORMAT_SONY_P_C_M1630(40),
    /**
     * <code>DATA_CARRIER_FORMAT_BETACAM = 41;</code>
     */
    DATA_CARRIER_FORMAT_BETACAM(41),
    /**
     * <code>DATA_CARRIER_FORMAT_D_V_C_A_M = 42;</code>
     */
    DATA_CARRIER_FORMAT_D_V_C_A_M(42),
    /**
     * <code>DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE = 43;</code>
     */
    DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE(43),
    /**
     * <code>DATA_CARRIER_FORMAT_DIGITAL_AUDIO_STATIONARY_HEAD = 44;</code>
     */
    DATA_CARRIER_FORMAT_DIGITAL_AUDIO_STATIONARY_HEAD(44),
    ;

    /**
     * <code>DATA_CARRIER_FORMAT_B_FORMAT_VIDEO = 0;</code>
     */
    public static final int DATA_CARRIER_FORMAT_B_FORMAT_VIDEO_VALUE = 0;
    /**
     * <code>DATA_CARRIER_FORMAT_I_S_O9660 = 1;</code>
     */
    public static final int DATA_CARRIER_FORMAT_I_S_O9660_VALUE = 1;
    /**
     * <code>DATA_CARRIER_FORMAT_R_A_D_A_R_I_I = 2;</code>
     */
    public static final int DATA_CARRIER_FORMAT_R_A_D_A_R_I_I_VALUE = 2;
    /**
     * <code>DATA_CARRIER_FORMAT_DIRECT_STREAM_DIGITAL = 3;</code>
     */
    public static final int DATA_CARRIER_FORMAT_DIRECT_STREAM_DIGITAL_VALUE = 3;
    /**
     * <code>DATA_CARRIER_FORMAT_DIGITAL_AUDIO_TAPE = 4;</code>
     */
    public static final int DATA_CARRIER_FORMAT_DIGITAL_AUDIO_TAPE_VALUE = 4;
    /**
     * <code>DATA_CARRIER_FORMAT_DIGITAL_DATA_STORAGE_TAPE = 5;</code>
     */
    public static final int DATA_CARRIER_FORMAT_DIGITAL_DATA_STORAGE_TAPE_VALUE = 5;
    /**
     * <code>DATA_CARRIER_FORMAT_LINEAR_TAPE_FILE_SYSTEM = 6;</code>
     */
    public static final int DATA_CARRIER_FORMAT_LINEAR_TAPE_FILE_SYSTEM_VALUE = 6;
    /**
     * <code>DATA_CARRIER_FORMAT_R_A_D_A_R = 7;</code>
     */
    public static final int DATA_CARRIER_FORMAT_R_A_D_A_R_VALUE = 7;
    /**
     * <code>DATA_CARRIER_FORMAT_STREAMING_DATA = 8;</code>
     */
    public static final int DATA_CARRIER_FORMAT_STREAMING_DATA_VALUE = 8;
    /**
     * <code>DATA_CARRIER_FORMAT_PCM_DIGITAL = 9;</code>
     */
    public static final int DATA_CARRIER_FORMAT_PCM_DIGITAL_VALUE = 9;
    /**
     * <code>DATA_CARRIER_FORMAT_D1_DIGITAL_VIDEO = 10;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D1_DIGITAL_VIDEO_VALUE = 10;
    /**
     * <code>DATA_CARRIER_FORMAT_A_D_A_T = 11;</code>
     */
    public static final int DATA_CARRIER_FORMAT_A_D_A_T_VALUE = 11;
    /**
     * <code>DATA_CARRIER_FORMAT_ANALOG_AUDIO = 12;</code>
     */
    public static final int DATA_CARRIER_FORMAT_ANALOG_AUDIO_VALUE = 12;
    /**
     * <code>DATA_CARRIER_FORMAT_D2_DIGITAL_VIDEO = 13;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D2_DIGITAL_VIDEO_VALUE = 13;
    /**
     * <code>DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM_PLUS = 14;</code>
     */
    public static final int DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM_PLUS_VALUE = 14;
    /**
     * <code>DATA_CARRIER_FORMAT_PROPRIETARY = 15;</code>
     */
    public static final int DATA_CARRIER_FORMAT_PROPRIETARY_VALUE = 15;
    /**
     * <code>DATA_CARRIER_FORMAT_D4_DIGITAL_VIDEO = 16;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D4_DIGITAL_VIDEO_VALUE = 16;
    /**
     * <code>DATA_CARRIER_FORMAT_COMPACT_DISK_DIGITAL_AUDIO = 17;</code>
     */
    public static final int DATA_CARRIER_FORMAT_COMPACT_DISK_DIGITAL_AUDIO_VALUE = 17;
    /**
     * <code>DATA_CARRIER_FORMAT_D3_DIGITAL_VIDEO = 18;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D3_DIGITAL_VIDEO_VALUE = 18;
    /**
     * <code>DATA_CARRIER_FORMAT_BETACAM_S_X = 19;</code>
     */
    public static final int DATA_CARRIER_FORMAT_BETACAM_S_X_VALUE = 19;
    /**
     * <code>DATA_CARRIER_FORMAT_BETAMAX = 20;</code>
     */
    public static final int DATA_CARRIER_FORMAT_BETAMAX_VALUE = 20;
    /**
     * <code>DATA_CARRIER_FORMAT_C_FORMAT_VIDEO = 21;</code>
     */
    public static final int DATA_CARRIER_FORMAT_C_FORMAT_VIDEO_VALUE = 21;
    /**
     * <code>DATA_CARRIER_FORMAT_DIGITAL_COMPONENT_VIDEOCASSETTE = 22;</code>
     */
    public static final int DATA_CARRIER_FORMAT_DIGITAL_COMPONENT_VIDEOCASSETTE_VALUE = 22;
    /**
     * <code>DATA_CARRIER_FORMAT_D_V_C_P_R_O = 23;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D_V_C_P_R_O_VALUE = 23;
    /**
     * <code>DATA_CARRIER_FORMAT_JVC_PCM_DIGITAL = 24;</code>
     */
    public static final int DATA_CARRIER_FORMAT_JVC_PCM_DIGITAL_VALUE = 24;
    /**
     * <code>DATA_CARRIER_FORMAT_D_V_C_P_R_O50 = 25;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D_V_C_P_R_O50_VALUE = 25;
    /**
     * <code>DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM = 26;</code>
     */
    public static final int DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM_VALUE = 26;
    /**
     * <code>DATA_CARRIER_FORMAT_PRO_DIGI = 27;</code>
     */
    public static final int DATA_CARRIER_FORMAT_PRO_DIGI_VALUE = 27;
    /**
     * <code>DATA_CARRIER_FORMAT_BETACAM_S_P = 28;</code>
     */
    public static final int DATA_CARRIER_FORMAT_BETACAM_S_P_VALUE = 28;
    /**
     * <code>DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE_32_BIT = 29;</code>
     */
    public static final int DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE_32_BIT_VALUE = 29;
    /**
     * <code>DATA_CARRIER_FORMAT_MASTERLINK = 30;</code>
     */
    public static final int DATA_CARRIER_FORMAT_MASTERLINK_VALUE = 30;
    /**
     * <code>DATA_CARRIER_FORMAT_NOT_APPLICABLE = 31;</code>
     */
    public static final int DATA_CARRIER_FORMAT_NOT_APPLICABLE_VALUE = 31;
    /**
     * <code>DATA_CARRIER_FORMAT_NEW_TECHNOLOGY_FILE_SYSTEM = 32;</code>
     */
    public static final int DATA_CARRIER_FORMAT_NEW_TECHNOLOGY_FILE_SYSTEM_VALUE = 32;
    /**
     * <code>DATA_CARRIER_FORMAT_D6_DIGITAL_VIDEO = 33;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D6_DIGITAL_VIDEO_VALUE = 33;
    /**
     * <code>DATA_CARRIER_FORMAT_TRANSVERSE_TRACK_QUADRAPLEX_VIDEO = 34;</code>
     */
    public static final int DATA_CARRIER_FORMAT_TRANSVERSE_TRACK_QUADRAPLEX_VIDEO_VALUE = 34;
    /**
     * <code>DATA_CARRIER_FORMAT_D_T_R_S = 35;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D_T_R_S_VALUE = 35;
    /**
     * <code>DATA_CARRIER_FORMAT_A_FORMAT_VIDEO = 36;</code>
     */
    public static final int DATA_CARRIER_FORMAT_A_FORMAT_VIDEO_VALUE = 36;
    /**
     * <code>DATA_CARRIER_FORMAT_D_V_C_P_R_O_H_D = 37;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D_V_C_P_R_O_H_D_VALUE = 37;
    /**
     * <code>DATA_CARRIER_FORMAT_D5_DIGITAL_VIDEO = 38;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D5_DIGITAL_VIDEO_VALUE = 38;
    /**
     * <code>DATA_CARRIER_FORMAT_DVCPRO_PROGRESSIVE = 39;</code>
     */
    public static final int DATA_CARRIER_FORMAT_DVCPRO_PROGRESSIVE_VALUE = 39;
    /**
     * <code>DATA_CARRIER_FORMAT_SONY_P_C_M1630 = 40;</code>
     */
    public static final int DATA_CARRIER_FORMAT_SONY_P_C_M1630_VALUE = 40;
    /**
     * <code>DATA_CARRIER_FORMAT_BETACAM = 41;</code>
     */
    public static final int DATA_CARRIER_FORMAT_BETACAM_VALUE = 41;
    /**
     * <code>DATA_CARRIER_FORMAT_D_V_C_A_M = 42;</code>
     */
    public static final int DATA_CARRIER_FORMAT_D_V_C_A_M_VALUE = 42;
    /**
     * <code>DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE = 43;</code>
     */
    public static final int DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE_VALUE = 43;
    /**
     * <code>DATA_CARRIER_FORMAT_DIGITAL_AUDIO_STATIONARY_HEAD = 44;</code>
     */
    public static final int DATA_CARRIER_FORMAT_DIGITAL_AUDIO_STATIONARY_HEAD_VALUE = 44;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataCarrierFormat valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DataCarrierFormat forNumber(int value) {
      switch (value) {
        case 0: return DATA_CARRIER_FORMAT_B_FORMAT_VIDEO;
        case 1: return DATA_CARRIER_FORMAT_I_S_O9660;
        case 2: return DATA_CARRIER_FORMAT_R_A_D_A_R_I_I;
        case 3: return DATA_CARRIER_FORMAT_DIRECT_STREAM_DIGITAL;
        case 4: return DATA_CARRIER_FORMAT_DIGITAL_AUDIO_TAPE;
        case 5: return DATA_CARRIER_FORMAT_DIGITAL_DATA_STORAGE_TAPE;
        case 6: return DATA_CARRIER_FORMAT_LINEAR_TAPE_FILE_SYSTEM;
        case 7: return DATA_CARRIER_FORMAT_R_A_D_A_R;
        case 8: return DATA_CARRIER_FORMAT_STREAMING_DATA;
        case 9: return DATA_CARRIER_FORMAT_PCM_DIGITAL;
        case 10: return DATA_CARRIER_FORMAT_D1_DIGITAL_VIDEO;
        case 11: return DATA_CARRIER_FORMAT_A_D_A_T;
        case 12: return DATA_CARRIER_FORMAT_ANALOG_AUDIO;
        case 13: return DATA_CARRIER_FORMAT_D2_DIGITAL_VIDEO;
        case 14: return DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM_PLUS;
        case 15: return DATA_CARRIER_FORMAT_PROPRIETARY;
        case 16: return DATA_CARRIER_FORMAT_D4_DIGITAL_VIDEO;
        case 17: return DATA_CARRIER_FORMAT_COMPACT_DISK_DIGITAL_AUDIO;
        case 18: return DATA_CARRIER_FORMAT_D3_DIGITAL_VIDEO;
        case 19: return DATA_CARRIER_FORMAT_BETACAM_S_X;
        case 20: return DATA_CARRIER_FORMAT_BETAMAX;
        case 21: return DATA_CARRIER_FORMAT_C_FORMAT_VIDEO;
        case 22: return DATA_CARRIER_FORMAT_DIGITAL_COMPONENT_VIDEOCASSETTE;
        case 23: return DATA_CARRIER_FORMAT_D_V_C_P_R_O;
        case 24: return DATA_CARRIER_FORMAT_JVC_PCM_DIGITAL;
        case 25: return DATA_CARRIER_FORMAT_D_V_C_P_R_O50;
        case 26: return DATA_CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM;
        case 27: return DATA_CARRIER_FORMAT_PRO_DIGI;
        case 28: return DATA_CARRIER_FORMAT_BETACAM_S_P;
        case 29: return DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE_32_BIT;
        case 30: return DATA_CARRIER_FORMAT_MASTERLINK;
        case 31: return DATA_CARRIER_FORMAT_NOT_APPLICABLE;
        case 32: return DATA_CARRIER_FORMAT_NEW_TECHNOLOGY_FILE_SYSTEM;
        case 33: return DATA_CARRIER_FORMAT_D6_DIGITAL_VIDEO;
        case 34: return DATA_CARRIER_FORMAT_TRANSVERSE_TRACK_QUADRAPLEX_VIDEO;
        case 35: return DATA_CARRIER_FORMAT_D_T_R_S;
        case 36: return DATA_CARRIER_FORMAT_A_FORMAT_VIDEO;
        case 37: return DATA_CARRIER_FORMAT_D_V_C_P_R_O_H_D;
        case 38: return DATA_CARRIER_FORMAT_D5_DIGITAL_VIDEO;
        case 39: return DATA_CARRIER_FORMAT_DVCPRO_PROGRESSIVE;
        case 40: return DATA_CARRIER_FORMAT_SONY_P_C_M1630;
        case 41: return DATA_CARRIER_FORMAT_BETACAM;
        case 42: return DATA_CARRIER_FORMAT_D_V_C_A_M;
        case 43: return DATA_CARRIER_FORMAT_FILE_ALLOCATION_TABLE;
        case 44: return DATA_CARRIER_FORMAT_DIGITAL_AUDIO_STATIONARY_HEAD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DataCarrierFormat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DataCarrierFormat> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DataCarrierFormat>() {
            public DataCarrierFormat findValueByNumber(int number) {
              return DataCarrierFormat.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(40);
    }

    private static final DataCarrierFormat[] VALUES = values();

    public static DataCarrierFormat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DataCarrierFormat(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DataCarrierFormat)
  }

  /**
   * Protobuf enum {@code avs.DataCarrierType}
   */
  public enum DataCarrierType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DATA_CARRIER_TYPE_EXABYTE_MAMMOTH_DIGITAL_DATA_TAPE = 0;</code>
     */
    DATA_CARRIER_TYPE_EXABYTE_MAMMOTH_DIGITAL_DATA_TAPE(0),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE = 1;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE(1),
    /**
     * <code>DATA_CARRIER_TYPE_8MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 2;</code>
     */
    DATA_CARRIER_TYPE_8MM_PICTURE_ANALOG_VIDEO_FILM_REEL(2),
    /**
     * <code>DATA_CARRIER_TYPE_16MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 3;</code>
     */
    DATA_CARRIER_TYPE_16MM_PICTURE_ANALOG_VIDEO_FILM_REEL(3),
    /**
     * <code>DATA_CARRIER_TYPE_BERNOULLI_DISK_20_M_B = 4;</code>
     */
    DATA_CARRIER_TYPE_BERNOULLI_DISK_20_M_B(4),
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_8CM = 5;</code>
     */
    DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_8CM(5),
    /**
     * <code>DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__SMALL_CASSETTE = 6;</code>
     */
    DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__SMALL_CASSETTE(6),
    /**
     * <code>DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM = 7;</code>
     */
    DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM(7),
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 8;</code>
     */
    DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH(8),
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE = 9;</code>
     */
    DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE(9),
    /**
     * <code>DATA_CARRIER_TYPE_CD_ROM_DIGITAL_DATA_DISK = 10;</code>
     */
    DATA_CARRIER_TYPE_CD_ROM_DIGITAL_DATA_DISK(10),
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 11;</code>
     */
    DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH(11),
    /**
     * <code>DATA_CARRIER_TYPE_PRE_MASTER_C_D = 12;</code>
     */
    DATA_CARRIER_TYPE_PRE_MASTER_C_D(12),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 13;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE(13),
    /**
     * <code>DATA_CARRIER_TYPE_V_X_A__MINUS__2_DIGITAL_DATA_TAPE = 14;</code>
     */
    DATA_CARRIER_TYPE_V_X_A__MINUS__2_DIGITAL_DATA_TAPE(14),
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__LARGE_CASSETTE = 15;</code>
     */
    DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__LARGE_CASSETTE(15),
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE = 16;</code>
     */
    DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE(16),
    /**
     * <code>DATA_CARRIER_TYPE_U_MATIC_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE = 17;</code>
     */
    DATA_CARRIER_TYPE_U_MATIC_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE(17),
    /**
     * <code>DATA_CARRIER_TYPE_BINDER_2_INCH_RING = 18;</code>
     */
    DATA_CARRIER_TYPE_BINDER_2_INCH_RING(18),
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL = 19;</code>
     */
    DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL(19),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 20;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE(20),
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_BOX = 21;</code>
     */
    DATA_CARRIER_TYPE_STORAGE_BOX(21),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE = 22;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE(22),
    /**
     * <code>DATA_CARRIER_TYPE_DVD__PLUS___RW_REWRITABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 23;</code>
     */
    DATA_CARRIER_TYPE_DVD__PLUS___RW_REWRITABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM(23),
    /**
     * <code>DATA_CARRIER_TYPE_EXABYTE8900_SERIES_DIGITAL_DATA_TAPE = 24;</code>
     */
    DATA_CARRIER_TYPE_EXABYTE8900_SERIES_DIGITAL_DATA_TAPE(24),
    /**
     * <code>DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE = 25;</code>
     */
    DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE(25),
    /**
     * <code>DATA_CARRIER_TYPE_V_X_A__MINUS__3_DIGITAL_DATA_TAPE = 26;</code>
     */
    DATA_CARRIER_TYPE_V_X_A__MINUS__3_DIGITAL_DATA_TAPE(26),
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__SMALL_CASSETTE = 27;</code>
     */
    DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__SMALL_CASSETTE(27),
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_12_INCH_REEL = 28;</code>
     */
    DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_12_INCH_REEL(28),
    /**
     * <code>DATA_CARRIER_TYPE_ENVELOPE = 29;</code>
     */
    DATA_CARRIER_TYPE_ENVELOPE(29),
    /**
     * <code>DATA_CARRIER_TYPE_D_A_T320_DIGITAL_STORAGE_TAPE = 30;</code>
     */
    DATA_CARRIER_TYPE_D_A_T320_DIGITAL_STORAGE_TAPE(30),
    /**
     * <code>DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__MINI_CASSETTE = 31;</code>
     */
    DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__MINI_CASSETTE(31),
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 32;</code>
     */
    DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE(32),
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 33;</code>
     */
    DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH(33),
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE = 34;</code>
     */
    DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE(34),
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 35;</code>
     */
    DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE(35),
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 36;</code>
     */
    DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE(36),
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_650_M_B = 37;</code>
     */
    DATA_CARRIER_TYPE_MO_DISK_650_M_B(37),
    /**
     * <code>DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH = 38;</code>
     */
    DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH(38),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL = 39;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL(39),
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__STANDARD_CASSETTE = 40;</code>
     */
    DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__STANDARD_CASSETTE(40),
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 41;</code>
     */
    DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH(41),
    /**
     * <code>DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 42;</code>
     */
    DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE(42),
    /**
     * <code>DATA_CARRIER_TYPE_V_X_A__MINUS__1_DIGITAL_DATA_TAPE = 43;</code>
     */
    DATA_CARRIER_TYPE_V_X_A__MINUS__1_DIGITAL_DATA_TAPE(43),
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__6_ULTRIUM_DIGITAL_DATA_TAPE = 44;</code>
     */
    DATA_CARRIER_TYPE_L_T_O__MINUS__6_ULTRIUM_DIGITAL_DATA_TAPE(44),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE = 45;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE(45),
    /**
     * <code>DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH = 46;</code>
     */
    DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH(46),
    /**
     * <code>DATA_CARRIER_TYPE_SOLID_STATE_MEMORY_STORAGE_CARDS = 47;</code>
     */
    DATA_CARRIER_TYPE_SOLID_STATE_MEMORY_STORAGE_CARDS(47),
    /**
     * <code>DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 48;</code>
     */
    DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE(48),
    /**
     * <code>DATA_CARRIER_TYPE_MINI_DISK = 49;</code>
     */
    DATA_CARRIER_TYPE_MINI_DISK(49),
    /**
     * <code>DATA_CARRIER_TYPE_HDV_HDTV_DIGITAL_VIDEO_TAPE = 50;</code>
     */
    DATA_CARRIER_TYPE_HDV_HDTV_DIGITAL_VIDEO_TAPE(50),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL = 51;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL(51),
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 52;</code>
     */
    DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH(52),
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__4_ULTRIUM_DIGITAL_DATA_TAPE = 53;</code>
     */
    DATA_CARRIER_TYPE_L_T_O__MINUS__4_ULTRIUM_DIGITAL_DATA_TAPE(53),
    /**
     * <code>DATA_CARRIER_TYPE_EXABYTE8700_SERIES_DIGITAL_DATA_TAPE = 54;</code>
     */
    DATA_CARRIER_TYPE_EXABYTE8700_SERIES_DIGITAL_DATA_TAPE(54),
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 55;</code>
     */
    DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH(55),
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_8CM = 56;</code>
     */
    DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_8CM(56),
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE = 57;</code>
     */
    DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE(57),
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_COMPACT_CASSETTE = 58;</code>
     */
    DATA_CARRIER_TYPE_DIGITAL_COMPACT_CASSETTE(58),
    /**
     * <code>DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH = 59;</code>
     */
    DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH(59),
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_2__DOT__6_G_B = 60;</code>
     */
    DATA_CARRIER_TYPE_MO_DISK_2__DOT__6_G_B(60),
    /**
     * <code>DATA_CARRIER_TYPE_XDCAM_REWRITABLE_OPTICAL_DISK = 61;</code>
     */
    DATA_CARRIER_TYPE_XDCAM_REWRITABLE_OPTICAL_DISK(61),
    /**
     * <code>DATA_CARRIER_TYPE_FILE_SYSTEM = 62;</code>
     */
    DATA_CARRIER_TYPE_FILE_SYSTEM(62),
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE = 63;</code>
     */
    DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE(63),
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__2_ULTRIUM_DIGITAL_DATA_TAPE = 64;</code>
     */
    DATA_CARRIER_TYPE_L_T_O__MINUS__2_ULTRIUM_DIGITAL_DATA_TAPE(64),
    /**
     * <code>DATA_CARRIER_TYPE_CD_I_INTERACTIVE_MULTIMEDIA_DIGITAL_DATA_DISK = 65;</code>
     */
    DATA_CARRIER_TYPE_CD_I_INTERACTIVE_MULTIMEDIA_DIGITAL_DATA_DISK(65),
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 66;</code>
     */
    DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH(66),
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 67;</code>
     */
    DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH(67),
    /**
     * <code>DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 68;</code>
     */
    DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE(68),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE = 69;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE(69),
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 70;</code>
     */
    DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH(70),
    /**
     * <code>DATA_CARRIER_TYPE_D_D_S__MINUS__4_DIGITAL_DATA_TAPE = 71;</code>
     */
    DATA_CARRIER_TYPE_D_D_S__MINUS__4_DIGITAL_DATA_TAPE(71),
    /**
     * <code>DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED = 72;</code>
     */
    DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED(72),
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__1_ULTRIUM_DIGITAL_DATA_TAPE = 73;</code>
     */
    DATA_CARRIER_TYPE_L_T_O__MINUS__1_ULTRIUM_DIGITAL_DATA_TAPE(73),
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL = 74;</code>
     */
    DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL(74),
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE = 75;</code>
     */
    DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE(75),
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 76;</code>
     */
    DATA_CARRIER_TYPE_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE(76),
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE = 77;</code>
     */
    DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE(77),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 78;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE(78),
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE = 79;</code>
     */
    DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE(79),
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 80;</code>
     */
    DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH(80),
    /**
     * <code>DATA_CARRIER_TYPE_35MM_SEPMAG_ANALOG_AUDIO_FILM_REEL = 81;</code>
     */
    DATA_CARRIER_TYPE_35MM_SEPMAG_ANALOG_AUDIO_FILM_REEL(81),
    /**
     * <code>DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 82;</code>
     */
    DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE(82),
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE = 83;</code>
     */
    DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE(83),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL = 84;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL(84),
    /**
     * <code>DATA_CARRIER_TYPE_EXABYTE8500_SERIES_DIGITAL_DATA_TAPE = 85;</code>
     */
    DATA_CARRIER_TYPE_EXABYTE8500_SERIES_DIGITAL_DATA_TAPE(85),
    /**
     * <code>DATA_CARRIER_TYPE_HI__MINUS__8_ANALOG_VIDEO_TAPE = 86;</code>
     */
    DATA_CARRIER_TYPE_HI__MINUS__8_ANALOG_VIDEO_TAPE(86),
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 87;</code>
     */
    DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE(87),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 88;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE(88),
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_14_INCH_REEL = 89;</code>
     */
    DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_14_INCH_REEL(89),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_CENTRONIX_INTERFACE = 90;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_CENTRONIX_INTERFACE(90),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 91;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE(91),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE = 92;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE(92),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 93;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE(93),
    /**
     * <code>DATA_CARRIER_TYPE_WAX_CYLINDER_PHONOGRAM_ANALOG_AUDIO_DISK = 94;</code>
     */
    DATA_CARRIER_TYPE_WAX_CYLINDER_PHONOGRAM_ANALOG_AUDIO_DISK(94),
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE = 95;</code>
     */
    DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE(95),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 96;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE(96),
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__3_DIGITAL_DATA_TAPE = 97;</code>
     */
    DATA_CARRIER_TYPE_A_I_T__MINUS__3_DIGITAL_DATA_TAPE(97),
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 98;</code>
     */
    DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE(98),
    /**
     * <code>DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 99;</code>
     */
    DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM(99),
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__5_ULTRIUM_DIGITAL_DATA_TAPE = 100;</code>
     */
    DATA_CARRIER_TYPE_L_T_O__MINUS__5_ULTRIUM_DIGITAL_DATA_TAPE(100),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL = 101;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL(101),
    /**
     * <code>DATA_CARRIER_TYPE_COMPACT_CASSETTE_ANALOG_AUDIO_TAPE = 102;</code>
     */
    DATA_CARRIER_TYPE_COMPACT_CASSETTE_ANALOG_AUDIO_TAPE(102),
    /**
     * <code>DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE = 103;</code>
     */
    DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE(103),
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 104;</code>
     */
    DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH(104),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL = 105;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL(105),
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_1200_M_B = 106;</code>
     */
    DATA_CARRIER_TYPE_MO_DISK_1200_M_B(106),
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_8CM = 107;</code>
     */
    DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_8CM(107),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL = 108;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL(108),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL = 109;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL(109),
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 110;</code>
     */
    DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH(110),
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 111;</code>
     */
    DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE(111),
    /**
     * <code>DATA_CARRIER_TYPE_SINGLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH = 112;</code>
     */
    DATA_CARRIER_TYPE_SINGLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH(112),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 113;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE(113),
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE = 114;</code>
     */
    DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE(114),
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 115;</code>
     */
    DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH(115),
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__3_E_X_DIGITAL_DATA_TAPE = 116;</code>
     */
    DATA_CARRIER_TYPE_A_I_T__MINUS__3_E_X_DIGITAL_DATA_TAPE(116),
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_CONTAINER = 117;</code>
     */
    DATA_CARRIER_TYPE_STORAGE_CONTAINER(117),
    /**
     * <code>DATA_CARRIER_TYPE_BINDER_0__DOT__5_INCH_RING = 118;</code>
     */
    DATA_CARRIER_TYPE_BINDER_0__DOT__5_INCH_RING(118),
    /**
     * <code>DATA_CARRIER_TYPE_D_L_T__MINUS___I_I_I_DIGITAL_DATA_TAPE = 119;</code>
     */
    DATA_CARRIER_TYPE_D_L_T__MINUS___I_I_I_DIGITAL_DATA_TAPE(119),
    /**
     * <code>DATA_CARRIER_TYPE_HDCAM_DIGITAL_VIDEO_TAPE = 120;</code>
     */
    DATA_CARRIER_TYPE_HDCAM_DIGITAL_VIDEO_TAPE(120),
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE = 121;</code>
     */
    DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE(121),
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_1__DOT__3_G_B = 122;</code>
     */
    DATA_CARRIER_TYPE_MO_DISK_1__DOT__3_G_B(122),
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 123;</code>
     */
    DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE(123),
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 124;</code>
     */
    DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE(124),
    /**
     * <code>DATA_CARRIER_TYPE_D_D_S__MINUS__3_DIGITAL_DATA_TAPE = 125;</code>
     */
    DATA_CARRIER_TYPE_D_D_S__MINUS__3_DIGITAL_DATA_TAPE(125),
    /**
     * <code>DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 126;</code>
     */
    DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM(126),
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 127;</code>
     */
    DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE(127),
    /**
     * <code>DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__NORMAL_CASSETTE = 128;</code>
     */
    DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__NORMAL_CASSETTE(128),
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 129;</code>
     */
    DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH(129),
    /**
     * <code>DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH = 130;</code>
     */
    DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH(130),
    /**
     * <code>DATA_CARRIER_TYPE_D_L_T__MINUS___I_V_DIGITAL_DATA_TAPE = 131;</code>
     */
    DATA_CARRIER_TYPE_D_L_T__MINUS___I_V_DIGITAL_DATA_TAPE(131),
    /**
     * <code>DATA_CARRIER_TYPE_ZIP_DIGITAL_DATA_DISK = 132;</code>
     */
    DATA_CARRIER_TYPE_ZIP_DIGITAL_DATA_DISK(132),
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB__FS___SATA_INTERFACE = 133;</code>
     */
    DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB__FS___SATA_INTERFACE(133),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL = 134;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL(134),
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__COMPACT_CASSETTE = 135;</code>
     */
    DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__COMPACT_CASSETTE(135),
    /**
     * <code>DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE = 136;</code>
     */
    DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE(136),
    /**
     * <code>DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM = 137;</code>
     */
    DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM(137),
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 138;</code>
     */
    DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH(138),
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 139;</code>
     */
    DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE(139),
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 140;</code>
     */
    DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH(140),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL = 141;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL(141),
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_12CM = 142;</code>
     */
    DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_12CM(142),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL = 143;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL(143),
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__LARGE_CASSETTE = 144;</code>
     */
    DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__LARGE_CASSETTE(144),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE = 145;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE(145),
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE = 146;</code>
     */
    DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE(146),
    /**
     * <code>DATA_CARRIER_TYPE_35MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 147;</code>
     */
    DATA_CARRIER_TYPE_35MM_PICTURE_ANALOG_VIDEO_FILM_REEL(147),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL = 148;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL(148),
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE = 149;</code>
     */
    DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE(149),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE = 150;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE(150),
    /**
     * <code>DATA_CARRIER_TYPE_LASERDISC_OPTICAL_DISK_SINGLE_SIDED = 151;</code>
     */
    DATA_CARRIER_TYPE_LASERDISC_OPTICAL_DISK_SINGLE_SIDED(151),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 152;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE(152),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE = 153;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE(153),
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 154;</code>
     */
    DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH(154),
    /**
     * <code>DATA_CARRIER_TYPE_SUPER16MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 155;</code>
     */
    DATA_CARRIER_TYPE_SUPER16MM_PICTURE_ANALOG_VIDEO_FILM_REEL(155),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 156;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE(156),
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 157;</code>
     */
    DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM(157),
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 158;</code>
     */
    DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE(158),
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 159;</code>
     */
    DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH(159),
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE = 160;</code>
     */
    DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE(160),
    /**
     * <code>DATA_CARRIER_TYPE_DVCAM_DIGITAL_VIDEO_TAPE = 161;</code>
     */
    DATA_CARRIER_TYPE_DVCAM_DIGITAL_VIDEO_TAPE(161),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 162;</code>
     */
    DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE(162),
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__4_DIGITAL_DATA_TAPE = 163;</code>
     */
    DATA_CARRIER_TYPE_A_I_T__MINUS__4_DIGITAL_DATA_TAPE(163),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL = 164;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL(164),
    /**
     * <code>DATA_CARRIER_TYPE_D_A_T160_DIGITAL_STORAGE_TAPE = 165;</code>
     */
    DATA_CARRIER_TYPE_D_A_T160_DIGITAL_STORAGE_TAPE(165),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE = 166;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE(166),
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_BOX_1__DOT__2_CUBIC_FEET = 167;</code>
     */
    DATA_CARRIER_TYPE_STORAGE_BOX_1__DOT__2_CUBIC_FEET(167),
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_BOX_2__DOT__0_CUBIC_FEET = 168;</code>
     */
    DATA_CARRIER_TYPE_STORAGE_BOX_2__DOT__0_CUBIC_FEET(168),
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 169;</code>
     */
    DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH(169),
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL = 170;</code>
     */
    DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL(170),
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_AUDIO_TAPE = 171;</code>
     */
    DATA_CARRIER_TYPE_DIGITAL_AUDIO_TAPE(171),
    /**
     * <code>DATA_CARRIER_TYPE_16MM_SEPMAG_ANALOG_AUDIO_FILM_REEL = 172;</code>
     */
    DATA_CARRIER_TYPE_16MM_SEPMAG_ANALOG_AUDIO_FILM_REEL(172),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 173;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE(173),
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 174;</code>
     */
    DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH(174),
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 175;</code>
     */
    DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH(175),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE = 176;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE(176),
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE = 177;</code>
     */
    DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE(177),
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__UNSPECIFIED_INTERFACE = 178;</code>
     */
    DATA_CARRIER_TYPE_HARD_DISK_DRIVE__UNSPECIFIED_INTERFACE(178),
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__3_ULTRIUM_DIGITAL_DATA_TAPE = 179;</code>
     */
    DATA_CARRIER_TYPE_L_T_O__MINUS__3_ULTRIUM_DIGITAL_DATA_TAPE(179),
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__5_DIGITAL_DATA_TAPE = 180;</code>
     */
    DATA_CARRIER_TYPE_A_I_T__MINUS__5_DIGITAL_DATA_TAPE(180),
    /**
     * <code>DATA_CARRIER_TYPE_D_A_T72_DIGITAL_STORAGE_TAPE = 181;</code>
     */
    DATA_CARRIER_TYPE_D_A_T72_DIGITAL_STORAGE_TAPE(181),
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_12CM = 182;</code>
     */
    DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_12CM(182),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 183;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE(183),
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE = 184;</code>
     */
    DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE(184),
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__2_DIGITAL_DATA_TAPE = 185;</code>
     */
    DATA_CARRIER_TYPE_A_I_T__MINUS__2_DIGITAL_DATA_TAPE(185),
    /**
     * <code>DATA_CARRIER_TYPE_D_D_S__MINUS__1_DIGITAL_DATA_TAPE = 186;</code>
     */
    DATA_CARRIER_TYPE_D_D_S__MINUS__1_DIGITAL_DATA_TAPE(186),
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE = 187;</code>
     */
    DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE(187),
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL80_PIN_INTERFACE = 188;</code>
     */
    DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL80_PIN_INTERFACE(188),
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_8CM = 189;</code>
     */
    DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_8CM(189),
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM = 190;</code>
     */
    DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM(190),
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE = 191;</code>
     */
    DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE(191),
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 192;</code>
     */
    DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE(192),
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_540_M_B = 193;</code>
     */
    DATA_CARRIER_TYPE_MO_DISK_540_M_B(193),
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 194;</code>
     */
    DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE(194),
    /**
     * <code>DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM = 195;</code>
     */
    DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM(195),
    /**
     * <code>DATA_CARRIER_TYPE_JAZ_DIGITAL_DATA_DISK = 196;</code>
     */
    DATA_CARRIER_TYPE_JAZ_DIGITAL_DATA_DISK(196),
    /**
     * <code>DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__LARGE_CASSETTE = 197;</code>
     */
    DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__LARGE_CASSETTE(197),
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE = 198;</code>
     */
    DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE(198),
    /**
     * <code>DATA_CARRIER_TYPE_D_D_S__MINUS__2_DIGITAL_DATA_TAPE = 199;</code>
     */
    DATA_CARRIER_TYPE_D_D_S__MINUS__2_DIGITAL_DATA_TAPE(199),
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_CONTAINER_2__DOT__0_CUBIC_FEET = 200;</code>
     */
    DATA_CARRIER_TYPE_STORAGE_CONTAINER_2__DOT__0_CUBIC_FEET(200),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL = 201;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL(201),
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 202;</code>
     */
    DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH(202),
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_CONTAINER_1__DOT__2_CUBIC_FEET = 203;</code>
     */
    DATA_CARRIER_TYPE_STORAGE_CONTAINER_1__DOT__2_CUBIC_FEET(203),
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__1_DIGITAL_DATA_TAPE = 204;</code>
     */
    DATA_CARRIER_TYPE_A_I_T__MINUS__1_DIGITAL_DATA_TAPE(204),
    /**
     * <code>DATA_CARRIER_TYPE_SUPER8MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 205;</code>
     */
    DATA_CARRIER_TYPE_SUPER8MM_PICTURE_ANALOG_VIDEO_FILM_REEL(205),
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL = 206;</code>
     */
    DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL(206),
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 207;</code>
     */
    DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH(207),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE = 208;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE(208),
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__7_ULTRIUM_DIGITAL_DATA_TAPE = 209;</code>
     */
    DATA_CARRIER_TYPE_L_T_O__MINUS__7_ULTRIUM_DIGITAL_DATA_TAPE(209),
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 210;</code>
     */
    DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE(210),
    /**
     * <code>DATA_CARRIER_TYPE_BINDER_1_INCH_RING = 211;</code>
     */
    DATA_CARRIER_TYPE_BINDER_1_INCH_RING(211),
    /**
     * <code>DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 212;</code>
     */
    DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM(212),
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE = 213;</code>
     */
    DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE(213),
    /**
     * <code>DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_8_INCH = 214;</code>
     */
    DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_8_INCH(214),
    /**
     * <code>DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED = 215;</code>
     */
    DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED(215),
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 216;</code>
     */
    DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE(216),
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL = 217;</code>
     */
    DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL(217),
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL = 218;</code>
     */
    DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL(218),
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 219;</code>
     */
    DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH(219),
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 220;</code>
     */
    DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH(220),
    /**
     * <code>DATA_CARRIER_TYPE_BINDER_1__DOT__5_INCH_RING = 221;</code>
     */
    DATA_CARRIER_TYPE_BINDER_1__DOT__5_INCH_RING(221),
    /**
     * <code>DATA_CARRIER_TYPE_CD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 222;</code>
     */
    DATA_CARRIER_TYPE_CD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM(222),
    ;

    /**
     * <code>DATA_CARRIER_TYPE_EXABYTE_MAMMOTH_DIGITAL_DATA_TAPE = 0;</code>
     */
    public static final int DATA_CARRIER_TYPE_EXABYTE_MAMMOTH_DIGITAL_DATA_TAPE_VALUE = 0;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE = 1;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE_VALUE = 1;
    /**
     * <code>DATA_CARRIER_TYPE_8MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 2;</code>
     */
    public static final int DATA_CARRIER_TYPE_8MM_PICTURE_ANALOG_VIDEO_FILM_REEL_VALUE = 2;
    /**
     * <code>DATA_CARRIER_TYPE_16MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 3;</code>
     */
    public static final int DATA_CARRIER_TYPE_16MM_PICTURE_ANALOG_VIDEO_FILM_REEL_VALUE = 3;
    /**
     * <code>DATA_CARRIER_TYPE_BERNOULLI_DISK_20_M_B = 4;</code>
     */
    public static final int DATA_CARRIER_TYPE_BERNOULLI_DISK_20_M_B_VALUE = 4;
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_8CM = 5;</code>
     */
    public static final int DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_8CM_VALUE = 5;
    /**
     * <code>DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__SMALL_CASSETTE = 6;</code>
     */
    public static final int DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 6;
    /**
     * <code>DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM = 7;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM_VALUE = 7;
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 8;</code>
     */
    public static final int DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH_VALUE = 8;
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE = 9;</code>
     */
    public static final int DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE_VALUE = 9;
    /**
     * <code>DATA_CARRIER_TYPE_CD_ROM_DIGITAL_DATA_DISK = 10;</code>
     */
    public static final int DATA_CARRIER_TYPE_CD_ROM_DIGITAL_DATA_DISK_VALUE = 10;
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 11;</code>
     */
    public static final int DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH_VALUE = 11;
    /**
     * <code>DATA_CARRIER_TYPE_PRE_MASTER_C_D = 12;</code>
     */
    public static final int DATA_CARRIER_TYPE_PRE_MASTER_C_D_VALUE = 12;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 13;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 13;
    /**
     * <code>DATA_CARRIER_TYPE_V_X_A__MINUS__2_DIGITAL_DATA_TAPE = 14;</code>
     */
    public static final int DATA_CARRIER_TYPE_V_X_A__MINUS__2_DIGITAL_DATA_TAPE_VALUE = 14;
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__LARGE_CASSETTE = 15;</code>
     */
    public static final int DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 15;
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE = 16;</code>
     */
    public static final int DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE_VALUE = 16;
    /**
     * <code>DATA_CARRIER_TYPE_U_MATIC_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE = 17;</code>
     */
    public static final int DATA_CARRIER_TYPE_U_MATIC_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 17;
    /**
     * <code>DATA_CARRIER_TYPE_BINDER_2_INCH_RING = 18;</code>
     */
    public static final int DATA_CARRIER_TYPE_BINDER_2_INCH_RING_VALUE = 18;
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL = 19;</code>
     */
    public static final int DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL_VALUE = 19;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 20;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 20;
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_BOX = 21;</code>
     */
    public static final int DATA_CARRIER_TYPE_STORAGE_BOX_VALUE = 21;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE = 22;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE_VALUE = 22;
    /**
     * <code>DATA_CARRIER_TYPE_DVD__PLUS___RW_REWRITABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 23;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVD__PLUS___RW_REWRITABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM_VALUE = 23;
    /**
     * <code>DATA_CARRIER_TYPE_EXABYTE8900_SERIES_DIGITAL_DATA_TAPE = 24;</code>
     */
    public static final int DATA_CARRIER_TYPE_EXABYTE8900_SERIES_DIGITAL_DATA_TAPE_VALUE = 24;
    /**
     * <code>DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE = 25;</code>
     */
    public static final int DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE_VALUE = 25;
    /**
     * <code>DATA_CARRIER_TYPE_V_X_A__MINUS__3_DIGITAL_DATA_TAPE = 26;</code>
     */
    public static final int DATA_CARRIER_TYPE_V_X_A__MINUS__3_DIGITAL_DATA_TAPE_VALUE = 26;
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__SMALL_CASSETTE = 27;</code>
     */
    public static final int DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 27;
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_12_INCH_REEL = 28;</code>
     */
    public static final int DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_12_INCH_REEL_VALUE = 28;
    /**
     * <code>DATA_CARRIER_TYPE_ENVELOPE = 29;</code>
     */
    public static final int DATA_CARRIER_TYPE_ENVELOPE_VALUE = 29;
    /**
     * <code>DATA_CARRIER_TYPE_D_A_T320_DIGITAL_STORAGE_TAPE = 30;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_A_T320_DIGITAL_STORAGE_TAPE_VALUE = 30;
    /**
     * <code>DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__MINI_CASSETTE = 31;</code>
     */
    public static final int DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__MINI_CASSETTE_VALUE = 31;
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 32;</code>
     */
    public static final int DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE_VALUE = 32;
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 33;</code>
     */
    public static final int DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH_VALUE = 33;
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE = 34;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE_VALUE = 34;
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 35;</code>
     */
    public static final int DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE_VALUE = 35;
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 36;</code>
     */
    public static final int DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE_VALUE = 36;
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_650_M_B = 37;</code>
     */
    public static final int DATA_CARRIER_TYPE_MO_DISK_650_M_B_VALUE = 37;
    /**
     * <code>DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH = 38;</code>
     */
    public static final int DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH_VALUE = 38;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL = 39;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL_VALUE = 39;
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__STANDARD_CASSETTE = 40;</code>
     */
    public static final int DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__STANDARD_CASSETTE_VALUE = 40;
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 41;</code>
     */
    public static final int DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH_VALUE = 41;
    /**
     * <code>DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 42;</code>
     */
    public static final int DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 42;
    /**
     * <code>DATA_CARRIER_TYPE_V_X_A__MINUS__1_DIGITAL_DATA_TAPE = 43;</code>
     */
    public static final int DATA_CARRIER_TYPE_V_X_A__MINUS__1_DIGITAL_DATA_TAPE_VALUE = 43;
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__6_ULTRIUM_DIGITAL_DATA_TAPE = 44;</code>
     */
    public static final int DATA_CARRIER_TYPE_L_T_O__MINUS__6_ULTRIUM_DIGITAL_DATA_TAPE_VALUE = 44;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE = 45;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE_VALUE = 45;
    /**
     * <code>DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH = 46;</code>
     */
    public static final int DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH_VALUE = 46;
    /**
     * <code>DATA_CARRIER_TYPE_SOLID_STATE_MEMORY_STORAGE_CARDS = 47;</code>
     */
    public static final int DATA_CARRIER_TYPE_SOLID_STATE_MEMORY_STORAGE_CARDS_VALUE = 47;
    /**
     * <code>DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 48;</code>
     */
    public static final int DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 48;
    /**
     * <code>DATA_CARRIER_TYPE_MINI_DISK = 49;</code>
     */
    public static final int DATA_CARRIER_TYPE_MINI_DISK_VALUE = 49;
    /**
     * <code>DATA_CARRIER_TYPE_HDV_HDTV_DIGITAL_VIDEO_TAPE = 50;</code>
     */
    public static final int DATA_CARRIER_TYPE_HDV_HDTV_DIGITAL_VIDEO_TAPE_VALUE = 50;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL = 51;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL_VALUE = 51;
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 52;</code>
     */
    public static final int DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH_VALUE = 52;
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__4_ULTRIUM_DIGITAL_DATA_TAPE = 53;</code>
     */
    public static final int DATA_CARRIER_TYPE_L_T_O__MINUS__4_ULTRIUM_DIGITAL_DATA_TAPE_VALUE = 53;
    /**
     * <code>DATA_CARRIER_TYPE_EXABYTE8700_SERIES_DIGITAL_DATA_TAPE = 54;</code>
     */
    public static final int DATA_CARRIER_TYPE_EXABYTE8700_SERIES_DIGITAL_DATA_TAPE_VALUE = 54;
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 55;</code>
     */
    public static final int DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH_VALUE = 55;
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_8CM = 56;</code>
     */
    public static final int DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_8CM_VALUE = 56;
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE = 57;</code>
     */
    public static final int DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 57;
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_COMPACT_CASSETTE = 58;</code>
     */
    public static final int DATA_CARRIER_TYPE_DIGITAL_COMPACT_CASSETTE_VALUE = 58;
    /**
     * <code>DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH = 59;</code>
     */
    public static final int DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH_VALUE = 59;
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_2__DOT__6_G_B = 60;</code>
     */
    public static final int DATA_CARRIER_TYPE_MO_DISK_2__DOT__6_G_B_VALUE = 60;
    /**
     * <code>DATA_CARRIER_TYPE_XDCAM_REWRITABLE_OPTICAL_DISK = 61;</code>
     */
    public static final int DATA_CARRIER_TYPE_XDCAM_REWRITABLE_OPTICAL_DISK_VALUE = 61;
    /**
     * <code>DATA_CARRIER_TYPE_FILE_SYSTEM = 62;</code>
     */
    public static final int DATA_CARRIER_TYPE_FILE_SYSTEM_VALUE = 62;
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE = 63;</code>
     */
    public static final int DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE_VALUE = 63;
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__2_ULTRIUM_DIGITAL_DATA_TAPE = 64;</code>
     */
    public static final int DATA_CARRIER_TYPE_L_T_O__MINUS__2_ULTRIUM_DIGITAL_DATA_TAPE_VALUE = 64;
    /**
     * <code>DATA_CARRIER_TYPE_CD_I_INTERACTIVE_MULTIMEDIA_DIGITAL_DATA_DISK = 65;</code>
     */
    public static final int DATA_CARRIER_TYPE_CD_I_INTERACTIVE_MULTIMEDIA_DIGITAL_DATA_DISK_VALUE = 65;
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 66;</code>
     */
    public static final int DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH_VALUE = 66;
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 67;</code>
     */
    public static final int DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH_VALUE = 67;
    /**
     * <code>DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 68;</code>
     */
    public static final int DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 68;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE = 69;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE_VALUE = 69;
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 70;</code>
     */
    public static final int DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH_VALUE = 70;
    /**
     * <code>DATA_CARRIER_TYPE_D_D_S__MINUS__4_DIGITAL_DATA_TAPE = 71;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_D_S__MINUS__4_DIGITAL_DATA_TAPE_VALUE = 71;
    /**
     * <code>DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED = 72;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED_VALUE = 72;
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__1_ULTRIUM_DIGITAL_DATA_TAPE = 73;</code>
     */
    public static final int DATA_CARRIER_TYPE_L_T_O__MINUS__1_ULTRIUM_DIGITAL_DATA_TAPE_VALUE = 73;
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL = 74;</code>
     */
    public static final int DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL_VALUE = 74;
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE = 75;</code>
     */
    public static final int DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE_VALUE = 75;
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 76;</code>
     */
    public static final int DATA_CARRIER_TYPE_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE_VALUE = 76;
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE = 77;</code>
     */
    public static final int DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE_VALUE = 77;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 78;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 78;
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE = 79;</code>
     */
    public static final int DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE_VALUE = 79;
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 80;</code>
     */
    public static final int DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH_VALUE = 80;
    /**
     * <code>DATA_CARRIER_TYPE_35MM_SEPMAG_ANALOG_AUDIO_FILM_REEL = 81;</code>
     */
    public static final int DATA_CARRIER_TYPE_35MM_SEPMAG_ANALOG_AUDIO_FILM_REEL_VALUE = 81;
    /**
     * <code>DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 82;</code>
     */
    public static final int DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 82;
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE = 83;</code>
     */
    public static final int DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE_VALUE = 83;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL = 84;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL_VALUE = 84;
    /**
     * <code>DATA_CARRIER_TYPE_EXABYTE8500_SERIES_DIGITAL_DATA_TAPE = 85;</code>
     */
    public static final int DATA_CARRIER_TYPE_EXABYTE8500_SERIES_DIGITAL_DATA_TAPE_VALUE = 85;
    /**
     * <code>DATA_CARRIER_TYPE_HI__MINUS__8_ANALOG_VIDEO_TAPE = 86;</code>
     */
    public static final int DATA_CARRIER_TYPE_HI__MINUS__8_ANALOG_VIDEO_TAPE_VALUE = 86;
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 87;</code>
     */
    public static final int DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 87;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 88;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 88;
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_14_INCH_REEL = 89;</code>
     */
    public static final int DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_14_INCH_REEL_VALUE = 89;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_CENTRONIX_INTERFACE = 90;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_CENTRONIX_INTERFACE_VALUE = 90;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 91;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE_VALUE = 91;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE = 92;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE_VALUE = 92;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 93;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 93;
    /**
     * <code>DATA_CARRIER_TYPE_WAX_CYLINDER_PHONOGRAM_ANALOG_AUDIO_DISK = 94;</code>
     */
    public static final int DATA_CARRIER_TYPE_WAX_CYLINDER_PHONOGRAM_ANALOG_AUDIO_DISK_VALUE = 94;
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE = 95;</code>
     */
    public static final int DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE_VALUE = 95;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 96;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 96;
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__3_DIGITAL_DATA_TAPE = 97;</code>
     */
    public static final int DATA_CARRIER_TYPE_A_I_T__MINUS__3_DIGITAL_DATA_TAPE_VALUE = 97;
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 98;</code>
     */
    public static final int DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 98;
    /**
     * <code>DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 99;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM_VALUE = 99;
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__5_ULTRIUM_DIGITAL_DATA_TAPE = 100;</code>
     */
    public static final int DATA_CARRIER_TYPE_L_T_O__MINUS__5_ULTRIUM_DIGITAL_DATA_TAPE_VALUE = 100;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL = 101;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL_VALUE = 101;
    /**
     * <code>DATA_CARRIER_TYPE_COMPACT_CASSETTE_ANALOG_AUDIO_TAPE = 102;</code>
     */
    public static final int DATA_CARRIER_TYPE_COMPACT_CASSETTE_ANALOG_AUDIO_TAPE_VALUE = 102;
    /**
     * <code>DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE = 103;</code>
     */
    public static final int DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE_VALUE = 103;
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 104;</code>
     */
    public static final int DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH_VALUE = 104;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL = 105;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL_VALUE = 105;
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_1200_M_B = 106;</code>
     */
    public static final int DATA_CARRIER_TYPE_MO_DISK_1200_M_B_VALUE = 106;
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_8CM = 107;</code>
     */
    public static final int DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_8CM_VALUE = 107;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL = 108;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL_VALUE = 108;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL = 109;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL_VALUE = 109;
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 110;</code>
     */
    public static final int DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH_VALUE = 110;
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 111;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 111;
    /**
     * <code>DATA_CARRIER_TYPE_SINGLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH = 112;</code>
     */
    public static final int DATA_CARRIER_TYPE_SINGLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH_VALUE = 112;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 113;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 113;
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE = 114;</code>
     */
    public static final int DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE_VALUE = 114;
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 115;</code>
     */
    public static final int DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH_VALUE = 115;
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__3_E_X_DIGITAL_DATA_TAPE = 116;</code>
     */
    public static final int DATA_CARRIER_TYPE_A_I_T__MINUS__3_E_X_DIGITAL_DATA_TAPE_VALUE = 116;
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_CONTAINER = 117;</code>
     */
    public static final int DATA_CARRIER_TYPE_STORAGE_CONTAINER_VALUE = 117;
    /**
     * <code>DATA_CARRIER_TYPE_BINDER_0__DOT__5_INCH_RING = 118;</code>
     */
    public static final int DATA_CARRIER_TYPE_BINDER_0__DOT__5_INCH_RING_VALUE = 118;
    /**
     * <code>DATA_CARRIER_TYPE_D_L_T__MINUS___I_I_I_DIGITAL_DATA_TAPE = 119;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_L_T__MINUS___I_I_I_DIGITAL_DATA_TAPE_VALUE = 119;
    /**
     * <code>DATA_CARRIER_TYPE_HDCAM_DIGITAL_VIDEO_TAPE = 120;</code>
     */
    public static final int DATA_CARRIER_TYPE_HDCAM_DIGITAL_VIDEO_TAPE_VALUE = 120;
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE = 121;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE_VALUE = 121;
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_1__DOT__3_G_B = 122;</code>
     */
    public static final int DATA_CARRIER_TYPE_MO_DISK_1__DOT__3_G_B_VALUE = 122;
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 123;</code>
     */
    public static final int DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 123;
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 124;</code>
     */
    public static final int DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE_VALUE = 124;
    /**
     * <code>DATA_CARRIER_TYPE_D_D_S__MINUS__3_DIGITAL_DATA_TAPE = 125;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_D_S__MINUS__3_DIGITAL_DATA_TAPE_VALUE = 125;
    /**
     * <code>DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 126;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM_VALUE = 126;
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 127;</code>
     */
    public static final int DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 127;
    /**
     * <code>DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__NORMAL_CASSETTE = 128;</code>
     */
    public static final int DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__NORMAL_CASSETTE_VALUE = 128;
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 129;</code>
     */
    public static final int DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH_VALUE = 129;
    /**
     * <code>DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH = 130;</code>
     */
    public static final int DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH_VALUE = 130;
    /**
     * <code>DATA_CARRIER_TYPE_D_L_T__MINUS___I_V_DIGITAL_DATA_TAPE = 131;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_L_T__MINUS___I_V_DIGITAL_DATA_TAPE_VALUE = 131;
    /**
     * <code>DATA_CARRIER_TYPE_ZIP_DIGITAL_DATA_DISK = 132;</code>
     */
    public static final int DATA_CARRIER_TYPE_ZIP_DIGITAL_DATA_DISK_VALUE = 132;
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB__FS___SATA_INTERFACE = 133;</code>
     */
    public static final int DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB__FS___SATA_INTERFACE_VALUE = 133;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL = 134;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL_VALUE = 134;
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__COMPACT_CASSETTE = 135;</code>
     */
    public static final int DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__COMPACT_CASSETTE_VALUE = 135;
    /**
     * <code>DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE = 136;</code>
     */
    public static final int DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE_VALUE = 136;
    /**
     * <code>DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM = 137;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM_VALUE = 137;
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 138;</code>
     */
    public static final int DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH_VALUE = 138;
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 139;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 139;
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 140;</code>
     */
    public static final int DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH_VALUE = 140;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL = 141;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL_VALUE = 141;
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_12CM = 142;</code>
     */
    public static final int DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_12CM_VALUE = 142;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL = 143;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL_VALUE = 143;
    /**
     * <code>DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__LARGE_CASSETTE = 144;</code>
     */
    public static final int DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 144;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE = 145;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE_VALUE = 145;
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE = 146;</code>
     */
    public static final int DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE_VALUE = 146;
    /**
     * <code>DATA_CARRIER_TYPE_35MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 147;</code>
     */
    public static final int DATA_CARRIER_TYPE_35MM_PICTURE_ANALOG_VIDEO_FILM_REEL_VALUE = 147;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL = 148;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL_VALUE = 148;
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE = 149;</code>
     */
    public static final int DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE_VALUE = 149;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE = 150;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE_VALUE = 150;
    /**
     * <code>DATA_CARRIER_TYPE_LASERDISC_OPTICAL_DISK_SINGLE_SIDED = 151;</code>
     */
    public static final int DATA_CARRIER_TYPE_LASERDISC_OPTICAL_DISK_SINGLE_SIDED_VALUE = 151;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 152;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE_VALUE = 152;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE = 153;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE_VALUE = 153;
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH = 154;</code>
     */
    public static final int DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH_VALUE = 154;
    /**
     * <code>DATA_CARRIER_TYPE_SUPER16MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 155;</code>
     */
    public static final int DATA_CARRIER_TYPE_SUPER16MM_PICTURE_ANALOG_VIDEO_FILM_REEL_VALUE = 155;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE = 156;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE_VALUE = 156;
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 157;</code>
     */
    public static final int DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM_VALUE = 157;
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE = 158;</code>
     */
    public static final int DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE_VALUE = 158;
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 159;</code>
     */
    public static final int DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH_VALUE = 159;
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE = 160;</code>
     */
    public static final int DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE_VALUE = 160;
    /**
     * <code>DATA_CARRIER_TYPE_DVCAM_DIGITAL_VIDEO_TAPE = 161;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVCAM_DIGITAL_VIDEO_TAPE_VALUE = 161;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 162;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 162;
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__4_DIGITAL_DATA_TAPE = 163;</code>
     */
    public static final int DATA_CARRIER_TYPE_A_I_T__MINUS__4_DIGITAL_DATA_TAPE_VALUE = 163;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL = 164;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL_VALUE = 164;
    /**
     * <code>DATA_CARRIER_TYPE_D_A_T160_DIGITAL_STORAGE_TAPE = 165;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_A_T160_DIGITAL_STORAGE_TAPE_VALUE = 165;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE = 166;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE_VALUE = 166;
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_BOX_1__DOT__2_CUBIC_FEET = 167;</code>
     */
    public static final int DATA_CARRIER_TYPE_STORAGE_BOX_1__DOT__2_CUBIC_FEET_VALUE = 167;
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_BOX_2__DOT__0_CUBIC_FEET = 168;</code>
     */
    public static final int DATA_CARRIER_TYPE_STORAGE_BOX_2__DOT__0_CUBIC_FEET_VALUE = 168;
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 169;</code>
     */
    public static final int DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH_VALUE = 169;
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL = 170;</code>
     */
    public static final int DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL_VALUE = 170;
    /**
     * <code>DATA_CARRIER_TYPE_DIGITAL_AUDIO_TAPE = 171;</code>
     */
    public static final int DATA_CARRIER_TYPE_DIGITAL_AUDIO_TAPE_VALUE = 171;
    /**
     * <code>DATA_CARRIER_TYPE_16MM_SEPMAG_ANALOG_AUDIO_FILM_REEL = 172;</code>
     */
    public static final int DATA_CARRIER_TYPE_16MM_SEPMAG_ANALOG_AUDIO_FILM_REEL_VALUE = 172;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 173;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 173;
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH = 174;</code>
     */
    public static final int DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH_VALUE = 174;
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 175;</code>
     */
    public static final int DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH_VALUE = 175;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE = 176;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE_VALUE = 176;
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE = 177;</code>
     */
    public static final int DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 177;
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__UNSPECIFIED_INTERFACE = 178;</code>
     */
    public static final int DATA_CARRIER_TYPE_HARD_DISK_DRIVE__UNSPECIFIED_INTERFACE_VALUE = 178;
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__3_ULTRIUM_DIGITAL_DATA_TAPE = 179;</code>
     */
    public static final int DATA_CARRIER_TYPE_L_T_O__MINUS__3_ULTRIUM_DIGITAL_DATA_TAPE_VALUE = 179;
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__5_DIGITAL_DATA_TAPE = 180;</code>
     */
    public static final int DATA_CARRIER_TYPE_A_I_T__MINUS__5_DIGITAL_DATA_TAPE_VALUE = 180;
    /**
     * <code>DATA_CARRIER_TYPE_D_A_T72_DIGITAL_STORAGE_TAPE = 181;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_A_T72_DIGITAL_STORAGE_TAPE_VALUE = 181;
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_12CM = 182;</code>
     */
    public static final int DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_12CM_VALUE = 182;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE = 183;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 183;
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE = 184;</code>
     */
    public static final int DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE_VALUE = 184;
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__2_DIGITAL_DATA_TAPE = 185;</code>
     */
    public static final int DATA_CARRIER_TYPE_A_I_T__MINUS__2_DIGITAL_DATA_TAPE_VALUE = 185;
    /**
     * <code>DATA_CARRIER_TYPE_D_D_S__MINUS__1_DIGITAL_DATA_TAPE = 186;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_D_S__MINUS__1_DIGITAL_DATA_TAPE_VALUE = 186;
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE = 187;</code>
     */
    public static final int DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE_VALUE = 187;
    /**
     * <code>DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL80_PIN_INTERFACE = 188;</code>
     */
    public static final int DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL80_PIN_INTERFACE_VALUE = 188;
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_8CM = 189;</code>
     */
    public static final int DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_8CM_VALUE = 189;
    /**
     * <code>DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM = 190;</code>
     */
    public static final int DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM_VALUE = 190;
    /**
     * <code>DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE = 191;</code>
     */
    public static final int DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE_VALUE = 191;
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 192;</code>
     */
    public static final int DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE_VALUE = 192;
    /**
     * <code>DATA_CARRIER_TYPE_MO_DISK_540_M_B = 193;</code>
     */
    public static final int DATA_CARRIER_TYPE_MO_DISK_540_M_B_VALUE = 193;
    /**
     * <code>DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 194;</code>
     */
    public static final int DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE_VALUE = 194;
    /**
     * <code>DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM = 195;</code>
     */
    public static final int DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM_VALUE = 195;
    /**
     * <code>DATA_CARRIER_TYPE_JAZ_DIGITAL_DATA_DISK = 196;</code>
     */
    public static final int DATA_CARRIER_TYPE_JAZ_DIGITAL_DATA_DISK_VALUE = 196;
    /**
     * <code>DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__LARGE_CASSETTE = 197;</code>
     */
    public static final int DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 197;
    /**
     * <code>DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE = 198;</code>
     */
    public static final int DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE_VALUE = 198;
    /**
     * <code>DATA_CARRIER_TYPE_D_D_S__MINUS__2_DIGITAL_DATA_TAPE = 199;</code>
     */
    public static final int DATA_CARRIER_TYPE_D_D_S__MINUS__2_DIGITAL_DATA_TAPE_VALUE = 199;
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_CONTAINER_2__DOT__0_CUBIC_FEET = 200;</code>
     */
    public static final int DATA_CARRIER_TYPE_STORAGE_CONTAINER_2__DOT__0_CUBIC_FEET_VALUE = 200;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL = 201;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL_VALUE = 201;
    /**
     * <code>DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH = 202;</code>
     */
    public static final int DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH_VALUE = 202;
    /**
     * <code>DATA_CARRIER_TYPE_STORAGE_CONTAINER_1__DOT__2_CUBIC_FEET = 203;</code>
     */
    public static final int DATA_CARRIER_TYPE_STORAGE_CONTAINER_1__DOT__2_CUBIC_FEET_VALUE = 203;
    /**
     * <code>DATA_CARRIER_TYPE_A_I_T__MINUS__1_DIGITAL_DATA_TAPE = 204;</code>
     */
    public static final int DATA_CARRIER_TYPE_A_I_T__MINUS__1_DIGITAL_DATA_TAPE_VALUE = 204;
    /**
     * <code>DATA_CARRIER_TYPE_SUPER8MM_PICTURE_ANALOG_VIDEO_FILM_REEL = 205;</code>
     */
    public static final int DATA_CARRIER_TYPE_SUPER8MM_PICTURE_ANALOG_VIDEO_FILM_REEL_VALUE = 205;
    /**
     * <code>DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL = 206;</code>
     */
    public static final int DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL_VALUE = 206;
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH = 207;</code>
     */
    public static final int DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH_VALUE = 207;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE = 208;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE_VALUE = 208;
    /**
     * <code>DATA_CARRIER_TYPE_L_T_O__MINUS__7_ULTRIUM_DIGITAL_DATA_TAPE = 209;</code>
     */
    public static final int DATA_CARRIER_TYPE_L_T_O__MINUS__7_ULTRIUM_DIGITAL_DATA_TAPE_VALUE = 209;
    /**
     * <code>DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE = 210;</code>
     */
    public static final int DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE_VALUE = 210;
    /**
     * <code>DATA_CARRIER_TYPE_BINDER_1_INCH_RING = 211;</code>
     */
    public static final int DATA_CARRIER_TYPE_BINDER_1_INCH_RING_VALUE = 211;
    /**
     * <code>DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 212;</code>
     */
    public static final int DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM_VALUE = 212;
    /**
     * <code>DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE = 213;</code>
     */
    public static final int DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE_VALUE = 213;
    /**
     * <code>DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_8_INCH = 214;</code>
     */
    public static final int DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_8_INCH_VALUE = 214;
    /**
     * <code>DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED = 215;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED_VALUE = 215;
    /**
     * <code>DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE = 216;</code>
     */
    public static final int DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE_VALUE = 216;
    /**
     * <code>DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL = 217;</code>
     */
    public static final int DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL_VALUE = 217;
    /**
     * <code>DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL = 218;</code>
     */
    public static final int DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL_VALUE = 218;
    /**
     * <code>DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 219;</code>
     */
    public static final int DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH_VALUE = 219;
    /**
     * <code>DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH = 220;</code>
     */
    public static final int DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH_VALUE = 220;
    /**
     * <code>DATA_CARRIER_TYPE_BINDER_1__DOT__5_INCH_RING = 221;</code>
     */
    public static final int DATA_CARRIER_TYPE_BINDER_1__DOT__5_INCH_RING_VALUE = 221;
    /**
     * <code>DATA_CARRIER_TYPE_CD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM = 222;</code>
     */
    public static final int DATA_CARRIER_TYPE_CD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM_VALUE = 222;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataCarrierType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DataCarrierType forNumber(int value) {
      switch (value) {
        case 0: return DATA_CARRIER_TYPE_EXABYTE_MAMMOTH_DIGITAL_DATA_TAPE;
        case 1: return DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE;
        case 2: return DATA_CARRIER_TYPE_8MM_PICTURE_ANALOG_VIDEO_FILM_REEL;
        case 3: return DATA_CARRIER_TYPE_16MM_PICTURE_ANALOG_VIDEO_FILM_REEL;
        case 4: return DATA_CARRIER_TYPE_BERNOULLI_DISK_20_M_B;
        case 5: return DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_8CM;
        case 6: return DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__SMALL_CASSETTE;
        case 7: return DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM;
        case 8: return DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH;
        case 9: return DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE;
        case 10: return DATA_CARRIER_TYPE_CD_ROM_DIGITAL_DATA_DISK;
        case 11: return DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH;
        case 12: return DATA_CARRIER_TYPE_PRE_MASTER_C_D;
        case 13: return DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE;
        case 14: return DATA_CARRIER_TYPE_V_X_A__MINUS__2_DIGITAL_DATA_TAPE;
        case 15: return DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__LARGE_CASSETTE;
        case 16: return DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE;
        case 17: return DATA_CARRIER_TYPE_U_MATIC_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE;
        case 18: return DATA_CARRIER_TYPE_BINDER_2_INCH_RING;
        case 19: return DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL;
        case 20: return DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE;
        case 21: return DATA_CARRIER_TYPE_STORAGE_BOX;
        case 22: return DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE;
        case 23: return DATA_CARRIER_TYPE_DVD__PLUS___RW_REWRITABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM;
        case 24: return DATA_CARRIER_TYPE_EXABYTE8900_SERIES_DIGITAL_DATA_TAPE;
        case 25: return DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE;
        case 26: return DATA_CARRIER_TYPE_V_X_A__MINUS__3_DIGITAL_DATA_TAPE;
        case 27: return DATA_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE__SMALL_CASSETTE;
        case 28: return DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_12_INCH_REEL;
        case 29: return DATA_CARRIER_TYPE_ENVELOPE;
        case 30: return DATA_CARRIER_TYPE_D_A_T320_DIGITAL_STORAGE_TAPE;
        case 31: return DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__MINI_CASSETTE;
        case 32: return DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE;
        case 33: return DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH;
        case 34: return DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE;
        case 35: return DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE;
        case 36: return DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE;
        case 37: return DATA_CARRIER_TYPE_MO_DISK_650_M_B;
        case 38: return DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH;
        case 39: return DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL;
        case 40: return DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__STANDARD_CASSETTE;
        case 41: return DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH;
        case 42: return DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE;
        case 43: return DATA_CARRIER_TYPE_V_X_A__MINUS__1_DIGITAL_DATA_TAPE;
        case 44: return DATA_CARRIER_TYPE_L_T_O__MINUS__6_ULTRIUM_DIGITAL_DATA_TAPE;
        case 45: return DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE;
        case 46: return DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_INCH;
        case 47: return DATA_CARRIER_TYPE_SOLID_STATE_MEMORY_STORAGE_CARDS;
        case 48: return DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE;
        case 49: return DATA_CARRIER_TYPE_MINI_DISK;
        case 50: return DATA_CARRIER_TYPE_HDV_HDTV_DIGITAL_VIDEO_TAPE;
        case 51: return DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL;
        case 52: return DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH;
        case 53: return DATA_CARRIER_TYPE_L_T_O__MINUS__4_ULTRIUM_DIGITAL_DATA_TAPE;
        case 54: return DATA_CARRIER_TYPE_EXABYTE8700_SERIES_DIGITAL_DATA_TAPE;
        case 55: return DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH;
        case 56: return DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_8CM;
        case 57: return DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__SMALL_CASSETTE;
        case 58: return DATA_CARRIER_TYPE_DIGITAL_COMPACT_CASSETTE;
        case 59: return DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH;
        case 60: return DATA_CARRIER_TYPE_MO_DISK_2__DOT__6_G_B;
        case 61: return DATA_CARRIER_TYPE_XDCAM_REWRITABLE_OPTICAL_DISK;
        case 62: return DATA_CARRIER_TYPE_FILE_SYSTEM;
        case 63: return DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE;
        case 64: return DATA_CARRIER_TYPE_L_T_O__MINUS__2_ULTRIUM_DIGITAL_DATA_TAPE;
        case 65: return DATA_CARRIER_TYPE_CD_I_INTERACTIVE_MULTIMEDIA_DIGITAL_DATA_DISK;
        case 66: return DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH;
        case 67: return DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH;
        case 68: return DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE;
        case 69: return DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTERFACE;
        case 70: return DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH;
        case 71: return DATA_CARRIER_TYPE_D_D_S__MINUS__4_DIGITAL_DATA_TAPE;
        case 72: return DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED;
        case 73: return DATA_CARRIER_TYPE_L_T_O__MINUS__1_ULTRIUM_DIGITAL_DATA_TAPE;
        case 74: return DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL;
        case 75: return DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE;
        case 76: return DATA_CARRIER_TYPE_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE;
        case 77: return DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE;
        case 78: return DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 79: return DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE;
        case 80: return DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH;
        case 81: return DATA_CARRIER_TYPE_35MM_SEPMAG_ANALOG_AUDIO_FILM_REEL;
        case 82: return DATA_CARRIER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE;
        case 83: return DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE;
        case 84: return DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL;
        case 85: return DATA_CARRIER_TYPE_EXABYTE8500_SERIES_DIGITAL_DATA_TAPE;
        case 86: return DATA_CARRIER_TYPE_HI__MINUS__8_ANALOG_VIDEO_TAPE;
        case 87: return DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE;
        case 88: return DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 89: return DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_14_INCH_REEL;
        case 90: return DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_CENTRONIX_INTERFACE;
        case 91: return DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE;
        case 92: return DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE;
        case 93: return DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE;
        case 94: return DATA_CARRIER_TYPE_WAX_CYLINDER_PHONOGRAM_ANALOG_AUDIO_DISK;
        case 95: return DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB_INTERFACE;
        case 96: return DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE;
        case 97: return DATA_CARRIER_TYPE_A_I_T__MINUS__3_DIGITAL_DATA_TAPE;
        case 98: return DATA_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE;
        case 99: return DATA_CARRIER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM;
        case 100: return DATA_CARRIER_TYPE_L_T_O__MINUS__5_ULTRIUM_DIGITAL_DATA_TAPE;
        case 101: return DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL;
        case 102: return DATA_CARRIER_TYPE_COMPACT_CASSETTE_ANALOG_AUDIO_TAPE;
        case 103: return DATA_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSETTE;
        case 104: return DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH;
        case 105: return DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL;
        case 106: return DATA_CARRIER_TYPE_MO_DISK_1200_M_B;
        case 107: return DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_8CM;
        case 108: return DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL;
        case 109: return DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL;
        case 110: return DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH;
        case 111: return DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE;
        case 112: return DATA_CARRIER_TYPE_SINGLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH;
        case 113: return DATA_CARRIER_TYPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 114: return DATA_CARRIER_TYPE_S__MINUS___VHS_ANALOG_VIDEO_TAPE__STANDARD_CASSETTE;
        case 115: return DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH;
        case 116: return DATA_CARRIER_TYPE_A_I_T__MINUS__3_E_X_DIGITAL_DATA_TAPE;
        case 117: return DATA_CARRIER_TYPE_STORAGE_CONTAINER;
        case 118: return DATA_CARRIER_TYPE_BINDER_0__DOT__5_INCH_RING;
        case 119: return DATA_CARRIER_TYPE_D_L_T__MINUS___I_I_I_DIGITAL_DATA_TAPE;
        case 120: return DATA_CARRIER_TYPE_HDCAM_DIGITAL_VIDEO_TAPE;
        case 121: return DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE;
        case 122: return DATA_CARRIER_TYPE_MO_DISK_1__DOT__3_G_B;
        case 123: return DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 124: return DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE;
        case 125: return DATA_CARRIER_TYPE_D_D_S__MINUS__3_DIGITAL_DATA_TAPE;
        case 126: return DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM;
        case 127: return DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE;
        case 128: return DATA_CARRIER_TYPE_DV_DIGITAL_VIDEO_TAPE__NORMAL_CASSETTE;
        case 129: return DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH;
        case 130: return DATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH;
        case 131: return DATA_CARRIER_TYPE_D_L_T__MINUS___I_V_DIGITAL_DATA_TAPE;
        case 132: return DATA_CARRIER_TYPE_ZIP_DIGITAL_DATA_DISK;
        case 133: return DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE__FS___USB__FS___SATA_INTERFACE;
        case 134: return DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL;
        case 135: return DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_TAPE__COMPACT_CASSETTE;
        case 136: return DATA_CARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE;
        case 137: return DATA_CARRIER_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM;
        case 138: return DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH;
        case 139: return DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE;
        case 140: return DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH;
        case 141: return DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_10__DOT__5_INCH_REEL;
        case 142: return DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_12CM;
        case 143: return DATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_10__DOT__5_INCH_REEL;
        case 144: return DATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO_TAPE__LARGE_CASSETTE;
        case 145: return DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE;
        case 146: return DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB_INTERFACE;
        case 147: return DATA_CARRIER_TYPE_35MM_PICTURE_ANALOG_VIDEO_FILM_REEL;
        case 148: return DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL;
        case 149: return DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE;
        case 150: return DATA_CARRIER_TYPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL50_PIN_INTERFACE;
        case 151: return DATA_CARRIER_TYPE_LASERDISC_OPTICAL_DISK_SINGLE_SIDED;
        case 152: return DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE;
        case 153: return DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETTE;
        case 154: return DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH;
        case 155: return DATA_CARRIER_TYPE_SUPER16MM_PICTURE_ANALOG_VIDEO_FILM_REEL;
        case 156: return DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFACE;
        case 157: return DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM;
        case 158: return DATA_CARRIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE;
        case 159: return DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH;
        case 160: return DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFACE;
        case 161: return DATA_CARRIER_TYPE_DVCAM_DIGITAL_VIDEO_TAPE;
        case 162: return DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 163: return DATA_CARRIER_TYPE_A_I_T__MINUS__4_DIGITAL_DATA_TAPE;
        case 164: return DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__SMALL_REEL;
        case 165: return DATA_CARRIER_TYPE_D_A_T160_DIGITAL_STORAGE_TAPE;
        case 166: return DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE;
        case 167: return DATA_CARRIER_TYPE_STORAGE_BOX_1__DOT__2_CUBIC_FEET;
        case 168: return DATA_CARRIER_TYPE_STORAGE_BOX_2__DOT__0_CUBIC_FEET;
        case 169: return DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH;
        case 170: return DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__MEDIUM_REEL;
        case 171: return DATA_CARRIER_TYPE_DIGITAL_AUDIO_TAPE;
        case 172: return DATA_CARRIER_TYPE_16MM_SEPMAG_ANALOG_AUDIO_FILM_REEL;
        case 173: return DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 174: return DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_12_INCH;
        case 175: return DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH;
        case 176: return DATA_CARRIER_TYPE_SCSI_I_HARD_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE;
        case 177: return DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 178: return DATA_CARRIER_TYPE_HARD_DISK_DRIVE__UNSPECIFIED_INTERFACE;
        case 179: return DATA_CARRIER_TYPE_L_T_O__MINUS__3_ULTRIUM_DIGITAL_DATA_TAPE;
        case 180: return DATA_CARRIER_TYPE_A_I_T__MINUS__5_DIGITAL_DATA_TAPE;
        case 181: return DATA_CARRIER_TYPE_D_A_T72_DIGITAL_STORAGE_TAPE;
        case 182: return DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_LAYER_12CM;
        case 183: return DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 184: return DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFACE;
        case 185: return DATA_CARRIER_TYPE_A_I_T__MINUS__2_DIGITAL_DATA_TAPE;
        case 186: return DATA_CARRIER_TYPE_D_D_S__MINUS__1_DIGITAL_DATA_TAPE;
        case 187: return DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE;
        case 188: return DATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK_DRIVE__EXTERNAL80_PIN_INTERFACE;
        case 189: return DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOUBLE_LAYER_8CM;
        case 190: return DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM;
        case 191: return DATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE;
        case 192: return DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE;
        case 193: return DATA_CARRIER_TYPE_MO_DISK_540_M_B;
        case 194: return DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE;
        case 195: return DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__DOUBLE_LAYER_12CM;
        case 196: return DATA_CARRIER_TYPE_JAZ_DIGITAL_DATA_DISK;
        case 197: return DATA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAPE__LARGE_CASSETTE;
        case 198: return DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INTERFACE;
        case 199: return DATA_CARRIER_TYPE_D_D_S__MINUS__2_DIGITAL_DATA_TAPE;
        case 200: return DATA_CARRIER_TYPE_STORAGE_CONTAINER_2__DOT__0_CUBIC_FEET;
        case 201: return DATA_CARRIER_TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL;
        case 202: return DATA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_10_INCH;
        case 203: return DATA_CARRIER_TYPE_STORAGE_CONTAINER_1__DOT__2_CUBIC_FEET;
        case 204: return DATA_CARRIER_TYPE_A_I_T__MINUS__1_DIGITAL_DATA_TAPE;
        case 205: return DATA_CARRIER_TYPE_SUPER8MM_PICTURE_ANALOG_VIDEO_FILM_REEL;
        case 206: return DATA_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL;
        case 207: return DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH;
        case 208: return DATA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_SIZE;
        case 209: return DATA_CARRIER_TYPE_L_T_O__MINUS__7_ULTRIUM_DIGITAL_DATA_TAPE;
        case 210: return DATA_CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE;
        case 211: return DATA_CARRIER_TYPE_BINDER_1_INCH_RING;
        case 212: return DATA_CARRIER_TYPE_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM;
        case 213: return DATA_CARRIER_TYPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_INTERFACE;
        case 214: return DATA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOPPY_DIGITAL_DATA_DISK_8_INCH;
        case 215: return DATA_CARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED;
        case 216: return DATA_CARRIER_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE;
        case 217: return DATA_CARRIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_7_INCH_REEL;
        case 218: return DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__LARGE_REEL;
        case 219: return DATA_CARRIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH;
        case 220: return DATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_7_INCH;
        case 221: return DATA_CARRIER_TYPE_BINDER_1__DOT__5_INCH_RING;
        case 222: return DATA_CARRIER_TYPE_CD_R_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_LAYER_12CM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DataCarrierType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DataCarrierType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DataCarrierType>() {
            public DataCarrierType findValueByNumber(int number) {
              return DataCarrierType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(41);
    }

    private static final DataCarrierType[] VALUES = values();

    public static DataCarrierType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DataCarrierType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DataCarrierType)
  }

  /**
   * Protobuf enum {@code avs.DdexTerritoryCode}
   */
  public enum DdexTerritoryCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DDEX_TERRITORY_CODE_X_K = 0;</code>
     */
    DDEX_TERRITORY_CODE_X_K(0),
    /**
     * <code>DDEX_TERRITORY_CODE_WORLDWIDE = 1;</code>
     */
    DDEX_TERRITORY_CODE_WORLDWIDE(1),
    ;

    /**
     * <code>DDEX_TERRITORY_CODE_X_K = 0;</code>
     */
    public static final int DDEX_TERRITORY_CODE_X_K_VALUE = 0;
    /**
     * <code>DDEX_TERRITORY_CODE_WORLDWIDE = 1;</code>
     */
    public static final int DDEX_TERRITORY_CODE_WORLDWIDE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DdexTerritoryCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DdexTerritoryCode forNumber(int value) {
      switch (value) {
        case 0: return DDEX_TERRITORY_CODE_X_K;
        case 1: return DDEX_TERRITORY_CODE_WORLDWIDE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DdexTerritoryCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DdexTerritoryCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DdexTerritoryCode>() {
            public DdexTerritoryCode findValueByNumber(int number) {
              return DdexTerritoryCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(42);
    }

    private static final DdexTerritoryCode[] VALUES = values();

    public static DdexTerritoryCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DdexTerritoryCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DdexTerritoryCode)
  }

  /**
   * Protobuf enum {@code avs.DeprecatedCurrencyCode}
   */
  public enum DeprecatedCurrencyCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEPRECATED_CURRENCY_CODE_S_K_K = 0;</code>
     */
    DEPRECATED_CURRENCY_CODE_S_K_K(0),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_S_T_D = 1;</code>
     */
    DEPRECATED_CURRENCY_CODE_S_T_D(1),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_L_V_L = 2;</code>
     */
    DEPRECATED_CURRENCY_CODE_L_V_L(2),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_M_T_L = 3;</code>
     */
    DEPRECATED_CURRENCY_CODE_M_T_L(3),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_L_T_L = 4;</code>
     */
    DEPRECATED_CURRENCY_CODE_L_T_L(4),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_V_E_F = 5;</code>
     */
    DEPRECATED_CURRENCY_CODE_V_E_F(5),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_E_E_K = 6;</code>
     */
    DEPRECATED_CURRENCY_CODE_E_E_K(6),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_C_Y_P = 7;</code>
     */
    DEPRECATED_CURRENCY_CODE_C_Y_P(7),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_M_R_O = 8;</code>
     */
    DEPRECATED_CURRENCY_CODE_M_R_O(8),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_R_O_L = 9;</code>
     */
    DEPRECATED_CURRENCY_CODE_R_O_L(9),
    /**
     * <code>DEPRECATED_CURRENCY_CODE_S_I_T = 10;</code>
     */
    DEPRECATED_CURRENCY_CODE_S_I_T(10),
    ;

    /**
     * <code>DEPRECATED_CURRENCY_CODE_S_K_K = 0;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_S_K_K_VALUE = 0;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_S_T_D = 1;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_S_T_D_VALUE = 1;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_L_V_L = 2;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_L_V_L_VALUE = 2;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_M_T_L = 3;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_M_T_L_VALUE = 3;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_L_T_L = 4;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_L_T_L_VALUE = 4;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_V_E_F = 5;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_V_E_F_VALUE = 5;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_E_E_K = 6;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_E_E_K_VALUE = 6;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_C_Y_P = 7;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_C_Y_P_VALUE = 7;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_M_R_O = 8;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_M_R_O_VALUE = 8;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_R_O_L = 9;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_R_O_L_VALUE = 9;
    /**
     * <code>DEPRECATED_CURRENCY_CODE_S_I_T = 10;</code>
     */
    public static final int DEPRECATED_CURRENCY_CODE_S_I_T_VALUE = 10;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeprecatedCurrencyCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DeprecatedCurrencyCode forNumber(int value) {
      switch (value) {
        case 0: return DEPRECATED_CURRENCY_CODE_S_K_K;
        case 1: return DEPRECATED_CURRENCY_CODE_S_T_D;
        case 2: return DEPRECATED_CURRENCY_CODE_L_V_L;
        case 3: return DEPRECATED_CURRENCY_CODE_M_T_L;
        case 4: return DEPRECATED_CURRENCY_CODE_L_T_L;
        case 5: return DEPRECATED_CURRENCY_CODE_V_E_F;
        case 6: return DEPRECATED_CURRENCY_CODE_E_E_K;
        case 7: return DEPRECATED_CURRENCY_CODE_C_Y_P;
        case 8: return DEPRECATED_CURRENCY_CODE_M_R_O;
        case 9: return DEPRECATED_CURRENCY_CODE_R_O_L;
        case 10: return DEPRECATED_CURRENCY_CODE_S_I_T;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeprecatedCurrencyCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeprecatedCurrencyCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeprecatedCurrencyCode>() {
            public DeprecatedCurrencyCode findValueByNumber(int number) {
              return DeprecatedCurrencyCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(43);
    }

    private static final DeprecatedCurrencyCode[] VALUES = values();

    public static DeprecatedCurrencyCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeprecatedCurrencyCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DeprecatedCurrencyCode)
  }

  /**
   * Protobuf enum {@code avs.DeprecatedIsoTerritoryCode}
   */
  public enum DeprecatedIsoTerritoryCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_J_T_U_M = 0;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_J_T_U_M(0),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_W_K_U_M = 1;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_W_K_U_M(1),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_S_U_H_H = 2;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_S_U_H_H(2),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_V_D_V_N = 3;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_V_D_V_N(3),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_C_T_K_I = 4;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_C_T_K_I(4),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_M_I_U_M = 5;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_M_I_U_M(5),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_T_P_T_L = 6;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_T_P_T_L(6),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_R_H_Z_W = 7;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_R_H_Z_W(7),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_P_C_H_H = 8;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_P_C_H_H(8),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_N_Q_A_Q = 9;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_N_Q_A_Q(9),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_S_K_I_N = 10;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_S_K_I_N(10),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_N_H_V_U = 11;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_N_H_V_U(11),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_D_D_D_E = 12;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_D_D_D_E(12),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_P_Z_P_A = 13;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_P_Z_P_A(13),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_B_Q_A_Q = 14;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_B_Q_A_Q(14),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_N_T_H_H = 15;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_N_T_H_H(15),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_Y_U_C_S = 16;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_Y_U_C_S(16),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_B_Y_A_A = 17;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_B_Y_A_A(17),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_F_Q_H_H = 18;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_F_Q_H_H(18),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_B_U_M_M = 19;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_B_U_M_M(19),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_C_S_H_H = 20;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_C_S_H_H(20),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_C_S_X_X = 21;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_C_S_X_X(21),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_A_I_D_J = 22;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_A_I_D_J(22),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_H_V_B_F = 23;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_H_V_B_F(23),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_A_N_H_H = 24;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_A_N_H_H(24),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_Z_R_C_D = 25;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_Z_R_C_D(25),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_P_U_U_M = 26;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_P_U_U_M(26),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_D_Y_B_J = 27;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_D_Y_B_J(27),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_Y_D_Y_E = 28;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_Y_D_Y_E(28),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_F_X_F_R = 29;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_F_X_F_R(29),
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_G_E_H_H = 30;</code>
     */
    DEPRECATED_ISO_TERRITORY_CODE_G_E_H_H(30),
    ;

    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_J_T_U_M = 0;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_J_T_U_M_VALUE = 0;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_W_K_U_M = 1;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_W_K_U_M_VALUE = 1;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_S_U_H_H = 2;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_S_U_H_H_VALUE = 2;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_V_D_V_N = 3;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_V_D_V_N_VALUE = 3;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_C_T_K_I = 4;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_C_T_K_I_VALUE = 4;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_M_I_U_M = 5;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_M_I_U_M_VALUE = 5;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_T_P_T_L = 6;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_T_P_T_L_VALUE = 6;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_R_H_Z_W = 7;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_R_H_Z_W_VALUE = 7;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_P_C_H_H = 8;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_P_C_H_H_VALUE = 8;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_N_Q_A_Q = 9;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_N_Q_A_Q_VALUE = 9;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_S_K_I_N = 10;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_S_K_I_N_VALUE = 10;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_N_H_V_U = 11;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_N_H_V_U_VALUE = 11;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_D_D_D_E = 12;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_D_D_D_E_VALUE = 12;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_P_Z_P_A = 13;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_P_Z_P_A_VALUE = 13;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_B_Q_A_Q = 14;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_B_Q_A_Q_VALUE = 14;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_N_T_H_H = 15;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_N_T_H_H_VALUE = 15;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_Y_U_C_S = 16;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_Y_U_C_S_VALUE = 16;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_B_Y_A_A = 17;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_B_Y_A_A_VALUE = 17;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_F_Q_H_H = 18;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_F_Q_H_H_VALUE = 18;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_B_U_M_M = 19;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_B_U_M_M_VALUE = 19;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_C_S_H_H = 20;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_C_S_H_H_VALUE = 20;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_C_S_X_X = 21;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_C_S_X_X_VALUE = 21;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_A_I_D_J = 22;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_A_I_D_J_VALUE = 22;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_H_V_B_F = 23;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_H_V_B_F_VALUE = 23;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_A_N_H_H = 24;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_A_N_H_H_VALUE = 24;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_Z_R_C_D = 25;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_Z_R_C_D_VALUE = 25;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_P_U_U_M = 26;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_P_U_U_M_VALUE = 26;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_D_Y_B_J = 27;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_D_Y_B_J_VALUE = 27;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_Y_D_Y_E = 28;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_Y_D_Y_E_VALUE = 28;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_F_X_F_R = 29;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_F_X_F_R_VALUE = 29;
    /**
     * <code>DEPRECATED_ISO_TERRITORY_CODE_G_E_H_H = 30;</code>
     */
    public static final int DEPRECATED_ISO_TERRITORY_CODE_G_E_H_H_VALUE = 30;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeprecatedIsoTerritoryCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DeprecatedIsoTerritoryCode forNumber(int value) {
      switch (value) {
        case 0: return DEPRECATED_ISO_TERRITORY_CODE_J_T_U_M;
        case 1: return DEPRECATED_ISO_TERRITORY_CODE_W_K_U_M;
        case 2: return DEPRECATED_ISO_TERRITORY_CODE_S_U_H_H;
        case 3: return DEPRECATED_ISO_TERRITORY_CODE_V_D_V_N;
        case 4: return DEPRECATED_ISO_TERRITORY_CODE_C_T_K_I;
        case 5: return DEPRECATED_ISO_TERRITORY_CODE_M_I_U_M;
        case 6: return DEPRECATED_ISO_TERRITORY_CODE_T_P_T_L;
        case 7: return DEPRECATED_ISO_TERRITORY_CODE_R_H_Z_W;
        case 8: return DEPRECATED_ISO_TERRITORY_CODE_P_C_H_H;
        case 9: return DEPRECATED_ISO_TERRITORY_CODE_N_Q_A_Q;
        case 10: return DEPRECATED_ISO_TERRITORY_CODE_S_K_I_N;
        case 11: return DEPRECATED_ISO_TERRITORY_CODE_N_H_V_U;
        case 12: return DEPRECATED_ISO_TERRITORY_CODE_D_D_D_E;
        case 13: return DEPRECATED_ISO_TERRITORY_CODE_P_Z_P_A;
        case 14: return DEPRECATED_ISO_TERRITORY_CODE_B_Q_A_Q;
        case 15: return DEPRECATED_ISO_TERRITORY_CODE_N_T_H_H;
        case 16: return DEPRECATED_ISO_TERRITORY_CODE_Y_U_C_S;
        case 17: return DEPRECATED_ISO_TERRITORY_CODE_B_Y_A_A;
        case 18: return DEPRECATED_ISO_TERRITORY_CODE_F_Q_H_H;
        case 19: return DEPRECATED_ISO_TERRITORY_CODE_B_U_M_M;
        case 20: return DEPRECATED_ISO_TERRITORY_CODE_C_S_H_H;
        case 21: return DEPRECATED_ISO_TERRITORY_CODE_C_S_X_X;
        case 22: return DEPRECATED_ISO_TERRITORY_CODE_A_I_D_J;
        case 23: return DEPRECATED_ISO_TERRITORY_CODE_H_V_B_F;
        case 24: return DEPRECATED_ISO_TERRITORY_CODE_A_N_H_H;
        case 25: return DEPRECATED_ISO_TERRITORY_CODE_Z_R_C_D;
        case 26: return DEPRECATED_ISO_TERRITORY_CODE_P_U_U_M;
        case 27: return DEPRECATED_ISO_TERRITORY_CODE_D_Y_B_J;
        case 28: return DEPRECATED_ISO_TERRITORY_CODE_Y_D_Y_E;
        case 29: return DEPRECATED_ISO_TERRITORY_CODE_F_X_F_R;
        case 30: return DEPRECATED_ISO_TERRITORY_CODE_G_E_H_H;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeprecatedIsoTerritoryCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeprecatedIsoTerritoryCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeprecatedIsoTerritoryCode>() {
            public DeprecatedIsoTerritoryCode findValueByNumber(int number) {
              return DeprecatedIsoTerritoryCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(44);
    }

    private static final DeprecatedIsoTerritoryCode[] VALUES = values();

    public static DeprecatedIsoTerritoryCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeprecatedIsoTerritoryCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DeprecatedIsoTerritoryCode)
  }

  /**
   * Protobuf enum {@code avs.DeprecatedReleaseType}
   */
  public enum DeprecatedReleaseType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEPRECATED_RELEASE_TYPE_TRACK_RELEASE = 0;</code>
     */
    DEPRECATED_RELEASE_TYPE_TRACK_RELEASE(0),
    ;

    /**
     * <code>DEPRECATED_RELEASE_TYPE_TRACK_RELEASE = 0;</code>
     */
    public static final int DEPRECATED_RELEASE_TYPE_TRACK_RELEASE_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeprecatedReleaseType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DeprecatedReleaseType forNumber(int value) {
      switch (value) {
        case 0: return DEPRECATED_RELEASE_TYPE_TRACK_RELEASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeprecatedReleaseType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeprecatedReleaseType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeprecatedReleaseType>() {
            public DeprecatedReleaseType findValueByNumber(int number) {
              return DeprecatedReleaseType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(45);
    }

    private static final DeprecatedReleaseType[] VALUES = values();

    public static DeprecatedReleaseType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeprecatedReleaseType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DeprecatedReleaseType)
  }

  /**
   * Protobuf enum {@code avs.DigitizationMode}
   */
  public enum DigitizationMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DIGITIZATION_MODE_A_D_D = 0;</code>
     */
    DIGITIZATION_MODE_A_D_D(0),
    /**
     * <code>DIGITIZATION_MODE_A_A_D = 1;</code>
     */
    DIGITIZATION_MODE_A_A_D(1),
    /**
     * <code>DIGITIZATION_MODE_UNKNOWN = 2;</code>
     */
    DIGITIZATION_MODE_UNKNOWN(2),
    /**
     * <code>DIGITIZATION_MODE_D_D_D = 3;</code>
     */
    DIGITIZATION_MODE_D_D_D(3),
    ;

    /**
     * <code>DIGITIZATION_MODE_A_D_D = 0;</code>
     */
    public static final int DIGITIZATION_MODE_A_D_D_VALUE = 0;
    /**
     * <code>DIGITIZATION_MODE_A_A_D = 1;</code>
     */
    public static final int DIGITIZATION_MODE_A_A_D_VALUE = 1;
    /**
     * <code>DIGITIZATION_MODE_UNKNOWN = 2;</code>
     */
    public static final int DIGITIZATION_MODE_UNKNOWN_VALUE = 2;
    /**
     * <code>DIGITIZATION_MODE_D_D_D = 3;</code>
     */
    public static final int DIGITIZATION_MODE_D_D_D_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DigitizationMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DigitizationMode forNumber(int value) {
      switch (value) {
        case 0: return DIGITIZATION_MODE_A_D_D;
        case 1: return DIGITIZATION_MODE_A_A_D;
        case 2: return DIGITIZATION_MODE_UNKNOWN;
        case 3: return DIGITIZATION_MODE_D_D_D;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DigitizationMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DigitizationMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DigitizationMode>() {
            public DigitizationMode findValueByNumber(int number) {
              return DigitizationMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(46);
    }

    private static final DigitizationMode[] VALUES = values();

    public static DigitizationMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DigitizationMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DigitizationMode)
  }

  /**
   * Protobuf enum {@code avs.DisplayArtistRole}
   */
  public enum DisplayArtistRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DISPLAY_ARTIST_ROLE_ARTIST = 0;</code>
     */
    DISPLAY_ARTIST_ROLE_ARTIST(0),
    /**
     * <code>DISPLAY_ARTIST_ROLE_MAIN_ARTIST = 1;</code>
     */
    DISPLAY_ARTIST_ROLE_MAIN_ARTIST(1),
    /**
     * <code>DISPLAY_ARTIST_ROLE_FEATURED_ARTIST = 2;</code>
     */
    DISPLAY_ARTIST_ROLE_FEATURED_ARTIST(2),
    ;

    /**
     * <code>DISPLAY_ARTIST_ROLE_ARTIST = 0;</code>
     */
    public static final int DISPLAY_ARTIST_ROLE_ARTIST_VALUE = 0;
    /**
     * <code>DISPLAY_ARTIST_ROLE_MAIN_ARTIST = 1;</code>
     */
    public static final int DISPLAY_ARTIST_ROLE_MAIN_ARTIST_VALUE = 1;
    /**
     * <code>DISPLAY_ARTIST_ROLE_FEATURED_ARTIST = 2;</code>
     */
    public static final int DISPLAY_ARTIST_ROLE_FEATURED_ARTIST_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DisplayArtistRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DisplayArtistRole forNumber(int value) {
      switch (value) {
        case 0: return DISPLAY_ARTIST_ROLE_ARTIST;
        case 1: return DISPLAY_ARTIST_ROLE_MAIN_ARTIST;
        case 2: return DISPLAY_ARTIST_ROLE_FEATURED_ARTIST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DisplayArtistRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DisplayArtistRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DisplayArtistRole>() {
            public DisplayArtistRole findValueByNumber(int number) {
              return DisplayArtistRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(47);
    }

    private static final DisplayArtistRole[] VALUES = values();

    public static DisplayArtistRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DisplayArtistRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DisplayArtistRole)
  }

  /**
   * Protobuf enum {@code avs.DistributionChannelType}
   */
  public enum DistributionChannelType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_CABLE = 0;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_CABLE(0),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_INTERNET_AND_MOBILE = 1;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_INTERNET_AND_MOBILE(1),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_MOBILE_TELEPHONE = 2;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_MOBILE_TELEPHONE(2),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_SATELLITE = 3;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_SATELLITE(3),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_I_P_T_V = 4;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_I_P_T_V(4),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_ON_DEMAND_STREAM = 5;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_ON_DEMAND_STREAM(5),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_AS_PER_CONTRACT = 6;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_AS_PER_CONTRACT(6),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_PHYSICAL = 7;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_PHYSICAL(7),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_UNKNOWN = 8;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_UNKNOWN(8),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_BROADCAST = 9;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_BROADCAST(9),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_PEER_TO_PEER = 10;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_PEER_TO_PEER(10),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_SIMULCAST = 11;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_SIMULCAST(11),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_WEBCAST = 12;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_WEBCAST(12),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_NARROWCAST = 13;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_NARROWCAST(13),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_INTERNET = 14;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_INTERNET(14),
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_USER_DEFINED = 15;</code>
     */
    DISTRIBUTION_CHANNEL_TYPE_USER_DEFINED(15),
    ;

    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_CABLE = 0;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_CABLE_VALUE = 0;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_INTERNET_AND_MOBILE = 1;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_INTERNET_AND_MOBILE_VALUE = 1;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_MOBILE_TELEPHONE = 2;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_MOBILE_TELEPHONE_VALUE = 2;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_SATELLITE = 3;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_SATELLITE_VALUE = 3;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_I_P_T_V = 4;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_I_P_T_V_VALUE = 4;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_ON_DEMAND_STREAM = 5;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_ON_DEMAND_STREAM_VALUE = 5;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_AS_PER_CONTRACT = 6;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_AS_PER_CONTRACT_VALUE = 6;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_PHYSICAL = 7;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_PHYSICAL_VALUE = 7;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_UNKNOWN = 8;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_UNKNOWN_VALUE = 8;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_BROADCAST = 9;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_BROADCAST_VALUE = 9;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_PEER_TO_PEER = 10;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_PEER_TO_PEER_VALUE = 10;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_SIMULCAST = 11;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_SIMULCAST_VALUE = 11;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_WEBCAST = 12;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_WEBCAST_VALUE = 12;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_NARROWCAST = 13;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_NARROWCAST_VALUE = 13;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_INTERNET = 14;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_INTERNET_VALUE = 14;
    /**
     * <code>DISTRIBUTION_CHANNEL_TYPE_USER_DEFINED = 15;</code>
     */
    public static final int DISTRIBUTION_CHANNEL_TYPE_USER_DEFINED_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DistributionChannelType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DistributionChannelType forNumber(int value) {
      switch (value) {
        case 0: return DISTRIBUTION_CHANNEL_TYPE_CABLE;
        case 1: return DISTRIBUTION_CHANNEL_TYPE_INTERNET_AND_MOBILE;
        case 2: return DISTRIBUTION_CHANNEL_TYPE_MOBILE_TELEPHONE;
        case 3: return DISTRIBUTION_CHANNEL_TYPE_SATELLITE;
        case 4: return DISTRIBUTION_CHANNEL_TYPE_I_P_T_V;
        case 5: return DISTRIBUTION_CHANNEL_TYPE_ON_DEMAND_STREAM;
        case 6: return DISTRIBUTION_CHANNEL_TYPE_AS_PER_CONTRACT;
        case 7: return DISTRIBUTION_CHANNEL_TYPE_PHYSICAL;
        case 8: return DISTRIBUTION_CHANNEL_TYPE_UNKNOWN;
        case 9: return DISTRIBUTION_CHANNEL_TYPE_BROADCAST;
        case 10: return DISTRIBUTION_CHANNEL_TYPE_PEER_TO_PEER;
        case 11: return DISTRIBUTION_CHANNEL_TYPE_SIMULCAST;
        case 12: return DISTRIBUTION_CHANNEL_TYPE_WEBCAST;
        case 13: return DISTRIBUTION_CHANNEL_TYPE_NARROWCAST;
        case 14: return DISTRIBUTION_CHANNEL_TYPE_INTERNET;
        case 15: return DISTRIBUTION_CHANNEL_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DistributionChannelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DistributionChannelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DistributionChannelType>() {
            public DistributionChannelType findValueByNumber(int number) {
              return DistributionChannelType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(48);
    }

    private static final DistributionChannelType[] VALUES = values();

    public static DistributionChannelType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DistributionChannelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DistributionChannelType)
  }

  /**
   * Protobuf enum {@code avs.DocumentType_LoD}
   */
  public enum DocumentType_LoD
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOCUMENT_TYPE__LO_D_LETTER_OF_DIRECTION = 0;</code>
     */
    DOCUMENT_TYPE__LO_D_LETTER_OF_DIRECTION(0),
    /**
     * <code>DOCUMENT_TYPE__LO_D_USER_DEFINED = 1;</code>
     */
    DOCUMENT_TYPE__LO_D_USER_DEFINED(1),
    ;

    /**
     * <code>DOCUMENT_TYPE__LO_D_LETTER_OF_DIRECTION = 0;</code>
     */
    public static final int DOCUMENT_TYPE__LO_D_LETTER_OF_DIRECTION_VALUE = 0;
    /**
     * <code>DOCUMENT_TYPE__LO_D_USER_DEFINED = 1;</code>
     */
    public static final int DOCUMENT_TYPE__LO_D_USER_DEFINED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DocumentType_LoD valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DocumentType_LoD forNumber(int value) {
      switch (value) {
        case 0: return DOCUMENT_TYPE__LO_D_LETTER_OF_DIRECTION;
        case 1: return DOCUMENT_TYPE__LO_D_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DocumentType_LoD>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DocumentType_LoD> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DocumentType_LoD>() {
            public DocumentType_LoD findValueByNumber(int number) {
              return DocumentType_LoD.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(49);
    }

    private static final DocumentType_LoD[] VALUES = values();

    public static DocumentType_LoD valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DocumentType_LoD(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DocumentType_LoD)
  }

  /**
   * Protobuf enum {@code avs.DocumentType_MWL}
   */
  public enum DocumentType_MWL
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOCUMENT_TYPE__M_W_L_RATE_CALCULATION = 0;</code>
     */
    DOCUMENT_TYPE__M_W_L_RATE_CALCULATION(0),
    /**
     * <code>DOCUMENT_TYPE__M_W_L_USER_DEFINED = 1;</code>
     */
    DOCUMENT_TYPE__M_W_L_USER_DEFINED(1),
    /**
     * <code>DOCUMENT_TYPE__M_W_L_CONTRACT = 2;</code>
     */
    DOCUMENT_TYPE__M_W_L_CONTRACT(2),
    ;

    /**
     * <code>DOCUMENT_TYPE__M_W_L_RATE_CALCULATION = 0;</code>
     */
    public static final int DOCUMENT_TYPE__M_W_L_RATE_CALCULATION_VALUE = 0;
    /**
     * <code>DOCUMENT_TYPE__M_W_L_USER_DEFINED = 1;</code>
     */
    public static final int DOCUMENT_TYPE__M_W_L_USER_DEFINED_VALUE = 1;
    /**
     * <code>DOCUMENT_TYPE__M_W_L_CONTRACT = 2;</code>
     */
    public static final int DOCUMENT_TYPE__M_W_L_CONTRACT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DocumentType_MWL valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DocumentType_MWL forNumber(int value) {
      switch (value) {
        case 0: return DOCUMENT_TYPE__M_W_L_RATE_CALCULATION;
        case 1: return DOCUMENT_TYPE__M_W_L_USER_DEFINED;
        case 2: return DOCUMENT_TYPE__M_W_L_CONTRACT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DocumentType_MWL>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DocumentType_MWL> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DocumentType_MWL>() {
            public DocumentType_MWL findValueByNumber(int number) {
              return DocumentType_MWL.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(50);
    }

    private static final DocumentType_MWL[] VALUES = values();

    public static DocumentType_MWL valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DocumentType_MWL(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DocumentType_MWL)
  }

  /**
   * Protobuf enum {@code avs.DpidStatus}
   */
  public enum DpidStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DPID_STATUS_ACTIVE = 0;</code>
     */
    DPID_STATUS_ACTIVE(0),
    /**
     * <code>DPID_STATUS_REPLACED = 1;</code>
     */
    DPID_STATUS_REPLACED(1),
    /**
     * <code>DPID_STATUS_DELETED = 2;</code>
     */
    DPID_STATUS_DELETED(2),
    ;

    /**
     * <code>DPID_STATUS_ACTIVE = 0;</code>
     */
    public static final int DPID_STATUS_ACTIVE_VALUE = 0;
    /**
     * <code>DPID_STATUS_REPLACED = 1;</code>
     */
    public static final int DPID_STATUS_REPLACED_VALUE = 1;
    /**
     * <code>DPID_STATUS_DELETED = 2;</code>
     */
    public static final int DPID_STATUS_DELETED_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DpidStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DpidStatus forNumber(int value) {
      switch (value) {
        case 0: return DPID_STATUS_ACTIVE;
        case 1: return DPID_STATUS_REPLACED;
        case 2: return DPID_STATUS_DELETED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DpidStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DpidStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DpidStatus>() {
            public DpidStatus findValueByNumber(int number) {
              return DpidStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(51);
    }

    private static final DpidStatus[] VALUES = values();

    public static DpidStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DpidStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DpidStatus)
  }

  /**
   * Protobuf enum {@code avs.DrmEnforcementType}
   */
  public enum DrmEnforcementType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DRM_ENFORCEMENT_TYPE_DRM_ENFORCED = 0;</code>
     */
    DRM_ENFORCEMENT_TYPE_DRM_ENFORCED(0),
    /**
     * <code>DRM_ENFORCEMENT_TYPE_NOT_DRM_ENFORCED = 1;</code>
     */
    DRM_ENFORCEMENT_TYPE_NOT_DRM_ENFORCED(1),
    ;

    /**
     * <code>DRM_ENFORCEMENT_TYPE_DRM_ENFORCED = 0;</code>
     */
    public static final int DRM_ENFORCEMENT_TYPE_DRM_ENFORCED_VALUE = 0;
    /**
     * <code>DRM_ENFORCEMENT_TYPE_NOT_DRM_ENFORCED = 1;</code>
     */
    public static final int DRM_ENFORCEMENT_TYPE_NOT_DRM_ENFORCED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DrmEnforcementType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DrmEnforcementType forNumber(int value) {
      switch (value) {
        case 0: return DRM_ENFORCEMENT_TYPE_DRM_ENFORCED;
        case 1: return DRM_ENFORCEMENT_TYPE_NOT_DRM_ENFORCED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DrmEnforcementType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DrmEnforcementType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DrmEnforcementType>() {
            public DrmEnforcementType findValueByNumber(int number) {
              return DrmEnforcementType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(52);
    }

    private static final DrmEnforcementType[] VALUES = values();

    public static DrmEnforcementType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DrmEnforcementType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.DrmEnforcementType)
  }

  /**
   * Protobuf enum {@code avs.ElementConfiguration}
   */
  public enum ElementConfiguration
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ELEMENT_CONFIGURATION_STUDIO_ONE = 0;</code>
     */
    ELEMENT_CONFIGURATION_STUDIO_ONE(0),
    /**
     * <code>ELEMENT_CONFIGURATION_ORANGE_BOOK = 1;</code>
     */
    ELEMENT_CONFIGURATION_ORANGE_BOOK(1),
    /**
     * <code>ELEMENT_CONFIGURATION_3_TRACK = 2;</code>
     */
    ELEMENT_CONFIGURATION_3_TRACK(2),
    /**
     * <code>ELEMENT_CONFIGURATION_QUARTER_TRACK_MONO = 3;</code>
     */
    ELEMENT_CONFIGURATION_QUARTER_TRACK_MONO(3),
    /**
     * <code>ELEMENT_CONFIGURATION_RETROSPECT_ARCHIVE = 4;</code>
     */
    ELEMENT_CONFIGURATION_RETROSPECT_ARCHIVE(4),
    /**
     * <code>ELEMENT_CONFIGURATION_FINAL_CUT_EXPRESS = 5;</code>
     */
    ELEMENT_CONFIGURATION_FINAL_CUT_EXPRESS(5),
    /**
     * <code>ELEMENT_CONFIGURATION_BRU_ARCHIVE = 6;</code>
     */
    ELEMENT_CONFIGURATION_BRU_ARCHIVE(6),
    /**
     * <code>ELEMENT_CONFIGURATION_LTFS_BACKUP = 7;</code>
     */
    ELEMENT_CONFIGURATION_LTFS_BACKUP(7),
    /**
     * <code>ELEMENT_CONFIGURATION_48_TRACK = 8;</code>
     */
    ELEMENT_CONFIGURATION_48_TRACK(8),
    /**
     * <code>ELEMENT_CONFIGURATION_CUBASE = 9;</code>
     */
    ELEMENT_CONFIGURATION_CUBASE(9),
    /**
     * <code>ELEMENT_CONFIGURATION_12_TRACK = 10;</code>
     */
    ELEMENT_CONFIGURATION_12_TRACK(10),
    /**
     * <code>ELEMENT_CONFIGURATION_TAR_ARCHIVE = 11;</code>
     */
    ELEMENT_CONFIGURATION_TAR_ARCHIVE(11),
    /**
     * <code>ELEMENT_CONFIGURATION_TOAST_ARCHIVE = 12;</code>
     */
    ELEMENT_CONFIGURATION_TOAST_ARCHIVE(12),
    /**
     * <code>ELEMENT_CONFIGURATION_8_TRACK = 13;</code>
     */
    ELEMENT_CONFIGURATION_8_TRACK(13),
    /**
     * <code>ELEMENT_CONFIGURATION_HARD_COPY = 14;</code>
     */
    ELEMENT_CONFIGURATION_HARD_COPY(14),
    /**
     * <code>ELEMENT_CONFIGURATION_SPLIT_STEREO = 15;</code>
     */
    ELEMENT_CONFIGURATION_SPLIT_STEREO(15),
    /**
     * <code>ELEMENT_CONFIGURATION_REDBOOK = 16;</code>
     */
    ELEMENT_CONFIGURATION_REDBOOK(16),
    /**
     * <code>ELEMENT_CONFIGURATION_RETROSPECT_CATALOG = 17;</code>
     */
    ELEMENT_CONFIGURATION_RETROSPECT_CATALOG(17),
    /**
     * <code>ELEMENT_CONFIGURATION_TRACKED_DISC__INSIDE_OUT = 18;</code>
     */
    ELEMENT_CONFIGURATION_TRACKED_DISC__INSIDE_OUT(18),
    /**
     * <code>ELEMENT_CONFIGURATION_24_TRACK = 19;</code>
     */
    ELEMENT_CONFIGURATION_24_TRACK(19),
    /**
     * <code>ELEMENT_CONFIGURATION_32_TRACK = 20;</code>
     */
    ELEMENT_CONFIGURATION_32_TRACK(20),
    /**
     * <code>ELEMENT_CONFIGURATION_DATA_FILES = 21;</code>
     */
    ELEMENT_CONFIGURATION_DATA_FILES(21),
    /**
     * <code>ELEMENT_CONFIGURATION_16_TRACK = 22;</code>
     */
    ELEMENT_CONFIGURATION_16_TRACK(22),
    /**
     * <code>ELEMENT_CONFIGURATION_HALF_TRACK_STEREO = 23;</code>
     */
    ELEMENT_CONFIGURATION_HALF_TRACK_STEREO(23),
    /**
     * <code>ELEMENT_CONFIGURATION_MONO_FILES = 24;</code>
     */
    ELEMENT_CONFIGURATION_MONO_FILES(24),
    /**
     * <code>ELEMENT_CONFIGURATION_LTFS_ARCHIVE = 25;</code>
     */
    ELEMENT_CONFIGURATION_LTFS_ARCHIVE(25),
    /**
     * <code>ELEMENT_CONFIGURATION_FULL_TRACK_MONO = 26;</code>
     */
    ELEMENT_CONFIGURATION_FULL_TRACK_MONO(26),
    /**
     * <code>ELEMENT_CONFIGURATION_QUARTER_TRACK_STEREO = 27;</code>
     */
    ELEMENT_CONFIGURATION_QUARTER_TRACK_STEREO(27),
    /**
     * <code>ELEMENT_CONFIGURATION_TRACKED_DISC__OUTSIDE_IN = 28;</code>
     */
    ELEMENT_CONFIGURATION_TRACKED_DISC__OUTSIDE_IN(28),
    /**
     * <code>ELEMENT_CONFIGURATION_TWIN_TRACK = 29;</code>
     */
    ELEMENT_CONFIGURATION_TWIN_TRACK(29),
    /**
     * <code>ELEMENT_CONFIGURATION_INTERLEAVED5__DOT__1_FILES = 30;</code>
     */
    ELEMENT_CONFIGURATION_INTERLEAVED5__DOT__1_FILES(30),
    /**
     * <code>ELEMENT_CONFIGURATION_QUICK_TIME = 31;</code>
     */
    ELEMENT_CONFIGURATION_QUICK_TIME(31),
    /**
     * <code>ELEMENT_CONFIGURATION_MEZZO_ARCHIVE = 32;</code>
     */
    ELEMENT_CONFIGURATION_MEZZO_ARCHIVE(32),
    /**
     * <code>ELEMENT_CONFIGURATION_FRUITY_LOOPS = 33;</code>
     */
    ELEMENT_CONFIGURATION_FRUITY_LOOPS(33),
    /**
     * <code>ELEMENT_CONFIGURATION_6_TRACK = 34;</code>
     */
    ELEMENT_CONFIGURATION_6_TRACK(34),
    /**
     * <code>ELEMENT_CONFIGURATION_DIGITAL_PERFORMER = 35;</code>
     */
    ELEMENT_CONFIGURATION_DIGITAL_PERFORMER(35),
    /**
     * <code>ELEMENT_CONFIGURATION_TAR_BACKUP = 36;</code>
     */
    ELEMENT_CONFIGURATION_TAR_BACKUP(36),
    /**
     * <code>ELEMENT_CONFIGURATION_GARAGE_BAND = 37;</code>
     */
    ELEMENT_CONFIGURATION_GARAGE_BAND(37),
    /**
     * <code>ELEMENT_CONFIGURATION_LOGIC = 38;</code>
     */
    ELEMENT_CONFIGURATION_LOGIC(38),
    /**
     * <code>ELEMENT_CONFIGURATION_INTERLEAVED_STEREO_FILES = 39;</code>
     */
    ELEMENT_CONFIGURATION_INTERLEAVED_STEREO_FILES(39),
    /**
     * <code>ELEMENT_CONFIGURATION_NUENDO = 40;</code>
     */
    ELEMENT_CONFIGURATION_NUENDO(40),
    /**
     * <code>ELEMENT_CONFIGURATION_4_TRACK = 41;</code>
     */
    ELEMENT_CONFIGURATION_4_TRACK(41),
    /**
     * <code>ELEMENT_CONFIGURATION_HALF_TRACK_MONO = 42;</code>
     */
    ELEMENT_CONFIGURATION_HALF_TRACK_MONO(42),
    /**
     * <code>ELEMENT_CONFIGURATION_PRO_TOOLS = 43;</code>
     */
    ELEMENT_CONFIGURATION_PRO_TOOLS(43),
    /**
     * <code>ELEMENT_CONFIGURATION_MICROSOFT_BACKUP = 44;</code>
     */
    ELEMENT_CONFIGURATION_MICROSOFT_BACKUP(44),
    /**
     * <code>ELEMENT_CONFIGURATION_BANDED_DISC__INSIDE_OUT = 45;</code>
     */
    ELEMENT_CONFIGURATION_BANDED_DISC__INSIDE_OUT(45),
    /**
     * <code>ELEMENT_CONFIGURATION_ABLETON_LIVE = 46;</code>
     */
    ELEMENT_CONFIGURATION_ABLETON_LIVE(46),
    /**
     * <code>ELEMENT_CONFIGURATION_BANDED_DISC__OUTSIDE_IN = 47;</code>
     */
    ELEMENT_CONFIGURATION_BANDED_DISC__OUTSIDE_IN(47),
    /**
     * <code>ELEMENT_CONFIGURATION_PARIS = 48;</code>
     */
    ELEMENT_CONFIGURATION_PARIS(48),
    /**
     * <code>ELEMENT_CONFIGURATION_FINAL_CUT_PRO = 49;</code>
     */
    ELEMENT_CONFIGURATION_FINAL_CUT_PRO(49),
    ;

    /**
     * <code>ELEMENT_CONFIGURATION_STUDIO_ONE = 0;</code>
     */
    public static final int ELEMENT_CONFIGURATION_STUDIO_ONE_VALUE = 0;
    /**
     * <code>ELEMENT_CONFIGURATION_ORANGE_BOOK = 1;</code>
     */
    public static final int ELEMENT_CONFIGURATION_ORANGE_BOOK_VALUE = 1;
    /**
     * <code>ELEMENT_CONFIGURATION_3_TRACK = 2;</code>
     */
    public static final int ELEMENT_CONFIGURATION_3_TRACK_VALUE = 2;
    /**
     * <code>ELEMENT_CONFIGURATION_QUARTER_TRACK_MONO = 3;</code>
     */
    public static final int ELEMENT_CONFIGURATION_QUARTER_TRACK_MONO_VALUE = 3;
    /**
     * <code>ELEMENT_CONFIGURATION_RETROSPECT_ARCHIVE = 4;</code>
     */
    public static final int ELEMENT_CONFIGURATION_RETROSPECT_ARCHIVE_VALUE = 4;
    /**
     * <code>ELEMENT_CONFIGURATION_FINAL_CUT_EXPRESS = 5;</code>
     */
    public static final int ELEMENT_CONFIGURATION_FINAL_CUT_EXPRESS_VALUE = 5;
    /**
     * <code>ELEMENT_CONFIGURATION_BRU_ARCHIVE = 6;</code>
     */
    public static final int ELEMENT_CONFIGURATION_BRU_ARCHIVE_VALUE = 6;
    /**
     * <code>ELEMENT_CONFIGURATION_LTFS_BACKUP = 7;</code>
     */
    public static final int ELEMENT_CONFIGURATION_LTFS_BACKUP_VALUE = 7;
    /**
     * <code>ELEMENT_CONFIGURATION_48_TRACK = 8;</code>
     */
    public static final int ELEMENT_CONFIGURATION_48_TRACK_VALUE = 8;
    /**
     * <code>ELEMENT_CONFIGURATION_CUBASE = 9;</code>
     */
    public static final int ELEMENT_CONFIGURATION_CUBASE_VALUE = 9;
    /**
     * <code>ELEMENT_CONFIGURATION_12_TRACK = 10;</code>
     */
    public static final int ELEMENT_CONFIGURATION_12_TRACK_VALUE = 10;
    /**
     * <code>ELEMENT_CONFIGURATION_TAR_ARCHIVE = 11;</code>
     */
    public static final int ELEMENT_CONFIGURATION_TAR_ARCHIVE_VALUE = 11;
    /**
     * <code>ELEMENT_CONFIGURATION_TOAST_ARCHIVE = 12;</code>
     */
    public static final int ELEMENT_CONFIGURATION_TOAST_ARCHIVE_VALUE = 12;
    /**
     * <code>ELEMENT_CONFIGURATION_8_TRACK = 13;</code>
     */
    public static final int ELEMENT_CONFIGURATION_8_TRACK_VALUE = 13;
    /**
     * <code>ELEMENT_CONFIGURATION_HARD_COPY = 14;</code>
     */
    public static final int ELEMENT_CONFIGURATION_HARD_COPY_VALUE = 14;
    /**
     * <code>ELEMENT_CONFIGURATION_SPLIT_STEREO = 15;</code>
     */
    public static final int ELEMENT_CONFIGURATION_SPLIT_STEREO_VALUE = 15;
    /**
     * <code>ELEMENT_CONFIGURATION_REDBOOK = 16;</code>
     */
    public static final int ELEMENT_CONFIGURATION_REDBOOK_VALUE = 16;
    /**
     * <code>ELEMENT_CONFIGURATION_RETROSPECT_CATALOG = 17;</code>
     */
    public static final int ELEMENT_CONFIGURATION_RETROSPECT_CATALOG_VALUE = 17;
    /**
     * <code>ELEMENT_CONFIGURATION_TRACKED_DISC__INSIDE_OUT = 18;</code>
     */
    public static final int ELEMENT_CONFIGURATION_TRACKED_DISC__INSIDE_OUT_VALUE = 18;
    /**
     * <code>ELEMENT_CONFIGURATION_24_TRACK = 19;</code>
     */
    public static final int ELEMENT_CONFIGURATION_24_TRACK_VALUE = 19;
    /**
     * <code>ELEMENT_CONFIGURATION_32_TRACK = 20;</code>
     */
    public static final int ELEMENT_CONFIGURATION_32_TRACK_VALUE = 20;
    /**
     * <code>ELEMENT_CONFIGURATION_DATA_FILES = 21;</code>
     */
    public static final int ELEMENT_CONFIGURATION_DATA_FILES_VALUE = 21;
    /**
     * <code>ELEMENT_CONFIGURATION_16_TRACK = 22;</code>
     */
    public static final int ELEMENT_CONFIGURATION_16_TRACK_VALUE = 22;
    /**
     * <code>ELEMENT_CONFIGURATION_HALF_TRACK_STEREO = 23;</code>
     */
    public static final int ELEMENT_CONFIGURATION_HALF_TRACK_STEREO_VALUE = 23;
    /**
     * <code>ELEMENT_CONFIGURATION_MONO_FILES = 24;</code>
     */
    public static final int ELEMENT_CONFIGURATION_MONO_FILES_VALUE = 24;
    /**
     * <code>ELEMENT_CONFIGURATION_LTFS_ARCHIVE = 25;</code>
     */
    public static final int ELEMENT_CONFIGURATION_LTFS_ARCHIVE_VALUE = 25;
    /**
     * <code>ELEMENT_CONFIGURATION_FULL_TRACK_MONO = 26;</code>
     */
    public static final int ELEMENT_CONFIGURATION_FULL_TRACK_MONO_VALUE = 26;
    /**
     * <code>ELEMENT_CONFIGURATION_QUARTER_TRACK_STEREO = 27;</code>
     */
    public static final int ELEMENT_CONFIGURATION_QUARTER_TRACK_STEREO_VALUE = 27;
    /**
     * <code>ELEMENT_CONFIGURATION_TRACKED_DISC__OUTSIDE_IN = 28;</code>
     */
    public static final int ELEMENT_CONFIGURATION_TRACKED_DISC__OUTSIDE_IN_VALUE = 28;
    /**
     * <code>ELEMENT_CONFIGURATION_TWIN_TRACK = 29;</code>
     */
    public static final int ELEMENT_CONFIGURATION_TWIN_TRACK_VALUE = 29;
    /**
     * <code>ELEMENT_CONFIGURATION_INTERLEAVED5__DOT__1_FILES = 30;</code>
     */
    public static final int ELEMENT_CONFIGURATION_INTERLEAVED5__DOT__1_FILES_VALUE = 30;
    /**
     * <code>ELEMENT_CONFIGURATION_QUICK_TIME = 31;</code>
     */
    public static final int ELEMENT_CONFIGURATION_QUICK_TIME_VALUE = 31;
    /**
     * <code>ELEMENT_CONFIGURATION_MEZZO_ARCHIVE = 32;</code>
     */
    public static final int ELEMENT_CONFIGURATION_MEZZO_ARCHIVE_VALUE = 32;
    /**
     * <code>ELEMENT_CONFIGURATION_FRUITY_LOOPS = 33;</code>
     */
    public static final int ELEMENT_CONFIGURATION_FRUITY_LOOPS_VALUE = 33;
    /**
     * <code>ELEMENT_CONFIGURATION_6_TRACK = 34;</code>
     */
    public static final int ELEMENT_CONFIGURATION_6_TRACK_VALUE = 34;
    /**
     * <code>ELEMENT_CONFIGURATION_DIGITAL_PERFORMER = 35;</code>
     */
    public static final int ELEMENT_CONFIGURATION_DIGITAL_PERFORMER_VALUE = 35;
    /**
     * <code>ELEMENT_CONFIGURATION_TAR_BACKUP = 36;</code>
     */
    public static final int ELEMENT_CONFIGURATION_TAR_BACKUP_VALUE = 36;
    /**
     * <code>ELEMENT_CONFIGURATION_GARAGE_BAND = 37;</code>
     */
    public static final int ELEMENT_CONFIGURATION_GARAGE_BAND_VALUE = 37;
    /**
     * <code>ELEMENT_CONFIGURATION_LOGIC = 38;</code>
     */
    public static final int ELEMENT_CONFIGURATION_LOGIC_VALUE = 38;
    /**
     * <code>ELEMENT_CONFIGURATION_INTERLEAVED_STEREO_FILES = 39;</code>
     */
    public static final int ELEMENT_CONFIGURATION_INTERLEAVED_STEREO_FILES_VALUE = 39;
    /**
     * <code>ELEMENT_CONFIGURATION_NUENDO = 40;</code>
     */
    public static final int ELEMENT_CONFIGURATION_NUENDO_VALUE = 40;
    /**
     * <code>ELEMENT_CONFIGURATION_4_TRACK = 41;</code>
     */
    public static final int ELEMENT_CONFIGURATION_4_TRACK_VALUE = 41;
    /**
     * <code>ELEMENT_CONFIGURATION_HALF_TRACK_MONO = 42;</code>
     */
    public static final int ELEMENT_CONFIGURATION_HALF_TRACK_MONO_VALUE = 42;
    /**
     * <code>ELEMENT_CONFIGURATION_PRO_TOOLS = 43;</code>
     */
    public static final int ELEMENT_CONFIGURATION_PRO_TOOLS_VALUE = 43;
    /**
     * <code>ELEMENT_CONFIGURATION_MICROSOFT_BACKUP = 44;</code>
     */
    public static final int ELEMENT_CONFIGURATION_MICROSOFT_BACKUP_VALUE = 44;
    /**
     * <code>ELEMENT_CONFIGURATION_BANDED_DISC__INSIDE_OUT = 45;</code>
     */
    public static final int ELEMENT_CONFIGURATION_BANDED_DISC__INSIDE_OUT_VALUE = 45;
    /**
     * <code>ELEMENT_CONFIGURATION_ABLETON_LIVE = 46;</code>
     */
    public static final int ELEMENT_CONFIGURATION_ABLETON_LIVE_VALUE = 46;
    /**
     * <code>ELEMENT_CONFIGURATION_BANDED_DISC__OUTSIDE_IN = 47;</code>
     */
    public static final int ELEMENT_CONFIGURATION_BANDED_DISC__OUTSIDE_IN_VALUE = 47;
    /**
     * <code>ELEMENT_CONFIGURATION_PARIS = 48;</code>
     */
    public static final int ELEMENT_CONFIGURATION_PARIS_VALUE = 48;
    /**
     * <code>ELEMENT_CONFIGURATION_FINAL_CUT_PRO = 49;</code>
     */
    public static final int ELEMENT_CONFIGURATION_FINAL_CUT_PRO_VALUE = 49;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ElementConfiguration valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ElementConfiguration forNumber(int value) {
      switch (value) {
        case 0: return ELEMENT_CONFIGURATION_STUDIO_ONE;
        case 1: return ELEMENT_CONFIGURATION_ORANGE_BOOK;
        case 2: return ELEMENT_CONFIGURATION_3_TRACK;
        case 3: return ELEMENT_CONFIGURATION_QUARTER_TRACK_MONO;
        case 4: return ELEMENT_CONFIGURATION_RETROSPECT_ARCHIVE;
        case 5: return ELEMENT_CONFIGURATION_FINAL_CUT_EXPRESS;
        case 6: return ELEMENT_CONFIGURATION_BRU_ARCHIVE;
        case 7: return ELEMENT_CONFIGURATION_LTFS_BACKUP;
        case 8: return ELEMENT_CONFIGURATION_48_TRACK;
        case 9: return ELEMENT_CONFIGURATION_CUBASE;
        case 10: return ELEMENT_CONFIGURATION_12_TRACK;
        case 11: return ELEMENT_CONFIGURATION_TAR_ARCHIVE;
        case 12: return ELEMENT_CONFIGURATION_TOAST_ARCHIVE;
        case 13: return ELEMENT_CONFIGURATION_8_TRACK;
        case 14: return ELEMENT_CONFIGURATION_HARD_COPY;
        case 15: return ELEMENT_CONFIGURATION_SPLIT_STEREO;
        case 16: return ELEMENT_CONFIGURATION_REDBOOK;
        case 17: return ELEMENT_CONFIGURATION_RETROSPECT_CATALOG;
        case 18: return ELEMENT_CONFIGURATION_TRACKED_DISC__INSIDE_OUT;
        case 19: return ELEMENT_CONFIGURATION_24_TRACK;
        case 20: return ELEMENT_CONFIGURATION_32_TRACK;
        case 21: return ELEMENT_CONFIGURATION_DATA_FILES;
        case 22: return ELEMENT_CONFIGURATION_16_TRACK;
        case 23: return ELEMENT_CONFIGURATION_HALF_TRACK_STEREO;
        case 24: return ELEMENT_CONFIGURATION_MONO_FILES;
        case 25: return ELEMENT_CONFIGURATION_LTFS_ARCHIVE;
        case 26: return ELEMENT_CONFIGURATION_FULL_TRACK_MONO;
        case 27: return ELEMENT_CONFIGURATION_QUARTER_TRACK_STEREO;
        case 28: return ELEMENT_CONFIGURATION_TRACKED_DISC__OUTSIDE_IN;
        case 29: return ELEMENT_CONFIGURATION_TWIN_TRACK;
        case 30: return ELEMENT_CONFIGURATION_INTERLEAVED5__DOT__1_FILES;
        case 31: return ELEMENT_CONFIGURATION_QUICK_TIME;
        case 32: return ELEMENT_CONFIGURATION_MEZZO_ARCHIVE;
        case 33: return ELEMENT_CONFIGURATION_FRUITY_LOOPS;
        case 34: return ELEMENT_CONFIGURATION_6_TRACK;
        case 35: return ELEMENT_CONFIGURATION_DIGITAL_PERFORMER;
        case 36: return ELEMENT_CONFIGURATION_TAR_BACKUP;
        case 37: return ELEMENT_CONFIGURATION_GARAGE_BAND;
        case 38: return ELEMENT_CONFIGURATION_LOGIC;
        case 39: return ELEMENT_CONFIGURATION_INTERLEAVED_STEREO_FILES;
        case 40: return ELEMENT_CONFIGURATION_NUENDO;
        case 41: return ELEMENT_CONFIGURATION_4_TRACK;
        case 42: return ELEMENT_CONFIGURATION_HALF_TRACK_MONO;
        case 43: return ELEMENT_CONFIGURATION_PRO_TOOLS;
        case 44: return ELEMENT_CONFIGURATION_MICROSOFT_BACKUP;
        case 45: return ELEMENT_CONFIGURATION_BANDED_DISC__INSIDE_OUT;
        case 46: return ELEMENT_CONFIGURATION_ABLETON_LIVE;
        case 47: return ELEMENT_CONFIGURATION_BANDED_DISC__OUTSIDE_IN;
        case 48: return ELEMENT_CONFIGURATION_PARIS;
        case 49: return ELEMENT_CONFIGURATION_FINAL_CUT_PRO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ElementConfiguration>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ElementConfiguration> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ElementConfiguration>() {
            public ElementConfiguration findValueByNumber(int number) {
              return ElementConfiguration.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(53);
    }

    private static final ElementConfiguration[] VALUES = values();

    public static ElementConfiguration valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ElementConfiguration(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ElementConfiguration)
  }

  /**
   * Protobuf enum {@code avs.ElementDesignation}
   */
  public enum ElementDesignation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ELEMENT_DESIGNATION_MASTER = 0;</code>
     */
    ELEMENT_DESIGNATION_MASTER(0),
    /**
     * <code>ELEMENT_DESIGNATION_CONVENIENCE = 1;</code>
     */
    ELEMENT_DESIGNATION_CONVENIENCE(1),
    /**
     * <code>ELEMENT_DESIGNATION_COPY = 2;</code>
     */
    ELEMENT_DESIGNATION_COPY(2),
    /**
     * <code>ELEMENT_DESIGNATION_BACKUP = 3;</code>
     */
    ELEMENT_DESIGNATION_BACKUP(3),
    /**
     * <code>ELEMENT_DESIGNATION_DOCUMENTATION = 4;</code>
     */
    ELEMENT_DESIGNATION_DOCUMENTATION(4),
    /**
     * <code>ELEMENT_DESIGNATION_TRANSFER = 5;</code>
     */
    ELEMENT_DESIGNATION_TRANSFER(5),
    /**
     * <code>ELEMENT_DESIGNATION_WORK_ELEMENT = 6;</code>
     */
    ELEMENT_DESIGNATION_WORK_ELEMENT(6),
    /**
     * <code>ELEMENT_DESIGNATION_SAFETY = 7;</code>
     */
    ELEMENT_DESIGNATION_SAFETY(7),
    /**
     * <code>ELEMENT_DESIGNATION_LONG_TERM = 8;</code>
     */
    ELEMENT_DESIGNATION_LONG_TERM(8),
    /**
     * <code>ELEMENT_DESIGNATION_STORAGE_CONTAINER = 9;</code>
     */
    ELEMENT_DESIGNATION_STORAGE_CONTAINER(9),
    ;

    /**
     * <code>ELEMENT_DESIGNATION_MASTER = 0;</code>
     */
    public static final int ELEMENT_DESIGNATION_MASTER_VALUE = 0;
    /**
     * <code>ELEMENT_DESIGNATION_CONVENIENCE = 1;</code>
     */
    public static final int ELEMENT_DESIGNATION_CONVENIENCE_VALUE = 1;
    /**
     * <code>ELEMENT_DESIGNATION_COPY = 2;</code>
     */
    public static final int ELEMENT_DESIGNATION_COPY_VALUE = 2;
    /**
     * <code>ELEMENT_DESIGNATION_BACKUP = 3;</code>
     */
    public static final int ELEMENT_DESIGNATION_BACKUP_VALUE = 3;
    /**
     * <code>ELEMENT_DESIGNATION_DOCUMENTATION = 4;</code>
     */
    public static final int ELEMENT_DESIGNATION_DOCUMENTATION_VALUE = 4;
    /**
     * <code>ELEMENT_DESIGNATION_TRANSFER = 5;</code>
     */
    public static final int ELEMENT_DESIGNATION_TRANSFER_VALUE = 5;
    /**
     * <code>ELEMENT_DESIGNATION_WORK_ELEMENT = 6;</code>
     */
    public static final int ELEMENT_DESIGNATION_WORK_ELEMENT_VALUE = 6;
    /**
     * <code>ELEMENT_DESIGNATION_SAFETY = 7;</code>
     */
    public static final int ELEMENT_DESIGNATION_SAFETY_VALUE = 7;
    /**
     * <code>ELEMENT_DESIGNATION_LONG_TERM = 8;</code>
     */
    public static final int ELEMENT_DESIGNATION_LONG_TERM_VALUE = 8;
    /**
     * <code>ELEMENT_DESIGNATION_STORAGE_CONTAINER = 9;</code>
     */
    public static final int ELEMENT_DESIGNATION_STORAGE_CONTAINER_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ElementDesignation valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ElementDesignation forNumber(int value) {
      switch (value) {
        case 0: return ELEMENT_DESIGNATION_MASTER;
        case 1: return ELEMENT_DESIGNATION_CONVENIENCE;
        case 2: return ELEMENT_DESIGNATION_COPY;
        case 3: return ELEMENT_DESIGNATION_BACKUP;
        case 4: return ELEMENT_DESIGNATION_DOCUMENTATION;
        case 5: return ELEMENT_DESIGNATION_TRANSFER;
        case 6: return ELEMENT_DESIGNATION_WORK_ELEMENT;
        case 7: return ELEMENT_DESIGNATION_SAFETY;
        case 8: return ELEMENT_DESIGNATION_LONG_TERM;
        case 9: return ELEMENT_DESIGNATION_STORAGE_CONTAINER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ElementDesignation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ElementDesignation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ElementDesignation>() {
            public ElementDesignation findValueByNumber(int number) {
              return ElementDesignation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(54);
    }

    private static final ElementDesignation[] VALUES = values();

    public static ElementDesignation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ElementDesignation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ElementDesignation)
  }

  /**
   * Protobuf enum {@code avs.EncodingType}
   */
  public enum EncodingType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ENCODING_TYPE_I_P_A = 0;</code>
     */
    ENCODING_TYPE_I_P_A(0),
    /**
     * <code>ENCODING_TYPE_USER_DEFINED = 1;</code>
     */
    ENCODING_TYPE_USER_DEFINED(1),
    ;

    /**
     * <code>ENCODING_TYPE_I_P_A = 0;</code>
     */
    public static final int ENCODING_TYPE_I_P_A_VALUE = 0;
    /**
     * <code>ENCODING_TYPE_USER_DEFINED = 1;</code>
     */
    public static final int ENCODING_TYPE_USER_DEFINED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EncodingType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EncodingType forNumber(int value) {
      switch (value) {
        case 0: return ENCODING_TYPE_I_P_A;
        case 1: return ENCODING_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EncodingType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EncodingType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EncodingType>() {
            public EncodingType findValueByNumber(int number) {
              return EncodingType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(55);
    }

    private static final EncodingType[] VALUES = values();

    public static EncodingType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EncodingType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.EncodingType)
  }

  /**
   * Protobuf enum {@code avs.EquipmentType}
   */
  public enum EquipmentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EQUIPMENT_TYPE_MICROPHONE = 0;</code>
     */
    EQUIPMENT_TYPE_MICROPHONE(0),
    /**
     * <code>EQUIPMENT_TYPE_SIGNAL_PROCESSOR = 1;</code>
     */
    EQUIPMENT_TYPE_SIGNAL_PROCESSOR(1),
    /**
     * <code>EQUIPMENT_TYPE_COMPUTER = 2;</code>
     */
    EQUIPMENT_TYPE_COMPUTER(2),
    /**
     * <code>EQUIPMENT_TYPE_RECORDER = 3;</code>
     */
    EQUIPMENT_TYPE_RECORDER(3),
    /**
     * <code>EQUIPMENT_TYPE_SOFTWARE = 4;</code>
     */
    EQUIPMENT_TYPE_SOFTWARE(4),
    /**
     * <code>EQUIPMENT_TYPE_LOUDSPEAKER = 5;</code>
     */
    EQUIPMENT_TYPE_LOUDSPEAKER(5),
    ;

    /**
     * <code>EQUIPMENT_TYPE_MICROPHONE = 0;</code>
     */
    public static final int EQUIPMENT_TYPE_MICROPHONE_VALUE = 0;
    /**
     * <code>EQUIPMENT_TYPE_SIGNAL_PROCESSOR = 1;</code>
     */
    public static final int EQUIPMENT_TYPE_SIGNAL_PROCESSOR_VALUE = 1;
    /**
     * <code>EQUIPMENT_TYPE_COMPUTER = 2;</code>
     */
    public static final int EQUIPMENT_TYPE_COMPUTER_VALUE = 2;
    /**
     * <code>EQUIPMENT_TYPE_RECORDER = 3;</code>
     */
    public static final int EQUIPMENT_TYPE_RECORDER_VALUE = 3;
    /**
     * <code>EQUIPMENT_TYPE_SOFTWARE = 4;</code>
     */
    public static final int EQUIPMENT_TYPE_SOFTWARE_VALUE = 4;
    /**
     * <code>EQUIPMENT_TYPE_LOUDSPEAKER = 5;</code>
     */
    public static final int EQUIPMENT_TYPE_LOUDSPEAKER_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EquipmentType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EquipmentType forNumber(int value) {
      switch (value) {
        case 0: return EQUIPMENT_TYPE_MICROPHONE;
        case 1: return EQUIPMENT_TYPE_SIGNAL_PROCESSOR;
        case 2: return EQUIPMENT_TYPE_COMPUTER;
        case 3: return EQUIPMENT_TYPE_RECORDER;
        case 4: return EQUIPMENT_TYPE_SOFTWARE;
        case 5: return EQUIPMENT_TYPE_LOUDSPEAKER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EquipmentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EquipmentType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EquipmentType>() {
            public EquipmentType findValueByNumber(int number) {
              return EquipmentType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(56);
    }

    private static final EquipmentType[] VALUES = values();

    public static EquipmentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EquipmentType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.EquipmentType)
  }

  /**
   * Protobuf enum {@code avs.ErnMessageType}
   */
  public enum ErnMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ERN_MESSAGE_TYPE_NEW_RELEASE_MESSAGE = 0;</code>
     */
    ERN_MESSAGE_TYPE_NEW_RELEASE_MESSAGE(0),
    ;

    /**
     * <code>ERN_MESSAGE_TYPE_NEW_RELEASE_MESSAGE = 0;</code>
     */
    public static final int ERN_MESSAGE_TYPE_NEW_RELEASE_MESSAGE_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErnMessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ErnMessageType forNumber(int value) {
      switch (value) {
        case 0: return ERN_MESSAGE_TYPE_NEW_RELEASE_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErnMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErnMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErnMessageType>() {
            public ErnMessageType findValueByNumber(int number) {
              return ErnMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(57);
    }

    private static final ErnMessageType[] VALUES = values();

    public static ErnMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ErnMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ErnMessageType)
  }

  /**
   * Protobuf enum {@code avs.ErnTestMessageType}
   */
  public enum ErnTestMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ERN_TEST_MESSAGE_TYPE_NEW_RELEASE_MESSAGE = 0;</code>
     */
    ERN_TEST_MESSAGE_TYPE_NEW_RELEASE_MESSAGE(0),
    /**
     * <code>ERN_TEST_MESSAGE_TYPE_PURGE_RELEASE_MESSAGE = 1;</code>
     */
    ERN_TEST_MESSAGE_TYPE_PURGE_RELEASE_MESSAGE(1),
    ;

    /**
     * <code>ERN_TEST_MESSAGE_TYPE_NEW_RELEASE_MESSAGE = 0;</code>
     */
    public static final int ERN_TEST_MESSAGE_TYPE_NEW_RELEASE_MESSAGE_VALUE = 0;
    /**
     * <code>ERN_TEST_MESSAGE_TYPE_PURGE_RELEASE_MESSAGE = 1;</code>
     */
    public static final int ERN_TEST_MESSAGE_TYPE_PURGE_RELEASE_MESSAGE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErnTestMessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ErnTestMessageType forNumber(int value) {
      switch (value) {
        case 0: return ERN_TEST_MESSAGE_TYPE_NEW_RELEASE_MESSAGE;
        case 1: return ERN_TEST_MESSAGE_TYPE_PURGE_RELEASE_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErnTestMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErnTestMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErnTestMessageType>() {
            public ErnTestMessageType findValueByNumber(int number) {
              return ErnTestMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(58);
    }

    private static final ErnTestMessageType[] VALUES = values();

    public static ErnTestMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ErnTestMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ErnTestMessageType)
  }

  /**
   * Protobuf enum {@code avs.ErncFileStatus}
   */
  public enum ErncFileStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ERNC_FILE_STATUS_DUPLICATED_PUBLISHER_NAMES = 0;</code>
     */
    ERNC_FILE_STATUS_DUPLICATED_PUBLISHER_NAMES(0),
    /**
     * <code>ERNC_FILE_STATUS_RESOURCE_CORRUPT = 1;</code>
     */
    ERNC_FILE_STATUS_RESOURCE_CORRUPT(1),
    /**
     * <code>ERNC_FILE_STATUS_RESOURCE_NOT_MEETING_SPECIFICATIONS = 2;</code>
     */
    ERNC_FILE_STATUS_RESOURCE_NOT_MEETING_SPECIFICATIONS(2),
    /**
     * <code>ERNC_FILE_STATUS_PRIMARY_ARTIST_NAME_MISSING = 3;</code>
     */
    ERNC_FILE_STATUS_PRIMARY_ARTIST_NAME_MISSING(3),
    /**
     * <code>ERNC_FILE_STATUS_ORIGINAL_RELEASE_DATE_LATER_THAN_RELEASE_DATE = 4;</code>
     */
    ERNC_FILE_STATUS_ORIGINAL_RELEASE_DATE_LATER_THAN_RELEASE_DATE(4),
    /**
     * <code>ERNC_FILE_STATUS_NEW_RELEASE_MESSAGE_INVALID = 5;</code>
     */
    ERNC_FILE_STATUS_NEW_RELEASE_MESSAGE_INVALID(5),
    /**
     * <code>ERNC_FILE_STATUS_ARTIST_ROLE_UNKNOWN = 6;</code>
     */
    ERNC_FILE_STATUS_ARTIST_ROLE_UNKNOWN(6),
    /**
     * <code>ERNC_FILE_STATUS_IDENTIFIER_SYNTAX_INVALID = 7;</code>
     */
    ERNC_FILE_STATUS_IDENTIFIER_SYNTAX_INVALID(7),
    /**
     * <code>ERNC_FILE_STATUS_CONFLICTING_AVAILABILITY_PERIODS = 8;</code>
     */
    ERNC_FILE_STATUS_CONFLICTING_AVAILABILITY_PERIODS(8),
    /**
     * <code>ERNC_FILE_STATUS_RESOURCE_MISSING = 9;</code>
     */
    ERNC_FILE_STATUS_RESOURCE_MISSING(9),
    /**
     * <code>ERNC_FILE_STATUS_METADATA_MISSING = 10;</code>
     */
    ERNC_FILE_STATUS_METADATA_MISSING(10),
    /**
     * <code>ERNC_FILE_STATUS_COMMERCIAL_RELEASE_DATE_INVALID = 11;</code>
     */
    ERNC_FILE_STATUS_COMMERCIAL_RELEASE_DATE_INVALID(11),
    /**
     * <code>ERNC_FILE_STATUS_FILE_O_K = 12;</code>
     */
    ERNC_FILE_STATUS_FILE_O_K(12),
    /**
     * <code>ERNC_FILE_STATUS_ERN_MISSING = 13;</code>
     */
    ERNC_FILE_STATUS_ERN_MISSING(13),
    /**
     * <code>ERNC_FILE_STATUS_INTERNAL_ERROR = 14;</code>
     */
    ERNC_FILE_STATUS_INTERNAL_ERROR(14),
    /**
     * <code>ERNC_FILE_STATUS_NO_DEAL_IN_NEW_RELEASE_MESSAGE = 15;</code>
     */
    ERNC_FILE_STATUS_NO_DEAL_IN_NEW_RELEASE_MESSAGE(15),
    /**
     * <code>ERNC_FILE_STATUS_SIGNATURE_OR_HASH_SUM_WRONG_OR_MISSING = 16;</code>
     */
    ERNC_FILE_STATUS_SIGNATURE_OR_HASH_SUM_WRONG_OR_MISSING(16),
    /**
     * <code>ERNC_FILE_STATUS_UNSUPPORTED_USAGE = 17;</code>
     */
    ERNC_FILE_STATUS_UNSUPPORTED_USAGE(17),
    /**
     * <code>ERNC_FILE_STATUS_NO_DEAL_FOR_TRACK_RELEASE = 18;</code>
     */
    ERNC_FILE_STATUS_NO_DEAL_FOR_TRACK_RELEASE(18),
    /**
     * <code>ERNC_FILE_STATUS_USER_DEFINED = 19;</code>
     */
    ERNC_FILE_STATUS_USER_DEFINED(19),
    /**
     * <code>ERNC_FILE_STATUS_IDENTIFIER_INVALID = 20;</code>
     */
    ERNC_FILE_STATUS_IDENTIFIER_INVALID(20),
    ;

    /**
     * <code>ERNC_FILE_STATUS_DUPLICATED_PUBLISHER_NAMES = 0;</code>
     */
    public static final int ERNC_FILE_STATUS_DUPLICATED_PUBLISHER_NAMES_VALUE = 0;
    /**
     * <code>ERNC_FILE_STATUS_RESOURCE_CORRUPT = 1;</code>
     */
    public static final int ERNC_FILE_STATUS_RESOURCE_CORRUPT_VALUE = 1;
    /**
     * <code>ERNC_FILE_STATUS_RESOURCE_NOT_MEETING_SPECIFICATIONS = 2;</code>
     */
    public static final int ERNC_FILE_STATUS_RESOURCE_NOT_MEETING_SPECIFICATIONS_VALUE = 2;
    /**
     * <code>ERNC_FILE_STATUS_PRIMARY_ARTIST_NAME_MISSING = 3;</code>
     */
    public static final int ERNC_FILE_STATUS_PRIMARY_ARTIST_NAME_MISSING_VALUE = 3;
    /**
     * <code>ERNC_FILE_STATUS_ORIGINAL_RELEASE_DATE_LATER_THAN_RELEASE_DATE = 4;</code>
     */
    public static final int ERNC_FILE_STATUS_ORIGINAL_RELEASE_DATE_LATER_THAN_RELEASE_DATE_VALUE = 4;
    /**
     * <code>ERNC_FILE_STATUS_NEW_RELEASE_MESSAGE_INVALID = 5;</code>
     */
    public static final int ERNC_FILE_STATUS_NEW_RELEASE_MESSAGE_INVALID_VALUE = 5;
    /**
     * <code>ERNC_FILE_STATUS_ARTIST_ROLE_UNKNOWN = 6;</code>
     */
    public static final int ERNC_FILE_STATUS_ARTIST_ROLE_UNKNOWN_VALUE = 6;
    /**
     * <code>ERNC_FILE_STATUS_IDENTIFIER_SYNTAX_INVALID = 7;</code>
     */
    public static final int ERNC_FILE_STATUS_IDENTIFIER_SYNTAX_INVALID_VALUE = 7;
    /**
     * <code>ERNC_FILE_STATUS_CONFLICTING_AVAILABILITY_PERIODS = 8;</code>
     */
    public static final int ERNC_FILE_STATUS_CONFLICTING_AVAILABILITY_PERIODS_VALUE = 8;
    /**
     * <code>ERNC_FILE_STATUS_RESOURCE_MISSING = 9;</code>
     */
    public static final int ERNC_FILE_STATUS_RESOURCE_MISSING_VALUE = 9;
    /**
     * <code>ERNC_FILE_STATUS_METADATA_MISSING = 10;</code>
     */
    public static final int ERNC_FILE_STATUS_METADATA_MISSING_VALUE = 10;
    /**
     * <code>ERNC_FILE_STATUS_COMMERCIAL_RELEASE_DATE_INVALID = 11;</code>
     */
    public static final int ERNC_FILE_STATUS_COMMERCIAL_RELEASE_DATE_INVALID_VALUE = 11;
    /**
     * <code>ERNC_FILE_STATUS_FILE_O_K = 12;</code>
     */
    public static final int ERNC_FILE_STATUS_FILE_O_K_VALUE = 12;
    /**
     * <code>ERNC_FILE_STATUS_ERN_MISSING = 13;</code>
     */
    public static final int ERNC_FILE_STATUS_ERN_MISSING_VALUE = 13;
    /**
     * <code>ERNC_FILE_STATUS_INTERNAL_ERROR = 14;</code>
     */
    public static final int ERNC_FILE_STATUS_INTERNAL_ERROR_VALUE = 14;
    /**
     * <code>ERNC_FILE_STATUS_NO_DEAL_IN_NEW_RELEASE_MESSAGE = 15;</code>
     */
    public static final int ERNC_FILE_STATUS_NO_DEAL_IN_NEW_RELEASE_MESSAGE_VALUE = 15;
    /**
     * <code>ERNC_FILE_STATUS_SIGNATURE_OR_HASH_SUM_WRONG_OR_MISSING = 16;</code>
     */
    public static final int ERNC_FILE_STATUS_SIGNATURE_OR_HASH_SUM_WRONG_OR_MISSING_VALUE = 16;
    /**
     * <code>ERNC_FILE_STATUS_UNSUPPORTED_USAGE = 17;</code>
     */
    public static final int ERNC_FILE_STATUS_UNSUPPORTED_USAGE_VALUE = 17;
    /**
     * <code>ERNC_FILE_STATUS_NO_DEAL_FOR_TRACK_RELEASE = 18;</code>
     */
    public static final int ERNC_FILE_STATUS_NO_DEAL_FOR_TRACK_RELEASE_VALUE = 18;
    /**
     * <code>ERNC_FILE_STATUS_USER_DEFINED = 19;</code>
     */
    public static final int ERNC_FILE_STATUS_USER_DEFINED_VALUE = 19;
    /**
     * <code>ERNC_FILE_STATUS_IDENTIFIER_INVALID = 20;</code>
     */
    public static final int ERNC_FILE_STATUS_IDENTIFIER_INVALID_VALUE = 20;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErncFileStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ErncFileStatus forNumber(int value) {
      switch (value) {
        case 0: return ERNC_FILE_STATUS_DUPLICATED_PUBLISHER_NAMES;
        case 1: return ERNC_FILE_STATUS_RESOURCE_CORRUPT;
        case 2: return ERNC_FILE_STATUS_RESOURCE_NOT_MEETING_SPECIFICATIONS;
        case 3: return ERNC_FILE_STATUS_PRIMARY_ARTIST_NAME_MISSING;
        case 4: return ERNC_FILE_STATUS_ORIGINAL_RELEASE_DATE_LATER_THAN_RELEASE_DATE;
        case 5: return ERNC_FILE_STATUS_NEW_RELEASE_MESSAGE_INVALID;
        case 6: return ERNC_FILE_STATUS_ARTIST_ROLE_UNKNOWN;
        case 7: return ERNC_FILE_STATUS_IDENTIFIER_SYNTAX_INVALID;
        case 8: return ERNC_FILE_STATUS_CONFLICTING_AVAILABILITY_PERIODS;
        case 9: return ERNC_FILE_STATUS_RESOURCE_MISSING;
        case 10: return ERNC_FILE_STATUS_METADATA_MISSING;
        case 11: return ERNC_FILE_STATUS_COMMERCIAL_RELEASE_DATE_INVALID;
        case 12: return ERNC_FILE_STATUS_FILE_O_K;
        case 13: return ERNC_FILE_STATUS_ERN_MISSING;
        case 14: return ERNC_FILE_STATUS_INTERNAL_ERROR;
        case 15: return ERNC_FILE_STATUS_NO_DEAL_IN_NEW_RELEASE_MESSAGE;
        case 16: return ERNC_FILE_STATUS_SIGNATURE_OR_HASH_SUM_WRONG_OR_MISSING;
        case 17: return ERNC_FILE_STATUS_UNSUPPORTED_USAGE;
        case 18: return ERNC_FILE_STATUS_NO_DEAL_FOR_TRACK_RELEASE;
        case 19: return ERNC_FILE_STATUS_USER_DEFINED;
        case 20: return ERNC_FILE_STATUS_IDENTIFIER_INVALID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErncFileStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErncFileStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErncFileStatus>() {
            public ErncFileStatus findValueByNumber(int number) {
              return ErncFileStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(59);
    }

    private static final ErncFileStatus[] VALUES = values();

    public static ErncFileStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ErncFileStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ErncFileStatus)
  }

  /**
   * Protobuf enum {@code avs.ErncProposedActionType}
   */
  public enum ErncProposedActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_AND_RESOURCES = 0;</code>
     */
    ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_AND_RESOURCES(0),
    /**
     * <code>ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_ONLY = 1;</code>
     */
    ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_ONLY(1),
    /**
     * <code>ERNC_PROPOSED_ACTION_TYPE_USER_DEFINED = 2;</code>
     */
    ERNC_PROPOSED_ACTION_TYPE_USER_DEFINED(2),
    ;

    /**
     * <code>ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_AND_RESOURCES = 0;</code>
     */
    public static final int ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_AND_RESOURCES_VALUE = 0;
    /**
     * <code>ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_ONLY = 1;</code>
     */
    public static final int ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_ONLY_VALUE = 1;
    /**
     * <code>ERNC_PROPOSED_ACTION_TYPE_USER_DEFINED = 2;</code>
     */
    public static final int ERNC_PROPOSED_ACTION_TYPE_USER_DEFINED_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErncProposedActionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ErncProposedActionType forNumber(int value) {
      switch (value) {
        case 0: return ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_AND_RESOURCES;
        case 1: return ERNC_PROPOSED_ACTION_TYPE_RESEND_XML_ONLY;
        case 2: return ERNC_PROPOSED_ACTION_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErncProposedActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErncProposedActionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErncProposedActionType>() {
            public ErncProposedActionType findValueByNumber(int number) {
              return ErncProposedActionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(60);
    }

    private static final ErncProposedActionType[] VALUES = values();

    public static ErncProposedActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ErncProposedActionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ErncProposedActionType)
  }

  /**
   * Protobuf enum {@code avs.ErrorSeverity}
   */
  public enum ErrorSeverity
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ERROR_SEVERITY_WARNING = 0;</code>
     */
    ERROR_SEVERITY_WARNING(0),
    /**
     * <code>ERROR_SEVERITY_CRITICAL = 1;</code>
     */
    ERROR_SEVERITY_CRITICAL(1),
    /**
     * <code>ERROR_SEVERITY_INFORMATION = 2;</code>
     */
    ERROR_SEVERITY_INFORMATION(2),
    ;

    /**
     * <code>ERROR_SEVERITY_WARNING = 0;</code>
     */
    public static final int ERROR_SEVERITY_WARNING_VALUE = 0;
    /**
     * <code>ERROR_SEVERITY_CRITICAL = 1;</code>
     */
    public static final int ERROR_SEVERITY_CRITICAL_VALUE = 1;
    /**
     * <code>ERROR_SEVERITY_INFORMATION = 2;</code>
     */
    public static final int ERROR_SEVERITY_INFORMATION_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorSeverity valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ErrorSeverity forNumber(int value) {
      switch (value) {
        case 0: return ERROR_SEVERITY_WARNING;
        case 1: return ERROR_SEVERITY_CRITICAL;
        case 2: return ERROR_SEVERITY_INFORMATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorSeverity>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErrorSeverity> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorSeverity>() {
            public ErrorSeverity findValueByNumber(int number) {
              return ErrorSeverity.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(61);
    }

    private static final ErrorSeverity[] VALUES = values();

    public static ErrorSeverity valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ErrorSeverity(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ErrorSeverity)
  }

  /**
   * Protobuf enum {@code avs.ErrorType}
   */
  public enum ErrorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ERROR_TYPE_CONFORMANCE_ERROR = 0;</code>
     */
    ERROR_TYPE_CONFORMANCE_ERROR(0),
    /**
     * <code>ERROR_TYPE_USER_DEFINED = 1;</code>
     */
    ERROR_TYPE_USER_DEFINED(1),
    /**
     * <code>ERROR_TYPE_LOGICAL_ERROR = 2;</code>
     */
    ERROR_TYPE_LOGICAL_ERROR(2),
    ;

    /**
     * <code>ERROR_TYPE_CONFORMANCE_ERROR = 0;</code>
     */
    public static final int ERROR_TYPE_CONFORMANCE_ERROR_VALUE = 0;
    /**
     * <code>ERROR_TYPE_USER_DEFINED = 1;</code>
     */
    public static final int ERROR_TYPE_USER_DEFINED_VALUE = 1;
    /**
     * <code>ERROR_TYPE_LOGICAL_ERROR = 2;</code>
     */
    public static final int ERROR_TYPE_LOGICAL_ERROR_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ErrorType forNumber(int value) {
      switch (value) {
        case 0: return ERROR_TYPE_CONFORMANCE_ERROR;
        case 1: return ERROR_TYPE_USER_DEFINED;
        case 2: return ERROR_TYPE_LOGICAL_ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErrorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorType>() {
            public ErrorType findValueByNumber(int number) {
              return ErrorType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(62);
    }

    private static final ErrorType[] VALUES = values();

    public static ErrorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ErrorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ErrorType)
  }

  /**
   * Protobuf enum {@code avs.ExceptionReason}
   */
  public enum ExceptionReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EXCEPTION_REASON_DISPUTED_BY_LICENSEE = 0;</code>
     */
    EXCEPTION_REASON_DISPUTED_BY_LICENSEE(0),
    /**
     * <code>EXCEPTION_REASON_DISPUTED_BY_RELINQUISHING_PUBLISHER = 1;</code>
     */
    EXCEPTION_REASON_DISPUTED_BY_RELINQUISHING_PUBLISHER(1),
    /**
     * <code>EXCEPTION_REASON_USER_DEFINED = 2;</code>
     */
    EXCEPTION_REASON_USER_DEFINED(2),
    /**
     * <code>EXCEPTION_REASON_NOT_FOUND = 3;</code>
     */
    EXCEPTION_REASON_NOT_FOUND(3),
    ;

    /**
     * <code>EXCEPTION_REASON_DISPUTED_BY_LICENSEE = 0;</code>
     */
    public static final int EXCEPTION_REASON_DISPUTED_BY_LICENSEE_VALUE = 0;
    /**
     * <code>EXCEPTION_REASON_DISPUTED_BY_RELINQUISHING_PUBLISHER = 1;</code>
     */
    public static final int EXCEPTION_REASON_DISPUTED_BY_RELINQUISHING_PUBLISHER_VALUE = 1;
    /**
     * <code>EXCEPTION_REASON_USER_DEFINED = 2;</code>
     */
    public static final int EXCEPTION_REASON_USER_DEFINED_VALUE = 2;
    /**
     * <code>EXCEPTION_REASON_NOT_FOUND = 3;</code>
     */
    public static final int EXCEPTION_REASON_NOT_FOUND_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExceptionReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ExceptionReason forNumber(int value) {
      switch (value) {
        case 0: return EXCEPTION_REASON_DISPUTED_BY_LICENSEE;
        case 1: return EXCEPTION_REASON_DISPUTED_BY_RELINQUISHING_PUBLISHER;
        case 2: return EXCEPTION_REASON_USER_DEFINED;
        case 3: return EXCEPTION_REASON_NOT_FOUND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExceptionReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExceptionReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExceptionReason>() {
            public ExceptionReason findValueByNumber(int number) {
              return ExceptionReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(63);
    }

    private static final ExceptionReason[] VALUES = values();

    public static ExceptionReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExceptionReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ExceptionReason)
  }

  /**
   * Protobuf enum {@code avs.ExpressionType}
   */
  public enum ExpressionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EXPRESSION_TYPE_INFORMATIVE = 0;</code>
     */
    EXPRESSION_TYPE_INFORMATIVE(0),
    /**
     * <code>EXPRESSION_TYPE_INSTRUCTIVE = 1;</code>
     */
    EXPRESSION_TYPE_INSTRUCTIVE(1),
    ;

    /**
     * <code>EXPRESSION_TYPE_INFORMATIVE = 0;</code>
     */
    public static final int EXPRESSION_TYPE_INFORMATIVE_VALUE = 0;
    /**
     * <code>EXPRESSION_TYPE_INSTRUCTIVE = 1;</code>
     */
    public static final int EXPRESSION_TYPE_INSTRUCTIVE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExpressionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ExpressionType forNumber(int value) {
      switch (value) {
        case 0: return EXPRESSION_TYPE_INFORMATIVE;
        case 1: return EXPRESSION_TYPE_INSTRUCTIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExpressionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExpressionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExpressionType>() {
            public ExpressionType findValueByNumber(int number) {
              return ExpressionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(64);
    }

    private static final ExpressionType[] VALUES = values();

    public static ExpressionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExpressionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ExpressionType)
  }

  /**
   * Protobuf enum {@code avs.ExternallyLinkedResourceType}
   */
  public enum ExternallyLinkedResourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_ITEM = 0;</code>
     */
    EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_ITEM(0),
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_UNKNOWN = 1;</code>
     */
    EXTERNALLY_LINKED_RESOURCE_TYPE_UNKNOWN(1),
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_ADDITIONAL_METADATA = 2;</code>
     */
    EXTERNALLY_LINKED_RESOURCE_TYPE_ADDITIONAL_METADATA(2),
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_USER_DEFINED = 3;</code>
     */
    EXTERNALLY_LINKED_RESOURCE_TYPE_USER_DEFINED(3),
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_INFORMATION = 4;</code>
     */
    EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_INFORMATION(4),
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_LOGO = 5;</code>
     */
    EXTERNALLY_LINKED_RESOURCE_TYPE_LOGO(5),
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_IMAGE = 6;</code>
     */
    EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_IMAGE(6),
    ;

    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_ITEM = 0;</code>
     */
    public static final int EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_ITEM_VALUE = 0;
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_UNKNOWN = 1;</code>
     */
    public static final int EXTERNALLY_LINKED_RESOURCE_TYPE_UNKNOWN_VALUE = 1;
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_ADDITIONAL_METADATA = 2;</code>
     */
    public static final int EXTERNALLY_LINKED_RESOURCE_TYPE_ADDITIONAL_METADATA_VALUE = 2;
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_USER_DEFINED = 3;</code>
     */
    public static final int EXTERNALLY_LINKED_RESOURCE_TYPE_USER_DEFINED_VALUE = 3;
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_INFORMATION = 4;</code>
     */
    public static final int EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_INFORMATION_VALUE = 4;
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_LOGO = 5;</code>
     */
    public static final int EXTERNALLY_LINKED_RESOURCE_TYPE_LOGO_VALUE = 5;
    /**
     * <code>EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_IMAGE = 6;</code>
     */
    public static final int EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_IMAGE_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExternallyLinkedResourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ExternallyLinkedResourceType forNumber(int value) {
      switch (value) {
        case 0: return EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_ITEM;
        case 1: return EXTERNALLY_LINKED_RESOURCE_TYPE_UNKNOWN;
        case 2: return EXTERNALLY_LINKED_RESOURCE_TYPE_ADDITIONAL_METADATA;
        case 3: return EXTERNALLY_LINKED_RESOURCE_TYPE_USER_DEFINED;
        case 4: return EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_INFORMATION;
        case 5: return EXTERNALLY_LINKED_RESOURCE_TYPE_LOGO;
        case 6: return EXTERNALLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_IMAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExternallyLinkedResourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExternallyLinkedResourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExternallyLinkedResourceType>() {
            public ExternallyLinkedResourceType findValueByNumber(int number) {
              return ExternallyLinkedResourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(65);
    }

    private static final ExternallyLinkedResourceType[] VALUES = values();

    public static ExternallyLinkedResourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExternallyLinkedResourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ExternallyLinkedResourceType)
  }

  /**
   * Protobuf enum {@code avs.FileType}
   */
  public enum FileType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FILE_TYPE_RELS_FILE = 0;</code>
     */
    FILE_TYPE_RELS_FILE(0),
    /**
     * <code>FILE_TYPE_WMV_FILE = 1;</code>
     */
    FILE_TYPE_WMV_FILE(1),
    /**
     * <code>FILE_TYPE_PLN_FILE = 2;</code>
     */
    FILE_TYPE_PLN_FILE(2),
    /**
     * <code>FILE_TYPE_ASP_FILE = 3;</code>
     */
    FILE_TYPE_ASP_FILE(3),
    /**
     * <code>FILE_TYPE_FNT_FILE = 4;</code>
     */
    FILE_TYPE_FNT_FILE(4),
    /**
     * <code>FILE_TYPE_EPS_FILE = 5;</code>
     */
    FILE_TYPE_EPS_FILE(5),
    /**
     * <code>FILE_TYPE_ROM_FILE = 6;</code>
     */
    FILE_TYPE_ROM_FILE(6),
    /**
     * <code>FILE_TYPE_YUV_FILE = 7;</code>
     */
    FILE_TYPE_YUV_FILE(7),
    /**
     * <code>FILE_TYPE_SITX_FILE = 8;</code>
     */
    FILE_TYPE_SITX_FILE(8),
    /**
     * <code>FILE_TYPE_UUE_FILE = 9;</code>
     */
    FILE_TYPE_UUE_FILE(9),
    /**
     * <code>FILE_TYPE_HTM_FILE = 10;</code>
     */
    FILE_TYPE_HTM_FILE(10),
    /**
     * <code>FILE_TYPE_EXE_FILE = 11;</code>
     */
    FILE_TYPE_EXE_FILE(11),
    /**
     * <code>FILE_TYPE_CSS_FILE = 12;</code>
     */
    FILE_TYPE_CSS_FILE(12),
    /**
     * <code>FILE_TYPE_NEU_FILE = 13;</code>
     */
    FILE_TYPE_NEU_FILE(13),
    /**
     * <code>FILE_TYPE_SIT_FILE = 14;</code>
     */
    FILE_TYPE_SIT_FILE(14),
    /**
     * <code>FILE_TYPE_WAV_FILE = 15;</code>
     */
    FILE_TYPE_WAV_FILE(15),
    /**
     * <code>FILE_TYPE_CAB_FILE = 16;</code>
     */
    FILE_TYPE_CAB_FILE(16),
    /**
     * <code>FILE_TYPE_RA_FILE = 17;</code>
     */
    FILE_TYPE_RA_FILE(17),
    /**
     * <code>FILE_TYPE_ACCDB_FILE = 18;</code>
     */
    FILE_TYPE_ACCDB_FILE(18),
    /**
     * <code>FILE_TYPE_XLSX_FILE = 19;</code>
     */
    FILE_TYPE_XLSX_FILE(19),
    /**
     * <code>FILE_TYPE_PRF_FILE = 20;</code>
     */
    FILE_TYPE_PRF_FILE(20),
    /**
     * <code>FILE_TYPE_PKG_FILE = 21;</code>
     */
    FILE_TYPE_PKG_FILE(21),
    /**
     * <code>FILE_TYPE_GPX_FILE = 22;</code>
     */
    FILE_TYPE_GPX_FILE(22),
    /**
     * <code>FILE_TYPE_XLS_FILE = 23;</code>
     */
    FILE_TYPE_XLS_FILE(23),
    /**
     * <code>FILE_TYPE_ORI_FILE = 24;</code>
     */
    FILE_TYPE_ORI_FILE(24),
    /**
     * <code>FILE_TYPE_MP3_FILE = 25;</code>
     */
    FILE_TYPE_MP3_FILE(25),
    /**
     * <code>FILE_TYPE_CLASS_FILE = 26;</code>
     */
    FILE_TYPE_CLASS_FILE(26),
    /**
     * <code>FILE_TYPE_XML_FILE = 27;</code>
     */
    FILE_TYPE_XML_FILE(27),
    /**
     * <code>FILE_TYPE_INI_FILE = 28;</code>
     */
    FILE_TYPE_INI_FILE(28),
    /**
     * <code>FILE_TYPE_BMP_FILE = 29;</code>
     */
    FILE_TYPE_BMP_FILE(29),
    /**
     * <code>FILE_TYPE_DBX_FILE = 30;</code>
     */
    FILE_TYPE_DBX_FILE(30),
    /**
     * <code>FILE_TYPE_EFX_FILE = 31;</code>
     */
    FILE_TYPE_EFX_FILE(31),
    /**
     * <code>FILE_TYPE_BT_FILE = 32;</code>
     */
    FILE_TYPE_BT_FILE(32),
    /**
     * <code>FILE_TYPE_SVG_FILE = 33;</code>
     */
    FILE_TYPE_SVG_FILE(33),
    /**
     * <code>FILE_TYPE_GZ_FILE = 34;</code>
     */
    FILE_TYPE_GZ_FILE(34),
    /**
     * <code>FILE_TYPE_PL_FILE = 35;</code>
     */
    FILE_TYPE_PL_FILE(35),
    /**
     * <code>FILE_TYPE_VB_FILE = 36;</code>
     */
    FILE_TYPE_VB_FILE(36),
    /**
     * <code>FILE_TYPE_AI_FILE = 37;</code>
     */
    FILE_TYPE_AI_FILE(37),
    /**
     * <code>FILE_TYPE_FLV_FILE = 38;</code>
     */
    FILE_TYPE_FLV_FILE(38),
    /**
     * <code>FILE_TYPE_CPP_FILE = 39;</code>
     */
    FILE_TYPE_CPP_FILE(39),
    /**
     * <code>FILE_TYPE_LNK_FILE = 40;</code>
     */
    FILE_TYPE_LNK_FILE(40),
    /**
     * <code>FILE_TYPE_M_FILE = 41;</code>
     */
    FILE_TYPE_M_FILE(41),
    /**
     * <code>FILE_TYPE_MSG_FILE = 42;</code>
     */
    FILE_TYPE_MSG_FILE(42),
    /**
     * <code>FILE_TYPE_TOAST_FILE = 43;</code>
     */
    FILE_TYPE_TOAST_FILE(43),
    /**
     * <code>FILE_TYPE_JS_FILE = 44;</code>
     */
    FILE_TYPE_JS_FILE(44),
    /**
     * <code>FILE_TYPE_SDF_FILE = 45;</code>
     */
    FILE_TYPE_SDF_FILE(45),
    /**
     * <code>FILE_TYPE_TXT_FILE = 46;</code>
     */
    FILE_TYPE_TXT_FILE(46),
    /**
     * <code>FILE_TYPE_PDF_FILE = 47;</code>
     */
    FILE_TYPE_PDF_FILE(47),
    /**
     * <code>FILE_TYPE_3_G2_FILE = 48;</code>
     */
    FILE_TYPE_3_G2_FILE(48),
    /**
     * <code>FILE_TYPE_KML_FILE = 49;</code>
     */
    FILE_TYPE_KML_FILE(49),
    /**
     * <code>FILE_TYPE_PHP_FILE = 50;</code>
     */
    FILE_TYPE_PHP_FILE(50),
    /**
     * <code>FILE_TYPE_3_GP_FILE = 51;</code>
     */
    FILE_TYPE_3_GP_FILE(51),
    /**
     * <code>FILE_TYPE_FON_FILE = 52;</code>
     */
    FILE_TYPE_FON_FILE(52),
    /**
     * <code>FILE_TYPE_MPA_FILE = 53;</code>
     */
    FILE_TYPE_MPA_FILE(53),
    /**
     * <code>FILE_TYPE_GAM_FILE = 54;</code>
     */
    FILE_TYPE_GAM_FILE(54),
    /**
     * <code>FILE_TYPE_LOG_FILE = 55;</code>
     */
    FILE_TYPE_LOG_FILE(55),
    /**
     * <code>FILE_TYPE_PNG_FILE = 56;</code>
     */
    FILE_TYPE_PNG_FILE(56),
    /**
     * <code>FILE_TYPE_THM_FILE = 57;</code>
     */
    FILE_TYPE_THM_FILE(57),
    /**
     * <code>FILE_TYPE_WKS_FILE = 58;</code>
     */
    FILE_TYPE_WKS_FILE(58),
    /**
     * <code>FILE_TYPE_VCF_FILE = 59;</code>
     */
    FILE_TYPE_VCF_FILE(59),
    /**
     * <code>FILE_TYPE_JSP_FILE = 60;</code>
     */
    FILE_TYPE_JSP_FILE(60),
    /**
     * <code>FILE_TYPE_PCM_FILE = 61;</code>
     */
    FILE_TYPE_PCM_FILE(61),
    /**
     * <code>FILE_TYPE_PIF_FILE = 62;</code>
     */
    FILE_TYPE_PIF_FILE(62),
    /**
     * <code>FILE_TYPE_WPD_FILE = 63;</code>
     */
    FILE_TYPE_WPD_FILE(63),
    /**
     * <code>FILE_TYPE_QXD_FILE = 64;</code>
     */
    FILE_TYPE_QXD_FILE(64),
    /**
     * <code>FILE_TYPE_HTML_FILE = 65;</code>
     */
    FILE_TYPE_HTML_FILE(65),
    /**
     * <code>FILE_TYPE_SYS_FILE = 66;</code>
     */
    FILE_TYPE_SYS_FILE(66),
    /**
     * <code>FILE_TYPE_8_BI_FILE = 67;</code>
     */
    FILE_TYPE_8_BI_FILE(67),
    /**
     * <code>FILE_TYPE_TTF_FILE = 68;</code>
     */
    FILE_TYPE_TTF_FILE(68),
    /**
     * <code>FILE_TYPE_DXF_FILE = 69;</code>
     */
    FILE_TYPE_DXF_FILE(69),
    /**
     * <code>FILE_TYPE_MAX_FILE = 70;</code>
     */
    FILE_TYPE_MAX_FILE(70),
    /**
     * <code>FILE_TYPE_PAGES_FILE = 71;</code>
     */
    FILE_TYPE_PAGES_FILE(71),
    /**
     * <code>FILE_TYPE_PPT_FILE = 72;</code>
     */
    FILE_TYPE_PPT_FILE(72),
    /**
     * <code>FILE_TYPE_PSPIMAGE_FILE = 73;</code>
     */
    FILE_TYPE_PSPIMAGE_FILE(73),
    /**
     * <code>FILE_TYPE_ASX_FILE = 74;</code>
     */
    FILE_TYPE_ASX_FILE(74),
    /**
     * <code>FILE_TYPE_CGI_FILE = 75;</code>
     */
    FILE_TYPE_CGI_FILE(75),
    /**
     * <code>FILE_TYPE_JAR_FILE = 76;</code>
     */
    FILE_TYPE_JAR_FILE(76),
    /**
     * <code>FILE_TYPE_BAK_FILE = 77;</code>
     */
    FILE_TYPE_BAK_FILE(77),
    /**
     * <code>FILE_TYPE_PSD_FILE = 78;</code>
     */
    FILE_TYPE_PSD_FILE(78),
    /**
     * <code>FILE_TYPE_DMP_FILE = 79;</code>
     */
    FILE_TYPE_DMP_FILE(79),
    /**
     * <code>FILE_TYPE_BAT_FILE = 80;</code>
     */
    FILE_TYPE_BAT_FILE(80),
    /**
     * <code>FILE_TYPE_DRV_FILE = 81;</code>
     */
    FILE_TYPE_DRV_FILE(81),
    /**
     * <code>FILE_TYPE_ZIP_FILE = 82;</code>
     */
    FILE_TYPE_ZIP_FILE(82),
    /**
     * <code>FILE_TYPE_PDB_FILE = 83;</code>
     */
    FILE_TYPE_PDB_FILE(83),
    /**
     * <code>FILE_TYPE_RM_FILE = 84;</code>
     */
    FILE_TYPE_RM_FILE(84),
    /**
     * <code>FILE_TYPE_XHTML_FILE = 85;</code>
     */
    FILE_TYPE_XHTML_FILE(85),
    /**
     * <code>FILE_TYPE_ASF_FILE = 86;</code>
     */
    FILE_TYPE_ASF_FILE(86),
    /**
     * <code>FILE_TYPE_GIF_FILE = 87;</code>
     */
    FILE_TYPE_GIF_FILE(87),
    /**
     * <code>FILE_TYPE_PPTX_FILE = 88;</code>
     */
    FILE_TYPE_PPTX_FILE(88),
    /**
     * <code>FILE_TYPE_BWF_FILE = 89;</code>
     */
    FILE_TYPE_BWF_FILE(89),
    /**
     * <code>FILE_TYPE_SWF_FILE = 90;</code>
     */
    FILE_TYPE_SWF_FILE(90),
    /**
     * <code>FILE_TYPE_MPG_FILE = 91;</code>
     */
    FILE_TYPE_MPG_FILE(91),
    /**
     * <code>FILE_TYPE_VOB_FILE = 92;</code>
     */
    FILE_TYPE_VOB_FILE(92),
    /**
     * <code>FILE_TYPE_C_FILE = 93;</code>
     */
    FILE_TYPE_C_FILE(93),
    /**
     * <code>FILE_TYPE_DMG_FILE = 94;</code>
     */
    FILE_TYPE_DMG_FILE(94),
    /**
     * <code>FILE_TYPE_RTF_FILE = 95;</code>
     */
    FILE_TYPE_RTF_FILE(95),
    /**
     * <code>FILE_TYPE_AUD_FILE = 96;</code>
     */
    FILE_TYPE_AUD_FILE(96),
    /**
     * <code>FILE_TYPE_DOC_FILE = 97;</code>
     */
    FILE_TYPE_DOC_FILE(97),
    /**
     * <code>FILE_TYPE_IFF_FILE = 98;</code>
     */
    FILE_TYPE_IFF_FILE(98),
    /**
     * <code>FILE_TYPE_CSR_FILE = 99;</code>
     */
    FILE_TYPE_CSR_FILE(99),
    /**
     * <code>FILE_TYPE_CSV_FILE = 100;</code>
     */
    FILE_TYPE_CSV_FILE(100),
    /**
     * <code>FILE_TYPE_ISO_FILE = 101;</code>
     */
    FILE_TYPE_ISO_FILE(101),
    /**
     * <code>FILE_TYPE_OTF_FILE = 102;</code>
     */
    FILE_TYPE_OTF_FILE(102),
    /**
     * <code>FILE_TYPE_DAT_FILE = 103;</code>
     */
    FILE_TYPE_DAT_FILE(103),
    /**
     * <code>FILE_TYPE_JPG_FILE = 104;</code>
     */
    FILE_TYPE_JPG_FILE(104),
    /**
     * <code>FILE_TYPE_SAV_FILE = 105;</code>
     */
    FILE_TYPE_SAV_FILE(105),
    /**
     * <code>FILE_TYPE_3_DM_FILE = 106;</code>
     */
    FILE_TYPE_3_DM_FILE(106),
    /**
     * <code>FILE_TYPE_AAC_FILE = 107;</code>
     */
    FILE_TYPE_AAC_FILE(107),
    /**
     * <code>FILE_TYPE_COM_FILE = 108;</code>
     */
    FILE_TYPE_COM_FILE(108),
    /**
     * <code>FILE_TYPE_MP4_FILE = 109;</code>
     */
    FILE_TYPE_MP4_FILE(109),
    /**
     * <code>FILE_TYPE_PTS_FILE = 110;</code>
     */
    FILE_TYPE_PTS_FILE(110),
    /**
     * <code>FILE_TYPE_DOCX_FILE = 111;</code>
     */
    FILE_TYPE_DOCX_FILE(111),
    /**
     * <code>FILE_TYPE_RAR_FILE = 112;</code>
     */
    FILE_TYPE_RAR_FILE(112),
    /**
     * <code>FILE_TYPE_BIN_FILE = 113;</code>
     */
    FILE_TYPE_BIN_FILE(113),
    /**
     * <code>FILE_TYPE_DB_FILE = 114;</code>
     */
    FILE_TYPE_DB_FILE(114),
    /**
     * <code>FILE_TYPE_DWG_FILE = 115;</code>
     */
    FILE_TYPE_DWG_FILE(115),
    /**
     * <code>FILE_TYPE_DSD_FILE = 116;</code>
     */
    FILE_TYPE_DSD_FILE(116),
    /**
     * <code>FILE_TYPE_TAR_GZ_FILE = 117;</code>
     */
    FILE_TYPE_TAR_GZ_FILE(117),
    /**
     * <code>FILE_TYPE_VCD_FILE = 118;</code>
     */
    FILE_TYPE_VCD_FILE(118),
    /**
     * <code>FILE_TYPE_GHO_FILE = 119;</code>
     */
    FILE_TYPE_GHO_FILE(119),
    /**
     * <code>FILE_TYPE_PCT_FILE = 120;</code>
     */
    FILE_TYPE_PCT_FILE(120),
    /**
     * <code>FILE_TYPE_RSS_FILE = 121;</code>
     */
    FILE_TYPE_RSS_FILE(121),
    /**
     * <code>FILE_TYPE_WSF_FILE = 122;</code>
     */
    FILE_TYPE_WSF_FILE(122),
    /**
     * <code>FILE_TYPE_M3_U_FILE = 123;</code>
     */
    FILE_TYPE_M3_U_FILE(123),
    /**
     * <code>FILE_TYPE_ZIPX_FILE = 124;</code>
     */
    FILE_TYPE_ZIPX_FILE(124),
    /**
     * <code>FILE_TYPE_APP_FILE = 125;</code>
     */
    FILE_TYPE_APP_FILE(125),
    /**
     * <code>FILE_TYPE_MIM_FILE = 126;</code>
     */
    FILE_TYPE_MIM_FILE(126),
    /**
     * <code>FILE_TYPE_TMP_FILE = 127;</code>
     */
    FILE_TYPE_TMP_FILE(127),
    /**
     * <code>FILE_TYPE_PS_FILE = 128;</code>
     */
    FILE_TYPE_PS_FILE(128),
    /**
     * <code>FILE_TYPE_SQL_FILE = 129;</code>
     */
    FILE_TYPE_SQL_FILE(129),
    /**
     * <code>FILE_TYPE_GADGET_FILE = 130;</code>
     */
    FILE_TYPE_GADGET_FILE(130),
    /**
     * <code>FILE_TYPE_INDD_FILE = 131;</code>
     */
    FILE_TYPE_INDD_FILE(131),
    /**
     * <code>FILE_TYPE_MID_FILE = 132;</code>
     */
    FILE_TYPE_MID_FILE(132),
    /**
     * <code>FILE_TYPE_KEY_FILE = 133;</code>
     */
    FILE_TYPE_KEY_FILE(133),
    /**
     * <code>FILE_TYPE_QXP_FILE = 134;</code>
     */
    FILE_TYPE_QXP_FILE(134),
    /**
     * <code>FILE_TYPE_MDB_FILE = 135;</code>
     */
    FILE_TYPE_MDB_FILE(135),
    /**
     * <code>FILE_TYPE_CER_FILE = 136;</code>
     */
    FILE_TYPE_CER_FILE(136),
    /**
     * <code>FILE_TYPE_PLUGIN_FILE = 137;</code>
     */
    FILE_TYPE_PLUGIN_FILE(137),
    /**
     * <code>FILE_TYPE_SD2_FILE = 138;</code>
     */
    FILE_TYPE_SD2_FILE(138),
    /**
     * <code>FILE_TYPE_TAR_FILE = 139;</code>
     */
    FILE_TYPE_TAR_FILE(139),
    /**
     * <code>FILE_TYPE_MOV_FILE = 140;</code>
     */
    FILE_TYPE_MOV_FILE(140),
    /**
     * <code>FILE_TYPE_AIF_FILE = 141;</code>
     */
    FILE_TYPE_AIF_FILE(141),
    /**
     * <code>FILE_TYPE_HQX_FILE = 142;</code>
     */
    FILE_TYPE_HQX_FILE(142),
    /**
     * <code>FILE_TYPE_FLA_FILE = 143;</code>
     */
    FILE_TYPE_FLA_FILE(143),
    /**
     * <code>FILE_TYPE_WPS_FILE = 144;</code>
     */
    FILE_TYPE_WPS_FILE(144),
    /**
     * <code>FILE_TYPE_CS_FILE = 145;</code>
     */
    FILE_TYPE_CS_FILE(145),
    /**
     * <code>FILE_TYPE_DLL_FILE = 146;</code>
     */
    FILE_TYPE_DLL_FILE(146),
    /**
     * <code>FILE_TYPE_DV_FILE = 147;</code>
     */
    FILE_TYPE_DV_FILE(147),
    /**
     * <code>FILE_TYPE_CPL_FILE = 148;</code>
     */
    FILE_TYPE_CPL_FILE(148),
    /**
     * <code>FILE_TYPE_PPS_FILE = 149;</code>
     */
    FILE_TYPE_PPS_FILE(149),
    /**
     * <code>FILE_TYPE_AVI_FILE = 150;</code>
     */
    FILE_TYPE_AVI_FILE(150),
    /**
     * <code>FILE_TYPE_CUR_FILE = 151;</code>
     */
    FILE_TYPE_CUR_FILE(151),
    /**
     * <code>FILE_TYPE_DTD_FILE = 152;</code>
     */
    FILE_TYPE_DTD_FILE(152),
    /**
     * <code>FILE_TYPE_NES_FILE = 153;</code>
     */
    FILE_TYPE_NES_FILE(153),
    /**
     * <code>FILE_TYPE_7_Z_FILE = 154;</code>
     */
    FILE_TYPE_7_Z_FILE(154),
    /**
     * <code>FILE_TYPE_WMA_FILE = 155;</code>
     */
    FILE_TYPE_WMA_FILE(155),
    /**
     * <code>FILE_TYPE_ANA_FILE = 156;</code>
     */
    FILE_TYPE_ANA_FILE(156),
    /**
     * <code>FILE_TYPE_XLL_FILE = 157;</code>
     */
    FILE_TYPE_XLL_FILE(157),
    /**
     * <code>FILE_TYPE_KEYCHAIN_FILE = 158;</code>
     */
    FILE_TYPE_KEYCHAIN_FILE(158),
    /**
     * <code>FILE_TYPE_JAVA_FILE = 159;</code>
     */
    FILE_TYPE_JAVA_FILE(159),
    /**
     * <code>FILE_TYPE_DEB_FILE = 160;</code>
     */
    FILE_TYPE_DEB_FILE(160),
    /**
     * <code>FILE_TYPE_TIF_FILE = 161;</code>
     */
    FILE_TYPE_TIF_FILE(161),
    /**
     * <code>FILE_TYPE_DRW_FILE = 162;</code>
     */
    FILE_TYPE_DRW_FILE(162),
    /**
     * <code>FILE_TYPE_CFG_FILE = 163;</code>
     */
    FILE_TYPE_CFG_FILE(163),
    ;

    /**
     * <code>FILE_TYPE_RELS_FILE = 0;</code>
     */
    public static final int FILE_TYPE_RELS_FILE_VALUE = 0;
    /**
     * <code>FILE_TYPE_WMV_FILE = 1;</code>
     */
    public static final int FILE_TYPE_WMV_FILE_VALUE = 1;
    /**
     * <code>FILE_TYPE_PLN_FILE = 2;</code>
     */
    public static final int FILE_TYPE_PLN_FILE_VALUE = 2;
    /**
     * <code>FILE_TYPE_ASP_FILE = 3;</code>
     */
    public static final int FILE_TYPE_ASP_FILE_VALUE = 3;
    /**
     * <code>FILE_TYPE_FNT_FILE = 4;</code>
     */
    public static final int FILE_TYPE_FNT_FILE_VALUE = 4;
    /**
     * <code>FILE_TYPE_EPS_FILE = 5;</code>
     */
    public static final int FILE_TYPE_EPS_FILE_VALUE = 5;
    /**
     * <code>FILE_TYPE_ROM_FILE = 6;</code>
     */
    public static final int FILE_TYPE_ROM_FILE_VALUE = 6;
    /**
     * <code>FILE_TYPE_YUV_FILE = 7;</code>
     */
    public static final int FILE_TYPE_YUV_FILE_VALUE = 7;
    /**
     * <code>FILE_TYPE_SITX_FILE = 8;</code>
     */
    public static final int FILE_TYPE_SITX_FILE_VALUE = 8;
    /**
     * <code>FILE_TYPE_UUE_FILE = 9;</code>
     */
    public static final int FILE_TYPE_UUE_FILE_VALUE = 9;
    /**
     * <code>FILE_TYPE_HTM_FILE = 10;</code>
     */
    public static final int FILE_TYPE_HTM_FILE_VALUE = 10;
    /**
     * <code>FILE_TYPE_EXE_FILE = 11;</code>
     */
    public static final int FILE_TYPE_EXE_FILE_VALUE = 11;
    /**
     * <code>FILE_TYPE_CSS_FILE = 12;</code>
     */
    public static final int FILE_TYPE_CSS_FILE_VALUE = 12;
    /**
     * <code>FILE_TYPE_NEU_FILE = 13;</code>
     */
    public static final int FILE_TYPE_NEU_FILE_VALUE = 13;
    /**
     * <code>FILE_TYPE_SIT_FILE = 14;</code>
     */
    public static final int FILE_TYPE_SIT_FILE_VALUE = 14;
    /**
     * <code>FILE_TYPE_WAV_FILE = 15;</code>
     */
    public static final int FILE_TYPE_WAV_FILE_VALUE = 15;
    /**
     * <code>FILE_TYPE_CAB_FILE = 16;</code>
     */
    public static final int FILE_TYPE_CAB_FILE_VALUE = 16;
    /**
     * <code>FILE_TYPE_RA_FILE = 17;</code>
     */
    public static final int FILE_TYPE_RA_FILE_VALUE = 17;
    /**
     * <code>FILE_TYPE_ACCDB_FILE = 18;</code>
     */
    public static final int FILE_TYPE_ACCDB_FILE_VALUE = 18;
    /**
     * <code>FILE_TYPE_XLSX_FILE = 19;</code>
     */
    public static final int FILE_TYPE_XLSX_FILE_VALUE = 19;
    /**
     * <code>FILE_TYPE_PRF_FILE = 20;</code>
     */
    public static final int FILE_TYPE_PRF_FILE_VALUE = 20;
    /**
     * <code>FILE_TYPE_PKG_FILE = 21;</code>
     */
    public static final int FILE_TYPE_PKG_FILE_VALUE = 21;
    /**
     * <code>FILE_TYPE_GPX_FILE = 22;</code>
     */
    public static final int FILE_TYPE_GPX_FILE_VALUE = 22;
    /**
     * <code>FILE_TYPE_XLS_FILE = 23;</code>
     */
    public static final int FILE_TYPE_XLS_FILE_VALUE = 23;
    /**
     * <code>FILE_TYPE_ORI_FILE = 24;</code>
     */
    public static final int FILE_TYPE_ORI_FILE_VALUE = 24;
    /**
     * <code>FILE_TYPE_MP3_FILE = 25;</code>
     */
    public static final int FILE_TYPE_MP3_FILE_VALUE = 25;
    /**
     * <code>FILE_TYPE_CLASS_FILE = 26;</code>
     */
    public static final int FILE_TYPE_CLASS_FILE_VALUE = 26;
    /**
     * <code>FILE_TYPE_XML_FILE = 27;</code>
     */
    public static final int FILE_TYPE_XML_FILE_VALUE = 27;
    /**
     * <code>FILE_TYPE_INI_FILE = 28;</code>
     */
    public static final int FILE_TYPE_INI_FILE_VALUE = 28;
    /**
     * <code>FILE_TYPE_BMP_FILE = 29;</code>
     */
    public static final int FILE_TYPE_BMP_FILE_VALUE = 29;
    /**
     * <code>FILE_TYPE_DBX_FILE = 30;</code>
     */
    public static final int FILE_TYPE_DBX_FILE_VALUE = 30;
    /**
     * <code>FILE_TYPE_EFX_FILE = 31;</code>
     */
    public static final int FILE_TYPE_EFX_FILE_VALUE = 31;
    /**
     * <code>FILE_TYPE_BT_FILE = 32;</code>
     */
    public static final int FILE_TYPE_BT_FILE_VALUE = 32;
    /**
     * <code>FILE_TYPE_SVG_FILE = 33;</code>
     */
    public static final int FILE_TYPE_SVG_FILE_VALUE = 33;
    /**
     * <code>FILE_TYPE_GZ_FILE = 34;</code>
     */
    public static final int FILE_TYPE_GZ_FILE_VALUE = 34;
    /**
     * <code>FILE_TYPE_PL_FILE = 35;</code>
     */
    public static final int FILE_TYPE_PL_FILE_VALUE = 35;
    /**
     * <code>FILE_TYPE_VB_FILE = 36;</code>
     */
    public static final int FILE_TYPE_VB_FILE_VALUE = 36;
    /**
     * <code>FILE_TYPE_AI_FILE = 37;</code>
     */
    public static final int FILE_TYPE_AI_FILE_VALUE = 37;
    /**
     * <code>FILE_TYPE_FLV_FILE = 38;</code>
     */
    public static final int FILE_TYPE_FLV_FILE_VALUE = 38;
    /**
     * <code>FILE_TYPE_CPP_FILE = 39;</code>
     */
    public static final int FILE_TYPE_CPP_FILE_VALUE = 39;
    /**
     * <code>FILE_TYPE_LNK_FILE = 40;</code>
     */
    public static final int FILE_TYPE_LNK_FILE_VALUE = 40;
    /**
     * <code>FILE_TYPE_M_FILE = 41;</code>
     */
    public static final int FILE_TYPE_M_FILE_VALUE = 41;
    /**
     * <code>FILE_TYPE_MSG_FILE = 42;</code>
     */
    public static final int FILE_TYPE_MSG_FILE_VALUE = 42;
    /**
     * <code>FILE_TYPE_TOAST_FILE = 43;</code>
     */
    public static final int FILE_TYPE_TOAST_FILE_VALUE = 43;
    /**
     * <code>FILE_TYPE_JS_FILE = 44;</code>
     */
    public static final int FILE_TYPE_JS_FILE_VALUE = 44;
    /**
     * <code>FILE_TYPE_SDF_FILE = 45;</code>
     */
    public static final int FILE_TYPE_SDF_FILE_VALUE = 45;
    /**
     * <code>FILE_TYPE_TXT_FILE = 46;</code>
     */
    public static final int FILE_TYPE_TXT_FILE_VALUE = 46;
    /**
     * <code>FILE_TYPE_PDF_FILE = 47;</code>
     */
    public static final int FILE_TYPE_PDF_FILE_VALUE = 47;
    /**
     * <code>FILE_TYPE_3_G2_FILE = 48;</code>
     */
    public static final int FILE_TYPE_3_G2_FILE_VALUE = 48;
    /**
     * <code>FILE_TYPE_KML_FILE = 49;</code>
     */
    public static final int FILE_TYPE_KML_FILE_VALUE = 49;
    /**
     * <code>FILE_TYPE_PHP_FILE = 50;</code>
     */
    public static final int FILE_TYPE_PHP_FILE_VALUE = 50;
    /**
     * <code>FILE_TYPE_3_GP_FILE = 51;</code>
     */
    public static final int FILE_TYPE_3_GP_FILE_VALUE = 51;
    /**
     * <code>FILE_TYPE_FON_FILE = 52;</code>
     */
    public static final int FILE_TYPE_FON_FILE_VALUE = 52;
    /**
     * <code>FILE_TYPE_MPA_FILE = 53;</code>
     */
    public static final int FILE_TYPE_MPA_FILE_VALUE = 53;
    /**
     * <code>FILE_TYPE_GAM_FILE = 54;</code>
     */
    public static final int FILE_TYPE_GAM_FILE_VALUE = 54;
    /**
     * <code>FILE_TYPE_LOG_FILE = 55;</code>
     */
    public static final int FILE_TYPE_LOG_FILE_VALUE = 55;
    /**
     * <code>FILE_TYPE_PNG_FILE = 56;</code>
     */
    public static final int FILE_TYPE_PNG_FILE_VALUE = 56;
    /**
     * <code>FILE_TYPE_THM_FILE = 57;</code>
     */
    public static final int FILE_TYPE_THM_FILE_VALUE = 57;
    /**
     * <code>FILE_TYPE_WKS_FILE = 58;</code>
     */
    public static final int FILE_TYPE_WKS_FILE_VALUE = 58;
    /**
     * <code>FILE_TYPE_VCF_FILE = 59;</code>
     */
    public static final int FILE_TYPE_VCF_FILE_VALUE = 59;
    /**
     * <code>FILE_TYPE_JSP_FILE = 60;</code>
     */
    public static final int FILE_TYPE_JSP_FILE_VALUE = 60;
    /**
     * <code>FILE_TYPE_PCM_FILE = 61;</code>
     */
    public static final int FILE_TYPE_PCM_FILE_VALUE = 61;
    /**
     * <code>FILE_TYPE_PIF_FILE = 62;</code>
     */
    public static final int FILE_TYPE_PIF_FILE_VALUE = 62;
    /**
     * <code>FILE_TYPE_WPD_FILE = 63;</code>
     */
    public static final int FILE_TYPE_WPD_FILE_VALUE = 63;
    /**
     * <code>FILE_TYPE_QXD_FILE = 64;</code>
     */
    public static final int FILE_TYPE_QXD_FILE_VALUE = 64;
    /**
     * <code>FILE_TYPE_HTML_FILE = 65;</code>
     */
    public static final int FILE_TYPE_HTML_FILE_VALUE = 65;
    /**
     * <code>FILE_TYPE_SYS_FILE = 66;</code>
     */
    public static final int FILE_TYPE_SYS_FILE_VALUE = 66;
    /**
     * <code>FILE_TYPE_8_BI_FILE = 67;</code>
     */
    public static final int FILE_TYPE_8_BI_FILE_VALUE = 67;
    /**
     * <code>FILE_TYPE_TTF_FILE = 68;</code>
     */
    public static final int FILE_TYPE_TTF_FILE_VALUE = 68;
    /**
     * <code>FILE_TYPE_DXF_FILE = 69;</code>
     */
    public static final int FILE_TYPE_DXF_FILE_VALUE = 69;
    /**
     * <code>FILE_TYPE_MAX_FILE = 70;</code>
     */
    public static final int FILE_TYPE_MAX_FILE_VALUE = 70;
    /**
     * <code>FILE_TYPE_PAGES_FILE = 71;</code>
     */
    public static final int FILE_TYPE_PAGES_FILE_VALUE = 71;
    /**
     * <code>FILE_TYPE_PPT_FILE = 72;</code>
     */
    public static final int FILE_TYPE_PPT_FILE_VALUE = 72;
    /**
     * <code>FILE_TYPE_PSPIMAGE_FILE = 73;</code>
     */
    public static final int FILE_TYPE_PSPIMAGE_FILE_VALUE = 73;
    /**
     * <code>FILE_TYPE_ASX_FILE = 74;</code>
     */
    public static final int FILE_TYPE_ASX_FILE_VALUE = 74;
    /**
     * <code>FILE_TYPE_CGI_FILE = 75;</code>
     */
    public static final int FILE_TYPE_CGI_FILE_VALUE = 75;
    /**
     * <code>FILE_TYPE_JAR_FILE = 76;</code>
     */
    public static final int FILE_TYPE_JAR_FILE_VALUE = 76;
    /**
     * <code>FILE_TYPE_BAK_FILE = 77;</code>
     */
    public static final int FILE_TYPE_BAK_FILE_VALUE = 77;
    /**
     * <code>FILE_TYPE_PSD_FILE = 78;</code>
     */
    public static final int FILE_TYPE_PSD_FILE_VALUE = 78;
    /**
     * <code>FILE_TYPE_DMP_FILE = 79;</code>
     */
    public static final int FILE_TYPE_DMP_FILE_VALUE = 79;
    /**
     * <code>FILE_TYPE_BAT_FILE = 80;</code>
     */
    public static final int FILE_TYPE_BAT_FILE_VALUE = 80;
    /**
     * <code>FILE_TYPE_DRV_FILE = 81;</code>
     */
    public static final int FILE_TYPE_DRV_FILE_VALUE = 81;
    /**
     * <code>FILE_TYPE_ZIP_FILE = 82;</code>
     */
    public static final int FILE_TYPE_ZIP_FILE_VALUE = 82;
    /**
     * <code>FILE_TYPE_PDB_FILE = 83;</code>
     */
    public static final int FILE_TYPE_PDB_FILE_VALUE = 83;
    /**
     * <code>FILE_TYPE_RM_FILE = 84;</code>
     */
    public static final int FILE_TYPE_RM_FILE_VALUE = 84;
    /**
     * <code>FILE_TYPE_XHTML_FILE = 85;</code>
     */
    public static final int FILE_TYPE_XHTML_FILE_VALUE = 85;
    /**
     * <code>FILE_TYPE_ASF_FILE = 86;</code>
     */
    public static final int FILE_TYPE_ASF_FILE_VALUE = 86;
    /**
     * <code>FILE_TYPE_GIF_FILE = 87;</code>
     */
    public static final int FILE_TYPE_GIF_FILE_VALUE = 87;
    /**
     * <code>FILE_TYPE_PPTX_FILE = 88;</code>
     */
    public static final int FILE_TYPE_PPTX_FILE_VALUE = 88;
    /**
     * <code>FILE_TYPE_BWF_FILE = 89;</code>
     */
    public static final int FILE_TYPE_BWF_FILE_VALUE = 89;
    /**
     * <code>FILE_TYPE_SWF_FILE = 90;</code>
     */
    public static final int FILE_TYPE_SWF_FILE_VALUE = 90;
    /**
     * <code>FILE_TYPE_MPG_FILE = 91;</code>
     */
    public static final int FILE_TYPE_MPG_FILE_VALUE = 91;
    /**
     * <code>FILE_TYPE_VOB_FILE = 92;</code>
     */
    public static final int FILE_TYPE_VOB_FILE_VALUE = 92;
    /**
     * <code>FILE_TYPE_C_FILE = 93;</code>
     */
    public static final int FILE_TYPE_C_FILE_VALUE = 93;
    /**
     * <code>FILE_TYPE_DMG_FILE = 94;</code>
     */
    public static final int FILE_TYPE_DMG_FILE_VALUE = 94;
    /**
     * <code>FILE_TYPE_RTF_FILE = 95;</code>
     */
    public static final int FILE_TYPE_RTF_FILE_VALUE = 95;
    /**
     * <code>FILE_TYPE_AUD_FILE = 96;</code>
     */
    public static final int FILE_TYPE_AUD_FILE_VALUE = 96;
    /**
     * <code>FILE_TYPE_DOC_FILE = 97;</code>
     */
    public static final int FILE_TYPE_DOC_FILE_VALUE = 97;
    /**
     * <code>FILE_TYPE_IFF_FILE = 98;</code>
     */
    public static final int FILE_TYPE_IFF_FILE_VALUE = 98;
    /**
     * <code>FILE_TYPE_CSR_FILE = 99;</code>
     */
    public static final int FILE_TYPE_CSR_FILE_VALUE = 99;
    /**
     * <code>FILE_TYPE_CSV_FILE = 100;</code>
     */
    public static final int FILE_TYPE_CSV_FILE_VALUE = 100;
    /**
     * <code>FILE_TYPE_ISO_FILE = 101;</code>
     */
    public static final int FILE_TYPE_ISO_FILE_VALUE = 101;
    /**
     * <code>FILE_TYPE_OTF_FILE = 102;</code>
     */
    public static final int FILE_TYPE_OTF_FILE_VALUE = 102;
    /**
     * <code>FILE_TYPE_DAT_FILE = 103;</code>
     */
    public static final int FILE_TYPE_DAT_FILE_VALUE = 103;
    /**
     * <code>FILE_TYPE_JPG_FILE = 104;</code>
     */
    public static final int FILE_TYPE_JPG_FILE_VALUE = 104;
    /**
     * <code>FILE_TYPE_SAV_FILE = 105;</code>
     */
    public static final int FILE_TYPE_SAV_FILE_VALUE = 105;
    /**
     * <code>FILE_TYPE_3_DM_FILE = 106;</code>
     */
    public static final int FILE_TYPE_3_DM_FILE_VALUE = 106;
    /**
     * <code>FILE_TYPE_AAC_FILE = 107;</code>
     */
    public static final int FILE_TYPE_AAC_FILE_VALUE = 107;
    /**
     * <code>FILE_TYPE_COM_FILE = 108;</code>
     */
    public static final int FILE_TYPE_COM_FILE_VALUE = 108;
    /**
     * <code>FILE_TYPE_MP4_FILE = 109;</code>
     */
    public static final int FILE_TYPE_MP4_FILE_VALUE = 109;
    /**
     * <code>FILE_TYPE_PTS_FILE = 110;</code>
     */
    public static final int FILE_TYPE_PTS_FILE_VALUE = 110;
    /**
     * <code>FILE_TYPE_DOCX_FILE = 111;</code>
     */
    public static final int FILE_TYPE_DOCX_FILE_VALUE = 111;
    /**
     * <code>FILE_TYPE_RAR_FILE = 112;</code>
     */
    public static final int FILE_TYPE_RAR_FILE_VALUE = 112;
    /**
     * <code>FILE_TYPE_BIN_FILE = 113;</code>
     */
    public static final int FILE_TYPE_BIN_FILE_VALUE = 113;
    /**
     * <code>FILE_TYPE_DB_FILE = 114;</code>
     */
    public static final int FILE_TYPE_DB_FILE_VALUE = 114;
    /**
     * <code>FILE_TYPE_DWG_FILE = 115;</code>
     */
    public static final int FILE_TYPE_DWG_FILE_VALUE = 115;
    /**
     * <code>FILE_TYPE_DSD_FILE = 116;</code>
     */
    public static final int FILE_TYPE_DSD_FILE_VALUE = 116;
    /**
     * <code>FILE_TYPE_TAR_GZ_FILE = 117;</code>
     */
    public static final int FILE_TYPE_TAR_GZ_FILE_VALUE = 117;
    /**
     * <code>FILE_TYPE_VCD_FILE = 118;</code>
     */
    public static final int FILE_TYPE_VCD_FILE_VALUE = 118;
    /**
     * <code>FILE_TYPE_GHO_FILE = 119;</code>
     */
    public static final int FILE_TYPE_GHO_FILE_VALUE = 119;
    /**
     * <code>FILE_TYPE_PCT_FILE = 120;</code>
     */
    public static final int FILE_TYPE_PCT_FILE_VALUE = 120;
    /**
     * <code>FILE_TYPE_RSS_FILE = 121;</code>
     */
    public static final int FILE_TYPE_RSS_FILE_VALUE = 121;
    /**
     * <code>FILE_TYPE_WSF_FILE = 122;</code>
     */
    public static final int FILE_TYPE_WSF_FILE_VALUE = 122;
    /**
     * <code>FILE_TYPE_M3_U_FILE = 123;</code>
     */
    public static final int FILE_TYPE_M3_U_FILE_VALUE = 123;
    /**
     * <code>FILE_TYPE_ZIPX_FILE = 124;</code>
     */
    public static final int FILE_TYPE_ZIPX_FILE_VALUE = 124;
    /**
     * <code>FILE_TYPE_APP_FILE = 125;</code>
     */
    public static final int FILE_TYPE_APP_FILE_VALUE = 125;
    /**
     * <code>FILE_TYPE_MIM_FILE = 126;</code>
     */
    public static final int FILE_TYPE_MIM_FILE_VALUE = 126;
    /**
     * <code>FILE_TYPE_TMP_FILE = 127;</code>
     */
    public static final int FILE_TYPE_TMP_FILE_VALUE = 127;
    /**
     * <code>FILE_TYPE_PS_FILE = 128;</code>
     */
    public static final int FILE_TYPE_PS_FILE_VALUE = 128;
    /**
     * <code>FILE_TYPE_SQL_FILE = 129;</code>
     */
    public static final int FILE_TYPE_SQL_FILE_VALUE = 129;
    /**
     * <code>FILE_TYPE_GADGET_FILE = 130;</code>
     */
    public static final int FILE_TYPE_GADGET_FILE_VALUE = 130;
    /**
     * <code>FILE_TYPE_INDD_FILE = 131;</code>
     */
    public static final int FILE_TYPE_INDD_FILE_VALUE = 131;
    /**
     * <code>FILE_TYPE_MID_FILE = 132;</code>
     */
    public static final int FILE_TYPE_MID_FILE_VALUE = 132;
    /**
     * <code>FILE_TYPE_KEY_FILE = 133;</code>
     */
    public static final int FILE_TYPE_KEY_FILE_VALUE = 133;
    /**
     * <code>FILE_TYPE_QXP_FILE = 134;</code>
     */
    public static final int FILE_TYPE_QXP_FILE_VALUE = 134;
    /**
     * <code>FILE_TYPE_MDB_FILE = 135;</code>
     */
    public static final int FILE_TYPE_MDB_FILE_VALUE = 135;
    /**
     * <code>FILE_TYPE_CER_FILE = 136;</code>
     */
    public static final int FILE_TYPE_CER_FILE_VALUE = 136;
    /**
     * <code>FILE_TYPE_PLUGIN_FILE = 137;</code>
     */
    public static final int FILE_TYPE_PLUGIN_FILE_VALUE = 137;
    /**
     * <code>FILE_TYPE_SD2_FILE = 138;</code>
     */
    public static final int FILE_TYPE_SD2_FILE_VALUE = 138;
    /**
     * <code>FILE_TYPE_TAR_FILE = 139;</code>
     */
    public static final int FILE_TYPE_TAR_FILE_VALUE = 139;
    /**
     * <code>FILE_TYPE_MOV_FILE = 140;</code>
     */
    public static final int FILE_TYPE_MOV_FILE_VALUE = 140;
    /**
     * <code>FILE_TYPE_AIF_FILE = 141;</code>
     */
    public static final int FILE_TYPE_AIF_FILE_VALUE = 141;
    /**
     * <code>FILE_TYPE_HQX_FILE = 142;</code>
     */
    public static final int FILE_TYPE_HQX_FILE_VALUE = 142;
    /**
     * <code>FILE_TYPE_FLA_FILE = 143;</code>
     */
    public static final int FILE_TYPE_FLA_FILE_VALUE = 143;
    /**
     * <code>FILE_TYPE_WPS_FILE = 144;</code>
     */
    public static final int FILE_TYPE_WPS_FILE_VALUE = 144;
    /**
     * <code>FILE_TYPE_CS_FILE = 145;</code>
     */
    public static final int FILE_TYPE_CS_FILE_VALUE = 145;
    /**
     * <code>FILE_TYPE_DLL_FILE = 146;</code>
     */
    public static final int FILE_TYPE_DLL_FILE_VALUE = 146;
    /**
     * <code>FILE_TYPE_DV_FILE = 147;</code>
     */
    public static final int FILE_TYPE_DV_FILE_VALUE = 147;
    /**
     * <code>FILE_TYPE_CPL_FILE = 148;</code>
     */
    public static final int FILE_TYPE_CPL_FILE_VALUE = 148;
    /**
     * <code>FILE_TYPE_PPS_FILE = 149;</code>
     */
    public static final int FILE_TYPE_PPS_FILE_VALUE = 149;
    /**
     * <code>FILE_TYPE_AVI_FILE = 150;</code>
     */
    public static final int FILE_TYPE_AVI_FILE_VALUE = 150;
    /**
     * <code>FILE_TYPE_CUR_FILE = 151;</code>
     */
    public static final int FILE_TYPE_CUR_FILE_VALUE = 151;
    /**
     * <code>FILE_TYPE_DTD_FILE = 152;</code>
     */
    public static final int FILE_TYPE_DTD_FILE_VALUE = 152;
    /**
     * <code>FILE_TYPE_NES_FILE = 153;</code>
     */
    public static final int FILE_TYPE_NES_FILE_VALUE = 153;
    /**
     * <code>FILE_TYPE_7_Z_FILE = 154;</code>
     */
    public static final int FILE_TYPE_7_Z_FILE_VALUE = 154;
    /**
     * <code>FILE_TYPE_WMA_FILE = 155;</code>
     */
    public static final int FILE_TYPE_WMA_FILE_VALUE = 155;
    /**
     * <code>FILE_TYPE_ANA_FILE = 156;</code>
     */
    public static final int FILE_TYPE_ANA_FILE_VALUE = 156;
    /**
     * <code>FILE_TYPE_XLL_FILE = 157;</code>
     */
    public static final int FILE_TYPE_XLL_FILE_VALUE = 157;
    /**
     * <code>FILE_TYPE_KEYCHAIN_FILE = 158;</code>
     */
    public static final int FILE_TYPE_KEYCHAIN_FILE_VALUE = 158;
    /**
     * <code>FILE_TYPE_JAVA_FILE = 159;</code>
     */
    public static final int FILE_TYPE_JAVA_FILE_VALUE = 159;
    /**
     * <code>FILE_TYPE_DEB_FILE = 160;</code>
     */
    public static final int FILE_TYPE_DEB_FILE_VALUE = 160;
    /**
     * <code>FILE_TYPE_TIF_FILE = 161;</code>
     */
    public static final int FILE_TYPE_TIF_FILE_VALUE = 161;
    /**
     * <code>FILE_TYPE_DRW_FILE = 162;</code>
     */
    public static final int FILE_TYPE_DRW_FILE_VALUE = 162;
    /**
     * <code>FILE_TYPE_CFG_FILE = 163;</code>
     */
    public static final int FILE_TYPE_CFG_FILE_VALUE = 163;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FileType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FileType forNumber(int value) {
      switch (value) {
        case 0: return FILE_TYPE_RELS_FILE;
        case 1: return FILE_TYPE_WMV_FILE;
        case 2: return FILE_TYPE_PLN_FILE;
        case 3: return FILE_TYPE_ASP_FILE;
        case 4: return FILE_TYPE_FNT_FILE;
        case 5: return FILE_TYPE_EPS_FILE;
        case 6: return FILE_TYPE_ROM_FILE;
        case 7: return FILE_TYPE_YUV_FILE;
        case 8: return FILE_TYPE_SITX_FILE;
        case 9: return FILE_TYPE_UUE_FILE;
        case 10: return FILE_TYPE_HTM_FILE;
        case 11: return FILE_TYPE_EXE_FILE;
        case 12: return FILE_TYPE_CSS_FILE;
        case 13: return FILE_TYPE_NEU_FILE;
        case 14: return FILE_TYPE_SIT_FILE;
        case 15: return FILE_TYPE_WAV_FILE;
        case 16: return FILE_TYPE_CAB_FILE;
        case 17: return FILE_TYPE_RA_FILE;
        case 18: return FILE_TYPE_ACCDB_FILE;
        case 19: return FILE_TYPE_XLSX_FILE;
        case 20: return FILE_TYPE_PRF_FILE;
        case 21: return FILE_TYPE_PKG_FILE;
        case 22: return FILE_TYPE_GPX_FILE;
        case 23: return FILE_TYPE_XLS_FILE;
        case 24: return FILE_TYPE_ORI_FILE;
        case 25: return FILE_TYPE_MP3_FILE;
        case 26: return FILE_TYPE_CLASS_FILE;
        case 27: return FILE_TYPE_XML_FILE;
        case 28: return FILE_TYPE_INI_FILE;
        case 29: return FILE_TYPE_BMP_FILE;
        case 30: return FILE_TYPE_DBX_FILE;
        case 31: return FILE_TYPE_EFX_FILE;
        case 32: return FILE_TYPE_BT_FILE;
        case 33: return FILE_TYPE_SVG_FILE;
        case 34: return FILE_TYPE_GZ_FILE;
        case 35: return FILE_TYPE_PL_FILE;
        case 36: return FILE_TYPE_VB_FILE;
        case 37: return FILE_TYPE_AI_FILE;
        case 38: return FILE_TYPE_FLV_FILE;
        case 39: return FILE_TYPE_CPP_FILE;
        case 40: return FILE_TYPE_LNK_FILE;
        case 41: return FILE_TYPE_M_FILE;
        case 42: return FILE_TYPE_MSG_FILE;
        case 43: return FILE_TYPE_TOAST_FILE;
        case 44: return FILE_TYPE_JS_FILE;
        case 45: return FILE_TYPE_SDF_FILE;
        case 46: return FILE_TYPE_TXT_FILE;
        case 47: return FILE_TYPE_PDF_FILE;
        case 48: return FILE_TYPE_3_G2_FILE;
        case 49: return FILE_TYPE_KML_FILE;
        case 50: return FILE_TYPE_PHP_FILE;
        case 51: return FILE_TYPE_3_GP_FILE;
        case 52: return FILE_TYPE_FON_FILE;
        case 53: return FILE_TYPE_MPA_FILE;
        case 54: return FILE_TYPE_GAM_FILE;
        case 55: return FILE_TYPE_LOG_FILE;
        case 56: return FILE_TYPE_PNG_FILE;
        case 57: return FILE_TYPE_THM_FILE;
        case 58: return FILE_TYPE_WKS_FILE;
        case 59: return FILE_TYPE_VCF_FILE;
        case 60: return FILE_TYPE_JSP_FILE;
        case 61: return FILE_TYPE_PCM_FILE;
        case 62: return FILE_TYPE_PIF_FILE;
        case 63: return FILE_TYPE_WPD_FILE;
        case 64: return FILE_TYPE_QXD_FILE;
        case 65: return FILE_TYPE_HTML_FILE;
        case 66: return FILE_TYPE_SYS_FILE;
        case 67: return FILE_TYPE_8_BI_FILE;
        case 68: return FILE_TYPE_TTF_FILE;
        case 69: return FILE_TYPE_DXF_FILE;
        case 70: return FILE_TYPE_MAX_FILE;
        case 71: return FILE_TYPE_PAGES_FILE;
        case 72: return FILE_TYPE_PPT_FILE;
        case 73: return FILE_TYPE_PSPIMAGE_FILE;
        case 74: return FILE_TYPE_ASX_FILE;
        case 75: return FILE_TYPE_CGI_FILE;
        case 76: return FILE_TYPE_JAR_FILE;
        case 77: return FILE_TYPE_BAK_FILE;
        case 78: return FILE_TYPE_PSD_FILE;
        case 79: return FILE_TYPE_DMP_FILE;
        case 80: return FILE_TYPE_BAT_FILE;
        case 81: return FILE_TYPE_DRV_FILE;
        case 82: return FILE_TYPE_ZIP_FILE;
        case 83: return FILE_TYPE_PDB_FILE;
        case 84: return FILE_TYPE_RM_FILE;
        case 85: return FILE_TYPE_XHTML_FILE;
        case 86: return FILE_TYPE_ASF_FILE;
        case 87: return FILE_TYPE_GIF_FILE;
        case 88: return FILE_TYPE_PPTX_FILE;
        case 89: return FILE_TYPE_BWF_FILE;
        case 90: return FILE_TYPE_SWF_FILE;
        case 91: return FILE_TYPE_MPG_FILE;
        case 92: return FILE_TYPE_VOB_FILE;
        case 93: return FILE_TYPE_C_FILE;
        case 94: return FILE_TYPE_DMG_FILE;
        case 95: return FILE_TYPE_RTF_FILE;
        case 96: return FILE_TYPE_AUD_FILE;
        case 97: return FILE_TYPE_DOC_FILE;
        case 98: return FILE_TYPE_IFF_FILE;
        case 99: return FILE_TYPE_CSR_FILE;
        case 100: return FILE_TYPE_CSV_FILE;
        case 101: return FILE_TYPE_ISO_FILE;
        case 102: return FILE_TYPE_OTF_FILE;
        case 103: return FILE_TYPE_DAT_FILE;
        case 104: return FILE_TYPE_JPG_FILE;
        case 105: return FILE_TYPE_SAV_FILE;
        case 106: return FILE_TYPE_3_DM_FILE;
        case 107: return FILE_TYPE_AAC_FILE;
        case 108: return FILE_TYPE_COM_FILE;
        case 109: return FILE_TYPE_MP4_FILE;
        case 110: return FILE_TYPE_PTS_FILE;
        case 111: return FILE_TYPE_DOCX_FILE;
        case 112: return FILE_TYPE_RAR_FILE;
        case 113: return FILE_TYPE_BIN_FILE;
        case 114: return FILE_TYPE_DB_FILE;
        case 115: return FILE_TYPE_DWG_FILE;
        case 116: return FILE_TYPE_DSD_FILE;
        case 117: return FILE_TYPE_TAR_GZ_FILE;
        case 118: return FILE_TYPE_VCD_FILE;
        case 119: return FILE_TYPE_GHO_FILE;
        case 120: return FILE_TYPE_PCT_FILE;
        case 121: return FILE_TYPE_RSS_FILE;
        case 122: return FILE_TYPE_WSF_FILE;
        case 123: return FILE_TYPE_M3_U_FILE;
        case 124: return FILE_TYPE_ZIPX_FILE;
        case 125: return FILE_TYPE_APP_FILE;
        case 126: return FILE_TYPE_MIM_FILE;
        case 127: return FILE_TYPE_TMP_FILE;
        case 128: return FILE_TYPE_PS_FILE;
        case 129: return FILE_TYPE_SQL_FILE;
        case 130: return FILE_TYPE_GADGET_FILE;
        case 131: return FILE_TYPE_INDD_FILE;
        case 132: return FILE_TYPE_MID_FILE;
        case 133: return FILE_TYPE_KEY_FILE;
        case 134: return FILE_TYPE_QXP_FILE;
        case 135: return FILE_TYPE_MDB_FILE;
        case 136: return FILE_TYPE_CER_FILE;
        case 137: return FILE_TYPE_PLUGIN_FILE;
        case 138: return FILE_TYPE_SD2_FILE;
        case 139: return FILE_TYPE_TAR_FILE;
        case 140: return FILE_TYPE_MOV_FILE;
        case 141: return FILE_TYPE_AIF_FILE;
        case 142: return FILE_TYPE_HQX_FILE;
        case 143: return FILE_TYPE_FLA_FILE;
        case 144: return FILE_TYPE_WPS_FILE;
        case 145: return FILE_TYPE_CS_FILE;
        case 146: return FILE_TYPE_DLL_FILE;
        case 147: return FILE_TYPE_DV_FILE;
        case 148: return FILE_TYPE_CPL_FILE;
        case 149: return FILE_TYPE_PPS_FILE;
        case 150: return FILE_TYPE_AVI_FILE;
        case 151: return FILE_TYPE_CUR_FILE;
        case 152: return FILE_TYPE_DTD_FILE;
        case 153: return FILE_TYPE_NES_FILE;
        case 154: return FILE_TYPE_7_Z_FILE;
        case 155: return FILE_TYPE_WMA_FILE;
        case 156: return FILE_TYPE_ANA_FILE;
        case 157: return FILE_TYPE_XLL_FILE;
        case 158: return FILE_TYPE_KEYCHAIN_FILE;
        case 159: return FILE_TYPE_JAVA_FILE;
        case 160: return FILE_TYPE_DEB_FILE;
        case 161: return FILE_TYPE_TIF_FILE;
        case 162: return FILE_TYPE_DRW_FILE;
        case 163: return FILE_TYPE_CFG_FILE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FileType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FileType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FileType>() {
            public FileType findValueByNumber(int number) {
              return FileType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(66);
    }

    private static final FileType[] VALUES = values();

    public static FileType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FileType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.FileType)
  }

  /**
   * Protobuf enum {@code avs.FingerprintAlgorithmType}
   */
  public enum FingerprintAlgorithmType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FINGERPRINT_ALGORITHM_TYPE_USER_DEFINED = 0;</code>
     */
    FINGERPRINT_ALGORITHM_TYPE_USER_DEFINED(0),
    ;

    /**
     * <code>FINGERPRINT_ALGORITHM_TYPE_USER_DEFINED = 0;</code>
     */
    public static final int FINGERPRINT_ALGORITHM_TYPE_USER_DEFINED_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FingerprintAlgorithmType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FingerprintAlgorithmType forNumber(int value) {
      switch (value) {
        case 0: return FINGERPRINT_ALGORITHM_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FingerprintAlgorithmType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FingerprintAlgorithmType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FingerprintAlgorithmType>() {
            public FingerprintAlgorithmType findValueByNumber(int number) {
              return FingerprintAlgorithmType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(67);
    }

    private static final FingerprintAlgorithmType[] VALUES = values();

    public static FingerprintAlgorithmType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FingerprintAlgorithmType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.FingerprintAlgorithmType)
  }

  /**
   * Protobuf enum {@code avs.Form}
   */
  public enum Form
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FORM_SONATINA = 0;</code>
     */
    FORM_SONATINA(0),
    /**
     * <code>FORM_POWER_BALLAD = 1;</code>
     */
    FORM_POWER_BALLAD(1),
    /**
     * <code>FORM_CAVATINA = 2;</code>
     */
    FORM_CAVATINA(2),
    /**
     * <code>FORM_ETUDE = 3;</code>
     */
    FORM_ETUDE(3),
    /**
     * <code>FORM_PERPETUUM_MOBILE = 4;</code>
     */
    FORM_PERPETUUM_MOBILE(4),
    /**
     * <code>FORM_SYMPHONIC_POEM = 5;</code>
     */
    FORM_SYMPHONIC_POEM(5),
    /**
     * <code>FORM_BALLATA = 6;</code>
     */
    FORM_BALLATA(6),
    /**
     * <code>FORM_BOLERO = 7;</code>
     */
    FORM_BOLERO(7),
    /**
     * <code>FORM_POLONAISE = 8;</code>
     */
    FORM_POLONAISE(8),
    /**
     * <code>FORM_PASSACAGLIA = 9;</code>
     */
    FORM_PASSACAGLIA(9),
    /**
     * <code>FORM_SUITE = 10;</code>
     */
    FORM_SUITE(10),
    /**
     * <code>FORM_DIVERTIMENTO = 11;</code>
     */
    FORM_DIVERTIMENTO(11),
    /**
     * <code>FORM_MINUET = 12;</code>
     */
    FORM_MINUET(12),
    /**
     * <code>FORM_SYMPHONY = 13;</code>
     */
    FORM_SYMPHONY(13),
    /**
     * <code>FORM_ADAGIO = 14;</code>
     */
    FORM_ADAGIO(14),
    /**
     * <code>FORM_SINFONIA_CONCERTANTE = 15;</code>
     */
    FORM_SINFONIA_CONCERTANTE(15),
    /**
     * <code>FORM_MADRIGAL = 16;</code>
     */
    FORM_MADRIGAL(16),
    /**
     * <code>FORM_CHACONNE = 17;</code>
     */
    FORM_CHACONNE(17),
    /**
     * <code>FORM_FANFARE = 18;</code>
     */
    FORM_FANFARE(18),
    /**
     * <code>FORM_OVERTURE = 19;</code>
     */
    FORM_OVERTURE(19),
    /**
     * <code>FORM_SALTARELLO = 20;</code>
     */
    FORM_SALTARELLO(20),
    /**
     * <code>FORM_USER_DEFINED = 21;</code>
     */
    FORM_USER_DEFINED(21),
    /**
     * <code>FORM_TWELVE_BAR_BLUES = 22;</code>
     */
    FORM_TWELVE_BAR_BLUES(22),
    /**
     * <code>FORM_ESTAMPIE = 23;</code>
     */
    FORM_ESTAMPIE(23),
    /**
     * <code>FORM_PAVANE = 24;</code>
     */
    FORM_PAVANE(24),
    /**
     * <code>FORM_CHANSON = 25;</code>
     */
    FORM_CHANSON(25),
    /**
     * <code>FORM_EIGHT_BAR_BLUES = 26;</code>
     */
    FORM_EIGHT_BAR_BLUES(26),
    /**
     * <code>FORM_BALLADE = 27;</code>
     */
    FORM_BALLADE(27),
    /**
     * <code>FORM_SEQUENCE = 28;</code>
     */
    FORM_SEQUENCE(28),
    /**
     * <code>FORM_BALLAD = 29;</code>
     */
    FORM_BALLAD(29),
    /**
     * <code>FORM_CAPRICE = 30;</code>
     */
    FORM_CAPRICE(30),
    /**
     * <code>FORM_MINIMAL = 31;</code>
     */
    FORM_MINIMAL(31),
    /**
     * <code>FORM_SONATA = 32;</code>
     */
    FORM_SONATA(32),
    /**
     * <code>FORM_VERSE_ONLY = 33;</code>
     */
    FORM_VERSE_ONLY(33),
    /**
     * <code>FORM_HYMN = 34;</code>
     */
    FORM_HYMN(34),
    /**
     * <code>FORM_MASS = 35;</code>
     */
    FORM_MASS(35),
    /**
     * <code>FORM_CONCERTO = 36;</code>
     */
    FORM_CONCERTO(36),
    /**
     * <code>FORM_INTERMEZZO = 37;</code>
     */
    FORM_INTERMEZZO(37),
    /**
     * <code>FORM_MOMENT_FORM = 38;</code>
     */
    FORM_MOMENT_FORM(38),
    /**
     * <code>FORM_ARIA = 39;</code>
     */
    FORM_ARIA(39),
    /**
     * <code>FORM_TIENTO = 40;</code>
     */
    FORM_TIENTO(40),
    /**
     * <code>FORM_FANTASY = 41;</code>
     */
    FORM_FANTASY(41),
    /**
     * <code>FORM_BARCAROLLE = 42;</code>
     */
    FORM_BARCAROLLE(42),
    /**
     * <code>FORM_SERENADE = 43;</code>
     */
    FORM_SERENADE(43),
    /**
     * <code>FORM_WALTZ = 44;</code>
     */
    FORM_WALTZ(44),
    /**
     * <code>FORM_CANTATA = 45;</code>
     */
    FORM_CANTATA(45),
    /**
     * <code>FORM_DUMKA = 46;</code>
     */
    FORM_DUMKA(46),
    /**
     * <code>FORM_MARCH = 47;</code>
     */
    FORM_MARCH(47),
    /**
     * <code>FORM_BAGATELLE = 48;</code>
     */
    FORM_BAGATELLE(48),
    /**
     * <code>FORM_RONDO = 49;</code>
     */
    FORM_RONDO(49),
    /**
     * <code>FORM_CAROL = 50;</code>
     */
    FORM_CAROL(50),
    /**
     * <code>FORM_IMPROVISATION = 51;</code>
     */
    FORM_IMPROVISATION(51),
    /**
     * <code>FORM_MAZURKA = 52;</code>
     */
    FORM_MAZURKA(52),
    /**
     * <code>FORM_TARANTELLA = 53;</code>
     */
    FORM_TARANTELLA(53),
    /**
     * <code>FORM_RAGA = 54;</code>
     */
    FORM_RAGA(54),
    /**
     * <code>FORM_ALLEMANDE = 55;</code>
     */
    FORM_ALLEMANDE(55),
    /**
     * <code>FORM_MOTET = 56;</code>
     */
    FORM_MOTET(56),
    /**
     * <code>FORM_CANON = 57;</code>
     */
    FORM_CANON(57),
    /**
     * <code>FORM_FURIANT = 58;</code>
     */
    FORM_FURIANT(58),
    /**
     * <code>FORM_CANZONA = 59;</code>
     */
    FORM_CANZONA(59),
    /**
     * <code>FORM_PARTITA = 60;</code>
     */
    FORM_PARTITA(60),
    /**
     * <code>FORM_LIED = 61;</code>
     */
    FORM_LIED(61),
    /**
     * <code>FORM_RICERCAR = 62;</code>
     */
    FORM_RICERCAR(62),
    /**
     * <code>FORM_RHYTHM_CHANGES = 63;</code>
     */
    FORM_RHYTHM_CHANGES(63),
    /**
     * <code>FORM_COURANTE = 64;</code>
     */
    FORM_COURANTE(64),
    /**
     * <code>FORM_GALLIARD = 65;</code>
     */
    FORM_GALLIARD(65),
    /**
     * <code>FORM_MELODIE = 66;</code>
     */
    FORM_MELODIE(66),
    /**
     * <code>FORM_LAUDE = 67;</code>
     */
    FORM_LAUDE(67),
    /**
     * <code>FORM_CAN_CAN = 68;</code>
     */
    FORM_CAN_CAN(68),
    /**
     * <code>FORM_NOCTURNE = 69;</code>
     */
    FORM_NOCTURNE(69),
    /**
     * <code>FORM_SCHERZO = 70;</code>
     */
    FORM_SCHERZO(70),
    /**
     * <code>FORM_TOCCATA = 71;</code>
     */
    FORM_TOCCATA(71),
    /**
     * <code>FORM_GIGUE = 72;</code>
     */
    FORM_GIGUE(72),
    /**
     * <code>FORM_INTERLUDE = 73;</code>
     */
    FORM_INTERLUDE(73),
    /**
     * <code>FORM_PRELUDE = 74;</code>
     */
    FORM_PRELUDE(74),
    /**
     * <code>FORM_SARABANDE = 75;</code>
     */
    FORM_SARABANDE(75),
    /**
     * <code>FORM_VOCALISE = 76;</code>
     */
    FORM_VOCALISE(76),
    /**
     * <code>FORM_DANCE = 77;</code>
     */
    FORM_DANCE(77),
    /**
     * <code>FORM_RHAPSODY = 78;</code>
     */
    FORM_RHAPSODY(78),
    /**
     * <code>FORM_FUGUE = 79;</code>
     */
    FORM_FUGUE(79),
    /**
     * <code>FORM_RAG = 80;</code>
     */
    FORM_RAG(80),
    /**
     * <code>FORM_VARIATION = 81;</code>
     */
    FORM_VARIATION(81),
    /**
     * <code>FORM_ART_SONG = 82;</code>
     */
    FORM_ART_SONG(82),
    ;

    /**
     * <code>FORM_SONATINA = 0;</code>
     */
    public static final int FORM_SONATINA_VALUE = 0;
    /**
     * <code>FORM_POWER_BALLAD = 1;</code>
     */
    public static final int FORM_POWER_BALLAD_VALUE = 1;
    /**
     * <code>FORM_CAVATINA = 2;</code>
     */
    public static final int FORM_CAVATINA_VALUE = 2;
    /**
     * <code>FORM_ETUDE = 3;</code>
     */
    public static final int FORM_ETUDE_VALUE = 3;
    /**
     * <code>FORM_PERPETUUM_MOBILE = 4;</code>
     */
    public static final int FORM_PERPETUUM_MOBILE_VALUE = 4;
    /**
     * <code>FORM_SYMPHONIC_POEM = 5;</code>
     */
    public static final int FORM_SYMPHONIC_POEM_VALUE = 5;
    /**
     * <code>FORM_BALLATA = 6;</code>
     */
    public static final int FORM_BALLATA_VALUE = 6;
    /**
     * <code>FORM_BOLERO = 7;</code>
     */
    public static final int FORM_BOLERO_VALUE = 7;
    /**
     * <code>FORM_POLONAISE = 8;</code>
     */
    public static final int FORM_POLONAISE_VALUE = 8;
    /**
     * <code>FORM_PASSACAGLIA = 9;</code>
     */
    public static final int FORM_PASSACAGLIA_VALUE = 9;
    /**
     * <code>FORM_SUITE = 10;</code>
     */
    public static final int FORM_SUITE_VALUE = 10;
    /**
     * <code>FORM_DIVERTIMENTO = 11;</code>
     */
    public static final int FORM_DIVERTIMENTO_VALUE = 11;
    /**
     * <code>FORM_MINUET = 12;</code>
     */
    public static final int FORM_MINUET_VALUE = 12;
    /**
     * <code>FORM_SYMPHONY = 13;</code>
     */
    public static final int FORM_SYMPHONY_VALUE = 13;
    /**
     * <code>FORM_ADAGIO = 14;</code>
     */
    public static final int FORM_ADAGIO_VALUE = 14;
    /**
     * <code>FORM_SINFONIA_CONCERTANTE = 15;</code>
     */
    public static final int FORM_SINFONIA_CONCERTANTE_VALUE = 15;
    /**
     * <code>FORM_MADRIGAL = 16;</code>
     */
    public static final int FORM_MADRIGAL_VALUE = 16;
    /**
     * <code>FORM_CHACONNE = 17;</code>
     */
    public static final int FORM_CHACONNE_VALUE = 17;
    /**
     * <code>FORM_FANFARE = 18;</code>
     */
    public static final int FORM_FANFARE_VALUE = 18;
    /**
     * <code>FORM_OVERTURE = 19;</code>
     */
    public static final int FORM_OVERTURE_VALUE = 19;
    /**
     * <code>FORM_SALTARELLO = 20;</code>
     */
    public static final int FORM_SALTARELLO_VALUE = 20;
    /**
     * <code>FORM_USER_DEFINED = 21;</code>
     */
    public static final int FORM_USER_DEFINED_VALUE = 21;
    /**
     * <code>FORM_TWELVE_BAR_BLUES = 22;</code>
     */
    public static final int FORM_TWELVE_BAR_BLUES_VALUE = 22;
    /**
     * <code>FORM_ESTAMPIE = 23;</code>
     */
    public static final int FORM_ESTAMPIE_VALUE = 23;
    /**
     * <code>FORM_PAVANE = 24;</code>
     */
    public static final int FORM_PAVANE_VALUE = 24;
    /**
     * <code>FORM_CHANSON = 25;</code>
     */
    public static final int FORM_CHANSON_VALUE = 25;
    /**
     * <code>FORM_EIGHT_BAR_BLUES = 26;</code>
     */
    public static final int FORM_EIGHT_BAR_BLUES_VALUE = 26;
    /**
     * <code>FORM_BALLADE = 27;</code>
     */
    public static final int FORM_BALLADE_VALUE = 27;
    /**
     * <code>FORM_SEQUENCE = 28;</code>
     */
    public static final int FORM_SEQUENCE_VALUE = 28;
    /**
     * <code>FORM_BALLAD = 29;</code>
     */
    public static final int FORM_BALLAD_VALUE = 29;
    /**
     * <code>FORM_CAPRICE = 30;</code>
     */
    public static final int FORM_CAPRICE_VALUE = 30;
    /**
     * <code>FORM_MINIMAL = 31;</code>
     */
    public static final int FORM_MINIMAL_VALUE = 31;
    /**
     * <code>FORM_SONATA = 32;</code>
     */
    public static final int FORM_SONATA_VALUE = 32;
    /**
     * <code>FORM_VERSE_ONLY = 33;</code>
     */
    public static final int FORM_VERSE_ONLY_VALUE = 33;
    /**
     * <code>FORM_HYMN = 34;</code>
     */
    public static final int FORM_HYMN_VALUE = 34;
    /**
     * <code>FORM_MASS = 35;</code>
     */
    public static final int FORM_MASS_VALUE = 35;
    /**
     * <code>FORM_CONCERTO = 36;</code>
     */
    public static final int FORM_CONCERTO_VALUE = 36;
    /**
     * <code>FORM_INTERMEZZO = 37;</code>
     */
    public static final int FORM_INTERMEZZO_VALUE = 37;
    /**
     * <code>FORM_MOMENT_FORM = 38;</code>
     */
    public static final int FORM_MOMENT_FORM_VALUE = 38;
    /**
     * <code>FORM_ARIA = 39;</code>
     */
    public static final int FORM_ARIA_VALUE = 39;
    /**
     * <code>FORM_TIENTO = 40;</code>
     */
    public static final int FORM_TIENTO_VALUE = 40;
    /**
     * <code>FORM_FANTASY = 41;</code>
     */
    public static final int FORM_FANTASY_VALUE = 41;
    /**
     * <code>FORM_BARCAROLLE = 42;</code>
     */
    public static final int FORM_BARCAROLLE_VALUE = 42;
    /**
     * <code>FORM_SERENADE = 43;</code>
     */
    public static final int FORM_SERENADE_VALUE = 43;
    /**
     * <code>FORM_WALTZ = 44;</code>
     */
    public static final int FORM_WALTZ_VALUE = 44;
    /**
     * <code>FORM_CANTATA = 45;</code>
     */
    public static final int FORM_CANTATA_VALUE = 45;
    /**
     * <code>FORM_DUMKA = 46;</code>
     */
    public static final int FORM_DUMKA_VALUE = 46;
    /**
     * <code>FORM_MARCH = 47;</code>
     */
    public static final int FORM_MARCH_VALUE = 47;
    /**
     * <code>FORM_BAGATELLE = 48;</code>
     */
    public static final int FORM_BAGATELLE_VALUE = 48;
    /**
     * <code>FORM_RONDO = 49;</code>
     */
    public static final int FORM_RONDO_VALUE = 49;
    /**
     * <code>FORM_CAROL = 50;</code>
     */
    public static final int FORM_CAROL_VALUE = 50;
    /**
     * <code>FORM_IMPROVISATION = 51;</code>
     */
    public static final int FORM_IMPROVISATION_VALUE = 51;
    /**
     * <code>FORM_MAZURKA = 52;</code>
     */
    public static final int FORM_MAZURKA_VALUE = 52;
    /**
     * <code>FORM_TARANTELLA = 53;</code>
     */
    public static final int FORM_TARANTELLA_VALUE = 53;
    /**
     * <code>FORM_RAGA = 54;</code>
     */
    public static final int FORM_RAGA_VALUE = 54;
    /**
     * <code>FORM_ALLEMANDE = 55;</code>
     */
    public static final int FORM_ALLEMANDE_VALUE = 55;
    /**
     * <code>FORM_MOTET = 56;</code>
     */
    public static final int FORM_MOTET_VALUE = 56;
    /**
     * <code>FORM_CANON = 57;</code>
     */
    public static final int FORM_CANON_VALUE = 57;
    /**
     * <code>FORM_FURIANT = 58;</code>
     */
    public static final int FORM_FURIANT_VALUE = 58;
    /**
     * <code>FORM_CANZONA = 59;</code>
     */
    public static final int FORM_CANZONA_VALUE = 59;
    /**
     * <code>FORM_PARTITA = 60;</code>
     */
    public static final int FORM_PARTITA_VALUE = 60;
    /**
     * <code>FORM_LIED = 61;</code>
     */
    public static final int FORM_LIED_VALUE = 61;
    /**
     * <code>FORM_RICERCAR = 62;</code>
     */
    public static final int FORM_RICERCAR_VALUE = 62;
    /**
     * <code>FORM_RHYTHM_CHANGES = 63;</code>
     */
    public static final int FORM_RHYTHM_CHANGES_VALUE = 63;
    /**
     * <code>FORM_COURANTE = 64;</code>
     */
    public static final int FORM_COURANTE_VALUE = 64;
    /**
     * <code>FORM_GALLIARD = 65;</code>
     */
    public static final int FORM_GALLIARD_VALUE = 65;
    /**
     * <code>FORM_MELODIE = 66;</code>
     */
    public static final int FORM_MELODIE_VALUE = 66;
    /**
     * <code>FORM_LAUDE = 67;</code>
     */
    public static final int FORM_LAUDE_VALUE = 67;
    /**
     * <code>FORM_CAN_CAN = 68;</code>
     */
    public static final int FORM_CAN_CAN_VALUE = 68;
    /**
     * <code>FORM_NOCTURNE = 69;</code>
     */
    public static final int FORM_NOCTURNE_VALUE = 69;
    /**
     * <code>FORM_SCHERZO = 70;</code>
     */
    public static final int FORM_SCHERZO_VALUE = 70;
    /**
     * <code>FORM_TOCCATA = 71;</code>
     */
    public static final int FORM_TOCCATA_VALUE = 71;
    /**
     * <code>FORM_GIGUE = 72;</code>
     */
    public static final int FORM_GIGUE_VALUE = 72;
    /**
     * <code>FORM_INTERLUDE = 73;</code>
     */
    public static final int FORM_INTERLUDE_VALUE = 73;
    /**
     * <code>FORM_PRELUDE = 74;</code>
     */
    public static final int FORM_PRELUDE_VALUE = 74;
    /**
     * <code>FORM_SARABANDE = 75;</code>
     */
    public static final int FORM_SARABANDE_VALUE = 75;
    /**
     * <code>FORM_VOCALISE = 76;</code>
     */
    public static final int FORM_VOCALISE_VALUE = 76;
    /**
     * <code>FORM_DANCE = 77;</code>
     */
    public static final int FORM_DANCE_VALUE = 77;
    /**
     * <code>FORM_RHAPSODY = 78;</code>
     */
    public static final int FORM_RHAPSODY_VALUE = 78;
    /**
     * <code>FORM_FUGUE = 79;</code>
     */
    public static final int FORM_FUGUE_VALUE = 79;
    /**
     * <code>FORM_RAG = 80;</code>
     */
    public static final int FORM_RAG_VALUE = 80;
    /**
     * <code>FORM_VARIATION = 81;</code>
     */
    public static final int FORM_VARIATION_VALUE = 81;
    /**
     * <code>FORM_ART_SONG = 82;</code>
     */
    public static final int FORM_ART_SONG_VALUE = 82;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Form valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Form forNumber(int value) {
      switch (value) {
        case 0: return FORM_SONATINA;
        case 1: return FORM_POWER_BALLAD;
        case 2: return FORM_CAVATINA;
        case 3: return FORM_ETUDE;
        case 4: return FORM_PERPETUUM_MOBILE;
        case 5: return FORM_SYMPHONIC_POEM;
        case 6: return FORM_BALLATA;
        case 7: return FORM_BOLERO;
        case 8: return FORM_POLONAISE;
        case 9: return FORM_PASSACAGLIA;
        case 10: return FORM_SUITE;
        case 11: return FORM_DIVERTIMENTO;
        case 12: return FORM_MINUET;
        case 13: return FORM_SYMPHONY;
        case 14: return FORM_ADAGIO;
        case 15: return FORM_SINFONIA_CONCERTANTE;
        case 16: return FORM_MADRIGAL;
        case 17: return FORM_CHACONNE;
        case 18: return FORM_FANFARE;
        case 19: return FORM_OVERTURE;
        case 20: return FORM_SALTARELLO;
        case 21: return FORM_USER_DEFINED;
        case 22: return FORM_TWELVE_BAR_BLUES;
        case 23: return FORM_ESTAMPIE;
        case 24: return FORM_PAVANE;
        case 25: return FORM_CHANSON;
        case 26: return FORM_EIGHT_BAR_BLUES;
        case 27: return FORM_BALLADE;
        case 28: return FORM_SEQUENCE;
        case 29: return FORM_BALLAD;
        case 30: return FORM_CAPRICE;
        case 31: return FORM_MINIMAL;
        case 32: return FORM_SONATA;
        case 33: return FORM_VERSE_ONLY;
        case 34: return FORM_HYMN;
        case 35: return FORM_MASS;
        case 36: return FORM_CONCERTO;
        case 37: return FORM_INTERMEZZO;
        case 38: return FORM_MOMENT_FORM;
        case 39: return FORM_ARIA;
        case 40: return FORM_TIENTO;
        case 41: return FORM_FANTASY;
        case 42: return FORM_BARCAROLLE;
        case 43: return FORM_SERENADE;
        case 44: return FORM_WALTZ;
        case 45: return FORM_CANTATA;
        case 46: return FORM_DUMKA;
        case 47: return FORM_MARCH;
        case 48: return FORM_BAGATELLE;
        case 49: return FORM_RONDO;
        case 50: return FORM_CAROL;
        case 51: return FORM_IMPROVISATION;
        case 52: return FORM_MAZURKA;
        case 53: return FORM_TARANTELLA;
        case 54: return FORM_RAGA;
        case 55: return FORM_ALLEMANDE;
        case 56: return FORM_MOTET;
        case 57: return FORM_CANON;
        case 58: return FORM_FURIANT;
        case 59: return FORM_CANZONA;
        case 60: return FORM_PARTITA;
        case 61: return FORM_LIED;
        case 62: return FORM_RICERCAR;
        case 63: return FORM_RHYTHM_CHANGES;
        case 64: return FORM_COURANTE;
        case 65: return FORM_GALLIARD;
        case 66: return FORM_MELODIE;
        case 67: return FORM_LAUDE;
        case 68: return FORM_CAN_CAN;
        case 69: return FORM_NOCTURNE;
        case 70: return FORM_SCHERZO;
        case 71: return FORM_TOCCATA;
        case 72: return FORM_GIGUE;
        case 73: return FORM_INTERLUDE;
        case 74: return FORM_PRELUDE;
        case 75: return FORM_SARABANDE;
        case 76: return FORM_VOCALISE;
        case 77: return FORM_DANCE;
        case 78: return FORM_RHAPSODY;
        case 79: return FORM_FUGUE;
        case 80: return FORM_RAG;
        case 81: return FORM_VARIATION;
        case 82: return FORM_ART_SONG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Form>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Form> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Form>() {
            public Form findValueByNumber(int number) {
              return Form.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(68);
    }

    private static final Form[] VALUES = values();

    public static Form valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Form(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Form)
  }

  /**
   * Protobuf enum {@code avs.FrameRate}
   */
  public enum FrameRate
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FRAME_RATE_24 = 0;</code>
     */
    FRAME_RATE_24(0),
    /**
     * <code>FRAME_RATE_25 = 1;</code>
     */
    FRAME_RATE_25(1),
    /**
     * <code>FRAME_RATE_30 = 2;</code>
     */
    FRAME_RATE_30(2),
    /**
     * <code>FRAME_RATE_29__DOT__97 = 3;</code>
     */
    FRAME_RATE_29__DOT__97(3),
    ;

    /**
     * <code>FRAME_RATE_24 = 0;</code>
     */
    public static final int FRAME_RATE_24_VALUE = 0;
    /**
     * <code>FRAME_RATE_25 = 1;</code>
     */
    public static final int FRAME_RATE_25_VALUE = 1;
    /**
     * <code>FRAME_RATE_30 = 2;</code>
     */
    public static final int FRAME_RATE_30_VALUE = 2;
    /**
     * <code>FRAME_RATE_29__DOT__97 = 3;</code>
     */
    public static final int FRAME_RATE_29__DOT__97_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FrameRate valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FrameRate forNumber(int value) {
      switch (value) {
        case 0: return FRAME_RATE_24;
        case 1: return FRAME_RATE_25;
        case 2: return FRAME_RATE_30;
        case 3: return FRAME_RATE_29__DOT__97;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FrameRate>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FrameRate> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FrameRate>() {
            public FrameRate findValueByNumber(int number) {
              return FrameRate.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(69);
    }

    private static final FrameRate[] VALUES = values();

    public static FrameRate valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FrameRate(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.FrameRate)
  }

  /**
   * Protobuf enum {@code avs.Gender}
   */
  public enum Gender
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GENDER_ANDROGYNOUS = 0;</code>
     */
    GENDER_ANDROGYNOUS(0),
    /**
     * <code>GENDER_MASCULINE = 1;</code>
     */
    GENDER_MASCULINE(1),
    /**
     * <code>GENDER_UNKNOWN = 2;</code>
     */
    GENDER_UNKNOWN(2),
    /**
     * <code>GENDER_FEMININE = 3;</code>
     */
    GENDER_FEMININE(3),
    ;

    /**
     * <code>GENDER_ANDROGYNOUS = 0;</code>
     */
    public static final int GENDER_ANDROGYNOUS_VALUE = 0;
    /**
     * <code>GENDER_MASCULINE = 1;</code>
     */
    public static final int GENDER_MASCULINE_VALUE = 1;
    /**
     * <code>GENDER_UNKNOWN = 2;</code>
     */
    public static final int GENDER_UNKNOWN_VALUE = 2;
    /**
     * <code>GENDER_FEMININE = 3;</code>
     */
    public static final int GENDER_FEMININE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Gender valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Gender forNumber(int value) {
      switch (value) {
        case 0: return GENDER_ANDROGYNOUS;
        case 1: return GENDER_MASCULINE;
        case 2: return GENDER_UNKNOWN;
        case 3: return GENDER_FEMININE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Gender>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Gender> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Gender>() {
            public Gender findValueByNumber(int number) {
              return Gender.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(70);
    }

    private static final Gender[] VALUES = values();

    public static Gender valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Gender(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Gender)
  }

  /**
   * Protobuf enum {@code avs.GoverningAgreementType}
   */
  public enum GoverningAgreementType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GOVERNING_AGREEMENT_TYPE_USER_DEFINED = 0;</code>
     */
    GOVERNING_AGREEMENT_TYPE_USER_DEFINED(0),
    ;

    /**
     * <code>GOVERNING_AGREEMENT_TYPE_USER_DEFINED = 0;</code>
     */
    public static final int GOVERNING_AGREEMENT_TYPE_USER_DEFINED_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GoverningAgreementType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GoverningAgreementType forNumber(int value) {
      switch (value) {
        case 0: return GOVERNING_AGREEMENT_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GoverningAgreementType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GoverningAgreementType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GoverningAgreementType>() {
            public GoverningAgreementType findValueByNumber(int number) {
              return GoverningAgreementType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(71);
    }

    private static final GoverningAgreementType[] VALUES = values();

    public static GoverningAgreementType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GoverningAgreementType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.GoverningAgreementType)
  }

  /**
   * Protobuf enum {@code avs.HashSumAlgorithmType}
   */
  public enum HashSumAlgorithmType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A2 = 0;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_S_H_A2(0),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A3 = 1;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_S_H_A3(1),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D_C2 = 2;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_M_D_C2(2),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A1 = 3;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_S_H_A1(3),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_C_R_C32 = 4;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_C_R_C32(4),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D4__FRB___M_L_N_E_T__BRB__ = 5;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_M_D4__FRB___M_L_N_E_T__BRB__(5),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__384 = 6;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__384(6),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_R_M_D160 = 7;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_R_M_D160(7),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A = 8;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_S_H_A(8),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__224 = 9;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__224(9),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__256 = 10;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__256(10),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D2 = 11;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_M_D2(11),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D4 = 12;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_M_D4(12),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_USER_DEFINED = 13;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_USER_DEFINED(13),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__512 = 14;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__512(14),
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D5 = 15;</code>
     */
    HASH_SUM_ALGORITHM_TYPE_M_D5(15),
    ;

    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A2 = 0;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_S_H_A2_VALUE = 0;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A3 = 1;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_S_H_A3_VALUE = 1;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D_C2 = 2;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_M_D_C2_VALUE = 2;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A1 = 3;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_S_H_A1_VALUE = 3;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_C_R_C32 = 4;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_C_R_C32_VALUE = 4;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D4__FRB___M_L_N_E_T__BRB__ = 5;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_M_D4__FRB___M_L_N_E_T__BRB___VALUE = 5;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__384 = 6;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__384_VALUE = 6;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_R_M_D160 = 7;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_R_M_D160_VALUE = 7;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A = 8;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_S_H_A_VALUE = 8;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__224 = 9;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__224_VALUE = 9;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__256 = 10;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__256_VALUE = 10;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D2 = 11;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_M_D2_VALUE = 11;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D4 = 12;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_M_D4_VALUE = 12;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_USER_DEFINED = 13;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_USER_DEFINED_VALUE = 13;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__512 = 14;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__512_VALUE = 14;
    /**
     * <code>HASH_SUM_ALGORITHM_TYPE_M_D5 = 15;</code>
     */
    public static final int HASH_SUM_ALGORITHM_TYPE_M_D5_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HashSumAlgorithmType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static HashSumAlgorithmType forNumber(int value) {
      switch (value) {
        case 0: return HASH_SUM_ALGORITHM_TYPE_S_H_A2;
        case 1: return HASH_SUM_ALGORITHM_TYPE_S_H_A3;
        case 2: return HASH_SUM_ALGORITHM_TYPE_M_D_C2;
        case 3: return HASH_SUM_ALGORITHM_TYPE_S_H_A1;
        case 4: return HASH_SUM_ALGORITHM_TYPE_C_R_C32;
        case 5: return HASH_SUM_ALGORITHM_TYPE_M_D4__FRB___M_L_N_E_T__BRB__;
        case 6: return HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__384;
        case 7: return HASH_SUM_ALGORITHM_TYPE_R_M_D160;
        case 8: return HASH_SUM_ALGORITHM_TYPE_S_H_A;
        case 9: return HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__224;
        case 10: return HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__256;
        case 11: return HASH_SUM_ALGORITHM_TYPE_M_D2;
        case 12: return HASH_SUM_ALGORITHM_TYPE_M_D4;
        case 13: return HASH_SUM_ALGORITHM_TYPE_USER_DEFINED;
        case 14: return HASH_SUM_ALGORITHM_TYPE_S_H_A__MINUS__512;
        case 15: return HASH_SUM_ALGORITHM_TYPE_M_D5;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HashSumAlgorithmType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HashSumAlgorithmType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HashSumAlgorithmType>() {
            public HashSumAlgorithmType findValueByNumber(int number) {
              return HashSumAlgorithmType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(72);
    }

    private static final HashSumAlgorithmType[] VALUES = values();

    public static HashSumAlgorithmType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HashSumAlgorithmType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.HashSumAlgorithmType)
  }

  /**
   * Protobuf enum {@code avs.ImageCodecType}
   */
  public enum ImageCodecType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>IMAGE_CODEC_TYPE_J_P_E_G2000 = 0;</code>
     */
    IMAGE_CODEC_TYPE_J_P_E_G2000(0),
    /**
     * <code>IMAGE_CODEC_TYPE_T_I_F_F = 1;</code>
     */
    IMAGE_CODEC_TYPE_T_I_F_F(1),
    /**
     * <code>IMAGE_CODEC_TYPE_UNKNOWN = 2;</code>
     */
    IMAGE_CODEC_TYPE_UNKNOWN(2),
    /**
     * <code>IMAGE_CODEC_TYPE_G_I_F = 3;</code>
     */
    IMAGE_CODEC_TYPE_G_I_F(3),
    /**
     * <code>IMAGE_CODEC_TYPE_P_N_G = 4;</code>
     */
    IMAGE_CODEC_TYPE_P_N_G(4),
    /**
     * <code>IMAGE_CODEC_TYPE_J_P_E_G = 5;</code>
     */
    IMAGE_CODEC_TYPE_J_P_E_G(5),
    /**
     * <code>IMAGE_CODEC_TYPE_USER_DEFINED = 6;</code>
     */
    IMAGE_CODEC_TYPE_USER_DEFINED(6),
    ;

    /**
     * <code>IMAGE_CODEC_TYPE_J_P_E_G2000 = 0;</code>
     */
    public static final int IMAGE_CODEC_TYPE_J_P_E_G2000_VALUE = 0;
    /**
     * <code>IMAGE_CODEC_TYPE_T_I_F_F = 1;</code>
     */
    public static final int IMAGE_CODEC_TYPE_T_I_F_F_VALUE = 1;
    /**
     * <code>IMAGE_CODEC_TYPE_UNKNOWN = 2;</code>
     */
    public static final int IMAGE_CODEC_TYPE_UNKNOWN_VALUE = 2;
    /**
     * <code>IMAGE_CODEC_TYPE_G_I_F = 3;</code>
     */
    public static final int IMAGE_CODEC_TYPE_G_I_F_VALUE = 3;
    /**
     * <code>IMAGE_CODEC_TYPE_P_N_G = 4;</code>
     */
    public static final int IMAGE_CODEC_TYPE_P_N_G_VALUE = 4;
    /**
     * <code>IMAGE_CODEC_TYPE_J_P_E_G = 5;</code>
     */
    public static final int IMAGE_CODEC_TYPE_J_P_E_G_VALUE = 5;
    /**
     * <code>IMAGE_CODEC_TYPE_USER_DEFINED = 6;</code>
     */
    public static final int IMAGE_CODEC_TYPE_USER_DEFINED_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ImageCodecType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ImageCodecType forNumber(int value) {
      switch (value) {
        case 0: return IMAGE_CODEC_TYPE_J_P_E_G2000;
        case 1: return IMAGE_CODEC_TYPE_T_I_F_F;
        case 2: return IMAGE_CODEC_TYPE_UNKNOWN;
        case 3: return IMAGE_CODEC_TYPE_G_I_F;
        case 4: return IMAGE_CODEC_TYPE_P_N_G;
        case 5: return IMAGE_CODEC_TYPE_J_P_E_G;
        case 6: return IMAGE_CODEC_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ImageCodecType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ImageCodecType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ImageCodecType>() {
            public ImageCodecType findValueByNumber(int number) {
              return ImageCodecType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(73);
    }

    private static final ImageCodecType[] VALUES = values();

    public static ImageCodecType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ImageCodecType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ImageCodecType)
  }

  /**
   * Protobuf enum {@code avs.ImageType}
   */
  public enum ImageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>IMAGE_TYPE_FRONT_COVER_IMAGE = 0;</code>
     */
    IMAGE_TYPE_FRONT_COVER_IMAGE(0),
    /**
     * <code>IMAGE_TYPE_BOOKLET_FRONT_IMAGE = 1;</code>
     */
    IMAGE_TYPE_BOOKLET_FRONT_IMAGE(1),
    /**
     * <code>IMAGE_TYPE_DOCUMENT_IMAGE = 2;</code>
     */
    IMAGE_TYPE_DOCUMENT_IMAGE(2),
    /**
     * <code>IMAGE_TYPE_BACK_COVER_IMAGE = 3;</code>
     */
    IMAGE_TYPE_BACK_COVER_IMAGE(3),
    /**
     * <code>IMAGE_TYPE_TRAY_IMAGE = 4;</code>
     */
    IMAGE_TYPE_TRAY_IMAGE(4),
    /**
     * <code>IMAGE_TYPE_BOOKLET_BACK_IMAGE = 5;</code>
     */
    IMAGE_TYPE_BOOKLET_BACK_IMAGE(5),
    /**
     * <code>IMAGE_TYPE_LOGO = 6;</code>
     */
    IMAGE_TYPE_LOGO(6),
    /**
     * <code>IMAGE_TYPE_VIDEO_SCREEN_CAPTURE = 7;</code>
     */
    IMAGE_TYPE_VIDEO_SCREEN_CAPTURE(7),
    /**
     * <code>IMAGE_TYPE_UNKNOWN = 8;</code>
     */
    IMAGE_TYPE_UNKNOWN(8),
    /**
     * <code>IMAGE_TYPE_POSTER = 9;</code>
     */
    IMAGE_TYPE_POSTER(9),
    /**
     * <code>IMAGE_TYPE_WALLPAPER = 10;</code>
     */
    IMAGE_TYPE_WALLPAPER(10),
    /**
     * <code>IMAGE_TYPE_ICON = 11;</code>
     */
    IMAGE_TYPE_ICON(11),
    /**
     * <code>IMAGE_TYPE_PHOTOGRAPH = 12;</code>
     */
    IMAGE_TYPE_PHOTOGRAPH(12),
    /**
     * <code>IMAGE_TYPE_USER_DEFINED = 13;</code>
     */
    IMAGE_TYPE_USER_DEFINED(13),
    ;

    /**
     * <code>IMAGE_TYPE_FRONT_COVER_IMAGE = 0;</code>
     */
    public static final int IMAGE_TYPE_FRONT_COVER_IMAGE_VALUE = 0;
    /**
     * <code>IMAGE_TYPE_BOOKLET_FRONT_IMAGE = 1;</code>
     */
    public static final int IMAGE_TYPE_BOOKLET_FRONT_IMAGE_VALUE = 1;
    /**
     * <code>IMAGE_TYPE_DOCUMENT_IMAGE = 2;</code>
     */
    public static final int IMAGE_TYPE_DOCUMENT_IMAGE_VALUE = 2;
    /**
     * <code>IMAGE_TYPE_BACK_COVER_IMAGE = 3;</code>
     */
    public static final int IMAGE_TYPE_BACK_COVER_IMAGE_VALUE = 3;
    /**
     * <code>IMAGE_TYPE_TRAY_IMAGE = 4;</code>
     */
    public static final int IMAGE_TYPE_TRAY_IMAGE_VALUE = 4;
    /**
     * <code>IMAGE_TYPE_BOOKLET_BACK_IMAGE = 5;</code>
     */
    public static final int IMAGE_TYPE_BOOKLET_BACK_IMAGE_VALUE = 5;
    /**
     * <code>IMAGE_TYPE_LOGO = 6;</code>
     */
    public static final int IMAGE_TYPE_LOGO_VALUE = 6;
    /**
     * <code>IMAGE_TYPE_VIDEO_SCREEN_CAPTURE = 7;</code>
     */
    public static final int IMAGE_TYPE_VIDEO_SCREEN_CAPTURE_VALUE = 7;
    /**
     * <code>IMAGE_TYPE_UNKNOWN = 8;</code>
     */
    public static final int IMAGE_TYPE_UNKNOWN_VALUE = 8;
    /**
     * <code>IMAGE_TYPE_POSTER = 9;</code>
     */
    public static final int IMAGE_TYPE_POSTER_VALUE = 9;
    /**
     * <code>IMAGE_TYPE_WALLPAPER = 10;</code>
     */
    public static final int IMAGE_TYPE_WALLPAPER_VALUE = 10;
    /**
     * <code>IMAGE_TYPE_ICON = 11;</code>
     */
    public static final int IMAGE_TYPE_ICON_VALUE = 11;
    /**
     * <code>IMAGE_TYPE_PHOTOGRAPH = 12;</code>
     */
    public static final int IMAGE_TYPE_PHOTOGRAPH_VALUE = 12;
    /**
     * <code>IMAGE_TYPE_USER_DEFINED = 13;</code>
     */
    public static final int IMAGE_TYPE_USER_DEFINED_VALUE = 13;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ImageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ImageType forNumber(int value) {
      switch (value) {
        case 0: return IMAGE_TYPE_FRONT_COVER_IMAGE;
        case 1: return IMAGE_TYPE_BOOKLET_FRONT_IMAGE;
        case 2: return IMAGE_TYPE_DOCUMENT_IMAGE;
        case 3: return IMAGE_TYPE_BACK_COVER_IMAGE;
        case 4: return IMAGE_TYPE_TRAY_IMAGE;
        case 5: return IMAGE_TYPE_BOOKLET_BACK_IMAGE;
        case 6: return IMAGE_TYPE_LOGO;
        case 7: return IMAGE_TYPE_VIDEO_SCREEN_CAPTURE;
        case 8: return IMAGE_TYPE_UNKNOWN;
        case 9: return IMAGE_TYPE_POSTER;
        case 10: return IMAGE_TYPE_WALLPAPER;
        case 11: return IMAGE_TYPE_ICON;
        case 12: return IMAGE_TYPE_PHOTOGRAPH;
        case 13: return IMAGE_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ImageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ImageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ImageType>() {
            public ImageType findValueByNumber(int number) {
              return ImageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(74);
    }

    private static final ImageType[] VALUES = values();

    public static ImageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ImageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ImageType)
  }

  /**
   * Protobuf enum {@code avs.InstrumentType}
   */
  public enum InstrumentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INSTRUMENT_TYPE_KALIMBA = 0;</code>
     */
    INSTRUMENT_TYPE_KALIMBA(0),
    /**
     * <code>INSTRUMENT_TYPE_KHARTAL = 1;</code>
     */
    INSTRUMENT_TYPE_KHARTAL(1),
    /**
     * <code>INSTRUMENT_TYPE_XYLORIMBA = 2;</code>
     */
    INSTRUMENT_TYPE_XYLORIMBA(2),
    /**
     * <code>INSTRUMENT_TYPE_TIN_WHISTLE = 3;</code>
     */
    INSTRUMENT_TYPE_TIN_WHISTLE(3),
    /**
     * <code>INSTRUMENT_TYPE_DRUM_SAMPLE = 4;</code>
     */
    INSTRUMENT_TYPE_DRUM_SAMPLE(4),
    /**
     * <code>INSTRUMENT_TYPE_MIXED_VOICE = 5;</code>
     */
    INSTRUMENT_TYPE_MIXED_VOICE(5),
    /**
     * <code>INSTRUMENT_TYPE_CAIXA = 6;</code>
     */
    INSTRUMENT_TYPE_CAIXA(6),
    /**
     * <code>INSTRUMENT_TYPE_MANDOLINO = 7;</code>
     */
    INSTRUMENT_TYPE_MANDOLINO(7),
    /**
     * <code>INSTRUMENT_TYPE_CHROMATIC_HARMONICA = 8;</code>
     */
    INSTRUMENT_TYPE_CHROMATIC_HARMONICA(8),
    /**
     * <code>INSTRUMENT_TYPE_CHAMBERLIN = 9;</code>
     */
    INSTRUMENT_TYPE_CHAMBERLIN(9),
    /**
     * <code>INSTRUMENT_TYPE_JARANA_JAROCHA = 10;</code>
     */
    INSTRUMENT_TYPE_JARANA_JAROCHA(10),
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_STRINGS = 11;</code>
     */
    INSTRUMENT_TYPE_SYNTH_STRINGS(11),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_OBOE = 12;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_OBOE(12),
    /**
     * <code>INSTRUMENT_TYPE_DOUMBEK = 13;</code>
     */
    INSTRUMENT_TYPE_DOUMBEK(13),
    /**
     * <code>INSTRUMENT_TYPE_RNGA = 14;</code>
     */
    INSTRUMENT_TYPE_RNGA(14),
    /**
     * <code>INSTRUMENT_TYPE_AGOGO_BELLS = 15;</code>
     */
    INSTRUMENT_TYPE_AGOGO_BELLS(15),
    /**
     * <code>INSTRUMENT_TYPE_NYCKELHARPA = 16;</code>
     */
    INSTRUMENT_TYPE_NYCKELHARPA(16),
    /**
     * <code>INSTRUMENT_TYPE_BANJO_GUITAR = 17;</code>
     */
    INSTRUMENT_TYPE_BANJO_GUITAR(17),
    /**
     * <code>INSTRUMENT_TYPE_CONCERTINA = 18;</code>
     */
    INSTRUMENT_TYPE_CONCERTINA(18),
    /**
     * <code>INSTRUMENT_TYPE_BOTTLES = 19;</code>
     */
    INSTRUMENT_TYPE_BOTTLES(19),
    /**
     * <code>INSTRUMENT_TYPE_UKULELE = 20;</code>
     */
    INSTRUMENT_TYPE_UKULELE(20),
    /**
     * <code>INSTRUMENT_TYPE_CITTERN = 21;</code>
     */
    INSTRUMENT_TYPE_CITTERN(21),
    /**
     * <code>INSTRUMENT_TYPE_BASS_TUBA = 22;</code>
     */
    INSTRUMENT_TYPE_BASS_TUBA(22),
    /**
     * <code>INSTRUMENT_TYPE_JAM_BLOCK = 23;</code>
     */
    INSTRUMENT_TYPE_JAM_BLOCK(23),
    /**
     * <code>INSTRUMENT_TYPE_SARRUSOPHONE = 24;</code>
     */
    INSTRUMENT_TYPE_SARRUSOPHONE(24),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_FLUTE = 25;</code>
     */
    INSTRUMENT_TYPE_TENOR_FLUTE(25),
    /**
     * <code>INSTRUMENT_TYPE_MARXOPHONE = 26;</code>
     */
    INSTRUMENT_TYPE_MARXOPHONE(26),
    /**
     * <code>INSTRUMENT_TYPE_ALBOKA = 27;</code>
     */
    INSTRUMENT_TYPE_ALBOKA(27),
    /**
     * <code>INSTRUMENT_TYPE_MOUTH_PERCUSSION = 28;</code>
     */
    INSTRUMENT_TYPE_MOUTH_PERCUSSION(28),
    /**
     * <code>INSTRUMENT_TYPE_SAROD = 29;</code>
     */
    INSTRUMENT_TYPE_SAROD(29),
    /**
     * <code>INSTRUMENT_TYPE_JAWHARP = 30;</code>
     */
    INSTRUMENT_TYPE_JAWHARP(30),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_SACKBUT = 31;</code>
     */
    INSTRUMENT_TYPE_ALTO_SACKBUT(31),
    /**
     * <code>INSTRUMENT_TYPE_CHROMATIC_BUTTON_ACCORDION = 32;</code>
     */
    INSTRUMENT_TYPE_CHROMATIC_BUTTON_ACCORDION(32),
    /**
     * <code>INSTRUMENT_TYPE_PITCHED_PERCUSSION_INSTRUMENT = 33;</code>
     */
    INSTRUMENT_TYPE_PITCHED_PERCUSSION_INSTRUMENT(33),
    /**
     * <code>INSTRUMENT_TYPE_FINGER_SNAPS = 34;</code>
     */
    INSTRUMENT_TYPE_FINGER_SNAPS(34),
    /**
     * <code>INSTRUMENT_TYPE_PIANO_HARP = 35;</code>
     */
    INSTRUMENT_TYPE_PIANO_HARP(35),
    /**
     * <code>INSTRUMENT_TYPE_PAIXIAO = 36;</code>
     */
    INSTRUMENT_TYPE_PAIXIAO(36),
    /**
     * <code>INSTRUMENT_TYPE_HIGHLAND_PIPES = 37;</code>
     */
    INSTRUMENT_TYPE_HIGHLAND_PIPES(37),
    /**
     * <code>INSTRUMENT_TYPE_FIDDLE = 38;</code>
     */
    INSTRUMENT_TYPE_FIDDLE(38),
    /**
     * <code>INSTRUMENT_TYPE_KHOL = 39;</code>
     */
    INSTRUMENT_TYPE_KHOL(39),
    /**
     * <code>INSTRUMENT_TYPE_WOOD_FLUTE = 40;</code>
     */
    INSTRUMENT_TYPE_WOOD_FLUTE(40),
    /**
     * <code>INSTRUMENT_TYPE_DAVUL = 41;</code>
     */
    INSTRUMENT_TYPE_DAVUL(41),
    /**
     * <code>INSTRUMENT_TYPE_VIOLA_POMPOSA = 42;</code>
     */
    INSTRUMENT_TYPE_VIOLA_POMPOSA(42),
    /**
     * <code>INSTRUMENT_TYPE_ACOUSTIC_KEYBOARD = 43;</code>
     */
    INSTRUMENT_TYPE_ACOUSTIC_KEYBOARD(43),
    /**
     * <code>INSTRUMENT_TYPE_JAGDHORN = 44;</code>
     */
    INSTRUMENT_TYPE_JAGDHORN(44),
    /**
     * <code>INSTRUMENT_TYPE_WIND_SECTION = 45;</code>
     */
    INSTRUMENT_TYPE_WIND_SECTION(45),
    /**
     * <code>INSTRUMENT_TYPE_UPRIGHT_BASS = 46;</code>
     */
    INSTRUMENT_TYPE_UPRIGHT_BASS(46),
    /**
     * <code>INSTRUMENT_TYPE_SHEKERE = 47;</code>
     */
    INSTRUMENT_TYPE_SHEKERE(47),
    /**
     * <code>INSTRUMENT_TYPE_HAMMERED_DULCIMER = 48;</code>
     */
    INSTRUMENT_TYPE_HAMMERED_DULCIMER(48),
    /**
     * <code>INSTRUMENT_TYPE_BASSOON = 49;</code>
     */
    INSTRUMENT_TYPE_BASSOON(49),
    /**
     * <code>INSTRUMENT_TYPE_BANDONEON = 50;</code>
     */
    INSTRUMENT_TYPE_BANDONEON(50),
    /**
     * <code>INSTRUMENT_TYPE_DOHOL = 51;</code>
     */
    INSTRUMENT_TYPE_DOHOL(51),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_TROMBONE = 52;</code>
     */
    INSTRUMENT_TYPE_ALTO_TROMBONE(52),
    /**
     * <code>INSTRUMENT_TYPE_SOUND_DESIGN = 53;</code>
     */
    INSTRUMENT_TYPE_SOUND_DESIGN(53),
    /**
     * <code>INSTRUMENT_TYPE_RAUSCHPFEIFE = 54;</code>
     */
    INSTRUMENT_TYPE_RAUSCHPFEIFE(54),
    /**
     * <code>INSTRUMENT_TYPE_FOLKLORIC_PERCUSSION = 55;</code>
     */
    INSTRUMENT_TYPE_FOLKLORIC_PERCUSSION(55),
    /**
     * <code>INSTRUMENT_TYPE_MALE_VOICE = 56;</code>
     */
    INSTRUMENT_TYPE_MALE_VOICE(56),
    /**
     * <code>INSTRUMENT_TYPE_DULCITONE = 57;</code>
     */
    INSTRUMENT_TYPE_DULCITONE(57),
    /**
     * <code>INSTRUMENT_TYPE_RECO_RECO = 58;</code>
     */
    INSTRUMENT_TYPE_RECO_RECO(58),
    /**
     * <code>INSTRUMENT_TYPE_CAVAQUINHO = 59;</code>
     */
    INSTRUMENT_TYPE_CAVAQUINHO(59),
    /**
     * <code>INSTRUMENT_TYPE_PREPARED_PIANO = 60;</code>
     */
    INSTRUMENT_TYPE_PREPARED_PIANO(60),
    /**
     * <code>INSTRUMENT_TYPE_JUG = 61;</code>
     */
    INSTRUMENT_TYPE_JUG(61),
    /**
     * <code>INSTRUMENT_TYPE_DUDUK = 62;</code>
     */
    INSTRUMENT_TYPE_DUDUK(62),
    /**
     * <code>INSTRUMENT_TYPE_CHILDRENS_BACKGROUND_VOCALIST = 63;</code>
     */
    INSTRUMENT_TYPE_CHILDRENS_BACKGROUND_VOCALIST(63),
    /**
     * <code>INSTRUMENT_TYPE_REBAB = 64;</code>
     */
    INSTRUMENT_TYPE_REBAB(64),
    /**
     * <code>INSTRUMENT_TYPE_HAEGEUM = 65;</code>
     */
    INSTRUMENT_TYPE_HAEGEUM(65),
    /**
     * <code>INSTRUMENT_TYPE_STROHL_VIOLIN = 66;</code>
     */
    INSTRUMENT_TYPE_STROHL_VIOLIN(66),
    /**
     * <code>INSTRUMENT_TYPE_EUPHONIUM = 67;</code>
     */
    INSTRUMENT_TYPE_EUPHONIUM(67),
    /**
     * <code>INSTRUMENT_TYPE_STRING_INSTRUMENT = 68;</code>
     */
    INSTRUMENT_TYPE_STRING_INSTRUMENT(68),
    /**
     * <code>INSTRUMENT_TYPE_SUONA = 69;</code>
     */
    INSTRUMENT_TYPE_SUONA(69),
    /**
     * <code>INSTRUMENT_TYPE_GEMSHORN = 70;</code>
     */
    INSTRUMENT_TYPE_GEMSHORN(70),
    /**
     * <code>INSTRUMENT_TYPE_NADASWARAM = 71;</code>
     */
    INSTRUMENT_TYPE_NADASWARAM(71),
    /**
     * <code>INSTRUMENT_TYPE_TACK_PIANO = 72;</code>
     */
    INSTRUMENT_TYPE_TACK_PIANO(72),
    /**
     * <code>INSTRUMENT_TYPE_HOT_FOUNTAIN_PEN = 73;</code>
     */
    INSTRUMENT_TYPE_HOT_FOUNTAIN_PEN(73),
    /**
     * <code>INSTRUMENT_TYPE_HAND_BELLS = 74;</code>
     */
    INSTRUMENT_TYPE_HAND_BELLS(74),
    /**
     * <code>INSTRUMENT_TYPE_BASSO_DA_BRACCIO = 75;</code>
     */
    INSTRUMENT_TYPE_BASSO_DA_BRACCIO(75),
    /**
     * <code>INSTRUMENT_TYPE_TURNTABLE = 76;</code>
     */
    INSTRUMENT_TYPE_TURNTABLE(76),
    /**
     * <code>INSTRUMENT_TYPE_CELESTA = 77;</code>
     */
    INSTRUMENT_TYPE_CELESTA(77),
    /**
     * <code>INSTRUMENT_TYPE_LIRONE = 78;</code>
     */
    INSTRUMENT_TYPE_LIRONE(78),
    /**
     * <code>INSTRUMENT_TYPE_JEWS_HARP = 79;</code>
     */
    INSTRUMENT_TYPE_JEWS_HARP(79),
    /**
     * <code>INSTRUMENT_TYPE_WOT = 80;</code>
     */
    INSTRUMENT_TYPE_WOT(80),
    /**
     * <code>INSTRUMENT_TYPE_OMNICHORD = 81;</code>
     */
    INSTRUMENT_TYPE_OMNICHORD(81),
    /**
     * <code>INSTRUMENT_TYPE_CALLIOPE = 82;</code>
     */
    INSTRUMENT_TYPE_CALLIOPE(82),
    /**
     * <code>INSTRUMENT_TYPE_CASTANET = 83;</code>
     */
    INSTRUMENT_TYPE_CASTANET(83),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_CLARINET = 84;</code>
     */
    INSTRUMENT_TYPE_ALTO_CLARINET(84),
    /**
     * <code>INSTRUMENT_TYPE_UILLEAN_PIPES = 85;</code>
     */
    INSTRUMENT_TYPE_UILLEAN_PIPES(85),
    /**
     * <code>INSTRUMENT_TYPE_LYRE = 86;</code>
     */
    INSTRUMENT_TYPE_LYRE(86),
    /**
     * <code>INSTRUMENT_TYPE_SLIDE_TRUMPET = 87;</code>
     */
    INSTRUMENT_TYPE_SLIDE_TRUMPET(87),
    /**
     * <code>INSTRUMENT_TYPE_SPRING_DRUM = 88;</code>
     */
    INSTRUMENT_TYPE_SPRING_DRUM(88),
    /**
     * <code>INSTRUMENT_TYPE_GUIRO = 89;</code>
     */
    INSTRUMENT_TYPE_GUIRO(89),
    /**
     * <code>INSTRUMENT_TYPE_COWBELL = 90;</code>
     */
    INSTRUMENT_TYPE_COWBELL(90),
    /**
     * <code>INSTRUMENT_TYPE_FOLK_HARP = 91;</code>
     */
    INSTRUMENT_TYPE_FOLK_HARP(91),
    /**
     * <code>INSTRUMENT_TYPE_BOMBO_LEGUERO = 92;</code>
     */
    INSTRUMENT_TYPE_BOMBO_LEGUERO(92),
    /**
     * <code>INSTRUMENT_TYPE_BASS_SAXOPHONE = 93;</code>
     */
    INSTRUMENT_TYPE_BASS_SAXOPHONE(93),
    /**
     * <code>INSTRUMENT_TYPE_RATCHET = 94;</code>
     */
    INSTRUMENT_TYPE_RATCHET(94),
    /**
     * <code>INSTRUMENT_TYPE_ESRAJ = 95;</code>
     */
    INSTRUMENT_TYPE_ESRAJ(95),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_FLUTE = 96;</code>
     */
    INSTRUMENT_TYPE_ALTO_FLUTE(96),
    /**
     * <code>INSTRUMENT_TYPE_KEMENCHE = 97;</code>
     */
    INSTRUMENT_TYPE_KEMENCHE(97),
    /**
     * <code>INSTRUMENT_TYPE_FRETLESS_BASS_GUITAR = 98;</code>
     */
    INSTRUMENT_TYPE_FRETLESS_BASS_GUITAR(98),
    /**
     * <code>INSTRUMENT_TYPE_GUIRA = 99;</code>
     */
    INSTRUMENT_TYPE_GUIRA(99),
    /**
     * <code>INSTRUMENT_TYPE_BARITONE_HORN = 100;</code>
     */
    INSTRUMENT_TYPE_BARITONE_HORN(100),
    /**
     * <code>INSTRUMENT_TYPE_BASSET_CLARINET = 101;</code>
     */
    INSTRUMENT_TYPE_BASSET_CLARINET(101),
    /**
     * <code>INSTRUMENT_TYPE_VALVE_TROMBONE = 102;</code>
     */
    INSTRUMENT_TYPE_VALVE_TROMBONE(102),
    /**
     * <code>INSTRUMENT_TYPE_SAXOPHONE = 103;</code>
     */
    INSTRUMENT_TYPE_SAXOPHONE(103),
    /**
     * <code>INSTRUMENT_TYPE_SHO = 104;</code>
     */
    INSTRUMENT_TYPE_SHO(104),
    /**
     * <code>INSTRUMENT_TYPE_DHOLAK = 105;</code>
     */
    INSTRUMENT_TYPE_DHOLAK(105),
    /**
     * <code>INSTRUMENT_TYPE_MRIDANGAM = 106;</code>
     */
    INSTRUMENT_TYPE_MRIDANGAM(106),
    /**
     * <code>INSTRUMENT_TYPE_REED_INSTRUMENT = 107;</code>
     */
    INSTRUMENT_TYPE_REED_INSTRUMENT(107),
    /**
     * <code>INSTRUMENT_TYPE_SHAWM = 108;</code>
     */
    INSTRUMENT_TYPE_SHAWM(108),
    /**
     * <code>INSTRUMENT_TYPE_CROTALES = 109;</code>
     */
    INSTRUMENT_TYPE_CROTALES(109),
    /**
     * <code>INSTRUMENT_TYPE_HAMMERED_STRINGS = 110;</code>
     */
    INSTRUMENT_TYPE_HAMMERED_STRINGS(110),
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_CLARINET = 111;</code>
     */
    INSTRUMENT_TYPE_CONTRABASS_CLARINET(111),
    /**
     * <code>INSTRUMENT_TYPE_BASS_BANJO = 112;</code>
     */
    INSTRUMENT_TYPE_BASS_BANJO(112),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_CRUMHORN = 113;</code>
     */
    INSTRUMENT_TYPE_ALTO_CRUMHORN(113),
    /**
     * <code>INSTRUMENT_TYPE_TAROGATO = 114;</code>
     */
    INSTRUMENT_TYPE_TAROGATO(114),
    /**
     * <code>INSTRUMENT_TYPE_GASBA = 115;</code>
     */
    INSTRUMENT_TYPE_GASBA(115),
    /**
     * <code>INSTRUMENT_TYPE_RHYTHM_STICK = 116;</code>
     */
    INSTRUMENT_TYPE_RHYTHM_STICK(116),
    /**
     * <code>INSTRUMENT_TYPE_OBOROM_DRUM = 117;</code>
     */
    INSTRUMENT_TYPE_OBOROM_DRUM(117),
    /**
     * <code>INSTRUMENT_TYPE_APPLAUSE = 118;</code>
     */
    INSTRUMENT_TYPE_APPLAUSE(118),
    /**
     * <code>INSTRUMENT_TYPE_QUENA = 119;</code>
     */
    INSTRUMENT_TYPE_QUENA(119),
    /**
     * <code>INSTRUMENT_TYPE_BRAZILIAN_PERCUSSION = 120;</code>
     */
    INSTRUMENT_TYPE_BRAZILIAN_PERCUSSION(120),
    /**
     * <code>INSTRUMENT_TYPE_ALPENHORN = 121;</code>
     */
    INSTRUMENT_TYPE_ALPENHORN(121),
    /**
     * <code>INSTRUMENT_TYPE_ROTOTOMS = 122;</code>
     */
    INSTRUMENT_TYPE_ROTOTOMS(122),
    /**
     * <code>INSTRUMENT_TYPE_KATSA = 123;</code>
     */
    INSTRUMENT_TYPE_KATSA(123),
    /**
     * <code>INSTRUMENT_TYPE_CAXIXI = 124;</code>
     */
    INSTRUMENT_TYPE_CAXIXI(124),
    /**
     * <code>INSTRUMENT_TYPE_RANAT = 125;</code>
     */
    INSTRUMENT_TYPE_RANAT(125),
    /**
     * <code>INSTRUMENT_TYPE_FIFE = 126;</code>
     */
    INSTRUMENT_TYPE_FIFE(126),
    /**
     * <code>INSTRUMENT_TYPE_OPHICLEIDE = 127;</code>
     */
    INSTRUMENT_TYPE_OPHICLEIDE(127),
    /**
     * <code>INSTRUMENT_TYPE_VIOLA_CAIPIRA = 128;</code>
     */
    INSTRUMENT_TYPE_VIOLA_CAIPIRA(128),
    /**
     * <code>INSTRUMENT_TYPE_FINGER_CYMBALS = 129;</code>
     */
    INSTRUMENT_TYPE_FINGER_CYMBALS(129),
    /**
     * <code>INSTRUMENT_TYPE_HAND_CLAPS = 130;</code>
     */
    INSTRUMENT_TYPE_HAND_CLAPS(130),
    /**
     * <code>INSTRUMENT_TYPE_GUZHENG = 131;</code>
     */
    INSTRUMENT_TYPE_GUZHENG(131),
    /**
     * <code>INSTRUMENT_TYPE_VALIHA = 132;</code>
     */
    INSTRUMENT_TYPE_VALIHA(132),
    /**
     * <code>INSTRUMENT_TYPE_DIPLE = 133;</code>
     */
    INSTRUMENT_TYPE_DIPLE(133),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_TROMBONE = 134;</code>
     */
    INSTRUMENT_TYPE_TENOR_TROMBONE(134),
    /**
     * <code>INSTRUMENT_TYPE_KACAPI = 135;</code>
     */
    INSTRUMENT_TYPE_KACAPI(135),
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_RECORDER = 136;</code>
     */
    INSTRUMENT_TYPE_CONTRABASS_RECORDER(136),
    /**
     * <code>INSTRUMENT_TYPE_GADULKA = 137;</code>
     */
    INSTRUMENT_TYPE_GADULKA(137),
    /**
     * <code>INSTRUMENT_TYPE_OCTOBAN = 138;</code>
     */
    INSTRUMENT_TYPE_OCTOBAN(138),
    /**
     * <code>INSTRUMENT_TYPE_CHOIR = 139;</code>
     */
    INSTRUMENT_TYPE_CHOIR(139),
    /**
     * <code>INSTRUMENT_TYPE_TABOR = 140;</code>
     */
    INSTRUMENT_TYPE_TABOR(140),
    /**
     * <code>INSTRUMENT_TYPE_DILRUBA = 141;</code>
     */
    INSTRUMENT_TYPE_DILRUBA(141),
    /**
     * <code>INSTRUMENT_TYPE_HUAPANGUERA = 142;</code>
     */
    INSTRUMENT_TYPE_HUAPANGUERA(142),
    /**
     * <code>INSTRUMENT_TYPE_HELICON = 143;</code>
     */
    INSTRUMENT_TYPE_HELICON(143),
    /**
     * <code>INSTRUMENT_TYPE_CLAPSTICK = 144;</code>
     */
    INSTRUMENT_TYPE_CLAPSTICK(144),
    /**
     * <code>INSTRUMENT_TYPE_VAKO_ORCHESTRON = 145;</code>
     */
    INSTRUMENT_TYPE_VAKO_ORCHESTRON(145),
    /**
     * <code>INSTRUMENT_TYPE_GROUP_BACKGROUND_VOCALISTS = 146;</code>
     */
    INSTRUMENT_TYPE_GROUP_BACKGROUND_VOCALISTS(146),
    /**
     * <code>INSTRUMENT_TYPE_CIMBASSO = 147;</code>
     */
    INSTRUMENT_TYPE_CIMBASSO(147),
    /**
     * <code>INSTRUMENT_TYPE_GONG = 148;</code>
     */
    INSTRUMENT_TYPE_GONG(148),
    /**
     * <code>INSTRUMENT_TYPE_ELEPHANT_BELL = 149;</code>
     */
    INSTRUMENT_TYPE_ELEPHANT_BELL(149),
    /**
     * <code>INSTRUMENT_TYPE_SINGING_BOWLS = 150;</code>
     */
    INSTRUMENT_TYPE_SINGING_BOWLS(150),
    /**
     * <code>INSTRUMENT_TYPE_TXALAPARTA = 151;</code>
     */
    INSTRUMENT_TYPE_TXALAPARTA(151),
    /**
     * <code>INSTRUMENT_TYPE_PLUCKED_DULCIMER = 152;</code>
     */
    INSTRUMENT_TYPE_PLUCKED_DULCIMER(152),
    /**
     * <code>INSTRUMENT_TYPE_TAR__FRB___STRING__BRB__ = 153;</code>
     */
    INSTRUMENT_TYPE_TAR__FRB___STRING__BRB__(153),
    /**
     * <code>INSTRUMENT_TYPE_SNARE_DRUM__FRB___MARCHING__BRB__ = 154;</code>
     */
    INSTRUMENT_TYPE_SNARE_DRUM__FRB___MARCHING__BRB__(154),
    /**
     * <code>INSTRUMENT_TYPE_GAMBANG = 155;</code>
     */
    INSTRUMENT_TYPE_GAMBANG(155),
    /**
     * <code>INSTRUMENT_TYPE_LEAD_VOCALIST = 156;</code>
     */
    INSTRUMENT_TYPE_LEAD_VOCALIST(156),
    /**
     * <code>INSTRUMENT_TYPE_RECORDER = 157;</code>
     */
    INSTRUMENT_TYPE_RECORDER(157),
    /**
     * <code>INSTRUMENT_TYPE_MANDOCELLO = 158;</code>
     */
    INSTRUMENT_TYPE_MANDOCELLO(158),
    /**
     * <code>INSTRUMENT_TYPE_XALAM = 159;</code>
     */
    INSTRUMENT_TYPE_XALAM(159),
    /**
     * <code>INSTRUMENT_TYPE_BUFO_BASS = 160;</code>
     */
    INSTRUMENT_TYPE_BUFO_BASS(160),
    /**
     * <code>INSTRUMENT_TYPE_DOUBLE_VIOLIN = 161;</code>
     */
    INSTRUMENT_TYPE_DOUBLE_VIOLIN(161),
    /**
     * <code>INSTRUMENT_TYPE_TREBLE_VIOL = 162;</code>
     */
    INSTRUMENT_TYPE_TREBLE_VIOL(162),
    /**
     * <code>INSTRUMENT_TYPE_TAROL = 163;</code>
     */
    INSTRUMENT_TYPE_TAROL(163),
    /**
     * <code>INSTRUMENT_TYPE_ARPEGGIATING_SYNTH = 164;</code>
     */
    INSTRUMENT_TYPE_ARPEGGIATING_SYNTH(164),
    /**
     * <code>INSTRUMENT_TYPE_XUN = 165;</code>
     */
    INSTRUMENT_TYPE_XUN(165),
    /**
     * <code>INSTRUMENT_TYPE_GUACHARACA = 166;</code>
     */
    INSTRUMENT_TYPE_GUACHARACA(166),
    /**
     * <code>INSTRUMENT_TYPE_REPINIQUE = 167;</code>
     */
    INSTRUMENT_TYPE_REPINIQUE(167),
    /**
     * <code>INSTRUMENT_TYPE_CELLO = 168;</code>
     */
    INSTRUMENT_TYPE_CELLO(168),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANINO_RECORDER = 169;</code>
     */
    INSTRUMENT_TYPE_SOPRANINO_RECORDER(169),
    /**
     * <code>INSTRUMENT_TYPE_BAGPIPES = 170;</code>
     */
    INSTRUMENT_TYPE_BAGPIPES(170),
    /**
     * <code>INSTRUMENT_TYPE_BARITONE_SAXOPHONE = 171;</code>
     */
    INSTRUMENT_TYPE_BARITONE_SAXOPHONE(171),
    /**
     * <code>INSTRUMENT_TYPE_SHRUTI_BOX = 172;</code>
     */
    INSTRUMENT_TYPE_SHRUTI_BOX(172),
    /**
     * <code>INSTRUMENT_TYPE_PIANOLA = 173;</code>
     */
    INSTRUMENT_TYPE_PIANOLA(173),
    /**
     * <code>INSTRUMENT_TYPE_NAI = 174;</code>
     */
    INSTRUMENT_TYPE_NAI(174),
    /**
     * <code>INSTRUMENT_TYPE_EKTARA = 175;</code>
     */
    INSTRUMENT_TYPE_EKTARA(175),
    /**
     * <code>INSTRUMENT_TYPE_RIQ = 176;</code>
     */
    INSTRUMENT_TYPE_RIQ(176),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_CRUMHORN = 177;</code>
     */
    INSTRUMENT_TYPE_TENOR_CRUMHORN(177),
    /**
     * <code>INSTRUMENT_TYPE_ORPHARION = 178;</code>
     */
    INSTRUMENT_TYPE_ORPHARION(178),
    /**
     * <code>INSTRUMENT_TYPE_ZUMMARA = 179;</code>
     */
    INSTRUMENT_TYPE_ZUMMARA(179),
    /**
     * <code>INSTRUMENT_TYPE_FUJARA = 180;</code>
     */
    INSTRUMENT_TYPE_FUJARA(180),
    /**
     * <code>INSTRUMENT_TYPE_BIRD_WHISTLE = 181;</code>
     */
    INSTRUMENT_TYPE_BIRD_WHISTLE(181),
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_CHOIR = 182;</code>
     */
    INSTRUMENT_TYPE_SYNTH_CHOIR(182),
    /**
     * <code>INSTRUMENT_TYPE_DEFI = 183;</code>
     */
    INSTRUMENT_TYPE_DEFI(183),
    /**
     * <code>INSTRUMENT_TYPE_VIELLE = 184;</code>
     */
    INSTRUMENT_TYPE_VIELLE(184),
    /**
     * <code>INSTRUMENT_TYPE_PHONOFIDDLE = 185;</code>
     */
    INSTRUMENT_TYPE_PHONOFIDDLE(185),
    /**
     * <code>INSTRUMENT_TYPE_WIND_CHIMES = 186;</code>
     */
    INSTRUMENT_TYPE_WIND_CHIMES(186),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC6_STRING_VIOLIN = 187;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC6_STRING_VIOLIN(187),
    /**
     * <code>INSTRUMENT_TYPE_SARANGI = 188;</code>
     */
    INSTRUMENT_TYPE_SARANGI(188),
    /**
     * <code>INSTRUMENT_TYPE_SHENAI = 189;</code>
     */
    INSTRUMENT_TYPE_SHENAI(189),
    /**
     * <code>INSTRUMENT_TYPE_EPINETTE_DES_VOSGES = 190;</code>
     */
    INSTRUMENT_TYPE_EPINETTE_DES_VOSGES(190),
    /**
     * <code>INSTRUMENT_TYPE_BASS_DULCIAN = 191;</code>
     */
    INSTRUMENT_TYPE_BASS_DULCIAN(191),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_GUITAR = 192;</code>
     */
    INSTRUMENT_TYPE_TENOR_GUITAR(192),
    /**
     * <code>INSTRUMENT_TYPE_BUGLE = 193;</code>
     */
    INSTRUMENT_TYPE_BUGLE(193),
    /**
     * <code>INSTRUMENT_TYPE_PUNGI = 194;</code>
     */
    INSTRUMENT_TYPE_PUNGI(194),
    /**
     * <code>INSTRUMENT_TYPE_PHIN = 195;</code>
     */
    INSTRUMENT_TYPE_PHIN(195),
    /**
     * <code>INSTRUMENT_TYPE_NAAL = 196;</code>
     */
    INSTRUMENT_TYPE_NAAL(196),
    /**
     * <code>INSTRUMENT_TYPE_YANGQIN = 197;</code>
     */
    INSTRUMENT_TYPE_YANGQIN(197),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_SACKBUT = 198;</code>
     */
    INSTRUMENT_TYPE_TENOR_SACKBUT(198),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_CLARINET = 199;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_CLARINET(199),
    /**
     * <code>INSTRUMENT_TYPE_OCARINA = 200;</code>
     */
    INSTRUMENT_TYPE_OCARINA(200),
    /**
     * <code>INSTRUMENT_TYPE_SAMPLED_KEYBOARD = 201;</code>
     */
    INSTRUMENT_TYPE_SAMPLED_KEYBOARD(201),
    /**
     * <code>INSTRUMENT_TYPE_CLARINO_TRUMPET = 202;</code>
     */
    INSTRUMENT_TYPE_CLARINO_TRUMPET(202),
    /**
     * <code>INSTRUMENT_TYPE_KENDANG = 203;</code>
     */
    INSTRUMENT_TYPE_KENDANG(203),
    /**
     * <code>INSTRUMENT_TYPE_DOMRA = 204;</code>
     */
    INSTRUMENT_TYPE_DOMRA(204),
    /**
     * <code>INSTRUMENT_TYPE_SAW_DUANG = 205;</code>
     */
    INSTRUMENT_TYPE_SAW_DUANG(205),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_RECORDER = 206;</code>
     */
    INSTRUMENT_TYPE_ALTO_RECORDER(206),
    /**
     * <code>INSTRUMENT_TYPE_CRUMHORN = 207;</code>
     */
    INSTRUMENT_TYPE_CRUMHORN(207),
    /**
     * <code>INSTRUMENT_TYPE_TAIKO = 208;</code>
     */
    INSTRUMENT_TYPE_TAIKO(208),
    /**
     * <code>INSTRUMENT_TYPE_BASS_CLARINET = 209;</code>
     */
    INSTRUMENT_TYPE_BASS_CLARINET(209),
    /**
     * <code>INSTRUMENT_TYPE_BALAFON = 210;</code>
     */
    INSTRUMENT_TYPE_BALAFON(210),
    /**
     * <code>INSTRUMENT_TYPE_MADAL = 211;</code>
     */
    INSTRUMENT_TYPE_MADAL(211),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_MANDOLIN = 212;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_MANDOLIN(212),
    /**
     * <code>INSTRUMENT_TYPE_KHLUI = 213;</code>
     */
    INSTRUMENT_TYPE_KHLUI(213),
    /**
     * <code>INSTRUMENT_TYPE_HARP = 214;</code>
     */
    INSTRUMENT_TYPE_HARP(214),
    /**
     * <code>INSTRUMENT_TYPE_VIBRASLAP = 215;</code>
     */
    INSTRUMENT_TYPE_VIBRASLAP(215),
    /**
     * <code>INSTRUMENT_TYPE_ORGANISTRUM = 216;</code>
     */
    INSTRUMENT_TYPE_ORGANISTRUM(216),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_SHAWM = 217;</code>
     */
    INSTRUMENT_TYPE_TENOR_SHAWM(217),
    /**
     * <code>INSTRUMENT_TYPE_MANDORE = 218;</code>
     */
    INSTRUMENT_TYPE_MANDORE(218),
    /**
     * <code>INSTRUMENT_TYPE_SULING = 219;</code>
     */
    INSTRUMENT_TYPE_SULING(219),
    /**
     * <code>INSTRUMENT_TYPE_GARDON = 220;</code>
     */
    INSTRUMENT_TYPE_GARDON(220),
    /**
     * <code>INSTRUMENT_TYPE_LYRA_VIOL = 221;</code>
     */
    INSTRUMENT_TYPE_LYRA_VIOL(221),
    /**
     * <code>INSTRUMENT_TYPE_ZURNA = 222;</code>
     */
    INSTRUMENT_TYPE_ZURNA(222),
    /**
     * <code>INSTRUMENT_TYPE_RHODES = 223;</code>
     */
    INSTRUMENT_TYPE_RHODES(223),
    /**
     * <code>INSTRUMENT_TYPE_NEY_FLUTE = 224;</code>
     */
    INSTRUMENT_TYPE_NEY_FLUTE(224),
    /**
     * <code>INSTRUMENT_TYPE_MINIATURE_KHENE = 225;</code>
     */
    INSTRUMENT_TYPE_MINIATURE_KHENE(225),
    /**
     * <code>INSTRUMENT_TYPE_ZERBAGHALI = 226;</code>
     */
    INSTRUMENT_TYPE_ZERBAGHALI(226),
    /**
     * <code>INSTRUMENT_TYPE_PIANET = 227;</code>
     */
    INSTRUMENT_TYPE_PIANET(227),
    /**
     * <code>INSTRUMENT_TYPE_CLAVINET = 228;</code>
     */
    INSTRUMENT_TYPE_CLAVINET(228),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_DOMRA = 229;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_DOMRA(229),
    /**
     * <code>INSTRUMENT_TYPE_CAJON = 230;</code>
     */
    INSTRUMENT_TYPE_CAJON(230),
    /**
     * <code>INSTRUMENT_TYPE_5__MINUS___STRING_BANJO = 231;</code>
     */
    INSTRUMENT_TYPE_5__MINUS___STRING_BANJO(231),
    /**
     * <code>INSTRUMENT_TYPE_SNARE_DRUM = 232;</code>
     */
    INSTRUMENT_TYPE_SNARE_DRUM(232),
    /**
     * <code>INSTRUMENT_TYPE_DZUDDAHORD = 233;</code>
     */
    INSTRUMENT_TYPE_DZUDDAHORD(233),
    /**
     * <code>INSTRUMENT_TYPE_BINGHI_DRUM = 234;</code>
     */
    INSTRUMENT_TYPE_BINGHI_DRUM(234),
    /**
     * <code>INSTRUMENT_TYPE_DAMARU = 235;</code>
     */
    INSTRUMENT_TYPE_DAMARU(235),
    /**
     * <code>INSTRUMENT_TYPE_BOWED_STRINGS = 236;</code>
     */
    INSTRUMENT_TYPE_BOWED_STRINGS(236),
    /**
     * <code>INSTRUMENT_TYPE_PUMP_ORGAN = 237;</code>
     */
    INSTRUMENT_TYPE_PUMP_ORGAN(237),
    /**
     * <code>INSTRUMENT_TYPE_GUACHE = 238;</code>
     */
    INSTRUMENT_TYPE_GUACHE(238),
    /**
     * <code>INSTRUMENT_TYPE_BASS_VIOL = 239;</code>
     */
    INSTRUMENT_TYPE_BASS_VIOL(239),
    /**
     * <code>INSTRUMENT_TYPE_TAMBOURINE = 240;</code>
     */
    INSTRUMENT_TYPE_TAMBOURINE(240),
    /**
     * <code>INSTRUMENT_TYPE_MELLOPHONE = 241;</code>
     */
    INSTRUMENT_TYPE_MELLOPHONE(241),
    /**
     * <code>INSTRUMENT_TYPE_BIWA = 242;</code>
     */
    INSTRUMENT_TYPE_BIWA(242),
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_SARRUSOPHONE = 243;</code>
     */
    INSTRUMENT_TYPE_CONTRABASS_SARRUSOPHONE(243),
    /**
     * <code>INSTRUMENT_TYPE_WAGNER_TUBA = 244;</code>
     */
    INSTRUMENT_TYPE_WAGNER_TUBA(244),
    /**
     * <code>INSTRUMENT_TYPE_IRISH_LOW_WHISTLE = 245;</code>
     */
    INSTRUMENT_TYPE_IRISH_LOW_WHISTLE(245),
    /**
     * <code>INSTRUMENT_TYPE_PICCOLO_TRUMPET = 246;</code>
     */
    INSTRUMENT_TYPE_PICCOLO_TRUMPET(246),
    /**
     * <code>INSTRUMENT_TYPE_SHELLTONE = 247;</code>
     */
    INSTRUMENT_TYPE_SHELLTONE(247),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_VIOL = 248;</code>
     */
    INSTRUMENT_TYPE_ALTO_VIOL(248),
    /**
     * <code>INSTRUMENT_TYPE_TAONGA_PUORO = 249;</code>
     */
    INSTRUMENT_TYPE_TAONGA_PUORO(249),
    /**
     * <code>INSTRUMENT_TYPE_NATIVE_AMERICAN_FLUTE = 250;</code>
     */
    INSTRUMENT_TYPE_NATIVE_AMERICAN_FLUTE(250),
    /**
     * <code>INSTRUMENT_TYPE_CELTIC_HARP = 251;</code>
     */
    INSTRUMENT_TYPE_CELTIC_HARP(251),
    /**
     * <code>INSTRUMENT_TYPE_GUSLI = 252;</code>
     */
    INSTRUMENT_TYPE_GUSLI(252),
    /**
     * <code>INSTRUMENT_TYPE_GUNSHOTS = 253;</code>
     */
    INSTRUMENT_TYPE_GUNSHOTS(253),
    /**
     * <code>INSTRUMENT_TYPE_TUSSELFLOYTE = 254;</code>
     */
    INSTRUMENT_TYPE_TUSSELFLOYTE(254),
    /**
     * <code>INSTRUMENT_TYPE_ORGAN = 255;</code>
     */
    INSTRUMENT_TYPE_ORGAN(255),
    /**
     * <code>INSTRUMENT_TYPE_DULCIAN = 256;</code>
     */
    INSTRUMENT_TYPE_DULCIAN(256),
    /**
     * <code>INSTRUMENT_TYPE_HERALD_TRUMPET = 257;</code>
     */
    INSTRUMENT_TYPE_HERALD_TRUMPET(257),
    /**
     * <code>INSTRUMENT_TYPE_TAMBORA = 258;</code>
     */
    INSTRUMENT_TYPE_TAMBORA(258),
    /**
     * <code>INSTRUMENT_TYPE_VIRGINALS = 259;</code>
     */
    INSTRUMENT_TYPE_VIRGINALS(259),
    /**
     * <code>INSTRUMENT_TYPE_ANIMAL_SOUNDS = 260;</code>
     */
    INSTRUMENT_TYPE_ANIMAL_SOUNDS(260),
    /**
     * <code>INSTRUMENT_TYPE_NGONI = 261;</code>
     */
    INSTRUMENT_TYPE_NGONI(261),
    /**
     * <code>INSTRUMENT_TYPE_CONCERT_HARP = 262;</code>
     */
    INSTRUMENT_TYPE_CONCERT_HARP(262),
    /**
     * <code>INSTRUMENT_TYPE_AULOCHROME = 263;</code>
     */
    INSTRUMENT_TYPE_AULOCHROME(263),
    /**
     * <code>INSTRUMENT_TYPE_12__MINUS___STRING_ELECTRIC_GUITAR = 264;</code>
     */
    INSTRUMENT_TYPE_12__MINUS___STRING_ELECTRIC_GUITAR(264),
    /**
     * <code>INSTRUMENT_TYPE_PARAGUAYAN_HARP = 265;</code>
     */
    INSTRUMENT_TYPE_PARAGUAYAN_HARP(265),
    /**
     * <code>INSTRUMENT_TYPE_PONG_LANG = 266;</code>
     */
    INSTRUMENT_TYPE_PONG_LANG(266),
    /**
     * <code>INSTRUMENT_TYPE_THAVIL = 267;</code>
     */
    INSTRUMENT_TYPE_THAVIL(267),
    /**
     * <code>INSTRUMENT_TYPE_CHEWING_SOUNDS = 268;</code>
     */
    INSTRUMENT_TYPE_CHEWING_SOUNDS(268),
    /**
     * <code>INSTRUMENT_TYPE_BANJOLIN = 269;</code>
     */
    INSTRUMENT_TYPE_BANJOLIN(269),
    /**
     * <code>INSTRUMENT_TYPE_WASHBOARD = 270;</code>
     */
    INSTRUMENT_TYPE_WASHBOARD(270),
    /**
     * <code>INSTRUMENT_TYPE_GUQIN = 271;</code>
     */
    INSTRUMENT_TYPE_GUQIN(271),
    /**
     * <code>INSTRUMENT_TYPE_FRYING_PAN_GUITAR = 272;</code>
     */
    INSTRUMENT_TYPE_FRYING_PAN_GUITAR(272),
    /**
     * <code>INSTRUMENT_TYPE_ATUMPAN = 273;</code>
     */
    INSTRUMENT_TYPE_ATUMPAN(273),
    /**
     * <code>INSTRUMENT_TYPE_GLASS_HARP = 274;</code>
     */
    INSTRUMENT_TYPE_GLASS_HARP(274),
    /**
     * <code>INSTRUMENT_TYPE_LATIN_PERCUSSION = 275;</code>
     */
    INSTRUMENT_TYPE_LATIN_PERCUSSION(275),
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_TROMBONE = 276;</code>
     */
    INSTRUMENT_TYPE_CONTRABASS_TROMBONE(276),
    /**
     * <code>INSTRUMENT_TYPE_POLICE_WHISTLE = 277;</code>
     */
    INSTRUMENT_TYPE_POLICE_WHISTLE(277),
    /**
     * <code>INSTRUMENT_TYPE_DHOL = 278;</code>
     */
    INSTRUMENT_TYPE_DHOL(278),
    /**
     * <code>INSTRUMENT_TYPE_WASHTUB_BASS = 279;</code>
     */
    INSTRUMENT_TYPE_WASHTUB_BASS(279),
    /**
     * <code>INSTRUMENT_TYPE_NATURAL_HORN = 280;</code>
     */
    INSTRUMENT_TYPE_NATURAL_HORN(280),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_GUITAR = 281;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_GUITAR(281),
    /**
     * <code>INSTRUMENT_TYPE_DRUM_MACHINE = 282;</code>
     */
    INSTRUMENT_TYPE_DRUM_MACHINE(282),
    /**
     * <code>INSTRUMENT_TYPE_BONGOS = 283;</code>
     */
    INSTRUMENT_TYPE_BONGOS(283),
    /**
     * <code>INSTRUMENT_TYPE_GERMAN_FLUTE = 284;</code>
     */
    INSTRUMENT_TYPE_GERMAN_FLUTE(284),
    /**
     * <code>INSTRUMENT_TYPE_KAVAL = 285;</code>
     */
    INSTRUMENT_TYPE_KAVAL(285),
    /**
     * <code>INSTRUMENT_TYPE_TOMS = 286;</code>
     */
    INSTRUMENT_TYPE_TOMS(286),
    /**
     * <code>INSTRUMENT_TYPE_VIOLA_D_AMORE = 287;</code>
     */
    INSTRUMENT_TYPE_VIOLA_D_AMORE(287),
    /**
     * <code>INSTRUMENT_TYPE_VIOLIN = 288;</code>
     */
    INSTRUMENT_TYPE_VIOLIN(288),
    /**
     * <code>INSTRUMENT_TYPE_SITAR = 289;</code>
     */
    INSTRUMENT_TYPE_SITAR(289),
    /**
     * <code>INSTRUMENT_TYPE_BASS_HARMONICA = 290;</code>
     */
    INSTRUMENT_TYPE_BASS_HARMONICA(290),
    /**
     * <code>INSTRUMENT_TYPE_MOUTH_ORGAN = 291;</code>
     */
    INSTRUMENT_TYPE_MOUTH_ORGAN(291),
    /**
     * <code>INSTRUMENT_TYPE_MARIMBAPHONE = 292;</code>
     */
    INSTRUMENT_TYPE_MARIMBAPHONE(292),
    /**
     * <code>INSTRUMENT_TYPE_BOY_VOICE = 293;</code>
     */
    INSTRUMENT_TYPE_BOY_VOICE(293),
    /**
     * <code>INSTRUMENT_TYPE_KHAMAK = 294;</code>
     */
    INSTRUMENT_TYPE_KHAMAK(294),
    /**
     * <code>INSTRUMENT_TYPE_PIANO = 295;</code>
     */
    INSTRUMENT_TYPE_PIANO(295),
    /**
     * <code>INSTRUMENT_TYPE_CUATRO = 296;</code>
     */
    INSTRUMENT_TYPE_CUATRO(296),
    /**
     * <code>INSTRUMENT_TYPE_VIOLINO_PICCOLO = 297;</code>
     */
    INSTRUMENT_TYPE_VIOLINO_PICCOLO(297),
    /**
     * <code>INSTRUMENT_TYPE_ZYDECO_RUBBOARD = 298;</code>
     */
    INSTRUMENT_TYPE_ZYDECO_RUBBOARD(298),
    /**
     * <code>INSTRUMENT_TYPE_BABY_BASS = 299;</code>
     */
    INSTRUMENT_TYPE_BABY_BASS(299),
    /**
     * <code>INSTRUMENT_TYPE_TAARIJA = 300;</code>
     */
    INSTRUMENT_TYPE_TAARIJA(300),
    /**
     * <code>INSTRUMENT_TYPE_DOUBLE_HARP = 301;</code>
     */
    INSTRUMENT_TYPE_DOUBLE_HARP(301),
    /**
     * <code>INSTRUMENT_TYPE_MANDOLELE = 302;</code>
     */
    INSTRUMENT_TYPE_MANDOLELE(302),
    /**
     * <code>INSTRUMENT_TYPE_GIRL_VOICE = 303;</code>
     */
    INSTRUMENT_TYPE_GIRL_VOICE(303),
    /**
     * <code>INSTRUMENT_TYPE_TROMBONE = 304;</code>
     */
    INSTRUMENT_TYPE_TROMBONE(304),
    /**
     * <code>INSTRUMENT_TYPE_AFRICAN_HARP = 305;</code>
     */
    INSTRUMENT_TYPE_AFRICAN_HARP(305),
    /**
     * <code>INSTRUMENT_TYPE_SHAKER = 306;</code>
     */
    INSTRUMENT_TYPE_SHAKER(306),
    /**
     * <code>INSTRUMENT_TYPE_PIANO_ACCORDION = 307;</code>
     */
    INSTRUMENT_TYPE_PIANO_ACCORDION(307),
    /**
     * <code>INSTRUMENT_TYPE_ORCHESTRAL_HIT = 308;</code>
     */
    INSTRUMENT_TYPE_ORCHESTRAL_HIT(308),
    /**
     * <code>INSTRUMENT_TYPE_TIMBAU = 309;</code>
     */
    INSTRUMENT_TYPE_TIMBAU(309),
    /**
     * <code>INSTRUMENT_TYPE_HARMONICA = 310;</code>
     */
    INSTRUMENT_TYPE_HARMONICA(310),
    /**
     * <code>INSTRUMENT_TYPE_RECORD_NOISE = 311;</code>
     */
    INSTRUMENT_TYPE_RECORD_NOISE(311),
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_STEEL_DRUMS = 312;</code>
     */
    INSTRUMENT_TYPE_SYNTH_STEEL_DRUMS(312),
    /**
     * <code>INSTRUMENT_TYPE_BONES = 313;</code>
     */
    INSTRUMENT_TYPE_BONES(313),
    /**
     * <code>INSTRUMENT_TYPE_CRWTH = 314;</code>
     */
    INSTRUMENT_TYPE_CRWTH(314),
    /**
     * <code>INSTRUMENT_TYPE_GYALING = 315;</code>
     */
    INSTRUMENT_TYPE_GYALING(315),
    /**
     * <code>INSTRUMENT_TYPE_SYNTHESIZER = 316;</code>
     */
    INSTRUMENT_TYPE_SYNTHESIZER(316),
    /**
     * <code>INSTRUMENT_TYPE_BARITONE_GUITAR = 317;</code>
     */
    INSTRUMENT_TYPE_BARITONE_GUITAR(317),
    /**
     * <code>INSTRUMENT_TYPE_SCRATCHER = 318;</code>
     */
    INSTRUMENT_TYPE_SCRATCHER(318),
    /**
     * <code>INSTRUMENT_TYPE_TANBOUR = 319;</code>
     */
    INSTRUMENT_TYPE_TANBOUR(319),
    /**
     * <code>INSTRUMENT_TYPE_KEYBOARD = 320;</code>
     */
    INSTRUMENT_TYPE_KEYBOARD(320),
    /**
     * <code>INSTRUMENT_TYPE_LANGELEIK = 321;</code>
     */
    INSTRUMENT_TYPE_LANGELEIK(321),
    /**
     * <code>INSTRUMENT_TYPE_WIND_INSTRUMENT = 322;</code>
     */
    INSTRUMENT_TYPE_WIND_INSTRUMENT(322),
    /**
     * <code>INSTRUMENT_TYPE_MUHARSING = 323;</code>
     */
    INSTRUMENT_TYPE_MUHARSING(323),
    /**
     * <code>INSTRUMENT_TYPE_ORCHESTRAL_PERCUSSION = 324;</code>
     */
    INSTRUMENT_TYPE_ORCHESTRAL_PERCUSSION(324),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_SAXOPHONE = 325;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_SAXOPHONE(325),
    /**
     * <code>INSTRUMENT_TYPE_GUANZI = 326;</code>
     */
    INSTRUMENT_TYPE_GUANZI(326),
    /**
     * <code>INSTRUMENT_TYPE_ULI_ULI = 327;</code>
     */
    INSTRUMENT_TYPE_ULI_ULI(327),
    /**
     * <code>INSTRUMENT_TYPE_PIPA = 328;</code>
     */
    INSTRUMENT_TYPE_PIPA(328),
    /**
     * <code>INSTRUMENT_TYPE_WOOD_BLOCK = 329;</code>
     */
    INSTRUMENT_TYPE_WOOD_BLOCK(329),
    /**
     * <code>INSTRUMENT_TYPE_BANDURA = 330;</code>
     */
    INSTRUMENT_TYPE_BANDURA(330),
    /**
     * <code>INSTRUMENT_TYPE_YAYLI_TAMBUR = 331;</code>
     */
    INSTRUMENT_TYPE_YAYLI_TAMBUR(331),
    /**
     * <code>INSTRUMENT_TYPE_WOBBLE_BOARD = 332;</code>
     */
    INSTRUMENT_TYPE_WOBBLE_BOARD(332),
    /**
     * <code>INSTRUMENT_TYPE_PEDAL_STEEL_GUITAR = 333;</code>
     */
    INSTRUMENT_TYPE_PEDAL_STEEL_GUITAR(333),
    /**
     * <code>INSTRUMENT_TYPE_CYMBALS = 334;</code>
     */
    INSTRUMENT_TYPE_CYMBALS(334),
    /**
     * <code>INSTRUMENT_TYPE_CELLO_BANJO = 335;</code>
     */
    INSTRUMENT_TYPE_CELLO_BANJO(335),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_CLARINET = 336;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_CLARINET(336),
    /**
     * <code>INSTRUMENT_TYPE_SLIDE_WHISTLE = 337;</code>
     */
    INSTRUMENT_TYPE_SLIDE_WHISTLE(337),
    /**
     * <code>INSTRUMENT_TYPE_MELODEON = 338;</code>
     */
    INSTRUMENT_TYPE_MELODEON(338),
    /**
     * <code>INSTRUMENT_TYPE_LOKOLE = 339;</code>
     */
    INSTRUMENT_TYPE_LOKOLE(339),
    /**
     * <code>INSTRUMENT_TYPE_LUTE = 340;</code>
     */
    INSTRUMENT_TYPE_LUTE(340),
    /**
     * <code>INSTRUMENT_TYPE_REBEC = 341;</code>
     */
    INSTRUMENT_TYPE_REBEC(341),
    /**
     * <code>INSTRUMENT_TYPE_PAN_FLUTE = 342;</code>
     */
    INSTRUMENT_TYPE_PAN_FLUTE(342),
    /**
     * <code>INSTRUMENT_TYPE_HURDY_GURDY = 343;</code>
     */
    INSTRUMENT_TYPE_HURDY_GURDY(343),
    /**
     * <code>INSTRUMENT_TYPE_BERIMBAU = 344;</code>
     */
    INSTRUMENT_TYPE_BERIMBAU(344),
    /**
     * <code>INSTRUMENT_TYPE_FLEXATONE = 345;</code>
     */
    INSTRUMENT_TYPE_FLEXATONE(345),
    /**
     * <code>INSTRUMENT_TYPE_TEMPLE_BLOCKS = 346;</code>
     */
    INSTRUMENT_TYPE_TEMPLE_BLOCKS(346),
    /**
     * <code>INSTRUMENT_TYPE_DICTOPHONE = 347;</code>
     */
    INSTRUMENT_TYPE_DICTOPHONE(347),
    /**
     * <code>INSTRUMENT_TYPE_DAYEREH = 348;</code>
     */
    INSTRUMENT_TYPE_DAYEREH(348),
    /**
     * <code>INSTRUMENT_TYPE_JAWBONE = 349;</code>
     */
    INSTRUMENT_TYPE_JAWBONE(349),
    /**
     * <code>INSTRUMENT_TYPE_MEDIEVAL_HARP = 350;</code>
     */
    INSTRUMENT_TYPE_MEDIEVAL_HARP(350),
    /**
     * <code>INSTRUMENT_TYPE_VERACRUZ_HARP = 351;</code>
     */
    INSTRUMENT_TYPE_VERACRUZ_HARP(351),
    /**
     * <code>INSTRUMENT_TYPE_CHAPMAN_STICK = 352;</code>
     */
    INSTRUMENT_TYPE_CHAPMAN_STICK(352),
    /**
     * <code>INSTRUMENT_TYPE_PINKILLU = 353;</code>
     */
    INSTRUMENT_TYPE_PINKILLU(353),
    /**
     * <code>INSTRUMENT_TYPE_GHAITA = 354;</code>
     */
    INSTRUMENT_TYPE_GHAITA(354),
    /**
     * <code>INSTRUMENT_TYPE_PI = 355;</code>
     */
    INSTRUMENT_TYPE_PI(355),
    /**
     * <code>INSTRUMENT_TYPE_VENEZUELAN_HARP = 356;</code>
     */
    INSTRUMENT_TYPE_VENEZUELAN_HARP(356),
    /**
     * <code>INSTRUMENT_TYPE_QUENACHO = 357;</code>
     */
    INSTRUMENT_TYPE_QUENACHO(357),
    /**
     * <code>INSTRUMENT_TYPE_USER_DEFINED = 358;</code>
     */
    INSTRUMENT_TYPE_USER_DEFINED(358),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_SITAR = 359;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_SITAR(359),
    /**
     * <code>INSTRUMENT_TYPE_KANUN = 360;</code>
     */
    INSTRUMENT_TYPE_KANUN(360),
    /**
     * <code>INSTRUMENT_TYPE_BENDIR = 361;</code>
     */
    INSTRUMENT_TYPE_BENDIR(361),
    /**
     * <code>INSTRUMENT_TYPE_MARIMBULA = 362;</code>
     */
    INSTRUMENT_TYPE_MARIMBULA(362),
    /**
     * <code>INSTRUMENT_TYPE_JINGHU = 363;</code>
     */
    INSTRUMENT_TYPE_JINGHU(363),
    /**
     * <code>INSTRUMENT_TYPE_CLAYPOT = 364;</code>
     */
    INSTRUMENT_TYPE_CLAYPOT(364),
    /**
     * <code>INSTRUMENT_TYPE_TINGSHA = 365;</code>
     */
    INSTRUMENT_TYPE_TINGSHA(365),
    /**
     * <code>INSTRUMENT_TYPE_BELL_TREE = 366;</code>
     */
    INSTRUMENT_TYPE_BELL_TREE(366),
    /**
     * <code>INSTRUMENT_TYPE_CAJA = 367;</code>
     */
    INSTRUMENT_TYPE_CAJA(367),
    /**
     * <code>INSTRUMENT_TYPE_MIXED_BACKGROUND_VOCALIST = 368;</code>
     */
    INSTRUMENT_TYPE_MIXED_BACKGROUND_VOCALIST(368),
    /**
     * <code>INSTRUMENT_TYPE_TOGAMAN_GUITAR_VIOL = 369;</code>
     */
    INSTRUMENT_TYPE_TOGAMAN_GUITAR_VIOL(369),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_PIANO = 370;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_PIANO(370),
    /**
     * <code>INSTRUMENT_TYPE_PICCOLO_FLUTE = 371;</code>
     */
    INSTRUMENT_TYPE_PICCOLO_FLUTE(371),
    /**
     * <code>INSTRUMENT_TYPE_STICKS = 372;</code>
     */
    INSTRUMENT_TYPE_STICKS(372),
    /**
     * <code>INSTRUMENT_TYPE_GUITARRON = 373;</code>
     */
    INSTRUMENT_TYPE_GUITARRON(373),
    /**
     * <code>INSTRUMENT_TYPE_BANDURRIA = 374;</code>
     */
    INSTRUMENT_TYPE_BANDURRIA(374),
    /**
     * <code>INSTRUMENT_TYPE_DAN_TRANH = 375;</code>
     */
    INSTRUMENT_TYPE_DAN_TRANH(375),
    /**
     * <code>INSTRUMENT_TYPE_HARDANGER_FIDDLE = 376;</code>
     */
    INSTRUMENT_TYPE_HARDANGER_FIDDLE(376),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_DULCIAN = 377;</code>
     */
    INSTRUMENT_TYPE_TENOR_DULCIAN(377),
    /**
     * <code>INSTRUMENT_TYPE_BOMBO = 378;</code>
     */
    INSTRUMENT_TYPE_BOMBO(378),
    /**
     * <code>INSTRUMENT_TYPE_BASS_DRUM__FRB___KICK__BRB__ = 379;</code>
     */
    INSTRUMENT_TYPE_BASS_DRUM__FRB___KICK__BRB__(379),
    /**
     * <code>INSTRUMENT_TYPE_APITO = 380;</code>
     */
    INSTRUMENT_TYPE_APITO(380),
    /**
     * <code>INSTRUMENT_TYPE_NJARKA = 381;</code>
     */
    INSTRUMENT_TYPE_NJARKA(381),
    /**
     * <code>INSTRUMENT_TYPE_BOSUNS_WHISTLE = 382;</code>
     */
    INSTRUMENT_TYPE_BOSUNS_WHISTLE(382),
    /**
     * <code>INSTRUMENT_TYPE_POSITIVE_ORGAN = 383;</code>
     */
    INSTRUMENT_TYPE_POSITIVE_ORGAN(383),
    /**
     * <code>INSTRUMENT_TYPE_FRENCH_HORN = 384;</code>
     */
    INSTRUMENT_TYPE_FRENCH_HORN(384),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_REBEC = 385;</code>
     */
    INSTRUMENT_TYPE_TENOR_REBEC(385),
    /**
     * <code>INSTRUMENT_TYPE_FEMALE_VOICE = 386;</code>
     */
    INSTRUMENT_TYPE_FEMALE_VOICE(386),
    /**
     * <code>INSTRUMENT_TYPE_TREBLE_REBEC = 387;</code>
     */
    INSTRUMENT_TYPE_TREBLE_REBEC(387),
    /**
     * <code>INSTRUMENT_TYPE_TIBETAN_BELLS = 388;</code>
     */
    INSTRUMENT_TYPE_TIBETAN_BELLS(388),
    /**
     * <code>INSTRUMENT_TYPE_SIKU = 389;</code>
     */
    INSTRUMENT_TYPE_SIKU(389),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRO_ACOUSTIC_HURDY_GURDY = 390;</code>
     */
    INSTRUMENT_TYPE_ELECTRO_ACOUSTIC_HURDY_GURDY(390),
    /**
     * <code>INSTRUMENT_TYPE_MANDOLIN = 391;</code>
     */
    INSTRUMENT_TYPE_MANDOLIN(391),
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_BASS = 392;</code>
     */
    INSTRUMENT_TYPE_SYNTH_BASS(392),
    /**
     * <code>INSTRUMENT_TYPE_XYLOPHONE = 393;</code>
     */
    INSTRUMENT_TYPE_XYLOPHONE(393),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANINO_SAXOPHONE = 394;</code>
     */
    INSTRUMENT_TYPE_SOPRANINO_SAXOPHONE(394),
    /**
     * <code>INSTRUMENT_TYPE_PORTUGUESE_GUITAR = 395;</code>
     */
    INSTRUMENT_TYPE_PORTUGUESE_GUITAR(395),
    /**
     * <code>INSTRUMENT_TYPE_SABAR = 396;</code>
     */
    INSTRUMENT_TYPE_SABAR(396),
    /**
     * <code>INSTRUMENT_TYPE_BRASS_INSTRUMENT = 397;</code>
     */
    INSTRUMENT_TYPE_BRASS_INSTRUMENT(397),
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_SAXOPHONE = 398;</code>
     */
    INSTRUMENT_TYPE_CONTRABASS_SAXOPHONE(398),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_TRUMPET = 399;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_TRUMPET(399),
    /**
     * <code>INSTRUMENT_TYPE_VUVUZELA = 400;</code>
     */
    INSTRUMENT_TYPE_VUVUZELA(400),
    /**
     * <code>INSTRUMENT_TYPE_KANJIRA = 401;</code>
     */
    INSTRUMENT_TYPE_KANJIRA(401),
    /**
     * <code>INSTRUMENT_TYPE_KANTELE = 402;</code>
     */
    INSTRUMENT_TYPE_KANTELE(402),
    /**
     * <code>INSTRUMENT_TYPE_ZHONGHU = 403;</code>
     */
    INSTRUMENT_TYPE_ZHONGHU(403),
    /**
     * <code>INSTRUMENT_TYPE_OPTIGAN = 404;</code>
     */
    INSTRUMENT_TYPE_OPTIGAN(404),
    /**
     * <code>INSTRUMENT_TYPE_NEUTRAL_VOICE = 405;</code>
     */
    INSTRUMENT_TYPE_NEUTRAL_VOICE(405),
    /**
     * <code>INSTRUMENT_TYPE_DUNGCHEN = 406;</code>
     */
    INSTRUMENT_TYPE_DUNGCHEN(406),
    /**
     * <code>INSTRUMENT_TYPE_TOY_PIANO = 407;</code>
     */
    INSTRUMENT_TYPE_TOY_PIANO(407),
    /**
     * <code>INSTRUMENT_TYPE_ZITHER = 408;</code>
     */
    INSTRUMENT_TYPE_ZITHER(408),
    /**
     * <code>INSTRUMENT_TYPE_SHAKUHACHI = 409;</code>
     */
    INSTRUMENT_TYPE_SHAKUHACHI(409),
    /**
     * <code>INSTRUMENT_TYPE_ARGHUL = 410;</code>
     */
    INSTRUMENT_TYPE_ARGHUL(410),
    /**
     * <code>INSTRUMENT_TYPE_KHENE = 411;</code>
     */
    INSTRUMENT_TYPE_KHENE(411),
    /**
     * <code>INSTRUMENT_TYPE_QARKABEB = 412;</code>
     */
    INSTRUMENT_TYPE_QARKABEB(412),
    /**
     * <code>INSTRUMENT_TYPE_YUEQIN = 413;</code>
     */
    INSTRUMENT_TYPE_YUEQIN(413),
    /**
     * <code>INSTRUMENT_TYPE_MALE_BACKGROUND_VOCALIST = 414;</code>
     */
    INSTRUMENT_TYPE_MALE_BACKGROUND_VOCALIST(414),
    /**
     * <code>INSTRUMENT_TYPE_NYLON_STRING_GUITAR = 415;</code>
     */
    INSTRUMENT_TYPE_NYLON_STRING_GUITAR(415),
    /**
     * <code>INSTRUMENT_TYPE_SURDO = 416;</code>
     */
    INSTRUMENT_TYPE_SURDO(416),
    /**
     * <code>INSTRUMENT_TYPE_WATERPHONE = 417;</code>
     */
    INSTRUMENT_TYPE_WATERPHONE(417),
    /**
     * <code>INSTRUMENT_TYPE_PEDABRO = 418;</code>
     */
    INSTRUMENT_TYPE_PEDABRO(418),
    /**
     * <code>INSTRUMENT_TYPE_LEONA = 419;</code>
     */
    INSTRUMENT_TYPE_LEONA(419),
    /**
     * <code>INSTRUMENT_TYPE_SAND_BLOCKS = 420;</code>
     */
    INSTRUMENT_TYPE_SAND_BLOCKS(420),
    /**
     * <code>INSTRUMENT_TYPE_MANDOLA = 421;</code>
     */
    INSTRUMENT_TYPE_MANDOLA(421),
    /**
     * <code>INSTRUMENT_TYPE_METAL_CANS = 422;</code>
     */
    INSTRUMENT_TYPE_METAL_CANS(422),
    /**
     * <code>INSTRUMENT_TYPE_NAGARA = 423;</code>
     */
    INSTRUMENT_TYPE_NAGARA(423),
    /**
     * <code>INSTRUMENT_TYPE_CUMBUS = 424;</code>
     */
    INSTRUMENT_TYPE_CUMBUS(424),
    /**
     * <code>INSTRUMENT_TYPE_TAMBURA = 425;</code>
     */
    INSTRUMENT_TYPE_TAMBURA(425),
    /**
     * <code>INSTRUMENT_TYPE_PSALTERY = 426;</code>
     */
    INSTRUMENT_TYPE_PSALTERY(426),
    /**
     * <code>INSTRUMENT_TYPE_ANGKLUNG = 427;</code>
     */
    INSTRUMENT_TYPE_ANGKLUNG(427),
    /**
     * <code>INSTRUMENT_TYPE_CHILD_VOICE = 428;</code>
     */
    INSTRUMENT_TYPE_CHILD_VOICE(428),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_SAXOPHONE = 429;</code>
     */
    INSTRUMENT_TYPE_ALTO_SAXOPHONE(429),
    /**
     * <code>INSTRUMENT_TYPE_PIPE_ORGAN = 430;</code>
     */
    INSTRUMENT_TYPE_PIPE_ORGAN(430),
    /**
     * <code>INSTRUMENT_TYPE_TUBA = 431;</code>
     */
    INSTRUMENT_TYPE_TUBA(431),
    /**
     * <code>INSTRUMENT_TYPE_VIBRAPHONE = 432;</code>
     */
    INSTRUMENT_TYPE_VIBRAPHONE(432),
    /**
     * <code>INSTRUMENT_TYPE_SHENG = 433;</code>
     */
    INSTRUMENT_TYPE_SHENG(433),
    /**
     * <code>INSTRUMENT_TYPE_KORA = 434;</code>
     */
    INSTRUMENT_TYPE_KORA(434),
    /**
     * <code>INSTRUMENT_TYPE_TAMBORIM = 435;</code>
     */
    INSTRUMENT_TYPE_TAMBORIM(435),
    /**
     * <code>INSTRUMENT_TYPE_GHAYCHAK = 436;</code>
     */
    INSTRUMENT_TYPE_GHAYCHAK(436),
    /**
     * <code>INSTRUMENT_TYPE_CONGAS = 437;</code>
     */
    INSTRUMENT_TYPE_CONGAS(437),
    /**
     * <code>INSTRUMENT_TYPE_TONGUE_DRUM = 438;</code>
     */
    INSTRUMENT_TYPE_TONGUE_DRUM(438),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_VIOLA = 439;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_VIOLA(439),
    /**
     * <code>INSTRUMENT_TYPE_TALKING_DRUM = 440;</code>
     */
    INSTRUMENT_TYPE_TALKING_DRUM(440),
    /**
     * <code>INSTRUMENT_TYPE_POST_HORN = 441;</code>
     */
    INSTRUMENT_TYPE_POST_HORN(441),
    /**
     * <code>INSTRUMENT_TYPE_FINGER_CLICKS = 442;</code>
     */
    INSTRUMENT_TYPE_FINGER_CLICKS(442),
    /**
     * <code>INSTRUMENT_TYPE_GANGA = 443;</code>
     */
    INSTRUMENT_TYPE_GANGA(443),
    /**
     * <code>INSTRUMENT_TYPE_SLEIGH_BELLS = 444;</code>
     */
    INSTRUMENT_TYPE_SLEIGH_BELLS(444),
    /**
     * <code>INSTRUMENT_TYPE_VIOLA = 445;</code>
     */
    INSTRUMENT_TYPE_VIOLA(445),
    /**
     * <code>INSTRUMENT_TYPE_DRANYEN = 446;</code>
     */
    INSTRUMENT_TYPE_DRANYEN(446),
    /**
     * <code>INSTRUMENT_TYPE_ROMANTIC_GUITAR = 447;</code>
     */
    INSTRUMENT_TYPE_ROMANTIC_GUITAR(447),
    /**
     * <code>INSTRUMENT_TYPE_DJEMBE = 448;</code>
     */
    INSTRUMENT_TYPE_DJEMBE(448),
    /**
     * <code>INSTRUMENT_TYPE_SURBAHAR = 449;</code>
     */
    INSTRUMENT_TYPE_SURBAHAR(449),
    /**
     * <code>INSTRUMENT_TYPE_DUTAR = 450;</code>
     */
    INSTRUMENT_TYPE_DUTAR(450),
    /**
     * <code>INSTRUMENT_TYPE_TANPURA = 451;</code>
     */
    INSTRUMENT_TYPE_TANPURA(451),
    /**
     * <code>INSTRUMENT_TYPE_BASS_SHAWM = 452;</code>
     */
    INSTRUMENT_TYPE_BASS_SHAWM(452),
    /**
     * <code>INSTRUMENT_TYPE_BOMBARD = 453;</code>
     */
    INSTRUMENT_TYPE_BOMBARD(453),
    /**
     * <code>INSTRUMENT_TYPE_SIREN = 454;</code>
     */
    INSTRUMENT_TYPE_SIREN(454),
    /**
     * <code>INSTRUMENT_TYPE_TRAIN_SOUNDS = 455;</code>
     */
    INSTRUMENT_TYPE_TRAIN_SOUNDS(455),
    /**
     * <code>INSTRUMENT_TYPE_TROMBA_MARINA = 456;</code>
     */
    INSTRUMENT_TYPE_TROMBA_MARINA(456),
    /**
     * <code>INSTRUMENT_TYPE_BAJO_SEXTO = 457;</code>
     */
    INSTRUMENT_TYPE_BAJO_SEXTO(457),
    /**
     * <code>INSTRUMENT_TYPE_DIDGERIDOO = 458;</code>
     */
    INSTRUMENT_TYPE_DIDGERIDOO(458),
    /**
     * <code>INSTRUMENT_TYPE_NYATITI = 459;</code>
     */
    INSTRUMENT_TYPE_NYATITI(459),
    /**
     * <code>INSTRUMENT_TYPE_CAR_SOUNDS = 460;</code>
     */
    INSTRUMENT_TYPE_CAR_SOUNDS(460),
    /**
     * <code>INSTRUMENT_TYPE_CRAVIOLA = 461;</code>
     */
    INSTRUMENT_TYPE_CRAVIOLA(461),
    /**
     * <code>INSTRUMENT_TYPE_DIZI = 462;</code>
     */
    INSTRUMENT_TYPE_DIZI(462),
    /**
     * <code>INSTRUMENT_TYPE_SLIDE_SAXOPHONE = 463;</code>
     */
    INSTRUMENT_TYPE_SLIDE_SAXOPHONE(463),
    /**
     * <code>INSTRUMENT_TYPE_BODHRAN = 464;</code>
     */
    INSTRUMENT_TYPE_BODHRAN(464),
    /**
     * <code>INSTRUMENT_TYPE_CYMBAL__FRB___CRASH__BRB__ = 465;</code>
     */
    INSTRUMENT_TYPE_CYMBAL__FRB___CRASH__BRB__(465),
    /**
     * <code>INSTRUMENT_TYPE_THUNDER_SHEET = 466;</code>
     */
    INSTRUMENT_TYPE_THUNDER_SHEET(466),
    /**
     * <code>INSTRUMENT_TYPE_BASS_RECORDER = 467;</code>
     */
    INSTRUMENT_TYPE_BASS_RECORDER(467),
    /**
     * <code>INSTRUMENT_TYPE_CYMBAL__FRB___SUSPENDED__BRB__ = 468;</code>
     */
    INSTRUMENT_TYPE_CYMBAL__FRB___SUSPENDED__BRB__(468),
    /**
     * <code>INSTRUMENT_TYPE_BANJO = 469;</code>
     */
    INSTRUMENT_TYPE_BANJO(469),
    /**
     * <code>INSTRUMENT_TYPE_ERHU = 470;</code>
     */
    INSTRUMENT_TYPE_ERHU(470),
    /**
     * <code>INSTRUMENT_TYPE_SACKBUT = 471;</code>
     */
    INSTRUMENT_TYPE_SACKBUT(471),
    /**
     * <code>INSTRUMENT_TYPE_GITTERN = 472;</code>
     */
    INSTRUMENT_TYPE_GITTERN(472),
    /**
     * <code>INSTRUMENT_TYPE_YOKIN = 473;</code>
     */
    INSTRUMENT_TYPE_YOKIN(473),
    /**
     * <code>INSTRUMENT_TYPE_OBOE_DA_CACCIA = 474;</code>
     */
    INSTRUMENT_TYPE_OBOE_DA_CACCIA(474),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_SHAWM = 475;</code>
     */
    INSTRUMENT_TYPE_ALTO_SHAWM(475),
    /**
     * <code>INSTRUMENT_TYPE_DUNUN = 476;</code>
     */
    INSTRUMENT_TYPE_DUNUN(476),
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_LEAD = 477;</code>
     */
    INSTRUMENT_TYPE_SYNTH_LEAD(477),
    /**
     * <code>INSTRUMENT_TYPE_LUTHEAL = 478;</code>
     */
    INSTRUMENT_TYPE_LUTHEAL(478),
    /**
     * <code>INSTRUMENT_TYPE_CLAVICHORD = 479;</code>
     */
    INSTRUMENT_TYPE_CLAVICHORD(479),
    /**
     * <code>INSTRUMENT_TYPE_GAYAGEUM = 480;</code>
     */
    INSTRUMENT_TYPE_GAYAGEUM(480),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_ORGAN = 481;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_ORGAN(481),
    /**
     * <code>INSTRUMENT_TYPE_DUGGI = 482;</code>
     */
    INSTRUMENT_TYPE_DUGGI(482),
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_PAD = 483;</code>
     */
    INSTRUMENT_TYPE_SYNTH_PAD(483),
    /**
     * <code>INSTRUMENT_TYPE_BASS_FLUTE = 484;</code>
     */
    INSTRUMENT_TYPE_BASS_FLUTE(484),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_VIOLIN = 485;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_VIOLIN(485),
    /**
     * <code>INSTRUMENT_TYPE_LAOUTO = 486;</code>
     */
    INSTRUMENT_TYPE_LAOUTO(486),
    /**
     * <code>INSTRUMENT_TYPE_CORDOVOX = 487;</code>
     */
    INSTRUMENT_TYPE_CORDOVOX(487),
    /**
     * <code>INSTRUMENT_TYPE_ARCH_LUTE = 488;</code>
     */
    INSTRUMENT_TYPE_ARCH_LUTE(488),
    /**
     * <code>INSTRUMENT_TYPE_BARITONE_OBOE = 489;</code>
     */
    INSTRUMENT_TYPE_BARITONE_OBOE(489),
    /**
     * <code>INSTRUMENT_TYPE_CORNET = 490;</code>
     */
    INSTRUMENT_TYPE_CORNET(490),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_BANJO = 491;</code>
     */
    INSTRUMENT_TYPE_TENOR_BANJO(491),
    /**
     * <code>INSTRUMENT_TYPE_BARREL_ORGAN = 492;</code>
     */
    INSTRUMENT_TYPE_BARREL_ORGAN(492),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_SAXOPHONE = 493;</code>
     */
    INSTRUMENT_TYPE_TENOR_SAXOPHONE(493),
    /**
     * <code>INSTRUMENT_TYPE_UNPITCHED_PERCUSSION_INSTRUMENT = 494;</code>
     */
    INSTRUMENT_TYPE_UNPITCHED_PERCUSSION_INSTRUMENT(494),
    /**
     * <code>INSTRUMENT_TYPE_MUSICAL_BOW = 495;</code>
     */
    INSTRUMENT_TYPE_MUSICAL_BOW(495),
    /**
     * <code>INSTRUMENT_TYPE_XIAO = 496;</code>
     */
    INSTRUMENT_TYPE_XIAO(496),
    /**
     * <code>INSTRUMENT_TYPE_TREATMENTS = 497;</code>
     */
    INSTRUMENT_TYPE_TREATMENTS(497),
    /**
     * <code>INSTRUMENT_TYPE_KOTO = 498;</code>
     */
    INSTRUMENT_TYPE_KOTO(498),
    /**
     * <code>INSTRUMENT_TYPE_SHVI_WHISTLE = 499;</code>
     */
    INSTRUMENT_TYPE_SHVI_WHISTLE(499),
    /**
     * <code>INSTRUMENT_TYPE_MUSETTE = 500;</code>
     */
    INSTRUMENT_TYPE_MUSETTE(500),
    /**
     * <code>INSTRUMENT_TYPE_BASS = 501;</code>
     */
    INSTRUMENT_TYPE_BASS(501),
    /**
     * <code>INSTRUMENT_TYPE_AUTOHARP = 502;</code>
     */
    INSTRUMENT_TYPE_AUTOHARP(502),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_VIOLIN = 503;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_VIOLIN(503),
    /**
     * <code>INSTRUMENT_TYPE_BOUZOUKI = 504;</code>
     */
    INSTRUMENT_TYPE_BOUZOUKI(504),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_CRUMHORN = 505;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_CRUMHORN(505),
    /**
     * <code>INSTRUMENT_TYPE_CHIMES = 506;</code>
     */
    INSTRUMENT_TYPE_CHIMES(506),
    /**
     * <code>INSTRUMENT_TYPE_PANDEIRO = 507;</code>
     */
    INSTRUMENT_TYPE_PANDEIRO(507),
    /**
     * <code>INSTRUMENT_TYPE_CITOLE = 508;</code>
     */
    INSTRUMENT_TYPE_CITOLE(508),
    /**
     * <code>INSTRUMENT_TYPE_GRAND_PIANO = 509;</code>
     */
    INSTRUMENT_TYPE_GRAND_PIANO(509),
    /**
     * <code>INSTRUMENT_TYPE_KAZOO = 510;</code>
     */
    INSTRUMENT_TYPE_KAZOO(510),
    /**
     * <code>INSTRUMENT_TYPE_BALALAIKA = 511;</code>
     */
    INSTRUMENT_TYPE_BALALAIKA(511),
    /**
     * <code>INSTRUMENT_TYPE_MOHAN_VEENA = 512;</code>
     */
    INSTRUMENT_TYPE_MOHAN_VEENA(512),
    /**
     * <code>INSTRUMENT_TYPE_VICHITRA_VEENA = 513;</code>
     */
    INSTRUMENT_TYPE_VICHITRA_VEENA(513),
    /**
     * <code>INSTRUMENT_TYPE_CHATTER = 514;</code>
     */
    INSTRUMENT_TYPE_CHATTER(514),
    /**
     * <code>INSTRUMENT_TYPE_POCKET_TRUMPET = 515;</code>
     */
    INSTRUMENT_TYPE_POCKET_TRUMPET(515),
    /**
     * <code>INSTRUMENT_TYPE_SPECTRASONICS_OMNISPHERE = 516;</code>
     */
    INSTRUMENT_TYPE_SPECTRASONICS_OMNISPHERE(516),
    /**
     * <code>INSTRUMENT_TYPE_BANHU = 517;</code>
     */
    INSTRUMENT_TYPE_BANHU(517),
    /**
     * <code>INSTRUMENT_TYPE_BASS_SACKBUT = 518;</code>
     */
    INSTRUMENT_TYPE_BASS_SACKBUT(518),
    /**
     * <code>INSTRUMENT_TYPE_SOUSAPHONE = 519;</code>
     */
    INSTRUMENT_TYPE_SOUSAPHONE(519),
    /**
     * <code>INSTRUMENT_TYPE_BODY_PERCUSSION = 520;</code>
     */
    INSTRUMENT_TYPE_BODY_PERCUSSION(520),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_SHAWM = 521;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_SHAWM(521),
    /**
     * <code>INSTRUMENT_TYPE_PERCUSSION_INSTRUMENT = 522;</code>
     */
    INSTRUMENT_TYPE_PERCUSSION_INSTRUMENT(522),
    /**
     * <code>INSTRUMENT_TYPE_URUMEE = 523;</code>
     */
    INSTRUMENT_TYPE_URUMEE(523),
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_BRASS = 524;</code>
     */
    INSTRUMENT_TYPE_SYNTH_BRASS(524),
    /**
     * <code>INSTRUMENT_TYPE_RENAISSANCE_GUITAR = 525;</code>
     */
    INSTRUMENT_TYPE_RENAISSANCE_GUITAR(525),
    /**
     * <code>INSTRUMENT_TYPE_COMB = 526;</code>
     */
    INSTRUMENT_TYPE_COMB(526),
    /**
     * <code>INSTRUMENT_TYPE_CLARINET = 527;</code>
     */
    INSTRUMENT_TYPE_CLARINET(527),
    /**
     * <code>INSTRUMENT_TYPE_MIZMAR = 528;</code>
     */
    INSTRUMENT_TYPE_MIZMAR(528),
    /**
     * <code>INSTRUMENT_TYPE_CYMBAL__FRB___RIDE__BRB__ = 529;</code>
     */
    INSTRUMENT_TYPE_CYMBAL__FRB___RIDE__BRB__(529),
    /**
     * <code>INSTRUMENT_TYPE_TIMPANI = 530;</code>
     */
    INSTRUMENT_TYPE_TIMPANI(530),
    /**
     * <code>INSTRUMENT_TYPE_TRIANGLE = 531;</code>
     */
    INSTRUMENT_TYPE_TRIANGLE(531),
    /**
     * <code>INSTRUMENT_TYPE_FLUTE = 532;</code>
     */
    INSTRUMENT_TYPE_FLUTE(532),
    /**
     * <code>INSTRUMENT_TYPE_BAGLAMA = 533;</code>
     */
    INSTRUMENT_TYPE_BAGLAMA(533),
    /**
     * <code>INSTRUMENT_TYPE_MEDIEVAL_FIDDLE = 534;</code>
     */
    INSTRUMENT_TYPE_MEDIEVAL_FIDDLE(534),
    /**
     * <code>INSTRUMENT_TYPE_VIHUELA = 535;</code>
     */
    INSTRUMENT_TYPE_VIHUELA(535),
    /**
     * <code>INSTRUMENT_TYPE_BATA = 536;</code>
     */
    INSTRUMENT_TYPE_BATA(536),
    /**
     * <code>INSTRUMENT_TYPE_NATURAL_TRUMPET = 537;</code>
     */
    INSTRUMENT_TYPE_NATURAL_TRUMPET(537),
    /**
     * <code>INSTRUMENT_TYPE_FEMALE_BACKGROUND_VOCALIST = 538;</code>
     */
    INSTRUMENT_TYPE_FEMALE_BACKGROUND_VOCALIST(538),
    /**
     * <code>INSTRUMENT_TYPE_TOUCH_GUITAR = 539;</code>
     */
    INSTRUMENT_TYPE_TOUCH_GUITAR(539),
    /**
     * <code>INSTRUMENT_TYPE_HECKELPHONE = 540;</code>
     */
    INSTRUMENT_TYPE_HECKELPHONE(540),
    /**
     * <code>INSTRUMENT_TYPE_TRUMPET = 541;</code>
     */
    INSTRUMENT_TYPE_TRUMPET(541),
    /**
     * <code>INSTRUMENT_TYPE_STEEL_DRUMS = 542;</code>
     */
    INSTRUMENT_TYPE_STEEL_DRUMS(542),
    /**
     * <code>INSTRUMENT_TYPE_OUD = 543;</code>
     */
    INSTRUMENT_TYPE_OUD(543),
    /**
     * <code>INSTRUMENT_TYPE_TIMPLE = 544;</code>
     */
    INSTRUMENT_TYPE_TIMPLE(544),
    /**
     * <code>INSTRUMENT_TYPE_BIRD_SONG = 545;</code>
     */
    INSTRUMENT_TYPE_BIRD_SONG(545),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_VIOLA = 546;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_VIOLA(546),
    /**
     * <code>INSTRUMENT_TYPE_BASS_DRUM__FRB___CONCERT__BRB__ = 547;</code>
     */
    INSTRUMENT_TYPE_BASS_DRUM__FRB___CONCERT__BRB__(547),
    /**
     * <code>INSTRUMENT_TYPE_ROLMO = 548;</code>
     */
    INSTRUMENT_TYPE_ROLMO(548),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_BASSOON = 549;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_BASSOON(549),
    /**
     * <code>INSTRUMENT_TYPE_LAUNEDDAS = 550;</code>
     */
    INSTRUMENT_TYPE_LAUNEDDAS(550),
    /**
     * <code>INSTRUMENT_TYPE_XAPHOON = 551;</code>
     */
    INSTRUMENT_TYPE_XAPHOON(551),
    /**
     * <code>INSTRUMENT_TYPE_MARACAS = 552;</code>
     */
    INSTRUMENT_TYPE_MARACAS(552),
    /**
     * <code>INSTRUMENT_TYPE_OBOE = 553;</code>
     */
    INSTRUMENT_TYPE_OBOE(553),
    /**
     * <code>INSTRUMENT_TYPE_TOY_ACCORDION = 554;</code>
     */
    INSTRUMENT_TYPE_TOY_ACCORDION(554),
    /**
     * <code>INSTRUMENT_TYPE_REGAL = 555;</code>
     */
    INSTRUMENT_TYPE_REGAL(555),
    /**
     * <code>INSTRUMENT_TYPE_SANTOOR = 556;</code>
     */
    INSTRUMENT_TYPE_SANTOOR(556),
    /**
     * <code>INSTRUMENT_TYPE_DAEGEUM = 557;</code>
     */
    INSTRUMENT_TYPE_DAEGEUM(557),
    /**
     * <code>INSTRUMENT_TYPE_SORDUN = 558;</code>
     */
    INSTRUMENT_TYPE_SORDUN(558),
    /**
     * <code>INSTRUMENT_TYPE_CHARANGO = 559;</code>
     */
    INSTRUMENT_TYPE_CHARANGO(559),
    /**
     * <code>INSTRUMENT_TYPE_CALABASH = 560;</code>
     */
    INSTRUMENT_TYPE_CALABASH(560),
    /**
     * <code>INSTRUMENT_TYPE_FISCORN = 561;</code>
     */
    INSTRUMENT_TYPE_FISCORN(561),
    /**
     * <code>INSTRUMENT_TYPE_SLAPSTICK = 562;</code>
     */
    INSTRUMENT_TYPE_SLAPSTICK(562),
    /**
     * <code>INSTRUMENT_TYPE_VI_TAR = 563;</code>
     */
    INSTRUMENT_TYPE_VI_TAR(563),
    /**
     * <code>INSTRUMENT_TYPE_GIZMO = 564;</code>
     */
    INSTRUMENT_TYPE_GIZMO(564),
    /**
     * <code>INSTRUMENT_TYPE_WILLOW_FLUTE = 565;</code>
     */
    INSTRUMENT_TYPE_WILLOW_FLUTE(565),
    /**
     * <code>INSTRUMENT_TYPE_BREAKBEAT = 566;</code>
     */
    INSTRUMENT_TYPE_BREAKBEAT(566),
    /**
     * <code>INSTRUMENT_TYPE_KHIM = 567;</code>
     */
    INSTRUMENT_TYPE_KHIM(567),
    /**
     * <code>INSTRUMENT_TYPE_VEENA = 568;</code>
     */
    INSTRUMENT_TYPE_VEENA(568),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_CELLO = 569;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_CELLO(569),
    /**
     * <code>INSTRUMENT_TYPE_LITHOPHONE = 570;</code>
     */
    INSTRUMENT_TYPE_LITHOPHONE(570),
    /**
     * <code>INSTRUMENT_TYPE_DOUBLE_BASS = 571;</code>
     */
    INSTRUMENT_TYPE_DOUBLE_BASS(571),
    /**
     * <code>INSTRUMENT_TYPE_ACOUSTIC_BASS_GUITAR = 572;</code>
     */
    INSTRUMENT_TYPE_ACOUSTIC_BASS_GUITAR(572),
    /**
     * <code>INSTRUMENT_TYPE_PADDLE_DRUMS = 573;</code>
     */
    INSTRUMENT_TYPE_PADDLE_DRUMS(573),
    /**
     * <code>INSTRUMENT_TYPE_UNINTENDED_ARTIFACTS = 574;</code>
     */
    INSTRUMENT_TYPE_UNINTENDED_ARTIFACTS(574),
    /**
     * <code>INSTRUMENT_TYPE_AFRICAN_PERCUSSION = 575;</code>
     */
    INSTRUMENT_TYPE_AFRICAN_PERCUSSION(575),
    /**
     * <code>INSTRUMENT_TYPE_CUICA = 576;</code>
     */
    INSTRUMENT_TYPE_CUICA(576),
    /**
     * <code>INSTRUMENT_TYPE_TAR__FRB___PERCUSSION__BRB__ = 577;</code>
     */
    INSTRUMENT_TYPE_TAR__FRB___PERCUSSION__BRB__(577),
    /**
     * <code>INSTRUMENT_TYPE_TARKA = 578;</code>
     */
    INSTRUMENT_TYPE_TARKA(578),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_RECORDER = 579;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_RECORDER(579),
    /**
     * <code>INSTRUMENT_TYPE_GLOCKENSPIEL = 580;</code>
     */
    INSTRUMENT_TYPE_GLOCKENSPIEL(580),
    /**
     * <code>INSTRUMENT_TYPE_FLUGELHORN = 581;</code>
     */
    INSTRUMENT_TYPE_FLUGELHORN(581),
    /**
     * <code>INSTRUMENT_TYPE_WELSH_TRIPLE_HARP = 582;</code>
     */
    INSTRUMENT_TYPE_WELSH_TRIPLE_HARP(582),
    /**
     * <code>INSTRUMENT_TYPE_ANDEAN_HARP = 583;</code>
     */
    INSTRUMENT_TYPE_ANDEAN_HARP(583),
    /**
     * <code>INSTRUMENT_TYPE_FLAGEOLET = 584;</code>
     */
    INSTRUMENT_TYPE_FLAGEOLET(584),
    /**
     * <code>INSTRUMENT_TYPE_TAAL = 585;</code>
     */
    INSTRUMENT_TYPE_TAAL(585),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_DULCIAN = 586;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_DULCIAN(586),
    /**
     * <code>INSTRUMENT_TYPE_GUITAR = 587;</code>
     */
    INSTRUMENT_TYPE_GUITAR(587),
    /**
     * <code>INSTRUMENT_TYPE_WIND_MACHINE = 588;</code>
     */
    INSTRUMENT_TYPE_WIND_MACHINE(588),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_FLUTE = 589;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_FLUTE(589),
    /**
     * <code>INSTRUMENT_TYPE_BAWU = 590;</code>
     */
    INSTRUMENT_TYPE_BAWU(590),
    /**
     * <code>INSTRUMENT_TYPE_KEYED_TRUMPET = 591;</code>
     */
    INSTRUMENT_TYPE_KEYED_TRUMPET(591),
    /**
     * <code>INSTRUMENT_TYPE_DRUM_KIT = 592;</code>
     */
    INSTRUMENT_TYPE_DRUM_KIT(592),
    /**
     * <code>INSTRUMENT_TYPE_POTS_AND_PANS = 593;</code>
     */
    INSTRUMENT_TYPE_POTS_AND_PANS(593),
    /**
     * <code>INSTRUMENT_TYPE_MAZHAR = 594;</code>
     */
    INSTRUMENT_TYPE_MAZHAR(594),
    /**
     * <code>INSTRUMENT_TYPE_TABLA = 595;</code>
     */
    INSTRUMENT_TYPE_TABLA(595),
    /**
     * <code>INSTRUMENT_TYPE_DAF = 596;</code>
     */
    INSTRUMENT_TYPE_DAF(596),
    /**
     * <code>INSTRUMENT_TYPE_ANVIL = 597;</code>
     */
    INSTRUMENT_TYPE_ANVIL(597),
    /**
     * <code>INSTRUMENT_TYPE_DRUM_STICKS = 598;</code>
     */
    INSTRUMENT_TYPE_DRUM_STICKS(598),
    /**
     * <code>INSTRUMENT_TYPE_RABEL = 599;</code>
     */
    INSTRUMENT_TYPE_RABEL(599),
    /**
     * <code>INSTRUMENT_TYPE_SPINET = 600;</code>
     */
    INSTRUMENT_TYPE_SPINET(600),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_DRUM = 601;</code>
     */
    INSTRUMENT_TYPE_TENOR_DRUM(601),
    /**
     * <code>INSTRUMENT_TYPE_PERCUSSION_SECTION = 602;</code>
     */
    INSTRUMENT_TYPE_PERCUSSION_SECTION(602),
    /**
     * <code>INSTRUMENT_TYPE_ACCORDION = 603;</code>
     */
    INSTRUMENT_TYPE_ACCORDION(603),
    /**
     * <code>INSTRUMENT_TYPE_SIMSIMIYYA = 604;</code>
     */
    INSTRUMENT_TYPE_SIMSIMIYYA(604),
    /**
     * <code>INSTRUMENT_TYPE_SHAMISEN = 605;</code>
     */
    INSTRUMENT_TYPE_SHAMISEN(605),
    /**
     * <code>INSTRUMENT_TYPE_KHONG_WONG_YAI = 606;</code>
     */
    INSTRUMENT_TYPE_KHONG_WONG_YAI(606),
    /**
     * <code>INSTRUMENT_TYPE_DAN_BAU = 607;</code>
     */
    INSTRUMENT_TYPE_DAN_BAU(607),
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_CORNET = 608;</code>
     */
    INSTRUMENT_TYPE_SOPRANO_CORNET(608),
    /**
     * <code>INSTRUMENT_TYPE_SINTIR = 609;</code>
     */
    INSTRUMENT_TYPE_SINTIR(609),
    /**
     * <code>INSTRUMENT_TYPE_MELODICA = 610;</code>
     */
    INSTRUMENT_TYPE_MELODICA(610),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_CELLO = 611;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_CELLO(611),
    /**
     * <code>INSTRUMENT_TYPE_CONTRA_ALTO_CLARINET = 612;</code>
     */
    INSTRUMENT_TYPE_CONTRA_ALTO_CLARINET(612),
    /**
     * <code>INSTRUMENT_TYPE_WIRE_STRUNG_HARP = 613;</code>
     */
    INSTRUMENT_TYPE_WIRE_STRUNG_HARP(613),
    /**
     * <code>INSTRUMENT_TYPE_SAUNG = 614;</code>
     */
    INSTRUMENT_TYPE_SAUNG(614),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_VIOL = 615;</code>
     */
    INSTRUMENT_TYPE_TENOR_VIOL(615),
    /**
     * <code>INSTRUMENT_TYPE_FOOT_STOMP = 616;</code>
     */
    INSTRUMENT_TYPE_FOOT_STOMP(616),
    /**
     * <code>INSTRUMENT_TYPE_THEORBO = 617;</code>
     */
    INSTRUMENT_TYPE_THEORBO(617),
    /**
     * <code>INSTRUMENT_TYPE_CHOCALHO = 618;</code>
     */
    INSTRUMENT_TYPE_CHOCALHO(618),
    /**
     * <code>INSTRUMENT_TYPE_SOUND_EFFECTS = 619;</code>
     */
    INSTRUMENT_TYPE_SOUND_EFFECTS(619),
    /**
     * <code>INSTRUMENT_TYPE_BASS_CITTERN = 620;</code>
     */
    INSTRUMENT_TYPE_BASS_CITTERN(620),
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_F_X = 621;</code>
     */
    INSTRUMENT_TYPE_SYNTH_F_X(621),
    /**
     * <code>INSTRUMENT_TYPE_LOWREY_ORGAN = 622;</code>
     */
    INSTRUMENT_TYPE_LOWREY_ORGAN(622),
    /**
     * <code>INSTRUMENT_TYPE_SISTRUM = 623;</code>
     */
    INSTRUMENT_TYPE_SISTRUM(623),
    /**
     * <code>INSTRUMENT_TYPE_TOMPAK = 624;</code>
     */
    INSTRUMENT_TYPE_TOMPAK(624),
    /**
     * <code>INSTRUMENT_TYPE_BASS_TROMBONE = 625;</code>
     */
    INSTRUMENT_TYPE_BASS_TROMBONE(625),
    /**
     * <code>INSTRUMENT_TYPE_FLOYERA = 626;</code>
     */
    INSTRUMENT_TYPE_FLOYERA(626),
    /**
     * <code>INSTRUMENT_TYPE_KNUCKLES = 627;</code>
     */
    INSTRUMENT_TYPE_KNUCKLES(627),
    /**
     * <code>INSTRUMENT_TYPE_CABASA = 628;</code>
     */
    INSTRUMENT_TYPE_CABASA(628),
    /**
     * <code>INSTRUMENT_TYPE_DOBRO_GUITAR = 629;</code>
     */
    INSTRUMENT_TYPE_DOBRO_GUITAR(629),
    /**
     * <code>INSTRUMENT_TYPE_CIMBALOM = 630;</code>
     */
    INSTRUMENT_TYPE_CIMBALOM(630),
    /**
     * <code>INSTRUMENT_TYPE_TZOURAS = 631;</code>
     */
    INSTRUMENT_TYPE_TZOURAS(631),
    /**
     * <code>INSTRUMENT_TYPE_BOZOQ = 632;</code>
     */
    INSTRUMENT_TYPE_BOZOQ(632),
    /**
     * <code>INSTRUMENT_TYPE_MARIMBA = 633;</code>
     */
    INSTRUMENT_TYPE_MARIMBA(633),
    /**
     * <code>INSTRUMENT_TYPE_ZEZE = 634;</code>
     */
    INSTRUMENT_TYPE_ZEZE(634),
    /**
     * <code>INSTRUMENT_TYPE_TENOR_RECORDER = 635;</code>
     */
    INSTRUMENT_TYPE_TENOR_RECORDER(635),
    /**
     * <code>INSTRUMENT_TYPE_MUSIC_BOX = 636;</code>
     */
    INSTRUMENT_TYPE_MUSIC_BOX(636),
    /**
     * <code>INSTRUMENT_TYPE_FORTEPIANO = 637;</code>
     */
    INSTRUMENT_TYPE_FORTEPIANO(637),
    /**
     * <code>INSTRUMENT_TYPE_PICCOLO_CLARINET = 638;</code>
     */
    INSTRUMENT_TYPE_PICCOLO_CLARINET(638),
    /**
     * <code>INSTRUMENT_TYPE_SPOONS = 639;</code>
     */
    INSTRUMENT_TYPE_SPOONS(639),
    /**
     * <code>INSTRUMENT_TYPE_HAND_CHIMES = 640;</code>
     */
    INSTRUMENT_TYPE_HAND_CHIMES(640),
    /**
     * <code>INSTRUMENT_TYPE_MIJWIZ = 641;</code>
     */
    INSTRUMENT_TYPE_MIJWIZ(641),
    /**
     * <code>INSTRUMENT_TYPE_RACKETT = 642;</code>
     */
    INSTRUMENT_TYPE_RACKETT(642),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_BASS_GUITAR = 643;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_BASS_GUITAR(643),
    /**
     * <code>INSTRUMENT_TYPE_PICCOLO_BASS = 644;</code>
     */
    INSTRUMENT_TYPE_PICCOLO_BASS(644),
    /**
     * <code>INSTRUMENT_TYPE_UDU = 645;</code>
     */
    INSTRUMENT_TYPE_UDU(645),
    /**
     * <code>INSTRUMENT_TYPE_OTHER_INSTRUMENT = 646;</code>
     */
    INSTRUMENT_TYPE_OTHER_INSTRUMENT(646),
    /**
     * <code>INSTRUMENT_TYPE_BASS_TRUMPET = 647;</code>
     */
    INSTRUMENT_TYPE_BASS_TRUMPET(647),
    /**
     * <code>INSTRUMENT_TYPE_BANSURI = 648;</code>
     */
    INSTRUMENT_TYPE_BANSURI(648),
    /**
     * <code>INSTRUMENT_TYPE_SQUARE_PIANO = 649;</code>
     */
    INSTRUMENT_TYPE_SQUARE_PIANO(649),
    /**
     * <code>INSTRUMENT_TYPE_HARPSICHORD = 650;</code>
     */
    INSTRUMENT_TYPE_HARPSICHORD(650),
    /**
     * <code>INSTRUMENT_TYPE_IRISH_BOUZOUKI = 651;</code>
     */
    INSTRUMENT_TYPE_IRISH_BOUZOUKI(651),
    /**
     * <code>INSTRUMENT_TYPE_RATTLE = 652;</code>
     */
    INSTRUMENT_TYPE_RATTLE(652),
    /**
     * <code>INSTRUMENT_TYPE_ENGLISH_HORN = 653;</code>
     */
    INSTRUMENT_TYPE_ENGLISH_HORN(653),
    /**
     * <code>INSTRUMENT_TYPE_SHOFAR = 654;</code>
     */
    INSTRUMENT_TYPE_SHOFAR(654),
    /**
     * <code>INSTRUMENT_TYPE_RAINSTICK = 655;</code>
     */
    INSTRUMENT_TYPE_RAINSTICK(655),
    /**
     * <code>INSTRUMENT_TYPE_CARILLON = 656;</code>
     */
    INSTRUMENT_TYPE_CARILLON(656),
    /**
     * <code>INSTRUMENT_TYPE_CORNETTO = 657;</code>
     */
    INSTRUMENT_TYPE_CORNETTO(657),
    /**
     * <code>INSTRUMENT_TYPE_GREAT_BASS_RECORDER = 658;</code>
     */
    INSTRUMENT_TYPE_GREAT_BASS_RECORDER(658),
    /**
     * <code>INSTRUMENT_TYPE_TEMPLE_BELL = 659;</code>
     */
    INSTRUMENT_TYPE_TEMPLE_BELL(659),
    /**
     * <code>INSTRUMENT_TYPE_MELLOTRON = 660;</code>
     */
    INSTRUMENT_TYPE_MELLOTRON(660),
    /**
     * <code>INSTRUMENT_TYPE_OBOE_D_AMORE = 661;</code>
     */
    INSTRUMENT_TYPE_OBOE_D_AMORE(661),
    /**
     * <code>INSTRUMENT_TYPE_CONCH_SHELL = 662;</code>
     */
    INSTRUMENT_TYPE_CONCH_SHELL(662),
    /**
     * <code>INSTRUMENT_TYPE_12__MINUS___STRING_GUITAR = 663;</code>
     */
    INSTRUMENT_TYPE_12__MINUS___STRING_GUITAR(663),
    /**
     * <code>INSTRUMENT_TYPE_SERPENT = 664;</code>
     */
    INSTRUMENT_TYPE_SERPENT(664),
    /**
     * <code>INSTRUMENT_TYPE_KHONG_WONG_LEK = 665;</code>
     */
    INSTRUMENT_TYPE_KHONG_WONG_LEK(665),
    /**
     * <code>INSTRUMENT_TYPE_CHURCH_BELLS = 666;</code>
     */
    INSTRUMENT_TYPE_CHURCH_BELLS(666),
    /**
     * <code>INSTRUMENT_TYPE_SAW = 667;</code>
     */
    INSTRUMENT_TYPE_SAW(667),
    /**
     * <code>INSTRUMENT_TYPE_PANDURA = 668;</code>
     */
    INSTRUMENT_TYPE_PANDURA(668),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_GUITAR = 669;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_GUITAR(669),
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_HARP = 670;</code>
     */
    INSTRUMENT_TYPE_ELECTRIC_HARP(670),
    /**
     * <code>INSTRUMENT_TYPE_BARYTON = 671;</code>
     */
    INSTRUMENT_TYPE_BARYTON(671),
    /**
     * <code>INSTRUMENT_TYPE_HOHNER_GUITARET = 672;</code>
     */
    INSTRUMENT_TYPE_HOHNER_GUITARET(672),
    /**
     * <code>INSTRUMENT_TYPE_RONDADOR = 673;</code>
     */
    INSTRUMENT_TYPE_RONDADOR(673),
    /**
     * <code>INSTRUMENT_TYPE_KUGO = 674;</code>
     */
    INSTRUMENT_TYPE_KUGO(674),
    /**
     * <code>INSTRUMENT_TYPE_BAHIAN_GUITAR = 675;</code>
     */
    INSTRUMENT_TYPE_BAHIAN_GUITAR(675),
    /**
     * <code>INSTRUMENT_TYPE_HI_HAT_CYMBAL = 676;</code>
     */
    INSTRUMENT_TYPE_HI_HAT_CYMBAL(676),
    /**
     * <code>INSTRUMENT_TYPE_WOOD_TRUMPET = 677;</code>
     */
    INSTRUMENT_TYPE_WOOD_TRUMPET(677),
    /**
     * <code>INSTRUMENT_TYPE_GAMELAN = 678;</code>
     */
    INSTRUMENT_TYPE_GAMELAN(678),
    /**
     * <code>INSTRUMENT_TYPE_ALTO_HORN = 679;</code>
     */
    INSTRUMENT_TYPE_ALTO_HORN(679),
    /**
     * <code>INSTRUMENT_TYPE_CLAVES = 680;</code>
     */
    INSTRUMENT_TYPE_CLAVES(680),
    /**
     * <code>INSTRUMENT_TYPE_VIOL = 681;</code>
     */
    INSTRUMENT_TYPE_VIOL(681),
    /**
     * <code>INSTRUMENT_TYPE_FLABIOL = 682;</code>
     */
    INSTRUMENT_TYPE_FLABIOL(682),
    /**
     * <code>INSTRUMENT_TYPE_DOUBLEBASS_VIOL = 683;</code>
     */
    INSTRUMENT_TYPE_DOUBLEBASS_VIOL(683),
    /**
     * <code>INSTRUMENT_TYPE_MAGNETIC_TAPE_TREATMENTS = 684;</code>
     */
    INSTRUMENT_TYPE_MAGNETIC_TAPE_TREATMENTS(684),
    /**
     * <code>INSTRUMENT_TYPE_LAP_STEEL_GUITAR = 685;</code>
     */
    INSTRUMENT_TYPE_LAP_STEEL_GUITAR(685),
    /**
     * <code>INSTRUMENT_TYPE_BASSET_HORN = 686;</code>
     */
    INSTRUMENT_TYPE_BASSET_HORN(686),
    /**
     * <code>INSTRUMENT_TYPE_CHALUMEAU = 687;</code>
     */
    INSTRUMENT_TYPE_CHALUMEAU(687),
    /**
     * <code>INSTRUMENT_TYPE_TIMBALES = 688;</code>
     */
    INSTRUMENT_TYPE_TIMBALES(688),
    /**
     * <code>INSTRUMENT_TYPE_BICYCLE_PUMP = 689;</code>
     */
    INSTRUMENT_TYPE_BICYCLE_PUMP(689),
    /**
     * <code>INSTRUMENT_TYPE_GLASS_HARMONICA = 690;</code>
     */
    INSTRUMENT_TYPE_GLASS_HARMONICA(690),
    /**
     * <code>INSTRUMENT_TYPE_JAKHAY = 691;</code>
     */
    INSTRUMENT_TYPE_JAKHAY(691),
    /**
     * <code>INSTRUMENT_TYPE_TIPLE = 692;</code>
     */
    INSTRUMENT_TYPE_TIPLE(692),
    /**
     * <code>INSTRUMENT_TYPE_FROG = 693;</code>
     */
    INSTRUMENT_TYPE_FROG(693),
    /**
     * <code>INSTRUMENT_TYPE_TUMBI = 694;</code>
     */
    INSTRUMENT_TYPE_TUMBI(694),
    /**
     * <code>INSTRUMENT_TYPE_SWARMANDAL = 695;</code>
     */
    INSTRUMENT_TYPE_SWARMANDAL(695),
    /**
     * <code>INSTRUMENT_TYPE_LUR = 696;</code>
     */
    INSTRUMENT_TYPE_LUR(696),
    /**
     * <code>INSTRUMENT_TYPE_TRES = 697;</code>
     */
    INSTRUMENT_TYPE_TRES(697),
    /**
     * <code>INSTRUMENT_TYPE_HAMMOND_ORGAN = 698;</code>
     */
    INSTRUMENT_TYPE_HAMMOND_ORGAN(698),
    /**
     * <code>INSTRUMENT_TYPE_PLUCKED_STRINGS = 699;</code>
     */
    INSTRUMENT_TYPE_PLUCKED_STRINGS(699),
    /**
     * <code>INSTRUMENT_TYPE_STRING_SECTION = 700;</code>
     */
    INSTRUMENT_TYPE_STRING_SECTION(700),
    /**
     * <code>INSTRUMENT_TYPE_ENNANGA = 701;</code>
     */
    INSTRUMENT_TYPE_ENNANGA(701),
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASSOON = 702;</code>
     */
    INSTRUMENT_TYPE_CONTRABASSOON(702),
    /**
     * <code>INSTRUMENT_TYPE_UPRIGHT_PIANO = 703;</code>
     */
    INSTRUMENT_TYPE_UPRIGHT_PIANO(703),
    /**
     * <code>INSTRUMENT_TYPE_DOMBRA = 704;</code>
     */
    INSTRUMENT_TYPE_DOMBRA(704),
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_RECORDER = 705;</code>
     */
    INSTRUMENT_TYPE_BAROQUE_RECORDER(705),
    /**
     * <code>INSTRUMENT_TYPE_ACOUSTIC_GUITAR = 706;</code>
     */
    INSTRUMENT_TYPE_ACOUSTIC_GUITAR(706),
    /**
     * <code>INSTRUMENT_TYPE_BASS_REBEC = 707;</code>
     */
    INSTRUMENT_TYPE_BASS_REBEC(707),
    ;

    /**
     * <code>INSTRUMENT_TYPE_KALIMBA = 0;</code>
     */
    public static final int INSTRUMENT_TYPE_KALIMBA_VALUE = 0;
    /**
     * <code>INSTRUMENT_TYPE_KHARTAL = 1;</code>
     */
    public static final int INSTRUMENT_TYPE_KHARTAL_VALUE = 1;
    /**
     * <code>INSTRUMENT_TYPE_XYLORIMBA = 2;</code>
     */
    public static final int INSTRUMENT_TYPE_XYLORIMBA_VALUE = 2;
    /**
     * <code>INSTRUMENT_TYPE_TIN_WHISTLE = 3;</code>
     */
    public static final int INSTRUMENT_TYPE_TIN_WHISTLE_VALUE = 3;
    /**
     * <code>INSTRUMENT_TYPE_DRUM_SAMPLE = 4;</code>
     */
    public static final int INSTRUMENT_TYPE_DRUM_SAMPLE_VALUE = 4;
    /**
     * <code>INSTRUMENT_TYPE_MIXED_VOICE = 5;</code>
     */
    public static final int INSTRUMENT_TYPE_MIXED_VOICE_VALUE = 5;
    /**
     * <code>INSTRUMENT_TYPE_CAIXA = 6;</code>
     */
    public static final int INSTRUMENT_TYPE_CAIXA_VALUE = 6;
    /**
     * <code>INSTRUMENT_TYPE_MANDOLINO = 7;</code>
     */
    public static final int INSTRUMENT_TYPE_MANDOLINO_VALUE = 7;
    /**
     * <code>INSTRUMENT_TYPE_CHROMATIC_HARMONICA = 8;</code>
     */
    public static final int INSTRUMENT_TYPE_CHROMATIC_HARMONICA_VALUE = 8;
    /**
     * <code>INSTRUMENT_TYPE_CHAMBERLIN = 9;</code>
     */
    public static final int INSTRUMENT_TYPE_CHAMBERLIN_VALUE = 9;
    /**
     * <code>INSTRUMENT_TYPE_JARANA_JAROCHA = 10;</code>
     */
    public static final int INSTRUMENT_TYPE_JARANA_JAROCHA_VALUE = 10;
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_STRINGS = 11;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTH_STRINGS_VALUE = 11;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_OBOE = 12;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_OBOE_VALUE = 12;
    /**
     * <code>INSTRUMENT_TYPE_DOUMBEK = 13;</code>
     */
    public static final int INSTRUMENT_TYPE_DOUMBEK_VALUE = 13;
    /**
     * <code>INSTRUMENT_TYPE_RNGA = 14;</code>
     */
    public static final int INSTRUMENT_TYPE_RNGA_VALUE = 14;
    /**
     * <code>INSTRUMENT_TYPE_AGOGO_BELLS = 15;</code>
     */
    public static final int INSTRUMENT_TYPE_AGOGO_BELLS_VALUE = 15;
    /**
     * <code>INSTRUMENT_TYPE_NYCKELHARPA = 16;</code>
     */
    public static final int INSTRUMENT_TYPE_NYCKELHARPA_VALUE = 16;
    /**
     * <code>INSTRUMENT_TYPE_BANJO_GUITAR = 17;</code>
     */
    public static final int INSTRUMENT_TYPE_BANJO_GUITAR_VALUE = 17;
    /**
     * <code>INSTRUMENT_TYPE_CONCERTINA = 18;</code>
     */
    public static final int INSTRUMENT_TYPE_CONCERTINA_VALUE = 18;
    /**
     * <code>INSTRUMENT_TYPE_BOTTLES = 19;</code>
     */
    public static final int INSTRUMENT_TYPE_BOTTLES_VALUE = 19;
    /**
     * <code>INSTRUMENT_TYPE_UKULELE = 20;</code>
     */
    public static final int INSTRUMENT_TYPE_UKULELE_VALUE = 20;
    /**
     * <code>INSTRUMENT_TYPE_CITTERN = 21;</code>
     */
    public static final int INSTRUMENT_TYPE_CITTERN_VALUE = 21;
    /**
     * <code>INSTRUMENT_TYPE_BASS_TUBA = 22;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_TUBA_VALUE = 22;
    /**
     * <code>INSTRUMENT_TYPE_JAM_BLOCK = 23;</code>
     */
    public static final int INSTRUMENT_TYPE_JAM_BLOCK_VALUE = 23;
    /**
     * <code>INSTRUMENT_TYPE_SARRUSOPHONE = 24;</code>
     */
    public static final int INSTRUMENT_TYPE_SARRUSOPHONE_VALUE = 24;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_FLUTE = 25;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_FLUTE_VALUE = 25;
    /**
     * <code>INSTRUMENT_TYPE_MARXOPHONE = 26;</code>
     */
    public static final int INSTRUMENT_TYPE_MARXOPHONE_VALUE = 26;
    /**
     * <code>INSTRUMENT_TYPE_ALBOKA = 27;</code>
     */
    public static final int INSTRUMENT_TYPE_ALBOKA_VALUE = 27;
    /**
     * <code>INSTRUMENT_TYPE_MOUTH_PERCUSSION = 28;</code>
     */
    public static final int INSTRUMENT_TYPE_MOUTH_PERCUSSION_VALUE = 28;
    /**
     * <code>INSTRUMENT_TYPE_SAROD = 29;</code>
     */
    public static final int INSTRUMENT_TYPE_SAROD_VALUE = 29;
    /**
     * <code>INSTRUMENT_TYPE_JAWHARP = 30;</code>
     */
    public static final int INSTRUMENT_TYPE_JAWHARP_VALUE = 30;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_SACKBUT = 31;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_SACKBUT_VALUE = 31;
    /**
     * <code>INSTRUMENT_TYPE_CHROMATIC_BUTTON_ACCORDION = 32;</code>
     */
    public static final int INSTRUMENT_TYPE_CHROMATIC_BUTTON_ACCORDION_VALUE = 32;
    /**
     * <code>INSTRUMENT_TYPE_PITCHED_PERCUSSION_INSTRUMENT = 33;</code>
     */
    public static final int INSTRUMENT_TYPE_PITCHED_PERCUSSION_INSTRUMENT_VALUE = 33;
    /**
     * <code>INSTRUMENT_TYPE_FINGER_SNAPS = 34;</code>
     */
    public static final int INSTRUMENT_TYPE_FINGER_SNAPS_VALUE = 34;
    /**
     * <code>INSTRUMENT_TYPE_PIANO_HARP = 35;</code>
     */
    public static final int INSTRUMENT_TYPE_PIANO_HARP_VALUE = 35;
    /**
     * <code>INSTRUMENT_TYPE_PAIXIAO = 36;</code>
     */
    public static final int INSTRUMENT_TYPE_PAIXIAO_VALUE = 36;
    /**
     * <code>INSTRUMENT_TYPE_HIGHLAND_PIPES = 37;</code>
     */
    public static final int INSTRUMENT_TYPE_HIGHLAND_PIPES_VALUE = 37;
    /**
     * <code>INSTRUMENT_TYPE_FIDDLE = 38;</code>
     */
    public static final int INSTRUMENT_TYPE_FIDDLE_VALUE = 38;
    /**
     * <code>INSTRUMENT_TYPE_KHOL = 39;</code>
     */
    public static final int INSTRUMENT_TYPE_KHOL_VALUE = 39;
    /**
     * <code>INSTRUMENT_TYPE_WOOD_FLUTE = 40;</code>
     */
    public static final int INSTRUMENT_TYPE_WOOD_FLUTE_VALUE = 40;
    /**
     * <code>INSTRUMENT_TYPE_DAVUL = 41;</code>
     */
    public static final int INSTRUMENT_TYPE_DAVUL_VALUE = 41;
    /**
     * <code>INSTRUMENT_TYPE_VIOLA_POMPOSA = 42;</code>
     */
    public static final int INSTRUMENT_TYPE_VIOLA_POMPOSA_VALUE = 42;
    /**
     * <code>INSTRUMENT_TYPE_ACOUSTIC_KEYBOARD = 43;</code>
     */
    public static final int INSTRUMENT_TYPE_ACOUSTIC_KEYBOARD_VALUE = 43;
    /**
     * <code>INSTRUMENT_TYPE_JAGDHORN = 44;</code>
     */
    public static final int INSTRUMENT_TYPE_JAGDHORN_VALUE = 44;
    /**
     * <code>INSTRUMENT_TYPE_WIND_SECTION = 45;</code>
     */
    public static final int INSTRUMENT_TYPE_WIND_SECTION_VALUE = 45;
    /**
     * <code>INSTRUMENT_TYPE_UPRIGHT_BASS = 46;</code>
     */
    public static final int INSTRUMENT_TYPE_UPRIGHT_BASS_VALUE = 46;
    /**
     * <code>INSTRUMENT_TYPE_SHEKERE = 47;</code>
     */
    public static final int INSTRUMENT_TYPE_SHEKERE_VALUE = 47;
    /**
     * <code>INSTRUMENT_TYPE_HAMMERED_DULCIMER = 48;</code>
     */
    public static final int INSTRUMENT_TYPE_HAMMERED_DULCIMER_VALUE = 48;
    /**
     * <code>INSTRUMENT_TYPE_BASSOON = 49;</code>
     */
    public static final int INSTRUMENT_TYPE_BASSOON_VALUE = 49;
    /**
     * <code>INSTRUMENT_TYPE_BANDONEON = 50;</code>
     */
    public static final int INSTRUMENT_TYPE_BANDONEON_VALUE = 50;
    /**
     * <code>INSTRUMENT_TYPE_DOHOL = 51;</code>
     */
    public static final int INSTRUMENT_TYPE_DOHOL_VALUE = 51;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_TROMBONE = 52;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_TROMBONE_VALUE = 52;
    /**
     * <code>INSTRUMENT_TYPE_SOUND_DESIGN = 53;</code>
     */
    public static final int INSTRUMENT_TYPE_SOUND_DESIGN_VALUE = 53;
    /**
     * <code>INSTRUMENT_TYPE_RAUSCHPFEIFE = 54;</code>
     */
    public static final int INSTRUMENT_TYPE_RAUSCHPFEIFE_VALUE = 54;
    /**
     * <code>INSTRUMENT_TYPE_FOLKLORIC_PERCUSSION = 55;</code>
     */
    public static final int INSTRUMENT_TYPE_FOLKLORIC_PERCUSSION_VALUE = 55;
    /**
     * <code>INSTRUMENT_TYPE_MALE_VOICE = 56;</code>
     */
    public static final int INSTRUMENT_TYPE_MALE_VOICE_VALUE = 56;
    /**
     * <code>INSTRUMENT_TYPE_DULCITONE = 57;</code>
     */
    public static final int INSTRUMENT_TYPE_DULCITONE_VALUE = 57;
    /**
     * <code>INSTRUMENT_TYPE_RECO_RECO = 58;</code>
     */
    public static final int INSTRUMENT_TYPE_RECO_RECO_VALUE = 58;
    /**
     * <code>INSTRUMENT_TYPE_CAVAQUINHO = 59;</code>
     */
    public static final int INSTRUMENT_TYPE_CAVAQUINHO_VALUE = 59;
    /**
     * <code>INSTRUMENT_TYPE_PREPARED_PIANO = 60;</code>
     */
    public static final int INSTRUMENT_TYPE_PREPARED_PIANO_VALUE = 60;
    /**
     * <code>INSTRUMENT_TYPE_JUG = 61;</code>
     */
    public static final int INSTRUMENT_TYPE_JUG_VALUE = 61;
    /**
     * <code>INSTRUMENT_TYPE_DUDUK = 62;</code>
     */
    public static final int INSTRUMENT_TYPE_DUDUK_VALUE = 62;
    /**
     * <code>INSTRUMENT_TYPE_CHILDRENS_BACKGROUND_VOCALIST = 63;</code>
     */
    public static final int INSTRUMENT_TYPE_CHILDRENS_BACKGROUND_VOCALIST_VALUE = 63;
    /**
     * <code>INSTRUMENT_TYPE_REBAB = 64;</code>
     */
    public static final int INSTRUMENT_TYPE_REBAB_VALUE = 64;
    /**
     * <code>INSTRUMENT_TYPE_HAEGEUM = 65;</code>
     */
    public static final int INSTRUMENT_TYPE_HAEGEUM_VALUE = 65;
    /**
     * <code>INSTRUMENT_TYPE_STROHL_VIOLIN = 66;</code>
     */
    public static final int INSTRUMENT_TYPE_STROHL_VIOLIN_VALUE = 66;
    /**
     * <code>INSTRUMENT_TYPE_EUPHONIUM = 67;</code>
     */
    public static final int INSTRUMENT_TYPE_EUPHONIUM_VALUE = 67;
    /**
     * <code>INSTRUMENT_TYPE_STRING_INSTRUMENT = 68;</code>
     */
    public static final int INSTRUMENT_TYPE_STRING_INSTRUMENT_VALUE = 68;
    /**
     * <code>INSTRUMENT_TYPE_SUONA = 69;</code>
     */
    public static final int INSTRUMENT_TYPE_SUONA_VALUE = 69;
    /**
     * <code>INSTRUMENT_TYPE_GEMSHORN = 70;</code>
     */
    public static final int INSTRUMENT_TYPE_GEMSHORN_VALUE = 70;
    /**
     * <code>INSTRUMENT_TYPE_NADASWARAM = 71;</code>
     */
    public static final int INSTRUMENT_TYPE_NADASWARAM_VALUE = 71;
    /**
     * <code>INSTRUMENT_TYPE_TACK_PIANO = 72;</code>
     */
    public static final int INSTRUMENT_TYPE_TACK_PIANO_VALUE = 72;
    /**
     * <code>INSTRUMENT_TYPE_HOT_FOUNTAIN_PEN = 73;</code>
     */
    public static final int INSTRUMENT_TYPE_HOT_FOUNTAIN_PEN_VALUE = 73;
    /**
     * <code>INSTRUMENT_TYPE_HAND_BELLS = 74;</code>
     */
    public static final int INSTRUMENT_TYPE_HAND_BELLS_VALUE = 74;
    /**
     * <code>INSTRUMENT_TYPE_BASSO_DA_BRACCIO = 75;</code>
     */
    public static final int INSTRUMENT_TYPE_BASSO_DA_BRACCIO_VALUE = 75;
    /**
     * <code>INSTRUMENT_TYPE_TURNTABLE = 76;</code>
     */
    public static final int INSTRUMENT_TYPE_TURNTABLE_VALUE = 76;
    /**
     * <code>INSTRUMENT_TYPE_CELESTA = 77;</code>
     */
    public static final int INSTRUMENT_TYPE_CELESTA_VALUE = 77;
    /**
     * <code>INSTRUMENT_TYPE_LIRONE = 78;</code>
     */
    public static final int INSTRUMENT_TYPE_LIRONE_VALUE = 78;
    /**
     * <code>INSTRUMENT_TYPE_JEWS_HARP = 79;</code>
     */
    public static final int INSTRUMENT_TYPE_JEWS_HARP_VALUE = 79;
    /**
     * <code>INSTRUMENT_TYPE_WOT = 80;</code>
     */
    public static final int INSTRUMENT_TYPE_WOT_VALUE = 80;
    /**
     * <code>INSTRUMENT_TYPE_OMNICHORD = 81;</code>
     */
    public static final int INSTRUMENT_TYPE_OMNICHORD_VALUE = 81;
    /**
     * <code>INSTRUMENT_TYPE_CALLIOPE = 82;</code>
     */
    public static final int INSTRUMENT_TYPE_CALLIOPE_VALUE = 82;
    /**
     * <code>INSTRUMENT_TYPE_CASTANET = 83;</code>
     */
    public static final int INSTRUMENT_TYPE_CASTANET_VALUE = 83;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_CLARINET = 84;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_CLARINET_VALUE = 84;
    /**
     * <code>INSTRUMENT_TYPE_UILLEAN_PIPES = 85;</code>
     */
    public static final int INSTRUMENT_TYPE_UILLEAN_PIPES_VALUE = 85;
    /**
     * <code>INSTRUMENT_TYPE_LYRE = 86;</code>
     */
    public static final int INSTRUMENT_TYPE_LYRE_VALUE = 86;
    /**
     * <code>INSTRUMENT_TYPE_SLIDE_TRUMPET = 87;</code>
     */
    public static final int INSTRUMENT_TYPE_SLIDE_TRUMPET_VALUE = 87;
    /**
     * <code>INSTRUMENT_TYPE_SPRING_DRUM = 88;</code>
     */
    public static final int INSTRUMENT_TYPE_SPRING_DRUM_VALUE = 88;
    /**
     * <code>INSTRUMENT_TYPE_GUIRO = 89;</code>
     */
    public static final int INSTRUMENT_TYPE_GUIRO_VALUE = 89;
    /**
     * <code>INSTRUMENT_TYPE_COWBELL = 90;</code>
     */
    public static final int INSTRUMENT_TYPE_COWBELL_VALUE = 90;
    /**
     * <code>INSTRUMENT_TYPE_FOLK_HARP = 91;</code>
     */
    public static final int INSTRUMENT_TYPE_FOLK_HARP_VALUE = 91;
    /**
     * <code>INSTRUMENT_TYPE_BOMBO_LEGUERO = 92;</code>
     */
    public static final int INSTRUMENT_TYPE_BOMBO_LEGUERO_VALUE = 92;
    /**
     * <code>INSTRUMENT_TYPE_BASS_SAXOPHONE = 93;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_SAXOPHONE_VALUE = 93;
    /**
     * <code>INSTRUMENT_TYPE_RATCHET = 94;</code>
     */
    public static final int INSTRUMENT_TYPE_RATCHET_VALUE = 94;
    /**
     * <code>INSTRUMENT_TYPE_ESRAJ = 95;</code>
     */
    public static final int INSTRUMENT_TYPE_ESRAJ_VALUE = 95;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_FLUTE = 96;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_FLUTE_VALUE = 96;
    /**
     * <code>INSTRUMENT_TYPE_KEMENCHE = 97;</code>
     */
    public static final int INSTRUMENT_TYPE_KEMENCHE_VALUE = 97;
    /**
     * <code>INSTRUMENT_TYPE_FRETLESS_BASS_GUITAR = 98;</code>
     */
    public static final int INSTRUMENT_TYPE_FRETLESS_BASS_GUITAR_VALUE = 98;
    /**
     * <code>INSTRUMENT_TYPE_GUIRA = 99;</code>
     */
    public static final int INSTRUMENT_TYPE_GUIRA_VALUE = 99;
    /**
     * <code>INSTRUMENT_TYPE_BARITONE_HORN = 100;</code>
     */
    public static final int INSTRUMENT_TYPE_BARITONE_HORN_VALUE = 100;
    /**
     * <code>INSTRUMENT_TYPE_BASSET_CLARINET = 101;</code>
     */
    public static final int INSTRUMENT_TYPE_BASSET_CLARINET_VALUE = 101;
    /**
     * <code>INSTRUMENT_TYPE_VALVE_TROMBONE = 102;</code>
     */
    public static final int INSTRUMENT_TYPE_VALVE_TROMBONE_VALUE = 102;
    /**
     * <code>INSTRUMENT_TYPE_SAXOPHONE = 103;</code>
     */
    public static final int INSTRUMENT_TYPE_SAXOPHONE_VALUE = 103;
    /**
     * <code>INSTRUMENT_TYPE_SHO = 104;</code>
     */
    public static final int INSTRUMENT_TYPE_SHO_VALUE = 104;
    /**
     * <code>INSTRUMENT_TYPE_DHOLAK = 105;</code>
     */
    public static final int INSTRUMENT_TYPE_DHOLAK_VALUE = 105;
    /**
     * <code>INSTRUMENT_TYPE_MRIDANGAM = 106;</code>
     */
    public static final int INSTRUMENT_TYPE_MRIDANGAM_VALUE = 106;
    /**
     * <code>INSTRUMENT_TYPE_REED_INSTRUMENT = 107;</code>
     */
    public static final int INSTRUMENT_TYPE_REED_INSTRUMENT_VALUE = 107;
    /**
     * <code>INSTRUMENT_TYPE_SHAWM = 108;</code>
     */
    public static final int INSTRUMENT_TYPE_SHAWM_VALUE = 108;
    /**
     * <code>INSTRUMENT_TYPE_CROTALES = 109;</code>
     */
    public static final int INSTRUMENT_TYPE_CROTALES_VALUE = 109;
    /**
     * <code>INSTRUMENT_TYPE_HAMMERED_STRINGS = 110;</code>
     */
    public static final int INSTRUMENT_TYPE_HAMMERED_STRINGS_VALUE = 110;
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_CLARINET = 111;</code>
     */
    public static final int INSTRUMENT_TYPE_CONTRABASS_CLARINET_VALUE = 111;
    /**
     * <code>INSTRUMENT_TYPE_BASS_BANJO = 112;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_BANJO_VALUE = 112;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_CRUMHORN = 113;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_CRUMHORN_VALUE = 113;
    /**
     * <code>INSTRUMENT_TYPE_TAROGATO = 114;</code>
     */
    public static final int INSTRUMENT_TYPE_TAROGATO_VALUE = 114;
    /**
     * <code>INSTRUMENT_TYPE_GASBA = 115;</code>
     */
    public static final int INSTRUMENT_TYPE_GASBA_VALUE = 115;
    /**
     * <code>INSTRUMENT_TYPE_RHYTHM_STICK = 116;</code>
     */
    public static final int INSTRUMENT_TYPE_RHYTHM_STICK_VALUE = 116;
    /**
     * <code>INSTRUMENT_TYPE_OBOROM_DRUM = 117;</code>
     */
    public static final int INSTRUMENT_TYPE_OBOROM_DRUM_VALUE = 117;
    /**
     * <code>INSTRUMENT_TYPE_APPLAUSE = 118;</code>
     */
    public static final int INSTRUMENT_TYPE_APPLAUSE_VALUE = 118;
    /**
     * <code>INSTRUMENT_TYPE_QUENA = 119;</code>
     */
    public static final int INSTRUMENT_TYPE_QUENA_VALUE = 119;
    /**
     * <code>INSTRUMENT_TYPE_BRAZILIAN_PERCUSSION = 120;</code>
     */
    public static final int INSTRUMENT_TYPE_BRAZILIAN_PERCUSSION_VALUE = 120;
    /**
     * <code>INSTRUMENT_TYPE_ALPENHORN = 121;</code>
     */
    public static final int INSTRUMENT_TYPE_ALPENHORN_VALUE = 121;
    /**
     * <code>INSTRUMENT_TYPE_ROTOTOMS = 122;</code>
     */
    public static final int INSTRUMENT_TYPE_ROTOTOMS_VALUE = 122;
    /**
     * <code>INSTRUMENT_TYPE_KATSA = 123;</code>
     */
    public static final int INSTRUMENT_TYPE_KATSA_VALUE = 123;
    /**
     * <code>INSTRUMENT_TYPE_CAXIXI = 124;</code>
     */
    public static final int INSTRUMENT_TYPE_CAXIXI_VALUE = 124;
    /**
     * <code>INSTRUMENT_TYPE_RANAT = 125;</code>
     */
    public static final int INSTRUMENT_TYPE_RANAT_VALUE = 125;
    /**
     * <code>INSTRUMENT_TYPE_FIFE = 126;</code>
     */
    public static final int INSTRUMENT_TYPE_FIFE_VALUE = 126;
    /**
     * <code>INSTRUMENT_TYPE_OPHICLEIDE = 127;</code>
     */
    public static final int INSTRUMENT_TYPE_OPHICLEIDE_VALUE = 127;
    /**
     * <code>INSTRUMENT_TYPE_VIOLA_CAIPIRA = 128;</code>
     */
    public static final int INSTRUMENT_TYPE_VIOLA_CAIPIRA_VALUE = 128;
    /**
     * <code>INSTRUMENT_TYPE_FINGER_CYMBALS = 129;</code>
     */
    public static final int INSTRUMENT_TYPE_FINGER_CYMBALS_VALUE = 129;
    /**
     * <code>INSTRUMENT_TYPE_HAND_CLAPS = 130;</code>
     */
    public static final int INSTRUMENT_TYPE_HAND_CLAPS_VALUE = 130;
    /**
     * <code>INSTRUMENT_TYPE_GUZHENG = 131;</code>
     */
    public static final int INSTRUMENT_TYPE_GUZHENG_VALUE = 131;
    /**
     * <code>INSTRUMENT_TYPE_VALIHA = 132;</code>
     */
    public static final int INSTRUMENT_TYPE_VALIHA_VALUE = 132;
    /**
     * <code>INSTRUMENT_TYPE_DIPLE = 133;</code>
     */
    public static final int INSTRUMENT_TYPE_DIPLE_VALUE = 133;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_TROMBONE = 134;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_TROMBONE_VALUE = 134;
    /**
     * <code>INSTRUMENT_TYPE_KACAPI = 135;</code>
     */
    public static final int INSTRUMENT_TYPE_KACAPI_VALUE = 135;
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_RECORDER = 136;</code>
     */
    public static final int INSTRUMENT_TYPE_CONTRABASS_RECORDER_VALUE = 136;
    /**
     * <code>INSTRUMENT_TYPE_GADULKA = 137;</code>
     */
    public static final int INSTRUMENT_TYPE_GADULKA_VALUE = 137;
    /**
     * <code>INSTRUMENT_TYPE_OCTOBAN = 138;</code>
     */
    public static final int INSTRUMENT_TYPE_OCTOBAN_VALUE = 138;
    /**
     * <code>INSTRUMENT_TYPE_CHOIR = 139;</code>
     */
    public static final int INSTRUMENT_TYPE_CHOIR_VALUE = 139;
    /**
     * <code>INSTRUMENT_TYPE_TABOR = 140;</code>
     */
    public static final int INSTRUMENT_TYPE_TABOR_VALUE = 140;
    /**
     * <code>INSTRUMENT_TYPE_DILRUBA = 141;</code>
     */
    public static final int INSTRUMENT_TYPE_DILRUBA_VALUE = 141;
    /**
     * <code>INSTRUMENT_TYPE_HUAPANGUERA = 142;</code>
     */
    public static final int INSTRUMENT_TYPE_HUAPANGUERA_VALUE = 142;
    /**
     * <code>INSTRUMENT_TYPE_HELICON = 143;</code>
     */
    public static final int INSTRUMENT_TYPE_HELICON_VALUE = 143;
    /**
     * <code>INSTRUMENT_TYPE_CLAPSTICK = 144;</code>
     */
    public static final int INSTRUMENT_TYPE_CLAPSTICK_VALUE = 144;
    /**
     * <code>INSTRUMENT_TYPE_VAKO_ORCHESTRON = 145;</code>
     */
    public static final int INSTRUMENT_TYPE_VAKO_ORCHESTRON_VALUE = 145;
    /**
     * <code>INSTRUMENT_TYPE_GROUP_BACKGROUND_VOCALISTS = 146;</code>
     */
    public static final int INSTRUMENT_TYPE_GROUP_BACKGROUND_VOCALISTS_VALUE = 146;
    /**
     * <code>INSTRUMENT_TYPE_CIMBASSO = 147;</code>
     */
    public static final int INSTRUMENT_TYPE_CIMBASSO_VALUE = 147;
    /**
     * <code>INSTRUMENT_TYPE_GONG = 148;</code>
     */
    public static final int INSTRUMENT_TYPE_GONG_VALUE = 148;
    /**
     * <code>INSTRUMENT_TYPE_ELEPHANT_BELL = 149;</code>
     */
    public static final int INSTRUMENT_TYPE_ELEPHANT_BELL_VALUE = 149;
    /**
     * <code>INSTRUMENT_TYPE_SINGING_BOWLS = 150;</code>
     */
    public static final int INSTRUMENT_TYPE_SINGING_BOWLS_VALUE = 150;
    /**
     * <code>INSTRUMENT_TYPE_TXALAPARTA = 151;</code>
     */
    public static final int INSTRUMENT_TYPE_TXALAPARTA_VALUE = 151;
    /**
     * <code>INSTRUMENT_TYPE_PLUCKED_DULCIMER = 152;</code>
     */
    public static final int INSTRUMENT_TYPE_PLUCKED_DULCIMER_VALUE = 152;
    /**
     * <code>INSTRUMENT_TYPE_TAR__FRB___STRING__BRB__ = 153;</code>
     */
    public static final int INSTRUMENT_TYPE_TAR__FRB___STRING__BRB___VALUE = 153;
    /**
     * <code>INSTRUMENT_TYPE_SNARE_DRUM__FRB___MARCHING__BRB__ = 154;</code>
     */
    public static final int INSTRUMENT_TYPE_SNARE_DRUM__FRB___MARCHING__BRB___VALUE = 154;
    /**
     * <code>INSTRUMENT_TYPE_GAMBANG = 155;</code>
     */
    public static final int INSTRUMENT_TYPE_GAMBANG_VALUE = 155;
    /**
     * <code>INSTRUMENT_TYPE_LEAD_VOCALIST = 156;</code>
     */
    public static final int INSTRUMENT_TYPE_LEAD_VOCALIST_VALUE = 156;
    /**
     * <code>INSTRUMENT_TYPE_RECORDER = 157;</code>
     */
    public static final int INSTRUMENT_TYPE_RECORDER_VALUE = 157;
    /**
     * <code>INSTRUMENT_TYPE_MANDOCELLO = 158;</code>
     */
    public static final int INSTRUMENT_TYPE_MANDOCELLO_VALUE = 158;
    /**
     * <code>INSTRUMENT_TYPE_XALAM = 159;</code>
     */
    public static final int INSTRUMENT_TYPE_XALAM_VALUE = 159;
    /**
     * <code>INSTRUMENT_TYPE_BUFO_BASS = 160;</code>
     */
    public static final int INSTRUMENT_TYPE_BUFO_BASS_VALUE = 160;
    /**
     * <code>INSTRUMENT_TYPE_DOUBLE_VIOLIN = 161;</code>
     */
    public static final int INSTRUMENT_TYPE_DOUBLE_VIOLIN_VALUE = 161;
    /**
     * <code>INSTRUMENT_TYPE_TREBLE_VIOL = 162;</code>
     */
    public static final int INSTRUMENT_TYPE_TREBLE_VIOL_VALUE = 162;
    /**
     * <code>INSTRUMENT_TYPE_TAROL = 163;</code>
     */
    public static final int INSTRUMENT_TYPE_TAROL_VALUE = 163;
    /**
     * <code>INSTRUMENT_TYPE_ARPEGGIATING_SYNTH = 164;</code>
     */
    public static final int INSTRUMENT_TYPE_ARPEGGIATING_SYNTH_VALUE = 164;
    /**
     * <code>INSTRUMENT_TYPE_XUN = 165;</code>
     */
    public static final int INSTRUMENT_TYPE_XUN_VALUE = 165;
    /**
     * <code>INSTRUMENT_TYPE_GUACHARACA = 166;</code>
     */
    public static final int INSTRUMENT_TYPE_GUACHARACA_VALUE = 166;
    /**
     * <code>INSTRUMENT_TYPE_REPINIQUE = 167;</code>
     */
    public static final int INSTRUMENT_TYPE_REPINIQUE_VALUE = 167;
    /**
     * <code>INSTRUMENT_TYPE_CELLO = 168;</code>
     */
    public static final int INSTRUMENT_TYPE_CELLO_VALUE = 168;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANINO_RECORDER = 169;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANINO_RECORDER_VALUE = 169;
    /**
     * <code>INSTRUMENT_TYPE_BAGPIPES = 170;</code>
     */
    public static final int INSTRUMENT_TYPE_BAGPIPES_VALUE = 170;
    /**
     * <code>INSTRUMENT_TYPE_BARITONE_SAXOPHONE = 171;</code>
     */
    public static final int INSTRUMENT_TYPE_BARITONE_SAXOPHONE_VALUE = 171;
    /**
     * <code>INSTRUMENT_TYPE_SHRUTI_BOX = 172;</code>
     */
    public static final int INSTRUMENT_TYPE_SHRUTI_BOX_VALUE = 172;
    /**
     * <code>INSTRUMENT_TYPE_PIANOLA = 173;</code>
     */
    public static final int INSTRUMENT_TYPE_PIANOLA_VALUE = 173;
    /**
     * <code>INSTRUMENT_TYPE_NAI = 174;</code>
     */
    public static final int INSTRUMENT_TYPE_NAI_VALUE = 174;
    /**
     * <code>INSTRUMENT_TYPE_EKTARA = 175;</code>
     */
    public static final int INSTRUMENT_TYPE_EKTARA_VALUE = 175;
    /**
     * <code>INSTRUMENT_TYPE_RIQ = 176;</code>
     */
    public static final int INSTRUMENT_TYPE_RIQ_VALUE = 176;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_CRUMHORN = 177;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_CRUMHORN_VALUE = 177;
    /**
     * <code>INSTRUMENT_TYPE_ORPHARION = 178;</code>
     */
    public static final int INSTRUMENT_TYPE_ORPHARION_VALUE = 178;
    /**
     * <code>INSTRUMENT_TYPE_ZUMMARA = 179;</code>
     */
    public static final int INSTRUMENT_TYPE_ZUMMARA_VALUE = 179;
    /**
     * <code>INSTRUMENT_TYPE_FUJARA = 180;</code>
     */
    public static final int INSTRUMENT_TYPE_FUJARA_VALUE = 180;
    /**
     * <code>INSTRUMENT_TYPE_BIRD_WHISTLE = 181;</code>
     */
    public static final int INSTRUMENT_TYPE_BIRD_WHISTLE_VALUE = 181;
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_CHOIR = 182;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTH_CHOIR_VALUE = 182;
    /**
     * <code>INSTRUMENT_TYPE_DEFI = 183;</code>
     */
    public static final int INSTRUMENT_TYPE_DEFI_VALUE = 183;
    /**
     * <code>INSTRUMENT_TYPE_VIELLE = 184;</code>
     */
    public static final int INSTRUMENT_TYPE_VIELLE_VALUE = 184;
    /**
     * <code>INSTRUMENT_TYPE_PHONOFIDDLE = 185;</code>
     */
    public static final int INSTRUMENT_TYPE_PHONOFIDDLE_VALUE = 185;
    /**
     * <code>INSTRUMENT_TYPE_WIND_CHIMES = 186;</code>
     */
    public static final int INSTRUMENT_TYPE_WIND_CHIMES_VALUE = 186;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC6_STRING_VIOLIN = 187;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC6_STRING_VIOLIN_VALUE = 187;
    /**
     * <code>INSTRUMENT_TYPE_SARANGI = 188;</code>
     */
    public static final int INSTRUMENT_TYPE_SARANGI_VALUE = 188;
    /**
     * <code>INSTRUMENT_TYPE_SHENAI = 189;</code>
     */
    public static final int INSTRUMENT_TYPE_SHENAI_VALUE = 189;
    /**
     * <code>INSTRUMENT_TYPE_EPINETTE_DES_VOSGES = 190;</code>
     */
    public static final int INSTRUMENT_TYPE_EPINETTE_DES_VOSGES_VALUE = 190;
    /**
     * <code>INSTRUMENT_TYPE_BASS_DULCIAN = 191;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_DULCIAN_VALUE = 191;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_GUITAR = 192;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_GUITAR_VALUE = 192;
    /**
     * <code>INSTRUMENT_TYPE_BUGLE = 193;</code>
     */
    public static final int INSTRUMENT_TYPE_BUGLE_VALUE = 193;
    /**
     * <code>INSTRUMENT_TYPE_PUNGI = 194;</code>
     */
    public static final int INSTRUMENT_TYPE_PUNGI_VALUE = 194;
    /**
     * <code>INSTRUMENT_TYPE_PHIN = 195;</code>
     */
    public static final int INSTRUMENT_TYPE_PHIN_VALUE = 195;
    /**
     * <code>INSTRUMENT_TYPE_NAAL = 196;</code>
     */
    public static final int INSTRUMENT_TYPE_NAAL_VALUE = 196;
    /**
     * <code>INSTRUMENT_TYPE_YANGQIN = 197;</code>
     */
    public static final int INSTRUMENT_TYPE_YANGQIN_VALUE = 197;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_SACKBUT = 198;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_SACKBUT_VALUE = 198;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_CLARINET = 199;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_CLARINET_VALUE = 199;
    /**
     * <code>INSTRUMENT_TYPE_OCARINA = 200;</code>
     */
    public static final int INSTRUMENT_TYPE_OCARINA_VALUE = 200;
    /**
     * <code>INSTRUMENT_TYPE_SAMPLED_KEYBOARD = 201;</code>
     */
    public static final int INSTRUMENT_TYPE_SAMPLED_KEYBOARD_VALUE = 201;
    /**
     * <code>INSTRUMENT_TYPE_CLARINO_TRUMPET = 202;</code>
     */
    public static final int INSTRUMENT_TYPE_CLARINO_TRUMPET_VALUE = 202;
    /**
     * <code>INSTRUMENT_TYPE_KENDANG = 203;</code>
     */
    public static final int INSTRUMENT_TYPE_KENDANG_VALUE = 203;
    /**
     * <code>INSTRUMENT_TYPE_DOMRA = 204;</code>
     */
    public static final int INSTRUMENT_TYPE_DOMRA_VALUE = 204;
    /**
     * <code>INSTRUMENT_TYPE_SAW_DUANG = 205;</code>
     */
    public static final int INSTRUMENT_TYPE_SAW_DUANG_VALUE = 205;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_RECORDER = 206;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_RECORDER_VALUE = 206;
    /**
     * <code>INSTRUMENT_TYPE_CRUMHORN = 207;</code>
     */
    public static final int INSTRUMENT_TYPE_CRUMHORN_VALUE = 207;
    /**
     * <code>INSTRUMENT_TYPE_TAIKO = 208;</code>
     */
    public static final int INSTRUMENT_TYPE_TAIKO_VALUE = 208;
    /**
     * <code>INSTRUMENT_TYPE_BASS_CLARINET = 209;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_CLARINET_VALUE = 209;
    /**
     * <code>INSTRUMENT_TYPE_BALAFON = 210;</code>
     */
    public static final int INSTRUMENT_TYPE_BALAFON_VALUE = 210;
    /**
     * <code>INSTRUMENT_TYPE_MADAL = 211;</code>
     */
    public static final int INSTRUMENT_TYPE_MADAL_VALUE = 211;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_MANDOLIN = 212;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_MANDOLIN_VALUE = 212;
    /**
     * <code>INSTRUMENT_TYPE_KHLUI = 213;</code>
     */
    public static final int INSTRUMENT_TYPE_KHLUI_VALUE = 213;
    /**
     * <code>INSTRUMENT_TYPE_HARP = 214;</code>
     */
    public static final int INSTRUMENT_TYPE_HARP_VALUE = 214;
    /**
     * <code>INSTRUMENT_TYPE_VIBRASLAP = 215;</code>
     */
    public static final int INSTRUMENT_TYPE_VIBRASLAP_VALUE = 215;
    /**
     * <code>INSTRUMENT_TYPE_ORGANISTRUM = 216;</code>
     */
    public static final int INSTRUMENT_TYPE_ORGANISTRUM_VALUE = 216;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_SHAWM = 217;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_SHAWM_VALUE = 217;
    /**
     * <code>INSTRUMENT_TYPE_MANDORE = 218;</code>
     */
    public static final int INSTRUMENT_TYPE_MANDORE_VALUE = 218;
    /**
     * <code>INSTRUMENT_TYPE_SULING = 219;</code>
     */
    public static final int INSTRUMENT_TYPE_SULING_VALUE = 219;
    /**
     * <code>INSTRUMENT_TYPE_GARDON = 220;</code>
     */
    public static final int INSTRUMENT_TYPE_GARDON_VALUE = 220;
    /**
     * <code>INSTRUMENT_TYPE_LYRA_VIOL = 221;</code>
     */
    public static final int INSTRUMENT_TYPE_LYRA_VIOL_VALUE = 221;
    /**
     * <code>INSTRUMENT_TYPE_ZURNA = 222;</code>
     */
    public static final int INSTRUMENT_TYPE_ZURNA_VALUE = 222;
    /**
     * <code>INSTRUMENT_TYPE_RHODES = 223;</code>
     */
    public static final int INSTRUMENT_TYPE_RHODES_VALUE = 223;
    /**
     * <code>INSTRUMENT_TYPE_NEY_FLUTE = 224;</code>
     */
    public static final int INSTRUMENT_TYPE_NEY_FLUTE_VALUE = 224;
    /**
     * <code>INSTRUMENT_TYPE_MINIATURE_KHENE = 225;</code>
     */
    public static final int INSTRUMENT_TYPE_MINIATURE_KHENE_VALUE = 225;
    /**
     * <code>INSTRUMENT_TYPE_ZERBAGHALI = 226;</code>
     */
    public static final int INSTRUMENT_TYPE_ZERBAGHALI_VALUE = 226;
    /**
     * <code>INSTRUMENT_TYPE_PIANET = 227;</code>
     */
    public static final int INSTRUMENT_TYPE_PIANET_VALUE = 227;
    /**
     * <code>INSTRUMENT_TYPE_CLAVINET = 228;</code>
     */
    public static final int INSTRUMENT_TYPE_CLAVINET_VALUE = 228;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_DOMRA = 229;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_DOMRA_VALUE = 229;
    /**
     * <code>INSTRUMENT_TYPE_CAJON = 230;</code>
     */
    public static final int INSTRUMENT_TYPE_CAJON_VALUE = 230;
    /**
     * <code>INSTRUMENT_TYPE_5__MINUS___STRING_BANJO = 231;</code>
     */
    public static final int INSTRUMENT_TYPE_5__MINUS___STRING_BANJO_VALUE = 231;
    /**
     * <code>INSTRUMENT_TYPE_SNARE_DRUM = 232;</code>
     */
    public static final int INSTRUMENT_TYPE_SNARE_DRUM_VALUE = 232;
    /**
     * <code>INSTRUMENT_TYPE_DZUDDAHORD = 233;</code>
     */
    public static final int INSTRUMENT_TYPE_DZUDDAHORD_VALUE = 233;
    /**
     * <code>INSTRUMENT_TYPE_BINGHI_DRUM = 234;</code>
     */
    public static final int INSTRUMENT_TYPE_BINGHI_DRUM_VALUE = 234;
    /**
     * <code>INSTRUMENT_TYPE_DAMARU = 235;</code>
     */
    public static final int INSTRUMENT_TYPE_DAMARU_VALUE = 235;
    /**
     * <code>INSTRUMENT_TYPE_BOWED_STRINGS = 236;</code>
     */
    public static final int INSTRUMENT_TYPE_BOWED_STRINGS_VALUE = 236;
    /**
     * <code>INSTRUMENT_TYPE_PUMP_ORGAN = 237;</code>
     */
    public static final int INSTRUMENT_TYPE_PUMP_ORGAN_VALUE = 237;
    /**
     * <code>INSTRUMENT_TYPE_GUACHE = 238;</code>
     */
    public static final int INSTRUMENT_TYPE_GUACHE_VALUE = 238;
    /**
     * <code>INSTRUMENT_TYPE_BASS_VIOL = 239;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_VIOL_VALUE = 239;
    /**
     * <code>INSTRUMENT_TYPE_TAMBOURINE = 240;</code>
     */
    public static final int INSTRUMENT_TYPE_TAMBOURINE_VALUE = 240;
    /**
     * <code>INSTRUMENT_TYPE_MELLOPHONE = 241;</code>
     */
    public static final int INSTRUMENT_TYPE_MELLOPHONE_VALUE = 241;
    /**
     * <code>INSTRUMENT_TYPE_BIWA = 242;</code>
     */
    public static final int INSTRUMENT_TYPE_BIWA_VALUE = 242;
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_SARRUSOPHONE = 243;</code>
     */
    public static final int INSTRUMENT_TYPE_CONTRABASS_SARRUSOPHONE_VALUE = 243;
    /**
     * <code>INSTRUMENT_TYPE_WAGNER_TUBA = 244;</code>
     */
    public static final int INSTRUMENT_TYPE_WAGNER_TUBA_VALUE = 244;
    /**
     * <code>INSTRUMENT_TYPE_IRISH_LOW_WHISTLE = 245;</code>
     */
    public static final int INSTRUMENT_TYPE_IRISH_LOW_WHISTLE_VALUE = 245;
    /**
     * <code>INSTRUMENT_TYPE_PICCOLO_TRUMPET = 246;</code>
     */
    public static final int INSTRUMENT_TYPE_PICCOLO_TRUMPET_VALUE = 246;
    /**
     * <code>INSTRUMENT_TYPE_SHELLTONE = 247;</code>
     */
    public static final int INSTRUMENT_TYPE_SHELLTONE_VALUE = 247;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_VIOL = 248;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_VIOL_VALUE = 248;
    /**
     * <code>INSTRUMENT_TYPE_TAONGA_PUORO = 249;</code>
     */
    public static final int INSTRUMENT_TYPE_TAONGA_PUORO_VALUE = 249;
    /**
     * <code>INSTRUMENT_TYPE_NATIVE_AMERICAN_FLUTE = 250;</code>
     */
    public static final int INSTRUMENT_TYPE_NATIVE_AMERICAN_FLUTE_VALUE = 250;
    /**
     * <code>INSTRUMENT_TYPE_CELTIC_HARP = 251;</code>
     */
    public static final int INSTRUMENT_TYPE_CELTIC_HARP_VALUE = 251;
    /**
     * <code>INSTRUMENT_TYPE_GUSLI = 252;</code>
     */
    public static final int INSTRUMENT_TYPE_GUSLI_VALUE = 252;
    /**
     * <code>INSTRUMENT_TYPE_GUNSHOTS = 253;</code>
     */
    public static final int INSTRUMENT_TYPE_GUNSHOTS_VALUE = 253;
    /**
     * <code>INSTRUMENT_TYPE_TUSSELFLOYTE = 254;</code>
     */
    public static final int INSTRUMENT_TYPE_TUSSELFLOYTE_VALUE = 254;
    /**
     * <code>INSTRUMENT_TYPE_ORGAN = 255;</code>
     */
    public static final int INSTRUMENT_TYPE_ORGAN_VALUE = 255;
    /**
     * <code>INSTRUMENT_TYPE_DULCIAN = 256;</code>
     */
    public static final int INSTRUMENT_TYPE_DULCIAN_VALUE = 256;
    /**
     * <code>INSTRUMENT_TYPE_HERALD_TRUMPET = 257;</code>
     */
    public static final int INSTRUMENT_TYPE_HERALD_TRUMPET_VALUE = 257;
    /**
     * <code>INSTRUMENT_TYPE_TAMBORA = 258;</code>
     */
    public static final int INSTRUMENT_TYPE_TAMBORA_VALUE = 258;
    /**
     * <code>INSTRUMENT_TYPE_VIRGINALS = 259;</code>
     */
    public static final int INSTRUMENT_TYPE_VIRGINALS_VALUE = 259;
    /**
     * <code>INSTRUMENT_TYPE_ANIMAL_SOUNDS = 260;</code>
     */
    public static final int INSTRUMENT_TYPE_ANIMAL_SOUNDS_VALUE = 260;
    /**
     * <code>INSTRUMENT_TYPE_NGONI = 261;</code>
     */
    public static final int INSTRUMENT_TYPE_NGONI_VALUE = 261;
    /**
     * <code>INSTRUMENT_TYPE_CONCERT_HARP = 262;</code>
     */
    public static final int INSTRUMENT_TYPE_CONCERT_HARP_VALUE = 262;
    /**
     * <code>INSTRUMENT_TYPE_AULOCHROME = 263;</code>
     */
    public static final int INSTRUMENT_TYPE_AULOCHROME_VALUE = 263;
    /**
     * <code>INSTRUMENT_TYPE_12__MINUS___STRING_ELECTRIC_GUITAR = 264;</code>
     */
    public static final int INSTRUMENT_TYPE_12__MINUS___STRING_ELECTRIC_GUITAR_VALUE = 264;
    /**
     * <code>INSTRUMENT_TYPE_PARAGUAYAN_HARP = 265;</code>
     */
    public static final int INSTRUMENT_TYPE_PARAGUAYAN_HARP_VALUE = 265;
    /**
     * <code>INSTRUMENT_TYPE_PONG_LANG = 266;</code>
     */
    public static final int INSTRUMENT_TYPE_PONG_LANG_VALUE = 266;
    /**
     * <code>INSTRUMENT_TYPE_THAVIL = 267;</code>
     */
    public static final int INSTRUMENT_TYPE_THAVIL_VALUE = 267;
    /**
     * <code>INSTRUMENT_TYPE_CHEWING_SOUNDS = 268;</code>
     */
    public static final int INSTRUMENT_TYPE_CHEWING_SOUNDS_VALUE = 268;
    /**
     * <code>INSTRUMENT_TYPE_BANJOLIN = 269;</code>
     */
    public static final int INSTRUMENT_TYPE_BANJOLIN_VALUE = 269;
    /**
     * <code>INSTRUMENT_TYPE_WASHBOARD = 270;</code>
     */
    public static final int INSTRUMENT_TYPE_WASHBOARD_VALUE = 270;
    /**
     * <code>INSTRUMENT_TYPE_GUQIN = 271;</code>
     */
    public static final int INSTRUMENT_TYPE_GUQIN_VALUE = 271;
    /**
     * <code>INSTRUMENT_TYPE_FRYING_PAN_GUITAR = 272;</code>
     */
    public static final int INSTRUMENT_TYPE_FRYING_PAN_GUITAR_VALUE = 272;
    /**
     * <code>INSTRUMENT_TYPE_ATUMPAN = 273;</code>
     */
    public static final int INSTRUMENT_TYPE_ATUMPAN_VALUE = 273;
    /**
     * <code>INSTRUMENT_TYPE_GLASS_HARP = 274;</code>
     */
    public static final int INSTRUMENT_TYPE_GLASS_HARP_VALUE = 274;
    /**
     * <code>INSTRUMENT_TYPE_LATIN_PERCUSSION = 275;</code>
     */
    public static final int INSTRUMENT_TYPE_LATIN_PERCUSSION_VALUE = 275;
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_TROMBONE = 276;</code>
     */
    public static final int INSTRUMENT_TYPE_CONTRABASS_TROMBONE_VALUE = 276;
    /**
     * <code>INSTRUMENT_TYPE_POLICE_WHISTLE = 277;</code>
     */
    public static final int INSTRUMENT_TYPE_POLICE_WHISTLE_VALUE = 277;
    /**
     * <code>INSTRUMENT_TYPE_DHOL = 278;</code>
     */
    public static final int INSTRUMENT_TYPE_DHOL_VALUE = 278;
    /**
     * <code>INSTRUMENT_TYPE_WASHTUB_BASS = 279;</code>
     */
    public static final int INSTRUMENT_TYPE_WASHTUB_BASS_VALUE = 279;
    /**
     * <code>INSTRUMENT_TYPE_NATURAL_HORN = 280;</code>
     */
    public static final int INSTRUMENT_TYPE_NATURAL_HORN_VALUE = 280;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_GUITAR = 281;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_GUITAR_VALUE = 281;
    /**
     * <code>INSTRUMENT_TYPE_DRUM_MACHINE = 282;</code>
     */
    public static final int INSTRUMENT_TYPE_DRUM_MACHINE_VALUE = 282;
    /**
     * <code>INSTRUMENT_TYPE_BONGOS = 283;</code>
     */
    public static final int INSTRUMENT_TYPE_BONGOS_VALUE = 283;
    /**
     * <code>INSTRUMENT_TYPE_GERMAN_FLUTE = 284;</code>
     */
    public static final int INSTRUMENT_TYPE_GERMAN_FLUTE_VALUE = 284;
    /**
     * <code>INSTRUMENT_TYPE_KAVAL = 285;</code>
     */
    public static final int INSTRUMENT_TYPE_KAVAL_VALUE = 285;
    /**
     * <code>INSTRUMENT_TYPE_TOMS = 286;</code>
     */
    public static final int INSTRUMENT_TYPE_TOMS_VALUE = 286;
    /**
     * <code>INSTRUMENT_TYPE_VIOLA_D_AMORE = 287;</code>
     */
    public static final int INSTRUMENT_TYPE_VIOLA_D_AMORE_VALUE = 287;
    /**
     * <code>INSTRUMENT_TYPE_VIOLIN = 288;</code>
     */
    public static final int INSTRUMENT_TYPE_VIOLIN_VALUE = 288;
    /**
     * <code>INSTRUMENT_TYPE_SITAR = 289;</code>
     */
    public static final int INSTRUMENT_TYPE_SITAR_VALUE = 289;
    /**
     * <code>INSTRUMENT_TYPE_BASS_HARMONICA = 290;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_HARMONICA_VALUE = 290;
    /**
     * <code>INSTRUMENT_TYPE_MOUTH_ORGAN = 291;</code>
     */
    public static final int INSTRUMENT_TYPE_MOUTH_ORGAN_VALUE = 291;
    /**
     * <code>INSTRUMENT_TYPE_MARIMBAPHONE = 292;</code>
     */
    public static final int INSTRUMENT_TYPE_MARIMBAPHONE_VALUE = 292;
    /**
     * <code>INSTRUMENT_TYPE_BOY_VOICE = 293;</code>
     */
    public static final int INSTRUMENT_TYPE_BOY_VOICE_VALUE = 293;
    /**
     * <code>INSTRUMENT_TYPE_KHAMAK = 294;</code>
     */
    public static final int INSTRUMENT_TYPE_KHAMAK_VALUE = 294;
    /**
     * <code>INSTRUMENT_TYPE_PIANO = 295;</code>
     */
    public static final int INSTRUMENT_TYPE_PIANO_VALUE = 295;
    /**
     * <code>INSTRUMENT_TYPE_CUATRO = 296;</code>
     */
    public static final int INSTRUMENT_TYPE_CUATRO_VALUE = 296;
    /**
     * <code>INSTRUMENT_TYPE_VIOLINO_PICCOLO = 297;</code>
     */
    public static final int INSTRUMENT_TYPE_VIOLINO_PICCOLO_VALUE = 297;
    /**
     * <code>INSTRUMENT_TYPE_ZYDECO_RUBBOARD = 298;</code>
     */
    public static final int INSTRUMENT_TYPE_ZYDECO_RUBBOARD_VALUE = 298;
    /**
     * <code>INSTRUMENT_TYPE_BABY_BASS = 299;</code>
     */
    public static final int INSTRUMENT_TYPE_BABY_BASS_VALUE = 299;
    /**
     * <code>INSTRUMENT_TYPE_TAARIJA = 300;</code>
     */
    public static final int INSTRUMENT_TYPE_TAARIJA_VALUE = 300;
    /**
     * <code>INSTRUMENT_TYPE_DOUBLE_HARP = 301;</code>
     */
    public static final int INSTRUMENT_TYPE_DOUBLE_HARP_VALUE = 301;
    /**
     * <code>INSTRUMENT_TYPE_MANDOLELE = 302;</code>
     */
    public static final int INSTRUMENT_TYPE_MANDOLELE_VALUE = 302;
    /**
     * <code>INSTRUMENT_TYPE_GIRL_VOICE = 303;</code>
     */
    public static final int INSTRUMENT_TYPE_GIRL_VOICE_VALUE = 303;
    /**
     * <code>INSTRUMENT_TYPE_TROMBONE = 304;</code>
     */
    public static final int INSTRUMENT_TYPE_TROMBONE_VALUE = 304;
    /**
     * <code>INSTRUMENT_TYPE_AFRICAN_HARP = 305;</code>
     */
    public static final int INSTRUMENT_TYPE_AFRICAN_HARP_VALUE = 305;
    /**
     * <code>INSTRUMENT_TYPE_SHAKER = 306;</code>
     */
    public static final int INSTRUMENT_TYPE_SHAKER_VALUE = 306;
    /**
     * <code>INSTRUMENT_TYPE_PIANO_ACCORDION = 307;</code>
     */
    public static final int INSTRUMENT_TYPE_PIANO_ACCORDION_VALUE = 307;
    /**
     * <code>INSTRUMENT_TYPE_ORCHESTRAL_HIT = 308;</code>
     */
    public static final int INSTRUMENT_TYPE_ORCHESTRAL_HIT_VALUE = 308;
    /**
     * <code>INSTRUMENT_TYPE_TIMBAU = 309;</code>
     */
    public static final int INSTRUMENT_TYPE_TIMBAU_VALUE = 309;
    /**
     * <code>INSTRUMENT_TYPE_HARMONICA = 310;</code>
     */
    public static final int INSTRUMENT_TYPE_HARMONICA_VALUE = 310;
    /**
     * <code>INSTRUMENT_TYPE_RECORD_NOISE = 311;</code>
     */
    public static final int INSTRUMENT_TYPE_RECORD_NOISE_VALUE = 311;
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_STEEL_DRUMS = 312;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTH_STEEL_DRUMS_VALUE = 312;
    /**
     * <code>INSTRUMENT_TYPE_BONES = 313;</code>
     */
    public static final int INSTRUMENT_TYPE_BONES_VALUE = 313;
    /**
     * <code>INSTRUMENT_TYPE_CRWTH = 314;</code>
     */
    public static final int INSTRUMENT_TYPE_CRWTH_VALUE = 314;
    /**
     * <code>INSTRUMENT_TYPE_GYALING = 315;</code>
     */
    public static final int INSTRUMENT_TYPE_GYALING_VALUE = 315;
    /**
     * <code>INSTRUMENT_TYPE_SYNTHESIZER = 316;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTHESIZER_VALUE = 316;
    /**
     * <code>INSTRUMENT_TYPE_BARITONE_GUITAR = 317;</code>
     */
    public static final int INSTRUMENT_TYPE_BARITONE_GUITAR_VALUE = 317;
    /**
     * <code>INSTRUMENT_TYPE_SCRATCHER = 318;</code>
     */
    public static final int INSTRUMENT_TYPE_SCRATCHER_VALUE = 318;
    /**
     * <code>INSTRUMENT_TYPE_TANBOUR = 319;</code>
     */
    public static final int INSTRUMENT_TYPE_TANBOUR_VALUE = 319;
    /**
     * <code>INSTRUMENT_TYPE_KEYBOARD = 320;</code>
     */
    public static final int INSTRUMENT_TYPE_KEYBOARD_VALUE = 320;
    /**
     * <code>INSTRUMENT_TYPE_LANGELEIK = 321;</code>
     */
    public static final int INSTRUMENT_TYPE_LANGELEIK_VALUE = 321;
    /**
     * <code>INSTRUMENT_TYPE_WIND_INSTRUMENT = 322;</code>
     */
    public static final int INSTRUMENT_TYPE_WIND_INSTRUMENT_VALUE = 322;
    /**
     * <code>INSTRUMENT_TYPE_MUHARSING = 323;</code>
     */
    public static final int INSTRUMENT_TYPE_MUHARSING_VALUE = 323;
    /**
     * <code>INSTRUMENT_TYPE_ORCHESTRAL_PERCUSSION = 324;</code>
     */
    public static final int INSTRUMENT_TYPE_ORCHESTRAL_PERCUSSION_VALUE = 324;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_SAXOPHONE = 325;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_SAXOPHONE_VALUE = 325;
    /**
     * <code>INSTRUMENT_TYPE_GUANZI = 326;</code>
     */
    public static final int INSTRUMENT_TYPE_GUANZI_VALUE = 326;
    /**
     * <code>INSTRUMENT_TYPE_ULI_ULI = 327;</code>
     */
    public static final int INSTRUMENT_TYPE_ULI_ULI_VALUE = 327;
    /**
     * <code>INSTRUMENT_TYPE_PIPA = 328;</code>
     */
    public static final int INSTRUMENT_TYPE_PIPA_VALUE = 328;
    /**
     * <code>INSTRUMENT_TYPE_WOOD_BLOCK = 329;</code>
     */
    public static final int INSTRUMENT_TYPE_WOOD_BLOCK_VALUE = 329;
    /**
     * <code>INSTRUMENT_TYPE_BANDURA = 330;</code>
     */
    public static final int INSTRUMENT_TYPE_BANDURA_VALUE = 330;
    /**
     * <code>INSTRUMENT_TYPE_YAYLI_TAMBUR = 331;</code>
     */
    public static final int INSTRUMENT_TYPE_YAYLI_TAMBUR_VALUE = 331;
    /**
     * <code>INSTRUMENT_TYPE_WOBBLE_BOARD = 332;</code>
     */
    public static final int INSTRUMENT_TYPE_WOBBLE_BOARD_VALUE = 332;
    /**
     * <code>INSTRUMENT_TYPE_PEDAL_STEEL_GUITAR = 333;</code>
     */
    public static final int INSTRUMENT_TYPE_PEDAL_STEEL_GUITAR_VALUE = 333;
    /**
     * <code>INSTRUMENT_TYPE_CYMBALS = 334;</code>
     */
    public static final int INSTRUMENT_TYPE_CYMBALS_VALUE = 334;
    /**
     * <code>INSTRUMENT_TYPE_CELLO_BANJO = 335;</code>
     */
    public static final int INSTRUMENT_TYPE_CELLO_BANJO_VALUE = 335;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_CLARINET = 336;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_CLARINET_VALUE = 336;
    /**
     * <code>INSTRUMENT_TYPE_SLIDE_WHISTLE = 337;</code>
     */
    public static final int INSTRUMENT_TYPE_SLIDE_WHISTLE_VALUE = 337;
    /**
     * <code>INSTRUMENT_TYPE_MELODEON = 338;</code>
     */
    public static final int INSTRUMENT_TYPE_MELODEON_VALUE = 338;
    /**
     * <code>INSTRUMENT_TYPE_LOKOLE = 339;</code>
     */
    public static final int INSTRUMENT_TYPE_LOKOLE_VALUE = 339;
    /**
     * <code>INSTRUMENT_TYPE_LUTE = 340;</code>
     */
    public static final int INSTRUMENT_TYPE_LUTE_VALUE = 340;
    /**
     * <code>INSTRUMENT_TYPE_REBEC = 341;</code>
     */
    public static final int INSTRUMENT_TYPE_REBEC_VALUE = 341;
    /**
     * <code>INSTRUMENT_TYPE_PAN_FLUTE = 342;</code>
     */
    public static final int INSTRUMENT_TYPE_PAN_FLUTE_VALUE = 342;
    /**
     * <code>INSTRUMENT_TYPE_HURDY_GURDY = 343;</code>
     */
    public static final int INSTRUMENT_TYPE_HURDY_GURDY_VALUE = 343;
    /**
     * <code>INSTRUMENT_TYPE_BERIMBAU = 344;</code>
     */
    public static final int INSTRUMENT_TYPE_BERIMBAU_VALUE = 344;
    /**
     * <code>INSTRUMENT_TYPE_FLEXATONE = 345;</code>
     */
    public static final int INSTRUMENT_TYPE_FLEXATONE_VALUE = 345;
    /**
     * <code>INSTRUMENT_TYPE_TEMPLE_BLOCKS = 346;</code>
     */
    public static final int INSTRUMENT_TYPE_TEMPLE_BLOCKS_VALUE = 346;
    /**
     * <code>INSTRUMENT_TYPE_DICTOPHONE = 347;</code>
     */
    public static final int INSTRUMENT_TYPE_DICTOPHONE_VALUE = 347;
    /**
     * <code>INSTRUMENT_TYPE_DAYEREH = 348;</code>
     */
    public static final int INSTRUMENT_TYPE_DAYEREH_VALUE = 348;
    /**
     * <code>INSTRUMENT_TYPE_JAWBONE = 349;</code>
     */
    public static final int INSTRUMENT_TYPE_JAWBONE_VALUE = 349;
    /**
     * <code>INSTRUMENT_TYPE_MEDIEVAL_HARP = 350;</code>
     */
    public static final int INSTRUMENT_TYPE_MEDIEVAL_HARP_VALUE = 350;
    /**
     * <code>INSTRUMENT_TYPE_VERACRUZ_HARP = 351;</code>
     */
    public static final int INSTRUMENT_TYPE_VERACRUZ_HARP_VALUE = 351;
    /**
     * <code>INSTRUMENT_TYPE_CHAPMAN_STICK = 352;</code>
     */
    public static final int INSTRUMENT_TYPE_CHAPMAN_STICK_VALUE = 352;
    /**
     * <code>INSTRUMENT_TYPE_PINKILLU = 353;</code>
     */
    public static final int INSTRUMENT_TYPE_PINKILLU_VALUE = 353;
    /**
     * <code>INSTRUMENT_TYPE_GHAITA = 354;</code>
     */
    public static final int INSTRUMENT_TYPE_GHAITA_VALUE = 354;
    /**
     * <code>INSTRUMENT_TYPE_PI = 355;</code>
     */
    public static final int INSTRUMENT_TYPE_PI_VALUE = 355;
    /**
     * <code>INSTRUMENT_TYPE_VENEZUELAN_HARP = 356;</code>
     */
    public static final int INSTRUMENT_TYPE_VENEZUELAN_HARP_VALUE = 356;
    /**
     * <code>INSTRUMENT_TYPE_QUENACHO = 357;</code>
     */
    public static final int INSTRUMENT_TYPE_QUENACHO_VALUE = 357;
    /**
     * <code>INSTRUMENT_TYPE_USER_DEFINED = 358;</code>
     */
    public static final int INSTRUMENT_TYPE_USER_DEFINED_VALUE = 358;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_SITAR = 359;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_SITAR_VALUE = 359;
    /**
     * <code>INSTRUMENT_TYPE_KANUN = 360;</code>
     */
    public static final int INSTRUMENT_TYPE_KANUN_VALUE = 360;
    /**
     * <code>INSTRUMENT_TYPE_BENDIR = 361;</code>
     */
    public static final int INSTRUMENT_TYPE_BENDIR_VALUE = 361;
    /**
     * <code>INSTRUMENT_TYPE_MARIMBULA = 362;</code>
     */
    public static final int INSTRUMENT_TYPE_MARIMBULA_VALUE = 362;
    /**
     * <code>INSTRUMENT_TYPE_JINGHU = 363;</code>
     */
    public static final int INSTRUMENT_TYPE_JINGHU_VALUE = 363;
    /**
     * <code>INSTRUMENT_TYPE_CLAYPOT = 364;</code>
     */
    public static final int INSTRUMENT_TYPE_CLAYPOT_VALUE = 364;
    /**
     * <code>INSTRUMENT_TYPE_TINGSHA = 365;</code>
     */
    public static final int INSTRUMENT_TYPE_TINGSHA_VALUE = 365;
    /**
     * <code>INSTRUMENT_TYPE_BELL_TREE = 366;</code>
     */
    public static final int INSTRUMENT_TYPE_BELL_TREE_VALUE = 366;
    /**
     * <code>INSTRUMENT_TYPE_CAJA = 367;</code>
     */
    public static final int INSTRUMENT_TYPE_CAJA_VALUE = 367;
    /**
     * <code>INSTRUMENT_TYPE_MIXED_BACKGROUND_VOCALIST = 368;</code>
     */
    public static final int INSTRUMENT_TYPE_MIXED_BACKGROUND_VOCALIST_VALUE = 368;
    /**
     * <code>INSTRUMENT_TYPE_TOGAMAN_GUITAR_VIOL = 369;</code>
     */
    public static final int INSTRUMENT_TYPE_TOGAMAN_GUITAR_VIOL_VALUE = 369;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_PIANO = 370;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_PIANO_VALUE = 370;
    /**
     * <code>INSTRUMENT_TYPE_PICCOLO_FLUTE = 371;</code>
     */
    public static final int INSTRUMENT_TYPE_PICCOLO_FLUTE_VALUE = 371;
    /**
     * <code>INSTRUMENT_TYPE_STICKS = 372;</code>
     */
    public static final int INSTRUMENT_TYPE_STICKS_VALUE = 372;
    /**
     * <code>INSTRUMENT_TYPE_GUITARRON = 373;</code>
     */
    public static final int INSTRUMENT_TYPE_GUITARRON_VALUE = 373;
    /**
     * <code>INSTRUMENT_TYPE_BANDURRIA = 374;</code>
     */
    public static final int INSTRUMENT_TYPE_BANDURRIA_VALUE = 374;
    /**
     * <code>INSTRUMENT_TYPE_DAN_TRANH = 375;</code>
     */
    public static final int INSTRUMENT_TYPE_DAN_TRANH_VALUE = 375;
    /**
     * <code>INSTRUMENT_TYPE_HARDANGER_FIDDLE = 376;</code>
     */
    public static final int INSTRUMENT_TYPE_HARDANGER_FIDDLE_VALUE = 376;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_DULCIAN = 377;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_DULCIAN_VALUE = 377;
    /**
     * <code>INSTRUMENT_TYPE_BOMBO = 378;</code>
     */
    public static final int INSTRUMENT_TYPE_BOMBO_VALUE = 378;
    /**
     * <code>INSTRUMENT_TYPE_BASS_DRUM__FRB___KICK__BRB__ = 379;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_DRUM__FRB___KICK__BRB___VALUE = 379;
    /**
     * <code>INSTRUMENT_TYPE_APITO = 380;</code>
     */
    public static final int INSTRUMENT_TYPE_APITO_VALUE = 380;
    /**
     * <code>INSTRUMENT_TYPE_NJARKA = 381;</code>
     */
    public static final int INSTRUMENT_TYPE_NJARKA_VALUE = 381;
    /**
     * <code>INSTRUMENT_TYPE_BOSUNS_WHISTLE = 382;</code>
     */
    public static final int INSTRUMENT_TYPE_BOSUNS_WHISTLE_VALUE = 382;
    /**
     * <code>INSTRUMENT_TYPE_POSITIVE_ORGAN = 383;</code>
     */
    public static final int INSTRUMENT_TYPE_POSITIVE_ORGAN_VALUE = 383;
    /**
     * <code>INSTRUMENT_TYPE_FRENCH_HORN = 384;</code>
     */
    public static final int INSTRUMENT_TYPE_FRENCH_HORN_VALUE = 384;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_REBEC = 385;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_REBEC_VALUE = 385;
    /**
     * <code>INSTRUMENT_TYPE_FEMALE_VOICE = 386;</code>
     */
    public static final int INSTRUMENT_TYPE_FEMALE_VOICE_VALUE = 386;
    /**
     * <code>INSTRUMENT_TYPE_TREBLE_REBEC = 387;</code>
     */
    public static final int INSTRUMENT_TYPE_TREBLE_REBEC_VALUE = 387;
    /**
     * <code>INSTRUMENT_TYPE_TIBETAN_BELLS = 388;</code>
     */
    public static final int INSTRUMENT_TYPE_TIBETAN_BELLS_VALUE = 388;
    /**
     * <code>INSTRUMENT_TYPE_SIKU = 389;</code>
     */
    public static final int INSTRUMENT_TYPE_SIKU_VALUE = 389;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRO_ACOUSTIC_HURDY_GURDY = 390;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRO_ACOUSTIC_HURDY_GURDY_VALUE = 390;
    /**
     * <code>INSTRUMENT_TYPE_MANDOLIN = 391;</code>
     */
    public static final int INSTRUMENT_TYPE_MANDOLIN_VALUE = 391;
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_BASS = 392;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTH_BASS_VALUE = 392;
    /**
     * <code>INSTRUMENT_TYPE_XYLOPHONE = 393;</code>
     */
    public static final int INSTRUMENT_TYPE_XYLOPHONE_VALUE = 393;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANINO_SAXOPHONE = 394;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANINO_SAXOPHONE_VALUE = 394;
    /**
     * <code>INSTRUMENT_TYPE_PORTUGUESE_GUITAR = 395;</code>
     */
    public static final int INSTRUMENT_TYPE_PORTUGUESE_GUITAR_VALUE = 395;
    /**
     * <code>INSTRUMENT_TYPE_SABAR = 396;</code>
     */
    public static final int INSTRUMENT_TYPE_SABAR_VALUE = 396;
    /**
     * <code>INSTRUMENT_TYPE_BRASS_INSTRUMENT = 397;</code>
     */
    public static final int INSTRUMENT_TYPE_BRASS_INSTRUMENT_VALUE = 397;
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASS_SAXOPHONE = 398;</code>
     */
    public static final int INSTRUMENT_TYPE_CONTRABASS_SAXOPHONE_VALUE = 398;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_TRUMPET = 399;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_TRUMPET_VALUE = 399;
    /**
     * <code>INSTRUMENT_TYPE_VUVUZELA = 400;</code>
     */
    public static final int INSTRUMENT_TYPE_VUVUZELA_VALUE = 400;
    /**
     * <code>INSTRUMENT_TYPE_KANJIRA = 401;</code>
     */
    public static final int INSTRUMENT_TYPE_KANJIRA_VALUE = 401;
    /**
     * <code>INSTRUMENT_TYPE_KANTELE = 402;</code>
     */
    public static final int INSTRUMENT_TYPE_KANTELE_VALUE = 402;
    /**
     * <code>INSTRUMENT_TYPE_ZHONGHU = 403;</code>
     */
    public static final int INSTRUMENT_TYPE_ZHONGHU_VALUE = 403;
    /**
     * <code>INSTRUMENT_TYPE_OPTIGAN = 404;</code>
     */
    public static final int INSTRUMENT_TYPE_OPTIGAN_VALUE = 404;
    /**
     * <code>INSTRUMENT_TYPE_NEUTRAL_VOICE = 405;</code>
     */
    public static final int INSTRUMENT_TYPE_NEUTRAL_VOICE_VALUE = 405;
    /**
     * <code>INSTRUMENT_TYPE_DUNGCHEN = 406;</code>
     */
    public static final int INSTRUMENT_TYPE_DUNGCHEN_VALUE = 406;
    /**
     * <code>INSTRUMENT_TYPE_TOY_PIANO = 407;</code>
     */
    public static final int INSTRUMENT_TYPE_TOY_PIANO_VALUE = 407;
    /**
     * <code>INSTRUMENT_TYPE_ZITHER = 408;</code>
     */
    public static final int INSTRUMENT_TYPE_ZITHER_VALUE = 408;
    /**
     * <code>INSTRUMENT_TYPE_SHAKUHACHI = 409;</code>
     */
    public static final int INSTRUMENT_TYPE_SHAKUHACHI_VALUE = 409;
    /**
     * <code>INSTRUMENT_TYPE_ARGHUL = 410;</code>
     */
    public static final int INSTRUMENT_TYPE_ARGHUL_VALUE = 410;
    /**
     * <code>INSTRUMENT_TYPE_KHENE = 411;</code>
     */
    public static final int INSTRUMENT_TYPE_KHENE_VALUE = 411;
    /**
     * <code>INSTRUMENT_TYPE_QARKABEB = 412;</code>
     */
    public static final int INSTRUMENT_TYPE_QARKABEB_VALUE = 412;
    /**
     * <code>INSTRUMENT_TYPE_YUEQIN = 413;</code>
     */
    public static final int INSTRUMENT_TYPE_YUEQIN_VALUE = 413;
    /**
     * <code>INSTRUMENT_TYPE_MALE_BACKGROUND_VOCALIST = 414;</code>
     */
    public static final int INSTRUMENT_TYPE_MALE_BACKGROUND_VOCALIST_VALUE = 414;
    /**
     * <code>INSTRUMENT_TYPE_NYLON_STRING_GUITAR = 415;</code>
     */
    public static final int INSTRUMENT_TYPE_NYLON_STRING_GUITAR_VALUE = 415;
    /**
     * <code>INSTRUMENT_TYPE_SURDO = 416;</code>
     */
    public static final int INSTRUMENT_TYPE_SURDO_VALUE = 416;
    /**
     * <code>INSTRUMENT_TYPE_WATERPHONE = 417;</code>
     */
    public static final int INSTRUMENT_TYPE_WATERPHONE_VALUE = 417;
    /**
     * <code>INSTRUMENT_TYPE_PEDABRO = 418;</code>
     */
    public static final int INSTRUMENT_TYPE_PEDABRO_VALUE = 418;
    /**
     * <code>INSTRUMENT_TYPE_LEONA = 419;</code>
     */
    public static final int INSTRUMENT_TYPE_LEONA_VALUE = 419;
    /**
     * <code>INSTRUMENT_TYPE_SAND_BLOCKS = 420;</code>
     */
    public static final int INSTRUMENT_TYPE_SAND_BLOCKS_VALUE = 420;
    /**
     * <code>INSTRUMENT_TYPE_MANDOLA = 421;</code>
     */
    public static final int INSTRUMENT_TYPE_MANDOLA_VALUE = 421;
    /**
     * <code>INSTRUMENT_TYPE_METAL_CANS = 422;</code>
     */
    public static final int INSTRUMENT_TYPE_METAL_CANS_VALUE = 422;
    /**
     * <code>INSTRUMENT_TYPE_NAGARA = 423;</code>
     */
    public static final int INSTRUMENT_TYPE_NAGARA_VALUE = 423;
    /**
     * <code>INSTRUMENT_TYPE_CUMBUS = 424;</code>
     */
    public static final int INSTRUMENT_TYPE_CUMBUS_VALUE = 424;
    /**
     * <code>INSTRUMENT_TYPE_TAMBURA = 425;</code>
     */
    public static final int INSTRUMENT_TYPE_TAMBURA_VALUE = 425;
    /**
     * <code>INSTRUMENT_TYPE_PSALTERY = 426;</code>
     */
    public static final int INSTRUMENT_TYPE_PSALTERY_VALUE = 426;
    /**
     * <code>INSTRUMENT_TYPE_ANGKLUNG = 427;</code>
     */
    public static final int INSTRUMENT_TYPE_ANGKLUNG_VALUE = 427;
    /**
     * <code>INSTRUMENT_TYPE_CHILD_VOICE = 428;</code>
     */
    public static final int INSTRUMENT_TYPE_CHILD_VOICE_VALUE = 428;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_SAXOPHONE = 429;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_SAXOPHONE_VALUE = 429;
    /**
     * <code>INSTRUMENT_TYPE_PIPE_ORGAN = 430;</code>
     */
    public static final int INSTRUMENT_TYPE_PIPE_ORGAN_VALUE = 430;
    /**
     * <code>INSTRUMENT_TYPE_TUBA = 431;</code>
     */
    public static final int INSTRUMENT_TYPE_TUBA_VALUE = 431;
    /**
     * <code>INSTRUMENT_TYPE_VIBRAPHONE = 432;</code>
     */
    public static final int INSTRUMENT_TYPE_VIBRAPHONE_VALUE = 432;
    /**
     * <code>INSTRUMENT_TYPE_SHENG = 433;</code>
     */
    public static final int INSTRUMENT_TYPE_SHENG_VALUE = 433;
    /**
     * <code>INSTRUMENT_TYPE_KORA = 434;</code>
     */
    public static final int INSTRUMENT_TYPE_KORA_VALUE = 434;
    /**
     * <code>INSTRUMENT_TYPE_TAMBORIM = 435;</code>
     */
    public static final int INSTRUMENT_TYPE_TAMBORIM_VALUE = 435;
    /**
     * <code>INSTRUMENT_TYPE_GHAYCHAK = 436;</code>
     */
    public static final int INSTRUMENT_TYPE_GHAYCHAK_VALUE = 436;
    /**
     * <code>INSTRUMENT_TYPE_CONGAS = 437;</code>
     */
    public static final int INSTRUMENT_TYPE_CONGAS_VALUE = 437;
    /**
     * <code>INSTRUMENT_TYPE_TONGUE_DRUM = 438;</code>
     */
    public static final int INSTRUMENT_TYPE_TONGUE_DRUM_VALUE = 438;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_VIOLA = 439;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_VIOLA_VALUE = 439;
    /**
     * <code>INSTRUMENT_TYPE_TALKING_DRUM = 440;</code>
     */
    public static final int INSTRUMENT_TYPE_TALKING_DRUM_VALUE = 440;
    /**
     * <code>INSTRUMENT_TYPE_POST_HORN = 441;</code>
     */
    public static final int INSTRUMENT_TYPE_POST_HORN_VALUE = 441;
    /**
     * <code>INSTRUMENT_TYPE_FINGER_CLICKS = 442;</code>
     */
    public static final int INSTRUMENT_TYPE_FINGER_CLICKS_VALUE = 442;
    /**
     * <code>INSTRUMENT_TYPE_GANGA = 443;</code>
     */
    public static final int INSTRUMENT_TYPE_GANGA_VALUE = 443;
    /**
     * <code>INSTRUMENT_TYPE_SLEIGH_BELLS = 444;</code>
     */
    public static final int INSTRUMENT_TYPE_SLEIGH_BELLS_VALUE = 444;
    /**
     * <code>INSTRUMENT_TYPE_VIOLA = 445;</code>
     */
    public static final int INSTRUMENT_TYPE_VIOLA_VALUE = 445;
    /**
     * <code>INSTRUMENT_TYPE_DRANYEN = 446;</code>
     */
    public static final int INSTRUMENT_TYPE_DRANYEN_VALUE = 446;
    /**
     * <code>INSTRUMENT_TYPE_ROMANTIC_GUITAR = 447;</code>
     */
    public static final int INSTRUMENT_TYPE_ROMANTIC_GUITAR_VALUE = 447;
    /**
     * <code>INSTRUMENT_TYPE_DJEMBE = 448;</code>
     */
    public static final int INSTRUMENT_TYPE_DJEMBE_VALUE = 448;
    /**
     * <code>INSTRUMENT_TYPE_SURBAHAR = 449;</code>
     */
    public static final int INSTRUMENT_TYPE_SURBAHAR_VALUE = 449;
    /**
     * <code>INSTRUMENT_TYPE_DUTAR = 450;</code>
     */
    public static final int INSTRUMENT_TYPE_DUTAR_VALUE = 450;
    /**
     * <code>INSTRUMENT_TYPE_TANPURA = 451;</code>
     */
    public static final int INSTRUMENT_TYPE_TANPURA_VALUE = 451;
    /**
     * <code>INSTRUMENT_TYPE_BASS_SHAWM = 452;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_SHAWM_VALUE = 452;
    /**
     * <code>INSTRUMENT_TYPE_BOMBARD = 453;</code>
     */
    public static final int INSTRUMENT_TYPE_BOMBARD_VALUE = 453;
    /**
     * <code>INSTRUMENT_TYPE_SIREN = 454;</code>
     */
    public static final int INSTRUMENT_TYPE_SIREN_VALUE = 454;
    /**
     * <code>INSTRUMENT_TYPE_TRAIN_SOUNDS = 455;</code>
     */
    public static final int INSTRUMENT_TYPE_TRAIN_SOUNDS_VALUE = 455;
    /**
     * <code>INSTRUMENT_TYPE_TROMBA_MARINA = 456;</code>
     */
    public static final int INSTRUMENT_TYPE_TROMBA_MARINA_VALUE = 456;
    /**
     * <code>INSTRUMENT_TYPE_BAJO_SEXTO = 457;</code>
     */
    public static final int INSTRUMENT_TYPE_BAJO_SEXTO_VALUE = 457;
    /**
     * <code>INSTRUMENT_TYPE_DIDGERIDOO = 458;</code>
     */
    public static final int INSTRUMENT_TYPE_DIDGERIDOO_VALUE = 458;
    /**
     * <code>INSTRUMENT_TYPE_NYATITI = 459;</code>
     */
    public static final int INSTRUMENT_TYPE_NYATITI_VALUE = 459;
    /**
     * <code>INSTRUMENT_TYPE_CAR_SOUNDS = 460;</code>
     */
    public static final int INSTRUMENT_TYPE_CAR_SOUNDS_VALUE = 460;
    /**
     * <code>INSTRUMENT_TYPE_CRAVIOLA = 461;</code>
     */
    public static final int INSTRUMENT_TYPE_CRAVIOLA_VALUE = 461;
    /**
     * <code>INSTRUMENT_TYPE_DIZI = 462;</code>
     */
    public static final int INSTRUMENT_TYPE_DIZI_VALUE = 462;
    /**
     * <code>INSTRUMENT_TYPE_SLIDE_SAXOPHONE = 463;</code>
     */
    public static final int INSTRUMENT_TYPE_SLIDE_SAXOPHONE_VALUE = 463;
    /**
     * <code>INSTRUMENT_TYPE_BODHRAN = 464;</code>
     */
    public static final int INSTRUMENT_TYPE_BODHRAN_VALUE = 464;
    /**
     * <code>INSTRUMENT_TYPE_CYMBAL__FRB___CRASH__BRB__ = 465;</code>
     */
    public static final int INSTRUMENT_TYPE_CYMBAL__FRB___CRASH__BRB___VALUE = 465;
    /**
     * <code>INSTRUMENT_TYPE_THUNDER_SHEET = 466;</code>
     */
    public static final int INSTRUMENT_TYPE_THUNDER_SHEET_VALUE = 466;
    /**
     * <code>INSTRUMENT_TYPE_BASS_RECORDER = 467;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_RECORDER_VALUE = 467;
    /**
     * <code>INSTRUMENT_TYPE_CYMBAL__FRB___SUSPENDED__BRB__ = 468;</code>
     */
    public static final int INSTRUMENT_TYPE_CYMBAL__FRB___SUSPENDED__BRB___VALUE = 468;
    /**
     * <code>INSTRUMENT_TYPE_BANJO = 469;</code>
     */
    public static final int INSTRUMENT_TYPE_BANJO_VALUE = 469;
    /**
     * <code>INSTRUMENT_TYPE_ERHU = 470;</code>
     */
    public static final int INSTRUMENT_TYPE_ERHU_VALUE = 470;
    /**
     * <code>INSTRUMENT_TYPE_SACKBUT = 471;</code>
     */
    public static final int INSTRUMENT_TYPE_SACKBUT_VALUE = 471;
    /**
     * <code>INSTRUMENT_TYPE_GITTERN = 472;</code>
     */
    public static final int INSTRUMENT_TYPE_GITTERN_VALUE = 472;
    /**
     * <code>INSTRUMENT_TYPE_YOKIN = 473;</code>
     */
    public static final int INSTRUMENT_TYPE_YOKIN_VALUE = 473;
    /**
     * <code>INSTRUMENT_TYPE_OBOE_DA_CACCIA = 474;</code>
     */
    public static final int INSTRUMENT_TYPE_OBOE_DA_CACCIA_VALUE = 474;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_SHAWM = 475;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_SHAWM_VALUE = 475;
    /**
     * <code>INSTRUMENT_TYPE_DUNUN = 476;</code>
     */
    public static final int INSTRUMENT_TYPE_DUNUN_VALUE = 476;
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_LEAD = 477;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTH_LEAD_VALUE = 477;
    /**
     * <code>INSTRUMENT_TYPE_LUTHEAL = 478;</code>
     */
    public static final int INSTRUMENT_TYPE_LUTHEAL_VALUE = 478;
    /**
     * <code>INSTRUMENT_TYPE_CLAVICHORD = 479;</code>
     */
    public static final int INSTRUMENT_TYPE_CLAVICHORD_VALUE = 479;
    /**
     * <code>INSTRUMENT_TYPE_GAYAGEUM = 480;</code>
     */
    public static final int INSTRUMENT_TYPE_GAYAGEUM_VALUE = 480;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_ORGAN = 481;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_ORGAN_VALUE = 481;
    /**
     * <code>INSTRUMENT_TYPE_DUGGI = 482;</code>
     */
    public static final int INSTRUMENT_TYPE_DUGGI_VALUE = 482;
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_PAD = 483;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTH_PAD_VALUE = 483;
    /**
     * <code>INSTRUMENT_TYPE_BASS_FLUTE = 484;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_FLUTE_VALUE = 484;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_VIOLIN = 485;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_VIOLIN_VALUE = 485;
    /**
     * <code>INSTRUMENT_TYPE_LAOUTO = 486;</code>
     */
    public static final int INSTRUMENT_TYPE_LAOUTO_VALUE = 486;
    /**
     * <code>INSTRUMENT_TYPE_CORDOVOX = 487;</code>
     */
    public static final int INSTRUMENT_TYPE_CORDOVOX_VALUE = 487;
    /**
     * <code>INSTRUMENT_TYPE_ARCH_LUTE = 488;</code>
     */
    public static final int INSTRUMENT_TYPE_ARCH_LUTE_VALUE = 488;
    /**
     * <code>INSTRUMENT_TYPE_BARITONE_OBOE = 489;</code>
     */
    public static final int INSTRUMENT_TYPE_BARITONE_OBOE_VALUE = 489;
    /**
     * <code>INSTRUMENT_TYPE_CORNET = 490;</code>
     */
    public static final int INSTRUMENT_TYPE_CORNET_VALUE = 490;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_BANJO = 491;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_BANJO_VALUE = 491;
    /**
     * <code>INSTRUMENT_TYPE_BARREL_ORGAN = 492;</code>
     */
    public static final int INSTRUMENT_TYPE_BARREL_ORGAN_VALUE = 492;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_SAXOPHONE = 493;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_SAXOPHONE_VALUE = 493;
    /**
     * <code>INSTRUMENT_TYPE_UNPITCHED_PERCUSSION_INSTRUMENT = 494;</code>
     */
    public static final int INSTRUMENT_TYPE_UNPITCHED_PERCUSSION_INSTRUMENT_VALUE = 494;
    /**
     * <code>INSTRUMENT_TYPE_MUSICAL_BOW = 495;</code>
     */
    public static final int INSTRUMENT_TYPE_MUSICAL_BOW_VALUE = 495;
    /**
     * <code>INSTRUMENT_TYPE_XIAO = 496;</code>
     */
    public static final int INSTRUMENT_TYPE_XIAO_VALUE = 496;
    /**
     * <code>INSTRUMENT_TYPE_TREATMENTS = 497;</code>
     */
    public static final int INSTRUMENT_TYPE_TREATMENTS_VALUE = 497;
    /**
     * <code>INSTRUMENT_TYPE_KOTO = 498;</code>
     */
    public static final int INSTRUMENT_TYPE_KOTO_VALUE = 498;
    /**
     * <code>INSTRUMENT_TYPE_SHVI_WHISTLE = 499;</code>
     */
    public static final int INSTRUMENT_TYPE_SHVI_WHISTLE_VALUE = 499;
    /**
     * <code>INSTRUMENT_TYPE_MUSETTE = 500;</code>
     */
    public static final int INSTRUMENT_TYPE_MUSETTE_VALUE = 500;
    /**
     * <code>INSTRUMENT_TYPE_BASS = 501;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_VALUE = 501;
    /**
     * <code>INSTRUMENT_TYPE_AUTOHARP = 502;</code>
     */
    public static final int INSTRUMENT_TYPE_AUTOHARP_VALUE = 502;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_VIOLIN = 503;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_VIOLIN_VALUE = 503;
    /**
     * <code>INSTRUMENT_TYPE_BOUZOUKI = 504;</code>
     */
    public static final int INSTRUMENT_TYPE_BOUZOUKI_VALUE = 504;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_CRUMHORN = 505;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_CRUMHORN_VALUE = 505;
    /**
     * <code>INSTRUMENT_TYPE_CHIMES = 506;</code>
     */
    public static final int INSTRUMENT_TYPE_CHIMES_VALUE = 506;
    /**
     * <code>INSTRUMENT_TYPE_PANDEIRO = 507;</code>
     */
    public static final int INSTRUMENT_TYPE_PANDEIRO_VALUE = 507;
    /**
     * <code>INSTRUMENT_TYPE_CITOLE = 508;</code>
     */
    public static final int INSTRUMENT_TYPE_CITOLE_VALUE = 508;
    /**
     * <code>INSTRUMENT_TYPE_GRAND_PIANO = 509;</code>
     */
    public static final int INSTRUMENT_TYPE_GRAND_PIANO_VALUE = 509;
    /**
     * <code>INSTRUMENT_TYPE_KAZOO = 510;</code>
     */
    public static final int INSTRUMENT_TYPE_KAZOO_VALUE = 510;
    /**
     * <code>INSTRUMENT_TYPE_BALALAIKA = 511;</code>
     */
    public static final int INSTRUMENT_TYPE_BALALAIKA_VALUE = 511;
    /**
     * <code>INSTRUMENT_TYPE_MOHAN_VEENA = 512;</code>
     */
    public static final int INSTRUMENT_TYPE_MOHAN_VEENA_VALUE = 512;
    /**
     * <code>INSTRUMENT_TYPE_VICHITRA_VEENA = 513;</code>
     */
    public static final int INSTRUMENT_TYPE_VICHITRA_VEENA_VALUE = 513;
    /**
     * <code>INSTRUMENT_TYPE_CHATTER = 514;</code>
     */
    public static final int INSTRUMENT_TYPE_CHATTER_VALUE = 514;
    /**
     * <code>INSTRUMENT_TYPE_POCKET_TRUMPET = 515;</code>
     */
    public static final int INSTRUMENT_TYPE_POCKET_TRUMPET_VALUE = 515;
    /**
     * <code>INSTRUMENT_TYPE_SPECTRASONICS_OMNISPHERE = 516;</code>
     */
    public static final int INSTRUMENT_TYPE_SPECTRASONICS_OMNISPHERE_VALUE = 516;
    /**
     * <code>INSTRUMENT_TYPE_BANHU = 517;</code>
     */
    public static final int INSTRUMENT_TYPE_BANHU_VALUE = 517;
    /**
     * <code>INSTRUMENT_TYPE_BASS_SACKBUT = 518;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_SACKBUT_VALUE = 518;
    /**
     * <code>INSTRUMENT_TYPE_SOUSAPHONE = 519;</code>
     */
    public static final int INSTRUMENT_TYPE_SOUSAPHONE_VALUE = 519;
    /**
     * <code>INSTRUMENT_TYPE_BODY_PERCUSSION = 520;</code>
     */
    public static final int INSTRUMENT_TYPE_BODY_PERCUSSION_VALUE = 520;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_SHAWM = 521;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_SHAWM_VALUE = 521;
    /**
     * <code>INSTRUMENT_TYPE_PERCUSSION_INSTRUMENT = 522;</code>
     */
    public static final int INSTRUMENT_TYPE_PERCUSSION_INSTRUMENT_VALUE = 522;
    /**
     * <code>INSTRUMENT_TYPE_URUMEE = 523;</code>
     */
    public static final int INSTRUMENT_TYPE_URUMEE_VALUE = 523;
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_BRASS = 524;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTH_BRASS_VALUE = 524;
    /**
     * <code>INSTRUMENT_TYPE_RENAISSANCE_GUITAR = 525;</code>
     */
    public static final int INSTRUMENT_TYPE_RENAISSANCE_GUITAR_VALUE = 525;
    /**
     * <code>INSTRUMENT_TYPE_COMB = 526;</code>
     */
    public static final int INSTRUMENT_TYPE_COMB_VALUE = 526;
    /**
     * <code>INSTRUMENT_TYPE_CLARINET = 527;</code>
     */
    public static final int INSTRUMENT_TYPE_CLARINET_VALUE = 527;
    /**
     * <code>INSTRUMENT_TYPE_MIZMAR = 528;</code>
     */
    public static final int INSTRUMENT_TYPE_MIZMAR_VALUE = 528;
    /**
     * <code>INSTRUMENT_TYPE_CYMBAL__FRB___RIDE__BRB__ = 529;</code>
     */
    public static final int INSTRUMENT_TYPE_CYMBAL__FRB___RIDE__BRB___VALUE = 529;
    /**
     * <code>INSTRUMENT_TYPE_TIMPANI = 530;</code>
     */
    public static final int INSTRUMENT_TYPE_TIMPANI_VALUE = 530;
    /**
     * <code>INSTRUMENT_TYPE_TRIANGLE = 531;</code>
     */
    public static final int INSTRUMENT_TYPE_TRIANGLE_VALUE = 531;
    /**
     * <code>INSTRUMENT_TYPE_FLUTE = 532;</code>
     */
    public static final int INSTRUMENT_TYPE_FLUTE_VALUE = 532;
    /**
     * <code>INSTRUMENT_TYPE_BAGLAMA = 533;</code>
     */
    public static final int INSTRUMENT_TYPE_BAGLAMA_VALUE = 533;
    /**
     * <code>INSTRUMENT_TYPE_MEDIEVAL_FIDDLE = 534;</code>
     */
    public static final int INSTRUMENT_TYPE_MEDIEVAL_FIDDLE_VALUE = 534;
    /**
     * <code>INSTRUMENT_TYPE_VIHUELA = 535;</code>
     */
    public static final int INSTRUMENT_TYPE_VIHUELA_VALUE = 535;
    /**
     * <code>INSTRUMENT_TYPE_BATA = 536;</code>
     */
    public static final int INSTRUMENT_TYPE_BATA_VALUE = 536;
    /**
     * <code>INSTRUMENT_TYPE_NATURAL_TRUMPET = 537;</code>
     */
    public static final int INSTRUMENT_TYPE_NATURAL_TRUMPET_VALUE = 537;
    /**
     * <code>INSTRUMENT_TYPE_FEMALE_BACKGROUND_VOCALIST = 538;</code>
     */
    public static final int INSTRUMENT_TYPE_FEMALE_BACKGROUND_VOCALIST_VALUE = 538;
    /**
     * <code>INSTRUMENT_TYPE_TOUCH_GUITAR = 539;</code>
     */
    public static final int INSTRUMENT_TYPE_TOUCH_GUITAR_VALUE = 539;
    /**
     * <code>INSTRUMENT_TYPE_HECKELPHONE = 540;</code>
     */
    public static final int INSTRUMENT_TYPE_HECKELPHONE_VALUE = 540;
    /**
     * <code>INSTRUMENT_TYPE_TRUMPET = 541;</code>
     */
    public static final int INSTRUMENT_TYPE_TRUMPET_VALUE = 541;
    /**
     * <code>INSTRUMENT_TYPE_STEEL_DRUMS = 542;</code>
     */
    public static final int INSTRUMENT_TYPE_STEEL_DRUMS_VALUE = 542;
    /**
     * <code>INSTRUMENT_TYPE_OUD = 543;</code>
     */
    public static final int INSTRUMENT_TYPE_OUD_VALUE = 543;
    /**
     * <code>INSTRUMENT_TYPE_TIMPLE = 544;</code>
     */
    public static final int INSTRUMENT_TYPE_TIMPLE_VALUE = 544;
    /**
     * <code>INSTRUMENT_TYPE_BIRD_SONG = 545;</code>
     */
    public static final int INSTRUMENT_TYPE_BIRD_SONG_VALUE = 545;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_VIOLA = 546;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_VIOLA_VALUE = 546;
    /**
     * <code>INSTRUMENT_TYPE_BASS_DRUM__FRB___CONCERT__BRB__ = 547;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_DRUM__FRB___CONCERT__BRB___VALUE = 547;
    /**
     * <code>INSTRUMENT_TYPE_ROLMO = 548;</code>
     */
    public static final int INSTRUMENT_TYPE_ROLMO_VALUE = 548;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_BASSOON = 549;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_BASSOON_VALUE = 549;
    /**
     * <code>INSTRUMENT_TYPE_LAUNEDDAS = 550;</code>
     */
    public static final int INSTRUMENT_TYPE_LAUNEDDAS_VALUE = 550;
    /**
     * <code>INSTRUMENT_TYPE_XAPHOON = 551;</code>
     */
    public static final int INSTRUMENT_TYPE_XAPHOON_VALUE = 551;
    /**
     * <code>INSTRUMENT_TYPE_MARACAS = 552;</code>
     */
    public static final int INSTRUMENT_TYPE_MARACAS_VALUE = 552;
    /**
     * <code>INSTRUMENT_TYPE_OBOE = 553;</code>
     */
    public static final int INSTRUMENT_TYPE_OBOE_VALUE = 553;
    /**
     * <code>INSTRUMENT_TYPE_TOY_ACCORDION = 554;</code>
     */
    public static final int INSTRUMENT_TYPE_TOY_ACCORDION_VALUE = 554;
    /**
     * <code>INSTRUMENT_TYPE_REGAL = 555;</code>
     */
    public static final int INSTRUMENT_TYPE_REGAL_VALUE = 555;
    /**
     * <code>INSTRUMENT_TYPE_SANTOOR = 556;</code>
     */
    public static final int INSTRUMENT_TYPE_SANTOOR_VALUE = 556;
    /**
     * <code>INSTRUMENT_TYPE_DAEGEUM = 557;</code>
     */
    public static final int INSTRUMENT_TYPE_DAEGEUM_VALUE = 557;
    /**
     * <code>INSTRUMENT_TYPE_SORDUN = 558;</code>
     */
    public static final int INSTRUMENT_TYPE_SORDUN_VALUE = 558;
    /**
     * <code>INSTRUMENT_TYPE_CHARANGO = 559;</code>
     */
    public static final int INSTRUMENT_TYPE_CHARANGO_VALUE = 559;
    /**
     * <code>INSTRUMENT_TYPE_CALABASH = 560;</code>
     */
    public static final int INSTRUMENT_TYPE_CALABASH_VALUE = 560;
    /**
     * <code>INSTRUMENT_TYPE_FISCORN = 561;</code>
     */
    public static final int INSTRUMENT_TYPE_FISCORN_VALUE = 561;
    /**
     * <code>INSTRUMENT_TYPE_SLAPSTICK = 562;</code>
     */
    public static final int INSTRUMENT_TYPE_SLAPSTICK_VALUE = 562;
    /**
     * <code>INSTRUMENT_TYPE_VI_TAR = 563;</code>
     */
    public static final int INSTRUMENT_TYPE_VI_TAR_VALUE = 563;
    /**
     * <code>INSTRUMENT_TYPE_GIZMO = 564;</code>
     */
    public static final int INSTRUMENT_TYPE_GIZMO_VALUE = 564;
    /**
     * <code>INSTRUMENT_TYPE_WILLOW_FLUTE = 565;</code>
     */
    public static final int INSTRUMENT_TYPE_WILLOW_FLUTE_VALUE = 565;
    /**
     * <code>INSTRUMENT_TYPE_BREAKBEAT = 566;</code>
     */
    public static final int INSTRUMENT_TYPE_BREAKBEAT_VALUE = 566;
    /**
     * <code>INSTRUMENT_TYPE_KHIM = 567;</code>
     */
    public static final int INSTRUMENT_TYPE_KHIM_VALUE = 567;
    /**
     * <code>INSTRUMENT_TYPE_VEENA = 568;</code>
     */
    public static final int INSTRUMENT_TYPE_VEENA_VALUE = 568;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_CELLO = 569;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_CELLO_VALUE = 569;
    /**
     * <code>INSTRUMENT_TYPE_LITHOPHONE = 570;</code>
     */
    public static final int INSTRUMENT_TYPE_LITHOPHONE_VALUE = 570;
    /**
     * <code>INSTRUMENT_TYPE_DOUBLE_BASS = 571;</code>
     */
    public static final int INSTRUMENT_TYPE_DOUBLE_BASS_VALUE = 571;
    /**
     * <code>INSTRUMENT_TYPE_ACOUSTIC_BASS_GUITAR = 572;</code>
     */
    public static final int INSTRUMENT_TYPE_ACOUSTIC_BASS_GUITAR_VALUE = 572;
    /**
     * <code>INSTRUMENT_TYPE_PADDLE_DRUMS = 573;</code>
     */
    public static final int INSTRUMENT_TYPE_PADDLE_DRUMS_VALUE = 573;
    /**
     * <code>INSTRUMENT_TYPE_UNINTENDED_ARTIFACTS = 574;</code>
     */
    public static final int INSTRUMENT_TYPE_UNINTENDED_ARTIFACTS_VALUE = 574;
    /**
     * <code>INSTRUMENT_TYPE_AFRICAN_PERCUSSION = 575;</code>
     */
    public static final int INSTRUMENT_TYPE_AFRICAN_PERCUSSION_VALUE = 575;
    /**
     * <code>INSTRUMENT_TYPE_CUICA = 576;</code>
     */
    public static final int INSTRUMENT_TYPE_CUICA_VALUE = 576;
    /**
     * <code>INSTRUMENT_TYPE_TAR__FRB___PERCUSSION__BRB__ = 577;</code>
     */
    public static final int INSTRUMENT_TYPE_TAR__FRB___PERCUSSION__BRB___VALUE = 577;
    /**
     * <code>INSTRUMENT_TYPE_TARKA = 578;</code>
     */
    public static final int INSTRUMENT_TYPE_TARKA_VALUE = 578;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_RECORDER = 579;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_RECORDER_VALUE = 579;
    /**
     * <code>INSTRUMENT_TYPE_GLOCKENSPIEL = 580;</code>
     */
    public static final int INSTRUMENT_TYPE_GLOCKENSPIEL_VALUE = 580;
    /**
     * <code>INSTRUMENT_TYPE_FLUGELHORN = 581;</code>
     */
    public static final int INSTRUMENT_TYPE_FLUGELHORN_VALUE = 581;
    /**
     * <code>INSTRUMENT_TYPE_WELSH_TRIPLE_HARP = 582;</code>
     */
    public static final int INSTRUMENT_TYPE_WELSH_TRIPLE_HARP_VALUE = 582;
    /**
     * <code>INSTRUMENT_TYPE_ANDEAN_HARP = 583;</code>
     */
    public static final int INSTRUMENT_TYPE_ANDEAN_HARP_VALUE = 583;
    /**
     * <code>INSTRUMENT_TYPE_FLAGEOLET = 584;</code>
     */
    public static final int INSTRUMENT_TYPE_FLAGEOLET_VALUE = 584;
    /**
     * <code>INSTRUMENT_TYPE_TAAL = 585;</code>
     */
    public static final int INSTRUMENT_TYPE_TAAL_VALUE = 585;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_DULCIAN = 586;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_DULCIAN_VALUE = 586;
    /**
     * <code>INSTRUMENT_TYPE_GUITAR = 587;</code>
     */
    public static final int INSTRUMENT_TYPE_GUITAR_VALUE = 587;
    /**
     * <code>INSTRUMENT_TYPE_WIND_MACHINE = 588;</code>
     */
    public static final int INSTRUMENT_TYPE_WIND_MACHINE_VALUE = 588;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_FLUTE = 589;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_FLUTE_VALUE = 589;
    /**
     * <code>INSTRUMENT_TYPE_BAWU = 590;</code>
     */
    public static final int INSTRUMENT_TYPE_BAWU_VALUE = 590;
    /**
     * <code>INSTRUMENT_TYPE_KEYED_TRUMPET = 591;</code>
     */
    public static final int INSTRUMENT_TYPE_KEYED_TRUMPET_VALUE = 591;
    /**
     * <code>INSTRUMENT_TYPE_DRUM_KIT = 592;</code>
     */
    public static final int INSTRUMENT_TYPE_DRUM_KIT_VALUE = 592;
    /**
     * <code>INSTRUMENT_TYPE_POTS_AND_PANS = 593;</code>
     */
    public static final int INSTRUMENT_TYPE_POTS_AND_PANS_VALUE = 593;
    /**
     * <code>INSTRUMENT_TYPE_MAZHAR = 594;</code>
     */
    public static final int INSTRUMENT_TYPE_MAZHAR_VALUE = 594;
    /**
     * <code>INSTRUMENT_TYPE_TABLA = 595;</code>
     */
    public static final int INSTRUMENT_TYPE_TABLA_VALUE = 595;
    /**
     * <code>INSTRUMENT_TYPE_DAF = 596;</code>
     */
    public static final int INSTRUMENT_TYPE_DAF_VALUE = 596;
    /**
     * <code>INSTRUMENT_TYPE_ANVIL = 597;</code>
     */
    public static final int INSTRUMENT_TYPE_ANVIL_VALUE = 597;
    /**
     * <code>INSTRUMENT_TYPE_DRUM_STICKS = 598;</code>
     */
    public static final int INSTRUMENT_TYPE_DRUM_STICKS_VALUE = 598;
    /**
     * <code>INSTRUMENT_TYPE_RABEL = 599;</code>
     */
    public static final int INSTRUMENT_TYPE_RABEL_VALUE = 599;
    /**
     * <code>INSTRUMENT_TYPE_SPINET = 600;</code>
     */
    public static final int INSTRUMENT_TYPE_SPINET_VALUE = 600;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_DRUM = 601;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_DRUM_VALUE = 601;
    /**
     * <code>INSTRUMENT_TYPE_PERCUSSION_SECTION = 602;</code>
     */
    public static final int INSTRUMENT_TYPE_PERCUSSION_SECTION_VALUE = 602;
    /**
     * <code>INSTRUMENT_TYPE_ACCORDION = 603;</code>
     */
    public static final int INSTRUMENT_TYPE_ACCORDION_VALUE = 603;
    /**
     * <code>INSTRUMENT_TYPE_SIMSIMIYYA = 604;</code>
     */
    public static final int INSTRUMENT_TYPE_SIMSIMIYYA_VALUE = 604;
    /**
     * <code>INSTRUMENT_TYPE_SHAMISEN = 605;</code>
     */
    public static final int INSTRUMENT_TYPE_SHAMISEN_VALUE = 605;
    /**
     * <code>INSTRUMENT_TYPE_KHONG_WONG_YAI = 606;</code>
     */
    public static final int INSTRUMENT_TYPE_KHONG_WONG_YAI_VALUE = 606;
    /**
     * <code>INSTRUMENT_TYPE_DAN_BAU = 607;</code>
     */
    public static final int INSTRUMENT_TYPE_DAN_BAU_VALUE = 607;
    /**
     * <code>INSTRUMENT_TYPE_SOPRANO_CORNET = 608;</code>
     */
    public static final int INSTRUMENT_TYPE_SOPRANO_CORNET_VALUE = 608;
    /**
     * <code>INSTRUMENT_TYPE_SINTIR = 609;</code>
     */
    public static final int INSTRUMENT_TYPE_SINTIR_VALUE = 609;
    /**
     * <code>INSTRUMENT_TYPE_MELODICA = 610;</code>
     */
    public static final int INSTRUMENT_TYPE_MELODICA_VALUE = 610;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_CELLO = 611;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_CELLO_VALUE = 611;
    /**
     * <code>INSTRUMENT_TYPE_CONTRA_ALTO_CLARINET = 612;</code>
     */
    public static final int INSTRUMENT_TYPE_CONTRA_ALTO_CLARINET_VALUE = 612;
    /**
     * <code>INSTRUMENT_TYPE_WIRE_STRUNG_HARP = 613;</code>
     */
    public static final int INSTRUMENT_TYPE_WIRE_STRUNG_HARP_VALUE = 613;
    /**
     * <code>INSTRUMENT_TYPE_SAUNG = 614;</code>
     */
    public static final int INSTRUMENT_TYPE_SAUNG_VALUE = 614;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_VIOL = 615;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_VIOL_VALUE = 615;
    /**
     * <code>INSTRUMENT_TYPE_FOOT_STOMP = 616;</code>
     */
    public static final int INSTRUMENT_TYPE_FOOT_STOMP_VALUE = 616;
    /**
     * <code>INSTRUMENT_TYPE_THEORBO = 617;</code>
     */
    public static final int INSTRUMENT_TYPE_THEORBO_VALUE = 617;
    /**
     * <code>INSTRUMENT_TYPE_CHOCALHO = 618;</code>
     */
    public static final int INSTRUMENT_TYPE_CHOCALHO_VALUE = 618;
    /**
     * <code>INSTRUMENT_TYPE_SOUND_EFFECTS = 619;</code>
     */
    public static final int INSTRUMENT_TYPE_SOUND_EFFECTS_VALUE = 619;
    /**
     * <code>INSTRUMENT_TYPE_BASS_CITTERN = 620;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_CITTERN_VALUE = 620;
    /**
     * <code>INSTRUMENT_TYPE_SYNTH_F_X = 621;</code>
     */
    public static final int INSTRUMENT_TYPE_SYNTH_F_X_VALUE = 621;
    /**
     * <code>INSTRUMENT_TYPE_LOWREY_ORGAN = 622;</code>
     */
    public static final int INSTRUMENT_TYPE_LOWREY_ORGAN_VALUE = 622;
    /**
     * <code>INSTRUMENT_TYPE_SISTRUM = 623;</code>
     */
    public static final int INSTRUMENT_TYPE_SISTRUM_VALUE = 623;
    /**
     * <code>INSTRUMENT_TYPE_TOMPAK = 624;</code>
     */
    public static final int INSTRUMENT_TYPE_TOMPAK_VALUE = 624;
    /**
     * <code>INSTRUMENT_TYPE_BASS_TROMBONE = 625;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_TROMBONE_VALUE = 625;
    /**
     * <code>INSTRUMENT_TYPE_FLOYERA = 626;</code>
     */
    public static final int INSTRUMENT_TYPE_FLOYERA_VALUE = 626;
    /**
     * <code>INSTRUMENT_TYPE_KNUCKLES = 627;</code>
     */
    public static final int INSTRUMENT_TYPE_KNUCKLES_VALUE = 627;
    /**
     * <code>INSTRUMENT_TYPE_CABASA = 628;</code>
     */
    public static final int INSTRUMENT_TYPE_CABASA_VALUE = 628;
    /**
     * <code>INSTRUMENT_TYPE_DOBRO_GUITAR = 629;</code>
     */
    public static final int INSTRUMENT_TYPE_DOBRO_GUITAR_VALUE = 629;
    /**
     * <code>INSTRUMENT_TYPE_CIMBALOM = 630;</code>
     */
    public static final int INSTRUMENT_TYPE_CIMBALOM_VALUE = 630;
    /**
     * <code>INSTRUMENT_TYPE_TZOURAS = 631;</code>
     */
    public static final int INSTRUMENT_TYPE_TZOURAS_VALUE = 631;
    /**
     * <code>INSTRUMENT_TYPE_BOZOQ = 632;</code>
     */
    public static final int INSTRUMENT_TYPE_BOZOQ_VALUE = 632;
    /**
     * <code>INSTRUMENT_TYPE_MARIMBA = 633;</code>
     */
    public static final int INSTRUMENT_TYPE_MARIMBA_VALUE = 633;
    /**
     * <code>INSTRUMENT_TYPE_ZEZE = 634;</code>
     */
    public static final int INSTRUMENT_TYPE_ZEZE_VALUE = 634;
    /**
     * <code>INSTRUMENT_TYPE_TENOR_RECORDER = 635;</code>
     */
    public static final int INSTRUMENT_TYPE_TENOR_RECORDER_VALUE = 635;
    /**
     * <code>INSTRUMENT_TYPE_MUSIC_BOX = 636;</code>
     */
    public static final int INSTRUMENT_TYPE_MUSIC_BOX_VALUE = 636;
    /**
     * <code>INSTRUMENT_TYPE_FORTEPIANO = 637;</code>
     */
    public static final int INSTRUMENT_TYPE_FORTEPIANO_VALUE = 637;
    /**
     * <code>INSTRUMENT_TYPE_PICCOLO_CLARINET = 638;</code>
     */
    public static final int INSTRUMENT_TYPE_PICCOLO_CLARINET_VALUE = 638;
    /**
     * <code>INSTRUMENT_TYPE_SPOONS = 639;</code>
     */
    public static final int INSTRUMENT_TYPE_SPOONS_VALUE = 639;
    /**
     * <code>INSTRUMENT_TYPE_HAND_CHIMES = 640;</code>
     */
    public static final int INSTRUMENT_TYPE_HAND_CHIMES_VALUE = 640;
    /**
     * <code>INSTRUMENT_TYPE_MIJWIZ = 641;</code>
     */
    public static final int INSTRUMENT_TYPE_MIJWIZ_VALUE = 641;
    /**
     * <code>INSTRUMENT_TYPE_RACKETT = 642;</code>
     */
    public static final int INSTRUMENT_TYPE_RACKETT_VALUE = 642;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_BASS_GUITAR = 643;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_BASS_GUITAR_VALUE = 643;
    /**
     * <code>INSTRUMENT_TYPE_PICCOLO_BASS = 644;</code>
     */
    public static final int INSTRUMENT_TYPE_PICCOLO_BASS_VALUE = 644;
    /**
     * <code>INSTRUMENT_TYPE_UDU = 645;</code>
     */
    public static final int INSTRUMENT_TYPE_UDU_VALUE = 645;
    /**
     * <code>INSTRUMENT_TYPE_OTHER_INSTRUMENT = 646;</code>
     */
    public static final int INSTRUMENT_TYPE_OTHER_INSTRUMENT_VALUE = 646;
    /**
     * <code>INSTRUMENT_TYPE_BASS_TRUMPET = 647;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_TRUMPET_VALUE = 647;
    /**
     * <code>INSTRUMENT_TYPE_BANSURI = 648;</code>
     */
    public static final int INSTRUMENT_TYPE_BANSURI_VALUE = 648;
    /**
     * <code>INSTRUMENT_TYPE_SQUARE_PIANO = 649;</code>
     */
    public static final int INSTRUMENT_TYPE_SQUARE_PIANO_VALUE = 649;
    /**
     * <code>INSTRUMENT_TYPE_HARPSICHORD = 650;</code>
     */
    public static final int INSTRUMENT_TYPE_HARPSICHORD_VALUE = 650;
    /**
     * <code>INSTRUMENT_TYPE_IRISH_BOUZOUKI = 651;</code>
     */
    public static final int INSTRUMENT_TYPE_IRISH_BOUZOUKI_VALUE = 651;
    /**
     * <code>INSTRUMENT_TYPE_RATTLE = 652;</code>
     */
    public static final int INSTRUMENT_TYPE_RATTLE_VALUE = 652;
    /**
     * <code>INSTRUMENT_TYPE_ENGLISH_HORN = 653;</code>
     */
    public static final int INSTRUMENT_TYPE_ENGLISH_HORN_VALUE = 653;
    /**
     * <code>INSTRUMENT_TYPE_SHOFAR = 654;</code>
     */
    public static final int INSTRUMENT_TYPE_SHOFAR_VALUE = 654;
    /**
     * <code>INSTRUMENT_TYPE_RAINSTICK = 655;</code>
     */
    public static final int INSTRUMENT_TYPE_RAINSTICK_VALUE = 655;
    /**
     * <code>INSTRUMENT_TYPE_CARILLON = 656;</code>
     */
    public static final int INSTRUMENT_TYPE_CARILLON_VALUE = 656;
    /**
     * <code>INSTRUMENT_TYPE_CORNETTO = 657;</code>
     */
    public static final int INSTRUMENT_TYPE_CORNETTO_VALUE = 657;
    /**
     * <code>INSTRUMENT_TYPE_GREAT_BASS_RECORDER = 658;</code>
     */
    public static final int INSTRUMENT_TYPE_GREAT_BASS_RECORDER_VALUE = 658;
    /**
     * <code>INSTRUMENT_TYPE_TEMPLE_BELL = 659;</code>
     */
    public static final int INSTRUMENT_TYPE_TEMPLE_BELL_VALUE = 659;
    /**
     * <code>INSTRUMENT_TYPE_MELLOTRON = 660;</code>
     */
    public static final int INSTRUMENT_TYPE_MELLOTRON_VALUE = 660;
    /**
     * <code>INSTRUMENT_TYPE_OBOE_D_AMORE = 661;</code>
     */
    public static final int INSTRUMENT_TYPE_OBOE_D_AMORE_VALUE = 661;
    /**
     * <code>INSTRUMENT_TYPE_CONCH_SHELL = 662;</code>
     */
    public static final int INSTRUMENT_TYPE_CONCH_SHELL_VALUE = 662;
    /**
     * <code>INSTRUMENT_TYPE_12__MINUS___STRING_GUITAR = 663;</code>
     */
    public static final int INSTRUMENT_TYPE_12__MINUS___STRING_GUITAR_VALUE = 663;
    /**
     * <code>INSTRUMENT_TYPE_SERPENT = 664;</code>
     */
    public static final int INSTRUMENT_TYPE_SERPENT_VALUE = 664;
    /**
     * <code>INSTRUMENT_TYPE_KHONG_WONG_LEK = 665;</code>
     */
    public static final int INSTRUMENT_TYPE_KHONG_WONG_LEK_VALUE = 665;
    /**
     * <code>INSTRUMENT_TYPE_CHURCH_BELLS = 666;</code>
     */
    public static final int INSTRUMENT_TYPE_CHURCH_BELLS_VALUE = 666;
    /**
     * <code>INSTRUMENT_TYPE_SAW = 667;</code>
     */
    public static final int INSTRUMENT_TYPE_SAW_VALUE = 667;
    /**
     * <code>INSTRUMENT_TYPE_PANDURA = 668;</code>
     */
    public static final int INSTRUMENT_TYPE_PANDURA_VALUE = 668;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_GUITAR = 669;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_GUITAR_VALUE = 669;
    /**
     * <code>INSTRUMENT_TYPE_ELECTRIC_HARP = 670;</code>
     */
    public static final int INSTRUMENT_TYPE_ELECTRIC_HARP_VALUE = 670;
    /**
     * <code>INSTRUMENT_TYPE_BARYTON = 671;</code>
     */
    public static final int INSTRUMENT_TYPE_BARYTON_VALUE = 671;
    /**
     * <code>INSTRUMENT_TYPE_HOHNER_GUITARET = 672;</code>
     */
    public static final int INSTRUMENT_TYPE_HOHNER_GUITARET_VALUE = 672;
    /**
     * <code>INSTRUMENT_TYPE_RONDADOR = 673;</code>
     */
    public static final int INSTRUMENT_TYPE_RONDADOR_VALUE = 673;
    /**
     * <code>INSTRUMENT_TYPE_KUGO = 674;</code>
     */
    public static final int INSTRUMENT_TYPE_KUGO_VALUE = 674;
    /**
     * <code>INSTRUMENT_TYPE_BAHIAN_GUITAR = 675;</code>
     */
    public static final int INSTRUMENT_TYPE_BAHIAN_GUITAR_VALUE = 675;
    /**
     * <code>INSTRUMENT_TYPE_HI_HAT_CYMBAL = 676;</code>
     */
    public static final int INSTRUMENT_TYPE_HI_HAT_CYMBAL_VALUE = 676;
    /**
     * <code>INSTRUMENT_TYPE_WOOD_TRUMPET = 677;</code>
     */
    public static final int INSTRUMENT_TYPE_WOOD_TRUMPET_VALUE = 677;
    /**
     * <code>INSTRUMENT_TYPE_GAMELAN = 678;</code>
     */
    public static final int INSTRUMENT_TYPE_GAMELAN_VALUE = 678;
    /**
     * <code>INSTRUMENT_TYPE_ALTO_HORN = 679;</code>
     */
    public static final int INSTRUMENT_TYPE_ALTO_HORN_VALUE = 679;
    /**
     * <code>INSTRUMENT_TYPE_CLAVES = 680;</code>
     */
    public static final int INSTRUMENT_TYPE_CLAVES_VALUE = 680;
    /**
     * <code>INSTRUMENT_TYPE_VIOL = 681;</code>
     */
    public static final int INSTRUMENT_TYPE_VIOL_VALUE = 681;
    /**
     * <code>INSTRUMENT_TYPE_FLABIOL = 682;</code>
     */
    public static final int INSTRUMENT_TYPE_FLABIOL_VALUE = 682;
    /**
     * <code>INSTRUMENT_TYPE_DOUBLEBASS_VIOL = 683;</code>
     */
    public static final int INSTRUMENT_TYPE_DOUBLEBASS_VIOL_VALUE = 683;
    /**
     * <code>INSTRUMENT_TYPE_MAGNETIC_TAPE_TREATMENTS = 684;</code>
     */
    public static final int INSTRUMENT_TYPE_MAGNETIC_TAPE_TREATMENTS_VALUE = 684;
    /**
     * <code>INSTRUMENT_TYPE_LAP_STEEL_GUITAR = 685;</code>
     */
    public static final int INSTRUMENT_TYPE_LAP_STEEL_GUITAR_VALUE = 685;
    /**
     * <code>INSTRUMENT_TYPE_BASSET_HORN = 686;</code>
     */
    public static final int INSTRUMENT_TYPE_BASSET_HORN_VALUE = 686;
    /**
     * <code>INSTRUMENT_TYPE_CHALUMEAU = 687;</code>
     */
    public static final int INSTRUMENT_TYPE_CHALUMEAU_VALUE = 687;
    /**
     * <code>INSTRUMENT_TYPE_TIMBALES = 688;</code>
     */
    public static final int INSTRUMENT_TYPE_TIMBALES_VALUE = 688;
    /**
     * <code>INSTRUMENT_TYPE_BICYCLE_PUMP = 689;</code>
     */
    public static final int INSTRUMENT_TYPE_BICYCLE_PUMP_VALUE = 689;
    /**
     * <code>INSTRUMENT_TYPE_GLASS_HARMONICA = 690;</code>
     */
    public static final int INSTRUMENT_TYPE_GLASS_HARMONICA_VALUE = 690;
    /**
     * <code>INSTRUMENT_TYPE_JAKHAY = 691;</code>
     */
    public static final int INSTRUMENT_TYPE_JAKHAY_VALUE = 691;
    /**
     * <code>INSTRUMENT_TYPE_TIPLE = 692;</code>
     */
    public static final int INSTRUMENT_TYPE_TIPLE_VALUE = 692;
    /**
     * <code>INSTRUMENT_TYPE_FROG = 693;</code>
     */
    public static final int INSTRUMENT_TYPE_FROG_VALUE = 693;
    /**
     * <code>INSTRUMENT_TYPE_TUMBI = 694;</code>
     */
    public static final int INSTRUMENT_TYPE_TUMBI_VALUE = 694;
    /**
     * <code>INSTRUMENT_TYPE_SWARMANDAL = 695;</code>
     */
    public static final int INSTRUMENT_TYPE_SWARMANDAL_VALUE = 695;
    /**
     * <code>INSTRUMENT_TYPE_LUR = 696;</code>
     */
    public static final int INSTRUMENT_TYPE_LUR_VALUE = 696;
    /**
     * <code>INSTRUMENT_TYPE_TRES = 697;</code>
     */
    public static final int INSTRUMENT_TYPE_TRES_VALUE = 697;
    /**
     * <code>INSTRUMENT_TYPE_HAMMOND_ORGAN = 698;</code>
     */
    public static final int INSTRUMENT_TYPE_HAMMOND_ORGAN_VALUE = 698;
    /**
     * <code>INSTRUMENT_TYPE_PLUCKED_STRINGS = 699;</code>
     */
    public static final int INSTRUMENT_TYPE_PLUCKED_STRINGS_VALUE = 699;
    /**
     * <code>INSTRUMENT_TYPE_STRING_SECTION = 700;</code>
     */
    public static final int INSTRUMENT_TYPE_STRING_SECTION_VALUE = 700;
    /**
     * <code>INSTRUMENT_TYPE_ENNANGA = 701;</code>
     */
    public static final int INSTRUMENT_TYPE_ENNANGA_VALUE = 701;
    /**
     * <code>INSTRUMENT_TYPE_CONTRABASSOON = 702;</code>
     */
    public static final int INSTRUMENT_TYPE_CONTRABASSOON_VALUE = 702;
    /**
     * <code>INSTRUMENT_TYPE_UPRIGHT_PIANO = 703;</code>
     */
    public static final int INSTRUMENT_TYPE_UPRIGHT_PIANO_VALUE = 703;
    /**
     * <code>INSTRUMENT_TYPE_DOMBRA = 704;</code>
     */
    public static final int INSTRUMENT_TYPE_DOMBRA_VALUE = 704;
    /**
     * <code>INSTRUMENT_TYPE_BAROQUE_RECORDER = 705;</code>
     */
    public static final int INSTRUMENT_TYPE_BAROQUE_RECORDER_VALUE = 705;
    /**
     * <code>INSTRUMENT_TYPE_ACOUSTIC_GUITAR = 706;</code>
     */
    public static final int INSTRUMENT_TYPE_ACOUSTIC_GUITAR_VALUE = 706;
    /**
     * <code>INSTRUMENT_TYPE_BASS_REBEC = 707;</code>
     */
    public static final int INSTRUMENT_TYPE_BASS_REBEC_VALUE = 707;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InstrumentType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static InstrumentType forNumber(int value) {
      switch (value) {
        case 0: return INSTRUMENT_TYPE_KALIMBA;
        case 1: return INSTRUMENT_TYPE_KHARTAL;
        case 2: return INSTRUMENT_TYPE_XYLORIMBA;
        case 3: return INSTRUMENT_TYPE_TIN_WHISTLE;
        case 4: return INSTRUMENT_TYPE_DRUM_SAMPLE;
        case 5: return INSTRUMENT_TYPE_MIXED_VOICE;
        case 6: return INSTRUMENT_TYPE_CAIXA;
        case 7: return INSTRUMENT_TYPE_MANDOLINO;
        case 8: return INSTRUMENT_TYPE_CHROMATIC_HARMONICA;
        case 9: return INSTRUMENT_TYPE_CHAMBERLIN;
        case 10: return INSTRUMENT_TYPE_JARANA_JAROCHA;
        case 11: return INSTRUMENT_TYPE_SYNTH_STRINGS;
        case 12: return INSTRUMENT_TYPE_BAROQUE_OBOE;
        case 13: return INSTRUMENT_TYPE_DOUMBEK;
        case 14: return INSTRUMENT_TYPE_RNGA;
        case 15: return INSTRUMENT_TYPE_AGOGO_BELLS;
        case 16: return INSTRUMENT_TYPE_NYCKELHARPA;
        case 17: return INSTRUMENT_TYPE_BANJO_GUITAR;
        case 18: return INSTRUMENT_TYPE_CONCERTINA;
        case 19: return INSTRUMENT_TYPE_BOTTLES;
        case 20: return INSTRUMENT_TYPE_UKULELE;
        case 21: return INSTRUMENT_TYPE_CITTERN;
        case 22: return INSTRUMENT_TYPE_BASS_TUBA;
        case 23: return INSTRUMENT_TYPE_JAM_BLOCK;
        case 24: return INSTRUMENT_TYPE_SARRUSOPHONE;
        case 25: return INSTRUMENT_TYPE_TENOR_FLUTE;
        case 26: return INSTRUMENT_TYPE_MARXOPHONE;
        case 27: return INSTRUMENT_TYPE_ALBOKA;
        case 28: return INSTRUMENT_TYPE_MOUTH_PERCUSSION;
        case 29: return INSTRUMENT_TYPE_SAROD;
        case 30: return INSTRUMENT_TYPE_JAWHARP;
        case 31: return INSTRUMENT_TYPE_ALTO_SACKBUT;
        case 32: return INSTRUMENT_TYPE_CHROMATIC_BUTTON_ACCORDION;
        case 33: return INSTRUMENT_TYPE_PITCHED_PERCUSSION_INSTRUMENT;
        case 34: return INSTRUMENT_TYPE_FINGER_SNAPS;
        case 35: return INSTRUMENT_TYPE_PIANO_HARP;
        case 36: return INSTRUMENT_TYPE_PAIXIAO;
        case 37: return INSTRUMENT_TYPE_HIGHLAND_PIPES;
        case 38: return INSTRUMENT_TYPE_FIDDLE;
        case 39: return INSTRUMENT_TYPE_KHOL;
        case 40: return INSTRUMENT_TYPE_WOOD_FLUTE;
        case 41: return INSTRUMENT_TYPE_DAVUL;
        case 42: return INSTRUMENT_TYPE_VIOLA_POMPOSA;
        case 43: return INSTRUMENT_TYPE_ACOUSTIC_KEYBOARD;
        case 44: return INSTRUMENT_TYPE_JAGDHORN;
        case 45: return INSTRUMENT_TYPE_WIND_SECTION;
        case 46: return INSTRUMENT_TYPE_UPRIGHT_BASS;
        case 47: return INSTRUMENT_TYPE_SHEKERE;
        case 48: return INSTRUMENT_TYPE_HAMMERED_DULCIMER;
        case 49: return INSTRUMENT_TYPE_BASSOON;
        case 50: return INSTRUMENT_TYPE_BANDONEON;
        case 51: return INSTRUMENT_TYPE_DOHOL;
        case 52: return INSTRUMENT_TYPE_ALTO_TROMBONE;
        case 53: return INSTRUMENT_TYPE_SOUND_DESIGN;
        case 54: return INSTRUMENT_TYPE_RAUSCHPFEIFE;
        case 55: return INSTRUMENT_TYPE_FOLKLORIC_PERCUSSION;
        case 56: return INSTRUMENT_TYPE_MALE_VOICE;
        case 57: return INSTRUMENT_TYPE_DULCITONE;
        case 58: return INSTRUMENT_TYPE_RECO_RECO;
        case 59: return INSTRUMENT_TYPE_CAVAQUINHO;
        case 60: return INSTRUMENT_TYPE_PREPARED_PIANO;
        case 61: return INSTRUMENT_TYPE_JUG;
        case 62: return INSTRUMENT_TYPE_DUDUK;
        case 63: return INSTRUMENT_TYPE_CHILDRENS_BACKGROUND_VOCALIST;
        case 64: return INSTRUMENT_TYPE_REBAB;
        case 65: return INSTRUMENT_TYPE_HAEGEUM;
        case 66: return INSTRUMENT_TYPE_STROHL_VIOLIN;
        case 67: return INSTRUMENT_TYPE_EUPHONIUM;
        case 68: return INSTRUMENT_TYPE_STRING_INSTRUMENT;
        case 69: return INSTRUMENT_TYPE_SUONA;
        case 70: return INSTRUMENT_TYPE_GEMSHORN;
        case 71: return INSTRUMENT_TYPE_NADASWARAM;
        case 72: return INSTRUMENT_TYPE_TACK_PIANO;
        case 73: return INSTRUMENT_TYPE_HOT_FOUNTAIN_PEN;
        case 74: return INSTRUMENT_TYPE_HAND_BELLS;
        case 75: return INSTRUMENT_TYPE_BASSO_DA_BRACCIO;
        case 76: return INSTRUMENT_TYPE_TURNTABLE;
        case 77: return INSTRUMENT_TYPE_CELESTA;
        case 78: return INSTRUMENT_TYPE_LIRONE;
        case 79: return INSTRUMENT_TYPE_JEWS_HARP;
        case 80: return INSTRUMENT_TYPE_WOT;
        case 81: return INSTRUMENT_TYPE_OMNICHORD;
        case 82: return INSTRUMENT_TYPE_CALLIOPE;
        case 83: return INSTRUMENT_TYPE_CASTANET;
        case 84: return INSTRUMENT_TYPE_ALTO_CLARINET;
        case 85: return INSTRUMENT_TYPE_UILLEAN_PIPES;
        case 86: return INSTRUMENT_TYPE_LYRE;
        case 87: return INSTRUMENT_TYPE_SLIDE_TRUMPET;
        case 88: return INSTRUMENT_TYPE_SPRING_DRUM;
        case 89: return INSTRUMENT_TYPE_GUIRO;
        case 90: return INSTRUMENT_TYPE_COWBELL;
        case 91: return INSTRUMENT_TYPE_FOLK_HARP;
        case 92: return INSTRUMENT_TYPE_BOMBO_LEGUERO;
        case 93: return INSTRUMENT_TYPE_BASS_SAXOPHONE;
        case 94: return INSTRUMENT_TYPE_RATCHET;
        case 95: return INSTRUMENT_TYPE_ESRAJ;
        case 96: return INSTRUMENT_TYPE_ALTO_FLUTE;
        case 97: return INSTRUMENT_TYPE_KEMENCHE;
        case 98: return INSTRUMENT_TYPE_FRETLESS_BASS_GUITAR;
        case 99: return INSTRUMENT_TYPE_GUIRA;
        case 100: return INSTRUMENT_TYPE_BARITONE_HORN;
        case 101: return INSTRUMENT_TYPE_BASSET_CLARINET;
        case 102: return INSTRUMENT_TYPE_VALVE_TROMBONE;
        case 103: return INSTRUMENT_TYPE_SAXOPHONE;
        case 104: return INSTRUMENT_TYPE_SHO;
        case 105: return INSTRUMENT_TYPE_DHOLAK;
        case 106: return INSTRUMENT_TYPE_MRIDANGAM;
        case 107: return INSTRUMENT_TYPE_REED_INSTRUMENT;
        case 108: return INSTRUMENT_TYPE_SHAWM;
        case 109: return INSTRUMENT_TYPE_CROTALES;
        case 110: return INSTRUMENT_TYPE_HAMMERED_STRINGS;
        case 111: return INSTRUMENT_TYPE_CONTRABASS_CLARINET;
        case 112: return INSTRUMENT_TYPE_BASS_BANJO;
        case 113: return INSTRUMENT_TYPE_ALTO_CRUMHORN;
        case 114: return INSTRUMENT_TYPE_TAROGATO;
        case 115: return INSTRUMENT_TYPE_GASBA;
        case 116: return INSTRUMENT_TYPE_RHYTHM_STICK;
        case 117: return INSTRUMENT_TYPE_OBOROM_DRUM;
        case 118: return INSTRUMENT_TYPE_APPLAUSE;
        case 119: return INSTRUMENT_TYPE_QUENA;
        case 120: return INSTRUMENT_TYPE_BRAZILIAN_PERCUSSION;
        case 121: return INSTRUMENT_TYPE_ALPENHORN;
        case 122: return INSTRUMENT_TYPE_ROTOTOMS;
        case 123: return INSTRUMENT_TYPE_KATSA;
        case 124: return INSTRUMENT_TYPE_CAXIXI;
        case 125: return INSTRUMENT_TYPE_RANAT;
        case 126: return INSTRUMENT_TYPE_FIFE;
        case 127: return INSTRUMENT_TYPE_OPHICLEIDE;
        case 128: return INSTRUMENT_TYPE_VIOLA_CAIPIRA;
        case 129: return INSTRUMENT_TYPE_FINGER_CYMBALS;
        case 130: return INSTRUMENT_TYPE_HAND_CLAPS;
        case 131: return INSTRUMENT_TYPE_GUZHENG;
        case 132: return INSTRUMENT_TYPE_VALIHA;
        case 133: return INSTRUMENT_TYPE_DIPLE;
        case 134: return INSTRUMENT_TYPE_TENOR_TROMBONE;
        case 135: return INSTRUMENT_TYPE_KACAPI;
        case 136: return INSTRUMENT_TYPE_CONTRABASS_RECORDER;
        case 137: return INSTRUMENT_TYPE_GADULKA;
        case 138: return INSTRUMENT_TYPE_OCTOBAN;
        case 139: return INSTRUMENT_TYPE_CHOIR;
        case 140: return INSTRUMENT_TYPE_TABOR;
        case 141: return INSTRUMENT_TYPE_DILRUBA;
        case 142: return INSTRUMENT_TYPE_HUAPANGUERA;
        case 143: return INSTRUMENT_TYPE_HELICON;
        case 144: return INSTRUMENT_TYPE_CLAPSTICK;
        case 145: return INSTRUMENT_TYPE_VAKO_ORCHESTRON;
        case 146: return INSTRUMENT_TYPE_GROUP_BACKGROUND_VOCALISTS;
        case 147: return INSTRUMENT_TYPE_CIMBASSO;
        case 148: return INSTRUMENT_TYPE_GONG;
        case 149: return INSTRUMENT_TYPE_ELEPHANT_BELL;
        case 150: return INSTRUMENT_TYPE_SINGING_BOWLS;
        case 151: return INSTRUMENT_TYPE_TXALAPARTA;
        case 152: return INSTRUMENT_TYPE_PLUCKED_DULCIMER;
        case 153: return INSTRUMENT_TYPE_TAR__FRB___STRING__BRB__;
        case 154: return INSTRUMENT_TYPE_SNARE_DRUM__FRB___MARCHING__BRB__;
        case 155: return INSTRUMENT_TYPE_GAMBANG;
        case 156: return INSTRUMENT_TYPE_LEAD_VOCALIST;
        case 157: return INSTRUMENT_TYPE_RECORDER;
        case 158: return INSTRUMENT_TYPE_MANDOCELLO;
        case 159: return INSTRUMENT_TYPE_XALAM;
        case 160: return INSTRUMENT_TYPE_BUFO_BASS;
        case 161: return INSTRUMENT_TYPE_DOUBLE_VIOLIN;
        case 162: return INSTRUMENT_TYPE_TREBLE_VIOL;
        case 163: return INSTRUMENT_TYPE_TAROL;
        case 164: return INSTRUMENT_TYPE_ARPEGGIATING_SYNTH;
        case 165: return INSTRUMENT_TYPE_XUN;
        case 166: return INSTRUMENT_TYPE_GUACHARACA;
        case 167: return INSTRUMENT_TYPE_REPINIQUE;
        case 168: return INSTRUMENT_TYPE_CELLO;
        case 169: return INSTRUMENT_TYPE_SOPRANINO_RECORDER;
        case 170: return INSTRUMENT_TYPE_BAGPIPES;
        case 171: return INSTRUMENT_TYPE_BARITONE_SAXOPHONE;
        case 172: return INSTRUMENT_TYPE_SHRUTI_BOX;
        case 173: return INSTRUMENT_TYPE_PIANOLA;
        case 174: return INSTRUMENT_TYPE_NAI;
        case 175: return INSTRUMENT_TYPE_EKTARA;
        case 176: return INSTRUMENT_TYPE_RIQ;
        case 177: return INSTRUMENT_TYPE_TENOR_CRUMHORN;
        case 178: return INSTRUMENT_TYPE_ORPHARION;
        case 179: return INSTRUMENT_TYPE_ZUMMARA;
        case 180: return INSTRUMENT_TYPE_FUJARA;
        case 181: return INSTRUMENT_TYPE_BIRD_WHISTLE;
        case 182: return INSTRUMENT_TYPE_SYNTH_CHOIR;
        case 183: return INSTRUMENT_TYPE_DEFI;
        case 184: return INSTRUMENT_TYPE_VIELLE;
        case 185: return INSTRUMENT_TYPE_PHONOFIDDLE;
        case 186: return INSTRUMENT_TYPE_WIND_CHIMES;
        case 187: return INSTRUMENT_TYPE_ELECTRIC6_STRING_VIOLIN;
        case 188: return INSTRUMENT_TYPE_SARANGI;
        case 189: return INSTRUMENT_TYPE_SHENAI;
        case 190: return INSTRUMENT_TYPE_EPINETTE_DES_VOSGES;
        case 191: return INSTRUMENT_TYPE_BASS_DULCIAN;
        case 192: return INSTRUMENT_TYPE_TENOR_GUITAR;
        case 193: return INSTRUMENT_TYPE_BUGLE;
        case 194: return INSTRUMENT_TYPE_PUNGI;
        case 195: return INSTRUMENT_TYPE_PHIN;
        case 196: return INSTRUMENT_TYPE_NAAL;
        case 197: return INSTRUMENT_TYPE_YANGQIN;
        case 198: return INSTRUMENT_TYPE_TENOR_SACKBUT;
        case 199: return INSTRUMENT_TYPE_SOPRANO_CLARINET;
        case 200: return INSTRUMENT_TYPE_OCARINA;
        case 201: return INSTRUMENT_TYPE_SAMPLED_KEYBOARD;
        case 202: return INSTRUMENT_TYPE_CLARINO_TRUMPET;
        case 203: return INSTRUMENT_TYPE_KENDANG;
        case 204: return INSTRUMENT_TYPE_DOMRA;
        case 205: return INSTRUMENT_TYPE_SAW_DUANG;
        case 206: return INSTRUMENT_TYPE_ALTO_RECORDER;
        case 207: return INSTRUMENT_TYPE_CRUMHORN;
        case 208: return INSTRUMENT_TYPE_TAIKO;
        case 209: return INSTRUMENT_TYPE_BASS_CLARINET;
        case 210: return INSTRUMENT_TYPE_BALAFON;
        case 211: return INSTRUMENT_TYPE_MADAL;
        case 212: return INSTRUMENT_TYPE_ELECTRIC_MANDOLIN;
        case 213: return INSTRUMENT_TYPE_KHLUI;
        case 214: return INSTRUMENT_TYPE_HARP;
        case 215: return INSTRUMENT_TYPE_VIBRASLAP;
        case 216: return INSTRUMENT_TYPE_ORGANISTRUM;
        case 217: return INSTRUMENT_TYPE_TENOR_SHAWM;
        case 218: return INSTRUMENT_TYPE_MANDORE;
        case 219: return INSTRUMENT_TYPE_SULING;
        case 220: return INSTRUMENT_TYPE_GARDON;
        case 221: return INSTRUMENT_TYPE_LYRA_VIOL;
        case 222: return INSTRUMENT_TYPE_ZURNA;
        case 223: return INSTRUMENT_TYPE_RHODES;
        case 224: return INSTRUMENT_TYPE_NEY_FLUTE;
        case 225: return INSTRUMENT_TYPE_MINIATURE_KHENE;
        case 226: return INSTRUMENT_TYPE_ZERBAGHALI;
        case 227: return INSTRUMENT_TYPE_PIANET;
        case 228: return INSTRUMENT_TYPE_CLAVINET;
        case 229: return INSTRUMENT_TYPE_SOPRANO_DOMRA;
        case 230: return INSTRUMENT_TYPE_CAJON;
        case 231: return INSTRUMENT_TYPE_5__MINUS___STRING_BANJO;
        case 232: return INSTRUMENT_TYPE_SNARE_DRUM;
        case 233: return INSTRUMENT_TYPE_DZUDDAHORD;
        case 234: return INSTRUMENT_TYPE_BINGHI_DRUM;
        case 235: return INSTRUMENT_TYPE_DAMARU;
        case 236: return INSTRUMENT_TYPE_BOWED_STRINGS;
        case 237: return INSTRUMENT_TYPE_PUMP_ORGAN;
        case 238: return INSTRUMENT_TYPE_GUACHE;
        case 239: return INSTRUMENT_TYPE_BASS_VIOL;
        case 240: return INSTRUMENT_TYPE_TAMBOURINE;
        case 241: return INSTRUMENT_TYPE_MELLOPHONE;
        case 242: return INSTRUMENT_TYPE_BIWA;
        case 243: return INSTRUMENT_TYPE_CONTRABASS_SARRUSOPHONE;
        case 244: return INSTRUMENT_TYPE_WAGNER_TUBA;
        case 245: return INSTRUMENT_TYPE_IRISH_LOW_WHISTLE;
        case 246: return INSTRUMENT_TYPE_PICCOLO_TRUMPET;
        case 247: return INSTRUMENT_TYPE_SHELLTONE;
        case 248: return INSTRUMENT_TYPE_ALTO_VIOL;
        case 249: return INSTRUMENT_TYPE_TAONGA_PUORO;
        case 250: return INSTRUMENT_TYPE_NATIVE_AMERICAN_FLUTE;
        case 251: return INSTRUMENT_TYPE_CELTIC_HARP;
        case 252: return INSTRUMENT_TYPE_GUSLI;
        case 253: return INSTRUMENT_TYPE_GUNSHOTS;
        case 254: return INSTRUMENT_TYPE_TUSSELFLOYTE;
        case 255: return INSTRUMENT_TYPE_ORGAN;
        case 256: return INSTRUMENT_TYPE_DULCIAN;
        case 257: return INSTRUMENT_TYPE_HERALD_TRUMPET;
        case 258: return INSTRUMENT_TYPE_TAMBORA;
        case 259: return INSTRUMENT_TYPE_VIRGINALS;
        case 260: return INSTRUMENT_TYPE_ANIMAL_SOUNDS;
        case 261: return INSTRUMENT_TYPE_NGONI;
        case 262: return INSTRUMENT_TYPE_CONCERT_HARP;
        case 263: return INSTRUMENT_TYPE_AULOCHROME;
        case 264: return INSTRUMENT_TYPE_12__MINUS___STRING_ELECTRIC_GUITAR;
        case 265: return INSTRUMENT_TYPE_PARAGUAYAN_HARP;
        case 266: return INSTRUMENT_TYPE_PONG_LANG;
        case 267: return INSTRUMENT_TYPE_THAVIL;
        case 268: return INSTRUMENT_TYPE_CHEWING_SOUNDS;
        case 269: return INSTRUMENT_TYPE_BANJOLIN;
        case 270: return INSTRUMENT_TYPE_WASHBOARD;
        case 271: return INSTRUMENT_TYPE_GUQIN;
        case 272: return INSTRUMENT_TYPE_FRYING_PAN_GUITAR;
        case 273: return INSTRUMENT_TYPE_ATUMPAN;
        case 274: return INSTRUMENT_TYPE_GLASS_HARP;
        case 275: return INSTRUMENT_TYPE_LATIN_PERCUSSION;
        case 276: return INSTRUMENT_TYPE_CONTRABASS_TROMBONE;
        case 277: return INSTRUMENT_TYPE_POLICE_WHISTLE;
        case 278: return INSTRUMENT_TYPE_DHOL;
        case 279: return INSTRUMENT_TYPE_WASHTUB_BASS;
        case 280: return INSTRUMENT_TYPE_NATURAL_HORN;
        case 281: return INSTRUMENT_TYPE_ELECTRIC_GUITAR;
        case 282: return INSTRUMENT_TYPE_DRUM_MACHINE;
        case 283: return INSTRUMENT_TYPE_BONGOS;
        case 284: return INSTRUMENT_TYPE_GERMAN_FLUTE;
        case 285: return INSTRUMENT_TYPE_KAVAL;
        case 286: return INSTRUMENT_TYPE_TOMS;
        case 287: return INSTRUMENT_TYPE_VIOLA_D_AMORE;
        case 288: return INSTRUMENT_TYPE_VIOLIN;
        case 289: return INSTRUMENT_TYPE_SITAR;
        case 290: return INSTRUMENT_TYPE_BASS_HARMONICA;
        case 291: return INSTRUMENT_TYPE_MOUTH_ORGAN;
        case 292: return INSTRUMENT_TYPE_MARIMBAPHONE;
        case 293: return INSTRUMENT_TYPE_BOY_VOICE;
        case 294: return INSTRUMENT_TYPE_KHAMAK;
        case 295: return INSTRUMENT_TYPE_PIANO;
        case 296: return INSTRUMENT_TYPE_CUATRO;
        case 297: return INSTRUMENT_TYPE_VIOLINO_PICCOLO;
        case 298: return INSTRUMENT_TYPE_ZYDECO_RUBBOARD;
        case 299: return INSTRUMENT_TYPE_BABY_BASS;
        case 300: return INSTRUMENT_TYPE_TAARIJA;
        case 301: return INSTRUMENT_TYPE_DOUBLE_HARP;
        case 302: return INSTRUMENT_TYPE_MANDOLELE;
        case 303: return INSTRUMENT_TYPE_GIRL_VOICE;
        case 304: return INSTRUMENT_TYPE_TROMBONE;
        case 305: return INSTRUMENT_TYPE_AFRICAN_HARP;
        case 306: return INSTRUMENT_TYPE_SHAKER;
        case 307: return INSTRUMENT_TYPE_PIANO_ACCORDION;
        case 308: return INSTRUMENT_TYPE_ORCHESTRAL_HIT;
        case 309: return INSTRUMENT_TYPE_TIMBAU;
        case 310: return INSTRUMENT_TYPE_HARMONICA;
        case 311: return INSTRUMENT_TYPE_RECORD_NOISE;
        case 312: return INSTRUMENT_TYPE_SYNTH_STEEL_DRUMS;
        case 313: return INSTRUMENT_TYPE_BONES;
        case 314: return INSTRUMENT_TYPE_CRWTH;
        case 315: return INSTRUMENT_TYPE_GYALING;
        case 316: return INSTRUMENT_TYPE_SYNTHESIZER;
        case 317: return INSTRUMENT_TYPE_BARITONE_GUITAR;
        case 318: return INSTRUMENT_TYPE_SCRATCHER;
        case 319: return INSTRUMENT_TYPE_TANBOUR;
        case 320: return INSTRUMENT_TYPE_KEYBOARD;
        case 321: return INSTRUMENT_TYPE_LANGELEIK;
        case 322: return INSTRUMENT_TYPE_WIND_INSTRUMENT;
        case 323: return INSTRUMENT_TYPE_MUHARSING;
        case 324: return INSTRUMENT_TYPE_ORCHESTRAL_PERCUSSION;
        case 325: return INSTRUMENT_TYPE_SOPRANO_SAXOPHONE;
        case 326: return INSTRUMENT_TYPE_GUANZI;
        case 327: return INSTRUMENT_TYPE_ULI_ULI;
        case 328: return INSTRUMENT_TYPE_PIPA;
        case 329: return INSTRUMENT_TYPE_WOOD_BLOCK;
        case 330: return INSTRUMENT_TYPE_BANDURA;
        case 331: return INSTRUMENT_TYPE_YAYLI_TAMBUR;
        case 332: return INSTRUMENT_TYPE_WOBBLE_BOARD;
        case 333: return INSTRUMENT_TYPE_PEDAL_STEEL_GUITAR;
        case 334: return INSTRUMENT_TYPE_CYMBALS;
        case 335: return INSTRUMENT_TYPE_CELLO_BANJO;
        case 336: return INSTRUMENT_TYPE_BAROQUE_CLARINET;
        case 337: return INSTRUMENT_TYPE_SLIDE_WHISTLE;
        case 338: return INSTRUMENT_TYPE_MELODEON;
        case 339: return INSTRUMENT_TYPE_LOKOLE;
        case 340: return INSTRUMENT_TYPE_LUTE;
        case 341: return INSTRUMENT_TYPE_REBEC;
        case 342: return INSTRUMENT_TYPE_PAN_FLUTE;
        case 343: return INSTRUMENT_TYPE_HURDY_GURDY;
        case 344: return INSTRUMENT_TYPE_BERIMBAU;
        case 345: return INSTRUMENT_TYPE_FLEXATONE;
        case 346: return INSTRUMENT_TYPE_TEMPLE_BLOCKS;
        case 347: return INSTRUMENT_TYPE_DICTOPHONE;
        case 348: return INSTRUMENT_TYPE_DAYEREH;
        case 349: return INSTRUMENT_TYPE_JAWBONE;
        case 350: return INSTRUMENT_TYPE_MEDIEVAL_HARP;
        case 351: return INSTRUMENT_TYPE_VERACRUZ_HARP;
        case 352: return INSTRUMENT_TYPE_CHAPMAN_STICK;
        case 353: return INSTRUMENT_TYPE_PINKILLU;
        case 354: return INSTRUMENT_TYPE_GHAITA;
        case 355: return INSTRUMENT_TYPE_PI;
        case 356: return INSTRUMENT_TYPE_VENEZUELAN_HARP;
        case 357: return INSTRUMENT_TYPE_QUENACHO;
        case 358: return INSTRUMENT_TYPE_USER_DEFINED;
        case 359: return INSTRUMENT_TYPE_ELECTRIC_SITAR;
        case 360: return INSTRUMENT_TYPE_KANUN;
        case 361: return INSTRUMENT_TYPE_BENDIR;
        case 362: return INSTRUMENT_TYPE_MARIMBULA;
        case 363: return INSTRUMENT_TYPE_JINGHU;
        case 364: return INSTRUMENT_TYPE_CLAYPOT;
        case 365: return INSTRUMENT_TYPE_TINGSHA;
        case 366: return INSTRUMENT_TYPE_BELL_TREE;
        case 367: return INSTRUMENT_TYPE_CAJA;
        case 368: return INSTRUMENT_TYPE_MIXED_BACKGROUND_VOCALIST;
        case 369: return INSTRUMENT_TYPE_TOGAMAN_GUITAR_VIOL;
        case 370: return INSTRUMENT_TYPE_ELECTRIC_PIANO;
        case 371: return INSTRUMENT_TYPE_PICCOLO_FLUTE;
        case 372: return INSTRUMENT_TYPE_STICKS;
        case 373: return INSTRUMENT_TYPE_GUITARRON;
        case 374: return INSTRUMENT_TYPE_BANDURRIA;
        case 375: return INSTRUMENT_TYPE_DAN_TRANH;
        case 376: return INSTRUMENT_TYPE_HARDANGER_FIDDLE;
        case 377: return INSTRUMENT_TYPE_TENOR_DULCIAN;
        case 378: return INSTRUMENT_TYPE_BOMBO;
        case 379: return INSTRUMENT_TYPE_BASS_DRUM__FRB___KICK__BRB__;
        case 380: return INSTRUMENT_TYPE_APITO;
        case 381: return INSTRUMENT_TYPE_NJARKA;
        case 382: return INSTRUMENT_TYPE_BOSUNS_WHISTLE;
        case 383: return INSTRUMENT_TYPE_POSITIVE_ORGAN;
        case 384: return INSTRUMENT_TYPE_FRENCH_HORN;
        case 385: return INSTRUMENT_TYPE_TENOR_REBEC;
        case 386: return INSTRUMENT_TYPE_FEMALE_VOICE;
        case 387: return INSTRUMENT_TYPE_TREBLE_REBEC;
        case 388: return INSTRUMENT_TYPE_TIBETAN_BELLS;
        case 389: return INSTRUMENT_TYPE_SIKU;
        case 390: return INSTRUMENT_TYPE_ELECTRO_ACOUSTIC_HURDY_GURDY;
        case 391: return INSTRUMENT_TYPE_MANDOLIN;
        case 392: return INSTRUMENT_TYPE_SYNTH_BASS;
        case 393: return INSTRUMENT_TYPE_XYLOPHONE;
        case 394: return INSTRUMENT_TYPE_SOPRANINO_SAXOPHONE;
        case 395: return INSTRUMENT_TYPE_PORTUGUESE_GUITAR;
        case 396: return INSTRUMENT_TYPE_SABAR;
        case 397: return INSTRUMENT_TYPE_BRASS_INSTRUMENT;
        case 398: return INSTRUMENT_TYPE_CONTRABASS_SAXOPHONE;
        case 399: return INSTRUMENT_TYPE_SOPRANO_TRUMPET;
        case 400: return INSTRUMENT_TYPE_VUVUZELA;
        case 401: return INSTRUMENT_TYPE_KANJIRA;
        case 402: return INSTRUMENT_TYPE_KANTELE;
        case 403: return INSTRUMENT_TYPE_ZHONGHU;
        case 404: return INSTRUMENT_TYPE_OPTIGAN;
        case 405: return INSTRUMENT_TYPE_NEUTRAL_VOICE;
        case 406: return INSTRUMENT_TYPE_DUNGCHEN;
        case 407: return INSTRUMENT_TYPE_TOY_PIANO;
        case 408: return INSTRUMENT_TYPE_ZITHER;
        case 409: return INSTRUMENT_TYPE_SHAKUHACHI;
        case 410: return INSTRUMENT_TYPE_ARGHUL;
        case 411: return INSTRUMENT_TYPE_KHENE;
        case 412: return INSTRUMENT_TYPE_QARKABEB;
        case 413: return INSTRUMENT_TYPE_YUEQIN;
        case 414: return INSTRUMENT_TYPE_MALE_BACKGROUND_VOCALIST;
        case 415: return INSTRUMENT_TYPE_NYLON_STRING_GUITAR;
        case 416: return INSTRUMENT_TYPE_SURDO;
        case 417: return INSTRUMENT_TYPE_WATERPHONE;
        case 418: return INSTRUMENT_TYPE_PEDABRO;
        case 419: return INSTRUMENT_TYPE_LEONA;
        case 420: return INSTRUMENT_TYPE_SAND_BLOCKS;
        case 421: return INSTRUMENT_TYPE_MANDOLA;
        case 422: return INSTRUMENT_TYPE_METAL_CANS;
        case 423: return INSTRUMENT_TYPE_NAGARA;
        case 424: return INSTRUMENT_TYPE_CUMBUS;
        case 425: return INSTRUMENT_TYPE_TAMBURA;
        case 426: return INSTRUMENT_TYPE_PSALTERY;
        case 427: return INSTRUMENT_TYPE_ANGKLUNG;
        case 428: return INSTRUMENT_TYPE_CHILD_VOICE;
        case 429: return INSTRUMENT_TYPE_ALTO_SAXOPHONE;
        case 430: return INSTRUMENT_TYPE_PIPE_ORGAN;
        case 431: return INSTRUMENT_TYPE_TUBA;
        case 432: return INSTRUMENT_TYPE_VIBRAPHONE;
        case 433: return INSTRUMENT_TYPE_SHENG;
        case 434: return INSTRUMENT_TYPE_KORA;
        case 435: return INSTRUMENT_TYPE_TAMBORIM;
        case 436: return INSTRUMENT_TYPE_GHAYCHAK;
        case 437: return INSTRUMENT_TYPE_CONGAS;
        case 438: return INSTRUMENT_TYPE_TONGUE_DRUM;
        case 439: return INSTRUMENT_TYPE_BAROQUE_VIOLA;
        case 440: return INSTRUMENT_TYPE_TALKING_DRUM;
        case 441: return INSTRUMENT_TYPE_POST_HORN;
        case 442: return INSTRUMENT_TYPE_FINGER_CLICKS;
        case 443: return INSTRUMENT_TYPE_GANGA;
        case 444: return INSTRUMENT_TYPE_SLEIGH_BELLS;
        case 445: return INSTRUMENT_TYPE_VIOLA;
        case 446: return INSTRUMENT_TYPE_DRANYEN;
        case 447: return INSTRUMENT_TYPE_ROMANTIC_GUITAR;
        case 448: return INSTRUMENT_TYPE_DJEMBE;
        case 449: return INSTRUMENT_TYPE_SURBAHAR;
        case 450: return INSTRUMENT_TYPE_DUTAR;
        case 451: return INSTRUMENT_TYPE_TANPURA;
        case 452: return INSTRUMENT_TYPE_BASS_SHAWM;
        case 453: return INSTRUMENT_TYPE_BOMBARD;
        case 454: return INSTRUMENT_TYPE_SIREN;
        case 455: return INSTRUMENT_TYPE_TRAIN_SOUNDS;
        case 456: return INSTRUMENT_TYPE_TROMBA_MARINA;
        case 457: return INSTRUMENT_TYPE_BAJO_SEXTO;
        case 458: return INSTRUMENT_TYPE_DIDGERIDOO;
        case 459: return INSTRUMENT_TYPE_NYATITI;
        case 460: return INSTRUMENT_TYPE_CAR_SOUNDS;
        case 461: return INSTRUMENT_TYPE_CRAVIOLA;
        case 462: return INSTRUMENT_TYPE_DIZI;
        case 463: return INSTRUMENT_TYPE_SLIDE_SAXOPHONE;
        case 464: return INSTRUMENT_TYPE_BODHRAN;
        case 465: return INSTRUMENT_TYPE_CYMBAL__FRB___CRASH__BRB__;
        case 466: return INSTRUMENT_TYPE_THUNDER_SHEET;
        case 467: return INSTRUMENT_TYPE_BASS_RECORDER;
        case 468: return INSTRUMENT_TYPE_CYMBAL__FRB___SUSPENDED__BRB__;
        case 469: return INSTRUMENT_TYPE_BANJO;
        case 470: return INSTRUMENT_TYPE_ERHU;
        case 471: return INSTRUMENT_TYPE_SACKBUT;
        case 472: return INSTRUMENT_TYPE_GITTERN;
        case 473: return INSTRUMENT_TYPE_YOKIN;
        case 474: return INSTRUMENT_TYPE_OBOE_DA_CACCIA;
        case 475: return INSTRUMENT_TYPE_ALTO_SHAWM;
        case 476: return INSTRUMENT_TYPE_DUNUN;
        case 477: return INSTRUMENT_TYPE_SYNTH_LEAD;
        case 478: return INSTRUMENT_TYPE_LUTHEAL;
        case 479: return INSTRUMENT_TYPE_CLAVICHORD;
        case 480: return INSTRUMENT_TYPE_GAYAGEUM;
        case 481: return INSTRUMENT_TYPE_ELECTRIC_ORGAN;
        case 482: return INSTRUMENT_TYPE_DUGGI;
        case 483: return INSTRUMENT_TYPE_SYNTH_PAD;
        case 484: return INSTRUMENT_TYPE_BASS_FLUTE;
        case 485: return INSTRUMENT_TYPE_BAROQUE_VIOLIN;
        case 486: return INSTRUMENT_TYPE_LAOUTO;
        case 487: return INSTRUMENT_TYPE_CORDOVOX;
        case 488: return INSTRUMENT_TYPE_ARCH_LUTE;
        case 489: return INSTRUMENT_TYPE_BARITONE_OBOE;
        case 490: return INSTRUMENT_TYPE_CORNET;
        case 491: return INSTRUMENT_TYPE_TENOR_BANJO;
        case 492: return INSTRUMENT_TYPE_BARREL_ORGAN;
        case 493: return INSTRUMENT_TYPE_TENOR_SAXOPHONE;
        case 494: return INSTRUMENT_TYPE_UNPITCHED_PERCUSSION_INSTRUMENT;
        case 495: return INSTRUMENT_TYPE_MUSICAL_BOW;
        case 496: return INSTRUMENT_TYPE_XIAO;
        case 497: return INSTRUMENT_TYPE_TREATMENTS;
        case 498: return INSTRUMENT_TYPE_KOTO;
        case 499: return INSTRUMENT_TYPE_SHVI_WHISTLE;
        case 500: return INSTRUMENT_TYPE_MUSETTE;
        case 501: return INSTRUMENT_TYPE_BASS;
        case 502: return INSTRUMENT_TYPE_AUTOHARP;
        case 503: return INSTRUMENT_TYPE_ELECTRIC_VIOLIN;
        case 504: return INSTRUMENT_TYPE_BOUZOUKI;
        case 505: return INSTRUMENT_TYPE_SOPRANO_CRUMHORN;
        case 506: return INSTRUMENT_TYPE_CHIMES;
        case 507: return INSTRUMENT_TYPE_PANDEIRO;
        case 508: return INSTRUMENT_TYPE_CITOLE;
        case 509: return INSTRUMENT_TYPE_GRAND_PIANO;
        case 510: return INSTRUMENT_TYPE_KAZOO;
        case 511: return INSTRUMENT_TYPE_BALALAIKA;
        case 512: return INSTRUMENT_TYPE_MOHAN_VEENA;
        case 513: return INSTRUMENT_TYPE_VICHITRA_VEENA;
        case 514: return INSTRUMENT_TYPE_CHATTER;
        case 515: return INSTRUMENT_TYPE_POCKET_TRUMPET;
        case 516: return INSTRUMENT_TYPE_SPECTRASONICS_OMNISPHERE;
        case 517: return INSTRUMENT_TYPE_BANHU;
        case 518: return INSTRUMENT_TYPE_BASS_SACKBUT;
        case 519: return INSTRUMENT_TYPE_SOUSAPHONE;
        case 520: return INSTRUMENT_TYPE_BODY_PERCUSSION;
        case 521: return INSTRUMENT_TYPE_SOPRANO_SHAWM;
        case 522: return INSTRUMENT_TYPE_PERCUSSION_INSTRUMENT;
        case 523: return INSTRUMENT_TYPE_URUMEE;
        case 524: return INSTRUMENT_TYPE_SYNTH_BRASS;
        case 525: return INSTRUMENT_TYPE_RENAISSANCE_GUITAR;
        case 526: return INSTRUMENT_TYPE_COMB;
        case 527: return INSTRUMENT_TYPE_CLARINET;
        case 528: return INSTRUMENT_TYPE_MIZMAR;
        case 529: return INSTRUMENT_TYPE_CYMBAL__FRB___RIDE__BRB__;
        case 530: return INSTRUMENT_TYPE_TIMPANI;
        case 531: return INSTRUMENT_TYPE_TRIANGLE;
        case 532: return INSTRUMENT_TYPE_FLUTE;
        case 533: return INSTRUMENT_TYPE_BAGLAMA;
        case 534: return INSTRUMENT_TYPE_MEDIEVAL_FIDDLE;
        case 535: return INSTRUMENT_TYPE_VIHUELA;
        case 536: return INSTRUMENT_TYPE_BATA;
        case 537: return INSTRUMENT_TYPE_NATURAL_TRUMPET;
        case 538: return INSTRUMENT_TYPE_FEMALE_BACKGROUND_VOCALIST;
        case 539: return INSTRUMENT_TYPE_TOUCH_GUITAR;
        case 540: return INSTRUMENT_TYPE_HECKELPHONE;
        case 541: return INSTRUMENT_TYPE_TRUMPET;
        case 542: return INSTRUMENT_TYPE_STEEL_DRUMS;
        case 543: return INSTRUMENT_TYPE_OUD;
        case 544: return INSTRUMENT_TYPE_TIMPLE;
        case 545: return INSTRUMENT_TYPE_BIRD_SONG;
        case 546: return INSTRUMENT_TYPE_ELECTRIC_VIOLA;
        case 547: return INSTRUMENT_TYPE_BASS_DRUM__FRB___CONCERT__BRB__;
        case 548: return INSTRUMENT_TYPE_ROLMO;
        case 549: return INSTRUMENT_TYPE_BAROQUE_BASSOON;
        case 550: return INSTRUMENT_TYPE_LAUNEDDAS;
        case 551: return INSTRUMENT_TYPE_XAPHOON;
        case 552: return INSTRUMENT_TYPE_MARACAS;
        case 553: return INSTRUMENT_TYPE_OBOE;
        case 554: return INSTRUMENT_TYPE_TOY_ACCORDION;
        case 555: return INSTRUMENT_TYPE_REGAL;
        case 556: return INSTRUMENT_TYPE_SANTOOR;
        case 557: return INSTRUMENT_TYPE_DAEGEUM;
        case 558: return INSTRUMENT_TYPE_SORDUN;
        case 559: return INSTRUMENT_TYPE_CHARANGO;
        case 560: return INSTRUMENT_TYPE_CALABASH;
        case 561: return INSTRUMENT_TYPE_FISCORN;
        case 562: return INSTRUMENT_TYPE_SLAPSTICK;
        case 563: return INSTRUMENT_TYPE_VI_TAR;
        case 564: return INSTRUMENT_TYPE_GIZMO;
        case 565: return INSTRUMENT_TYPE_WILLOW_FLUTE;
        case 566: return INSTRUMENT_TYPE_BREAKBEAT;
        case 567: return INSTRUMENT_TYPE_KHIM;
        case 568: return INSTRUMENT_TYPE_VEENA;
        case 569: return INSTRUMENT_TYPE_BAROQUE_CELLO;
        case 570: return INSTRUMENT_TYPE_LITHOPHONE;
        case 571: return INSTRUMENT_TYPE_DOUBLE_BASS;
        case 572: return INSTRUMENT_TYPE_ACOUSTIC_BASS_GUITAR;
        case 573: return INSTRUMENT_TYPE_PADDLE_DRUMS;
        case 574: return INSTRUMENT_TYPE_UNINTENDED_ARTIFACTS;
        case 575: return INSTRUMENT_TYPE_AFRICAN_PERCUSSION;
        case 576: return INSTRUMENT_TYPE_CUICA;
        case 577: return INSTRUMENT_TYPE_TAR__FRB___PERCUSSION__BRB__;
        case 578: return INSTRUMENT_TYPE_TARKA;
        case 579: return INSTRUMENT_TYPE_SOPRANO_RECORDER;
        case 580: return INSTRUMENT_TYPE_GLOCKENSPIEL;
        case 581: return INSTRUMENT_TYPE_FLUGELHORN;
        case 582: return INSTRUMENT_TYPE_WELSH_TRIPLE_HARP;
        case 583: return INSTRUMENT_TYPE_ANDEAN_HARP;
        case 584: return INSTRUMENT_TYPE_FLAGEOLET;
        case 585: return INSTRUMENT_TYPE_TAAL;
        case 586: return INSTRUMENT_TYPE_SOPRANO_DULCIAN;
        case 587: return INSTRUMENT_TYPE_GUITAR;
        case 588: return INSTRUMENT_TYPE_WIND_MACHINE;
        case 589: return INSTRUMENT_TYPE_BAROQUE_FLUTE;
        case 590: return INSTRUMENT_TYPE_BAWU;
        case 591: return INSTRUMENT_TYPE_KEYED_TRUMPET;
        case 592: return INSTRUMENT_TYPE_DRUM_KIT;
        case 593: return INSTRUMENT_TYPE_POTS_AND_PANS;
        case 594: return INSTRUMENT_TYPE_MAZHAR;
        case 595: return INSTRUMENT_TYPE_TABLA;
        case 596: return INSTRUMENT_TYPE_DAF;
        case 597: return INSTRUMENT_TYPE_ANVIL;
        case 598: return INSTRUMENT_TYPE_DRUM_STICKS;
        case 599: return INSTRUMENT_TYPE_RABEL;
        case 600: return INSTRUMENT_TYPE_SPINET;
        case 601: return INSTRUMENT_TYPE_TENOR_DRUM;
        case 602: return INSTRUMENT_TYPE_PERCUSSION_SECTION;
        case 603: return INSTRUMENT_TYPE_ACCORDION;
        case 604: return INSTRUMENT_TYPE_SIMSIMIYYA;
        case 605: return INSTRUMENT_TYPE_SHAMISEN;
        case 606: return INSTRUMENT_TYPE_KHONG_WONG_YAI;
        case 607: return INSTRUMENT_TYPE_DAN_BAU;
        case 608: return INSTRUMENT_TYPE_SOPRANO_CORNET;
        case 609: return INSTRUMENT_TYPE_SINTIR;
        case 610: return INSTRUMENT_TYPE_MELODICA;
        case 611: return INSTRUMENT_TYPE_ELECTRIC_CELLO;
        case 612: return INSTRUMENT_TYPE_CONTRA_ALTO_CLARINET;
        case 613: return INSTRUMENT_TYPE_WIRE_STRUNG_HARP;
        case 614: return INSTRUMENT_TYPE_SAUNG;
        case 615: return INSTRUMENT_TYPE_TENOR_VIOL;
        case 616: return INSTRUMENT_TYPE_FOOT_STOMP;
        case 617: return INSTRUMENT_TYPE_THEORBO;
        case 618: return INSTRUMENT_TYPE_CHOCALHO;
        case 619: return INSTRUMENT_TYPE_SOUND_EFFECTS;
        case 620: return INSTRUMENT_TYPE_BASS_CITTERN;
        case 621: return INSTRUMENT_TYPE_SYNTH_F_X;
        case 622: return INSTRUMENT_TYPE_LOWREY_ORGAN;
        case 623: return INSTRUMENT_TYPE_SISTRUM;
        case 624: return INSTRUMENT_TYPE_TOMPAK;
        case 625: return INSTRUMENT_TYPE_BASS_TROMBONE;
        case 626: return INSTRUMENT_TYPE_FLOYERA;
        case 627: return INSTRUMENT_TYPE_KNUCKLES;
        case 628: return INSTRUMENT_TYPE_CABASA;
        case 629: return INSTRUMENT_TYPE_DOBRO_GUITAR;
        case 630: return INSTRUMENT_TYPE_CIMBALOM;
        case 631: return INSTRUMENT_TYPE_TZOURAS;
        case 632: return INSTRUMENT_TYPE_BOZOQ;
        case 633: return INSTRUMENT_TYPE_MARIMBA;
        case 634: return INSTRUMENT_TYPE_ZEZE;
        case 635: return INSTRUMENT_TYPE_TENOR_RECORDER;
        case 636: return INSTRUMENT_TYPE_MUSIC_BOX;
        case 637: return INSTRUMENT_TYPE_FORTEPIANO;
        case 638: return INSTRUMENT_TYPE_PICCOLO_CLARINET;
        case 639: return INSTRUMENT_TYPE_SPOONS;
        case 640: return INSTRUMENT_TYPE_HAND_CHIMES;
        case 641: return INSTRUMENT_TYPE_MIJWIZ;
        case 642: return INSTRUMENT_TYPE_RACKETT;
        case 643: return INSTRUMENT_TYPE_ELECTRIC_BASS_GUITAR;
        case 644: return INSTRUMENT_TYPE_PICCOLO_BASS;
        case 645: return INSTRUMENT_TYPE_UDU;
        case 646: return INSTRUMENT_TYPE_OTHER_INSTRUMENT;
        case 647: return INSTRUMENT_TYPE_BASS_TRUMPET;
        case 648: return INSTRUMENT_TYPE_BANSURI;
        case 649: return INSTRUMENT_TYPE_SQUARE_PIANO;
        case 650: return INSTRUMENT_TYPE_HARPSICHORD;
        case 651: return INSTRUMENT_TYPE_IRISH_BOUZOUKI;
        case 652: return INSTRUMENT_TYPE_RATTLE;
        case 653: return INSTRUMENT_TYPE_ENGLISH_HORN;
        case 654: return INSTRUMENT_TYPE_SHOFAR;
        case 655: return INSTRUMENT_TYPE_RAINSTICK;
        case 656: return INSTRUMENT_TYPE_CARILLON;
        case 657: return INSTRUMENT_TYPE_CORNETTO;
        case 658: return INSTRUMENT_TYPE_GREAT_BASS_RECORDER;
        case 659: return INSTRUMENT_TYPE_TEMPLE_BELL;
        case 660: return INSTRUMENT_TYPE_MELLOTRON;
        case 661: return INSTRUMENT_TYPE_OBOE_D_AMORE;
        case 662: return INSTRUMENT_TYPE_CONCH_SHELL;
        case 663: return INSTRUMENT_TYPE_12__MINUS___STRING_GUITAR;
        case 664: return INSTRUMENT_TYPE_SERPENT;
        case 665: return INSTRUMENT_TYPE_KHONG_WONG_LEK;
        case 666: return INSTRUMENT_TYPE_CHURCH_BELLS;
        case 667: return INSTRUMENT_TYPE_SAW;
        case 668: return INSTRUMENT_TYPE_PANDURA;
        case 669: return INSTRUMENT_TYPE_BAROQUE_GUITAR;
        case 670: return INSTRUMENT_TYPE_ELECTRIC_HARP;
        case 671: return INSTRUMENT_TYPE_BARYTON;
        case 672: return INSTRUMENT_TYPE_HOHNER_GUITARET;
        case 673: return INSTRUMENT_TYPE_RONDADOR;
        case 674: return INSTRUMENT_TYPE_KUGO;
        case 675: return INSTRUMENT_TYPE_BAHIAN_GUITAR;
        case 676: return INSTRUMENT_TYPE_HI_HAT_CYMBAL;
        case 677: return INSTRUMENT_TYPE_WOOD_TRUMPET;
        case 678: return INSTRUMENT_TYPE_GAMELAN;
        case 679: return INSTRUMENT_TYPE_ALTO_HORN;
        case 680: return INSTRUMENT_TYPE_CLAVES;
        case 681: return INSTRUMENT_TYPE_VIOL;
        case 682: return INSTRUMENT_TYPE_FLABIOL;
        case 683: return INSTRUMENT_TYPE_DOUBLEBASS_VIOL;
        case 684: return INSTRUMENT_TYPE_MAGNETIC_TAPE_TREATMENTS;
        case 685: return INSTRUMENT_TYPE_LAP_STEEL_GUITAR;
        case 686: return INSTRUMENT_TYPE_BASSET_HORN;
        case 687: return INSTRUMENT_TYPE_CHALUMEAU;
        case 688: return INSTRUMENT_TYPE_TIMBALES;
        case 689: return INSTRUMENT_TYPE_BICYCLE_PUMP;
        case 690: return INSTRUMENT_TYPE_GLASS_HARMONICA;
        case 691: return INSTRUMENT_TYPE_JAKHAY;
        case 692: return INSTRUMENT_TYPE_TIPLE;
        case 693: return INSTRUMENT_TYPE_FROG;
        case 694: return INSTRUMENT_TYPE_TUMBI;
        case 695: return INSTRUMENT_TYPE_SWARMANDAL;
        case 696: return INSTRUMENT_TYPE_LUR;
        case 697: return INSTRUMENT_TYPE_TRES;
        case 698: return INSTRUMENT_TYPE_HAMMOND_ORGAN;
        case 699: return INSTRUMENT_TYPE_PLUCKED_STRINGS;
        case 700: return INSTRUMENT_TYPE_STRING_SECTION;
        case 701: return INSTRUMENT_TYPE_ENNANGA;
        case 702: return INSTRUMENT_TYPE_CONTRABASSOON;
        case 703: return INSTRUMENT_TYPE_UPRIGHT_PIANO;
        case 704: return INSTRUMENT_TYPE_DOMBRA;
        case 705: return INSTRUMENT_TYPE_BAROQUE_RECORDER;
        case 706: return INSTRUMENT_TYPE_ACOUSTIC_GUITAR;
        case 707: return INSTRUMENT_TYPE_BASS_REBEC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InstrumentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InstrumentType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InstrumentType>() {
            public InstrumentType findValueByNumber(int number) {
              return InstrumentType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(75);
    }

    private static final InstrumentType[] VALUES = values();

    public static InstrumentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private InstrumentType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.InstrumentType)
  }

  /**
   * Protobuf enum {@code avs.Iso639Part12LanguageCode}
   */
  public enum Iso639Part12LanguageCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUI = 0;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LUI(0),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NYN = 1;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NYN(1),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MWL = 2;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MWL(2),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NYM = 3;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NYM(3),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAD = 4;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BAD(4),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUN = 5;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LUN(5),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NYO = 6;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NYO(6),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FIJ = 7;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FIJ(7),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUO = 8;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LUO(8),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FIL = 9;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FIL(9),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HMN = 10;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HMN(10),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MWR = 11;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MWR(11),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FIN = 12;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FIN(12),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DEL = 13;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DEL(13),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HMO = 14;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HMO(14),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAI = 15;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BAI(15),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUS = 16;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LUS(16),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAL = 17;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BAL(17),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DEN = 18;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DEN(18),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAK = 19;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BAK(19),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAN = 20;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BAN(20),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UGA = 21;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UGA(21),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAM = 22;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BAM(22),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VIE = 23;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_VIE(23),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FIU = 24;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FIU(24),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAT = 25;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BAT(25),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DEU = 26;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DEU(26),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAS = 27;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BAS(27),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EGY = 28;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EGY(28),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TEL = 29;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TEL(29),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RAJ = 30;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RAJ(30),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JRB = 31;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_JRB(31),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NZI = 32;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NZI(32),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GLA = 33;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GLA(33),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YOR = 34;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_YOR(34),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TEM = 35;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TEM(35),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SCO = 36;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SCO(36),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SCN = 37;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SCN(37),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AA = 38;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AA(38),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RAP = 39;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RAP(39),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TER = 40;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TER(40),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AB = 41;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AB(41),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GLE = 42;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GLE(42),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RAR = 43;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RAR(43),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TET = 44;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TET(44),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GLG = 45;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GLG(45),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AE = 46;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AE(46),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AF = 47;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AF(47),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IPK = 48;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IPK(48),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AK = 49;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AK(49),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AM = 50;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AM(50),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AN = 51;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AN(51),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GLV = 52;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GLV(52),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AR = 53;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AR(53),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AS = 54;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AS(54),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MYA = 55;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MYA(55),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AV = 56;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AV(56),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YPK = 57;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_YPK(57),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KUA = 58;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KUA(58),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AY = 59;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AY(59),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WLN = 60;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WLN(60),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AZ = 61;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AZ(61),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BA = 62;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BA(62),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CEB = 63;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CEB(63),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KUM = 64;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KUM(64),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BE = 65;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BE(65),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GMH = 66;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GMH(66),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MYN = 67;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MYN(67),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BG = 68;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BG(68),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BH = 69;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BH(69),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BI = 70;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BI(70),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KUR = 71;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KUR(71),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BM = 72;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BM(72),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CEL = 73;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CEL(73),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KUT = 74;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KUT(74),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MYV = 75;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MYV(75),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BN = 76;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BN(76),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BO = 77;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BO(77),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DGR = 78;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DGR(78),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BR = 79;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BR(79),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CES = 80;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CES(80),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BS = 81;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BS(81),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UIG = 82;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UIG(82),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AAR = 83;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AAR(83),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TGL = 84;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TGL(84),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TGK = 85;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TGK(85),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IRA = 86;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IRA(86),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SEM = 87;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SEM(87),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SEL = 88;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SEL(88),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CA = 89;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CA(89),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CE = 90;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CE(90),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CH = 91;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CH(91),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IRO = 92;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IRO(92),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ABK = 93;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ABK(93),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CO = 94;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CO(94),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_THA = 95;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_THA(95),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CR = 96;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CR(96),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CS = 97;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CS(97),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CU = 98;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CU(98),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CV = 99;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CV(99),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CY = 100;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CY(100),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EKA = 101;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EKA(101),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DA = 102;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DA(102),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DE = 103;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DE(103),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GOH = 104;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GOH(104),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ACE = 105;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ACE(105),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ISL = 106;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ISL(106),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BEJ = 107;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BEJ(107),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ACH = 108;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ACH(108),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GON = 109;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GON(109),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BEL = 110;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BEL(110),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DIN = 111;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DIN(111),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BEN = 112;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BEN(112),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BEM = 113;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BEM(113),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GOR = 114;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GOR(114),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SGA = 115;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SGA(115),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GOT = 116;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GOT(116),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BER = 117;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BER(117),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DIV = 118;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DIV(118),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZUL = 119;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZUL(119),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAA = 120;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PAA(120),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DV = 121;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DV(121),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZUN = 122;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZUN(122),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TIG = 123;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TIG(123),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WOL = 124;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WOL(124),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DZ = 125;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DZ(125),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ITA = 126;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ITA(126),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAG = 127;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PAG(127),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAL = 128;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PAL(128),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SGN = 129;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SGN(129),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAN = 130;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PAN(130),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TIR = 131;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TIR(131),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHB = 132;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHB(132),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHA = 133;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHA(133),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UKR = 134;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UKR(134),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAM = 135;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PAM(135),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAP = 136;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PAP(136),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ADA = 137;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ADA(137),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EE = 138;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EE(138),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TIV = 139;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TIV(139),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHE = 140;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHE(140),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHG = 141;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHG(141),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ELL = 142;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ELL(142),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAU = 143;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PAU(143),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EL = 144;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EL(144),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHK = 145;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHK(145),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHN = 146;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHN(146),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EN = 147;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EN(147),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHM = 148;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHM(148),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EO = 149;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EO(149),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHP = 150;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHP(150),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHO = 151;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHO(151),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHR = 152;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHR(152),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HRV = 153;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HRV(153),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ES = 154;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ES(154),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ET = 155;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ET(155),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHV = 156;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHV(156),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EU = 157;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EU(157),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ELX = 158;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ELX(158),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHU = 159;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHU(159),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHY = 160;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CHY(160),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HSB = 161;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HSB(161),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ADY = 162;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ADY(162),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SHN = 163;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SHN(163),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FA = 164;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FA(164),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BGC = 165;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BGC(165),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FF = 166;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FF(166),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FI = 167;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FI(167),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FJ = 168;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FJ(168),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FON = 169;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FON(169),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FO = 170;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FO(170),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UMB = 171;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UMB(171),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FR = 172;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FR(172),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SID = 173;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SID(173),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VOL = 174;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_VOL(174),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FY = 175;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FY(175),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TKL = 176;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TKL(176),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GRB = 177;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GRB(177),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SIO = 178;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SIO(178),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SIN = 179;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SIN(179),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GRC = 180;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GRC(180),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GA = 181;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GA(181),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VOT = 182;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_VOT(182),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GD = 183;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GD(183),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AFA = 184;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AFA(184),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ENG = 185;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ENG(185),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SIT = 186;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SIT(186),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GRN = 187;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GRN(187),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AFH = 188;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AFH(188),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GL = 189;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GL(189),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ENM = 190;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ENM(190),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GN = 191;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GN(191),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BHO = 192;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BHO(192),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UND = 193;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UND(193),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AFR = 194;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AFR(194),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GU = 195;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GU(195),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GV = 196;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GV(196),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TLI = 197;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TLI(197),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TLH = 198;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TLH(198),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HA = 199;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HA(199),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZXX = 200;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZXX(200),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HE = 201;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HE(201),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BIH = 202;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BIH(202),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HUN = 203;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HUN(203),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HI = 204;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HI(204),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HUP = 205;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HUP(205),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BIK = 206;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BIK(206),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BIN = 207;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BIN(207),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HO = 208;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HO(208),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HR = 209;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HR(209),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GSW = 210;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GSW(210),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HT = 211;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HT(211),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BIS = 212;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BIS(212),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HU = 213;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HU(213),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TMH = 214;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TMH(214),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HY = 215;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HY(215),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HZ = 216;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HZ(216),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRA = 217;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FRA(217),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OCI = 218;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OCI(218),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAH = 219;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NAH(219),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAI = 220;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NAI(220),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IA = 221;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IA(221),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ID = 222;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ID(222),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PEO = 223;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PEO(223),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IE = 224;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IE(224),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAP = 225;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NAP(225),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IG = 226;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IG(226),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_II = 227;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_II(227),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRM = 228;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FRM(228),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZZA = 229;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZZA(229),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IK = 230;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IK(230),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAV = 231;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NAV(231),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRO = 232;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FRO(232),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAU = 233;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NAU(233),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EPO = 234;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EPO(234),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IO = 235;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IO(235),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRS = 236;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FRS(236),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRR = 237;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FRR(237),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SLA = 238;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SLA(238),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IS = 239;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IS(239),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IT = 240;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IT(240),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRY = 241;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FRY(241),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IU = 242;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IU(242),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SLK = 243;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SLK(243),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JA = 244;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_JA(244),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CMC = 245;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CMC(245),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NBL = 246;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NBL(246),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SLV = 247;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SLV(247),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GUJ = 248;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GUJ(248),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DOI = 249;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DOI(249),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMA = 250;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SMA(250),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AIN = 251;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AIN(251),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SME = 252;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SME(252),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JV = 253;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_JV(253),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TOG = 254;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TOG(254),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMI = 255;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SMI(255),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAD = 256;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAD(256),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMJ = 257;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SMJ(257),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TON = 258;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TON(258),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAG = 259;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAG(259),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMO = 260;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SMO(260),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAI = 261;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAI(261),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAH = 262;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAH(262),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMN = 263;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SMN(263),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KA = 264;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KA(264),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BLA = 265;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BLA(265),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAK = 266;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAK(266),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMS = 267;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SMS(267),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAL = 268;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAL(268),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAN = 269;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAN(269),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KG = 270;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KG(270),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAP = 271;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAP(271),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KI = 272;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KI(272),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAS = 273;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAS(273),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KJ = 274;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KJ(274),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAR = 275;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MAR(275),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KK = 276;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KK(276),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KL = 277;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KL(277),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KM = 278;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KM(278),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KN = 279;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KN(279),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KO = 280;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KO(280),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_URD = 281;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_URD(281),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CNR = 282;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CNR(282),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KR = 283;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KR(283),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SNA = 284;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SNA(284),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KS = 285;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KS(285),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SND = 286;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SND(286),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KU = 287;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KU(287),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KV = 288;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KV(288),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KW = 289;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KW(289),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TPI = 290;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TPI(290),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KY = 291;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KY(291),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NDE = 292;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NDE(292),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PHI = 293;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PHI(293),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SNK = 294;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SNK(294),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HYE = 295;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HYE(295),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LA = 296;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LA(296),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AKA = 297;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AKA(297),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LB = 298;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LB(298),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PHN = 299;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PHN(299),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NDO = 300;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NDO(300),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GWI = 301;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GWI(301),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LG = 302;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LG(302),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FUL = 303;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FUL(303),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NDS = 304;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NDS(304),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LI = 305;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LI(305),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AKK = 306;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AKK(306),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LN = 307;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LN(307),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FUR = 308;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FUR(308),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LO = 309;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LO(309),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_COP = 310;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_COP(310),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_COS = 311;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_COS(311),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EST = 312;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EST(312),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_COR = 313;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_COR(313),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LT = 314;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LT(314),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LU = 315;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LU(315),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LV = 316;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LV(316),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SOG = 317;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SOG(317),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAD = 318;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LAD(318),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SOM = 319;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SOM(319),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DRA = 320;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DRA(320),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAH = 321;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LAH(321),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SON = 322;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SON(322),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NEP = 323;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NEP(323),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CPF = 324;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CPF(324),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SOT = 325;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SOT(325),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CPE = 326;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CPE(326),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAM = 327;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LAM(327),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MG = 328;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MG(328),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAO = 329;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LAO(329),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MH = 330;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MH(330),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ALE = 331;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ALE(331),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MI = 332;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MI(332),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ALG = 333;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ALG(333),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAT = 334;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LAT(334),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MK = 335;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MK(335),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ML = 336;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ML(336),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAV = 337;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LAV(337),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MN = 338;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MN(338),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NEW = 339;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NEW(339),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MO = 340;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MO(340),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CPP = 341;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CPP(341),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SPA = 342;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SPA(342),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MR = 343;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MR(343),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MS = 344;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MS(344),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MT = 345;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MT(345),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ALT = 346;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ALT(346),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BNT = 347;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BNT(347),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MY = 348;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MY(348),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MDF = 349;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MDF(349),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DSB = 350;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DSB(350),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NA = 351;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NA(351),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NB = 352;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NB(352),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BOD = 353;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BOD(353),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ND = 354;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ND(354),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NE = 355;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NE(355),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NG = 356;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NG(356),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MDR = 357;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MDR(357),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AMH = 358;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AMH(358),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NL = 359;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NL(359),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NN = 360;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NN(360),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NO = 361;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NO(361),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EUS = 362;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EUS(362),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NR = 363;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NR(363),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ROA = 364;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ROA(364),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BOS = 365;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BOS(365),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NV = 366;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NV(366),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ROH = 367;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ROH(367),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SQI = 368;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SQI(368),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAA = 369;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAA(369),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NY = 370;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NY(370),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TSI = 371;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TSI(371),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAC = 372;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAC(372),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAB = 373;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAB(373),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TSN = 374;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TSN(374),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RON = 375;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RON(375),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TSO = 376;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TSO(376),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ROM = 377;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ROM(377),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OC = 378;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OC(378),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAM = 379;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAM(379),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CRE = 380;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CRE(380),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAL = 381;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAL(381),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MEN = 382;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MEN(382),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CRH = 383;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CRH(383),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAN = 384;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAN(384),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OJ = 385;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OJ(385),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ANG = 386;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ANG(386),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAS = 387;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAS(387),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAR = 388;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAR(388),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAU = 389;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAU(389),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OM = 390;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OM(390),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAT = 391;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAT(391),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CRP = 392;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CRP(392),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAW = 393;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAW(393),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ANP = 394;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ANP(394),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OR = 395;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OR(395),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OS = 396;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OS(396),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SRD = 397;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SRD(397),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAZ = 398;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KAZ(398),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PLI = 399;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PLI(399),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KBD = 400;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KBD(400),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SRN = 401;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SRN(401),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OJI = 402;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OJI(402),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SRP = 403;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SRP(403),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PA = 404;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PA(404),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DUA = 405;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DUA(405),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EWE = 406;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EWE(406),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SRR = 407;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SRR(407),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CSB = 408;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CSB(408),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PI = 409;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PI(409),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PL = 410;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PL(410),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EWO = 411;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EWO(411),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DUM = 412;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DUM(412),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SSA = 413;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SSA(413),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PS = 414;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PS(414),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PT = 415;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PT(415),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MGA = 416;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MGA(416),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NIA = 417;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NIA(417),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NIC = 418;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NIC(418),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUK = 419;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TUK(419),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUM = 420;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TUM(420),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUP = 421;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TUP(421),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUR = 422;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TUR(422),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BRA = 423;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BRA(423),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUT = 424;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TUT(424),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_APA = 425;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_APA(425),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BRE = 426;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BRE(426),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SSW = 427;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SSW(427),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NIU = 428;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NIU(428),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JAV = 429;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_JAV(429),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LEZ = 430;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LEZ(430),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QU = 431;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QU(431),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZAP = 432;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZAP(432),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TVL = 433;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TVL(433),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JBO = 434;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_JBO(434),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RM = 435;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RM(435),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RN = 436;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RN(436),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RO = 437;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RO(437),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CUS = 438;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CUS(438),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQA = 439;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQA(439),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQC = 440;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQC(440),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RU = 441;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RU(441),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQB = 442;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQB(442),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQE = 443;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQE(443),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RW = 444;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RW(444),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQD = 445;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQD(445),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZBL = 446;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZBL(446),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MIC = 447;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MIC(447),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQG = 448;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQG(448),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TWI = 449;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TWI(449),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQF = 450;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQF(450),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQI = 451;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQI(451),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SUK = 452;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SUK(452),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQH = 453;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQH(453),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQJ = 454;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QQJ(454),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_POL = 455;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_POL(455),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SUN = 456;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SUN(456),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SA = 457;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SA(457),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PON = 458;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PON(458),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SC = 459;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SC(459),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SUS = 460;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SUS(460),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARA = 461;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ARA(461),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SD = 462;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SD(462),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_POR = 463;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_POR(463),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SE = 464;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SE(464),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARC = 465;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ARC(465),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MIN = 466;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MIN(466),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SG = 467;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SG(467),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SI = 468;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SI(468),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MIS = 469;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MIS(469),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARG = 470;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ARG(470),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SUX = 471;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SUX(471),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SK = 472;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SK(472),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BTK = 473;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BTK(473),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SL = 474;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SL(474),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SM = 475;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SM(475),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SN = 476;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SN(476),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SO = 477;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SO(477),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UZB = 478;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UZB(478),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARN = 479;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ARN(479),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SQ = 480;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SQ(480),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARP = 481;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ARP(481),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SR = 482;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SR(482),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SS = 483;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SS(483),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ST = 484;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ST(484),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SU = 485;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SU(485),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ART = 486;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ART(486),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SV = 487;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SV(487),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SW = 488;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SW(488),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YAO = 489;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_YAO(489),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NLD = 490;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NLD(490),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARW = 491;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ARW(491),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IBA = 492;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IBA(492),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YAP = 493;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_YAP(493),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TA = 494;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TA(494),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BUA = 495;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BUA(495),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TE = 496;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TE(496),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TG = 497;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TG(497),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TH = 498;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TH(498),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TI = 499;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TI(499),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BUG = 500;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BUG(500),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IBO = 501;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IBO(501),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TK = 502;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TK(502),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BUL = 503;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BUL(503),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TL = 504;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TL(504),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ASM = 505;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ASM(505),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TN = 506;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TN(506),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TO = 507;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TO(507),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SWA = 508;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SWA(508),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TR = 509;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TR(509),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TS = 510;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TS(510),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SWE = 511;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SWE(511),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TT = 512;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TT(512),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DYU = 513;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DYU(513),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TW = 514;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TW(514),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AST = 515;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AST(515),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TY = 516;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TY(516),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MKD = 517;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MKD(517),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RUN = 518;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RUN(518),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MKH = 519;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MKH(519),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RUP = 520;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RUP(520),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LIN = 521;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LIN(521),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TYV = 522;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TYV(522),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LIM = 523;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LIM(523),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RUS = 524;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_RUS(524),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HAI = 525;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HAI(525),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UG = 526;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UG(526),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ATH = 527;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ATH(527),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LIT = 528;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LIT(528),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UK = 529;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UK(529),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DZO = 530;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DZO(530),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HAT = 531;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HAT(531),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HAU = 532;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HAU(532),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UR = 533;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UR(533),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PRA = 534;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PRA(534),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HAW = 535;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HAW(535),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_XAL = 536;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_XAL(536),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZEN = 537;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZEN(537),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UZ = 538;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UZ(538),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KHA = 539;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KHA(539),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MLG = 540;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MLG(540),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PRO = 541;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PRO(541),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KHI = 542;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KHI(542),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NNO = 543;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NNO(543),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VE = 544;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_VE(544),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KHM = 545;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KHM(545),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VI = 546;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_VI(546),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KHO = 547;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KHO(547),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MLT = 548;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MLT(548),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IDO = 549;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IDO(549),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CYM = 550;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CYM(550),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VO = 551;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_VO(551),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SYC = 552;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SYC(552),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AUS = 553;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AUS(553),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NOB = 554;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NOB(554),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QUE = 555;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_QUE(555),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GAA = 556;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GAA(556),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NOG = 557;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NOG(557),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WA = 558;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WA(558),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KIK = 559;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KIK(559),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NON = 560;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NON(560),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AVA = 561;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AVA(561),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SYR = 562;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SYR(562),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NOR = 563;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NOR(563),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AVE = 564;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AVE(564),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KIN = 565;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KIN(565),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KIR = 566;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KIR(566),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WO = 567;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WO(567),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZGH = 568;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZGH(568),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GAY = 569;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GAY(569),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WAK = 570;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WAK(570),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MNC = 571;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MNC(571),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WAL = 572;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WAL(572),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ORI = 573;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ORI(573),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GBA = 574;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GBA(574),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WAS = 575;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WAS(575),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MNI = 576;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MNI(576),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WAR = 577;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WAR(577),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AWA = 578;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AWA(578),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ORM = 579;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ORM(579),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MNO = 580;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MNO(580),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_XH = 581;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_XH(581),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZHA = 582;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZHA(582),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BYN = 583;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_BYN(583),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OSA = 584;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OSA(584),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZHO = 585;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZHO(585),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HEB = 586;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HEB(586),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MOH = 587;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MOH(587),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MON = 588;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MON(588),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NQO = 589;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NQO(589),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OSS = 590;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OSS(590),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PUS = 591;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_PUS(591),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YI = 592;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_YI(592),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MOS = 593;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MOS(593),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FAN = 594;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FAN(594),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HER = 595;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HER(595),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FAO = 596;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FAO(596),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YO = 597;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_YO(597),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FAT = 598;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FAT(598),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FAS = 599;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_FAS(599),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OTA = 600;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OTA(600),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VAI = 601;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_VAI(601),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZA = 602;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZA(602),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OTO = 603;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_OTO(603),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZH = 604;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZH(604),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AYM = 605;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AYM(605),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZU = 606;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZU(606),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KMB = 607;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KMB(607),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_III = 608;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_III(608),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LOL = 609;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LOL(609),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NSO = 610;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NSO(610),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AZE = 611;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_AZE(611),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GEM = 612;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GEM(612),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YID = 613;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_YID(613),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LOZ = 614;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LOZ(614),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GEZ = 615;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GEZ(615),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WEN = 616;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_WEN(616),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MRI = 617;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MRI(617),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IJO = 618;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IJO(618),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MSA = 619;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MSA(619),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NUB = 620;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NUB(620),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_XHO = 621;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_XHO(621),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KOK = 622;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KOK(622),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KOM = 623;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KOM(623),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HIL = 624;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HIL(624),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KON = 625;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KON(625),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HIN = 626;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HIN(626),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HIM = 627;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HIM(627),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KOS = 628;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KOS(628),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KOR = 629;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KOR(629),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DAK = 630;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DAK(630),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DAN = 631;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DAN(631),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IKU = 632;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IKU(632),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HIT = 633;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_HIT(633),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DAR = 634;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DAR(634),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TAH = 635;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TAH(635),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DAY = 636;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_DAY(636),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TAI = 637;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TAI(637),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VEN = 638;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_VEN(638),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TAM = 639;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TAM(639),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KPE = 640;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KPE(640),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ILE = 641;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ILE(641),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TAT = 642;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_TAT(642),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ILO = 643;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ILO(643),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZND = 644;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_ZND(644),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NWC = 645;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NWC(645),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UDM = 646;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_UDM(646),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MUL = 647;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MUL(647),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAD = 648;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CAD(648),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MUN = 649;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MUN(649),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAI = 650;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CAI(650),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MUS = 651;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_MUS(651),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GIL = 652;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_GIL(652),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAR = 653;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CAR(653),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAU = 654;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CAU(654),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAT = 655;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_CAT(655),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAD = 656;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAD(656),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAG = 657;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAG(657),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAI = 658;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAI(658),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAH = 659;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAH(659),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_INA = 660;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_INA(660),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KRC = 661;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KRC(661),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IND = 662;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_IND(662),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAM = 663;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAM(663),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_INC = 664;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_INC(664),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAL = 665;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAL(665),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAN = 666;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAN(666),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_INE = 667;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_INE(667),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_INH = 668;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_INH(668),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KRL = 669;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KRL(669),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAS = 670;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAS(670),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAT = 671;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_SAT(671),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JPN = 672;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_JPN(672),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EFI = 673;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_EFI(673),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KRO = 674;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KRO(674),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JPR = 675;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_JPR(675),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KRU = 676;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_KRU(676),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LTZ = 677;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LTZ(677),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NYA = 678;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_NYA(678),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUB = 679;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LUB(679),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUA = 680;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LUA(680),
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUG = 681;</code>
     */
    ISO639_PART12_LANGUAGE_CODE_LUG(681),
    ;

    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUI = 0;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LUI_VALUE = 0;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NYN = 1;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NYN_VALUE = 1;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MWL = 2;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MWL_VALUE = 2;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NYM = 3;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NYM_VALUE = 3;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAD = 4;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BAD_VALUE = 4;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUN = 5;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LUN_VALUE = 5;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NYO = 6;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NYO_VALUE = 6;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FIJ = 7;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FIJ_VALUE = 7;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUO = 8;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LUO_VALUE = 8;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FIL = 9;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FIL_VALUE = 9;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HMN = 10;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HMN_VALUE = 10;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MWR = 11;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MWR_VALUE = 11;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FIN = 12;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FIN_VALUE = 12;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DEL = 13;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DEL_VALUE = 13;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HMO = 14;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HMO_VALUE = 14;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAI = 15;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BAI_VALUE = 15;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUS = 16;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LUS_VALUE = 16;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAL = 17;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BAL_VALUE = 17;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DEN = 18;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DEN_VALUE = 18;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAK = 19;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BAK_VALUE = 19;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAN = 20;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BAN_VALUE = 20;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UGA = 21;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UGA_VALUE = 21;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAM = 22;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BAM_VALUE = 22;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VIE = 23;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_VIE_VALUE = 23;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FIU = 24;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FIU_VALUE = 24;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAT = 25;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BAT_VALUE = 25;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DEU = 26;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DEU_VALUE = 26;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BAS = 27;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BAS_VALUE = 27;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EGY = 28;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EGY_VALUE = 28;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TEL = 29;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TEL_VALUE = 29;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RAJ = 30;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RAJ_VALUE = 30;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JRB = 31;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_JRB_VALUE = 31;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NZI = 32;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NZI_VALUE = 32;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GLA = 33;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GLA_VALUE = 33;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YOR = 34;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_YOR_VALUE = 34;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TEM = 35;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TEM_VALUE = 35;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SCO = 36;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SCO_VALUE = 36;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SCN = 37;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SCN_VALUE = 37;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AA = 38;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AA_VALUE = 38;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RAP = 39;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RAP_VALUE = 39;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TER = 40;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TER_VALUE = 40;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AB = 41;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AB_VALUE = 41;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GLE = 42;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GLE_VALUE = 42;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RAR = 43;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RAR_VALUE = 43;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TET = 44;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TET_VALUE = 44;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GLG = 45;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GLG_VALUE = 45;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AE = 46;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AE_VALUE = 46;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AF = 47;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AF_VALUE = 47;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IPK = 48;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IPK_VALUE = 48;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AK = 49;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AK_VALUE = 49;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AM = 50;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AM_VALUE = 50;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AN = 51;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AN_VALUE = 51;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GLV = 52;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GLV_VALUE = 52;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AR = 53;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AR_VALUE = 53;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AS = 54;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AS_VALUE = 54;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MYA = 55;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MYA_VALUE = 55;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AV = 56;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AV_VALUE = 56;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YPK = 57;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_YPK_VALUE = 57;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KUA = 58;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KUA_VALUE = 58;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AY = 59;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AY_VALUE = 59;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WLN = 60;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WLN_VALUE = 60;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AZ = 61;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AZ_VALUE = 61;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BA = 62;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BA_VALUE = 62;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CEB = 63;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CEB_VALUE = 63;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KUM = 64;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KUM_VALUE = 64;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BE = 65;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BE_VALUE = 65;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GMH = 66;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GMH_VALUE = 66;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MYN = 67;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MYN_VALUE = 67;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BG = 68;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BG_VALUE = 68;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BH = 69;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BH_VALUE = 69;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BI = 70;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BI_VALUE = 70;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KUR = 71;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KUR_VALUE = 71;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BM = 72;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BM_VALUE = 72;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CEL = 73;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CEL_VALUE = 73;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KUT = 74;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KUT_VALUE = 74;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MYV = 75;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MYV_VALUE = 75;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BN = 76;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BN_VALUE = 76;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BO = 77;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BO_VALUE = 77;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DGR = 78;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DGR_VALUE = 78;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BR = 79;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BR_VALUE = 79;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CES = 80;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CES_VALUE = 80;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BS = 81;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BS_VALUE = 81;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UIG = 82;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UIG_VALUE = 82;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AAR = 83;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AAR_VALUE = 83;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TGL = 84;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TGL_VALUE = 84;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TGK = 85;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TGK_VALUE = 85;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IRA = 86;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IRA_VALUE = 86;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SEM = 87;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SEM_VALUE = 87;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SEL = 88;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SEL_VALUE = 88;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CA = 89;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CA_VALUE = 89;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CE = 90;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CE_VALUE = 90;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CH = 91;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CH_VALUE = 91;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IRO = 92;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IRO_VALUE = 92;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ABK = 93;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ABK_VALUE = 93;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CO = 94;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CO_VALUE = 94;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_THA = 95;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_THA_VALUE = 95;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CR = 96;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CR_VALUE = 96;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CS = 97;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CS_VALUE = 97;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CU = 98;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CU_VALUE = 98;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CV = 99;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CV_VALUE = 99;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CY = 100;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CY_VALUE = 100;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EKA = 101;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EKA_VALUE = 101;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DA = 102;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DA_VALUE = 102;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DE = 103;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DE_VALUE = 103;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GOH = 104;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GOH_VALUE = 104;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ACE = 105;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ACE_VALUE = 105;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ISL = 106;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ISL_VALUE = 106;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BEJ = 107;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BEJ_VALUE = 107;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ACH = 108;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ACH_VALUE = 108;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GON = 109;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GON_VALUE = 109;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BEL = 110;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BEL_VALUE = 110;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DIN = 111;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DIN_VALUE = 111;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BEN = 112;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BEN_VALUE = 112;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BEM = 113;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BEM_VALUE = 113;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GOR = 114;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GOR_VALUE = 114;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SGA = 115;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SGA_VALUE = 115;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GOT = 116;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GOT_VALUE = 116;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BER = 117;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BER_VALUE = 117;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DIV = 118;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DIV_VALUE = 118;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZUL = 119;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZUL_VALUE = 119;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAA = 120;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PAA_VALUE = 120;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DV = 121;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DV_VALUE = 121;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZUN = 122;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZUN_VALUE = 122;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TIG = 123;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TIG_VALUE = 123;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WOL = 124;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WOL_VALUE = 124;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DZ = 125;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DZ_VALUE = 125;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ITA = 126;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ITA_VALUE = 126;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAG = 127;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PAG_VALUE = 127;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAL = 128;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PAL_VALUE = 128;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SGN = 129;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SGN_VALUE = 129;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAN = 130;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PAN_VALUE = 130;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TIR = 131;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TIR_VALUE = 131;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHB = 132;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHB_VALUE = 132;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHA = 133;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHA_VALUE = 133;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UKR = 134;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UKR_VALUE = 134;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAM = 135;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PAM_VALUE = 135;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAP = 136;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PAP_VALUE = 136;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ADA = 137;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ADA_VALUE = 137;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EE = 138;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EE_VALUE = 138;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TIV = 139;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TIV_VALUE = 139;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHE = 140;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHE_VALUE = 140;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHG = 141;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHG_VALUE = 141;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ELL = 142;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ELL_VALUE = 142;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PAU = 143;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PAU_VALUE = 143;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EL = 144;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EL_VALUE = 144;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHK = 145;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHK_VALUE = 145;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHN = 146;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHN_VALUE = 146;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EN = 147;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EN_VALUE = 147;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHM = 148;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHM_VALUE = 148;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EO = 149;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EO_VALUE = 149;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHP = 150;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHP_VALUE = 150;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHO = 151;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHO_VALUE = 151;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHR = 152;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHR_VALUE = 152;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HRV = 153;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HRV_VALUE = 153;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ES = 154;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ES_VALUE = 154;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ET = 155;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ET_VALUE = 155;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHV = 156;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHV_VALUE = 156;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EU = 157;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EU_VALUE = 157;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ELX = 158;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ELX_VALUE = 158;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHU = 159;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHU_VALUE = 159;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CHY = 160;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CHY_VALUE = 160;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HSB = 161;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HSB_VALUE = 161;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ADY = 162;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ADY_VALUE = 162;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SHN = 163;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SHN_VALUE = 163;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FA = 164;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FA_VALUE = 164;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BGC = 165;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BGC_VALUE = 165;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FF = 166;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FF_VALUE = 166;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FI = 167;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FI_VALUE = 167;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FJ = 168;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FJ_VALUE = 168;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FON = 169;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FON_VALUE = 169;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FO = 170;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FO_VALUE = 170;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UMB = 171;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UMB_VALUE = 171;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FR = 172;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FR_VALUE = 172;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SID = 173;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SID_VALUE = 173;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VOL = 174;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_VOL_VALUE = 174;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FY = 175;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FY_VALUE = 175;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TKL = 176;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TKL_VALUE = 176;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GRB = 177;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GRB_VALUE = 177;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SIO = 178;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SIO_VALUE = 178;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SIN = 179;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SIN_VALUE = 179;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GRC = 180;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GRC_VALUE = 180;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GA = 181;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GA_VALUE = 181;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VOT = 182;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_VOT_VALUE = 182;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GD = 183;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GD_VALUE = 183;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AFA = 184;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AFA_VALUE = 184;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ENG = 185;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ENG_VALUE = 185;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SIT = 186;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SIT_VALUE = 186;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GRN = 187;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GRN_VALUE = 187;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AFH = 188;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AFH_VALUE = 188;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GL = 189;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GL_VALUE = 189;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ENM = 190;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ENM_VALUE = 190;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GN = 191;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GN_VALUE = 191;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BHO = 192;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BHO_VALUE = 192;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UND = 193;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UND_VALUE = 193;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AFR = 194;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AFR_VALUE = 194;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GU = 195;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GU_VALUE = 195;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GV = 196;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GV_VALUE = 196;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TLI = 197;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TLI_VALUE = 197;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TLH = 198;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TLH_VALUE = 198;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HA = 199;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HA_VALUE = 199;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZXX = 200;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZXX_VALUE = 200;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HE = 201;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HE_VALUE = 201;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BIH = 202;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BIH_VALUE = 202;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HUN = 203;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HUN_VALUE = 203;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HI = 204;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HI_VALUE = 204;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HUP = 205;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HUP_VALUE = 205;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BIK = 206;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BIK_VALUE = 206;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BIN = 207;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BIN_VALUE = 207;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HO = 208;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HO_VALUE = 208;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HR = 209;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HR_VALUE = 209;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GSW = 210;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GSW_VALUE = 210;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HT = 211;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HT_VALUE = 211;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BIS = 212;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BIS_VALUE = 212;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HU = 213;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HU_VALUE = 213;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TMH = 214;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TMH_VALUE = 214;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HY = 215;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HY_VALUE = 215;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HZ = 216;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HZ_VALUE = 216;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRA = 217;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FRA_VALUE = 217;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OCI = 218;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OCI_VALUE = 218;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAH = 219;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NAH_VALUE = 219;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAI = 220;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NAI_VALUE = 220;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IA = 221;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IA_VALUE = 221;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ID = 222;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ID_VALUE = 222;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PEO = 223;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PEO_VALUE = 223;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IE = 224;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IE_VALUE = 224;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAP = 225;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NAP_VALUE = 225;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IG = 226;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IG_VALUE = 226;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_II = 227;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_II_VALUE = 227;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRM = 228;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FRM_VALUE = 228;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZZA = 229;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZZA_VALUE = 229;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IK = 230;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IK_VALUE = 230;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAV = 231;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NAV_VALUE = 231;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRO = 232;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FRO_VALUE = 232;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NAU = 233;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NAU_VALUE = 233;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EPO = 234;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EPO_VALUE = 234;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IO = 235;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IO_VALUE = 235;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRS = 236;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FRS_VALUE = 236;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRR = 237;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FRR_VALUE = 237;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SLA = 238;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SLA_VALUE = 238;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IS = 239;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IS_VALUE = 239;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IT = 240;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IT_VALUE = 240;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FRY = 241;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FRY_VALUE = 241;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IU = 242;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IU_VALUE = 242;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SLK = 243;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SLK_VALUE = 243;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JA = 244;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_JA_VALUE = 244;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CMC = 245;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CMC_VALUE = 245;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NBL = 246;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NBL_VALUE = 246;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SLV = 247;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SLV_VALUE = 247;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GUJ = 248;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GUJ_VALUE = 248;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DOI = 249;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DOI_VALUE = 249;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMA = 250;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SMA_VALUE = 250;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AIN = 251;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AIN_VALUE = 251;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SME = 252;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SME_VALUE = 252;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JV = 253;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_JV_VALUE = 253;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TOG = 254;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TOG_VALUE = 254;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMI = 255;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SMI_VALUE = 255;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAD = 256;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAD_VALUE = 256;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMJ = 257;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SMJ_VALUE = 257;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TON = 258;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TON_VALUE = 258;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAG = 259;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAG_VALUE = 259;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMO = 260;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SMO_VALUE = 260;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAI = 261;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAI_VALUE = 261;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAH = 262;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAH_VALUE = 262;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMN = 263;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SMN_VALUE = 263;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KA = 264;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KA_VALUE = 264;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BLA = 265;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BLA_VALUE = 265;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAK = 266;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAK_VALUE = 266;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SMS = 267;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SMS_VALUE = 267;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAL = 268;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAL_VALUE = 268;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAN = 269;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAN_VALUE = 269;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KG = 270;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KG_VALUE = 270;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAP = 271;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAP_VALUE = 271;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KI = 272;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KI_VALUE = 272;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAS = 273;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAS_VALUE = 273;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KJ = 274;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KJ_VALUE = 274;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MAR = 275;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MAR_VALUE = 275;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KK = 276;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KK_VALUE = 276;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KL = 277;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KL_VALUE = 277;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KM = 278;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KM_VALUE = 278;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KN = 279;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KN_VALUE = 279;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KO = 280;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KO_VALUE = 280;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_URD = 281;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_URD_VALUE = 281;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CNR = 282;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CNR_VALUE = 282;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KR = 283;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KR_VALUE = 283;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SNA = 284;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SNA_VALUE = 284;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KS = 285;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KS_VALUE = 285;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SND = 286;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SND_VALUE = 286;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KU = 287;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KU_VALUE = 287;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KV = 288;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KV_VALUE = 288;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KW = 289;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KW_VALUE = 289;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TPI = 290;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TPI_VALUE = 290;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KY = 291;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KY_VALUE = 291;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NDE = 292;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NDE_VALUE = 292;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PHI = 293;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PHI_VALUE = 293;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SNK = 294;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SNK_VALUE = 294;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HYE = 295;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HYE_VALUE = 295;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LA = 296;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LA_VALUE = 296;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AKA = 297;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AKA_VALUE = 297;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LB = 298;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LB_VALUE = 298;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PHN = 299;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PHN_VALUE = 299;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NDO = 300;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NDO_VALUE = 300;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GWI = 301;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GWI_VALUE = 301;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LG = 302;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LG_VALUE = 302;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FUL = 303;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FUL_VALUE = 303;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NDS = 304;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NDS_VALUE = 304;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LI = 305;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LI_VALUE = 305;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AKK = 306;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AKK_VALUE = 306;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LN = 307;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LN_VALUE = 307;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FUR = 308;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FUR_VALUE = 308;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LO = 309;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LO_VALUE = 309;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_COP = 310;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_COP_VALUE = 310;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_COS = 311;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_COS_VALUE = 311;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EST = 312;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EST_VALUE = 312;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_COR = 313;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_COR_VALUE = 313;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LT = 314;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LT_VALUE = 314;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LU = 315;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LU_VALUE = 315;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LV = 316;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LV_VALUE = 316;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SOG = 317;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SOG_VALUE = 317;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAD = 318;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LAD_VALUE = 318;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SOM = 319;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SOM_VALUE = 319;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DRA = 320;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DRA_VALUE = 320;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAH = 321;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LAH_VALUE = 321;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SON = 322;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SON_VALUE = 322;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NEP = 323;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NEP_VALUE = 323;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CPF = 324;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CPF_VALUE = 324;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SOT = 325;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SOT_VALUE = 325;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CPE = 326;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CPE_VALUE = 326;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAM = 327;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LAM_VALUE = 327;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MG = 328;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MG_VALUE = 328;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAO = 329;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LAO_VALUE = 329;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MH = 330;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MH_VALUE = 330;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ALE = 331;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ALE_VALUE = 331;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MI = 332;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MI_VALUE = 332;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ALG = 333;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ALG_VALUE = 333;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAT = 334;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LAT_VALUE = 334;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MK = 335;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MK_VALUE = 335;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ML = 336;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ML_VALUE = 336;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LAV = 337;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LAV_VALUE = 337;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MN = 338;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MN_VALUE = 338;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NEW = 339;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NEW_VALUE = 339;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MO = 340;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MO_VALUE = 340;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CPP = 341;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CPP_VALUE = 341;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SPA = 342;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SPA_VALUE = 342;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MR = 343;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MR_VALUE = 343;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MS = 344;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MS_VALUE = 344;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MT = 345;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MT_VALUE = 345;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ALT = 346;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ALT_VALUE = 346;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BNT = 347;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BNT_VALUE = 347;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MY = 348;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MY_VALUE = 348;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MDF = 349;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MDF_VALUE = 349;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DSB = 350;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DSB_VALUE = 350;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NA = 351;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NA_VALUE = 351;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NB = 352;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NB_VALUE = 352;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BOD = 353;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BOD_VALUE = 353;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ND = 354;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ND_VALUE = 354;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NE = 355;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NE_VALUE = 355;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NG = 356;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NG_VALUE = 356;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MDR = 357;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MDR_VALUE = 357;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AMH = 358;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AMH_VALUE = 358;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NL = 359;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NL_VALUE = 359;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NN = 360;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NN_VALUE = 360;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NO = 361;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NO_VALUE = 361;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EUS = 362;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EUS_VALUE = 362;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NR = 363;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NR_VALUE = 363;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ROA = 364;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ROA_VALUE = 364;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BOS = 365;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BOS_VALUE = 365;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NV = 366;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NV_VALUE = 366;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ROH = 367;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ROH_VALUE = 367;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SQI = 368;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SQI_VALUE = 368;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAA = 369;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAA_VALUE = 369;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NY = 370;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NY_VALUE = 370;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TSI = 371;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TSI_VALUE = 371;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAC = 372;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAC_VALUE = 372;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAB = 373;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAB_VALUE = 373;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TSN = 374;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TSN_VALUE = 374;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RON = 375;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RON_VALUE = 375;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TSO = 376;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TSO_VALUE = 376;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ROM = 377;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ROM_VALUE = 377;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OC = 378;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OC_VALUE = 378;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAM = 379;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAM_VALUE = 379;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CRE = 380;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CRE_VALUE = 380;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAL = 381;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAL_VALUE = 381;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MEN = 382;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MEN_VALUE = 382;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CRH = 383;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CRH_VALUE = 383;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAN = 384;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAN_VALUE = 384;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OJ = 385;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OJ_VALUE = 385;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ANG = 386;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ANG_VALUE = 386;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAS = 387;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAS_VALUE = 387;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAR = 388;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAR_VALUE = 388;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAU = 389;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAU_VALUE = 389;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OM = 390;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OM_VALUE = 390;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAT = 391;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAT_VALUE = 391;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CRP = 392;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CRP_VALUE = 392;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAW = 393;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAW_VALUE = 393;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ANP = 394;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ANP_VALUE = 394;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OR = 395;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OR_VALUE = 395;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OS = 396;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OS_VALUE = 396;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SRD = 397;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SRD_VALUE = 397;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KAZ = 398;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KAZ_VALUE = 398;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PLI = 399;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PLI_VALUE = 399;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KBD = 400;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KBD_VALUE = 400;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SRN = 401;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SRN_VALUE = 401;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OJI = 402;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OJI_VALUE = 402;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SRP = 403;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SRP_VALUE = 403;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PA = 404;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PA_VALUE = 404;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DUA = 405;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DUA_VALUE = 405;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EWE = 406;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EWE_VALUE = 406;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SRR = 407;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SRR_VALUE = 407;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CSB = 408;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CSB_VALUE = 408;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PI = 409;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PI_VALUE = 409;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PL = 410;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PL_VALUE = 410;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EWO = 411;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EWO_VALUE = 411;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DUM = 412;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DUM_VALUE = 412;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SSA = 413;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SSA_VALUE = 413;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PS = 414;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PS_VALUE = 414;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PT = 415;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PT_VALUE = 415;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MGA = 416;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MGA_VALUE = 416;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NIA = 417;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NIA_VALUE = 417;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NIC = 418;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NIC_VALUE = 418;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUK = 419;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TUK_VALUE = 419;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUM = 420;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TUM_VALUE = 420;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUP = 421;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TUP_VALUE = 421;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUR = 422;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TUR_VALUE = 422;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BRA = 423;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BRA_VALUE = 423;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TUT = 424;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TUT_VALUE = 424;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_APA = 425;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_APA_VALUE = 425;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BRE = 426;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BRE_VALUE = 426;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SSW = 427;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SSW_VALUE = 427;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NIU = 428;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NIU_VALUE = 428;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JAV = 429;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_JAV_VALUE = 429;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LEZ = 430;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LEZ_VALUE = 430;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QU = 431;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QU_VALUE = 431;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZAP = 432;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZAP_VALUE = 432;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TVL = 433;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TVL_VALUE = 433;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JBO = 434;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_JBO_VALUE = 434;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RM = 435;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RM_VALUE = 435;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RN = 436;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RN_VALUE = 436;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RO = 437;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RO_VALUE = 437;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CUS = 438;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CUS_VALUE = 438;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQA = 439;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQA_VALUE = 439;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQC = 440;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQC_VALUE = 440;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RU = 441;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RU_VALUE = 441;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQB = 442;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQB_VALUE = 442;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQE = 443;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQE_VALUE = 443;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RW = 444;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RW_VALUE = 444;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQD = 445;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQD_VALUE = 445;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZBL = 446;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZBL_VALUE = 446;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MIC = 447;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MIC_VALUE = 447;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQG = 448;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQG_VALUE = 448;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TWI = 449;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TWI_VALUE = 449;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQF = 450;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQF_VALUE = 450;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQI = 451;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQI_VALUE = 451;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SUK = 452;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SUK_VALUE = 452;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQH = 453;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQH_VALUE = 453;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QQJ = 454;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QQJ_VALUE = 454;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_POL = 455;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_POL_VALUE = 455;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SUN = 456;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SUN_VALUE = 456;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SA = 457;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SA_VALUE = 457;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PON = 458;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PON_VALUE = 458;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SC = 459;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SC_VALUE = 459;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SUS = 460;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SUS_VALUE = 460;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARA = 461;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ARA_VALUE = 461;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SD = 462;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SD_VALUE = 462;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_POR = 463;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_POR_VALUE = 463;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SE = 464;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SE_VALUE = 464;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARC = 465;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ARC_VALUE = 465;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MIN = 466;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MIN_VALUE = 466;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SG = 467;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SG_VALUE = 467;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SI = 468;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SI_VALUE = 468;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MIS = 469;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MIS_VALUE = 469;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARG = 470;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ARG_VALUE = 470;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SUX = 471;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SUX_VALUE = 471;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SK = 472;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SK_VALUE = 472;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BTK = 473;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BTK_VALUE = 473;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SL = 474;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SL_VALUE = 474;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SM = 475;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SM_VALUE = 475;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SN = 476;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SN_VALUE = 476;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SO = 477;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SO_VALUE = 477;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UZB = 478;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UZB_VALUE = 478;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARN = 479;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ARN_VALUE = 479;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SQ = 480;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SQ_VALUE = 480;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARP = 481;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ARP_VALUE = 481;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SR = 482;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SR_VALUE = 482;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SS = 483;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SS_VALUE = 483;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ST = 484;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ST_VALUE = 484;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SU = 485;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SU_VALUE = 485;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ART = 486;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ART_VALUE = 486;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SV = 487;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SV_VALUE = 487;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SW = 488;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SW_VALUE = 488;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YAO = 489;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_YAO_VALUE = 489;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NLD = 490;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NLD_VALUE = 490;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ARW = 491;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ARW_VALUE = 491;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IBA = 492;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IBA_VALUE = 492;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YAP = 493;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_YAP_VALUE = 493;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TA = 494;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TA_VALUE = 494;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BUA = 495;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BUA_VALUE = 495;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TE = 496;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TE_VALUE = 496;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TG = 497;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TG_VALUE = 497;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TH = 498;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TH_VALUE = 498;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TI = 499;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TI_VALUE = 499;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BUG = 500;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BUG_VALUE = 500;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IBO = 501;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IBO_VALUE = 501;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TK = 502;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TK_VALUE = 502;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BUL = 503;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BUL_VALUE = 503;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TL = 504;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TL_VALUE = 504;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ASM = 505;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ASM_VALUE = 505;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TN = 506;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TN_VALUE = 506;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TO = 507;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TO_VALUE = 507;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SWA = 508;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SWA_VALUE = 508;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TR = 509;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TR_VALUE = 509;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TS = 510;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TS_VALUE = 510;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SWE = 511;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SWE_VALUE = 511;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TT = 512;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TT_VALUE = 512;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DYU = 513;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DYU_VALUE = 513;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TW = 514;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TW_VALUE = 514;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AST = 515;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AST_VALUE = 515;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TY = 516;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TY_VALUE = 516;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MKD = 517;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MKD_VALUE = 517;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RUN = 518;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RUN_VALUE = 518;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MKH = 519;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MKH_VALUE = 519;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RUP = 520;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RUP_VALUE = 520;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LIN = 521;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LIN_VALUE = 521;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TYV = 522;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TYV_VALUE = 522;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LIM = 523;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LIM_VALUE = 523;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_RUS = 524;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_RUS_VALUE = 524;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HAI = 525;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HAI_VALUE = 525;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UG = 526;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UG_VALUE = 526;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ATH = 527;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ATH_VALUE = 527;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LIT = 528;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LIT_VALUE = 528;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UK = 529;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UK_VALUE = 529;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DZO = 530;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DZO_VALUE = 530;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HAT = 531;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HAT_VALUE = 531;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HAU = 532;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HAU_VALUE = 532;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UR = 533;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UR_VALUE = 533;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PRA = 534;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PRA_VALUE = 534;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HAW = 535;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HAW_VALUE = 535;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_XAL = 536;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_XAL_VALUE = 536;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZEN = 537;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZEN_VALUE = 537;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UZ = 538;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UZ_VALUE = 538;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KHA = 539;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KHA_VALUE = 539;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MLG = 540;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MLG_VALUE = 540;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PRO = 541;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PRO_VALUE = 541;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KHI = 542;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KHI_VALUE = 542;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NNO = 543;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NNO_VALUE = 543;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VE = 544;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_VE_VALUE = 544;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KHM = 545;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KHM_VALUE = 545;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VI = 546;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_VI_VALUE = 546;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KHO = 547;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KHO_VALUE = 547;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MLT = 548;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MLT_VALUE = 548;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IDO = 549;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IDO_VALUE = 549;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CYM = 550;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CYM_VALUE = 550;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VO = 551;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_VO_VALUE = 551;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SYC = 552;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SYC_VALUE = 552;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AUS = 553;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AUS_VALUE = 553;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NOB = 554;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NOB_VALUE = 554;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_QUE = 555;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_QUE_VALUE = 555;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GAA = 556;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GAA_VALUE = 556;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NOG = 557;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NOG_VALUE = 557;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WA = 558;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WA_VALUE = 558;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KIK = 559;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KIK_VALUE = 559;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NON = 560;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NON_VALUE = 560;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AVA = 561;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AVA_VALUE = 561;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SYR = 562;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SYR_VALUE = 562;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NOR = 563;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NOR_VALUE = 563;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AVE = 564;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AVE_VALUE = 564;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KIN = 565;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KIN_VALUE = 565;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KIR = 566;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KIR_VALUE = 566;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WO = 567;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WO_VALUE = 567;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZGH = 568;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZGH_VALUE = 568;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GAY = 569;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GAY_VALUE = 569;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WAK = 570;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WAK_VALUE = 570;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MNC = 571;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MNC_VALUE = 571;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WAL = 572;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WAL_VALUE = 572;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ORI = 573;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ORI_VALUE = 573;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GBA = 574;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GBA_VALUE = 574;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WAS = 575;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WAS_VALUE = 575;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MNI = 576;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MNI_VALUE = 576;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WAR = 577;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WAR_VALUE = 577;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AWA = 578;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AWA_VALUE = 578;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ORM = 579;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ORM_VALUE = 579;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MNO = 580;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MNO_VALUE = 580;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_XH = 581;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_XH_VALUE = 581;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZHA = 582;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZHA_VALUE = 582;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_BYN = 583;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_BYN_VALUE = 583;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OSA = 584;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OSA_VALUE = 584;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZHO = 585;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZHO_VALUE = 585;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HEB = 586;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HEB_VALUE = 586;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MOH = 587;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MOH_VALUE = 587;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MON = 588;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MON_VALUE = 588;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NQO = 589;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NQO_VALUE = 589;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OSS = 590;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OSS_VALUE = 590;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_PUS = 591;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_PUS_VALUE = 591;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YI = 592;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_YI_VALUE = 592;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MOS = 593;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MOS_VALUE = 593;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FAN = 594;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FAN_VALUE = 594;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HER = 595;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HER_VALUE = 595;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FAO = 596;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FAO_VALUE = 596;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YO = 597;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_YO_VALUE = 597;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FAT = 598;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FAT_VALUE = 598;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_FAS = 599;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_FAS_VALUE = 599;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OTA = 600;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OTA_VALUE = 600;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VAI = 601;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_VAI_VALUE = 601;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZA = 602;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZA_VALUE = 602;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_OTO = 603;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_OTO_VALUE = 603;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZH = 604;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZH_VALUE = 604;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AYM = 605;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AYM_VALUE = 605;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZU = 606;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZU_VALUE = 606;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KMB = 607;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KMB_VALUE = 607;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_III = 608;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_III_VALUE = 608;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LOL = 609;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LOL_VALUE = 609;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NSO = 610;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NSO_VALUE = 610;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_AZE = 611;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_AZE_VALUE = 611;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GEM = 612;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GEM_VALUE = 612;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_YID = 613;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_YID_VALUE = 613;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LOZ = 614;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LOZ_VALUE = 614;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GEZ = 615;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GEZ_VALUE = 615;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_WEN = 616;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_WEN_VALUE = 616;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MRI = 617;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MRI_VALUE = 617;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IJO = 618;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IJO_VALUE = 618;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MSA = 619;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MSA_VALUE = 619;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NUB = 620;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NUB_VALUE = 620;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_XHO = 621;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_XHO_VALUE = 621;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KOK = 622;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KOK_VALUE = 622;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KOM = 623;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KOM_VALUE = 623;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HIL = 624;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HIL_VALUE = 624;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KON = 625;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KON_VALUE = 625;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HIN = 626;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HIN_VALUE = 626;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HIM = 627;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HIM_VALUE = 627;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KOS = 628;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KOS_VALUE = 628;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KOR = 629;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KOR_VALUE = 629;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DAK = 630;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DAK_VALUE = 630;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DAN = 631;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DAN_VALUE = 631;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IKU = 632;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IKU_VALUE = 632;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_HIT = 633;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_HIT_VALUE = 633;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DAR = 634;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DAR_VALUE = 634;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TAH = 635;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TAH_VALUE = 635;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_DAY = 636;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_DAY_VALUE = 636;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TAI = 637;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TAI_VALUE = 637;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_VEN = 638;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_VEN_VALUE = 638;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TAM = 639;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TAM_VALUE = 639;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KPE = 640;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KPE_VALUE = 640;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ILE = 641;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ILE_VALUE = 641;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_TAT = 642;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_TAT_VALUE = 642;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ILO = 643;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ILO_VALUE = 643;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_ZND = 644;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_ZND_VALUE = 644;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NWC = 645;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NWC_VALUE = 645;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_UDM = 646;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_UDM_VALUE = 646;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MUL = 647;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MUL_VALUE = 647;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAD = 648;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CAD_VALUE = 648;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MUN = 649;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MUN_VALUE = 649;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAI = 650;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CAI_VALUE = 650;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_MUS = 651;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_MUS_VALUE = 651;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_GIL = 652;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_GIL_VALUE = 652;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAR = 653;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CAR_VALUE = 653;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAU = 654;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CAU_VALUE = 654;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_CAT = 655;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_CAT_VALUE = 655;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAD = 656;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAD_VALUE = 656;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAG = 657;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAG_VALUE = 657;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAI = 658;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAI_VALUE = 658;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAH = 659;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAH_VALUE = 659;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_INA = 660;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_INA_VALUE = 660;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KRC = 661;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KRC_VALUE = 661;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_IND = 662;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_IND_VALUE = 662;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAM = 663;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAM_VALUE = 663;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_INC = 664;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_INC_VALUE = 664;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAL = 665;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAL_VALUE = 665;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAN = 666;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAN_VALUE = 666;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_INE = 667;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_INE_VALUE = 667;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_INH = 668;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_INH_VALUE = 668;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KRL = 669;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KRL_VALUE = 669;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAS = 670;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAS_VALUE = 670;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_SAT = 671;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_SAT_VALUE = 671;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JPN = 672;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_JPN_VALUE = 672;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_EFI = 673;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_EFI_VALUE = 673;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KRO = 674;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KRO_VALUE = 674;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_JPR = 675;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_JPR_VALUE = 675;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_KRU = 676;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_KRU_VALUE = 676;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LTZ = 677;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LTZ_VALUE = 677;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_NYA = 678;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_NYA_VALUE = 678;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUB = 679;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LUB_VALUE = 679;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUA = 680;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LUA_VALUE = 680;
    /**
     * <code>ISO639_PART12_LANGUAGE_CODE_LUG = 681;</code>
     */
    public static final int ISO639_PART12_LANGUAGE_CODE_LUG_VALUE = 681;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Iso639Part12LanguageCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Iso639Part12LanguageCode forNumber(int value) {
      switch (value) {
        case 0: return ISO639_PART12_LANGUAGE_CODE_LUI;
        case 1: return ISO639_PART12_LANGUAGE_CODE_NYN;
        case 2: return ISO639_PART12_LANGUAGE_CODE_MWL;
        case 3: return ISO639_PART12_LANGUAGE_CODE_NYM;
        case 4: return ISO639_PART12_LANGUAGE_CODE_BAD;
        case 5: return ISO639_PART12_LANGUAGE_CODE_LUN;
        case 6: return ISO639_PART12_LANGUAGE_CODE_NYO;
        case 7: return ISO639_PART12_LANGUAGE_CODE_FIJ;
        case 8: return ISO639_PART12_LANGUAGE_CODE_LUO;
        case 9: return ISO639_PART12_LANGUAGE_CODE_FIL;
        case 10: return ISO639_PART12_LANGUAGE_CODE_HMN;
        case 11: return ISO639_PART12_LANGUAGE_CODE_MWR;
        case 12: return ISO639_PART12_LANGUAGE_CODE_FIN;
        case 13: return ISO639_PART12_LANGUAGE_CODE_DEL;
        case 14: return ISO639_PART12_LANGUAGE_CODE_HMO;
        case 15: return ISO639_PART12_LANGUAGE_CODE_BAI;
        case 16: return ISO639_PART12_LANGUAGE_CODE_LUS;
        case 17: return ISO639_PART12_LANGUAGE_CODE_BAL;
        case 18: return ISO639_PART12_LANGUAGE_CODE_DEN;
        case 19: return ISO639_PART12_LANGUAGE_CODE_BAK;
        case 20: return ISO639_PART12_LANGUAGE_CODE_BAN;
        case 21: return ISO639_PART12_LANGUAGE_CODE_UGA;
        case 22: return ISO639_PART12_LANGUAGE_CODE_BAM;
        case 23: return ISO639_PART12_LANGUAGE_CODE_VIE;
        case 24: return ISO639_PART12_LANGUAGE_CODE_FIU;
        case 25: return ISO639_PART12_LANGUAGE_CODE_BAT;
        case 26: return ISO639_PART12_LANGUAGE_CODE_DEU;
        case 27: return ISO639_PART12_LANGUAGE_CODE_BAS;
        case 28: return ISO639_PART12_LANGUAGE_CODE_EGY;
        case 29: return ISO639_PART12_LANGUAGE_CODE_TEL;
        case 30: return ISO639_PART12_LANGUAGE_CODE_RAJ;
        case 31: return ISO639_PART12_LANGUAGE_CODE_JRB;
        case 32: return ISO639_PART12_LANGUAGE_CODE_NZI;
        case 33: return ISO639_PART12_LANGUAGE_CODE_GLA;
        case 34: return ISO639_PART12_LANGUAGE_CODE_YOR;
        case 35: return ISO639_PART12_LANGUAGE_CODE_TEM;
        case 36: return ISO639_PART12_LANGUAGE_CODE_SCO;
        case 37: return ISO639_PART12_LANGUAGE_CODE_SCN;
        case 38: return ISO639_PART12_LANGUAGE_CODE_AA;
        case 39: return ISO639_PART12_LANGUAGE_CODE_RAP;
        case 40: return ISO639_PART12_LANGUAGE_CODE_TER;
        case 41: return ISO639_PART12_LANGUAGE_CODE_AB;
        case 42: return ISO639_PART12_LANGUAGE_CODE_GLE;
        case 43: return ISO639_PART12_LANGUAGE_CODE_RAR;
        case 44: return ISO639_PART12_LANGUAGE_CODE_TET;
        case 45: return ISO639_PART12_LANGUAGE_CODE_GLG;
        case 46: return ISO639_PART12_LANGUAGE_CODE_AE;
        case 47: return ISO639_PART12_LANGUAGE_CODE_AF;
        case 48: return ISO639_PART12_LANGUAGE_CODE_IPK;
        case 49: return ISO639_PART12_LANGUAGE_CODE_AK;
        case 50: return ISO639_PART12_LANGUAGE_CODE_AM;
        case 51: return ISO639_PART12_LANGUAGE_CODE_AN;
        case 52: return ISO639_PART12_LANGUAGE_CODE_GLV;
        case 53: return ISO639_PART12_LANGUAGE_CODE_AR;
        case 54: return ISO639_PART12_LANGUAGE_CODE_AS;
        case 55: return ISO639_PART12_LANGUAGE_CODE_MYA;
        case 56: return ISO639_PART12_LANGUAGE_CODE_AV;
        case 57: return ISO639_PART12_LANGUAGE_CODE_YPK;
        case 58: return ISO639_PART12_LANGUAGE_CODE_KUA;
        case 59: return ISO639_PART12_LANGUAGE_CODE_AY;
        case 60: return ISO639_PART12_LANGUAGE_CODE_WLN;
        case 61: return ISO639_PART12_LANGUAGE_CODE_AZ;
        case 62: return ISO639_PART12_LANGUAGE_CODE_BA;
        case 63: return ISO639_PART12_LANGUAGE_CODE_CEB;
        case 64: return ISO639_PART12_LANGUAGE_CODE_KUM;
        case 65: return ISO639_PART12_LANGUAGE_CODE_BE;
        case 66: return ISO639_PART12_LANGUAGE_CODE_GMH;
        case 67: return ISO639_PART12_LANGUAGE_CODE_MYN;
        case 68: return ISO639_PART12_LANGUAGE_CODE_BG;
        case 69: return ISO639_PART12_LANGUAGE_CODE_BH;
        case 70: return ISO639_PART12_LANGUAGE_CODE_BI;
        case 71: return ISO639_PART12_LANGUAGE_CODE_KUR;
        case 72: return ISO639_PART12_LANGUAGE_CODE_BM;
        case 73: return ISO639_PART12_LANGUAGE_CODE_CEL;
        case 74: return ISO639_PART12_LANGUAGE_CODE_KUT;
        case 75: return ISO639_PART12_LANGUAGE_CODE_MYV;
        case 76: return ISO639_PART12_LANGUAGE_CODE_BN;
        case 77: return ISO639_PART12_LANGUAGE_CODE_BO;
        case 78: return ISO639_PART12_LANGUAGE_CODE_DGR;
        case 79: return ISO639_PART12_LANGUAGE_CODE_BR;
        case 80: return ISO639_PART12_LANGUAGE_CODE_CES;
        case 81: return ISO639_PART12_LANGUAGE_CODE_BS;
        case 82: return ISO639_PART12_LANGUAGE_CODE_UIG;
        case 83: return ISO639_PART12_LANGUAGE_CODE_AAR;
        case 84: return ISO639_PART12_LANGUAGE_CODE_TGL;
        case 85: return ISO639_PART12_LANGUAGE_CODE_TGK;
        case 86: return ISO639_PART12_LANGUAGE_CODE_IRA;
        case 87: return ISO639_PART12_LANGUAGE_CODE_SEM;
        case 88: return ISO639_PART12_LANGUAGE_CODE_SEL;
        case 89: return ISO639_PART12_LANGUAGE_CODE_CA;
        case 90: return ISO639_PART12_LANGUAGE_CODE_CE;
        case 91: return ISO639_PART12_LANGUAGE_CODE_CH;
        case 92: return ISO639_PART12_LANGUAGE_CODE_IRO;
        case 93: return ISO639_PART12_LANGUAGE_CODE_ABK;
        case 94: return ISO639_PART12_LANGUAGE_CODE_CO;
        case 95: return ISO639_PART12_LANGUAGE_CODE_THA;
        case 96: return ISO639_PART12_LANGUAGE_CODE_CR;
        case 97: return ISO639_PART12_LANGUAGE_CODE_CS;
        case 98: return ISO639_PART12_LANGUAGE_CODE_CU;
        case 99: return ISO639_PART12_LANGUAGE_CODE_CV;
        case 100: return ISO639_PART12_LANGUAGE_CODE_CY;
        case 101: return ISO639_PART12_LANGUAGE_CODE_EKA;
        case 102: return ISO639_PART12_LANGUAGE_CODE_DA;
        case 103: return ISO639_PART12_LANGUAGE_CODE_DE;
        case 104: return ISO639_PART12_LANGUAGE_CODE_GOH;
        case 105: return ISO639_PART12_LANGUAGE_CODE_ACE;
        case 106: return ISO639_PART12_LANGUAGE_CODE_ISL;
        case 107: return ISO639_PART12_LANGUAGE_CODE_BEJ;
        case 108: return ISO639_PART12_LANGUAGE_CODE_ACH;
        case 109: return ISO639_PART12_LANGUAGE_CODE_GON;
        case 110: return ISO639_PART12_LANGUAGE_CODE_BEL;
        case 111: return ISO639_PART12_LANGUAGE_CODE_DIN;
        case 112: return ISO639_PART12_LANGUAGE_CODE_BEN;
        case 113: return ISO639_PART12_LANGUAGE_CODE_BEM;
        case 114: return ISO639_PART12_LANGUAGE_CODE_GOR;
        case 115: return ISO639_PART12_LANGUAGE_CODE_SGA;
        case 116: return ISO639_PART12_LANGUAGE_CODE_GOT;
        case 117: return ISO639_PART12_LANGUAGE_CODE_BER;
        case 118: return ISO639_PART12_LANGUAGE_CODE_DIV;
        case 119: return ISO639_PART12_LANGUAGE_CODE_ZUL;
        case 120: return ISO639_PART12_LANGUAGE_CODE_PAA;
        case 121: return ISO639_PART12_LANGUAGE_CODE_DV;
        case 122: return ISO639_PART12_LANGUAGE_CODE_ZUN;
        case 123: return ISO639_PART12_LANGUAGE_CODE_TIG;
        case 124: return ISO639_PART12_LANGUAGE_CODE_WOL;
        case 125: return ISO639_PART12_LANGUAGE_CODE_DZ;
        case 126: return ISO639_PART12_LANGUAGE_CODE_ITA;
        case 127: return ISO639_PART12_LANGUAGE_CODE_PAG;
        case 128: return ISO639_PART12_LANGUAGE_CODE_PAL;
        case 129: return ISO639_PART12_LANGUAGE_CODE_SGN;
        case 130: return ISO639_PART12_LANGUAGE_CODE_PAN;
        case 131: return ISO639_PART12_LANGUAGE_CODE_TIR;
        case 132: return ISO639_PART12_LANGUAGE_CODE_CHB;
        case 133: return ISO639_PART12_LANGUAGE_CODE_CHA;
        case 134: return ISO639_PART12_LANGUAGE_CODE_UKR;
        case 135: return ISO639_PART12_LANGUAGE_CODE_PAM;
        case 136: return ISO639_PART12_LANGUAGE_CODE_PAP;
        case 137: return ISO639_PART12_LANGUAGE_CODE_ADA;
        case 138: return ISO639_PART12_LANGUAGE_CODE_EE;
        case 139: return ISO639_PART12_LANGUAGE_CODE_TIV;
        case 140: return ISO639_PART12_LANGUAGE_CODE_CHE;
        case 141: return ISO639_PART12_LANGUAGE_CODE_CHG;
        case 142: return ISO639_PART12_LANGUAGE_CODE_ELL;
        case 143: return ISO639_PART12_LANGUAGE_CODE_PAU;
        case 144: return ISO639_PART12_LANGUAGE_CODE_EL;
        case 145: return ISO639_PART12_LANGUAGE_CODE_CHK;
        case 146: return ISO639_PART12_LANGUAGE_CODE_CHN;
        case 147: return ISO639_PART12_LANGUAGE_CODE_EN;
        case 148: return ISO639_PART12_LANGUAGE_CODE_CHM;
        case 149: return ISO639_PART12_LANGUAGE_CODE_EO;
        case 150: return ISO639_PART12_LANGUAGE_CODE_CHP;
        case 151: return ISO639_PART12_LANGUAGE_CODE_CHO;
        case 152: return ISO639_PART12_LANGUAGE_CODE_CHR;
        case 153: return ISO639_PART12_LANGUAGE_CODE_HRV;
        case 154: return ISO639_PART12_LANGUAGE_CODE_ES;
        case 155: return ISO639_PART12_LANGUAGE_CODE_ET;
        case 156: return ISO639_PART12_LANGUAGE_CODE_CHV;
        case 157: return ISO639_PART12_LANGUAGE_CODE_EU;
        case 158: return ISO639_PART12_LANGUAGE_CODE_ELX;
        case 159: return ISO639_PART12_LANGUAGE_CODE_CHU;
        case 160: return ISO639_PART12_LANGUAGE_CODE_CHY;
        case 161: return ISO639_PART12_LANGUAGE_CODE_HSB;
        case 162: return ISO639_PART12_LANGUAGE_CODE_ADY;
        case 163: return ISO639_PART12_LANGUAGE_CODE_SHN;
        case 164: return ISO639_PART12_LANGUAGE_CODE_FA;
        case 165: return ISO639_PART12_LANGUAGE_CODE_BGC;
        case 166: return ISO639_PART12_LANGUAGE_CODE_FF;
        case 167: return ISO639_PART12_LANGUAGE_CODE_FI;
        case 168: return ISO639_PART12_LANGUAGE_CODE_FJ;
        case 169: return ISO639_PART12_LANGUAGE_CODE_FON;
        case 170: return ISO639_PART12_LANGUAGE_CODE_FO;
        case 171: return ISO639_PART12_LANGUAGE_CODE_UMB;
        case 172: return ISO639_PART12_LANGUAGE_CODE_FR;
        case 173: return ISO639_PART12_LANGUAGE_CODE_SID;
        case 174: return ISO639_PART12_LANGUAGE_CODE_VOL;
        case 175: return ISO639_PART12_LANGUAGE_CODE_FY;
        case 176: return ISO639_PART12_LANGUAGE_CODE_TKL;
        case 177: return ISO639_PART12_LANGUAGE_CODE_GRB;
        case 178: return ISO639_PART12_LANGUAGE_CODE_SIO;
        case 179: return ISO639_PART12_LANGUAGE_CODE_SIN;
        case 180: return ISO639_PART12_LANGUAGE_CODE_GRC;
        case 181: return ISO639_PART12_LANGUAGE_CODE_GA;
        case 182: return ISO639_PART12_LANGUAGE_CODE_VOT;
        case 183: return ISO639_PART12_LANGUAGE_CODE_GD;
        case 184: return ISO639_PART12_LANGUAGE_CODE_AFA;
        case 185: return ISO639_PART12_LANGUAGE_CODE_ENG;
        case 186: return ISO639_PART12_LANGUAGE_CODE_SIT;
        case 187: return ISO639_PART12_LANGUAGE_CODE_GRN;
        case 188: return ISO639_PART12_LANGUAGE_CODE_AFH;
        case 189: return ISO639_PART12_LANGUAGE_CODE_GL;
        case 190: return ISO639_PART12_LANGUAGE_CODE_ENM;
        case 191: return ISO639_PART12_LANGUAGE_CODE_GN;
        case 192: return ISO639_PART12_LANGUAGE_CODE_BHO;
        case 193: return ISO639_PART12_LANGUAGE_CODE_UND;
        case 194: return ISO639_PART12_LANGUAGE_CODE_AFR;
        case 195: return ISO639_PART12_LANGUAGE_CODE_GU;
        case 196: return ISO639_PART12_LANGUAGE_CODE_GV;
        case 197: return ISO639_PART12_LANGUAGE_CODE_TLI;
        case 198: return ISO639_PART12_LANGUAGE_CODE_TLH;
        case 199: return ISO639_PART12_LANGUAGE_CODE_HA;
        case 200: return ISO639_PART12_LANGUAGE_CODE_ZXX;
        case 201: return ISO639_PART12_LANGUAGE_CODE_HE;
        case 202: return ISO639_PART12_LANGUAGE_CODE_BIH;
        case 203: return ISO639_PART12_LANGUAGE_CODE_HUN;
        case 204: return ISO639_PART12_LANGUAGE_CODE_HI;
        case 205: return ISO639_PART12_LANGUAGE_CODE_HUP;
        case 206: return ISO639_PART12_LANGUAGE_CODE_BIK;
        case 207: return ISO639_PART12_LANGUAGE_CODE_BIN;
        case 208: return ISO639_PART12_LANGUAGE_CODE_HO;
        case 209: return ISO639_PART12_LANGUAGE_CODE_HR;
        case 210: return ISO639_PART12_LANGUAGE_CODE_GSW;
        case 211: return ISO639_PART12_LANGUAGE_CODE_HT;
        case 212: return ISO639_PART12_LANGUAGE_CODE_BIS;
        case 213: return ISO639_PART12_LANGUAGE_CODE_HU;
        case 214: return ISO639_PART12_LANGUAGE_CODE_TMH;
        case 215: return ISO639_PART12_LANGUAGE_CODE_HY;
        case 216: return ISO639_PART12_LANGUAGE_CODE_HZ;
        case 217: return ISO639_PART12_LANGUAGE_CODE_FRA;
        case 218: return ISO639_PART12_LANGUAGE_CODE_OCI;
        case 219: return ISO639_PART12_LANGUAGE_CODE_NAH;
        case 220: return ISO639_PART12_LANGUAGE_CODE_NAI;
        case 221: return ISO639_PART12_LANGUAGE_CODE_IA;
        case 222: return ISO639_PART12_LANGUAGE_CODE_ID;
        case 223: return ISO639_PART12_LANGUAGE_CODE_PEO;
        case 224: return ISO639_PART12_LANGUAGE_CODE_IE;
        case 225: return ISO639_PART12_LANGUAGE_CODE_NAP;
        case 226: return ISO639_PART12_LANGUAGE_CODE_IG;
        case 227: return ISO639_PART12_LANGUAGE_CODE_II;
        case 228: return ISO639_PART12_LANGUAGE_CODE_FRM;
        case 229: return ISO639_PART12_LANGUAGE_CODE_ZZA;
        case 230: return ISO639_PART12_LANGUAGE_CODE_IK;
        case 231: return ISO639_PART12_LANGUAGE_CODE_NAV;
        case 232: return ISO639_PART12_LANGUAGE_CODE_FRO;
        case 233: return ISO639_PART12_LANGUAGE_CODE_NAU;
        case 234: return ISO639_PART12_LANGUAGE_CODE_EPO;
        case 235: return ISO639_PART12_LANGUAGE_CODE_IO;
        case 236: return ISO639_PART12_LANGUAGE_CODE_FRS;
        case 237: return ISO639_PART12_LANGUAGE_CODE_FRR;
        case 238: return ISO639_PART12_LANGUAGE_CODE_SLA;
        case 239: return ISO639_PART12_LANGUAGE_CODE_IS;
        case 240: return ISO639_PART12_LANGUAGE_CODE_IT;
        case 241: return ISO639_PART12_LANGUAGE_CODE_FRY;
        case 242: return ISO639_PART12_LANGUAGE_CODE_IU;
        case 243: return ISO639_PART12_LANGUAGE_CODE_SLK;
        case 244: return ISO639_PART12_LANGUAGE_CODE_JA;
        case 245: return ISO639_PART12_LANGUAGE_CODE_CMC;
        case 246: return ISO639_PART12_LANGUAGE_CODE_NBL;
        case 247: return ISO639_PART12_LANGUAGE_CODE_SLV;
        case 248: return ISO639_PART12_LANGUAGE_CODE_GUJ;
        case 249: return ISO639_PART12_LANGUAGE_CODE_DOI;
        case 250: return ISO639_PART12_LANGUAGE_CODE_SMA;
        case 251: return ISO639_PART12_LANGUAGE_CODE_AIN;
        case 252: return ISO639_PART12_LANGUAGE_CODE_SME;
        case 253: return ISO639_PART12_LANGUAGE_CODE_JV;
        case 254: return ISO639_PART12_LANGUAGE_CODE_TOG;
        case 255: return ISO639_PART12_LANGUAGE_CODE_SMI;
        case 256: return ISO639_PART12_LANGUAGE_CODE_MAD;
        case 257: return ISO639_PART12_LANGUAGE_CODE_SMJ;
        case 258: return ISO639_PART12_LANGUAGE_CODE_TON;
        case 259: return ISO639_PART12_LANGUAGE_CODE_MAG;
        case 260: return ISO639_PART12_LANGUAGE_CODE_SMO;
        case 261: return ISO639_PART12_LANGUAGE_CODE_MAI;
        case 262: return ISO639_PART12_LANGUAGE_CODE_MAH;
        case 263: return ISO639_PART12_LANGUAGE_CODE_SMN;
        case 264: return ISO639_PART12_LANGUAGE_CODE_KA;
        case 265: return ISO639_PART12_LANGUAGE_CODE_BLA;
        case 266: return ISO639_PART12_LANGUAGE_CODE_MAK;
        case 267: return ISO639_PART12_LANGUAGE_CODE_SMS;
        case 268: return ISO639_PART12_LANGUAGE_CODE_MAL;
        case 269: return ISO639_PART12_LANGUAGE_CODE_MAN;
        case 270: return ISO639_PART12_LANGUAGE_CODE_KG;
        case 271: return ISO639_PART12_LANGUAGE_CODE_MAP;
        case 272: return ISO639_PART12_LANGUAGE_CODE_KI;
        case 273: return ISO639_PART12_LANGUAGE_CODE_MAS;
        case 274: return ISO639_PART12_LANGUAGE_CODE_KJ;
        case 275: return ISO639_PART12_LANGUAGE_CODE_MAR;
        case 276: return ISO639_PART12_LANGUAGE_CODE_KK;
        case 277: return ISO639_PART12_LANGUAGE_CODE_KL;
        case 278: return ISO639_PART12_LANGUAGE_CODE_KM;
        case 279: return ISO639_PART12_LANGUAGE_CODE_KN;
        case 280: return ISO639_PART12_LANGUAGE_CODE_KO;
        case 281: return ISO639_PART12_LANGUAGE_CODE_URD;
        case 282: return ISO639_PART12_LANGUAGE_CODE_CNR;
        case 283: return ISO639_PART12_LANGUAGE_CODE_KR;
        case 284: return ISO639_PART12_LANGUAGE_CODE_SNA;
        case 285: return ISO639_PART12_LANGUAGE_CODE_KS;
        case 286: return ISO639_PART12_LANGUAGE_CODE_SND;
        case 287: return ISO639_PART12_LANGUAGE_CODE_KU;
        case 288: return ISO639_PART12_LANGUAGE_CODE_KV;
        case 289: return ISO639_PART12_LANGUAGE_CODE_KW;
        case 290: return ISO639_PART12_LANGUAGE_CODE_TPI;
        case 291: return ISO639_PART12_LANGUAGE_CODE_KY;
        case 292: return ISO639_PART12_LANGUAGE_CODE_NDE;
        case 293: return ISO639_PART12_LANGUAGE_CODE_PHI;
        case 294: return ISO639_PART12_LANGUAGE_CODE_SNK;
        case 295: return ISO639_PART12_LANGUAGE_CODE_HYE;
        case 296: return ISO639_PART12_LANGUAGE_CODE_LA;
        case 297: return ISO639_PART12_LANGUAGE_CODE_AKA;
        case 298: return ISO639_PART12_LANGUAGE_CODE_LB;
        case 299: return ISO639_PART12_LANGUAGE_CODE_PHN;
        case 300: return ISO639_PART12_LANGUAGE_CODE_NDO;
        case 301: return ISO639_PART12_LANGUAGE_CODE_GWI;
        case 302: return ISO639_PART12_LANGUAGE_CODE_LG;
        case 303: return ISO639_PART12_LANGUAGE_CODE_FUL;
        case 304: return ISO639_PART12_LANGUAGE_CODE_NDS;
        case 305: return ISO639_PART12_LANGUAGE_CODE_LI;
        case 306: return ISO639_PART12_LANGUAGE_CODE_AKK;
        case 307: return ISO639_PART12_LANGUAGE_CODE_LN;
        case 308: return ISO639_PART12_LANGUAGE_CODE_FUR;
        case 309: return ISO639_PART12_LANGUAGE_CODE_LO;
        case 310: return ISO639_PART12_LANGUAGE_CODE_COP;
        case 311: return ISO639_PART12_LANGUAGE_CODE_COS;
        case 312: return ISO639_PART12_LANGUAGE_CODE_EST;
        case 313: return ISO639_PART12_LANGUAGE_CODE_COR;
        case 314: return ISO639_PART12_LANGUAGE_CODE_LT;
        case 315: return ISO639_PART12_LANGUAGE_CODE_LU;
        case 316: return ISO639_PART12_LANGUAGE_CODE_LV;
        case 317: return ISO639_PART12_LANGUAGE_CODE_SOG;
        case 318: return ISO639_PART12_LANGUAGE_CODE_LAD;
        case 319: return ISO639_PART12_LANGUAGE_CODE_SOM;
        case 320: return ISO639_PART12_LANGUAGE_CODE_DRA;
        case 321: return ISO639_PART12_LANGUAGE_CODE_LAH;
        case 322: return ISO639_PART12_LANGUAGE_CODE_SON;
        case 323: return ISO639_PART12_LANGUAGE_CODE_NEP;
        case 324: return ISO639_PART12_LANGUAGE_CODE_CPF;
        case 325: return ISO639_PART12_LANGUAGE_CODE_SOT;
        case 326: return ISO639_PART12_LANGUAGE_CODE_CPE;
        case 327: return ISO639_PART12_LANGUAGE_CODE_LAM;
        case 328: return ISO639_PART12_LANGUAGE_CODE_MG;
        case 329: return ISO639_PART12_LANGUAGE_CODE_LAO;
        case 330: return ISO639_PART12_LANGUAGE_CODE_MH;
        case 331: return ISO639_PART12_LANGUAGE_CODE_ALE;
        case 332: return ISO639_PART12_LANGUAGE_CODE_MI;
        case 333: return ISO639_PART12_LANGUAGE_CODE_ALG;
        case 334: return ISO639_PART12_LANGUAGE_CODE_LAT;
        case 335: return ISO639_PART12_LANGUAGE_CODE_MK;
        case 336: return ISO639_PART12_LANGUAGE_CODE_ML;
        case 337: return ISO639_PART12_LANGUAGE_CODE_LAV;
        case 338: return ISO639_PART12_LANGUAGE_CODE_MN;
        case 339: return ISO639_PART12_LANGUAGE_CODE_NEW;
        case 340: return ISO639_PART12_LANGUAGE_CODE_MO;
        case 341: return ISO639_PART12_LANGUAGE_CODE_CPP;
        case 342: return ISO639_PART12_LANGUAGE_CODE_SPA;
        case 343: return ISO639_PART12_LANGUAGE_CODE_MR;
        case 344: return ISO639_PART12_LANGUAGE_CODE_MS;
        case 345: return ISO639_PART12_LANGUAGE_CODE_MT;
        case 346: return ISO639_PART12_LANGUAGE_CODE_ALT;
        case 347: return ISO639_PART12_LANGUAGE_CODE_BNT;
        case 348: return ISO639_PART12_LANGUAGE_CODE_MY;
        case 349: return ISO639_PART12_LANGUAGE_CODE_MDF;
        case 350: return ISO639_PART12_LANGUAGE_CODE_DSB;
        case 351: return ISO639_PART12_LANGUAGE_CODE_NA;
        case 352: return ISO639_PART12_LANGUAGE_CODE_NB;
        case 353: return ISO639_PART12_LANGUAGE_CODE_BOD;
        case 354: return ISO639_PART12_LANGUAGE_CODE_ND;
        case 355: return ISO639_PART12_LANGUAGE_CODE_NE;
        case 356: return ISO639_PART12_LANGUAGE_CODE_NG;
        case 357: return ISO639_PART12_LANGUAGE_CODE_MDR;
        case 358: return ISO639_PART12_LANGUAGE_CODE_AMH;
        case 359: return ISO639_PART12_LANGUAGE_CODE_NL;
        case 360: return ISO639_PART12_LANGUAGE_CODE_NN;
        case 361: return ISO639_PART12_LANGUAGE_CODE_NO;
        case 362: return ISO639_PART12_LANGUAGE_CODE_EUS;
        case 363: return ISO639_PART12_LANGUAGE_CODE_NR;
        case 364: return ISO639_PART12_LANGUAGE_CODE_ROA;
        case 365: return ISO639_PART12_LANGUAGE_CODE_BOS;
        case 366: return ISO639_PART12_LANGUAGE_CODE_NV;
        case 367: return ISO639_PART12_LANGUAGE_CODE_ROH;
        case 368: return ISO639_PART12_LANGUAGE_CODE_SQI;
        case 369: return ISO639_PART12_LANGUAGE_CODE_KAA;
        case 370: return ISO639_PART12_LANGUAGE_CODE_NY;
        case 371: return ISO639_PART12_LANGUAGE_CODE_TSI;
        case 372: return ISO639_PART12_LANGUAGE_CODE_KAC;
        case 373: return ISO639_PART12_LANGUAGE_CODE_KAB;
        case 374: return ISO639_PART12_LANGUAGE_CODE_TSN;
        case 375: return ISO639_PART12_LANGUAGE_CODE_RON;
        case 376: return ISO639_PART12_LANGUAGE_CODE_TSO;
        case 377: return ISO639_PART12_LANGUAGE_CODE_ROM;
        case 378: return ISO639_PART12_LANGUAGE_CODE_OC;
        case 379: return ISO639_PART12_LANGUAGE_CODE_KAM;
        case 380: return ISO639_PART12_LANGUAGE_CODE_CRE;
        case 381: return ISO639_PART12_LANGUAGE_CODE_KAL;
        case 382: return ISO639_PART12_LANGUAGE_CODE_MEN;
        case 383: return ISO639_PART12_LANGUAGE_CODE_CRH;
        case 384: return ISO639_PART12_LANGUAGE_CODE_KAN;
        case 385: return ISO639_PART12_LANGUAGE_CODE_OJ;
        case 386: return ISO639_PART12_LANGUAGE_CODE_ANG;
        case 387: return ISO639_PART12_LANGUAGE_CODE_KAS;
        case 388: return ISO639_PART12_LANGUAGE_CODE_KAR;
        case 389: return ISO639_PART12_LANGUAGE_CODE_KAU;
        case 390: return ISO639_PART12_LANGUAGE_CODE_OM;
        case 391: return ISO639_PART12_LANGUAGE_CODE_KAT;
        case 392: return ISO639_PART12_LANGUAGE_CODE_CRP;
        case 393: return ISO639_PART12_LANGUAGE_CODE_KAW;
        case 394: return ISO639_PART12_LANGUAGE_CODE_ANP;
        case 395: return ISO639_PART12_LANGUAGE_CODE_OR;
        case 396: return ISO639_PART12_LANGUAGE_CODE_OS;
        case 397: return ISO639_PART12_LANGUAGE_CODE_SRD;
        case 398: return ISO639_PART12_LANGUAGE_CODE_KAZ;
        case 399: return ISO639_PART12_LANGUAGE_CODE_PLI;
        case 400: return ISO639_PART12_LANGUAGE_CODE_KBD;
        case 401: return ISO639_PART12_LANGUAGE_CODE_SRN;
        case 402: return ISO639_PART12_LANGUAGE_CODE_OJI;
        case 403: return ISO639_PART12_LANGUAGE_CODE_SRP;
        case 404: return ISO639_PART12_LANGUAGE_CODE_PA;
        case 405: return ISO639_PART12_LANGUAGE_CODE_DUA;
        case 406: return ISO639_PART12_LANGUAGE_CODE_EWE;
        case 407: return ISO639_PART12_LANGUAGE_CODE_SRR;
        case 408: return ISO639_PART12_LANGUAGE_CODE_CSB;
        case 409: return ISO639_PART12_LANGUAGE_CODE_PI;
        case 410: return ISO639_PART12_LANGUAGE_CODE_PL;
        case 411: return ISO639_PART12_LANGUAGE_CODE_EWO;
        case 412: return ISO639_PART12_LANGUAGE_CODE_DUM;
        case 413: return ISO639_PART12_LANGUAGE_CODE_SSA;
        case 414: return ISO639_PART12_LANGUAGE_CODE_PS;
        case 415: return ISO639_PART12_LANGUAGE_CODE_PT;
        case 416: return ISO639_PART12_LANGUAGE_CODE_MGA;
        case 417: return ISO639_PART12_LANGUAGE_CODE_NIA;
        case 418: return ISO639_PART12_LANGUAGE_CODE_NIC;
        case 419: return ISO639_PART12_LANGUAGE_CODE_TUK;
        case 420: return ISO639_PART12_LANGUAGE_CODE_TUM;
        case 421: return ISO639_PART12_LANGUAGE_CODE_TUP;
        case 422: return ISO639_PART12_LANGUAGE_CODE_TUR;
        case 423: return ISO639_PART12_LANGUAGE_CODE_BRA;
        case 424: return ISO639_PART12_LANGUAGE_CODE_TUT;
        case 425: return ISO639_PART12_LANGUAGE_CODE_APA;
        case 426: return ISO639_PART12_LANGUAGE_CODE_BRE;
        case 427: return ISO639_PART12_LANGUAGE_CODE_SSW;
        case 428: return ISO639_PART12_LANGUAGE_CODE_NIU;
        case 429: return ISO639_PART12_LANGUAGE_CODE_JAV;
        case 430: return ISO639_PART12_LANGUAGE_CODE_LEZ;
        case 431: return ISO639_PART12_LANGUAGE_CODE_QU;
        case 432: return ISO639_PART12_LANGUAGE_CODE_ZAP;
        case 433: return ISO639_PART12_LANGUAGE_CODE_TVL;
        case 434: return ISO639_PART12_LANGUAGE_CODE_JBO;
        case 435: return ISO639_PART12_LANGUAGE_CODE_RM;
        case 436: return ISO639_PART12_LANGUAGE_CODE_RN;
        case 437: return ISO639_PART12_LANGUAGE_CODE_RO;
        case 438: return ISO639_PART12_LANGUAGE_CODE_CUS;
        case 439: return ISO639_PART12_LANGUAGE_CODE_QQA;
        case 440: return ISO639_PART12_LANGUAGE_CODE_QQC;
        case 441: return ISO639_PART12_LANGUAGE_CODE_RU;
        case 442: return ISO639_PART12_LANGUAGE_CODE_QQB;
        case 443: return ISO639_PART12_LANGUAGE_CODE_QQE;
        case 444: return ISO639_PART12_LANGUAGE_CODE_RW;
        case 445: return ISO639_PART12_LANGUAGE_CODE_QQD;
        case 446: return ISO639_PART12_LANGUAGE_CODE_ZBL;
        case 447: return ISO639_PART12_LANGUAGE_CODE_MIC;
        case 448: return ISO639_PART12_LANGUAGE_CODE_QQG;
        case 449: return ISO639_PART12_LANGUAGE_CODE_TWI;
        case 450: return ISO639_PART12_LANGUAGE_CODE_QQF;
        case 451: return ISO639_PART12_LANGUAGE_CODE_QQI;
        case 452: return ISO639_PART12_LANGUAGE_CODE_SUK;
        case 453: return ISO639_PART12_LANGUAGE_CODE_QQH;
        case 454: return ISO639_PART12_LANGUAGE_CODE_QQJ;
        case 455: return ISO639_PART12_LANGUAGE_CODE_POL;
        case 456: return ISO639_PART12_LANGUAGE_CODE_SUN;
        case 457: return ISO639_PART12_LANGUAGE_CODE_SA;
        case 458: return ISO639_PART12_LANGUAGE_CODE_PON;
        case 459: return ISO639_PART12_LANGUAGE_CODE_SC;
        case 460: return ISO639_PART12_LANGUAGE_CODE_SUS;
        case 461: return ISO639_PART12_LANGUAGE_CODE_ARA;
        case 462: return ISO639_PART12_LANGUAGE_CODE_SD;
        case 463: return ISO639_PART12_LANGUAGE_CODE_POR;
        case 464: return ISO639_PART12_LANGUAGE_CODE_SE;
        case 465: return ISO639_PART12_LANGUAGE_CODE_ARC;
        case 466: return ISO639_PART12_LANGUAGE_CODE_MIN;
        case 467: return ISO639_PART12_LANGUAGE_CODE_SG;
        case 468: return ISO639_PART12_LANGUAGE_CODE_SI;
        case 469: return ISO639_PART12_LANGUAGE_CODE_MIS;
        case 470: return ISO639_PART12_LANGUAGE_CODE_ARG;
        case 471: return ISO639_PART12_LANGUAGE_CODE_SUX;
        case 472: return ISO639_PART12_LANGUAGE_CODE_SK;
        case 473: return ISO639_PART12_LANGUAGE_CODE_BTK;
        case 474: return ISO639_PART12_LANGUAGE_CODE_SL;
        case 475: return ISO639_PART12_LANGUAGE_CODE_SM;
        case 476: return ISO639_PART12_LANGUAGE_CODE_SN;
        case 477: return ISO639_PART12_LANGUAGE_CODE_SO;
        case 478: return ISO639_PART12_LANGUAGE_CODE_UZB;
        case 479: return ISO639_PART12_LANGUAGE_CODE_ARN;
        case 480: return ISO639_PART12_LANGUAGE_CODE_SQ;
        case 481: return ISO639_PART12_LANGUAGE_CODE_ARP;
        case 482: return ISO639_PART12_LANGUAGE_CODE_SR;
        case 483: return ISO639_PART12_LANGUAGE_CODE_SS;
        case 484: return ISO639_PART12_LANGUAGE_CODE_ST;
        case 485: return ISO639_PART12_LANGUAGE_CODE_SU;
        case 486: return ISO639_PART12_LANGUAGE_CODE_ART;
        case 487: return ISO639_PART12_LANGUAGE_CODE_SV;
        case 488: return ISO639_PART12_LANGUAGE_CODE_SW;
        case 489: return ISO639_PART12_LANGUAGE_CODE_YAO;
        case 490: return ISO639_PART12_LANGUAGE_CODE_NLD;
        case 491: return ISO639_PART12_LANGUAGE_CODE_ARW;
        case 492: return ISO639_PART12_LANGUAGE_CODE_IBA;
        case 493: return ISO639_PART12_LANGUAGE_CODE_YAP;
        case 494: return ISO639_PART12_LANGUAGE_CODE_TA;
        case 495: return ISO639_PART12_LANGUAGE_CODE_BUA;
        case 496: return ISO639_PART12_LANGUAGE_CODE_TE;
        case 497: return ISO639_PART12_LANGUAGE_CODE_TG;
        case 498: return ISO639_PART12_LANGUAGE_CODE_TH;
        case 499: return ISO639_PART12_LANGUAGE_CODE_TI;
        case 500: return ISO639_PART12_LANGUAGE_CODE_BUG;
        case 501: return ISO639_PART12_LANGUAGE_CODE_IBO;
        case 502: return ISO639_PART12_LANGUAGE_CODE_TK;
        case 503: return ISO639_PART12_LANGUAGE_CODE_BUL;
        case 504: return ISO639_PART12_LANGUAGE_CODE_TL;
        case 505: return ISO639_PART12_LANGUAGE_CODE_ASM;
        case 506: return ISO639_PART12_LANGUAGE_CODE_TN;
        case 507: return ISO639_PART12_LANGUAGE_CODE_TO;
        case 508: return ISO639_PART12_LANGUAGE_CODE_SWA;
        case 509: return ISO639_PART12_LANGUAGE_CODE_TR;
        case 510: return ISO639_PART12_LANGUAGE_CODE_TS;
        case 511: return ISO639_PART12_LANGUAGE_CODE_SWE;
        case 512: return ISO639_PART12_LANGUAGE_CODE_TT;
        case 513: return ISO639_PART12_LANGUAGE_CODE_DYU;
        case 514: return ISO639_PART12_LANGUAGE_CODE_TW;
        case 515: return ISO639_PART12_LANGUAGE_CODE_AST;
        case 516: return ISO639_PART12_LANGUAGE_CODE_TY;
        case 517: return ISO639_PART12_LANGUAGE_CODE_MKD;
        case 518: return ISO639_PART12_LANGUAGE_CODE_RUN;
        case 519: return ISO639_PART12_LANGUAGE_CODE_MKH;
        case 520: return ISO639_PART12_LANGUAGE_CODE_RUP;
        case 521: return ISO639_PART12_LANGUAGE_CODE_LIN;
        case 522: return ISO639_PART12_LANGUAGE_CODE_TYV;
        case 523: return ISO639_PART12_LANGUAGE_CODE_LIM;
        case 524: return ISO639_PART12_LANGUAGE_CODE_RUS;
        case 525: return ISO639_PART12_LANGUAGE_CODE_HAI;
        case 526: return ISO639_PART12_LANGUAGE_CODE_UG;
        case 527: return ISO639_PART12_LANGUAGE_CODE_ATH;
        case 528: return ISO639_PART12_LANGUAGE_CODE_LIT;
        case 529: return ISO639_PART12_LANGUAGE_CODE_UK;
        case 530: return ISO639_PART12_LANGUAGE_CODE_DZO;
        case 531: return ISO639_PART12_LANGUAGE_CODE_HAT;
        case 532: return ISO639_PART12_LANGUAGE_CODE_HAU;
        case 533: return ISO639_PART12_LANGUAGE_CODE_UR;
        case 534: return ISO639_PART12_LANGUAGE_CODE_PRA;
        case 535: return ISO639_PART12_LANGUAGE_CODE_HAW;
        case 536: return ISO639_PART12_LANGUAGE_CODE_XAL;
        case 537: return ISO639_PART12_LANGUAGE_CODE_ZEN;
        case 538: return ISO639_PART12_LANGUAGE_CODE_UZ;
        case 539: return ISO639_PART12_LANGUAGE_CODE_KHA;
        case 540: return ISO639_PART12_LANGUAGE_CODE_MLG;
        case 541: return ISO639_PART12_LANGUAGE_CODE_PRO;
        case 542: return ISO639_PART12_LANGUAGE_CODE_KHI;
        case 543: return ISO639_PART12_LANGUAGE_CODE_NNO;
        case 544: return ISO639_PART12_LANGUAGE_CODE_VE;
        case 545: return ISO639_PART12_LANGUAGE_CODE_KHM;
        case 546: return ISO639_PART12_LANGUAGE_CODE_VI;
        case 547: return ISO639_PART12_LANGUAGE_CODE_KHO;
        case 548: return ISO639_PART12_LANGUAGE_CODE_MLT;
        case 549: return ISO639_PART12_LANGUAGE_CODE_IDO;
        case 550: return ISO639_PART12_LANGUAGE_CODE_CYM;
        case 551: return ISO639_PART12_LANGUAGE_CODE_VO;
        case 552: return ISO639_PART12_LANGUAGE_CODE_SYC;
        case 553: return ISO639_PART12_LANGUAGE_CODE_AUS;
        case 554: return ISO639_PART12_LANGUAGE_CODE_NOB;
        case 555: return ISO639_PART12_LANGUAGE_CODE_QUE;
        case 556: return ISO639_PART12_LANGUAGE_CODE_GAA;
        case 557: return ISO639_PART12_LANGUAGE_CODE_NOG;
        case 558: return ISO639_PART12_LANGUAGE_CODE_WA;
        case 559: return ISO639_PART12_LANGUAGE_CODE_KIK;
        case 560: return ISO639_PART12_LANGUAGE_CODE_NON;
        case 561: return ISO639_PART12_LANGUAGE_CODE_AVA;
        case 562: return ISO639_PART12_LANGUAGE_CODE_SYR;
        case 563: return ISO639_PART12_LANGUAGE_CODE_NOR;
        case 564: return ISO639_PART12_LANGUAGE_CODE_AVE;
        case 565: return ISO639_PART12_LANGUAGE_CODE_KIN;
        case 566: return ISO639_PART12_LANGUAGE_CODE_KIR;
        case 567: return ISO639_PART12_LANGUAGE_CODE_WO;
        case 568: return ISO639_PART12_LANGUAGE_CODE_ZGH;
        case 569: return ISO639_PART12_LANGUAGE_CODE_GAY;
        case 570: return ISO639_PART12_LANGUAGE_CODE_WAK;
        case 571: return ISO639_PART12_LANGUAGE_CODE_MNC;
        case 572: return ISO639_PART12_LANGUAGE_CODE_WAL;
        case 573: return ISO639_PART12_LANGUAGE_CODE_ORI;
        case 574: return ISO639_PART12_LANGUAGE_CODE_GBA;
        case 575: return ISO639_PART12_LANGUAGE_CODE_WAS;
        case 576: return ISO639_PART12_LANGUAGE_CODE_MNI;
        case 577: return ISO639_PART12_LANGUAGE_CODE_WAR;
        case 578: return ISO639_PART12_LANGUAGE_CODE_AWA;
        case 579: return ISO639_PART12_LANGUAGE_CODE_ORM;
        case 580: return ISO639_PART12_LANGUAGE_CODE_MNO;
        case 581: return ISO639_PART12_LANGUAGE_CODE_XH;
        case 582: return ISO639_PART12_LANGUAGE_CODE_ZHA;
        case 583: return ISO639_PART12_LANGUAGE_CODE_BYN;
        case 584: return ISO639_PART12_LANGUAGE_CODE_OSA;
        case 585: return ISO639_PART12_LANGUAGE_CODE_ZHO;
        case 586: return ISO639_PART12_LANGUAGE_CODE_HEB;
        case 587: return ISO639_PART12_LANGUAGE_CODE_MOH;
        case 588: return ISO639_PART12_LANGUAGE_CODE_MON;
        case 589: return ISO639_PART12_LANGUAGE_CODE_NQO;
        case 590: return ISO639_PART12_LANGUAGE_CODE_OSS;
        case 591: return ISO639_PART12_LANGUAGE_CODE_PUS;
        case 592: return ISO639_PART12_LANGUAGE_CODE_YI;
        case 593: return ISO639_PART12_LANGUAGE_CODE_MOS;
        case 594: return ISO639_PART12_LANGUAGE_CODE_FAN;
        case 595: return ISO639_PART12_LANGUAGE_CODE_HER;
        case 596: return ISO639_PART12_LANGUAGE_CODE_FAO;
        case 597: return ISO639_PART12_LANGUAGE_CODE_YO;
        case 598: return ISO639_PART12_LANGUAGE_CODE_FAT;
        case 599: return ISO639_PART12_LANGUAGE_CODE_FAS;
        case 600: return ISO639_PART12_LANGUAGE_CODE_OTA;
        case 601: return ISO639_PART12_LANGUAGE_CODE_VAI;
        case 602: return ISO639_PART12_LANGUAGE_CODE_ZA;
        case 603: return ISO639_PART12_LANGUAGE_CODE_OTO;
        case 604: return ISO639_PART12_LANGUAGE_CODE_ZH;
        case 605: return ISO639_PART12_LANGUAGE_CODE_AYM;
        case 606: return ISO639_PART12_LANGUAGE_CODE_ZU;
        case 607: return ISO639_PART12_LANGUAGE_CODE_KMB;
        case 608: return ISO639_PART12_LANGUAGE_CODE_III;
        case 609: return ISO639_PART12_LANGUAGE_CODE_LOL;
        case 610: return ISO639_PART12_LANGUAGE_CODE_NSO;
        case 611: return ISO639_PART12_LANGUAGE_CODE_AZE;
        case 612: return ISO639_PART12_LANGUAGE_CODE_GEM;
        case 613: return ISO639_PART12_LANGUAGE_CODE_YID;
        case 614: return ISO639_PART12_LANGUAGE_CODE_LOZ;
        case 615: return ISO639_PART12_LANGUAGE_CODE_GEZ;
        case 616: return ISO639_PART12_LANGUAGE_CODE_WEN;
        case 617: return ISO639_PART12_LANGUAGE_CODE_MRI;
        case 618: return ISO639_PART12_LANGUAGE_CODE_IJO;
        case 619: return ISO639_PART12_LANGUAGE_CODE_MSA;
        case 620: return ISO639_PART12_LANGUAGE_CODE_NUB;
        case 621: return ISO639_PART12_LANGUAGE_CODE_XHO;
        case 622: return ISO639_PART12_LANGUAGE_CODE_KOK;
        case 623: return ISO639_PART12_LANGUAGE_CODE_KOM;
        case 624: return ISO639_PART12_LANGUAGE_CODE_HIL;
        case 625: return ISO639_PART12_LANGUAGE_CODE_KON;
        case 626: return ISO639_PART12_LANGUAGE_CODE_HIN;
        case 627: return ISO639_PART12_LANGUAGE_CODE_HIM;
        case 628: return ISO639_PART12_LANGUAGE_CODE_KOS;
        case 629: return ISO639_PART12_LANGUAGE_CODE_KOR;
        case 630: return ISO639_PART12_LANGUAGE_CODE_DAK;
        case 631: return ISO639_PART12_LANGUAGE_CODE_DAN;
        case 632: return ISO639_PART12_LANGUAGE_CODE_IKU;
        case 633: return ISO639_PART12_LANGUAGE_CODE_HIT;
        case 634: return ISO639_PART12_LANGUAGE_CODE_DAR;
        case 635: return ISO639_PART12_LANGUAGE_CODE_TAH;
        case 636: return ISO639_PART12_LANGUAGE_CODE_DAY;
        case 637: return ISO639_PART12_LANGUAGE_CODE_TAI;
        case 638: return ISO639_PART12_LANGUAGE_CODE_VEN;
        case 639: return ISO639_PART12_LANGUAGE_CODE_TAM;
        case 640: return ISO639_PART12_LANGUAGE_CODE_KPE;
        case 641: return ISO639_PART12_LANGUAGE_CODE_ILE;
        case 642: return ISO639_PART12_LANGUAGE_CODE_TAT;
        case 643: return ISO639_PART12_LANGUAGE_CODE_ILO;
        case 644: return ISO639_PART12_LANGUAGE_CODE_ZND;
        case 645: return ISO639_PART12_LANGUAGE_CODE_NWC;
        case 646: return ISO639_PART12_LANGUAGE_CODE_UDM;
        case 647: return ISO639_PART12_LANGUAGE_CODE_MUL;
        case 648: return ISO639_PART12_LANGUAGE_CODE_CAD;
        case 649: return ISO639_PART12_LANGUAGE_CODE_MUN;
        case 650: return ISO639_PART12_LANGUAGE_CODE_CAI;
        case 651: return ISO639_PART12_LANGUAGE_CODE_MUS;
        case 652: return ISO639_PART12_LANGUAGE_CODE_GIL;
        case 653: return ISO639_PART12_LANGUAGE_CODE_CAR;
        case 654: return ISO639_PART12_LANGUAGE_CODE_CAU;
        case 655: return ISO639_PART12_LANGUAGE_CODE_CAT;
        case 656: return ISO639_PART12_LANGUAGE_CODE_SAD;
        case 657: return ISO639_PART12_LANGUAGE_CODE_SAG;
        case 658: return ISO639_PART12_LANGUAGE_CODE_SAI;
        case 659: return ISO639_PART12_LANGUAGE_CODE_SAH;
        case 660: return ISO639_PART12_LANGUAGE_CODE_INA;
        case 661: return ISO639_PART12_LANGUAGE_CODE_KRC;
        case 662: return ISO639_PART12_LANGUAGE_CODE_IND;
        case 663: return ISO639_PART12_LANGUAGE_CODE_SAM;
        case 664: return ISO639_PART12_LANGUAGE_CODE_INC;
        case 665: return ISO639_PART12_LANGUAGE_CODE_SAL;
        case 666: return ISO639_PART12_LANGUAGE_CODE_SAN;
        case 667: return ISO639_PART12_LANGUAGE_CODE_INE;
        case 668: return ISO639_PART12_LANGUAGE_CODE_INH;
        case 669: return ISO639_PART12_LANGUAGE_CODE_KRL;
        case 670: return ISO639_PART12_LANGUAGE_CODE_SAS;
        case 671: return ISO639_PART12_LANGUAGE_CODE_SAT;
        case 672: return ISO639_PART12_LANGUAGE_CODE_JPN;
        case 673: return ISO639_PART12_LANGUAGE_CODE_EFI;
        case 674: return ISO639_PART12_LANGUAGE_CODE_KRO;
        case 675: return ISO639_PART12_LANGUAGE_CODE_JPR;
        case 676: return ISO639_PART12_LANGUAGE_CODE_KRU;
        case 677: return ISO639_PART12_LANGUAGE_CODE_LTZ;
        case 678: return ISO639_PART12_LANGUAGE_CODE_NYA;
        case 679: return ISO639_PART12_LANGUAGE_CODE_LUB;
        case 680: return ISO639_PART12_LANGUAGE_CODE_LUA;
        case 681: return ISO639_PART12_LANGUAGE_CODE_LUG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Iso639Part12LanguageCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Iso639Part12LanguageCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Iso639Part12LanguageCode>() {
            public Iso639Part12LanguageCode findValueByNumber(int number) {
              return Iso639Part12LanguageCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(76);
    }

    private static final Iso639Part12LanguageCode[] VALUES = values();

    public static Iso639Part12LanguageCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Iso639Part12LanguageCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Iso639Part12LanguageCode)
  }

  /**
   * Protobuf enum {@code avs.Iso639Part3LanguageCode}
   */
  public enum Iso639Part3LanguageCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ISO639_PART3_LANGUAGE_CODE_AAA = 0;</code>
     */
    ISO639_PART3_LANGUAGE_CODE_AAA(0),
    ;

    /**
     * <code>ISO639_PART3_LANGUAGE_CODE_AAA = 0;</code>
     */
    public static final int ISO639_PART3_LANGUAGE_CODE_AAA_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Iso639Part3LanguageCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Iso639Part3LanguageCode forNumber(int value) {
      switch (value) {
        case 0: return ISO639_PART3_LANGUAGE_CODE_AAA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Iso639Part3LanguageCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Iso639Part3LanguageCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Iso639Part3LanguageCode>() {
            public Iso639Part3LanguageCode findValueByNumber(int number) {
              return Iso639Part3LanguageCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(77);
    }

    private static final Iso639Part3LanguageCode[] VALUES = values();

    public static Iso639Part3LanguageCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Iso639Part3LanguageCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Iso639Part3LanguageCode)
  }

  /**
   * Protobuf enum {@code avs.IsoCurrencyCode}
   */
  public enum IsoCurrencyCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ISO_CURRENCY_CODE_F_J_D = 0;</code>
     */
    ISO_CURRENCY_CODE_F_J_D(0),
    /**
     * <code>ISO_CURRENCY_CODE_M_X_N = 1;</code>
     */
    ISO_CURRENCY_CODE_M_X_N(1),
    /**
     * <code>ISO_CURRENCY_CODE_S_C_R = 2;</code>
     */
    ISO_CURRENCY_CODE_S_C_R(2),
    /**
     * <code>ISO_CURRENCY_CODE_C_D_F = 3;</code>
     */
    ISO_CURRENCY_CODE_C_D_F(3),
    /**
     * <code>ISO_CURRENCY_CODE_B_B_D = 4;</code>
     */
    ISO_CURRENCY_CODE_B_B_D(4),
    /**
     * <code>ISO_CURRENCY_CODE_G_T_Q = 5;</code>
     */
    ISO_CURRENCY_CODE_G_T_Q(5),
    /**
     * <code>ISO_CURRENCY_CODE_C_L_P = 6;</code>
     */
    ISO_CURRENCY_CODE_C_L_P(6),
    /**
     * <code>ISO_CURRENCY_CODE_H_N_L = 7;</code>
     */
    ISO_CURRENCY_CODE_H_N_L(7),
    /**
     * <code>ISO_CURRENCY_CODE_U_G_X = 8;</code>
     */
    ISO_CURRENCY_CODE_U_G_X(8),
    /**
     * <code>ISO_CURRENCY_CODE_M_X_V = 9;</code>
     */
    ISO_CURRENCY_CODE_M_X_V(9),
    /**
     * <code>ISO_CURRENCY_CODE_Z_A_R = 10;</code>
     */
    ISO_CURRENCY_CODE_Z_A_R(10),
    /**
     * <code>ISO_CURRENCY_CODE_T_N_D = 11;</code>
     */
    ISO_CURRENCY_CODE_T_N_D(11),
    /**
     * <code>ISO_CURRENCY_CODE_S_T_N = 12;</code>
     */
    ISO_CURRENCY_CODE_S_T_N(12),
    /**
     * <code>ISO_CURRENCY_CODE_C_U_C = 13;</code>
     */
    ISO_CURRENCY_CODE_C_U_C(13),
    /**
     * <code>ISO_CURRENCY_CODE_B_S_D = 14;</code>
     */
    ISO_CURRENCY_CODE_B_S_D(14),
    /**
     * <code>ISO_CURRENCY_CODE_S_L_L = 15;</code>
     */
    ISO_CURRENCY_CODE_S_L_L(15),
    /**
     * <code>ISO_CURRENCY_CODE_S_D_G = 16;</code>
     */
    ISO_CURRENCY_CODE_S_D_G(16),
    /**
     * <code>ISO_CURRENCY_CODE_I_Q_D = 17;</code>
     */
    ISO_CURRENCY_CODE_I_Q_D(17),
    /**
     * <code>ISO_CURRENCY_CODE_C_U_P = 18;</code>
     */
    ISO_CURRENCY_CODE_C_U_P(18),
    /**
     * <code>ISO_CURRENCY_CODE_G_M_D = 19;</code>
     */
    ISO_CURRENCY_CODE_G_M_D(19),
    /**
     * <code>ISO_CURRENCY_CODE_T_W_D = 20;</code>
     */
    ISO_CURRENCY_CODE_T_W_D(20),
    /**
     * <code>ISO_CURRENCY_CODE_R_S_D = 21;</code>
     */
    ISO_CURRENCY_CODE_R_S_D(21),
    /**
     * <code>ISO_CURRENCY_CODE_D_O_P = 22;</code>
     */
    ISO_CURRENCY_CODE_D_O_P(22),
    /**
     * <code>ISO_CURRENCY_CODE_U_Y_I = 23;</code>
     */
    ISO_CURRENCY_CODE_U_Y_I(23),
    /**
     * <code>ISO_CURRENCY_CODE_K_M_F = 24;</code>
     */
    ISO_CURRENCY_CODE_K_M_F(24),
    /**
     * <code>ISO_CURRENCY_CODE_M_Y_R = 25;</code>
     */
    ISO_CURRENCY_CODE_M_Y_R(25),
    /**
     * <code>ISO_CURRENCY_CODE_F_K_P = 26;</code>
     */
    ISO_CURRENCY_CODE_F_K_P(26),
    /**
     * <code>ISO_CURRENCY_CODE_X_O_F = 27;</code>
     */
    ISO_CURRENCY_CODE_X_O_F(27),
    /**
     * <code>ISO_CURRENCY_CODE_G_E_L = 28;</code>
     */
    ISO_CURRENCY_CODE_G_E_L(28),
    /**
     * <code>ISO_CURRENCY_CODE_U_Y_U = 29;</code>
     */
    ISO_CURRENCY_CODE_U_Y_U(29),
    /**
     * <code>ISO_CURRENCY_CODE_M_A_D = 30;</code>
     */
    ISO_CURRENCY_CODE_M_A_D(30),
    /**
     * <code>ISO_CURRENCY_CODE_C_V_E = 31;</code>
     */
    ISO_CURRENCY_CODE_C_V_E(31),
    /**
     * <code>ISO_CURRENCY_CODE_T_O_P = 32;</code>
     */
    ISO_CURRENCY_CODE_T_O_P(32),
    /**
     * <code>ISO_CURRENCY_CODE_A_Z_N = 33;</code>
     */
    ISO_CURRENCY_CODE_A_Z_N(33),
    /**
     * <code>ISO_CURRENCY_CODE_O_M_R = 34;</code>
     */
    ISO_CURRENCY_CODE_O_M_R(34),
    /**
     * <code>ISO_CURRENCY_CODE_P_G_K = 35;</code>
     */
    ISO_CURRENCY_CODE_P_G_K(35),
    /**
     * <code>ISO_CURRENCY_CODE_K_E_S = 36;</code>
     */
    ISO_CURRENCY_CODE_K_E_S(36),
    /**
     * <code>ISO_CURRENCY_CODE_S_E_K = 37;</code>
     */
    ISO_CURRENCY_CODE_S_E_K(37),
    /**
     * <code>ISO_CURRENCY_CODE_B_T_N = 38;</code>
     */
    ISO_CURRENCY_CODE_B_T_N(38),
    /**
     * <code>ISO_CURRENCY_CODE_U_A_H = 39;</code>
     */
    ISO_CURRENCY_CODE_U_A_H(39),
    /**
     * <code>ISO_CURRENCY_CODE_G_N_F = 40;</code>
     */
    ISO_CURRENCY_CODE_G_N_F(40),
    /**
     * <code>ISO_CURRENCY_CODE_E_R_N = 41;</code>
     */
    ISO_CURRENCY_CODE_E_R_N(41),
    /**
     * <code>ISO_CURRENCY_CODE_M_Z_N = 42;</code>
     */
    ISO_CURRENCY_CODE_M_Z_N(42),
    /**
     * <code>ISO_CURRENCY_CODE_S_V_C = 43;</code>
     */
    ISO_CURRENCY_CODE_S_V_C(43),
    /**
     * <code>ISO_CURRENCY_CODE_A_R_S = 44;</code>
     */
    ISO_CURRENCY_CODE_A_R_S(44),
    /**
     * <code>ISO_CURRENCY_CODE_Q_A_R = 45;</code>
     */
    ISO_CURRENCY_CODE_Q_A_R(45),
    /**
     * <code>ISO_CURRENCY_CODE_I_R_R = 46;</code>
     */
    ISO_CURRENCY_CODE_I_R_R(46),
    /**
     * <code>ISO_CURRENCY_CODE_C_N_Y = 47;</code>
     */
    ISO_CURRENCY_CODE_C_N_Y(47),
    /**
     * <code>ISO_CURRENCY_CODE_T_H_B = 48;</code>
     */
    ISO_CURRENCY_CODE_T_H_B(48),
    /**
     * <code>ISO_CURRENCY_CODE_U_Z_S = 49;</code>
     */
    ISO_CURRENCY_CODE_U_Z_S(49),
    /**
     * <code>ISO_CURRENCY_CODE_X_P_F = 50;</code>
     */
    ISO_CURRENCY_CODE_X_P_F(50),
    /**
     * <code>ISO_CURRENCY_CODE_M_R_U = 51;</code>
     */
    ISO_CURRENCY_CODE_M_R_U(51),
    /**
     * <code>ISO_CURRENCY_CODE_B_D_T = 52;</code>
     */
    ISO_CURRENCY_CODE_B_D_T(52),
    /**
     * <code>ISO_CURRENCY_CODE_L_Y_D = 53;</code>
     */
    ISO_CURRENCY_CODE_L_Y_D(53),
    /**
     * <code>ISO_CURRENCY_CODE_B_M_D = 54;</code>
     */
    ISO_CURRENCY_CODE_B_M_D(54),
    /**
     * <code>ISO_CURRENCY_CODE_K_W_D = 55;</code>
     */
    ISO_CURRENCY_CODE_K_W_D(55),
    /**
     * <code>ISO_CURRENCY_CODE_P_H_P = 56;</code>
     */
    ISO_CURRENCY_CODE_P_H_P(56),
    /**
     * <code>ISO_CURRENCY_CODE_R_U_B = 57;</code>
     */
    ISO_CURRENCY_CODE_R_U_B(57),
    /**
     * <code>ISO_CURRENCY_CODE_P_Y_G = 58;</code>
     */
    ISO_CURRENCY_CODE_P_Y_G(58),
    /**
     * <code>ISO_CURRENCY_CODE_I_S_K = 59;</code>
     */
    ISO_CURRENCY_CODE_I_S_K(59),
    /**
     * <code>ISO_CURRENCY_CODE_J_M_D = 60;</code>
     */
    ISO_CURRENCY_CODE_J_M_D(60),
    /**
     * <code>ISO_CURRENCY_CODE_C_O_P = 61;</code>
     */
    ISO_CURRENCY_CODE_C_O_P(61),
    /**
     * <code>ISO_CURRENCY_CODE_M_K_D = 62;</code>
     */
    ISO_CURRENCY_CODE_M_K_D(62),
    /**
     * <code>ISO_CURRENCY_CODE_U_S_D = 63;</code>
     */
    ISO_CURRENCY_CODE_U_S_D(63),
    /**
     * <code>ISO_CURRENCY_CODE_C_O_U = 64;</code>
     */
    ISO_CURRENCY_CODE_C_O_U(64),
    /**
     * <code>ISO_CURRENCY_CODE_D_Z_D = 65;</code>
     */
    ISO_CURRENCY_CODE_D_Z_D(65),
    /**
     * <code>ISO_CURRENCY_CODE_P_A_B = 66;</code>
     */
    ISO_CURRENCY_CODE_P_A_B(66),
    /**
     * <code>ISO_CURRENCY_CODE_S_G_D = 67;</code>
     */
    ISO_CURRENCY_CODE_S_G_D(67),
    /**
     * <code>ISO_CURRENCY_CODE_E_T_B = 68;</code>
     */
    ISO_CURRENCY_CODE_E_T_B(68),
    /**
     * <code>ISO_CURRENCY_CODE_K_G_S = 69;</code>
     */
    ISO_CURRENCY_CODE_K_G_S(69),
    /**
     * <code>ISO_CURRENCY_CODE_S_O_S = 70;</code>
     */
    ISO_CURRENCY_CODE_S_O_S(70),
    /**
     * <code>ISO_CURRENCY_CODE_V_U_V = 71;</code>
     */
    ISO_CURRENCY_CODE_V_U_V(71),
    /**
     * <code>ISO_CURRENCY_CODE_L_A_K = 72;</code>
     */
    ISO_CURRENCY_CODE_L_A_K(72),
    /**
     * <code>ISO_CURRENCY_CODE_B_N_D = 73;</code>
     */
    ISO_CURRENCY_CODE_B_N_D(73),
    /**
     * <code>ISO_CURRENCY_CODE_X_A_F = 74;</code>
     */
    ISO_CURRENCY_CODE_X_A_F(74),
    /**
     * <code>ISO_CURRENCY_CODE_L_R_D = 75;</code>
     */
    ISO_CURRENCY_CODE_L_R_D(75),
    /**
     * <code>ISO_CURRENCY_CODE_C_H_F = 76;</code>
     */
    ISO_CURRENCY_CODE_C_H_F(76),
    /**
     * <code>ISO_CURRENCY_CODE_H_R_K = 77;</code>
     */
    ISO_CURRENCY_CODE_H_R_K(77),
    /**
     * <code>ISO_CURRENCY_CODE_A_L_L = 78;</code>
     */
    ISO_CURRENCY_CODE_A_L_L(78),
    /**
     * <code>ISO_CURRENCY_CODE_D_J_F = 79;</code>
     */
    ISO_CURRENCY_CODE_D_J_F(79),
    /**
     * <code>ISO_CURRENCY_CODE_V_E_S = 80;</code>
     */
    ISO_CURRENCY_CODE_V_E_S(80),
    /**
     * <code>ISO_CURRENCY_CODE_Z_M_W = 81;</code>
     */
    ISO_CURRENCY_CODE_Z_M_W(81),
    /**
     * <code>ISO_CURRENCY_CODE_T_Z_S = 82;</code>
     */
    ISO_CURRENCY_CODE_T_Z_S(82),
    /**
     * <code>ISO_CURRENCY_CODE_V_N_D = 83;</code>
     */
    ISO_CURRENCY_CODE_V_N_D(83),
    /**
     * <code>ISO_CURRENCY_CODE_A_U_D = 84;</code>
     */
    ISO_CURRENCY_CODE_A_U_D(84),
    /**
     * <code>ISO_CURRENCY_CODE_I_L_S = 85;</code>
     */
    ISO_CURRENCY_CODE_I_L_S(85),
    /**
     * <code>ISO_CURRENCY_CODE_G_H_S = 86;</code>
     */
    ISO_CURRENCY_CODE_G_H_S(86),
    /**
     * <code>ISO_CURRENCY_CODE_G_Y_D = 87;</code>
     */
    ISO_CURRENCY_CODE_G_Y_D(87),
    /**
     * <code>ISO_CURRENCY_CODE_K_P_W = 88;</code>
     */
    ISO_CURRENCY_CODE_K_P_W(88),
    /**
     * <code>ISO_CURRENCY_CODE_B_O_B = 89;</code>
     */
    ISO_CURRENCY_CODE_B_O_B(89),
    /**
     * <code>ISO_CURRENCY_CODE_K_H_R = 90;</code>
     */
    ISO_CURRENCY_CODE_K_H_R(90),
    /**
     * <code>ISO_CURRENCY_CODE_M_D_L = 91;</code>
     */
    ISO_CURRENCY_CODE_M_D_L(91),
    /**
     * <code>ISO_CURRENCY_CODE_I_D_R = 92;</code>
     */
    ISO_CURRENCY_CODE_I_D_R(92),
    /**
     * <code>ISO_CURRENCY_CODE_K_Y_D = 93;</code>
     */
    ISO_CURRENCY_CODE_K_Y_D(93),
    /**
     * <code>ISO_CURRENCY_CODE_A_M_D = 94;</code>
     */
    ISO_CURRENCY_CODE_A_M_D(94),
    /**
     * <code>ISO_CURRENCY_CODE_B_W_P = 95;</code>
     */
    ISO_CURRENCY_CODE_B_W_P(95),
    /**
     * <code>ISO_CURRENCY_CODE_S_H_P = 96;</code>
     */
    ISO_CURRENCY_CODE_S_H_P(96),
    /**
     * <code>ISO_CURRENCY_CODE_T_R_Y = 97;</code>
     */
    ISO_CURRENCY_CODE_T_R_Y(97),
    /**
     * <code>ISO_CURRENCY_CODE_L_B_P = 98;</code>
     */
    ISO_CURRENCY_CODE_L_B_P(98),
    /**
     * <code>ISO_CURRENCY_CODE_T_J_S = 99;</code>
     */
    ISO_CURRENCY_CODE_T_J_S(99),
    /**
     * <code>ISO_CURRENCY_CODE_J_O_D = 100;</code>
     */
    ISO_CURRENCY_CODE_J_O_D(100),
    /**
     * <code>ISO_CURRENCY_CODE_A_E_D = 101;</code>
     */
    ISO_CURRENCY_CODE_A_E_D(101),
    /**
     * <code>ISO_CURRENCY_CODE_H_K_D = 102;</code>
     */
    ISO_CURRENCY_CODE_H_K_D(102),
    /**
     * <code>ISO_CURRENCY_CODE_R_W_F = 103;</code>
     */
    ISO_CURRENCY_CODE_R_W_F(103),
    /**
     * <code>ISO_CURRENCY_CODE_E_U_R = 104;</code>
     */
    ISO_CURRENCY_CODE_E_U_R(104),
    /**
     * <code>ISO_CURRENCY_CODE_L_S_L = 105;</code>
     */
    ISO_CURRENCY_CODE_L_S_L(105),
    /**
     * <code>ISO_CURRENCY_CODE_D_K_K = 106;</code>
     */
    ISO_CURRENCY_CODE_D_K_K(106),
    /**
     * <code>ISO_CURRENCY_CODE_C_A_D = 107;</code>
     */
    ISO_CURRENCY_CODE_C_A_D(107),
    /**
     * <code>ISO_CURRENCY_CODE_B_G_N = 108;</code>
     */
    ISO_CURRENCY_CODE_B_G_N(108),
    /**
     * <code>ISO_CURRENCY_CODE_B_O_V = 109;</code>
     */
    ISO_CURRENCY_CODE_B_O_V(109),
    /**
     * <code>ISO_CURRENCY_CODE_M_M_K = 110;</code>
     */
    ISO_CURRENCY_CODE_M_M_K(110),
    /**
     * <code>ISO_CURRENCY_CODE_M_U_R = 111;</code>
     */
    ISO_CURRENCY_CODE_M_U_R(111),
    /**
     * <code>ISO_CURRENCY_CODE_N_O_K = 112;</code>
     */
    ISO_CURRENCY_CODE_N_O_K(112),
    /**
     * <code>ISO_CURRENCY_CODE_S_Y_P = 113;</code>
     */
    ISO_CURRENCY_CODE_S_Y_P(113),
    /**
     * <code>ISO_CURRENCY_CODE_Z_W_L = 114;</code>
     */
    ISO_CURRENCY_CODE_Z_W_L(114),
    /**
     * <code>ISO_CURRENCY_CODE_G_I_P = 115;</code>
     */
    ISO_CURRENCY_CODE_G_I_P(115),
    /**
     * <code>ISO_CURRENCY_CODE_R_O_N = 116;</code>
     */
    ISO_CURRENCY_CODE_R_O_N(116),
    /**
     * <code>ISO_CURRENCY_CODE_L_K_R = 117;</code>
     */
    ISO_CURRENCY_CODE_L_K_R(117),
    /**
     * <code>ISO_CURRENCY_CODE_N_G_N = 118;</code>
     */
    ISO_CURRENCY_CODE_N_G_N(118),
    /**
     * <code>ISO_CURRENCY_CODE_C_R_C = 119;</code>
     */
    ISO_CURRENCY_CODE_C_R_C(119),
    /**
     * <code>ISO_CURRENCY_CODE_C_Z_K = 120;</code>
     */
    ISO_CURRENCY_CODE_C_Z_K(120),
    /**
     * <code>ISO_CURRENCY_CODE_P_K_R = 121;</code>
     */
    ISO_CURRENCY_CODE_P_K_R(121),
    /**
     * <code>ISO_CURRENCY_CODE_X_C_D = 122;</code>
     */
    ISO_CURRENCY_CODE_X_C_D(122),
    /**
     * <code>ISO_CURRENCY_CODE_A_N_G = 123;</code>
     */
    ISO_CURRENCY_CODE_A_N_G(123),
    /**
     * <code>ISO_CURRENCY_CODE_H_T_G = 124;</code>
     */
    ISO_CURRENCY_CODE_H_T_G(124),
    /**
     * <code>ISO_CURRENCY_CODE_B_H_D = 125;</code>
     */
    ISO_CURRENCY_CODE_B_H_D(125),
    /**
     * <code>ISO_CURRENCY_CODE_K_Z_T = 126;</code>
     */
    ISO_CURRENCY_CODE_K_Z_T(126),
    /**
     * <code>ISO_CURRENCY_CODE_S_R_D = 127;</code>
     */
    ISO_CURRENCY_CODE_S_R_D(127),
    /**
     * <code>ISO_CURRENCY_CODE_S_Z_L = 128;</code>
     */
    ISO_CURRENCY_CODE_S_Z_L(128),
    /**
     * <code>ISO_CURRENCY_CODE_S_A_R = 129;</code>
     */
    ISO_CURRENCY_CODE_S_A_R(129),
    /**
     * <code>ISO_CURRENCY_CODE_T_T_D = 130;</code>
     */
    ISO_CURRENCY_CODE_T_T_D(130),
    /**
     * <code>ISO_CURRENCY_CODE_Y_E_R = 131;</code>
     */
    ISO_CURRENCY_CODE_Y_E_R(131),
    /**
     * <code>ISO_CURRENCY_CODE_M_V_R = 132;</code>
     */
    ISO_CURRENCY_CODE_M_V_R(132),
    /**
     * <code>ISO_CURRENCY_CODE_A_F_N = 133;</code>
     */
    ISO_CURRENCY_CODE_A_F_N(133),
    /**
     * <code>ISO_CURRENCY_CODE_I_N_R = 134;</code>
     */
    ISO_CURRENCY_CODE_I_N_R(134),
    /**
     * <code>ISO_CURRENCY_CODE_A_W_G = 135;</code>
     */
    ISO_CURRENCY_CODE_A_W_G(135),
    /**
     * <code>ISO_CURRENCY_CODE_K_R_W = 136;</code>
     */
    ISO_CURRENCY_CODE_K_R_W(136),
    /**
     * <code>ISO_CURRENCY_CODE_N_P_R = 137;</code>
     */
    ISO_CURRENCY_CODE_N_P_R(137),
    /**
     * <code>ISO_CURRENCY_CODE_J_P_Y = 138;</code>
     */
    ISO_CURRENCY_CODE_J_P_Y(138),
    /**
     * <code>ISO_CURRENCY_CODE_M_N_T = 139;</code>
     */
    ISO_CURRENCY_CODE_M_N_T(139),
    /**
     * <code>ISO_CURRENCY_CODE_A_O_A = 140;</code>
     */
    ISO_CURRENCY_CODE_A_O_A(140),
    /**
     * <code>ISO_CURRENCY_CODE_P_L_N = 141;</code>
     */
    ISO_CURRENCY_CODE_P_L_N(141),
    /**
     * <code>ISO_CURRENCY_CODE_G_B_P = 142;</code>
     */
    ISO_CURRENCY_CODE_G_B_P(142),
    /**
     * <code>ISO_CURRENCY_CODE_S_B_D = 143;</code>
     */
    ISO_CURRENCY_CODE_S_B_D(143),
    /**
     * <code>ISO_CURRENCY_CODE_H_U_F = 144;</code>
     */
    ISO_CURRENCY_CODE_H_U_F(144),
    /**
     * <code>ISO_CURRENCY_CODE_B_Y_R = 145;</code>
     */
    ISO_CURRENCY_CODE_B_Y_R(145),
    /**
     * <code>ISO_CURRENCY_CODE_B_I_F = 146;</code>
     */
    ISO_CURRENCY_CODE_B_I_F(146),
    /**
     * <code>ISO_CURRENCY_CODE_M_W_K = 147;</code>
     */
    ISO_CURRENCY_CODE_M_W_K(147),
    /**
     * <code>ISO_CURRENCY_CODE_M_G_A = 148;</code>
     */
    ISO_CURRENCY_CODE_M_G_A(148),
    /**
     * <code>ISO_CURRENCY_CODE_B_Z_D = 149;</code>
     */
    ISO_CURRENCY_CODE_B_Z_D(149),
    /**
     * <code>ISO_CURRENCY_CODE_B_A_M = 150;</code>
     */
    ISO_CURRENCY_CODE_B_A_M(150),
    /**
     * <code>ISO_CURRENCY_CODE_E_G_P = 151;</code>
     */
    ISO_CURRENCY_CODE_E_G_P(151),
    /**
     * <code>ISO_CURRENCY_CODE_M_O_P = 152;</code>
     */
    ISO_CURRENCY_CODE_M_O_P(152),
    /**
     * <code>ISO_CURRENCY_CODE_N_A_D = 153;</code>
     */
    ISO_CURRENCY_CODE_N_A_D(153),
    /**
     * <code>ISO_CURRENCY_CODE_S_S_P = 154;</code>
     */
    ISO_CURRENCY_CODE_S_S_P(154),
    /**
     * <code>ISO_CURRENCY_CODE_N_I_O = 155;</code>
     */
    ISO_CURRENCY_CODE_N_I_O(155),
    /**
     * <code>ISO_CURRENCY_CODE_P_E_N = 156;</code>
     */
    ISO_CURRENCY_CODE_P_E_N(156),
    /**
     * <code>ISO_CURRENCY_CODE_N_Z_D = 157;</code>
     */
    ISO_CURRENCY_CODE_N_Z_D(157),
    /**
     * <code>ISO_CURRENCY_CODE_W_S_T = 158;</code>
     */
    ISO_CURRENCY_CODE_W_S_T(158),
    /**
     * <code>ISO_CURRENCY_CODE_T_M_T = 159;</code>
     */
    ISO_CURRENCY_CODE_T_M_T(159),
    /**
     * <code>ISO_CURRENCY_CODE_C_L_F = 160;</code>
     */
    ISO_CURRENCY_CODE_C_L_F(160),
    /**
     * <code>ISO_CURRENCY_CODE_B_R_L = 161;</code>
     */
    ISO_CURRENCY_CODE_B_R_L(161),
    ;

    /**
     * <code>ISO_CURRENCY_CODE_F_J_D = 0;</code>
     */
    public static final int ISO_CURRENCY_CODE_F_J_D_VALUE = 0;
    /**
     * <code>ISO_CURRENCY_CODE_M_X_N = 1;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_X_N_VALUE = 1;
    /**
     * <code>ISO_CURRENCY_CODE_S_C_R = 2;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_C_R_VALUE = 2;
    /**
     * <code>ISO_CURRENCY_CODE_C_D_F = 3;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_D_F_VALUE = 3;
    /**
     * <code>ISO_CURRENCY_CODE_B_B_D = 4;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_B_D_VALUE = 4;
    /**
     * <code>ISO_CURRENCY_CODE_G_T_Q = 5;</code>
     */
    public static final int ISO_CURRENCY_CODE_G_T_Q_VALUE = 5;
    /**
     * <code>ISO_CURRENCY_CODE_C_L_P = 6;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_L_P_VALUE = 6;
    /**
     * <code>ISO_CURRENCY_CODE_H_N_L = 7;</code>
     */
    public static final int ISO_CURRENCY_CODE_H_N_L_VALUE = 7;
    /**
     * <code>ISO_CURRENCY_CODE_U_G_X = 8;</code>
     */
    public static final int ISO_CURRENCY_CODE_U_G_X_VALUE = 8;
    /**
     * <code>ISO_CURRENCY_CODE_M_X_V = 9;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_X_V_VALUE = 9;
    /**
     * <code>ISO_CURRENCY_CODE_Z_A_R = 10;</code>
     */
    public static final int ISO_CURRENCY_CODE_Z_A_R_VALUE = 10;
    /**
     * <code>ISO_CURRENCY_CODE_T_N_D = 11;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_N_D_VALUE = 11;
    /**
     * <code>ISO_CURRENCY_CODE_S_T_N = 12;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_T_N_VALUE = 12;
    /**
     * <code>ISO_CURRENCY_CODE_C_U_C = 13;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_U_C_VALUE = 13;
    /**
     * <code>ISO_CURRENCY_CODE_B_S_D = 14;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_S_D_VALUE = 14;
    /**
     * <code>ISO_CURRENCY_CODE_S_L_L = 15;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_L_L_VALUE = 15;
    /**
     * <code>ISO_CURRENCY_CODE_S_D_G = 16;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_D_G_VALUE = 16;
    /**
     * <code>ISO_CURRENCY_CODE_I_Q_D = 17;</code>
     */
    public static final int ISO_CURRENCY_CODE_I_Q_D_VALUE = 17;
    /**
     * <code>ISO_CURRENCY_CODE_C_U_P = 18;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_U_P_VALUE = 18;
    /**
     * <code>ISO_CURRENCY_CODE_G_M_D = 19;</code>
     */
    public static final int ISO_CURRENCY_CODE_G_M_D_VALUE = 19;
    /**
     * <code>ISO_CURRENCY_CODE_T_W_D = 20;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_W_D_VALUE = 20;
    /**
     * <code>ISO_CURRENCY_CODE_R_S_D = 21;</code>
     */
    public static final int ISO_CURRENCY_CODE_R_S_D_VALUE = 21;
    /**
     * <code>ISO_CURRENCY_CODE_D_O_P = 22;</code>
     */
    public static final int ISO_CURRENCY_CODE_D_O_P_VALUE = 22;
    /**
     * <code>ISO_CURRENCY_CODE_U_Y_I = 23;</code>
     */
    public static final int ISO_CURRENCY_CODE_U_Y_I_VALUE = 23;
    /**
     * <code>ISO_CURRENCY_CODE_K_M_F = 24;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_M_F_VALUE = 24;
    /**
     * <code>ISO_CURRENCY_CODE_M_Y_R = 25;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_Y_R_VALUE = 25;
    /**
     * <code>ISO_CURRENCY_CODE_F_K_P = 26;</code>
     */
    public static final int ISO_CURRENCY_CODE_F_K_P_VALUE = 26;
    /**
     * <code>ISO_CURRENCY_CODE_X_O_F = 27;</code>
     */
    public static final int ISO_CURRENCY_CODE_X_O_F_VALUE = 27;
    /**
     * <code>ISO_CURRENCY_CODE_G_E_L = 28;</code>
     */
    public static final int ISO_CURRENCY_CODE_G_E_L_VALUE = 28;
    /**
     * <code>ISO_CURRENCY_CODE_U_Y_U = 29;</code>
     */
    public static final int ISO_CURRENCY_CODE_U_Y_U_VALUE = 29;
    /**
     * <code>ISO_CURRENCY_CODE_M_A_D = 30;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_A_D_VALUE = 30;
    /**
     * <code>ISO_CURRENCY_CODE_C_V_E = 31;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_V_E_VALUE = 31;
    /**
     * <code>ISO_CURRENCY_CODE_T_O_P = 32;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_O_P_VALUE = 32;
    /**
     * <code>ISO_CURRENCY_CODE_A_Z_N = 33;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_Z_N_VALUE = 33;
    /**
     * <code>ISO_CURRENCY_CODE_O_M_R = 34;</code>
     */
    public static final int ISO_CURRENCY_CODE_O_M_R_VALUE = 34;
    /**
     * <code>ISO_CURRENCY_CODE_P_G_K = 35;</code>
     */
    public static final int ISO_CURRENCY_CODE_P_G_K_VALUE = 35;
    /**
     * <code>ISO_CURRENCY_CODE_K_E_S = 36;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_E_S_VALUE = 36;
    /**
     * <code>ISO_CURRENCY_CODE_S_E_K = 37;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_E_K_VALUE = 37;
    /**
     * <code>ISO_CURRENCY_CODE_B_T_N = 38;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_T_N_VALUE = 38;
    /**
     * <code>ISO_CURRENCY_CODE_U_A_H = 39;</code>
     */
    public static final int ISO_CURRENCY_CODE_U_A_H_VALUE = 39;
    /**
     * <code>ISO_CURRENCY_CODE_G_N_F = 40;</code>
     */
    public static final int ISO_CURRENCY_CODE_G_N_F_VALUE = 40;
    /**
     * <code>ISO_CURRENCY_CODE_E_R_N = 41;</code>
     */
    public static final int ISO_CURRENCY_CODE_E_R_N_VALUE = 41;
    /**
     * <code>ISO_CURRENCY_CODE_M_Z_N = 42;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_Z_N_VALUE = 42;
    /**
     * <code>ISO_CURRENCY_CODE_S_V_C = 43;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_V_C_VALUE = 43;
    /**
     * <code>ISO_CURRENCY_CODE_A_R_S = 44;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_R_S_VALUE = 44;
    /**
     * <code>ISO_CURRENCY_CODE_Q_A_R = 45;</code>
     */
    public static final int ISO_CURRENCY_CODE_Q_A_R_VALUE = 45;
    /**
     * <code>ISO_CURRENCY_CODE_I_R_R = 46;</code>
     */
    public static final int ISO_CURRENCY_CODE_I_R_R_VALUE = 46;
    /**
     * <code>ISO_CURRENCY_CODE_C_N_Y = 47;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_N_Y_VALUE = 47;
    /**
     * <code>ISO_CURRENCY_CODE_T_H_B = 48;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_H_B_VALUE = 48;
    /**
     * <code>ISO_CURRENCY_CODE_U_Z_S = 49;</code>
     */
    public static final int ISO_CURRENCY_CODE_U_Z_S_VALUE = 49;
    /**
     * <code>ISO_CURRENCY_CODE_X_P_F = 50;</code>
     */
    public static final int ISO_CURRENCY_CODE_X_P_F_VALUE = 50;
    /**
     * <code>ISO_CURRENCY_CODE_M_R_U = 51;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_R_U_VALUE = 51;
    /**
     * <code>ISO_CURRENCY_CODE_B_D_T = 52;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_D_T_VALUE = 52;
    /**
     * <code>ISO_CURRENCY_CODE_L_Y_D = 53;</code>
     */
    public static final int ISO_CURRENCY_CODE_L_Y_D_VALUE = 53;
    /**
     * <code>ISO_CURRENCY_CODE_B_M_D = 54;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_M_D_VALUE = 54;
    /**
     * <code>ISO_CURRENCY_CODE_K_W_D = 55;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_W_D_VALUE = 55;
    /**
     * <code>ISO_CURRENCY_CODE_P_H_P = 56;</code>
     */
    public static final int ISO_CURRENCY_CODE_P_H_P_VALUE = 56;
    /**
     * <code>ISO_CURRENCY_CODE_R_U_B = 57;</code>
     */
    public static final int ISO_CURRENCY_CODE_R_U_B_VALUE = 57;
    /**
     * <code>ISO_CURRENCY_CODE_P_Y_G = 58;</code>
     */
    public static final int ISO_CURRENCY_CODE_P_Y_G_VALUE = 58;
    /**
     * <code>ISO_CURRENCY_CODE_I_S_K = 59;</code>
     */
    public static final int ISO_CURRENCY_CODE_I_S_K_VALUE = 59;
    /**
     * <code>ISO_CURRENCY_CODE_J_M_D = 60;</code>
     */
    public static final int ISO_CURRENCY_CODE_J_M_D_VALUE = 60;
    /**
     * <code>ISO_CURRENCY_CODE_C_O_P = 61;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_O_P_VALUE = 61;
    /**
     * <code>ISO_CURRENCY_CODE_M_K_D = 62;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_K_D_VALUE = 62;
    /**
     * <code>ISO_CURRENCY_CODE_U_S_D = 63;</code>
     */
    public static final int ISO_CURRENCY_CODE_U_S_D_VALUE = 63;
    /**
     * <code>ISO_CURRENCY_CODE_C_O_U = 64;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_O_U_VALUE = 64;
    /**
     * <code>ISO_CURRENCY_CODE_D_Z_D = 65;</code>
     */
    public static final int ISO_CURRENCY_CODE_D_Z_D_VALUE = 65;
    /**
     * <code>ISO_CURRENCY_CODE_P_A_B = 66;</code>
     */
    public static final int ISO_CURRENCY_CODE_P_A_B_VALUE = 66;
    /**
     * <code>ISO_CURRENCY_CODE_S_G_D = 67;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_G_D_VALUE = 67;
    /**
     * <code>ISO_CURRENCY_CODE_E_T_B = 68;</code>
     */
    public static final int ISO_CURRENCY_CODE_E_T_B_VALUE = 68;
    /**
     * <code>ISO_CURRENCY_CODE_K_G_S = 69;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_G_S_VALUE = 69;
    /**
     * <code>ISO_CURRENCY_CODE_S_O_S = 70;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_O_S_VALUE = 70;
    /**
     * <code>ISO_CURRENCY_CODE_V_U_V = 71;</code>
     */
    public static final int ISO_CURRENCY_CODE_V_U_V_VALUE = 71;
    /**
     * <code>ISO_CURRENCY_CODE_L_A_K = 72;</code>
     */
    public static final int ISO_CURRENCY_CODE_L_A_K_VALUE = 72;
    /**
     * <code>ISO_CURRENCY_CODE_B_N_D = 73;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_N_D_VALUE = 73;
    /**
     * <code>ISO_CURRENCY_CODE_X_A_F = 74;</code>
     */
    public static final int ISO_CURRENCY_CODE_X_A_F_VALUE = 74;
    /**
     * <code>ISO_CURRENCY_CODE_L_R_D = 75;</code>
     */
    public static final int ISO_CURRENCY_CODE_L_R_D_VALUE = 75;
    /**
     * <code>ISO_CURRENCY_CODE_C_H_F = 76;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_H_F_VALUE = 76;
    /**
     * <code>ISO_CURRENCY_CODE_H_R_K = 77;</code>
     */
    public static final int ISO_CURRENCY_CODE_H_R_K_VALUE = 77;
    /**
     * <code>ISO_CURRENCY_CODE_A_L_L = 78;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_L_L_VALUE = 78;
    /**
     * <code>ISO_CURRENCY_CODE_D_J_F = 79;</code>
     */
    public static final int ISO_CURRENCY_CODE_D_J_F_VALUE = 79;
    /**
     * <code>ISO_CURRENCY_CODE_V_E_S = 80;</code>
     */
    public static final int ISO_CURRENCY_CODE_V_E_S_VALUE = 80;
    /**
     * <code>ISO_CURRENCY_CODE_Z_M_W = 81;</code>
     */
    public static final int ISO_CURRENCY_CODE_Z_M_W_VALUE = 81;
    /**
     * <code>ISO_CURRENCY_CODE_T_Z_S = 82;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_Z_S_VALUE = 82;
    /**
     * <code>ISO_CURRENCY_CODE_V_N_D = 83;</code>
     */
    public static final int ISO_CURRENCY_CODE_V_N_D_VALUE = 83;
    /**
     * <code>ISO_CURRENCY_CODE_A_U_D = 84;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_U_D_VALUE = 84;
    /**
     * <code>ISO_CURRENCY_CODE_I_L_S = 85;</code>
     */
    public static final int ISO_CURRENCY_CODE_I_L_S_VALUE = 85;
    /**
     * <code>ISO_CURRENCY_CODE_G_H_S = 86;</code>
     */
    public static final int ISO_CURRENCY_CODE_G_H_S_VALUE = 86;
    /**
     * <code>ISO_CURRENCY_CODE_G_Y_D = 87;</code>
     */
    public static final int ISO_CURRENCY_CODE_G_Y_D_VALUE = 87;
    /**
     * <code>ISO_CURRENCY_CODE_K_P_W = 88;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_P_W_VALUE = 88;
    /**
     * <code>ISO_CURRENCY_CODE_B_O_B = 89;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_O_B_VALUE = 89;
    /**
     * <code>ISO_CURRENCY_CODE_K_H_R = 90;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_H_R_VALUE = 90;
    /**
     * <code>ISO_CURRENCY_CODE_M_D_L = 91;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_D_L_VALUE = 91;
    /**
     * <code>ISO_CURRENCY_CODE_I_D_R = 92;</code>
     */
    public static final int ISO_CURRENCY_CODE_I_D_R_VALUE = 92;
    /**
     * <code>ISO_CURRENCY_CODE_K_Y_D = 93;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_Y_D_VALUE = 93;
    /**
     * <code>ISO_CURRENCY_CODE_A_M_D = 94;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_M_D_VALUE = 94;
    /**
     * <code>ISO_CURRENCY_CODE_B_W_P = 95;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_W_P_VALUE = 95;
    /**
     * <code>ISO_CURRENCY_CODE_S_H_P = 96;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_H_P_VALUE = 96;
    /**
     * <code>ISO_CURRENCY_CODE_T_R_Y = 97;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_R_Y_VALUE = 97;
    /**
     * <code>ISO_CURRENCY_CODE_L_B_P = 98;</code>
     */
    public static final int ISO_CURRENCY_CODE_L_B_P_VALUE = 98;
    /**
     * <code>ISO_CURRENCY_CODE_T_J_S = 99;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_J_S_VALUE = 99;
    /**
     * <code>ISO_CURRENCY_CODE_J_O_D = 100;</code>
     */
    public static final int ISO_CURRENCY_CODE_J_O_D_VALUE = 100;
    /**
     * <code>ISO_CURRENCY_CODE_A_E_D = 101;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_E_D_VALUE = 101;
    /**
     * <code>ISO_CURRENCY_CODE_H_K_D = 102;</code>
     */
    public static final int ISO_CURRENCY_CODE_H_K_D_VALUE = 102;
    /**
     * <code>ISO_CURRENCY_CODE_R_W_F = 103;</code>
     */
    public static final int ISO_CURRENCY_CODE_R_W_F_VALUE = 103;
    /**
     * <code>ISO_CURRENCY_CODE_E_U_R = 104;</code>
     */
    public static final int ISO_CURRENCY_CODE_E_U_R_VALUE = 104;
    /**
     * <code>ISO_CURRENCY_CODE_L_S_L = 105;</code>
     */
    public static final int ISO_CURRENCY_CODE_L_S_L_VALUE = 105;
    /**
     * <code>ISO_CURRENCY_CODE_D_K_K = 106;</code>
     */
    public static final int ISO_CURRENCY_CODE_D_K_K_VALUE = 106;
    /**
     * <code>ISO_CURRENCY_CODE_C_A_D = 107;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_A_D_VALUE = 107;
    /**
     * <code>ISO_CURRENCY_CODE_B_G_N = 108;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_G_N_VALUE = 108;
    /**
     * <code>ISO_CURRENCY_CODE_B_O_V = 109;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_O_V_VALUE = 109;
    /**
     * <code>ISO_CURRENCY_CODE_M_M_K = 110;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_M_K_VALUE = 110;
    /**
     * <code>ISO_CURRENCY_CODE_M_U_R = 111;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_U_R_VALUE = 111;
    /**
     * <code>ISO_CURRENCY_CODE_N_O_K = 112;</code>
     */
    public static final int ISO_CURRENCY_CODE_N_O_K_VALUE = 112;
    /**
     * <code>ISO_CURRENCY_CODE_S_Y_P = 113;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_Y_P_VALUE = 113;
    /**
     * <code>ISO_CURRENCY_CODE_Z_W_L = 114;</code>
     */
    public static final int ISO_CURRENCY_CODE_Z_W_L_VALUE = 114;
    /**
     * <code>ISO_CURRENCY_CODE_G_I_P = 115;</code>
     */
    public static final int ISO_CURRENCY_CODE_G_I_P_VALUE = 115;
    /**
     * <code>ISO_CURRENCY_CODE_R_O_N = 116;</code>
     */
    public static final int ISO_CURRENCY_CODE_R_O_N_VALUE = 116;
    /**
     * <code>ISO_CURRENCY_CODE_L_K_R = 117;</code>
     */
    public static final int ISO_CURRENCY_CODE_L_K_R_VALUE = 117;
    /**
     * <code>ISO_CURRENCY_CODE_N_G_N = 118;</code>
     */
    public static final int ISO_CURRENCY_CODE_N_G_N_VALUE = 118;
    /**
     * <code>ISO_CURRENCY_CODE_C_R_C = 119;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_R_C_VALUE = 119;
    /**
     * <code>ISO_CURRENCY_CODE_C_Z_K = 120;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_Z_K_VALUE = 120;
    /**
     * <code>ISO_CURRENCY_CODE_P_K_R = 121;</code>
     */
    public static final int ISO_CURRENCY_CODE_P_K_R_VALUE = 121;
    /**
     * <code>ISO_CURRENCY_CODE_X_C_D = 122;</code>
     */
    public static final int ISO_CURRENCY_CODE_X_C_D_VALUE = 122;
    /**
     * <code>ISO_CURRENCY_CODE_A_N_G = 123;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_N_G_VALUE = 123;
    /**
     * <code>ISO_CURRENCY_CODE_H_T_G = 124;</code>
     */
    public static final int ISO_CURRENCY_CODE_H_T_G_VALUE = 124;
    /**
     * <code>ISO_CURRENCY_CODE_B_H_D = 125;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_H_D_VALUE = 125;
    /**
     * <code>ISO_CURRENCY_CODE_K_Z_T = 126;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_Z_T_VALUE = 126;
    /**
     * <code>ISO_CURRENCY_CODE_S_R_D = 127;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_R_D_VALUE = 127;
    /**
     * <code>ISO_CURRENCY_CODE_S_Z_L = 128;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_Z_L_VALUE = 128;
    /**
     * <code>ISO_CURRENCY_CODE_S_A_R = 129;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_A_R_VALUE = 129;
    /**
     * <code>ISO_CURRENCY_CODE_T_T_D = 130;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_T_D_VALUE = 130;
    /**
     * <code>ISO_CURRENCY_CODE_Y_E_R = 131;</code>
     */
    public static final int ISO_CURRENCY_CODE_Y_E_R_VALUE = 131;
    /**
     * <code>ISO_CURRENCY_CODE_M_V_R = 132;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_V_R_VALUE = 132;
    /**
     * <code>ISO_CURRENCY_CODE_A_F_N = 133;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_F_N_VALUE = 133;
    /**
     * <code>ISO_CURRENCY_CODE_I_N_R = 134;</code>
     */
    public static final int ISO_CURRENCY_CODE_I_N_R_VALUE = 134;
    /**
     * <code>ISO_CURRENCY_CODE_A_W_G = 135;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_W_G_VALUE = 135;
    /**
     * <code>ISO_CURRENCY_CODE_K_R_W = 136;</code>
     */
    public static final int ISO_CURRENCY_CODE_K_R_W_VALUE = 136;
    /**
     * <code>ISO_CURRENCY_CODE_N_P_R = 137;</code>
     */
    public static final int ISO_CURRENCY_CODE_N_P_R_VALUE = 137;
    /**
     * <code>ISO_CURRENCY_CODE_J_P_Y = 138;</code>
     */
    public static final int ISO_CURRENCY_CODE_J_P_Y_VALUE = 138;
    /**
     * <code>ISO_CURRENCY_CODE_M_N_T = 139;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_N_T_VALUE = 139;
    /**
     * <code>ISO_CURRENCY_CODE_A_O_A = 140;</code>
     */
    public static final int ISO_CURRENCY_CODE_A_O_A_VALUE = 140;
    /**
     * <code>ISO_CURRENCY_CODE_P_L_N = 141;</code>
     */
    public static final int ISO_CURRENCY_CODE_P_L_N_VALUE = 141;
    /**
     * <code>ISO_CURRENCY_CODE_G_B_P = 142;</code>
     */
    public static final int ISO_CURRENCY_CODE_G_B_P_VALUE = 142;
    /**
     * <code>ISO_CURRENCY_CODE_S_B_D = 143;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_B_D_VALUE = 143;
    /**
     * <code>ISO_CURRENCY_CODE_H_U_F = 144;</code>
     */
    public static final int ISO_CURRENCY_CODE_H_U_F_VALUE = 144;
    /**
     * <code>ISO_CURRENCY_CODE_B_Y_R = 145;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_Y_R_VALUE = 145;
    /**
     * <code>ISO_CURRENCY_CODE_B_I_F = 146;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_I_F_VALUE = 146;
    /**
     * <code>ISO_CURRENCY_CODE_M_W_K = 147;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_W_K_VALUE = 147;
    /**
     * <code>ISO_CURRENCY_CODE_M_G_A = 148;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_G_A_VALUE = 148;
    /**
     * <code>ISO_CURRENCY_CODE_B_Z_D = 149;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_Z_D_VALUE = 149;
    /**
     * <code>ISO_CURRENCY_CODE_B_A_M = 150;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_A_M_VALUE = 150;
    /**
     * <code>ISO_CURRENCY_CODE_E_G_P = 151;</code>
     */
    public static final int ISO_CURRENCY_CODE_E_G_P_VALUE = 151;
    /**
     * <code>ISO_CURRENCY_CODE_M_O_P = 152;</code>
     */
    public static final int ISO_CURRENCY_CODE_M_O_P_VALUE = 152;
    /**
     * <code>ISO_CURRENCY_CODE_N_A_D = 153;</code>
     */
    public static final int ISO_CURRENCY_CODE_N_A_D_VALUE = 153;
    /**
     * <code>ISO_CURRENCY_CODE_S_S_P = 154;</code>
     */
    public static final int ISO_CURRENCY_CODE_S_S_P_VALUE = 154;
    /**
     * <code>ISO_CURRENCY_CODE_N_I_O = 155;</code>
     */
    public static final int ISO_CURRENCY_CODE_N_I_O_VALUE = 155;
    /**
     * <code>ISO_CURRENCY_CODE_P_E_N = 156;</code>
     */
    public static final int ISO_CURRENCY_CODE_P_E_N_VALUE = 156;
    /**
     * <code>ISO_CURRENCY_CODE_N_Z_D = 157;</code>
     */
    public static final int ISO_CURRENCY_CODE_N_Z_D_VALUE = 157;
    /**
     * <code>ISO_CURRENCY_CODE_W_S_T = 158;</code>
     */
    public static final int ISO_CURRENCY_CODE_W_S_T_VALUE = 158;
    /**
     * <code>ISO_CURRENCY_CODE_T_M_T = 159;</code>
     */
    public static final int ISO_CURRENCY_CODE_T_M_T_VALUE = 159;
    /**
     * <code>ISO_CURRENCY_CODE_C_L_F = 160;</code>
     */
    public static final int ISO_CURRENCY_CODE_C_L_F_VALUE = 160;
    /**
     * <code>ISO_CURRENCY_CODE_B_R_L = 161;</code>
     */
    public static final int ISO_CURRENCY_CODE_B_R_L_VALUE = 161;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IsoCurrencyCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IsoCurrencyCode forNumber(int value) {
      switch (value) {
        case 0: return ISO_CURRENCY_CODE_F_J_D;
        case 1: return ISO_CURRENCY_CODE_M_X_N;
        case 2: return ISO_CURRENCY_CODE_S_C_R;
        case 3: return ISO_CURRENCY_CODE_C_D_F;
        case 4: return ISO_CURRENCY_CODE_B_B_D;
        case 5: return ISO_CURRENCY_CODE_G_T_Q;
        case 6: return ISO_CURRENCY_CODE_C_L_P;
        case 7: return ISO_CURRENCY_CODE_H_N_L;
        case 8: return ISO_CURRENCY_CODE_U_G_X;
        case 9: return ISO_CURRENCY_CODE_M_X_V;
        case 10: return ISO_CURRENCY_CODE_Z_A_R;
        case 11: return ISO_CURRENCY_CODE_T_N_D;
        case 12: return ISO_CURRENCY_CODE_S_T_N;
        case 13: return ISO_CURRENCY_CODE_C_U_C;
        case 14: return ISO_CURRENCY_CODE_B_S_D;
        case 15: return ISO_CURRENCY_CODE_S_L_L;
        case 16: return ISO_CURRENCY_CODE_S_D_G;
        case 17: return ISO_CURRENCY_CODE_I_Q_D;
        case 18: return ISO_CURRENCY_CODE_C_U_P;
        case 19: return ISO_CURRENCY_CODE_G_M_D;
        case 20: return ISO_CURRENCY_CODE_T_W_D;
        case 21: return ISO_CURRENCY_CODE_R_S_D;
        case 22: return ISO_CURRENCY_CODE_D_O_P;
        case 23: return ISO_CURRENCY_CODE_U_Y_I;
        case 24: return ISO_CURRENCY_CODE_K_M_F;
        case 25: return ISO_CURRENCY_CODE_M_Y_R;
        case 26: return ISO_CURRENCY_CODE_F_K_P;
        case 27: return ISO_CURRENCY_CODE_X_O_F;
        case 28: return ISO_CURRENCY_CODE_G_E_L;
        case 29: return ISO_CURRENCY_CODE_U_Y_U;
        case 30: return ISO_CURRENCY_CODE_M_A_D;
        case 31: return ISO_CURRENCY_CODE_C_V_E;
        case 32: return ISO_CURRENCY_CODE_T_O_P;
        case 33: return ISO_CURRENCY_CODE_A_Z_N;
        case 34: return ISO_CURRENCY_CODE_O_M_R;
        case 35: return ISO_CURRENCY_CODE_P_G_K;
        case 36: return ISO_CURRENCY_CODE_K_E_S;
        case 37: return ISO_CURRENCY_CODE_S_E_K;
        case 38: return ISO_CURRENCY_CODE_B_T_N;
        case 39: return ISO_CURRENCY_CODE_U_A_H;
        case 40: return ISO_CURRENCY_CODE_G_N_F;
        case 41: return ISO_CURRENCY_CODE_E_R_N;
        case 42: return ISO_CURRENCY_CODE_M_Z_N;
        case 43: return ISO_CURRENCY_CODE_S_V_C;
        case 44: return ISO_CURRENCY_CODE_A_R_S;
        case 45: return ISO_CURRENCY_CODE_Q_A_R;
        case 46: return ISO_CURRENCY_CODE_I_R_R;
        case 47: return ISO_CURRENCY_CODE_C_N_Y;
        case 48: return ISO_CURRENCY_CODE_T_H_B;
        case 49: return ISO_CURRENCY_CODE_U_Z_S;
        case 50: return ISO_CURRENCY_CODE_X_P_F;
        case 51: return ISO_CURRENCY_CODE_M_R_U;
        case 52: return ISO_CURRENCY_CODE_B_D_T;
        case 53: return ISO_CURRENCY_CODE_L_Y_D;
        case 54: return ISO_CURRENCY_CODE_B_M_D;
        case 55: return ISO_CURRENCY_CODE_K_W_D;
        case 56: return ISO_CURRENCY_CODE_P_H_P;
        case 57: return ISO_CURRENCY_CODE_R_U_B;
        case 58: return ISO_CURRENCY_CODE_P_Y_G;
        case 59: return ISO_CURRENCY_CODE_I_S_K;
        case 60: return ISO_CURRENCY_CODE_J_M_D;
        case 61: return ISO_CURRENCY_CODE_C_O_P;
        case 62: return ISO_CURRENCY_CODE_M_K_D;
        case 63: return ISO_CURRENCY_CODE_U_S_D;
        case 64: return ISO_CURRENCY_CODE_C_O_U;
        case 65: return ISO_CURRENCY_CODE_D_Z_D;
        case 66: return ISO_CURRENCY_CODE_P_A_B;
        case 67: return ISO_CURRENCY_CODE_S_G_D;
        case 68: return ISO_CURRENCY_CODE_E_T_B;
        case 69: return ISO_CURRENCY_CODE_K_G_S;
        case 70: return ISO_CURRENCY_CODE_S_O_S;
        case 71: return ISO_CURRENCY_CODE_V_U_V;
        case 72: return ISO_CURRENCY_CODE_L_A_K;
        case 73: return ISO_CURRENCY_CODE_B_N_D;
        case 74: return ISO_CURRENCY_CODE_X_A_F;
        case 75: return ISO_CURRENCY_CODE_L_R_D;
        case 76: return ISO_CURRENCY_CODE_C_H_F;
        case 77: return ISO_CURRENCY_CODE_H_R_K;
        case 78: return ISO_CURRENCY_CODE_A_L_L;
        case 79: return ISO_CURRENCY_CODE_D_J_F;
        case 80: return ISO_CURRENCY_CODE_V_E_S;
        case 81: return ISO_CURRENCY_CODE_Z_M_W;
        case 82: return ISO_CURRENCY_CODE_T_Z_S;
        case 83: return ISO_CURRENCY_CODE_V_N_D;
        case 84: return ISO_CURRENCY_CODE_A_U_D;
        case 85: return ISO_CURRENCY_CODE_I_L_S;
        case 86: return ISO_CURRENCY_CODE_G_H_S;
        case 87: return ISO_CURRENCY_CODE_G_Y_D;
        case 88: return ISO_CURRENCY_CODE_K_P_W;
        case 89: return ISO_CURRENCY_CODE_B_O_B;
        case 90: return ISO_CURRENCY_CODE_K_H_R;
        case 91: return ISO_CURRENCY_CODE_M_D_L;
        case 92: return ISO_CURRENCY_CODE_I_D_R;
        case 93: return ISO_CURRENCY_CODE_K_Y_D;
        case 94: return ISO_CURRENCY_CODE_A_M_D;
        case 95: return ISO_CURRENCY_CODE_B_W_P;
        case 96: return ISO_CURRENCY_CODE_S_H_P;
        case 97: return ISO_CURRENCY_CODE_T_R_Y;
        case 98: return ISO_CURRENCY_CODE_L_B_P;
        case 99: return ISO_CURRENCY_CODE_T_J_S;
        case 100: return ISO_CURRENCY_CODE_J_O_D;
        case 101: return ISO_CURRENCY_CODE_A_E_D;
        case 102: return ISO_CURRENCY_CODE_H_K_D;
        case 103: return ISO_CURRENCY_CODE_R_W_F;
        case 104: return ISO_CURRENCY_CODE_E_U_R;
        case 105: return ISO_CURRENCY_CODE_L_S_L;
        case 106: return ISO_CURRENCY_CODE_D_K_K;
        case 107: return ISO_CURRENCY_CODE_C_A_D;
        case 108: return ISO_CURRENCY_CODE_B_G_N;
        case 109: return ISO_CURRENCY_CODE_B_O_V;
        case 110: return ISO_CURRENCY_CODE_M_M_K;
        case 111: return ISO_CURRENCY_CODE_M_U_R;
        case 112: return ISO_CURRENCY_CODE_N_O_K;
        case 113: return ISO_CURRENCY_CODE_S_Y_P;
        case 114: return ISO_CURRENCY_CODE_Z_W_L;
        case 115: return ISO_CURRENCY_CODE_G_I_P;
        case 116: return ISO_CURRENCY_CODE_R_O_N;
        case 117: return ISO_CURRENCY_CODE_L_K_R;
        case 118: return ISO_CURRENCY_CODE_N_G_N;
        case 119: return ISO_CURRENCY_CODE_C_R_C;
        case 120: return ISO_CURRENCY_CODE_C_Z_K;
        case 121: return ISO_CURRENCY_CODE_P_K_R;
        case 122: return ISO_CURRENCY_CODE_X_C_D;
        case 123: return ISO_CURRENCY_CODE_A_N_G;
        case 124: return ISO_CURRENCY_CODE_H_T_G;
        case 125: return ISO_CURRENCY_CODE_B_H_D;
        case 126: return ISO_CURRENCY_CODE_K_Z_T;
        case 127: return ISO_CURRENCY_CODE_S_R_D;
        case 128: return ISO_CURRENCY_CODE_S_Z_L;
        case 129: return ISO_CURRENCY_CODE_S_A_R;
        case 130: return ISO_CURRENCY_CODE_T_T_D;
        case 131: return ISO_CURRENCY_CODE_Y_E_R;
        case 132: return ISO_CURRENCY_CODE_M_V_R;
        case 133: return ISO_CURRENCY_CODE_A_F_N;
        case 134: return ISO_CURRENCY_CODE_I_N_R;
        case 135: return ISO_CURRENCY_CODE_A_W_G;
        case 136: return ISO_CURRENCY_CODE_K_R_W;
        case 137: return ISO_CURRENCY_CODE_N_P_R;
        case 138: return ISO_CURRENCY_CODE_J_P_Y;
        case 139: return ISO_CURRENCY_CODE_M_N_T;
        case 140: return ISO_CURRENCY_CODE_A_O_A;
        case 141: return ISO_CURRENCY_CODE_P_L_N;
        case 142: return ISO_CURRENCY_CODE_G_B_P;
        case 143: return ISO_CURRENCY_CODE_S_B_D;
        case 144: return ISO_CURRENCY_CODE_H_U_F;
        case 145: return ISO_CURRENCY_CODE_B_Y_R;
        case 146: return ISO_CURRENCY_CODE_B_I_F;
        case 147: return ISO_CURRENCY_CODE_M_W_K;
        case 148: return ISO_CURRENCY_CODE_M_G_A;
        case 149: return ISO_CURRENCY_CODE_B_Z_D;
        case 150: return ISO_CURRENCY_CODE_B_A_M;
        case 151: return ISO_CURRENCY_CODE_E_G_P;
        case 152: return ISO_CURRENCY_CODE_M_O_P;
        case 153: return ISO_CURRENCY_CODE_N_A_D;
        case 154: return ISO_CURRENCY_CODE_S_S_P;
        case 155: return ISO_CURRENCY_CODE_N_I_O;
        case 156: return ISO_CURRENCY_CODE_P_E_N;
        case 157: return ISO_CURRENCY_CODE_N_Z_D;
        case 158: return ISO_CURRENCY_CODE_W_S_T;
        case 159: return ISO_CURRENCY_CODE_T_M_T;
        case 160: return ISO_CURRENCY_CODE_C_L_F;
        case 161: return ISO_CURRENCY_CODE_B_R_L;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IsoCurrencyCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IsoCurrencyCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IsoCurrencyCode>() {
            public IsoCurrencyCode findValueByNumber(int number) {
              return IsoCurrencyCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(78);
    }

    private static final IsoCurrencyCode[] VALUES = values();

    public static IsoCurrencyCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IsoCurrencyCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.IsoCurrencyCode)
  }

  /**
   * Protobuf enum {@code avs.IsoLanguageCode}
   */
  public enum IsoLanguageCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ISO_LANGUAGE_CODE_LUI = 0;</code>
     */
    ISO_LANGUAGE_CODE_LUI(0),
    /**
     * <code>ISO_LANGUAGE_CODE_NYN = 1;</code>
     */
    ISO_LANGUAGE_CODE_NYN(1),
    /**
     * <code>ISO_LANGUAGE_CODE_MWL = 2;</code>
     */
    ISO_LANGUAGE_CODE_MWL(2),
    /**
     * <code>ISO_LANGUAGE_CODE_NYM = 3;</code>
     */
    ISO_LANGUAGE_CODE_NYM(3),
    /**
     * <code>ISO_LANGUAGE_CODE_BAD = 4;</code>
     */
    ISO_LANGUAGE_CODE_BAD(4),
    /**
     * <code>ISO_LANGUAGE_CODE_LUN = 5;</code>
     */
    ISO_LANGUAGE_CODE_LUN(5),
    /**
     * <code>ISO_LANGUAGE_CODE_NYO = 6;</code>
     */
    ISO_LANGUAGE_CODE_NYO(6),
    /**
     * <code>ISO_LANGUAGE_CODE_FIJ = 7;</code>
     */
    ISO_LANGUAGE_CODE_FIJ(7),
    /**
     * <code>ISO_LANGUAGE_CODE_LUO = 8;</code>
     */
    ISO_LANGUAGE_CODE_LUO(8),
    /**
     * <code>ISO_LANGUAGE_CODE_FIL = 9;</code>
     */
    ISO_LANGUAGE_CODE_FIL(9),
    /**
     * <code>ISO_LANGUAGE_CODE_HMN = 10;</code>
     */
    ISO_LANGUAGE_CODE_HMN(10),
    /**
     * <code>ISO_LANGUAGE_CODE_MWR = 11;</code>
     */
    ISO_LANGUAGE_CODE_MWR(11),
    /**
     * <code>ISO_LANGUAGE_CODE_FIN = 12;</code>
     */
    ISO_LANGUAGE_CODE_FIN(12),
    /**
     * <code>ISO_LANGUAGE_CODE_DEL = 13;</code>
     */
    ISO_LANGUAGE_CODE_DEL(13),
    /**
     * <code>ISO_LANGUAGE_CODE_HMO = 14;</code>
     */
    ISO_LANGUAGE_CODE_HMO(14),
    /**
     * <code>ISO_LANGUAGE_CODE_BAI = 15;</code>
     */
    ISO_LANGUAGE_CODE_BAI(15),
    /**
     * <code>ISO_LANGUAGE_CODE_LUS = 16;</code>
     */
    ISO_LANGUAGE_CODE_LUS(16),
    /**
     * <code>ISO_LANGUAGE_CODE_BAL = 17;</code>
     */
    ISO_LANGUAGE_CODE_BAL(17),
    /**
     * <code>ISO_LANGUAGE_CODE_DEN = 18;</code>
     */
    ISO_LANGUAGE_CODE_DEN(18),
    /**
     * <code>ISO_LANGUAGE_CODE_BAK = 19;</code>
     */
    ISO_LANGUAGE_CODE_BAK(19),
    /**
     * <code>ISO_LANGUAGE_CODE_BAN = 20;</code>
     */
    ISO_LANGUAGE_CODE_BAN(20),
    /**
     * <code>ISO_LANGUAGE_CODE_UGA = 21;</code>
     */
    ISO_LANGUAGE_CODE_UGA(21),
    /**
     * <code>ISO_LANGUAGE_CODE_BAM = 22;</code>
     */
    ISO_LANGUAGE_CODE_BAM(22),
    /**
     * <code>ISO_LANGUAGE_CODE_VIE = 23;</code>
     */
    ISO_LANGUAGE_CODE_VIE(23),
    /**
     * <code>ISO_LANGUAGE_CODE_FIU = 24;</code>
     */
    ISO_LANGUAGE_CODE_FIU(24),
    /**
     * <code>ISO_LANGUAGE_CODE_BAT = 25;</code>
     */
    ISO_LANGUAGE_CODE_BAT(25),
    /**
     * <code>ISO_LANGUAGE_CODE_DEU = 26;</code>
     */
    ISO_LANGUAGE_CODE_DEU(26),
    /**
     * <code>ISO_LANGUAGE_CODE_BAS = 27;</code>
     */
    ISO_LANGUAGE_CODE_BAS(27),
    /**
     * <code>ISO_LANGUAGE_CODE_EGY = 28;</code>
     */
    ISO_LANGUAGE_CODE_EGY(28),
    /**
     * <code>ISO_LANGUAGE_CODE_TEL = 29;</code>
     */
    ISO_LANGUAGE_CODE_TEL(29),
    /**
     * <code>ISO_LANGUAGE_CODE_RAJ = 30;</code>
     */
    ISO_LANGUAGE_CODE_RAJ(30),
    /**
     * <code>ISO_LANGUAGE_CODE_JRB = 31;</code>
     */
    ISO_LANGUAGE_CODE_JRB(31),
    /**
     * <code>ISO_LANGUAGE_CODE_NZI = 32;</code>
     */
    ISO_LANGUAGE_CODE_NZI(32),
    /**
     * <code>ISO_LANGUAGE_CODE_GLA = 33;</code>
     */
    ISO_LANGUAGE_CODE_GLA(33),
    /**
     * <code>ISO_LANGUAGE_CODE_YOR = 34;</code>
     */
    ISO_LANGUAGE_CODE_YOR(34),
    /**
     * <code>ISO_LANGUAGE_CODE_TEM = 35;</code>
     */
    ISO_LANGUAGE_CODE_TEM(35),
    /**
     * <code>ISO_LANGUAGE_CODE_SCO = 36;</code>
     */
    ISO_LANGUAGE_CODE_SCO(36),
    /**
     * <code>ISO_LANGUAGE_CODE_SCN = 37;</code>
     */
    ISO_LANGUAGE_CODE_SCN(37),
    /**
     * <code>ISO_LANGUAGE_CODE_AA = 38;</code>
     */
    ISO_LANGUAGE_CODE_AA(38),
    /**
     * <code>ISO_LANGUAGE_CODE_RAP = 39;</code>
     */
    ISO_LANGUAGE_CODE_RAP(39),
    /**
     * <code>ISO_LANGUAGE_CODE_TER = 40;</code>
     */
    ISO_LANGUAGE_CODE_TER(40),
    /**
     * <code>ISO_LANGUAGE_CODE_AB = 41;</code>
     */
    ISO_LANGUAGE_CODE_AB(41),
    /**
     * <code>ISO_LANGUAGE_CODE_GLE = 42;</code>
     */
    ISO_LANGUAGE_CODE_GLE(42),
    /**
     * <code>ISO_LANGUAGE_CODE_RAR = 43;</code>
     */
    ISO_LANGUAGE_CODE_RAR(43),
    /**
     * <code>ISO_LANGUAGE_CODE_TET = 44;</code>
     */
    ISO_LANGUAGE_CODE_TET(44),
    /**
     * <code>ISO_LANGUAGE_CODE_GLG = 45;</code>
     */
    ISO_LANGUAGE_CODE_GLG(45),
    /**
     * <code>ISO_LANGUAGE_CODE_AE = 46;</code>
     */
    ISO_LANGUAGE_CODE_AE(46),
    /**
     * <code>ISO_LANGUAGE_CODE_AF = 47;</code>
     */
    ISO_LANGUAGE_CODE_AF(47),
    /**
     * <code>ISO_LANGUAGE_CODE_IPK = 48;</code>
     */
    ISO_LANGUAGE_CODE_IPK(48),
    /**
     * <code>ISO_LANGUAGE_CODE_AK = 49;</code>
     */
    ISO_LANGUAGE_CODE_AK(49),
    /**
     * <code>ISO_LANGUAGE_CODE_AM = 50;</code>
     */
    ISO_LANGUAGE_CODE_AM(50),
    /**
     * <code>ISO_LANGUAGE_CODE_AN = 51;</code>
     */
    ISO_LANGUAGE_CODE_AN(51),
    /**
     * <code>ISO_LANGUAGE_CODE_GLV = 52;</code>
     */
    ISO_LANGUAGE_CODE_GLV(52),
    /**
     * <code>ISO_LANGUAGE_CODE_AR = 53;</code>
     */
    ISO_LANGUAGE_CODE_AR(53),
    /**
     * <code>ISO_LANGUAGE_CODE_AS = 54;</code>
     */
    ISO_LANGUAGE_CODE_AS(54),
    /**
     * <code>ISO_LANGUAGE_CODE_MYA = 55;</code>
     */
    ISO_LANGUAGE_CODE_MYA(55),
    /**
     * <code>ISO_LANGUAGE_CODE_AV = 56;</code>
     */
    ISO_LANGUAGE_CODE_AV(56),
    /**
     * <code>ISO_LANGUAGE_CODE_YPK = 57;</code>
     */
    ISO_LANGUAGE_CODE_YPK(57),
    /**
     * <code>ISO_LANGUAGE_CODE_KUA = 58;</code>
     */
    ISO_LANGUAGE_CODE_KUA(58),
    /**
     * <code>ISO_LANGUAGE_CODE_AY = 59;</code>
     */
    ISO_LANGUAGE_CODE_AY(59),
    /**
     * <code>ISO_LANGUAGE_CODE_WLN = 60;</code>
     */
    ISO_LANGUAGE_CODE_WLN(60),
    /**
     * <code>ISO_LANGUAGE_CODE_AZ = 61;</code>
     */
    ISO_LANGUAGE_CODE_AZ(61),
    /**
     * <code>ISO_LANGUAGE_CODE_BA = 62;</code>
     */
    ISO_LANGUAGE_CODE_BA(62),
    /**
     * <code>ISO_LANGUAGE_CODE_AAA = 63;</code>
     */
    ISO_LANGUAGE_CODE_AAA(63),
    /**
     * <code>ISO_LANGUAGE_CODE_CEB = 64;</code>
     */
    ISO_LANGUAGE_CODE_CEB(64),
    /**
     * <code>ISO_LANGUAGE_CODE_KUM = 65;</code>
     */
    ISO_LANGUAGE_CODE_KUM(65),
    /**
     * <code>ISO_LANGUAGE_CODE_BE = 66;</code>
     */
    ISO_LANGUAGE_CODE_BE(66),
    /**
     * <code>ISO_LANGUAGE_CODE_GMH = 67;</code>
     */
    ISO_LANGUAGE_CODE_GMH(67),
    /**
     * <code>ISO_LANGUAGE_CODE_MYN = 68;</code>
     */
    ISO_LANGUAGE_CODE_MYN(68),
    /**
     * <code>ISO_LANGUAGE_CODE_BG = 69;</code>
     */
    ISO_LANGUAGE_CODE_BG(69),
    /**
     * <code>ISO_LANGUAGE_CODE_BH = 70;</code>
     */
    ISO_LANGUAGE_CODE_BH(70),
    /**
     * <code>ISO_LANGUAGE_CODE_BI = 71;</code>
     */
    ISO_LANGUAGE_CODE_BI(71),
    /**
     * <code>ISO_LANGUAGE_CODE_KUR = 72;</code>
     */
    ISO_LANGUAGE_CODE_KUR(72),
    /**
     * <code>ISO_LANGUAGE_CODE_BM = 73;</code>
     */
    ISO_LANGUAGE_CODE_BM(73),
    /**
     * <code>ISO_LANGUAGE_CODE_CEL = 74;</code>
     */
    ISO_LANGUAGE_CODE_CEL(74),
    /**
     * <code>ISO_LANGUAGE_CODE_KUT = 75;</code>
     */
    ISO_LANGUAGE_CODE_KUT(75),
    /**
     * <code>ISO_LANGUAGE_CODE_MYV = 76;</code>
     */
    ISO_LANGUAGE_CODE_MYV(76),
    /**
     * <code>ISO_LANGUAGE_CODE_BN = 77;</code>
     */
    ISO_LANGUAGE_CODE_BN(77),
    /**
     * <code>ISO_LANGUAGE_CODE_BO = 78;</code>
     */
    ISO_LANGUAGE_CODE_BO(78),
    /**
     * <code>ISO_LANGUAGE_CODE_DGR = 79;</code>
     */
    ISO_LANGUAGE_CODE_DGR(79),
    /**
     * <code>ISO_LANGUAGE_CODE_BR = 80;</code>
     */
    ISO_LANGUAGE_CODE_BR(80),
    /**
     * <code>ISO_LANGUAGE_CODE_CES = 81;</code>
     */
    ISO_LANGUAGE_CODE_CES(81),
    /**
     * <code>ISO_LANGUAGE_CODE_BS = 82;</code>
     */
    ISO_LANGUAGE_CODE_BS(82),
    /**
     * <code>ISO_LANGUAGE_CODE_UIG = 83;</code>
     */
    ISO_LANGUAGE_CODE_UIG(83),
    /**
     * <code>ISO_LANGUAGE_CODE_AAR = 84;</code>
     */
    ISO_LANGUAGE_CODE_AAR(84),
    /**
     * <code>ISO_LANGUAGE_CODE_TGL = 85;</code>
     */
    ISO_LANGUAGE_CODE_TGL(85),
    /**
     * <code>ISO_LANGUAGE_CODE_TGK = 86;</code>
     */
    ISO_LANGUAGE_CODE_TGK(86),
    /**
     * <code>ISO_LANGUAGE_CODE_IRA = 87;</code>
     */
    ISO_LANGUAGE_CODE_IRA(87),
    /**
     * <code>ISO_LANGUAGE_CODE_SEM = 88;</code>
     */
    ISO_LANGUAGE_CODE_SEM(88),
    /**
     * <code>ISO_LANGUAGE_CODE_SEL = 89;</code>
     */
    ISO_LANGUAGE_CODE_SEL(89),
    /**
     * <code>ISO_LANGUAGE_CODE_CA = 90;</code>
     */
    ISO_LANGUAGE_CODE_CA(90),
    /**
     * <code>ISO_LANGUAGE_CODE_CE = 91;</code>
     */
    ISO_LANGUAGE_CODE_CE(91),
    /**
     * <code>ISO_LANGUAGE_CODE_CH = 92;</code>
     */
    ISO_LANGUAGE_CODE_CH(92),
    /**
     * <code>ISO_LANGUAGE_CODE_IRO = 93;</code>
     */
    ISO_LANGUAGE_CODE_IRO(93),
    /**
     * <code>ISO_LANGUAGE_CODE_ABK = 94;</code>
     */
    ISO_LANGUAGE_CODE_ABK(94),
    /**
     * <code>ISO_LANGUAGE_CODE_CO = 95;</code>
     */
    ISO_LANGUAGE_CODE_CO(95),
    /**
     * <code>ISO_LANGUAGE_CODE_THA = 96;</code>
     */
    ISO_LANGUAGE_CODE_THA(96),
    /**
     * <code>ISO_LANGUAGE_CODE_CR = 97;</code>
     */
    ISO_LANGUAGE_CODE_CR(97),
    /**
     * <code>ISO_LANGUAGE_CODE_CS = 98;</code>
     */
    ISO_LANGUAGE_CODE_CS(98),
    /**
     * <code>ISO_LANGUAGE_CODE_CU = 99;</code>
     */
    ISO_LANGUAGE_CODE_CU(99),
    /**
     * <code>ISO_LANGUAGE_CODE_CV = 100;</code>
     */
    ISO_LANGUAGE_CODE_CV(100),
    /**
     * <code>ISO_LANGUAGE_CODE_CY = 101;</code>
     */
    ISO_LANGUAGE_CODE_CY(101),
    /**
     * <code>ISO_LANGUAGE_CODE_EKA = 102;</code>
     */
    ISO_LANGUAGE_CODE_EKA(102),
    /**
     * <code>ISO_LANGUAGE_CODE_DA = 103;</code>
     */
    ISO_LANGUAGE_CODE_DA(103),
    /**
     * <code>ISO_LANGUAGE_CODE_DE = 104;</code>
     */
    ISO_LANGUAGE_CODE_DE(104),
    /**
     * <code>ISO_LANGUAGE_CODE_GOH = 105;</code>
     */
    ISO_LANGUAGE_CODE_GOH(105),
    /**
     * <code>ISO_LANGUAGE_CODE_ACE = 106;</code>
     */
    ISO_LANGUAGE_CODE_ACE(106),
    /**
     * <code>ISO_LANGUAGE_CODE_ISL = 107;</code>
     */
    ISO_LANGUAGE_CODE_ISL(107),
    /**
     * <code>ISO_LANGUAGE_CODE_BEJ = 108;</code>
     */
    ISO_LANGUAGE_CODE_BEJ(108),
    /**
     * <code>ISO_LANGUAGE_CODE_ACH = 109;</code>
     */
    ISO_LANGUAGE_CODE_ACH(109),
    /**
     * <code>ISO_LANGUAGE_CODE_GON = 110;</code>
     */
    ISO_LANGUAGE_CODE_GON(110),
    /**
     * <code>ISO_LANGUAGE_CODE_BEL = 111;</code>
     */
    ISO_LANGUAGE_CODE_BEL(111),
    /**
     * <code>ISO_LANGUAGE_CODE_DIN = 112;</code>
     */
    ISO_LANGUAGE_CODE_DIN(112),
    /**
     * <code>ISO_LANGUAGE_CODE_BEN = 113;</code>
     */
    ISO_LANGUAGE_CODE_BEN(113),
    /**
     * <code>ISO_LANGUAGE_CODE_BEM = 114;</code>
     */
    ISO_LANGUAGE_CODE_BEM(114),
    /**
     * <code>ISO_LANGUAGE_CODE_GOR = 115;</code>
     */
    ISO_LANGUAGE_CODE_GOR(115),
    /**
     * <code>ISO_LANGUAGE_CODE_SGA = 116;</code>
     */
    ISO_LANGUAGE_CODE_SGA(116),
    /**
     * <code>ISO_LANGUAGE_CODE_GOT = 117;</code>
     */
    ISO_LANGUAGE_CODE_GOT(117),
    /**
     * <code>ISO_LANGUAGE_CODE_BER = 118;</code>
     */
    ISO_LANGUAGE_CODE_BER(118),
    /**
     * <code>ISO_LANGUAGE_CODE_DIV = 119;</code>
     */
    ISO_LANGUAGE_CODE_DIV(119),
    /**
     * <code>ISO_LANGUAGE_CODE_ZUL = 120;</code>
     */
    ISO_LANGUAGE_CODE_ZUL(120),
    /**
     * <code>ISO_LANGUAGE_CODE_PAA = 121;</code>
     */
    ISO_LANGUAGE_CODE_PAA(121),
    /**
     * <code>ISO_LANGUAGE_CODE_DV = 122;</code>
     */
    ISO_LANGUAGE_CODE_DV(122),
    /**
     * <code>ISO_LANGUAGE_CODE_ZUN = 123;</code>
     */
    ISO_LANGUAGE_CODE_ZUN(123),
    /**
     * <code>ISO_LANGUAGE_CODE_TIG = 124;</code>
     */
    ISO_LANGUAGE_CODE_TIG(124),
    /**
     * <code>ISO_LANGUAGE_CODE_WOL = 125;</code>
     */
    ISO_LANGUAGE_CODE_WOL(125),
    /**
     * <code>ISO_LANGUAGE_CODE_DZ = 126;</code>
     */
    ISO_LANGUAGE_CODE_DZ(126),
    /**
     * <code>ISO_LANGUAGE_CODE_ITA = 127;</code>
     */
    ISO_LANGUAGE_CODE_ITA(127),
    /**
     * <code>ISO_LANGUAGE_CODE_PAG = 128;</code>
     */
    ISO_LANGUAGE_CODE_PAG(128),
    /**
     * <code>ISO_LANGUAGE_CODE_PAL = 129;</code>
     */
    ISO_LANGUAGE_CODE_PAL(129),
    /**
     * <code>ISO_LANGUAGE_CODE_SGN = 130;</code>
     */
    ISO_LANGUAGE_CODE_SGN(130),
    /**
     * <code>ISO_LANGUAGE_CODE_PAN = 131;</code>
     */
    ISO_LANGUAGE_CODE_PAN(131),
    /**
     * <code>ISO_LANGUAGE_CODE_TIR = 132;</code>
     */
    ISO_LANGUAGE_CODE_TIR(132),
    /**
     * <code>ISO_LANGUAGE_CODE_CHB = 133;</code>
     */
    ISO_LANGUAGE_CODE_CHB(133),
    /**
     * <code>ISO_LANGUAGE_CODE_CHA = 134;</code>
     */
    ISO_LANGUAGE_CODE_CHA(134),
    /**
     * <code>ISO_LANGUAGE_CODE_UKR = 135;</code>
     */
    ISO_LANGUAGE_CODE_UKR(135),
    /**
     * <code>ISO_LANGUAGE_CODE_PAM = 136;</code>
     */
    ISO_LANGUAGE_CODE_PAM(136),
    /**
     * <code>ISO_LANGUAGE_CODE_PAP = 137;</code>
     */
    ISO_LANGUAGE_CODE_PAP(137),
    /**
     * <code>ISO_LANGUAGE_CODE_ADA = 138;</code>
     */
    ISO_LANGUAGE_CODE_ADA(138),
    /**
     * <code>ISO_LANGUAGE_CODE_EE = 139;</code>
     */
    ISO_LANGUAGE_CODE_EE(139),
    /**
     * <code>ISO_LANGUAGE_CODE_TIV = 140;</code>
     */
    ISO_LANGUAGE_CODE_TIV(140),
    /**
     * <code>ISO_LANGUAGE_CODE_CHE = 141;</code>
     */
    ISO_LANGUAGE_CODE_CHE(141),
    /**
     * <code>ISO_LANGUAGE_CODE_CHG = 142;</code>
     */
    ISO_LANGUAGE_CODE_CHG(142),
    /**
     * <code>ISO_LANGUAGE_CODE_ELL = 143;</code>
     */
    ISO_LANGUAGE_CODE_ELL(143),
    /**
     * <code>ISO_LANGUAGE_CODE_PAU = 144;</code>
     */
    ISO_LANGUAGE_CODE_PAU(144),
    /**
     * <code>ISO_LANGUAGE_CODE_EL = 145;</code>
     */
    ISO_LANGUAGE_CODE_EL(145),
    /**
     * <code>ISO_LANGUAGE_CODE_CHK = 146;</code>
     */
    ISO_LANGUAGE_CODE_CHK(146),
    /**
     * <code>ISO_LANGUAGE_CODE_CHN = 147;</code>
     */
    ISO_LANGUAGE_CODE_CHN(147),
    /**
     * <code>ISO_LANGUAGE_CODE_EN = 148;</code>
     */
    ISO_LANGUAGE_CODE_EN(148),
    /**
     * <code>ISO_LANGUAGE_CODE_CHM = 149;</code>
     */
    ISO_LANGUAGE_CODE_CHM(149),
    /**
     * <code>ISO_LANGUAGE_CODE_EO = 150;</code>
     */
    ISO_LANGUAGE_CODE_EO(150),
    /**
     * <code>ISO_LANGUAGE_CODE_CHP = 151;</code>
     */
    ISO_LANGUAGE_CODE_CHP(151),
    /**
     * <code>ISO_LANGUAGE_CODE_CHO = 152;</code>
     */
    ISO_LANGUAGE_CODE_CHO(152),
    /**
     * <code>ISO_LANGUAGE_CODE_CHR = 153;</code>
     */
    ISO_LANGUAGE_CODE_CHR(153),
    /**
     * <code>ISO_LANGUAGE_CODE_HRV = 154;</code>
     */
    ISO_LANGUAGE_CODE_HRV(154),
    /**
     * <code>ISO_LANGUAGE_CODE_ES = 155;</code>
     */
    ISO_LANGUAGE_CODE_ES(155),
    /**
     * <code>ISO_LANGUAGE_CODE_ET = 156;</code>
     */
    ISO_LANGUAGE_CODE_ET(156),
    /**
     * <code>ISO_LANGUAGE_CODE_CHV = 157;</code>
     */
    ISO_LANGUAGE_CODE_CHV(157),
    /**
     * <code>ISO_LANGUAGE_CODE_EU = 158;</code>
     */
    ISO_LANGUAGE_CODE_EU(158),
    /**
     * <code>ISO_LANGUAGE_CODE_ELX = 159;</code>
     */
    ISO_LANGUAGE_CODE_ELX(159),
    /**
     * <code>ISO_LANGUAGE_CODE_CHU = 160;</code>
     */
    ISO_LANGUAGE_CODE_CHU(160),
    /**
     * <code>ISO_LANGUAGE_CODE_CHY = 161;</code>
     */
    ISO_LANGUAGE_CODE_CHY(161),
    /**
     * <code>ISO_LANGUAGE_CODE_HSB = 162;</code>
     */
    ISO_LANGUAGE_CODE_HSB(162),
    /**
     * <code>ISO_LANGUAGE_CODE_ADY = 163;</code>
     */
    ISO_LANGUAGE_CODE_ADY(163),
    /**
     * <code>ISO_LANGUAGE_CODE_SHN = 164;</code>
     */
    ISO_LANGUAGE_CODE_SHN(164),
    /**
     * <code>ISO_LANGUAGE_CODE_FA = 165;</code>
     */
    ISO_LANGUAGE_CODE_FA(165),
    /**
     * <code>ISO_LANGUAGE_CODE_BGC = 166;</code>
     */
    ISO_LANGUAGE_CODE_BGC(166),
    /**
     * <code>ISO_LANGUAGE_CODE_FF = 167;</code>
     */
    ISO_LANGUAGE_CODE_FF(167),
    /**
     * <code>ISO_LANGUAGE_CODE_FI = 168;</code>
     */
    ISO_LANGUAGE_CODE_FI(168),
    /**
     * <code>ISO_LANGUAGE_CODE_FJ = 169;</code>
     */
    ISO_LANGUAGE_CODE_FJ(169),
    /**
     * <code>ISO_LANGUAGE_CODE_FON = 170;</code>
     */
    ISO_LANGUAGE_CODE_FON(170),
    /**
     * <code>ISO_LANGUAGE_CODE_FO = 171;</code>
     */
    ISO_LANGUAGE_CODE_FO(171),
    /**
     * <code>ISO_LANGUAGE_CODE_UMB = 172;</code>
     */
    ISO_LANGUAGE_CODE_UMB(172),
    /**
     * <code>ISO_LANGUAGE_CODE_FR = 173;</code>
     */
    ISO_LANGUAGE_CODE_FR(173),
    /**
     * <code>ISO_LANGUAGE_CODE_SID = 174;</code>
     */
    ISO_LANGUAGE_CODE_SID(174),
    /**
     * <code>ISO_LANGUAGE_CODE_VOL = 175;</code>
     */
    ISO_LANGUAGE_CODE_VOL(175),
    /**
     * <code>ISO_LANGUAGE_CODE_FY = 176;</code>
     */
    ISO_LANGUAGE_CODE_FY(176),
    /**
     * <code>ISO_LANGUAGE_CODE_TKL = 177;</code>
     */
    ISO_LANGUAGE_CODE_TKL(177),
    /**
     * <code>ISO_LANGUAGE_CODE_GRB = 178;</code>
     */
    ISO_LANGUAGE_CODE_GRB(178),
    /**
     * <code>ISO_LANGUAGE_CODE_SIO = 179;</code>
     */
    ISO_LANGUAGE_CODE_SIO(179),
    /**
     * <code>ISO_LANGUAGE_CODE_SIN = 180;</code>
     */
    ISO_LANGUAGE_CODE_SIN(180),
    /**
     * <code>ISO_LANGUAGE_CODE_GRC = 181;</code>
     */
    ISO_LANGUAGE_CODE_GRC(181),
    /**
     * <code>ISO_LANGUAGE_CODE_GA = 182;</code>
     */
    ISO_LANGUAGE_CODE_GA(182),
    /**
     * <code>ISO_LANGUAGE_CODE_VOT = 183;</code>
     */
    ISO_LANGUAGE_CODE_VOT(183),
    /**
     * <code>ISO_LANGUAGE_CODE_GD = 184;</code>
     */
    ISO_LANGUAGE_CODE_GD(184),
    /**
     * <code>ISO_LANGUAGE_CODE_AFA = 185;</code>
     */
    ISO_LANGUAGE_CODE_AFA(185),
    /**
     * <code>ISO_LANGUAGE_CODE_ENG = 186;</code>
     */
    ISO_LANGUAGE_CODE_ENG(186),
    /**
     * <code>ISO_LANGUAGE_CODE_SIT = 187;</code>
     */
    ISO_LANGUAGE_CODE_SIT(187),
    /**
     * <code>ISO_LANGUAGE_CODE_GRN = 188;</code>
     */
    ISO_LANGUAGE_CODE_GRN(188),
    /**
     * <code>ISO_LANGUAGE_CODE_AFH = 189;</code>
     */
    ISO_LANGUAGE_CODE_AFH(189),
    /**
     * <code>ISO_LANGUAGE_CODE_GL = 190;</code>
     */
    ISO_LANGUAGE_CODE_GL(190),
    /**
     * <code>ISO_LANGUAGE_CODE_ENM = 191;</code>
     */
    ISO_LANGUAGE_CODE_ENM(191),
    /**
     * <code>ISO_LANGUAGE_CODE_GN = 192;</code>
     */
    ISO_LANGUAGE_CODE_GN(192),
    /**
     * <code>ISO_LANGUAGE_CODE_BHO = 193;</code>
     */
    ISO_LANGUAGE_CODE_BHO(193),
    /**
     * <code>ISO_LANGUAGE_CODE_UND = 194;</code>
     */
    ISO_LANGUAGE_CODE_UND(194),
    /**
     * <code>ISO_LANGUAGE_CODE_AFR = 195;</code>
     */
    ISO_LANGUAGE_CODE_AFR(195),
    /**
     * <code>ISO_LANGUAGE_CODE_GU = 196;</code>
     */
    ISO_LANGUAGE_CODE_GU(196),
    /**
     * <code>ISO_LANGUAGE_CODE_GV = 197;</code>
     */
    ISO_LANGUAGE_CODE_GV(197),
    /**
     * <code>ISO_LANGUAGE_CODE_TLI = 198;</code>
     */
    ISO_LANGUAGE_CODE_TLI(198),
    /**
     * <code>ISO_LANGUAGE_CODE_TLH = 199;</code>
     */
    ISO_LANGUAGE_CODE_TLH(199),
    /**
     * <code>ISO_LANGUAGE_CODE_HA = 200;</code>
     */
    ISO_LANGUAGE_CODE_HA(200),
    /**
     * <code>ISO_LANGUAGE_CODE_ZXX = 201;</code>
     */
    ISO_LANGUAGE_CODE_ZXX(201),
    /**
     * <code>ISO_LANGUAGE_CODE_HE = 202;</code>
     */
    ISO_LANGUAGE_CODE_HE(202),
    /**
     * <code>ISO_LANGUAGE_CODE_BIH = 203;</code>
     */
    ISO_LANGUAGE_CODE_BIH(203),
    /**
     * <code>ISO_LANGUAGE_CODE_HUN = 204;</code>
     */
    ISO_LANGUAGE_CODE_HUN(204),
    /**
     * <code>ISO_LANGUAGE_CODE_HI = 205;</code>
     */
    ISO_LANGUAGE_CODE_HI(205),
    /**
     * <code>ISO_LANGUAGE_CODE_HUP = 206;</code>
     */
    ISO_LANGUAGE_CODE_HUP(206),
    /**
     * <code>ISO_LANGUAGE_CODE_BIK = 207;</code>
     */
    ISO_LANGUAGE_CODE_BIK(207),
    /**
     * <code>ISO_LANGUAGE_CODE_BIN = 208;</code>
     */
    ISO_LANGUAGE_CODE_BIN(208),
    /**
     * <code>ISO_LANGUAGE_CODE_HO = 209;</code>
     */
    ISO_LANGUAGE_CODE_HO(209),
    /**
     * <code>ISO_LANGUAGE_CODE_HR = 210;</code>
     */
    ISO_LANGUAGE_CODE_HR(210),
    /**
     * <code>ISO_LANGUAGE_CODE_GSW = 211;</code>
     */
    ISO_LANGUAGE_CODE_GSW(211),
    /**
     * <code>ISO_LANGUAGE_CODE_HT = 212;</code>
     */
    ISO_LANGUAGE_CODE_HT(212),
    /**
     * <code>ISO_LANGUAGE_CODE_BIS = 213;</code>
     */
    ISO_LANGUAGE_CODE_BIS(213),
    /**
     * <code>ISO_LANGUAGE_CODE_HU = 214;</code>
     */
    ISO_LANGUAGE_CODE_HU(214),
    /**
     * <code>ISO_LANGUAGE_CODE_TMH = 215;</code>
     */
    ISO_LANGUAGE_CODE_TMH(215),
    /**
     * <code>ISO_LANGUAGE_CODE_HY = 216;</code>
     */
    ISO_LANGUAGE_CODE_HY(216),
    /**
     * <code>ISO_LANGUAGE_CODE_HZ = 217;</code>
     */
    ISO_LANGUAGE_CODE_HZ(217),
    /**
     * <code>ISO_LANGUAGE_CODE_FRA = 218;</code>
     */
    ISO_LANGUAGE_CODE_FRA(218),
    /**
     * <code>ISO_LANGUAGE_CODE_OCI = 219;</code>
     */
    ISO_LANGUAGE_CODE_OCI(219),
    /**
     * <code>ISO_LANGUAGE_CODE_NAH = 220;</code>
     */
    ISO_LANGUAGE_CODE_NAH(220),
    /**
     * <code>ISO_LANGUAGE_CODE_NAI = 221;</code>
     */
    ISO_LANGUAGE_CODE_NAI(221),
    /**
     * <code>ISO_LANGUAGE_CODE_IA = 222;</code>
     */
    ISO_LANGUAGE_CODE_IA(222),
    /**
     * <code>ISO_LANGUAGE_CODE_ID = 223;</code>
     */
    ISO_LANGUAGE_CODE_ID(223),
    /**
     * <code>ISO_LANGUAGE_CODE_PEO = 224;</code>
     */
    ISO_LANGUAGE_CODE_PEO(224),
    /**
     * <code>ISO_LANGUAGE_CODE_IE = 225;</code>
     */
    ISO_LANGUAGE_CODE_IE(225),
    /**
     * <code>ISO_LANGUAGE_CODE_NAP = 226;</code>
     */
    ISO_LANGUAGE_CODE_NAP(226),
    /**
     * <code>ISO_LANGUAGE_CODE_IG = 227;</code>
     */
    ISO_LANGUAGE_CODE_IG(227),
    /**
     * <code>ISO_LANGUAGE_CODE_II = 228;</code>
     */
    ISO_LANGUAGE_CODE_II(228),
    /**
     * <code>ISO_LANGUAGE_CODE_FRM = 229;</code>
     */
    ISO_LANGUAGE_CODE_FRM(229),
    /**
     * <code>ISO_LANGUAGE_CODE_ZZA = 230;</code>
     */
    ISO_LANGUAGE_CODE_ZZA(230),
    /**
     * <code>ISO_LANGUAGE_CODE_IK = 231;</code>
     */
    ISO_LANGUAGE_CODE_IK(231),
    /**
     * <code>ISO_LANGUAGE_CODE_NAV = 232;</code>
     */
    ISO_LANGUAGE_CODE_NAV(232),
    /**
     * <code>ISO_LANGUAGE_CODE_FRO = 233;</code>
     */
    ISO_LANGUAGE_CODE_FRO(233),
    /**
     * <code>ISO_LANGUAGE_CODE_NAU = 234;</code>
     */
    ISO_LANGUAGE_CODE_NAU(234),
    /**
     * <code>ISO_LANGUAGE_CODE_EPO = 235;</code>
     */
    ISO_LANGUAGE_CODE_EPO(235),
    /**
     * <code>ISO_LANGUAGE_CODE_IO = 236;</code>
     */
    ISO_LANGUAGE_CODE_IO(236),
    /**
     * <code>ISO_LANGUAGE_CODE_FRS = 237;</code>
     */
    ISO_LANGUAGE_CODE_FRS(237),
    /**
     * <code>ISO_LANGUAGE_CODE_FRR = 238;</code>
     */
    ISO_LANGUAGE_CODE_FRR(238),
    /**
     * <code>ISO_LANGUAGE_CODE_SLA = 239;</code>
     */
    ISO_LANGUAGE_CODE_SLA(239),
    /**
     * <code>ISO_LANGUAGE_CODE_IS = 240;</code>
     */
    ISO_LANGUAGE_CODE_IS(240),
    /**
     * <code>ISO_LANGUAGE_CODE_IT = 241;</code>
     */
    ISO_LANGUAGE_CODE_IT(241),
    /**
     * <code>ISO_LANGUAGE_CODE_FRY = 242;</code>
     */
    ISO_LANGUAGE_CODE_FRY(242),
    /**
     * <code>ISO_LANGUAGE_CODE_IU = 243;</code>
     */
    ISO_LANGUAGE_CODE_IU(243),
    /**
     * <code>ISO_LANGUAGE_CODE_SLK = 244;</code>
     */
    ISO_LANGUAGE_CODE_SLK(244),
    /**
     * <code>ISO_LANGUAGE_CODE_JA = 245;</code>
     */
    ISO_LANGUAGE_CODE_JA(245),
    /**
     * <code>ISO_LANGUAGE_CODE_CMC = 246;</code>
     */
    ISO_LANGUAGE_CODE_CMC(246),
    /**
     * <code>ISO_LANGUAGE_CODE_NBL = 247;</code>
     */
    ISO_LANGUAGE_CODE_NBL(247),
    /**
     * <code>ISO_LANGUAGE_CODE_SLV = 248;</code>
     */
    ISO_LANGUAGE_CODE_SLV(248),
    /**
     * <code>ISO_LANGUAGE_CODE_GUJ = 249;</code>
     */
    ISO_LANGUAGE_CODE_GUJ(249),
    /**
     * <code>ISO_LANGUAGE_CODE_DOI = 250;</code>
     */
    ISO_LANGUAGE_CODE_DOI(250),
    /**
     * <code>ISO_LANGUAGE_CODE_SMA = 251;</code>
     */
    ISO_LANGUAGE_CODE_SMA(251),
    /**
     * <code>ISO_LANGUAGE_CODE_AIN = 252;</code>
     */
    ISO_LANGUAGE_CODE_AIN(252),
    /**
     * <code>ISO_LANGUAGE_CODE_SME = 253;</code>
     */
    ISO_LANGUAGE_CODE_SME(253),
    /**
     * <code>ISO_LANGUAGE_CODE_JV = 254;</code>
     */
    ISO_LANGUAGE_CODE_JV(254),
    /**
     * <code>ISO_LANGUAGE_CODE_TOG = 255;</code>
     */
    ISO_LANGUAGE_CODE_TOG(255),
    /**
     * <code>ISO_LANGUAGE_CODE_SMI = 256;</code>
     */
    ISO_LANGUAGE_CODE_SMI(256),
    /**
     * <code>ISO_LANGUAGE_CODE_MAD = 257;</code>
     */
    ISO_LANGUAGE_CODE_MAD(257),
    /**
     * <code>ISO_LANGUAGE_CODE_SMJ = 258;</code>
     */
    ISO_LANGUAGE_CODE_SMJ(258),
    /**
     * <code>ISO_LANGUAGE_CODE_TON = 259;</code>
     */
    ISO_LANGUAGE_CODE_TON(259),
    /**
     * <code>ISO_LANGUAGE_CODE_MAG = 260;</code>
     */
    ISO_LANGUAGE_CODE_MAG(260),
    /**
     * <code>ISO_LANGUAGE_CODE_SMO = 261;</code>
     */
    ISO_LANGUAGE_CODE_SMO(261),
    /**
     * <code>ISO_LANGUAGE_CODE_MAI = 262;</code>
     */
    ISO_LANGUAGE_CODE_MAI(262),
    /**
     * <code>ISO_LANGUAGE_CODE_MAH = 263;</code>
     */
    ISO_LANGUAGE_CODE_MAH(263),
    /**
     * <code>ISO_LANGUAGE_CODE_SMN = 264;</code>
     */
    ISO_LANGUAGE_CODE_SMN(264),
    /**
     * <code>ISO_LANGUAGE_CODE_KA = 265;</code>
     */
    ISO_LANGUAGE_CODE_KA(265),
    /**
     * <code>ISO_LANGUAGE_CODE_BLA = 266;</code>
     */
    ISO_LANGUAGE_CODE_BLA(266),
    /**
     * <code>ISO_LANGUAGE_CODE_MAK = 267;</code>
     */
    ISO_LANGUAGE_CODE_MAK(267),
    /**
     * <code>ISO_LANGUAGE_CODE_SMS = 268;</code>
     */
    ISO_LANGUAGE_CODE_SMS(268),
    /**
     * <code>ISO_LANGUAGE_CODE_MAL = 269;</code>
     */
    ISO_LANGUAGE_CODE_MAL(269),
    /**
     * <code>ISO_LANGUAGE_CODE_MAN = 270;</code>
     */
    ISO_LANGUAGE_CODE_MAN(270),
    /**
     * <code>ISO_LANGUAGE_CODE_KG = 271;</code>
     */
    ISO_LANGUAGE_CODE_KG(271),
    /**
     * <code>ISO_LANGUAGE_CODE_MAP = 272;</code>
     */
    ISO_LANGUAGE_CODE_MAP(272),
    /**
     * <code>ISO_LANGUAGE_CODE_KI = 273;</code>
     */
    ISO_LANGUAGE_CODE_KI(273),
    /**
     * <code>ISO_LANGUAGE_CODE_MAS = 274;</code>
     */
    ISO_LANGUAGE_CODE_MAS(274),
    /**
     * <code>ISO_LANGUAGE_CODE_KJ = 275;</code>
     */
    ISO_LANGUAGE_CODE_KJ(275),
    /**
     * <code>ISO_LANGUAGE_CODE_MAR = 276;</code>
     */
    ISO_LANGUAGE_CODE_MAR(276),
    /**
     * <code>ISO_LANGUAGE_CODE_KK = 277;</code>
     */
    ISO_LANGUAGE_CODE_KK(277),
    /**
     * <code>ISO_LANGUAGE_CODE_KL = 278;</code>
     */
    ISO_LANGUAGE_CODE_KL(278),
    /**
     * <code>ISO_LANGUAGE_CODE_KM = 279;</code>
     */
    ISO_LANGUAGE_CODE_KM(279),
    /**
     * <code>ISO_LANGUAGE_CODE_KN = 280;</code>
     */
    ISO_LANGUAGE_CODE_KN(280),
    /**
     * <code>ISO_LANGUAGE_CODE_KO = 281;</code>
     */
    ISO_LANGUAGE_CODE_KO(281),
    /**
     * <code>ISO_LANGUAGE_CODE_URD = 282;</code>
     */
    ISO_LANGUAGE_CODE_URD(282),
    /**
     * <code>ISO_LANGUAGE_CODE_CNR = 283;</code>
     */
    ISO_LANGUAGE_CODE_CNR(283),
    /**
     * <code>ISO_LANGUAGE_CODE_KR = 284;</code>
     */
    ISO_LANGUAGE_CODE_KR(284),
    /**
     * <code>ISO_LANGUAGE_CODE_SNA = 285;</code>
     */
    ISO_LANGUAGE_CODE_SNA(285),
    /**
     * <code>ISO_LANGUAGE_CODE_KS = 286;</code>
     */
    ISO_LANGUAGE_CODE_KS(286),
    /**
     * <code>ISO_LANGUAGE_CODE_SND = 287;</code>
     */
    ISO_LANGUAGE_CODE_SND(287),
    /**
     * <code>ISO_LANGUAGE_CODE_KU = 288;</code>
     */
    ISO_LANGUAGE_CODE_KU(288),
    /**
     * <code>ISO_LANGUAGE_CODE_KV = 289;</code>
     */
    ISO_LANGUAGE_CODE_KV(289),
    /**
     * <code>ISO_LANGUAGE_CODE_KW = 290;</code>
     */
    ISO_LANGUAGE_CODE_KW(290),
    /**
     * <code>ISO_LANGUAGE_CODE_TPI = 291;</code>
     */
    ISO_LANGUAGE_CODE_TPI(291),
    /**
     * <code>ISO_LANGUAGE_CODE_KY = 292;</code>
     */
    ISO_LANGUAGE_CODE_KY(292),
    /**
     * <code>ISO_LANGUAGE_CODE_NDE = 293;</code>
     */
    ISO_LANGUAGE_CODE_NDE(293),
    /**
     * <code>ISO_LANGUAGE_CODE_PHI = 294;</code>
     */
    ISO_LANGUAGE_CODE_PHI(294),
    /**
     * <code>ISO_LANGUAGE_CODE_SNK = 295;</code>
     */
    ISO_LANGUAGE_CODE_SNK(295),
    /**
     * <code>ISO_LANGUAGE_CODE_HYE = 296;</code>
     */
    ISO_LANGUAGE_CODE_HYE(296),
    /**
     * <code>ISO_LANGUAGE_CODE_LA = 297;</code>
     */
    ISO_LANGUAGE_CODE_LA(297),
    /**
     * <code>ISO_LANGUAGE_CODE_AKA = 298;</code>
     */
    ISO_LANGUAGE_CODE_AKA(298),
    /**
     * <code>ISO_LANGUAGE_CODE_LB = 299;</code>
     */
    ISO_LANGUAGE_CODE_LB(299),
    /**
     * <code>ISO_LANGUAGE_CODE_PHN = 300;</code>
     */
    ISO_LANGUAGE_CODE_PHN(300),
    /**
     * <code>ISO_LANGUAGE_CODE_NDO = 301;</code>
     */
    ISO_LANGUAGE_CODE_NDO(301),
    /**
     * <code>ISO_LANGUAGE_CODE_GWI = 302;</code>
     */
    ISO_LANGUAGE_CODE_GWI(302),
    /**
     * <code>ISO_LANGUAGE_CODE_LG = 303;</code>
     */
    ISO_LANGUAGE_CODE_LG(303),
    /**
     * <code>ISO_LANGUAGE_CODE_FUL = 304;</code>
     */
    ISO_LANGUAGE_CODE_FUL(304),
    /**
     * <code>ISO_LANGUAGE_CODE_NDS = 305;</code>
     */
    ISO_LANGUAGE_CODE_NDS(305),
    /**
     * <code>ISO_LANGUAGE_CODE_LI = 306;</code>
     */
    ISO_LANGUAGE_CODE_LI(306),
    /**
     * <code>ISO_LANGUAGE_CODE_AKK = 307;</code>
     */
    ISO_LANGUAGE_CODE_AKK(307),
    /**
     * <code>ISO_LANGUAGE_CODE_LN = 308;</code>
     */
    ISO_LANGUAGE_CODE_LN(308),
    /**
     * <code>ISO_LANGUAGE_CODE_FUR = 309;</code>
     */
    ISO_LANGUAGE_CODE_FUR(309),
    /**
     * <code>ISO_LANGUAGE_CODE_LO = 310;</code>
     */
    ISO_LANGUAGE_CODE_LO(310),
    /**
     * <code>ISO_LANGUAGE_CODE_COP = 311;</code>
     */
    ISO_LANGUAGE_CODE_COP(311),
    /**
     * <code>ISO_LANGUAGE_CODE_COS = 312;</code>
     */
    ISO_LANGUAGE_CODE_COS(312),
    /**
     * <code>ISO_LANGUAGE_CODE_EST = 313;</code>
     */
    ISO_LANGUAGE_CODE_EST(313),
    /**
     * <code>ISO_LANGUAGE_CODE_COR = 314;</code>
     */
    ISO_LANGUAGE_CODE_COR(314),
    /**
     * <code>ISO_LANGUAGE_CODE_LT = 315;</code>
     */
    ISO_LANGUAGE_CODE_LT(315),
    /**
     * <code>ISO_LANGUAGE_CODE_LU = 316;</code>
     */
    ISO_LANGUAGE_CODE_LU(316),
    /**
     * <code>ISO_LANGUAGE_CODE_LV = 317;</code>
     */
    ISO_LANGUAGE_CODE_LV(317),
    /**
     * <code>ISO_LANGUAGE_CODE_SOG = 318;</code>
     */
    ISO_LANGUAGE_CODE_SOG(318),
    /**
     * <code>ISO_LANGUAGE_CODE_LAD = 319;</code>
     */
    ISO_LANGUAGE_CODE_LAD(319),
    /**
     * <code>ISO_LANGUAGE_CODE_SOM = 320;</code>
     */
    ISO_LANGUAGE_CODE_SOM(320),
    /**
     * <code>ISO_LANGUAGE_CODE_DRA = 321;</code>
     */
    ISO_LANGUAGE_CODE_DRA(321),
    /**
     * <code>ISO_LANGUAGE_CODE_LAH = 322;</code>
     */
    ISO_LANGUAGE_CODE_LAH(322),
    /**
     * <code>ISO_LANGUAGE_CODE_SON = 323;</code>
     */
    ISO_LANGUAGE_CODE_SON(323),
    /**
     * <code>ISO_LANGUAGE_CODE_NEP = 324;</code>
     */
    ISO_LANGUAGE_CODE_NEP(324),
    /**
     * <code>ISO_LANGUAGE_CODE_CPF = 325;</code>
     */
    ISO_LANGUAGE_CODE_CPF(325),
    /**
     * <code>ISO_LANGUAGE_CODE_SOT = 326;</code>
     */
    ISO_LANGUAGE_CODE_SOT(326),
    /**
     * <code>ISO_LANGUAGE_CODE_CPE = 327;</code>
     */
    ISO_LANGUAGE_CODE_CPE(327),
    /**
     * <code>ISO_LANGUAGE_CODE_LAM = 328;</code>
     */
    ISO_LANGUAGE_CODE_LAM(328),
    /**
     * <code>ISO_LANGUAGE_CODE_MG = 329;</code>
     */
    ISO_LANGUAGE_CODE_MG(329),
    /**
     * <code>ISO_LANGUAGE_CODE_LAO = 330;</code>
     */
    ISO_LANGUAGE_CODE_LAO(330),
    /**
     * <code>ISO_LANGUAGE_CODE_MH = 331;</code>
     */
    ISO_LANGUAGE_CODE_MH(331),
    /**
     * <code>ISO_LANGUAGE_CODE_ALE = 332;</code>
     */
    ISO_LANGUAGE_CODE_ALE(332),
    /**
     * <code>ISO_LANGUAGE_CODE_MI = 333;</code>
     */
    ISO_LANGUAGE_CODE_MI(333),
    /**
     * <code>ISO_LANGUAGE_CODE_ALG = 334;</code>
     */
    ISO_LANGUAGE_CODE_ALG(334),
    /**
     * <code>ISO_LANGUAGE_CODE_LAT = 335;</code>
     */
    ISO_LANGUAGE_CODE_LAT(335),
    /**
     * <code>ISO_LANGUAGE_CODE_MK = 336;</code>
     */
    ISO_LANGUAGE_CODE_MK(336),
    /**
     * <code>ISO_LANGUAGE_CODE_ML = 337;</code>
     */
    ISO_LANGUAGE_CODE_ML(337),
    /**
     * <code>ISO_LANGUAGE_CODE_LAV = 338;</code>
     */
    ISO_LANGUAGE_CODE_LAV(338),
    /**
     * <code>ISO_LANGUAGE_CODE_MN = 339;</code>
     */
    ISO_LANGUAGE_CODE_MN(339),
    /**
     * <code>ISO_LANGUAGE_CODE_NEW = 340;</code>
     */
    ISO_LANGUAGE_CODE_NEW(340),
    /**
     * <code>ISO_LANGUAGE_CODE_MO = 341;</code>
     */
    ISO_LANGUAGE_CODE_MO(341),
    /**
     * <code>ISO_LANGUAGE_CODE_CPP = 342;</code>
     */
    ISO_LANGUAGE_CODE_CPP(342),
    /**
     * <code>ISO_LANGUAGE_CODE_SPA = 343;</code>
     */
    ISO_LANGUAGE_CODE_SPA(343),
    /**
     * <code>ISO_LANGUAGE_CODE_MR = 344;</code>
     */
    ISO_LANGUAGE_CODE_MR(344),
    /**
     * <code>ISO_LANGUAGE_CODE_MS = 345;</code>
     */
    ISO_LANGUAGE_CODE_MS(345),
    /**
     * <code>ISO_LANGUAGE_CODE_MT = 346;</code>
     */
    ISO_LANGUAGE_CODE_MT(346),
    /**
     * <code>ISO_LANGUAGE_CODE_ALT = 347;</code>
     */
    ISO_LANGUAGE_CODE_ALT(347),
    /**
     * <code>ISO_LANGUAGE_CODE_BNT = 348;</code>
     */
    ISO_LANGUAGE_CODE_BNT(348),
    /**
     * <code>ISO_LANGUAGE_CODE_MY = 349;</code>
     */
    ISO_LANGUAGE_CODE_MY(349),
    /**
     * <code>ISO_LANGUAGE_CODE_MDF = 350;</code>
     */
    ISO_LANGUAGE_CODE_MDF(350),
    /**
     * <code>ISO_LANGUAGE_CODE_DSB = 351;</code>
     */
    ISO_LANGUAGE_CODE_DSB(351),
    /**
     * <code>ISO_LANGUAGE_CODE_NA = 352;</code>
     */
    ISO_LANGUAGE_CODE_NA(352),
    /**
     * <code>ISO_LANGUAGE_CODE_NB = 353;</code>
     */
    ISO_LANGUAGE_CODE_NB(353),
    /**
     * <code>ISO_LANGUAGE_CODE_BOD = 354;</code>
     */
    ISO_LANGUAGE_CODE_BOD(354),
    /**
     * <code>ISO_LANGUAGE_CODE_ND = 355;</code>
     */
    ISO_LANGUAGE_CODE_ND(355),
    /**
     * <code>ISO_LANGUAGE_CODE_NE = 356;</code>
     */
    ISO_LANGUAGE_CODE_NE(356),
    /**
     * <code>ISO_LANGUAGE_CODE_NG = 357;</code>
     */
    ISO_LANGUAGE_CODE_NG(357),
    /**
     * <code>ISO_LANGUAGE_CODE_MDR = 358;</code>
     */
    ISO_LANGUAGE_CODE_MDR(358),
    /**
     * <code>ISO_LANGUAGE_CODE_AMH = 359;</code>
     */
    ISO_LANGUAGE_CODE_AMH(359),
    /**
     * <code>ISO_LANGUAGE_CODE_NL = 360;</code>
     */
    ISO_LANGUAGE_CODE_NL(360),
    /**
     * <code>ISO_LANGUAGE_CODE_NN = 361;</code>
     */
    ISO_LANGUAGE_CODE_NN(361),
    /**
     * <code>ISO_LANGUAGE_CODE_NO = 362;</code>
     */
    ISO_LANGUAGE_CODE_NO(362),
    /**
     * <code>ISO_LANGUAGE_CODE_EUS = 363;</code>
     */
    ISO_LANGUAGE_CODE_EUS(363),
    /**
     * <code>ISO_LANGUAGE_CODE_NR = 364;</code>
     */
    ISO_LANGUAGE_CODE_NR(364),
    /**
     * <code>ISO_LANGUAGE_CODE_ROA = 365;</code>
     */
    ISO_LANGUAGE_CODE_ROA(365),
    /**
     * <code>ISO_LANGUAGE_CODE_BOS = 366;</code>
     */
    ISO_LANGUAGE_CODE_BOS(366),
    /**
     * <code>ISO_LANGUAGE_CODE_NV = 367;</code>
     */
    ISO_LANGUAGE_CODE_NV(367),
    /**
     * <code>ISO_LANGUAGE_CODE_ROH = 368;</code>
     */
    ISO_LANGUAGE_CODE_ROH(368),
    /**
     * <code>ISO_LANGUAGE_CODE_SQI = 369;</code>
     */
    ISO_LANGUAGE_CODE_SQI(369),
    /**
     * <code>ISO_LANGUAGE_CODE_KAA = 370;</code>
     */
    ISO_LANGUAGE_CODE_KAA(370),
    /**
     * <code>ISO_LANGUAGE_CODE_NY = 371;</code>
     */
    ISO_LANGUAGE_CODE_NY(371),
    /**
     * <code>ISO_LANGUAGE_CODE_TSI = 372;</code>
     */
    ISO_LANGUAGE_CODE_TSI(372),
    /**
     * <code>ISO_LANGUAGE_CODE_KAC = 373;</code>
     */
    ISO_LANGUAGE_CODE_KAC(373),
    /**
     * <code>ISO_LANGUAGE_CODE_KAB = 374;</code>
     */
    ISO_LANGUAGE_CODE_KAB(374),
    /**
     * <code>ISO_LANGUAGE_CODE_TSN = 375;</code>
     */
    ISO_LANGUAGE_CODE_TSN(375),
    /**
     * <code>ISO_LANGUAGE_CODE_RON = 376;</code>
     */
    ISO_LANGUAGE_CODE_RON(376),
    /**
     * <code>ISO_LANGUAGE_CODE_TSO = 377;</code>
     */
    ISO_LANGUAGE_CODE_TSO(377),
    /**
     * <code>ISO_LANGUAGE_CODE_ROM = 378;</code>
     */
    ISO_LANGUAGE_CODE_ROM(378),
    /**
     * <code>ISO_LANGUAGE_CODE_OC = 379;</code>
     */
    ISO_LANGUAGE_CODE_OC(379),
    /**
     * <code>ISO_LANGUAGE_CODE_KAM = 380;</code>
     */
    ISO_LANGUAGE_CODE_KAM(380),
    /**
     * <code>ISO_LANGUAGE_CODE_CRE = 381;</code>
     */
    ISO_LANGUAGE_CODE_CRE(381),
    /**
     * <code>ISO_LANGUAGE_CODE_KAL = 382;</code>
     */
    ISO_LANGUAGE_CODE_KAL(382),
    /**
     * <code>ISO_LANGUAGE_CODE_MEN = 383;</code>
     */
    ISO_LANGUAGE_CODE_MEN(383),
    /**
     * <code>ISO_LANGUAGE_CODE_CRH = 384;</code>
     */
    ISO_LANGUAGE_CODE_CRH(384),
    /**
     * <code>ISO_LANGUAGE_CODE_KAN = 385;</code>
     */
    ISO_LANGUAGE_CODE_KAN(385),
    /**
     * <code>ISO_LANGUAGE_CODE_OJ = 386;</code>
     */
    ISO_LANGUAGE_CODE_OJ(386),
    /**
     * <code>ISO_LANGUAGE_CODE_ANG = 387;</code>
     */
    ISO_LANGUAGE_CODE_ANG(387),
    /**
     * <code>ISO_LANGUAGE_CODE_KAS = 388;</code>
     */
    ISO_LANGUAGE_CODE_KAS(388),
    /**
     * <code>ISO_LANGUAGE_CODE_KAR = 389;</code>
     */
    ISO_LANGUAGE_CODE_KAR(389),
    /**
     * <code>ISO_LANGUAGE_CODE_KAU = 390;</code>
     */
    ISO_LANGUAGE_CODE_KAU(390),
    /**
     * <code>ISO_LANGUAGE_CODE_OM = 391;</code>
     */
    ISO_LANGUAGE_CODE_OM(391),
    /**
     * <code>ISO_LANGUAGE_CODE_KAT = 392;</code>
     */
    ISO_LANGUAGE_CODE_KAT(392),
    /**
     * <code>ISO_LANGUAGE_CODE_CRP = 393;</code>
     */
    ISO_LANGUAGE_CODE_CRP(393),
    /**
     * <code>ISO_LANGUAGE_CODE_KAW = 394;</code>
     */
    ISO_LANGUAGE_CODE_KAW(394),
    /**
     * <code>ISO_LANGUAGE_CODE_ANP = 395;</code>
     */
    ISO_LANGUAGE_CODE_ANP(395),
    /**
     * <code>ISO_LANGUAGE_CODE_OR = 396;</code>
     */
    ISO_LANGUAGE_CODE_OR(396),
    /**
     * <code>ISO_LANGUAGE_CODE_OS = 397;</code>
     */
    ISO_LANGUAGE_CODE_OS(397),
    /**
     * <code>ISO_LANGUAGE_CODE_SRD = 398;</code>
     */
    ISO_LANGUAGE_CODE_SRD(398),
    /**
     * <code>ISO_LANGUAGE_CODE_KAZ = 399;</code>
     */
    ISO_LANGUAGE_CODE_KAZ(399),
    /**
     * <code>ISO_LANGUAGE_CODE_PLI = 400;</code>
     */
    ISO_LANGUAGE_CODE_PLI(400),
    /**
     * <code>ISO_LANGUAGE_CODE_KBD = 401;</code>
     */
    ISO_LANGUAGE_CODE_KBD(401),
    /**
     * <code>ISO_LANGUAGE_CODE_SRN = 402;</code>
     */
    ISO_LANGUAGE_CODE_SRN(402),
    /**
     * <code>ISO_LANGUAGE_CODE_OJI = 403;</code>
     */
    ISO_LANGUAGE_CODE_OJI(403),
    /**
     * <code>ISO_LANGUAGE_CODE_SRP = 404;</code>
     */
    ISO_LANGUAGE_CODE_SRP(404),
    /**
     * <code>ISO_LANGUAGE_CODE_PA = 405;</code>
     */
    ISO_LANGUAGE_CODE_PA(405),
    /**
     * <code>ISO_LANGUAGE_CODE_DUA = 406;</code>
     */
    ISO_LANGUAGE_CODE_DUA(406),
    /**
     * <code>ISO_LANGUAGE_CODE_EWE = 407;</code>
     */
    ISO_LANGUAGE_CODE_EWE(407),
    /**
     * <code>ISO_LANGUAGE_CODE_SRR = 408;</code>
     */
    ISO_LANGUAGE_CODE_SRR(408),
    /**
     * <code>ISO_LANGUAGE_CODE_CSB = 409;</code>
     */
    ISO_LANGUAGE_CODE_CSB(409),
    /**
     * <code>ISO_LANGUAGE_CODE_PI = 410;</code>
     */
    ISO_LANGUAGE_CODE_PI(410),
    /**
     * <code>ISO_LANGUAGE_CODE_PL = 411;</code>
     */
    ISO_LANGUAGE_CODE_PL(411),
    /**
     * <code>ISO_LANGUAGE_CODE_EWO = 412;</code>
     */
    ISO_LANGUAGE_CODE_EWO(412),
    /**
     * <code>ISO_LANGUAGE_CODE_DUM = 413;</code>
     */
    ISO_LANGUAGE_CODE_DUM(413),
    /**
     * <code>ISO_LANGUAGE_CODE_SSA = 414;</code>
     */
    ISO_LANGUAGE_CODE_SSA(414),
    /**
     * <code>ISO_LANGUAGE_CODE_PS = 415;</code>
     */
    ISO_LANGUAGE_CODE_PS(415),
    /**
     * <code>ISO_LANGUAGE_CODE_PT = 416;</code>
     */
    ISO_LANGUAGE_CODE_PT(416),
    /**
     * <code>ISO_LANGUAGE_CODE_MGA = 417;</code>
     */
    ISO_LANGUAGE_CODE_MGA(417),
    /**
     * <code>ISO_LANGUAGE_CODE_NIA = 418;</code>
     */
    ISO_LANGUAGE_CODE_NIA(418),
    /**
     * <code>ISO_LANGUAGE_CODE_NIC = 419;</code>
     */
    ISO_LANGUAGE_CODE_NIC(419),
    /**
     * <code>ISO_LANGUAGE_CODE_TUK = 420;</code>
     */
    ISO_LANGUAGE_CODE_TUK(420),
    /**
     * <code>ISO_LANGUAGE_CODE_TUM = 421;</code>
     */
    ISO_LANGUAGE_CODE_TUM(421),
    /**
     * <code>ISO_LANGUAGE_CODE_TUP = 422;</code>
     */
    ISO_LANGUAGE_CODE_TUP(422),
    /**
     * <code>ISO_LANGUAGE_CODE_TUR = 423;</code>
     */
    ISO_LANGUAGE_CODE_TUR(423),
    /**
     * <code>ISO_LANGUAGE_CODE_BRA = 424;</code>
     */
    ISO_LANGUAGE_CODE_BRA(424),
    /**
     * <code>ISO_LANGUAGE_CODE_TUT = 425;</code>
     */
    ISO_LANGUAGE_CODE_TUT(425),
    /**
     * <code>ISO_LANGUAGE_CODE_APA = 426;</code>
     */
    ISO_LANGUAGE_CODE_APA(426),
    /**
     * <code>ISO_LANGUAGE_CODE_BRE = 427;</code>
     */
    ISO_LANGUAGE_CODE_BRE(427),
    /**
     * <code>ISO_LANGUAGE_CODE_SSW = 428;</code>
     */
    ISO_LANGUAGE_CODE_SSW(428),
    /**
     * <code>ISO_LANGUAGE_CODE_NIU = 429;</code>
     */
    ISO_LANGUAGE_CODE_NIU(429),
    /**
     * <code>ISO_LANGUAGE_CODE_JAV = 430;</code>
     */
    ISO_LANGUAGE_CODE_JAV(430),
    /**
     * <code>ISO_LANGUAGE_CODE_LEZ = 431;</code>
     */
    ISO_LANGUAGE_CODE_LEZ(431),
    /**
     * <code>ISO_LANGUAGE_CODE_QU = 432;</code>
     */
    ISO_LANGUAGE_CODE_QU(432),
    /**
     * <code>ISO_LANGUAGE_CODE_ZAP = 433;</code>
     */
    ISO_LANGUAGE_CODE_ZAP(433),
    /**
     * <code>ISO_LANGUAGE_CODE_TVL = 434;</code>
     */
    ISO_LANGUAGE_CODE_TVL(434),
    /**
     * <code>ISO_LANGUAGE_CODE_JBO = 435;</code>
     */
    ISO_LANGUAGE_CODE_JBO(435),
    /**
     * <code>ISO_LANGUAGE_CODE_RM = 436;</code>
     */
    ISO_LANGUAGE_CODE_RM(436),
    /**
     * <code>ISO_LANGUAGE_CODE_RN = 437;</code>
     */
    ISO_LANGUAGE_CODE_RN(437),
    /**
     * <code>ISO_LANGUAGE_CODE_RO = 438;</code>
     */
    ISO_LANGUAGE_CODE_RO(438),
    /**
     * <code>ISO_LANGUAGE_CODE_CUS = 439;</code>
     */
    ISO_LANGUAGE_CODE_CUS(439),
    /**
     * <code>ISO_LANGUAGE_CODE_QQA = 440;</code>
     */
    ISO_LANGUAGE_CODE_QQA(440),
    /**
     * <code>ISO_LANGUAGE_CODE_QQC = 441;</code>
     */
    ISO_LANGUAGE_CODE_QQC(441),
    /**
     * <code>ISO_LANGUAGE_CODE_RU = 442;</code>
     */
    ISO_LANGUAGE_CODE_RU(442),
    /**
     * <code>ISO_LANGUAGE_CODE_QQB = 443;</code>
     */
    ISO_LANGUAGE_CODE_QQB(443),
    /**
     * <code>ISO_LANGUAGE_CODE_QQE = 444;</code>
     */
    ISO_LANGUAGE_CODE_QQE(444),
    /**
     * <code>ISO_LANGUAGE_CODE_RW = 445;</code>
     */
    ISO_LANGUAGE_CODE_RW(445),
    /**
     * <code>ISO_LANGUAGE_CODE_QQD = 446;</code>
     */
    ISO_LANGUAGE_CODE_QQD(446),
    /**
     * <code>ISO_LANGUAGE_CODE_ZBL = 447;</code>
     */
    ISO_LANGUAGE_CODE_ZBL(447),
    /**
     * <code>ISO_LANGUAGE_CODE_MIC = 448;</code>
     */
    ISO_LANGUAGE_CODE_MIC(448),
    /**
     * <code>ISO_LANGUAGE_CODE_QQG = 449;</code>
     */
    ISO_LANGUAGE_CODE_QQG(449),
    /**
     * <code>ISO_LANGUAGE_CODE_TWI = 450;</code>
     */
    ISO_LANGUAGE_CODE_TWI(450),
    /**
     * <code>ISO_LANGUAGE_CODE_QQF = 451;</code>
     */
    ISO_LANGUAGE_CODE_QQF(451),
    /**
     * <code>ISO_LANGUAGE_CODE_QQI = 452;</code>
     */
    ISO_LANGUAGE_CODE_QQI(452),
    /**
     * <code>ISO_LANGUAGE_CODE_SUK = 453;</code>
     */
    ISO_LANGUAGE_CODE_SUK(453),
    /**
     * <code>ISO_LANGUAGE_CODE_QQH = 454;</code>
     */
    ISO_LANGUAGE_CODE_QQH(454),
    /**
     * <code>ISO_LANGUAGE_CODE_QQJ = 455;</code>
     */
    ISO_LANGUAGE_CODE_QQJ(455),
    /**
     * <code>ISO_LANGUAGE_CODE_POL = 456;</code>
     */
    ISO_LANGUAGE_CODE_POL(456),
    /**
     * <code>ISO_LANGUAGE_CODE_SUN = 457;</code>
     */
    ISO_LANGUAGE_CODE_SUN(457),
    /**
     * <code>ISO_LANGUAGE_CODE_SA = 458;</code>
     */
    ISO_LANGUAGE_CODE_SA(458),
    /**
     * <code>ISO_LANGUAGE_CODE_PON = 459;</code>
     */
    ISO_LANGUAGE_CODE_PON(459),
    /**
     * <code>ISO_LANGUAGE_CODE_SC = 460;</code>
     */
    ISO_LANGUAGE_CODE_SC(460),
    /**
     * <code>ISO_LANGUAGE_CODE_SUS = 461;</code>
     */
    ISO_LANGUAGE_CODE_SUS(461),
    /**
     * <code>ISO_LANGUAGE_CODE_ARA = 462;</code>
     */
    ISO_LANGUAGE_CODE_ARA(462),
    /**
     * <code>ISO_LANGUAGE_CODE_SD = 463;</code>
     */
    ISO_LANGUAGE_CODE_SD(463),
    /**
     * <code>ISO_LANGUAGE_CODE_POR = 464;</code>
     */
    ISO_LANGUAGE_CODE_POR(464),
    /**
     * <code>ISO_LANGUAGE_CODE_SE = 465;</code>
     */
    ISO_LANGUAGE_CODE_SE(465),
    /**
     * <code>ISO_LANGUAGE_CODE_ARC = 466;</code>
     */
    ISO_LANGUAGE_CODE_ARC(466),
    /**
     * <code>ISO_LANGUAGE_CODE_MIN = 467;</code>
     */
    ISO_LANGUAGE_CODE_MIN(467),
    /**
     * <code>ISO_LANGUAGE_CODE_SG = 468;</code>
     */
    ISO_LANGUAGE_CODE_SG(468),
    /**
     * <code>ISO_LANGUAGE_CODE_SI = 469;</code>
     */
    ISO_LANGUAGE_CODE_SI(469),
    /**
     * <code>ISO_LANGUAGE_CODE_MIS = 470;</code>
     */
    ISO_LANGUAGE_CODE_MIS(470),
    /**
     * <code>ISO_LANGUAGE_CODE_ARG = 471;</code>
     */
    ISO_LANGUAGE_CODE_ARG(471),
    /**
     * <code>ISO_LANGUAGE_CODE_SUX = 472;</code>
     */
    ISO_LANGUAGE_CODE_SUX(472),
    /**
     * <code>ISO_LANGUAGE_CODE_SK = 473;</code>
     */
    ISO_LANGUAGE_CODE_SK(473),
    /**
     * <code>ISO_LANGUAGE_CODE_BTK = 474;</code>
     */
    ISO_LANGUAGE_CODE_BTK(474),
    /**
     * <code>ISO_LANGUAGE_CODE_SL = 475;</code>
     */
    ISO_LANGUAGE_CODE_SL(475),
    /**
     * <code>ISO_LANGUAGE_CODE_SM = 476;</code>
     */
    ISO_LANGUAGE_CODE_SM(476),
    /**
     * <code>ISO_LANGUAGE_CODE_SN = 477;</code>
     */
    ISO_LANGUAGE_CODE_SN(477),
    /**
     * <code>ISO_LANGUAGE_CODE_SO = 478;</code>
     */
    ISO_LANGUAGE_CODE_SO(478),
    /**
     * <code>ISO_LANGUAGE_CODE_UZB = 479;</code>
     */
    ISO_LANGUAGE_CODE_UZB(479),
    /**
     * <code>ISO_LANGUAGE_CODE_ARN = 480;</code>
     */
    ISO_LANGUAGE_CODE_ARN(480),
    /**
     * <code>ISO_LANGUAGE_CODE_SQ = 481;</code>
     */
    ISO_LANGUAGE_CODE_SQ(481),
    /**
     * <code>ISO_LANGUAGE_CODE_ARP = 482;</code>
     */
    ISO_LANGUAGE_CODE_ARP(482),
    /**
     * <code>ISO_LANGUAGE_CODE_SR = 483;</code>
     */
    ISO_LANGUAGE_CODE_SR(483),
    /**
     * <code>ISO_LANGUAGE_CODE_SS = 484;</code>
     */
    ISO_LANGUAGE_CODE_SS(484),
    /**
     * <code>ISO_LANGUAGE_CODE_ST = 485;</code>
     */
    ISO_LANGUAGE_CODE_ST(485),
    /**
     * <code>ISO_LANGUAGE_CODE_SU = 486;</code>
     */
    ISO_LANGUAGE_CODE_SU(486),
    /**
     * <code>ISO_LANGUAGE_CODE_ART = 487;</code>
     */
    ISO_LANGUAGE_CODE_ART(487),
    /**
     * <code>ISO_LANGUAGE_CODE_SV = 488;</code>
     */
    ISO_LANGUAGE_CODE_SV(488),
    /**
     * <code>ISO_LANGUAGE_CODE_SW = 489;</code>
     */
    ISO_LANGUAGE_CODE_SW(489),
    /**
     * <code>ISO_LANGUAGE_CODE_YAO = 490;</code>
     */
    ISO_LANGUAGE_CODE_YAO(490),
    /**
     * <code>ISO_LANGUAGE_CODE_NLD = 491;</code>
     */
    ISO_LANGUAGE_CODE_NLD(491),
    /**
     * <code>ISO_LANGUAGE_CODE_ARW = 492;</code>
     */
    ISO_LANGUAGE_CODE_ARW(492),
    /**
     * <code>ISO_LANGUAGE_CODE_IBA = 493;</code>
     */
    ISO_LANGUAGE_CODE_IBA(493),
    /**
     * <code>ISO_LANGUAGE_CODE_YAP = 494;</code>
     */
    ISO_LANGUAGE_CODE_YAP(494),
    /**
     * <code>ISO_LANGUAGE_CODE_TA = 495;</code>
     */
    ISO_LANGUAGE_CODE_TA(495),
    /**
     * <code>ISO_LANGUAGE_CODE_BUA = 496;</code>
     */
    ISO_LANGUAGE_CODE_BUA(496),
    /**
     * <code>ISO_LANGUAGE_CODE_TE = 497;</code>
     */
    ISO_LANGUAGE_CODE_TE(497),
    /**
     * <code>ISO_LANGUAGE_CODE_TG = 498;</code>
     */
    ISO_LANGUAGE_CODE_TG(498),
    /**
     * <code>ISO_LANGUAGE_CODE_TH = 499;</code>
     */
    ISO_LANGUAGE_CODE_TH(499),
    /**
     * <code>ISO_LANGUAGE_CODE_TI = 500;</code>
     */
    ISO_LANGUAGE_CODE_TI(500),
    /**
     * <code>ISO_LANGUAGE_CODE_BUG = 501;</code>
     */
    ISO_LANGUAGE_CODE_BUG(501),
    /**
     * <code>ISO_LANGUAGE_CODE_IBO = 502;</code>
     */
    ISO_LANGUAGE_CODE_IBO(502),
    /**
     * <code>ISO_LANGUAGE_CODE_TK = 503;</code>
     */
    ISO_LANGUAGE_CODE_TK(503),
    /**
     * <code>ISO_LANGUAGE_CODE_BUL = 504;</code>
     */
    ISO_LANGUAGE_CODE_BUL(504),
    /**
     * <code>ISO_LANGUAGE_CODE_TL = 505;</code>
     */
    ISO_LANGUAGE_CODE_TL(505),
    /**
     * <code>ISO_LANGUAGE_CODE_ASM = 506;</code>
     */
    ISO_LANGUAGE_CODE_ASM(506),
    /**
     * <code>ISO_LANGUAGE_CODE_TN = 507;</code>
     */
    ISO_LANGUAGE_CODE_TN(507),
    /**
     * <code>ISO_LANGUAGE_CODE_TO = 508;</code>
     */
    ISO_LANGUAGE_CODE_TO(508),
    /**
     * <code>ISO_LANGUAGE_CODE_SWA = 509;</code>
     */
    ISO_LANGUAGE_CODE_SWA(509),
    /**
     * <code>ISO_LANGUAGE_CODE_TR = 510;</code>
     */
    ISO_LANGUAGE_CODE_TR(510),
    /**
     * <code>ISO_LANGUAGE_CODE_TS = 511;</code>
     */
    ISO_LANGUAGE_CODE_TS(511),
    /**
     * <code>ISO_LANGUAGE_CODE_SWE = 512;</code>
     */
    ISO_LANGUAGE_CODE_SWE(512),
    /**
     * <code>ISO_LANGUAGE_CODE_TT = 513;</code>
     */
    ISO_LANGUAGE_CODE_TT(513),
    /**
     * <code>ISO_LANGUAGE_CODE_DYU = 514;</code>
     */
    ISO_LANGUAGE_CODE_DYU(514),
    /**
     * <code>ISO_LANGUAGE_CODE_TW = 515;</code>
     */
    ISO_LANGUAGE_CODE_TW(515),
    /**
     * <code>ISO_LANGUAGE_CODE_AST = 516;</code>
     */
    ISO_LANGUAGE_CODE_AST(516),
    /**
     * <code>ISO_LANGUAGE_CODE_TY = 517;</code>
     */
    ISO_LANGUAGE_CODE_TY(517),
    /**
     * <code>ISO_LANGUAGE_CODE_MKD = 518;</code>
     */
    ISO_LANGUAGE_CODE_MKD(518),
    /**
     * <code>ISO_LANGUAGE_CODE_RUN = 519;</code>
     */
    ISO_LANGUAGE_CODE_RUN(519),
    /**
     * <code>ISO_LANGUAGE_CODE_MKH = 520;</code>
     */
    ISO_LANGUAGE_CODE_MKH(520),
    /**
     * <code>ISO_LANGUAGE_CODE_RUP = 521;</code>
     */
    ISO_LANGUAGE_CODE_RUP(521),
    /**
     * <code>ISO_LANGUAGE_CODE_LIN = 522;</code>
     */
    ISO_LANGUAGE_CODE_LIN(522),
    /**
     * <code>ISO_LANGUAGE_CODE_TYV = 523;</code>
     */
    ISO_LANGUAGE_CODE_TYV(523),
    /**
     * <code>ISO_LANGUAGE_CODE_LIM = 524;</code>
     */
    ISO_LANGUAGE_CODE_LIM(524),
    /**
     * <code>ISO_LANGUAGE_CODE_RUS = 525;</code>
     */
    ISO_LANGUAGE_CODE_RUS(525),
    /**
     * <code>ISO_LANGUAGE_CODE_HAI = 526;</code>
     */
    ISO_LANGUAGE_CODE_HAI(526),
    /**
     * <code>ISO_LANGUAGE_CODE_UG = 527;</code>
     */
    ISO_LANGUAGE_CODE_UG(527),
    /**
     * <code>ISO_LANGUAGE_CODE_ATH = 528;</code>
     */
    ISO_LANGUAGE_CODE_ATH(528),
    /**
     * <code>ISO_LANGUAGE_CODE_LIT = 529;</code>
     */
    ISO_LANGUAGE_CODE_LIT(529),
    /**
     * <code>ISO_LANGUAGE_CODE_UK = 530;</code>
     */
    ISO_LANGUAGE_CODE_UK(530),
    /**
     * <code>ISO_LANGUAGE_CODE_DZO = 531;</code>
     */
    ISO_LANGUAGE_CODE_DZO(531),
    /**
     * <code>ISO_LANGUAGE_CODE_HAT = 532;</code>
     */
    ISO_LANGUAGE_CODE_HAT(532),
    /**
     * <code>ISO_LANGUAGE_CODE_HAU = 533;</code>
     */
    ISO_LANGUAGE_CODE_HAU(533),
    /**
     * <code>ISO_LANGUAGE_CODE_UR = 534;</code>
     */
    ISO_LANGUAGE_CODE_UR(534),
    /**
     * <code>ISO_LANGUAGE_CODE_PRA = 535;</code>
     */
    ISO_LANGUAGE_CODE_PRA(535),
    /**
     * <code>ISO_LANGUAGE_CODE_HAW = 536;</code>
     */
    ISO_LANGUAGE_CODE_HAW(536),
    /**
     * <code>ISO_LANGUAGE_CODE_XAL = 537;</code>
     */
    ISO_LANGUAGE_CODE_XAL(537),
    /**
     * <code>ISO_LANGUAGE_CODE_ZEN = 538;</code>
     */
    ISO_LANGUAGE_CODE_ZEN(538),
    /**
     * <code>ISO_LANGUAGE_CODE_UZ = 539;</code>
     */
    ISO_LANGUAGE_CODE_UZ(539),
    /**
     * <code>ISO_LANGUAGE_CODE_KHA = 540;</code>
     */
    ISO_LANGUAGE_CODE_KHA(540),
    /**
     * <code>ISO_LANGUAGE_CODE_MLG = 541;</code>
     */
    ISO_LANGUAGE_CODE_MLG(541),
    /**
     * <code>ISO_LANGUAGE_CODE_PRO = 542;</code>
     */
    ISO_LANGUAGE_CODE_PRO(542),
    /**
     * <code>ISO_LANGUAGE_CODE_KHI = 543;</code>
     */
    ISO_LANGUAGE_CODE_KHI(543),
    /**
     * <code>ISO_LANGUAGE_CODE_NNO = 544;</code>
     */
    ISO_LANGUAGE_CODE_NNO(544),
    /**
     * <code>ISO_LANGUAGE_CODE_VE = 545;</code>
     */
    ISO_LANGUAGE_CODE_VE(545),
    /**
     * <code>ISO_LANGUAGE_CODE_KHM = 546;</code>
     */
    ISO_LANGUAGE_CODE_KHM(546),
    /**
     * <code>ISO_LANGUAGE_CODE_VI = 547;</code>
     */
    ISO_LANGUAGE_CODE_VI(547),
    /**
     * <code>ISO_LANGUAGE_CODE_KHO = 548;</code>
     */
    ISO_LANGUAGE_CODE_KHO(548),
    /**
     * <code>ISO_LANGUAGE_CODE_MLT = 549;</code>
     */
    ISO_LANGUAGE_CODE_MLT(549),
    /**
     * <code>ISO_LANGUAGE_CODE_IDO = 550;</code>
     */
    ISO_LANGUAGE_CODE_IDO(550),
    /**
     * <code>ISO_LANGUAGE_CODE_CYM = 551;</code>
     */
    ISO_LANGUAGE_CODE_CYM(551),
    /**
     * <code>ISO_LANGUAGE_CODE_VO = 552;</code>
     */
    ISO_LANGUAGE_CODE_VO(552),
    /**
     * <code>ISO_LANGUAGE_CODE_SYC = 553;</code>
     */
    ISO_LANGUAGE_CODE_SYC(553),
    /**
     * <code>ISO_LANGUAGE_CODE_AUS = 554;</code>
     */
    ISO_LANGUAGE_CODE_AUS(554),
    /**
     * <code>ISO_LANGUAGE_CODE_NOB = 555;</code>
     */
    ISO_LANGUAGE_CODE_NOB(555),
    /**
     * <code>ISO_LANGUAGE_CODE_QUE = 556;</code>
     */
    ISO_LANGUAGE_CODE_QUE(556),
    /**
     * <code>ISO_LANGUAGE_CODE_GAA = 557;</code>
     */
    ISO_LANGUAGE_CODE_GAA(557),
    /**
     * <code>ISO_LANGUAGE_CODE_NOG = 558;</code>
     */
    ISO_LANGUAGE_CODE_NOG(558),
    /**
     * <code>ISO_LANGUAGE_CODE_WA = 559;</code>
     */
    ISO_LANGUAGE_CODE_WA(559),
    /**
     * <code>ISO_LANGUAGE_CODE_KIK = 560;</code>
     */
    ISO_LANGUAGE_CODE_KIK(560),
    /**
     * <code>ISO_LANGUAGE_CODE_NON = 561;</code>
     */
    ISO_LANGUAGE_CODE_NON(561),
    /**
     * <code>ISO_LANGUAGE_CODE_AVA = 562;</code>
     */
    ISO_LANGUAGE_CODE_AVA(562),
    /**
     * <code>ISO_LANGUAGE_CODE_SYR = 563;</code>
     */
    ISO_LANGUAGE_CODE_SYR(563),
    /**
     * <code>ISO_LANGUAGE_CODE_NOR = 564;</code>
     */
    ISO_LANGUAGE_CODE_NOR(564),
    /**
     * <code>ISO_LANGUAGE_CODE_AVE = 565;</code>
     */
    ISO_LANGUAGE_CODE_AVE(565),
    /**
     * <code>ISO_LANGUAGE_CODE_KIN = 566;</code>
     */
    ISO_LANGUAGE_CODE_KIN(566),
    /**
     * <code>ISO_LANGUAGE_CODE_KIR = 567;</code>
     */
    ISO_LANGUAGE_CODE_KIR(567),
    /**
     * <code>ISO_LANGUAGE_CODE_WO = 568;</code>
     */
    ISO_LANGUAGE_CODE_WO(568),
    /**
     * <code>ISO_LANGUAGE_CODE_ZGH = 569;</code>
     */
    ISO_LANGUAGE_CODE_ZGH(569),
    /**
     * <code>ISO_LANGUAGE_CODE_GAY = 570;</code>
     */
    ISO_LANGUAGE_CODE_GAY(570),
    /**
     * <code>ISO_LANGUAGE_CODE_WAK = 571;</code>
     */
    ISO_LANGUAGE_CODE_WAK(571),
    /**
     * <code>ISO_LANGUAGE_CODE_MNC = 572;</code>
     */
    ISO_LANGUAGE_CODE_MNC(572),
    /**
     * <code>ISO_LANGUAGE_CODE_WAL = 573;</code>
     */
    ISO_LANGUAGE_CODE_WAL(573),
    /**
     * <code>ISO_LANGUAGE_CODE_ORI = 574;</code>
     */
    ISO_LANGUAGE_CODE_ORI(574),
    /**
     * <code>ISO_LANGUAGE_CODE_GBA = 575;</code>
     */
    ISO_LANGUAGE_CODE_GBA(575),
    /**
     * <code>ISO_LANGUAGE_CODE_WAS = 576;</code>
     */
    ISO_LANGUAGE_CODE_WAS(576),
    /**
     * <code>ISO_LANGUAGE_CODE_MNI = 577;</code>
     */
    ISO_LANGUAGE_CODE_MNI(577),
    /**
     * <code>ISO_LANGUAGE_CODE_WAR = 578;</code>
     */
    ISO_LANGUAGE_CODE_WAR(578),
    /**
     * <code>ISO_LANGUAGE_CODE_AWA = 579;</code>
     */
    ISO_LANGUAGE_CODE_AWA(579),
    /**
     * <code>ISO_LANGUAGE_CODE_ORM = 580;</code>
     */
    ISO_LANGUAGE_CODE_ORM(580),
    /**
     * <code>ISO_LANGUAGE_CODE_MNO = 581;</code>
     */
    ISO_LANGUAGE_CODE_MNO(581),
    /**
     * <code>ISO_LANGUAGE_CODE_XH = 582;</code>
     */
    ISO_LANGUAGE_CODE_XH(582),
    /**
     * <code>ISO_LANGUAGE_CODE_ZHA = 583;</code>
     */
    ISO_LANGUAGE_CODE_ZHA(583),
    /**
     * <code>ISO_LANGUAGE_CODE_BYN = 584;</code>
     */
    ISO_LANGUAGE_CODE_BYN(584),
    /**
     * <code>ISO_LANGUAGE_CODE_OSA = 585;</code>
     */
    ISO_LANGUAGE_CODE_OSA(585),
    /**
     * <code>ISO_LANGUAGE_CODE_ZHO = 586;</code>
     */
    ISO_LANGUAGE_CODE_ZHO(586),
    /**
     * <code>ISO_LANGUAGE_CODE_HEB = 587;</code>
     */
    ISO_LANGUAGE_CODE_HEB(587),
    /**
     * <code>ISO_LANGUAGE_CODE_MOH = 588;</code>
     */
    ISO_LANGUAGE_CODE_MOH(588),
    /**
     * <code>ISO_LANGUAGE_CODE_MON = 589;</code>
     */
    ISO_LANGUAGE_CODE_MON(589),
    /**
     * <code>ISO_LANGUAGE_CODE_NQO = 590;</code>
     */
    ISO_LANGUAGE_CODE_NQO(590),
    /**
     * <code>ISO_LANGUAGE_CODE_OSS = 591;</code>
     */
    ISO_LANGUAGE_CODE_OSS(591),
    /**
     * <code>ISO_LANGUAGE_CODE_PUS = 592;</code>
     */
    ISO_LANGUAGE_CODE_PUS(592),
    /**
     * <code>ISO_LANGUAGE_CODE_YI = 593;</code>
     */
    ISO_LANGUAGE_CODE_YI(593),
    /**
     * <code>ISO_LANGUAGE_CODE_MOS = 594;</code>
     */
    ISO_LANGUAGE_CODE_MOS(594),
    /**
     * <code>ISO_LANGUAGE_CODE_FAN = 595;</code>
     */
    ISO_LANGUAGE_CODE_FAN(595),
    /**
     * <code>ISO_LANGUAGE_CODE_HER = 596;</code>
     */
    ISO_LANGUAGE_CODE_HER(596),
    /**
     * <code>ISO_LANGUAGE_CODE_FAO = 597;</code>
     */
    ISO_LANGUAGE_CODE_FAO(597),
    /**
     * <code>ISO_LANGUAGE_CODE_YO = 598;</code>
     */
    ISO_LANGUAGE_CODE_YO(598),
    /**
     * <code>ISO_LANGUAGE_CODE_FAT = 599;</code>
     */
    ISO_LANGUAGE_CODE_FAT(599),
    /**
     * <code>ISO_LANGUAGE_CODE_FAS = 600;</code>
     */
    ISO_LANGUAGE_CODE_FAS(600),
    /**
     * <code>ISO_LANGUAGE_CODE_OTA = 601;</code>
     */
    ISO_LANGUAGE_CODE_OTA(601),
    /**
     * <code>ISO_LANGUAGE_CODE_VAI = 602;</code>
     */
    ISO_LANGUAGE_CODE_VAI(602),
    /**
     * <code>ISO_LANGUAGE_CODE_ZA = 603;</code>
     */
    ISO_LANGUAGE_CODE_ZA(603),
    /**
     * <code>ISO_LANGUAGE_CODE_OTO = 604;</code>
     */
    ISO_LANGUAGE_CODE_OTO(604),
    /**
     * <code>ISO_LANGUAGE_CODE_ZH = 605;</code>
     */
    ISO_LANGUAGE_CODE_ZH(605),
    /**
     * <code>ISO_LANGUAGE_CODE_AYM = 606;</code>
     */
    ISO_LANGUAGE_CODE_AYM(606),
    /**
     * <code>ISO_LANGUAGE_CODE_ZU = 607;</code>
     */
    ISO_LANGUAGE_CODE_ZU(607),
    /**
     * <code>ISO_LANGUAGE_CODE_KMB = 608;</code>
     */
    ISO_LANGUAGE_CODE_KMB(608),
    /**
     * <code>ISO_LANGUAGE_CODE_III = 609;</code>
     */
    ISO_LANGUAGE_CODE_III(609),
    /**
     * <code>ISO_LANGUAGE_CODE_LOL = 610;</code>
     */
    ISO_LANGUAGE_CODE_LOL(610),
    /**
     * <code>ISO_LANGUAGE_CODE_NSO = 611;</code>
     */
    ISO_LANGUAGE_CODE_NSO(611),
    /**
     * <code>ISO_LANGUAGE_CODE_AZE = 612;</code>
     */
    ISO_LANGUAGE_CODE_AZE(612),
    /**
     * <code>ISO_LANGUAGE_CODE_GEM = 613;</code>
     */
    ISO_LANGUAGE_CODE_GEM(613),
    /**
     * <code>ISO_LANGUAGE_CODE_YID = 614;</code>
     */
    ISO_LANGUAGE_CODE_YID(614),
    /**
     * <code>ISO_LANGUAGE_CODE_LOZ = 615;</code>
     */
    ISO_LANGUAGE_CODE_LOZ(615),
    /**
     * <code>ISO_LANGUAGE_CODE_GEZ = 616;</code>
     */
    ISO_LANGUAGE_CODE_GEZ(616),
    /**
     * <code>ISO_LANGUAGE_CODE_WEN = 617;</code>
     */
    ISO_LANGUAGE_CODE_WEN(617),
    /**
     * <code>ISO_LANGUAGE_CODE_MRI = 618;</code>
     */
    ISO_LANGUAGE_CODE_MRI(618),
    /**
     * <code>ISO_LANGUAGE_CODE_IJO = 619;</code>
     */
    ISO_LANGUAGE_CODE_IJO(619),
    /**
     * <code>ISO_LANGUAGE_CODE_MSA = 620;</code>
     */
    ISO_LANGUAGE_CODE_MSA(620),
    /**
     * <code>ISO_LANGUAGE_CODE_NUB = 621;</code>
     */
    ISO_LANGUAGE_CODE_NUB(621),
    /**
     * <code>ISO_LANGUAGE_CODE_XHO = 622;</code>
     */
    ISO_LANGUAGE_CODE_XHO(622),
    /**
     * <code>ISO_LANGUAGE_CODE_KOK = 623;</code>
     */
    ISO_LANGUAGE_CODE_KOK(623),
    /**
     * <code>ISO_LANGUAGE_CODE_KOM = 624;</code>
     */
    ISO_LANGUAGE_CODE_KOM(624),
    /**
     * <code>ISO_LANGUAGE_CODE_HIL = 625;</code>
     */
    ISO_LANGUAGE_CODE_HIL(625),
    /**
     * <code>ISO_LANGUAGE_CODE_KON = 626;</code>
     */
    ISO_LANGUAGE_CODE_KON(626),
    /**
     * <code>ISO_LANGUAGE_CODE_HIN = 627;</code>
     */
    ISO_LANGUAGE_CODE_HIN(627),
    /**
     * <code>ISO_LANGUAGE_CODE_HIM = 628;</code>
     */
    ISO_LANGUAGE_CODE_HIM(628),
    /**
     * <code>ISO_LANGUAGE_CODE_KOS = 629;</code>
     */
    ISO_LANGUAGE_CODE_KOS(629),
    /**
     * <code>ISO_LANGUAGE_CODE_KOR = 630;</code>
     */
    ISO_LANGUAGE_CODE_KOR(630),
    /**
     * <code>ISO_LANGUAGE_CODE_DAK = 631;</code>
     */
    ISO_LANGUAGE_CODE_DAK(631),
    /**
     * <code>ISO_LANGUAGE_CODE_DAN = 632;</code>
     */
    ISO_LANGUAGE_CODE_DAN(632),
    /**
     * <code>ISO_LANGUAGE_CODE_IKU = 633;</code>
     */
    ISO_LANGUAGE_CODE_IKU(633),
    /**
     * <code>ISO_LANGUAGE_CODE_HIT = 634;</code>
     */
    ISO_LANGUAGE_CODE_HIT(634),
    /**
     * <code>ISO_LANGUAGE_CODE_DAR = 635;</code>
     */
    ISO_LANGUAGE_CODE_DAR(635),
    /**
     * <code>ISO_LANGUAGE_CODE_TAH = 636;</code>
     */
    ISO_LANGUAGE_CODE_TAH(636),
    /**
     * <code>ISO_LANGUAGE_CODE_DAY = 637;</code>
     */
    ISO_LANGUAGE_CODE_DAY(637),
    /**
     * <code>ISO_LANGUAGE_CODE_TAI = 638;</code>
     */
    ISO_LANGUAGE_CODE_TAI(638),
    /**
     * <code>ISO_LANGUAGE_CODE_VEN = 639;</code>
     */
    ISO_LANGUAGE_CODE_VEN(639),
    /**
     * <code>ISO_LANGUAGE_CODE_TAM = 640;</code>
     */
    ISO_LANGUAGE_CODE_TAM(640),
    /**
     * <code>ISO_LANGUAGE_CODE_KPE = 641;</code>
     */
    ISO_LANGUAGE_CODE_KPE(641),
    /**
     * <code>ISO_LANGUAGE_CODE_ILE = 642;</code>
     */
    ISO_LANGUAGE_CODE_ILE(642),
    /**
     * <code>ISO_LANGUAGE_CODE_TAT = 643;</code>
     */
    ISO_LANGUAGE_CODE_TAT(643),
    /**
     * <code>ISO_LANGUAGE_CODE_ILO = 644;</code>
     */
    ISO_LANGUAGE_CODE_ILO(644),
    /**
     * <code>ISO_LANGUAGE_CODE_ZND = 645;</code>
     */
    ISO_LANGUAGE_CODE_ZND(645),
    /**
     * <code>ISO_LANGUAGE_CODE_NWC = 646;</code>
     */
    ISO_LANGUAGE_CODE_NWC(646),
    /**
     * <code>ISO_LANGUAGE_CODE_UDM = 647;</code>
     */
    ISO_LANGUAGE_CODE_UDM(647),
    /**
     * <code>ISO_LANGUAGE_CODE_MUL = 648;</code>
     */
    ISO_LANGUAGE_CODE_MUL(648),
    /**
     * <code>ISO_LANGUAGE_CODE_CAD = 649;</code>
     */
    ISO_LANGUAGE_CODE_CAD(649),
    /**
     * <code>ISO_LANGUAGE_CODE_MUN = 650;</code>
     */
    ISO_LANGUAGE_CODE_MUN(650),
    /**
     * <code>ISO_LANGUAGE_CODE_CAI = 651;</code>
     */
    ISO_LANGUAGE_CODE_CAI(651),
    /**
     * <code>ISO_LANGUAGE_CODE_MUS = 652;</code>
     */
    ISO_LANGUAGE_CODE_MUS(652),
    /**
     * <code>ISO_LANGUAGE_CODE_GIL = 653;</code>
     */
    ISO_LANGUAGE_CODE_GIL(653),
    /**
     * <code>ISO_LANGUAGE_CODE_CAR = 654;</code>
     */
    ISO_LANGUAGE_CODE_CAR(654),
    /**
     * <code>ISO_LANGUAGE_CODE_CAU = 655;</code>
     */
    ISO_LANGUAGE_CODE_CAU(655),
    /**
     * <code>ISO_LANGUAGE_CODE_CAT = 656;</code>
     */
    ISO_LANGUAGE_CODE_CAT(656),
    /**
     * <code>ISO_LANGUAGE_CODE_SAD = 657;</code>
     */
    ISO_LANGUAGE_CODE_SAD(657),
    /**
     * <code>ISO_LANGUAGE_CODE_SAG = 658;</code>
     */
    ISO_LANGUAGE_CODE_SAG(658),
    /**
     * <code>ISO_LANGUAGE_CODE_SAI = 659;</code>
     */
    ISO_LANGUAGE_CODE_SAI(659),
    /**
     * <code>ISO_LANGUAGE_CODE_SAH = 660;</code>
     */
    ISO_LANGUAGE_CODE_SAH(660),
    /**
     * <code>ISO_LANGUAGE_CODE_INA = 661;</code>
     */
    ISO_LANGUAGE_CODE_INA(661),
    /**
     * <code>ISO_LANGUAGE_CODE_KRC = 662;</code>
     */
    ISO_LANGUAGE_CODE_KRC(662),
    /**
     * <code>ISO_LANGUAGE_CODE_IND = 663;</code>
     */
    ISO_LANGUAGE_CODE_IND(663),
    /**
     * <code>ISO_LANGUAGE_CODE_SAM = 664;</code>
     */
    ISO_LANGUAGE_CODE_SAM(664),
    /**
     * <code>ISO_LANGUAGE_CODE_INC = 665;</code>
     */
    ISO_LANGUAGE_CODE_INC(665),
    /**
     * <code>ISO_LANGUAGE_CODE_SAL = 666;</code>
     */
    ISO_LANGUAGE_CODE_SAL(666),
    /**
     * <code>ISO_LANGUAGE_CODE_SAN = 667;</code>
     */
    ISO_LANGUAGE_CODE_SAN(667),
    /**
     * <code>ISO_LANGUAGE_CODE_INE = 668;</code>
     */
    ISO_LANGUAGE_CODE_INE(668),
    /**
     * <code>ISO_LANGUAGE_CODE_INH = 669;</code>
     */
    ISO_LANGUAGE_CODE_INH(669),
    /**
     * <code>ISO_LANGUAGE_CODE_KRL = 670;</code>
     */
    ISO_LANGUAGE_CODE_KRL(670),
    /**
     * <code>ISO_LANGUAGE_CODE_SAS = 671;</code>
     */
    ISO_LANGUAGE_CODE_SAS(671),
    /**
     * <code>ISO_LANGUAGE_CODE_SAT = 672;</code>
     */
    ISO_LANGUAGE_CODE_SAT(672),
    /**
     * <code>ISO_LANGUAGE_CODE_JPN = 673;</code>
     */
    ISO_LANGUAGE_CODE_JPN(673),
    /**
     * <code>ISO_LANGUAGE_CODE_EFI = 674;</code>
     */
    ISO_LANGUAGE_CODE_EFI(674),
    /**
     * <code>ISO_LANGUAGE_CODE_KRO = 675;</code>
     */
    ISO_LANGUAGE_CODE_KRO(675),
    /**
     * <code>ISO_LANGUAGE_CODE_JPR = 676;</code>
     */
    ISO_LANGUAGE_CODE_JPR(676),
    /**
     * <code>ISO_LANGUAGE_CODE_KRU = 677;</code>
     */
    ISO_LANGUAGE_CODE_KRU(677),
    /**
     * <code>ISO_LANGUAGE_CODE_LTZ = 678;</code>
     */
    ISO_LANGUAGE_CODE_LTZ(678),
    /**
     * <code>ISO_LANGUAGE_CODE_NYA = 679;</code>
     */
    ISO_LANGUAGE_CODE_NYA(679),
    /**
     * <code>ISO_LANGUAGE_CODE_LUB = 680;</code>
     */
    ISO_LANGUAGE_CODE_LUB(680),
    /**
     * <code>ISO_LANGUAGE_CODE_LUA = 681;</code>
     */
    ISO_LANGUAGE_CODE_LUA(681),
    /**
     * <code>ISO_LANGUAGE_CODE_LUG = 682;</code>
     */
    ISO_LANGUAGE_CODE_LUG(682),
    ;

    /**
     * <code>ISO_LANGUAGE_CODE_LUI = 0;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LUI_VALUE = 0;
    /**
     * <code>ISO_LANGUAGE_CODE_NYN = 1;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NYN_VALUE = 1;
    /**
     * <code>ISO_LANGUAGE_CODE_MWL = 2;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MWL_VALUE = 2;
    /**
     * <code>ISO_LANGUAGE_CODE_NYM = 3;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NYM_VALUE = 3;
    /**
     * <code>ISO_LANGUAGE_CODE_BAD = 4;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BAD_VALUE = 4;
    /**
     * <code>ISO_LANGUAGE_CODE_LUN = 5;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LUN_VALUE = 5;
    /**
     * <code>ISO_LANGUAGE_CODE_NYO = 6;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NYO_VALUE = 6;
    /**
     * <code>ISO_LANGUAGE_CODE_FIJ = 7;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FIJ_VALUE = 7;
    /**
     * <code>ISO_LANGUAGE_CODE_LUO = 8;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LUO_VALUE = 8;
    /**
     * <code>ISO_LANGUAGE_CODE_FIL = 9;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FIL_VALUE = 9;
    /**
     * <code>ISO_LANGUAGE_CODE_HMN = 10;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HMN_VALUE = 10;
    /**
     * <code>ISO_LANGUAGE_CODE_MWR = 11;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MWR_VALUE = 11;
    /**
     * <code>ISO_LANGUAGE_CODE_FIN = 12;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FIN_VALUE = 12;
    /**
     * <code>ISO_LANGUAGE_CODE_DEL = 13;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DEL_VALUE = 13;
    /**
     * <code>ISO_LANGUAGE_CODE_HMO = 14;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HMO_VALUE = 14;
    /**
     * <code>ISO_LANGUAGE_CODE_BAI = 15;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BAI_VALUE = 15;
    /**
     * <code>ISO_LANGUAGE_CODE_LUS = 16;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LUS_VALUE = 16;
    /**
     * <code>ISO_LANGUAGE_CODE_BAL = 17;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BAL_VALUE = 17;
    /**
     * <code>ISO_LANGUAGE_CODE_DEN = 18;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DEN_VALUE = 18;
    /**
     * <code>ISO_LANGUAGE_CODE_BAK = 19;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BAK_VALUE = 19;
    /**
     * <code>ISO_LANGUAGE_CODE_BAN = 20;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BAN_VALUE = 20;
    /**
     * <code>ISO_LANGUAGE_CODE_UGA = 21;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UGA_VALUE = 21;
    /**
     * <code>ISO_LANGUAGE_CODE_BAM = 22;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BAM_VALUE = 22;
    /**
     * <code>ISO_LANGUAGE_CODE_VIE = 23;</code>
     */
    public static final int ISO_LANGUAGE_CODE_VIE_VALUE = 23;
    /**
     * <code>ISO_LANGUAGE_CODE_FIU = 24;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FIU_VALUE = 24;
    /**
     * <code>ISO_LANGUAGE_CODE_BAT = 25;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BAT_VALUE = 25;
    /**
     * <code>ISO_LANGUAGE_CODE_DEU = 26;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DEU_VALUE = 26;
    /**
     * <code>ISO_LANGUAGE_CODE_BAS = 27;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BAS_VALUE = 27;
    /**
     * <code>ISO_LANGUAGE_CODE_EGY = 28;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EGY_VALUE = 28;
    /**
     * <code>ISO_LANGUAGE_CODE_TEL = 29;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TEL_VALUE = 29;
    /**
     * <code>ISO_LANGUAGE_CODE_RAJ = 30;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RAJ_VALUE = 30;
    /**
     * <code>ISO_LANGUAGE_CODE_JRB = 31;</code>
     */
    public static final int ISO_LANGUAGE_CODE_JRB_VALUE = 31;
    /**
     * <code>ISO_LANGUAGE_CODE_NZI = 32;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NZI_VALUE = 32;
    /**
     * <code>ISO_LANGUAGE_CODE_GLA = 33;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GLA_VALUE = 33;
    /**
     * <code>ISO_LANGUAGE_CODE_YOR = 34;</code>
     */
    public static final int ISO_LANGUAGE_CODE_YOR_VALUE = 34;
    /**
     * <code>ISO_LANGUAGE_CODE_TEM = 35;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TEM_VALUE = 35;
    /**
     * <code>ISO_LANGUAGE_CODE_SCO = 36;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SCO_VALUE = 36;
    /**
     * <code>ISO_LANGUAGE_CODE_SCN = 37;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SCN_VALUE = 37;
    /**
     * <code>ISO_LANGUAGE_CODE_AA = 38;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AA_VALUE = 38;
    /**
     * <code>ISO_LANGUAGE_CODE_RAP = 39;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RAP_VALUE = 39;
    /**
     * <code>ISO_LANGUAGE_CODE_TER = 40;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TER_VALUE = 40;
    /**
     * <code>ISO_LANGUAGE_CODE_AB = 41;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AB_VALUE = 41;
    /**
     * <code>ISO_LANGUAGE_CODE_GLE = 42;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GLE_VALUE = 42;
    /**
     * <code>ISO_LANGUAGE_CODE_RAR = 43;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RAR_VALUE = 43;
    /**
     * <code>ISO_LANGUAGE_CODE_TET = 44;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TET_VALUE = 44;
    /**
     * <code>ISO_LANGUAGE_CODE_GLG = 45;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GLG_VALUE = 45;
    /**
     * <code>ISO_LANGUAGE_CODE_AE = 46;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AE_VALUE = 46;
    /**
     * <code>ISO_LANGUAGE_CODE_AF = 47;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AF_VALUE = 47;
    /**
     * <code>ISO_LANGUAGE_CODE_IPK = 48;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IPK_VALUE = 48;
    /**
     * <code>ISO_LANGUAGE_CODE_AK = 49;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AK_VALUE = 49;
    /**
     * <code>ISO_LANGUAGE_CODE_AM = 50;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AM_VALUE = 50;
    /**
     * <code>ISO_LANGUAGE_CODE_AN = 51;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AN_VALUE = 51;
    /**
     * <code>ISO_LANGUAGE_CODE_GLV = 52;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GLV_VALUE = 52;
    /**
     * <code>ISO_LANGUAGE_CODE_AR = 53;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AR_VALUE = 53;
    /**
     * <code>ISO_LANGUAGE_CODE_AS = 54;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AS_VALUE = 54;
    /**
     * <code>ISO_LANGUAGE_CODE_MYA = 55;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MYA_VALUE = 55;
    /**
     * <code>ISO_LANGUAGE_CODE_AV = 56;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AV_VALUE = 56;
    /**
     * <code>ISO_LANGUAGE_CODE_YPK = 57;</code>
     */
    public static final int ISO_LANGUAGE_CODE_YPK_VALUE = 57;
    /**
     * <code>ISO_LANGUAGE_CODE_KUA = 58;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KUA_VALUE = 58;
    /**
     * <code>ISO_LANGUAGE_CODE_AY = 59;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AY_VALUE = 59;
    /**
     * <code>ISO_LANGUAGE_CODE_WLN = 60;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WLN_VALUE = 60;
    /**
     * <code>ISO_LANGUAGE_CODE_AZ = 61;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AZ_VALUE = 61;
    /**
     * <code>ISO_LANGUAGE_CODE_BA = 62;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BA_VALUE = 62;
    /**
     * <code>ISO_LANGUAGE_CODE_AAA = 63;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AAA_VALUE = 63;
    /**
     * <code>ISO_LANGUAGE_CODE_CEB = 64;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CEB_VALUE = 64;
    /**
     * <code>ISO_LANGUAGE_CODE_KUM = 65;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KUM_VALUE = 65;
    /**
     * <code>ISO_LANGUAGE_CODE_BE = 66;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BE_VALUE = 66;
    /**
     * <code>ISO_LANGUAGE_CODE_GMH = 67;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GMH_VALUE = 67;
    /**
     * <code>ISO_LANGUAGE_CODE_MYN = 68;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MYN_VALUE = 68;
    /**
     * <code>ISO_LANGUAGE_CODE_BG = 69;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BG_VALUE = 69;
    /**
     * <code>ISO_LANGUAGE_CODE_BH = 70;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BH_VALUE = 70;
    /**
     * <code>ISO_LANGUAGE_CODE_BI = 71;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BI_VALUE = 71;
    /**
     * <code>ISO_LANGUAGE_CODE_KUR = 72;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KUR_VALUE = 72;
    /**
     * <code>ISO_LANGUAGE_CODE_BM = 73;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BM_VALUE = 73;
    /**
     * <code>ISO_LANGUAGE_CODE_CEL = 74;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CEL_VALUE = 74;
    /**
     * <code>ISO_LANGUAGE_CODE_KUT = 75;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KUT_VALUE = 75;
    /**
     * <code>ISO_LANGUAGE_CODE_MYV = 76;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MYV_VALUE = 76;
    /**
     * <code>ISO_LANGUAGE_CODE_BN = 77;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BN_VALUE = 77;
    /**
     * <code>ISO_LANGUAGE_CODE_BO = 78;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BO_VALUE = 78;
    /**
     * <code>ISO_LANGUAGE_CODE_DGR = 79;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DGR_VALUE = 79;
    /**
     * <code>ISO_LANGUAGE_CODE_BR = 80;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BR_VALUE = 80;
    /**
     * <code>ISO_LANGUAGE_CODE_CES = 81;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CES_VALUE = 81;
    /**
     * <code>ISO_LANGUAGE_CODE_BS = 82;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BS_VALUE = 82;
    /**
     * <code>ISO_LANGUAGE_CODE_UIG = 83;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UIG_VALUE = 83;
    /**
     * <code>ISO_LANGUAGE_CODE_AAR = 84;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AAR_VALUE = 84;
    /**
     * <code>ISO_LANGUAGE_CODE_TGL = 85;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TGL_VALUE = 85;
    /**
     * <code>ISO_LANGUAGE_CODE_TGK = 86;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TGK_VALUE = 86;
    /**
     * <code>ISO_LANGUAGE_CODE_IRA = 87;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IRA_VALUE = 87;
    /**
     * <code>ISO_LANGUAGE_CODE_SEM = 88;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SEM_VALUE = 88;
    /**
     * <code>ISO_LANGUAGE_CODE_SEL = 89;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SEL_VALUE = 89;
    /**
     * <code>ISO_LANGUAGE_CODE_CA = 90;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CA_VALUE = 90;
    /**
     * <code>ISO_LANGUAGE_CODE_CE = 91;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CE_VALUE = 91;
    /**
     * <code>ISO_LANGUAGE_CODE_CH = 92;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CH_VALUE = 92;
    /**
     * <code>ISO_LANGUAGE_CODE_IRO = 93;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IRO_VALUE = 93;
    /**
     * <code>ISO_LANGUAGE_CODE_ABK = 94;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ABK_VALUE = 94;
    /**
     * <code>ISO_LANGUAGE_CODE_CO = 95;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CO_VALUE = 95;
    /**
     * <code>ISO_LANGUAGE_CODE_THA = 96;</code>
     */
    public static final int ISO_LANGUAGE_CODE_THA_VALUE = 96;
    /**
     * <code>ISO_LANGUAGE_CODE_CR = 97;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CR_VALUE = 97;
    /**
     * <code>ISO_LANGUAGE_CODE_CS = 98;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CS_VALUE = 98;
    /**
     * <code>ISO_LANGUAGE_CODE_CU = 99;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CU_VALUE = 99;
    /**
     * <code>ISO_LANGUAGE_CODE_CV = 100;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CV_VALUE = 100;
    /**
     * <code>ISO_LANGUAGE_CODE_CY = 101;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CY_VALUE = 101;
    /**
     * <code>ISO_LANGUAGE_CODE_EKA = 102;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EKA_VALUE = 102;
    /**
     * <code>ISO_LANGUAGE_CODE_DA = 103;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DA_VALUE = 103;
    /**
     * <code>ISO_LANGUAGE_CODE_DE = 104;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DE_VALUE = 104;
    /**
     * <code>ISO_LANGUAGE_CODE_GOH = 105;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GOH_VALUE = 105;
    /**
     * <code>ISO_LANGUAGE_CODE_ACE = 106;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ACE_VALUE = 106;
    /**
     * <code>ISO_LANGUAGE_CODE_ISL = 107;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ISL_VALUE = 107;
    /**
     * <code>ISO_LANGUAGE_CODE_BEJ = 108;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BEJ_VALUE = 108;
    /**
     * <code>ISO_LANGUAGE_CODE_ACH = 109;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ACH_VALUE = 109;
    /**
     * <code>ISO_LANGUAGE_CODE_GON = 110;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GON_VALUE = 110;
    /**
     * <code>ISO_LANGUAGE_CODE_BEL = 111;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BEL_VALUE = 111;
    /**
     * <code>ISO_LANGUAGE_CODE_DIN = 112;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DIN_VALUE = 112;
    /**
     * <code>ISO_LANGUAGE_CODE_BEN = 113;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BEN_VALUE = 113;
    /**
     * <code>ISO_LANGUAGE_CODE_BEM = 114;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BEM_VALUE = 114;
    /**
     * <code>ISO_LANGUAGE_CODE_GOR = 115;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GOR_VALUE = 115;
    /**
     * <code>ISO_LANGUAGE_CODE_SGA = 116;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SGA_VALUE = 116;
    /**
     * <code>ISO_LANGUAGE_CODE_GOT = 117;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GOT_VALUE = 117;
    /**
     * <code>ISO_LANGUAGE_CODE_BER = 118;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BER_VALUE = 118;
    /**
     * <code>ISO_LANGUAGE_CODE_DIV = 119;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DIV_VALUE = 119;
    /**
     * <code>ISO_LANGUAGE_CODE_ZUL = 120;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZUL_VALUE = 120;
    /**
     * <code>ISO_LANGUAGE_CODE_PAA = 121;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PAA_VALUE = 121;
    /**
     * <code>ISO_LANGUAGE_CODE_DV = 122;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DV_VALUE = 122;
    /**
     * <code>ISO_LANGUAGE_CODE_ZUN = 123;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZUN_VALUE = 123;
    /**
     * <code>ISO_LANGUAGE_CODE_TIG = 124;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TIG_VALUE = 124;
    /**
     * <code>ISO_LANGUAGE_CODE_WOL = 125;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WOL_VALUE = 125;
    /**
     * <code>ISO_LANGUAGE_CODE_DZ = 126;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DZ_VALUE = 126;
    /**
     * <code>ISO_LANGUAGE_CODE_ITA = 127;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ITA_VALUE = 127;
    /**
     * <code>ISO_LANGUAGE_CODE_PAG = 128;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PAG_VALUE = 128;
    /**
     * <code>ISO_LANGUAGE_CODE_PAL = 129;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PAL_VALUE = 129;
    /**
     * <code>ISO_LANGUAGE_CODE_SGN = 130;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SGN_VALUE = 130;
    /**
     * <code>ISO_LANGUAGE_CODE_PAN = 131;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PAN_VALUE = 131;
    /**
     * <code>ISO_LANGUAGE_CODE_TIR = 132;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TIR_VALUE = 132;
    /**
     * <code>ISO_LANGUAGE_CODE_CHB = 133;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHB_VALUE = 133;
    /**
     * <code>ISO_LANGUAGE_CODE_CHA = 134;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHA_VALUE = 134;
    /**
     * <code>ISO_LANGUAGE_CODE_UKR = 135;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UKR_VALUE = 135;
    /**
     * <code>ISO_LANGUAGE_CODE_PAM = 136;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PAM_VALUE = 136;
    /**
     * <code>ISO_LANGUAGE_CODE_PAP = 137;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PAP_VALUE = 137;
    /**
     * <code>ISO_LANGUAGE_CODE_ADA = 138;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ADA_VALUE = 138;
    /**
     * <code>ISO_LANGUAGE_CODE_EE = 139;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EE_VALUE = 139;
    /**
     * <code>ISO_LANGUAGE_CODE_TIV = 140;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TIV_VALUE = 140;
    /**
     * <code>ISO_LANGUAGE_CODE_CHE = 141;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHE_VALUE = 141;
    /**
     * <code>ISO_LANGUAGE_CODE_CHG = 142;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHG_VALUE = 142;
    /**
     * <code>ISO_LANGUAGE_CODE_ELL = 143;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ELL_VALUE = 143;
    /**
     * <code>ISO_LANGUAGE_CODE_PAU = 144;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PAU_VALUE = 144;
    /**
     * <code>ISO_LANGUAGE_CODE_EL = 145;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EL_VALUE = 145;
    /**
     * <code>ISO_LANGUAGE_CODE_CHK = 146;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHK_VALUE = 146;
    /**
     * <code>ISO_LANGUAGE_CODE_CHN = 147;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHN_VALUE = 147;
    /**
     * <code>ISO_LANGUAGE_CODE_EN = 148;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EN_VALUE = 148;
    /**
     * <code>ISO_LANGUAGE_CODE_CHM = 149;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHM_VALUE = 149;
    /**
     * <code>ISO_LANGUAGE_CODE_EO = 150;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EO_VALUE = 150;
    /**
     * <code>ISO_LANGUAGE_CODE_CHP = 151;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHP_VALUE = 151;
    /**
     * <code>ISO_LANGUAGE_CODE_CHO = 152;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHO_VALUE = 152;
    /**
     * <code>ISO_LANGUAGE_CODE_CHR = 153;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHR_VALUE = 153;
    /**
     * <code>ISO_LANGUAGE_CODE_HRV = 154;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HRV_VALUE = 154;
    /**
     * <code>ISO_LANGUAGE_CODE_ES = 155;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ES_VALUE = 155;
    /**
     * <code>ISO_LANGUAGE_CODE_ET = 156;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ET_VALUE = 156;
    /**
     * <code>ISO_LANGUAGE_CODE_CHV = 157;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHV_VALUE = 157;
    /**
     * <code>ISO_LANGUAGE_CODE_EU = 158;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EU_VALUE = 158;
    /**
     * <code>ISO_LANGUAGE_CODE_ELX = 159;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ELX_VALUE = 159;
    /**
     * <code>ISO_LANGUAGE_CODE_CHU = 160;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHU_VALUE = 160;
    /**
     * <code>ISO_LANGUAGE_CODE_CHY = 161;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CHY_VALUE = 161;
    /**
     * <code>ISO_LANGUAGE_CODE_HSB = 162;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HSB_VALUE = 162;
    /**
     * <code>ISO_LANGUAGE_CODE_ADY = 163;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ADY_VALUE = 163;
    /**
     * <code>ISO_LANGUAGE_CODE_SHN = 164;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SHN_VALUE = 164;
    /**
     * <code>ISO_LANGUAGE_CODE_FA = 165;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FA_VALUE = 165;
    /**
     * <code>ISO_LANGUAGE_CODE_BGC = 166;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BGC_VALUE = 166;
    /**
     * <code>ISO_LANGUAGE_CODE_FF = 167;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FF_VALUE = 167;
    /**
     * <code>ISO_LANGUAGE_CODE_FI = 168;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FI_VALUE = 168;
    /**
     * <code>ISO_LANGUAGE_CODE_FJ = 169;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FJ_VALUE = 169;
    /**
     * <code>ISO_LANGUAGE_CODE_FON = 170;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FON_VALUE = 170;
    /**
     * <code>ISO_LANGUAGE_CODE_FO = 171;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FO_VALUE = 171;
    /**
     * <code>ISO_LANGUAGE_CODE_UMB = 172;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UMB_VALUE = 172;
    /**
     * <code>ISO_LANGUAGE_CODE_FR = 173;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FR_VALUE = 173;
    /**
     * <code>ISO_LANGUAGE_CODE_SID = 174;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SID_VALUE = 174;
    /**
     * <code>ISO_LANGUAGE_CODE_VOL = 175;</code>
     */
    public static final int ISO_LANGUAGE_CODE_VOL_VALUE = 175;
    /**
     * <code>ISO_LANGUAGE_CODE_FY = 176;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FY_VALUE = 176;
    /**
     * <code>ISO_LANGUAGE_CODE_TKL = 177;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TKL_VALUE = 177;
    /**
     * <code>ISO_LANGUAGE_CODE_GRB = 178;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GRB_VALUE = 178;
    /**
     * <code>ISO_LANGUAGE_CODE_SIO = 179;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SIO_VALUE = 179;
    /**
     * <code>ISO_LANGUAGE_CODE_SIN = 180;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SIN_VALUE = 180;
    /**
     * <code>ISO_LANGUAGE_CODE_GRC = 181;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GRC_VALUE = 181;
    /**
     * <code>ISO_LANGUAGE_CODE_GA = 182;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GA_VALUE = 182;
    /**
     * <code>ISO_LANGUAGE_CODE_VOT = 183;</code>
     */
    public static final int ISO_LANGUAGE_CODE_VOT_VALUE = 183;
    /**
     * <code>ISO_LANGUAGE_CODE_GD = 184;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GD_VALUE = 184;
    /**
     * <code>ISO_LANGUAGE_CODE_AFA = 185;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AFA_VALUE = 185;
    /**
     * <code>ISO_LANGUAGE_CODE_ENG = 186;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ENG_VALUE = 186;
    /**
     * <code>ISO_LANGUAGE_CODE_SIT = 187;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SIT_VALUE = 187;
    /**
     * <code>ISO_LANGUAGE_CODE_GRN = 188;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GRN_VALUE = 188;
    /**
     * <code>ISO_LANGUAGE_CODE_AFH = 189;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AFH_VALUE = 189;
    /**
     * <code>ISO_LANGUAGE_CODE_GL = 190;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GL_VALUE = 190;
    /**
     * <code>ISO_LANGUAGE_CODE_ENM = 191;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ENM_VALUE = 191;
    /**
     * <code>ISO_LANGUAGE_CODE_GN = 192;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GN_VALUE = 192;
    /**
     * <code>ISO_LANGUAGE_CODE_BHO = 193;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BHO_VALUE = 193;
    /**
     * <code>ISO_LANGUAGE_CODE_UND = 194;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UND_VALUE = 194;
    /**
     * <code>ISO_LANGUAGE_CODE_AFR = 195;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AFR_VALUE = 195;
    /**
     * <code>ISO_LANGUAGE_CODE_GU = 196;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GU_VALUE = 196;
    /**
     * <code>ISO_LANGUAGE_CODE_GV = 197;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GV_VALUE = 197;
    /**
     * <code>ISO_LANGUAGE_CODE_TLI = 198;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TLI_VALUE = 198;
    /**
     * <code>ISO_LANGUAGE_CODE_TLH = 199;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TLH_VALUE = 199;
    /**
     * <code>ISO_LANGUAGE_CODE_HA = 200;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HA_VALUE = 200;
    /**
     * <code>ISO_LANGUAGE_CODE_ZXX = 201;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZXX_VALUE = 201;
    /**
     * <code>ISO_LANGUAGE_CODE_HE = 202;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HE_VALUE = 202;
    /**
     * <code>ISO_LANGUAGE_CODE_BIH = 203;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BIH_VALUE = 203;
    /**
     * <code>ISO_LANGUAGE_CODE_HUN = 204;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HUN_VALUE = 204;
    /**
     * <code>ISO_LANGUAGE_CODE_HI = 205;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HI_VALUE = 205;
    /**
     * <code>ISO_LANGUAGE_CODE_HUP = 206;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HUP_VALUE = 206;
    /**
     * <code>ISO_LANGUAGE_CODE_BIK = 207;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BIK_VALUE = 207;
    /**
     * <code>ISO_LANGUAGE_CODE_BIN = 208;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BIN_VALUE = 208;
    /**
     * <code>ISO_LANGUAGE_CODE_HO = 209;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HO_VALUE = 209;
    /**
     * <code>ISO_LANGUAGE_CODE_HR = 210;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HR_VALUE = 210;
    /**
     * <code>ISO_LANGUAGE_CODE_GSW = 211;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GSW_VALUE = 211;
    /**
     * <code>ISO_LANGUAGE_CODE_HT = 212;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HT_VALUE = 212;
    /**
     * <code>ISO_LANGUAGE_CODE_BIS = 213;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BIS_VALUE = 213;
    /**
     * <code>ISO_LANGUAGE_CODE_HU = 214;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HU_VALUE = 214;
    /**
     * <code>ISO_LANGUAGE_CODE_TMH = 215;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TMH_VALUE = 215;
    /**
     * <code>ISO_LANGUAGE_CODE_HY = 216;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HY_VALUE = 216;
    /**
     * <code>ISO_LANGUAGE_CODE_HZ = 217;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HZ_VALUE = 217;
    /**
     * <code>ISO_LANGUAGE_CODE_FRA = 218;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FRA_VALUE = 218;
    /**
     * <code>ISO_LANGUAGE_CODE_OCI = 219;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OCI_VALUE = 219;
    /**
     * <code>ISO_LANGUAGE_CODE_NAH = 220;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NAH_VALUE = 220;
    /**
     * <code>ISO_LANGUAGE_CODE_NAI = 221;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NAI_VALUE = 221;
    /**
     * <code>ISO_LANGUAGE_CODE_IA = 222;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IA_VALUE = 222;
    /**
     * <code>ISO_LANGUAGE_CODE_ID = 223;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ID_VALUE = 223;
    /**
     * <code>ISO_LANGUAGE_CODE_PEO = 224;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PEO_VALUE = 224;
    /**
     * <code>ISO_LANGUAGE_CODE_IE = 225;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IE_VALUE = 225;
    /**
     * <code>ISO_LANGUAGE_CODE_NAP = 226;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NAP_VALUE = 226;
    /**
     * <code>ISO_LANGUAGE_CODE_IG = 227;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IG_VALUE = 227;
    /**
     * <code>ISO_LANGUAGE_CODE_II = 228;</code>
     */
    public static final int ISO_LANGUAGE_CODE_II_VALUE = 228;
    /**
     * <code>ISO_LANGUAGE_CODE_FRM = 229;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FRM_VALUE = 229;
    /**
     * <code>ISO_LANGUAGE_CODE_ZZA = 230;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZZA_VALUE = 230;
    /**
     * <code>ISO_LANGUAGE_CODE_IK = 231;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IK_VALUE = 231;
    /**
     * <code>ISO_LANGUAGE_CODE_NAV = 232;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NAV_VALUE = 232;
    /**
     * <code>ISO_LANGUAGE_CODE_FRO = 233;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FRO_VALUE = 233;
    /**
     * <code>ISO_LANGUAGE_CODE_NAU = 234;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NAU_VALUE = 234;
    /**
     * <code>ISO_LANGUAGE_CODE_EPO = 235;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EPO_VALUE = 235;
    /**
     * <code>ISO_LANGUAGE_CODE_IO = 236;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IO_VALUE = 236;
    /**
     * <code>ISO_LANGUAGE_CODE_FRS = 237;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FRS_VALUE = 237;
    /**
     * <code>ISO_LANGUAGE_CODE_FRR = 238;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FRR_VALUE = 238;
    /**
     * <code>ISO_LANGUAGE_CODE_SLA = 239;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SLA_VALUE = 239;
    /**
     * <code>ISO_LANGUAGE_CODE_IS = 240;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IS_VALUE = 240;
    /**
     * <code>ISO_LANGUAGE_CODE_IT = 241;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IT_VALUE = 241;
    /**
     * <code>ISO_LANGUAGE_CODE_FRY = 242;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FRY_VALUE = 242;
    /**
     * <code>ISO_LANGUAGE_CODE_IU = 243;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IU_VALUE = 243;
    /**
     * <code>ISO_LANGUAGE_CODE_SLK = 244;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SLK_VALUE = 244;
    /**
     * <code>ISO_LANGUAGE_CODE_JA = 245;</code>
     */
    public static final int ISO_LANGUAGE_CODE_JA_VALUE = 245;
    /**
     * <code>ISO_LANGUAGE_CODE_CMC = 246;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CMC_VALUE = 246;
    /**
     * <code>ISO_LANGUAGE_CODE_NBL = 247;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NBL_VALUE = 247;
    /**
     * <code>ISO_LANGUAGE_CODE_SLV = 248;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SLV_VALUE = 248;
    /**
     * <code>ISO_LANGUAGE_CODE_GUJ = 249;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GUJ_VALUE = 249;
    /**
     * <code>ISO_LANGUAGE_CODE_DOI = 250;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DOI_VALUE = 250;
    /**
     * <code>ISO_LANGUAGE_CODE_SMA = 251;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SMA_VALUE = 251;
    /**
     * <code>ISO_LANGUAGE_CODE_AIN = 252;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AIN_VALUE = 252;
    /**
     * <code>ISO_LANGUAGE_CODE_SME = 253;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SME_VALUE = 253;
    /**
     * <code>ISO_LANGUAGE_CODE_JV = 254;</code>
     */
    public static final int ISO_LANGUAGE_CODE_JV_VALUE = 254;
    /**
     * <code>ISO_LANGUAGE_CODE_TOG = 255;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TOG_VALUE = 255;
    /**
     * <code>ISO_LANGUAGE_CODE_SMI = 256;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SMI_VALUE = 256;
    /**
     * <code>ISO_LANGUAGE_CODE_MAD = 257;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAD_VALUE = 257;
    /**
     * <code>ISO_LANGUAGE_CODE_SMJ = 258;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SMJ_VALUE = 258;
    /**
     * <code>ISO_LANGUAGE_CODE_TON = 259;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TON_VALUE = 259;
    /**
     * <code>ISO_LANGUAGE_CODE_MAG = 260;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAG_VALUE = 260;
    /**
     * <code>ISO_LANGUAGE_CODE_SMO = 261;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SMO_VALUE = 261;
    /**
     * <code>ISO_LANGUAGE_CODE_MAI = 262;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAI_VALUE = 262;
    /**
     * <code>ISO_LANGUAGE_CODE_MAH = 263;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAH_VALUE = 263;
    /**
     * <code>ISO_LANGUAGE_CODE_SMN = 264;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SMN_VALUE = 264;
    /**
     * <code>ISO_LANGUAGE_CODE_KA = 265;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KA_VALUE = 265;
    /**
     * <code>ISO_LANGUAGE_CODE_BLA = 266;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BLA_VALUE = 266;
    /**
     * <code>ISO_LANGUAGE_CODE_MAK = 267;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAK_VALUE = 267;
    /**
     * <code>ISO_LANGUAGE_CODE_SMS = 268;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SMS_VALUE = 268;
    /**
     * <code>ISO_LANGUAGE_CODE_MAL = 269;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAL_VALUE = 269;
    /**
     * <code>ISO_LANGUAGE_CODE_MAN = 270;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAN_VALUE = 270;
    /**
     * <code>ISO_LANGUAGE_CODE_KG = 271;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KG_VALUE = 271;
    /**
     * <code>ISO_LANGUAGE_CODE_MAP = 272;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAP_VALUE = 272;
    /**
     * <code>ISO_LANGUAGE_CODE_KI = 273;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KI_VALUE = 273;
    /**
     * <code>ISO_LANGUAGE_CODE_MAS = 274;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAS_VALUE = 274;
    /**
     * <code>ISO_LANGUAGE_CODE_KJ = 275;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KJ_VALUE = 275;
    /**
     * <code>ISO_LANGUAGE_CODE_MAR = 276;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MAR_VALUE = 276;
    /**
     * <code>ISO_LANGUAGE_CODE_KK = 277;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KK_VALUE = 277;
    /**
     * <code>ISO_LANGUAGE_CODE_KL = 278;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KL_VALUE = 278;
    /**
     * <code>ISO_LANGUAGE_CODE_KM = 279;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KM_VALUE = 279;
    /**
     * <code>ISO_LANGUAGE_CODE_KN = 280;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KN_VALUE = 280;
    /**
     * <code>ISO_LANGUAGE_CODE_KO = 281;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KO_VALUE = 281;
    /**
     * <code>ISO_LANGUAGE_CODE_URD = 282;</code>
     */
    public static final int ISO_LANGUAGE_CODE_URD_VALUE = 282;
    /**
     * <code>ISO_LANGUAGE_CODE_CNR = 283;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CNR_VALUE = 283;
    /**
     * <code>ISO_LANGUAGE_CODE_KR = 284;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KR_VALUE = 284;
    /**
     * <code>ISO_LANGUAGE_CODE_SNA = 285;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SNA_VALUE = 285;
    /**
     * <code>ISO_LANGUAGE_CODE_KS = 286;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KS_VALUE = 286;
    /**
     * <code>ISO_LANGUAGE_CODE_SND = 287;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SND_VALUE = 287;
    /**
     * <code>ISO_LANGUAGE_CODE_KU = 288;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KU_VALUE = 288;
    /**
     * <code>ISO_LANGUAGE_CODE_KV = 289;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KV_VALUE = 289;
    /**
     * <code>ISO_LANGUAGE_CODE_KW = 290;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KW_VALUE = 290;
    /**
     * <code>ISO_LANGUAGE_CODE_TPI = 291;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TPI_VALUE = 291;
    /**
     * <code>ISO_LANGUAGE_CODE_KY = 292;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KY_VALUE = 292;
    /**
     * <code>ISO_LANGUAGE_CODE_NDE = 293;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NDE_VALUE = 293;
    /**
     * <code>ISO_LANGUAGE_CODE_PHI = 294;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PHI_VALUE = 294;
    /**
     * <code>ISO_LANGUAGE_CODE_SNK = 295;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SNK_VALUE = 295;
    /**
     * <code>ISO_LANGUAGE_CODE_HYE = 296;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HYE_VALUE = 296;
    /**
     * <code>ISO_LANGUAGE_CODE_LA = 297;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LA_VALUE = 297;
    /**
     * <code>ISO_LANGUAGE_CODE_AKA = 298;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AKA_VALUE = 298;
    /**
     * <code>ISO_LANGUAGE_CODE_LB = 299;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LB_VALUE = 299;
    /**
     * <code>ISO_LANGUAGE_CODE_PHN = 300;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PHN_VALUE = 300;
    /**
     * <code>ISO_LANGUAGE_CODE_NDO = 301;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NDO_VALUE = 301;
    /**
     * <code>ISO_LANGUAGE_CODE_GWI = 302;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GWI_VALUE = 302;
    /**
     * <code>ISO_LANGUAGE_CODE_LG = 303;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LG_VALUE = 303;
    /**
     * <code>ISO_LANGUAGE_CODE_FUL = 304;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FUL_VALUE = 304;
    /**
     * <code>ISO_LANGUAGE_CODE_NDS = 305;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NDS_VALUE = 305;
    /**
     * <code>ISO_LANGUAGE_CODE_LI = 306;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LI_VALUE = 306;
    /**
     * <code>ISO_LANGUAGE_CODE_AKK = 307;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AKK_VALUE = 307;
    /**
     * <code>ISO_LANGUAGE_CODE_LN = 308;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LN_VALUE = 308;
    /**
     * <code>ISO_LANGUAGE_CODE_FUR = 309;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FUR_VALUE = 309;
    /**
     * <code>ISO_LANGUAGE_CODE_LO = 310;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LO_VALUE = 310;
    /**
     * <code>ISO_LANGUAGE_CODE_COP = 311;</code>
     */
    public static final int ISO_LANGUAGE_CODE_COP_VALUE = 311;
    /**
     * <code>ISO_LANGUAGE_CODE_COS = 312;</code>
     */
    public static final int ISO_LANGUAGE_CODE_COS_VALUE = 312;
    /**
     * <code>ISO_LANGUAGE_CODE_EST = 313;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EST_VALUE = 313;
    /**
     * <code>ISO_LANGUAGE_CODE_COR = 314;</code>
     */
    public static final int ISO_LANGUAGE_CODE_COR_VALUE = 314;
    /**
     * <code>ISO_LANGUAGE_CODE_LT = 315;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LT_VALUE = 315;
    /**
     * <code>ISO_LANGUAGE_CODE_LU = 316;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LU_VALUE = 316;
    /**
     * <code>ISO_LANGUAGE_CODE_LV = 317;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LV_VALUE = 317;
    /**
     * <code>ISO_LANGUAGE_CODE_SOG = 318;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SOG_VALUE = 318;
    /**
     * <code>ISO_LANGUAGE_CODE_LAD = 319;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LAD_VALUE = 319;
    /**
     * <code>ISO_LANGUAGE_CODE_SOM = 320;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SOM_VALUE = 320;
    /**
     * <code>ISO_LANGUAGE_CODE_DRA = 321;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DRA_VALUE = 321;
    /**
     * <code>ISO_LANGUAGE_CODE_LAH = 322;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LAH_VALUE = 322;
    /**
     * <code>ISO_LANGUAGE_CODE_SON = 323;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SON_VALUE = 323;
    /**
     * <code>ISO_LANGUAGE_CODE_NEP = 324;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NEP_VALUE = 324;
    /**
     * <code>ISO_LANGUAGE_CODE_CPF = 325;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CPF_VALUE = 325;
    /**
     * <code>ISO_LANGUAGE_CODE_SOT = 326;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SOT_VALUE = 326;
    /**
     * <code>ISO_LANGUAGE_CODE_CPE = 327;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CPE_VALUE = 327;
    /**
     * <code>ISO_LANGUAGE_CODE_LAM = 328;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LAM_VALUE = 328;
    /**
     * <code>ISO_LANGUAGE_CODE_MG = 329;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MG_VALUE = 329;
    /**
     * <code>ISO_LANGUAGE_CODE_LAO = 330;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LAO_VALUE = 330;
    /**
     * <code>ISO_LANGUAGE_CODE_MH = 331;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MH_VALUE = 331;
    /**
     * <code>ISO_LANGUAGE_CODE_ALE = 332;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ALE_VALUE = 332;
    /**
     * <code>ISO_LANGUAGE_CODE_MI = 333;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MI_VALUE = 333;
    /**
     * <code>ISO_LANGUAGE_CODE_ALG = 334;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ALG_VALUE = 334;
    /**
     * <code>ISO_LANGUAGE_CODE_LAT = 335;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LAT_VALUE = 335;
    /**
     * <code>ISO_LANGUAGE_CODE_MK = 336;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MK_VALUE = 336;
    /**
     * <code>ISO_LANGUAGE_CODE_ML = 337;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ML_VALUE = 337;
    /**
     * <code>ISO_LANGUAGE_CODE_LAV = 338;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LAV_VALUE = 338;
    /**
     * <code>ISO_LANGUAGE_CODE_MN = 339;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MN_VALUE = 339;
    /**
     * <code>ISO_LANGUAGE_CODE_NEW = 340;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NEW_VALUE = 340;
    /**
     * <code>ISO_LANGUAGE_CODE_MO = 341;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MO_VALUE = 341;
    /**
     * <code>ISO_LANGUAGE_CODE_CPP = 342;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CPP_VALUE = 342;
    /**
     * <code>ISO_LANGUAGE_CODE_SPA = 343;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SPA_VALUE = 343;
    /**
     * <code>ISO_LANGUAGE_CODE_MR = 344;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MR_VALUE = 344;
    /**
     * <code>ISO_LANGUAGE_CODE_MS = 345;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MS_VALUE = 345;
    /**
     * <code>ISO_LANGUAGE_CODE_MT = 346;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MT_VALUE = 346;
    /**
     * <code>ISO_LANGUAGE_CODE_ALT = 347;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ALT_VALUE = 347;
    /**
     * <code>ISO_LANGUAGE_CODE_BNT = 348;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BNT_VALUE = 348;
    /**
     * <code>ISO_LANGUAGE_CODE_MY = 349;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MY_VALUE = 349;
    /**
     * <code>ISO_LANGUAGE_CODE_MDF = 350;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MDF_VALUE = 350;
    /**
     * <code>ISO_LANGUAGE_CODE_DSB = 351;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DSB_VALUE = 351;
    /**
     * <code>ISO_LANGUAGE_CODE_NA = 352;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NA_VALUE = 352;
    /**
     * <code>ISO_LANGUAGE_CODE_NB = 353;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NB_VALUE = 353;
    /**
     * <code>ISO_LANGUAGE_CODE_BOD = 354;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BOD_VALUE = 354;
    /**
     * <code>ISO_LANGUAGE_CODE_ND = 355;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ND_VALUE = 355;
    /**
     * <code>ISO_LANGUAGE_CODE_NE = 356;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NE_VALUE = 356;
    /**
     * <code>ISO_LANGUAGE_CODE_NG = 357;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NG_VALUE = 357;
    /**
     * <code>ISO_LANGUAGE_CODE_MDR = 358;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MDR_VALUE = 358;
    /**
     * <code>ISO_LANGUAGE_CODE_AMH = 359;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AMH_VALUE = 359;
    /**
     * <code>ISO_LANGUAGE_CODE_NL = 360;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NL_VALUE = 360;
    /**
     * <code>ISO_LANGUAGE_CODE_NN = 361;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NN_VALUE = 361;
    /**
     * <code>ISO_LANGUAGE_CODE_NO = 362;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NO_VALUE = 362;
    /**
     * <code>ISO_LANGUAGE_CODE_EUS = 363;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EUS_VALUE = 363;
    /**
     * <code>ISO_LANGUAGE_CODE_NR = 364;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NR_VALUE = 364;
    /**
     * <code>ISO_LANGUAGE_CODE_ROA = 365;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ROA_VALUE = 365;
    /**
     * <code>ISO_LANGUAGE_CODE_BOS = 366;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BOS_VALUE = 366;
    /**
     * <code>ISO_LANGUAGE_CODE_NV = 367;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NV_VALUE = 367;
    /**
     * <code>ISO_LANGUAGE_CODE_ROH = 368;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ROH_VALUE = 368;
    /**
     * <code>ISO_LANGUAGE_CODE_SQI = 369;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SQI_VALUE = 369;
    /**
     * <code>ISO_LANGUAGE_CODE_KAA = 370;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAA_VALUE = 370;
    /**
     * <code>ISO_LANGUAGE_CODE_NY = 371;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NY_VALUE = 371;
    /**
     * <code>ISO_LANGUAGE_CODE_TSI = 372;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TSI_VALUE = 372;
    /**
     * <code>ISO_LANGUAGE_CODE_KAC = 373;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAC_VALUE = 373;
    /**
     * <code>ISO_LANGUAGE_CODE_KAB = 374;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAB_VALUE = 374;
    /**
     * <code>ISO_LANGUAGE_CODE_TSN = 375;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TSN_VALUE = 375;
    /**
     * <code>ISO_LANGUAGE_CODE_RON = 376;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RON_VALUE = 376;
    /**
     * <code>ISO_LANGUAGE_CODE_TSO = 377;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TSO_VALUE = 377;
    /**
     * <code>ISO_LANGUAGE_CODE_ROM = 378;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ROM_VALUE = 378;
    /**
     * <code>ISO_LANGUAGE_CODE_OC = 379;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OC_VALUE = 379;
    /**
     * <code>ISO_LANGUAGE_CODE_KAM = 380;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAM_VALUE = 380;
    /**
     * <code>ISO_LANGUAGE_CODE_CRE = 381;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CRE_VALUE = 381;
    /**
     * <code>ISO_LANGUAGE_CODE_KAL = 382;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAL_VALUE = 382;
    /**
     * <code>ISO_LANGUAGE_CODE_MEN = 383;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MEN_VALUE = 383;
    /**
     * <code>ISO_LANGUAGE_CODE_CRH = 384;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CRH_VALUE = 384;
    /**
     * <code>ISO_LANGUAGE_CODE_KAN = 385;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAN_VALUE = 385;
    /**
     * <code>ISO_LANGUAGE_CODE_OJ = 386;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OJ_VALUE = 386;
    /**
     * <code>ISO_LANGUAGE_CODE_ANG = 387;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ANG_VALUE = 387;
    /**
     * <code>ISO_LANGUAGE_CODE_KAS = 388;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAS_VALUE = 388;
    /**
     * <code>ISO_LANGUAGE_CODE_KAR = 389;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAR_VALUE = 389;
    /**
     * <code>ISO_LANGUAGE_CODE_KAU = 390;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAU_VALUE = 390;
    /**
     * <code>ISO_LANGUAGE_CODE_OM = 391;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OM_VALUE = 391;
    /**
     * <code>ISO_LANGUAGE_CODE_KAT = 392;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAT_VALUE = 392;
    /**
     * <code>ISO_LANGUAGE_CODE_CRP = 393;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CRP_VALUE = 393;
    /**
     * <code>ISO_LANGUAGE_CODE_KAW = 394;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAW_VALUE = 394;
    /**
     * <code>ISO_LANGUAGE_CODE_ANP = 395;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ANP_VALUE = 395;
    /**
     * <code>ISO_LANGUAGE_CODE_OR = 396;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OR_VALUE = 396;
    /**
     * <code>ISO_LANGUAGE_CODE_OS = 397;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OS_VALUE = 397;
    /**
     * <code>ISO_LANGUAGE_CODE_SRD = 398;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SRD_VALUE = 398;
    /**
     * <code>ISO_LANGUAGE_CODE_KAZ = 399;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KAZ_VALUE = 399;
    /**
     * <code>ISO_LANGUAGE_CODE_PLI = 400;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PLI_VALUE = 400;
    /**
     * <code>ISO_LANGUAGE_CODE_KBD = 401;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KBD_VALUE = 401;
    /**
     * <code>ISO_LANGUAGE_CODE_SRN = 402;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SRN_VALUE = 402;
    /**
     * <code>ISO_LANGUAGE_CODE_OJI = 403;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OJI_VALUE = 403;
    /**
     * <code>ISO_LANGUAGE_CODE_SRP = 404;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SRP_VALUE = 404;
    /**
     * <code>ISO_LANGUAGE_CODE_PA = 405;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PA_VALUE = 405;
    /**
     * <code>ISO_LANGUAGE_CODE_DUA = 406;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DUA_VALUE = 406;
    /**
     * <code>ISO_LANGUAGE_CODE_EWE = 407;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EWE_VALUE = 407;
    /**
     * <code>ISO_LANGUAGE_CODE_SRR = 408;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SRR_VALUE = 408;
    /**
     * <code>ISO_LANGUAGE_CODE_CSB = 409;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CSB_VALUE = 409;
    /**
     * <code>ISO_LANGUAGE_CODE_PI = 410;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PI_VALUE = 410;
    /**
     * <code>ISO_LANGUAGE_CODE_PL = 411;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PL_VALUE = 411;
    /**
     * <code>ISO_LANGUAGE_CODE_EWO = 412;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EWO_VALUE = 412;
    /**
     * <code>ISO_LANGUAGE_CODE_DUM = 413;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DUM_VALUE = 413;
    /**
     * <code>ISO_LANGUAGE_CODE_SSA = 414;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SSA_VALUE = 414;
    /**
     * <code>ISO_LANGUAGE_CODE_PS = 415;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PS_VALUE = 415;
    /**
     * <code>ISO_LANGUAGE_CODE_PT = 416;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PT_VALUE = 416;
    /**
     * <code>ISO_LANGUAGE_CODE_MGA = 417;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MGA_VALUE = 417;
    /**
     * <code>ISO_LANGUAGE_CODE_NIA = 418;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NIA_VALUE = 418;
    /**
     * <code>ISO_LANGUAGE_CODE_NIC = 419;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NIC_VALUE = 419;
    /**
     * <code>ISO_LANGUAGE_CODE_TUK = 420;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TUK_VALUE = 420;
    /**
     * <code>ISO_LANGUAGE_CODE_TUM = 421;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TUM_VALUE = 421;
    /**
     * <code>ISO_LANGUAGE_CODE_TUP = 422;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TUP_VALUE = 422;
    /**
     * <code>ISO_LANGUAGE_CODE_TUR = 423;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TUR_VALUE = 423;
    /**
     * <code>ISO_LANGUAGE_CODE_BRA = 424;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BRA_VALUE = 424;
    /**
     * <code>ISO_LANGUAGE_CODE_TUT = 425;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TUT_VALUE = 425;
    /**
     * <code>ISO_LANGUAGE_CODE_APA = 426;</code>
     */
    public static final int ISO_LANGUAGE_CODE_APA_VALUE = 426;
    /**
     * <code>ISO_LANGUAGE_CODE_BRE = 427;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BRE_VALUE = 427;
    /**
     * <code>ISO_LANGUAGE_CODE_SSW = 428;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SSW_VALUE = 428;
    /**
     * <code>ISO_LANGUAGE_CODE_NIU = 429;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NIU_VALUE = 429;
    /**
     * <code>ISO_LANGUAGE_CODE_JAV = 430;</code>
     */
    public static final int ISO_LANGUAGE_CODE_JAV_VALUE = 430;
    /**
     * <code>ISO_LANGUAGE_CODE_LEZ = 431;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LEZ_VALUE = 431;
    /**
     * <code>ISO_LANGUAGE_CODE_QU = 432;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QU_VALUE = 432;
    /**
     * <code>ISO_LANGUAGE_CODE_ZAP = 433;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZAP_VALUE = 433;
    /**
     * <code>ISO_LANGUAGE_CODE_TVL = 434;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TVL_VALUE = 434;
    /**
     * <code>ISO_LANGUAGE_CODE_JBO = 435;</code>
     */
    public static final int ISO_LANGUAGE_CODE_JBO_VALUE = 435;
    /**
     * <code>ISO_LANGUAGE_CODE_RM = 436;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RM_VALUE = 436;
    /**
     * <code>ISO_LANGUAGE_CODE_RN = 437;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RN_VALUE = 437;
    /**
     * <code>ISO_LANGUAGE_CODE_RO = 438;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RO_VALUE = 438;
    /**
     * <code>ISO_LANGUAGE_CODE_CUS = 439;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CUS_VALUE = 439;
    /**
     * <code>ISO_LANGUAGE_CODE_QQA = 440;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQA_VALUE = 440;
    /**
     * <code>ISO_LANGUAGE_CODE_QQC = 441;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQC_VALUE = 441;
    /**
     * <code>ISO_LANGUAGE_CODE_RU = 442;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RU_VALUE = 442;
    /**
     * <code>ISO_LANGUAGE_CODE_QQB = 443;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQB_VALUE = 443;
    /**
     * <code>ISO_LANGUAGE_CODE_QQE = 444;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQE_VALUE = 444;
    /**
     * <code>ISO_LANGUAGE_CODE_RW = 445;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RW_VALUE = 445;
    /**
     * <code>ISO_LANGUAGE_CODE_QQD = 446;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQD_VALUE = 446;
    /**
     * <code>ISO_LANGUAGE_CODE_ZBL = 447;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZBL_VALUE = 447;
    /**
     * <code>ISO_LANGUAGE_CODE_MIC = 448;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MIC_VALUE = 448;
    /**
     * <code>ISO_LANGUAGE_CODE_QQG = 449;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQG_VALUE = 449;
    /**
     * <code>ISO_LANGUAGE_CODE_TWI = 450;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TWI_VALUE = 450;
    /**
     * <code>ISO_LANGUAGE_CODE_QQF = 451;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQF_VALUE = 451;
    /**
     * <code>ISO_LANGUAGE_CODE_QQI = 452;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQI_VALUE = 452;
    /**
     * <code>ISO_LANGUAGE_CODE_SUK = 453;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SUK_VALUE = 453;
    /**
     * <code>ISO_LANGUAGE_CODE_QQH = 454;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQH_VALUE = 454;
    /**
     * <code>ISO_LANGUAGE_CODE_QQJ = 455;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QQJ_VALUE = 455;
    /**
     * <code>ISO_LANGUAGE_CODE_POL = 456;</code>
     */
    public static final int ISO_LANGUAGE_CODE_POL_VALUE = 456;
    /**
     * <code>ISO_LANGUAGE_CODE_SUN = 457;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SUN_VALUE = 457;
    /**
     * <code>ISO_LANGUAGE_CODE_SA = 458;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SA_VALUE = 458;
    /**
     * <code>ISO_LANGUAGE_CODE_PON = 459;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PON_VALUE = 459;
    /**
     * <code>ISO_LANGUAGE_CODE_SC = 460;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SC_VALUE = 460;
    /**
     * <code>ISO_LANGUAGE_CODE_SUS = 461;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SUS_VALUE = 461;
    /**
     * <code>ISO_LANGUAGE_CODE_ARA = 462;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ARA_VALUE = 462;
    /**
     * <code>ISO_LANGUAGE_CODE_SD = 463;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SD_VALUE = 463;
    /**
     * <code>ISO_LANGUAGE_CODE_POR = 464;</code>
     */
    public static final int ISO_LANGUAGE_CODE_POR_VALUE = 464;
    /**
     * <code>ISO_LANGUAGE_CODE_SE = 465;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SE_VALUE = 465;
    /**
     * <code>ISO_LANGUAGE_CODE_ARC = 466;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ARC_VALUE = 466;
    /**
     * <code>ISO_LANGUAGE_CODE_MIN = 467;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MIN_VALUE = 467;
    /**
     * <code>ISO_LANGUAGE_CODE_SG = 468;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SG_VALUE = 468;
    /**
     * <code>ISO_LANGUAGE_CODE_SI = 469;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SI_VALUE = 469;
    /**
     * <code>ISO_LANGUAGE_CODE_MIS = 470;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MIS_VALUE = 470;
    /**
     * <code>ISO_LANGUAGE_CODE_ARG = 471;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ARG_VALUE = 471;
    /**
     * <code>ISO_LANGUAGE_CODE_SUX = 472;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SUX_VALUE = 472;
    /**
     * <code>ISO_LANGUAGE_CODE_SK = 473;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SK_VALUE = 473;
    /**
     * <code>ISO_LANGUAGE_CODE_BTK = 474;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BTK_VALUE = 474;
    /**
     * <code>ISO_LANGUAGE_CODE_SL = 475;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SL_VALUE = 475;
    /**
     * <code>ISO_LANGUAGE_CODE_SM = 476;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SM_VALUE = 476;
    /**
     * <code>ISO_LANGUAGE_CODE_SN = 477;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SN_VALUE = 477;
    /**
     * <code>ISO_LANGUAGE_CODE_SO = 478;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SO_VALUE = 478;
    /**
     * <code>ISO_LANGUAGE_CODE_UZB = 479;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UZB_VALUE = 479;
    /**
     * <code>ISO_LANGUAGE_CODE_ARN = 480;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ARN_VALUE = 480;
    /**
     * <code>ISO_LANGUAGE_CODE_SQ = 481;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SQ_VALUE = 481;
    /**
     * <code>ISO_LANGUAGE_CODE_ARP = 482;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ARP_VALUE = 482;
    /**
     * <code>ISO_LANGUAGE_CODE_SR = 483;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SR_VALUE = 483;
    /**
     * <code>ISO_LANGUAGE_CODE_SS = 484;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SS_VALUE = 484;
    /**
     * <code>ISO_LANGUAGE_CODE_ST = 485;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ST_VALUE = 485;
    /**
     * <code>ISO_LANGUAGE_CODE_SU = 486;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SU_VALUE = 486;
    /**
     * <code>ISO_LANGUAGE_CODE_ART = 487;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ART_VALUE = 487;
    /**
     * <code>ISO_LANGUAGE_CODE_SV = 488;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SV_VALUE = 488;
    /**
     * <code>ISO_LANGUAGE_CODE_SW = 489;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SW_VALUE = 489;
    /**
     * <code>ISO_LANGUAGE_CODE_YAO = 490;</code>
     */
    public static final int ISO_LANGUAGE_CODE_YAO_VALUE = 490;
    /**
     * <code>ISO_LANGUAGE_CODE_NLD = 491;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NLD_VALUE = 491;
    /**
     * <code>ISO_LANGUAGE_CODE_ARW = 492;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ARW_VALUE = 492;
    /**
     * <code>ISO_LANGUAGE_CODE_IBA = 493;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IBA_VALUE = 493;
    /**
     * <code>ISO_LANGUAGE_CODE_YAP = 494;</code>
     */
    public static final int ISO_LANGUAGE_CODE_YAP_VALUE = 494;
    /**
     * <code>ISO_LANGUAGE_CODE_TA = 495;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TA_VALUE = 495;
    /**
     * <code>ISO_LANGUAGE_CODE_BUA = 496;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BUA_VALUE = 496;
    /**
     * <code>ISO_LANGUAGE_CODE_TE = 497;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TE_VALUE = 497;
    /**
     * <code>ISO_LANGUAGE_CODE_TG = 498;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TG_VALUE = 498;
    /**
     * <code>ISO_LANGUAGE_CODE_TH = 499;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TH_VALUE = 499;
    /**
     * <code>ISO_LANGUAGE_CODE_TI = 500;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TI_VALUE = 500;
    /**
     * <code>ISO_LANGUAGE_CODE_BUG = 501;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BUG_VALUE = 501;
    /**
     * <code>ISO_LANGUAGE_CODE_IBO = 502;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IBO_VALUE = 502;
    /**
     * <code>ISO_LANGUAGE_CODE_TK = 503;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TK_VALUE = 503;
    /**
     * <code>ISO_LANGUAGE_CODE_BUL = 504;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BUL_VALUE = 504;
    /**
     * <code>ISO_LANGUAGE_CODE_TL = 505;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TL_VALUE = 505;
    /**
     * <code>ISO_LANGUAGE_CODE_ASM = 506;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ASM_VALUE = 506;
    /**
     * <code>ISO_LANGUAGE_CODE_TN = 507;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TN_VALUE = 507;
    /**
     * <code>ISO_LANGUAGE_CODE_TO = 508;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TO_VALUE = 508;
    /**
     * <code>ISO_LANGUAGE_CODE_SWA = 509;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SWA_VALUE = 509;
    /**
     * <code>ISO_LANGUAGE_CODE_TR = 510;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TR_VALUE = 510;
    /**
     * <code>ISO_LANGUAGE_CODE_TS = 511;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TS_VALUE = 511;
    /**
     * <code>ISO_LANGUAGE_CODE_SWE = 512;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SWE_VALUE = 512;
    /**
     * <code>ISO_LANGUAGE_CODE_TT = 513;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TT_VALUE = 513;
    /**
     * <code>ISO_LANGUAGE_CODE_DYU = 514;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DYU_VALUE = 514;
    /**
     * <code>ISO_LANGUAGE_CODE_TW = 515;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TW_VALUE = 515;
    /**
     * <code>ISO_LANGUAGE_CODE_AST = 516;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AST_VALUE = 516;
    /**
     * <code>ISO_LANGUAGE_CODE_TY = 517;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TY_VALUE = 517;
    /**
     * <code>ISO_LANGUAGE_CODE_MKD = 518;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MKD_VALUE = 518;
    /**
     * <code>ISO_LANGUAGE_CODE_RUN = 519;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RUN_VALUE = 519;
    /**
     * <code>ISO_LANGUAGE_CODE_MKH = 520;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MKH_VALUE = 520;
    /**
     * <code>ISO_LANGUAGE_CODE_RUP = 521;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RUP_VALUE = 521;
    /**
     * <code>ISO_LANGUAGE_CODE_LIN = 522;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LIN_VALUE = 522;
    /**
     * <code>ISO_LANGUAGE_CODE_TYV = 523;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TYV_VALUE = 523;
    /**
     * <code>ISO_LANGUAGE_CODE_LIM = 524;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LIM_VALUE = 524;
    /**
     * <code>ISO_LANGUAGE_CODE_RUS = 525;</code>
     */
    public static final int ISO_LANGUAGE_CODE_RUS_VALUE = 525;
    /**
     * <code>ISO_LANGUAGE_CODE_HAI = 526;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HAI_VALUE = 526;
    /**
     * <code>ISO_LANGUAGE_CODE_UG = 527;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UG_VALUE = 527;
    /**
     * <code>ISO_LANGUAGE_CODE_ATH = 528;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ATH_VALUE = 528;
    /**
     * <code>ISO_LANGUAGE_CODE_LIT = 529;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LIT_VALUE = 529;
    /**
     * <code>ISO_LANGUAGE_CODE_UK = 530;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UK_VALUE = 530;
    /**
     * <code>ISO_LANGUAGE_CODE_DZO = 531;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DZO_VALUE = 531;
    /**
     * <code>ISO_LANGUAGE_CODE_HAT = 532;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HAT_VALUE = 532;
    /**
     * <code>ISO_LANGUAGE_CODE_HAU = 533;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HAU_VALUE = 533;
    /**
     * <code>ISO_LANGUAGE_CODE_UR = 534;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UR_VALUE = 534;
    /**
     * <code>ISO_LANGUAGE_CODE_PRA = 535;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PRA_VALUE = 535;
    /**
     * <code>ISO_LANGUAGE_CODE_HAW = 536;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HAW_VALUE = 536;
    /**
     * <code>ISO_LANGUAGE_CODE_XAL = 537;</code>
     */
    public static final int ISO_LANGUAGE_CODE_XAL_VALUE = 537;
    /**
     * <code>ISO_LANGUAGE_CODE_ZEN = 538;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZEN_VALUE = 538;
    /**
     * <code>ISO_LANGUAGE_CODE_UZ = 539;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UZ_VALUE = 539;
    /**
     * <code>ISO_LANGUAGE_CODE_KHA = 540;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KHA_VALUE = 540;
    /**
     * <code>ISO_LANGUAGE_CODE_MLG = 541;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MLG_VALUE = 541;
    /**
     * <code>ISO_LANGUAGE_CODE_PRO = 542;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PRO_VALUE = 542;
    /**
     * <code>ISO_LANGUAGE_CODE_KHI = 543;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KHI_VALUE = 543;
    /**
     * <code>ISO_LANGUAGE_CODE_NNO = 544;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NNO_VALUE = 544;
    /**
     * <code>ISO_LANGUAGE_CODE_VE = 545;</code>
     */
    public static final int ISO_LANGUAGE_CODE_VE_VALUE = 545;
    /**
     * <code>ISO_LANGUAGE_CODE_KHM = 546;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KHM_VALUE = 546;
    /**
     * <code>ISO_LANGUAGE_CODE_VI = 547;</code>
     */
    public static final int ISO_LANGUAGE_CODE_VI_VALUE = 547;
    /**
     * <code>ISO_LANGUAGE_CODE_KHO = 548;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KHO_VALUE = 548;
    /**
     * <code>ISO_LANGUAGE_CODE_MLT = 549;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MLT_VALUE = 549;
    /**
     * <code>ISO_LANGUAGE_CODE_IDO = 550;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IDO_VALUE = 550;
    /**
     * <code>ISO_LANGUAGE_CODE_CYM = 551;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CYM_VALUE = 551;
    /**
     * <code>ISO_LANGUAGE_CODE_VO = 552;</code>
     */
    public static final int ISO_LANGUAGE_CODE_VO_VALUE = 552;
    /**
     * <code>ISO_LANGUAGE_CODE_SYC = 553;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SYC_VALUE = 553;
    /**
     * <code>ISO_LANGUAGE_CODE_AUS = 554;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AUS_VALUE = 554;
    /**
     * <code>ISO_LANGUAGE_CODE_NOB = 555;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NOB_VALUE = 555;
    /**
     * <code>ISO_LANGUAGE_CODE_QUE = 556;</code>
     */
    public static final int ISO_LANGUAGE_CODE_QUE_VALUE = 556;
    /**
     * <code>ISO_LANGUAGE_CODE_GAA = 557;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GAA_VALUE = 557;
    /**
     * <code>ISO_LANGUAGE_CODE_NOG = 558;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NOG_VALUE = 558;
    /**
     * <code>ISO_LANGUAGE_CODE_WA = 559;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WA_VALUE = 559;
    /**
     * <code>ISO_LANGUAGE_CODE_KIK = 560;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KIK_VALUE = 560;
    /**
     * <code>ISO_LANGUAGE_CODE_NON = 561;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NON_VALUE = 561;
    /**
     * <code>ISO_LANGUAGE_CODE_AVA = 562;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AVA_VALUE = 562;
    /**
     * <code>ISO_LANGUAGE_CODE_SYR = 563;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SYR_VALUE = 563;
    /**
     * <code>ISO_LANGUAGE_CODE_NOR = 564;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NOR_VALUE = 564;
    /**
     * <code>ISO_LANGUAGE_CODE_AVE = 565;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AVE_VALUE = 565;
    /**
     * <code>ISO_LANGUAGE_CODE_KIN = 566;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KIN_VALUE = 566;
    /**
     * <code>ISO_LANGUAGE_CODE_KIR = 567;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KIR_VALUE = 567;
    /**
     * <code>ISO_LANGUAGE_CODE_WO = 568;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WO_VALUE = 568;
    /**
     * <code>ISO_LANGUAGE_CODE_ZGH = 569;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZGH_VALUE = 569;
    /**
     * <code>ISO_LANGUAGE_CODE_GAY = 570;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GAY_VALUE = 570;
    /**
     * <code>ISO_LANGUAGE_CODE_WAK = 571;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WAK_VALUE = 571;
    /**
     * <code>ISO_LANGUAGE_CODE_MNC = 572;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MNC_VALUE = 572;
    /**
     * <code>ISO_LANGUAGE_CODE_WAL = 573;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WAL_VALUE = 573;
    /**
     * <code>ISO_LANGUAGE_CODE_ORI = 574;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ORI_VALUE = 574;
    /**
     * <code>ISO_LANGUAGE_CODE_GBA = 575;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GBA_VALUE = 575;
    /**
     * <code>ISO_LANGUAGE_CODE_WAS = 576;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WAS_VALUE = 576;
    /**
     * <code>ISO_LANGUAGE_CODE_MNI = 577;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MNI_VALUE = 577;
    /**
     * <code>ISO_LANGUAGE_CODE_WAR = 578;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WAR_VALUE = 578;
    /**
     * <code>ISO_LANGUAGE_CODE_AWA = 579;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AWA_VALUE = 579;
    /**
     * <code>ISO_LANGUAGE_CODE_ORM = 580;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ORM_VALUE = 580;
    /**
     * <code>ISO_LANGUAGE_CODE_MNO = 581;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MNO_VALUE = 581;
    /**
     * <code>ISO_LANGUAGE_CODE_XH = 582;</code>
     */
    public static final int ISO_LANGUAGE_CODE_XH_VALUE = 582;
    /**
     * <code>ISO_LANGUAGE_CODE_ZHA = 583;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZHA_VALUE = 583;
    /**
     * <code>ISO_LANGUAGE_CODE_BYN = 584;</code>
     */
    public static final int ISO_LANGUAGE_CODE_BYN_VALUE = 584;
    /**
     * <code>ISO_LANGUAGE_CODE_OSA = 585;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OSA_VALUE = 585;
    /**
     * <code>ISO_LANGUAGE_CODE_ZHO = 586;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZHO_VALUE = 586;
    /**
     * <code>ISO_LANGUAGE_CODE_HEB = 587;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HEB_VALUE = 587;
    /**
     * <code>ISO_LANGUAGE_CODE_MOH = 588;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MOH_VALUE = 588;
    /**
     * <code>ISO_LANGUAGE_CODE_MON = 589;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MON_VALUE = 589;
    /**
     * <code>ISO_LANGUAGE_CODE_NQO = 590;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NQO_VALUE = 590;
    /**
     * <code>ISO_LANGUAGE_CODE_OSS = 591;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OSS_VALUE = 591;
    /**
     * <code>ISO_LANGUAGE_CODE_PUS = 592;</code>
     */
    public static final int ISO_LANGUAGE_CODE_PUS_VALUE = 592;
    /**
     * <code>ISO_LANGUAGE_CODE_YI = 593;</code>
     */
    public static final int ISO_LANGUAGE_CODE_YI_VALUE = 593;
    /**
     * <code>ISO_LANGUAGE_CODE_MOS = 594;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MOS_VALUE = 594;
    /**
     * <code>ISO_LANGUAGE_CODE_FAN = 595;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FAN_VALUE = 595;
    /**
     * <code>ISO_LANGUAGE_CODE_HER = 596;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HER_VALUE = 596;
    /**
     * <code>ISO_LANGUAGE_CODE_FAO = 597;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FAO_VALUE = 597;
    /**
     * <code>ISO_LANGUAGE_CODE_YO = 598;</code>
     */
    public static final int ISO_LANGUAGE_CODE_YO_VALUE = 598;
    /**
     * <code>ISO_LANGUAGE_CODE_FAT = 599;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FAT_VALUE = 599;
    /**
     * <code>ISO_LANGUAGE_CODE_FAS = 600;</code>
     */
    public static final int ISO_LANGUAGE_CODE_FAS_VALUE = 600;
    /**
     * <code>ISO_LANGUAGE_CODE_OTA = 601;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OTA_VALUE = 601;
    /**
     * <code>ISO_LANGUAGE_CODE_VAI = 602;</code>
     */
    public static final int ISO_LANGUAGE_CODE_VAI_VALUE = 602;
    /**
     * <code>ISO_LANGUAGE_CODE_ZA = 603;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZA_VALUE = 603;
    /**
     * <code>ISO_LANGUAGE_CODE_OTO = 604;</code>
     */
    public static final int ISO_LANGUAGE_CODE_OTO_VALUE = 604;
    /**
     * <code>ISO_LANGUAGE_CODE_ZH = 605;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZH_VALUE = 605;
    /**
     * <code>ISO_LANGUAGE_CODE_AYM = 606;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AYM_VALUE = 606;
    /**
     * <code>ISO_LANGUAGE_CODE_ZU = 607;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZU_VALUE = 607;
    /**
     * <code>ISO_LANGUAGE_CODE_KMB = 608;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KMB_VALUE = 608;
    /**
     * <code>ISO_LANGUAGE_CODE_III = 609;</code>
     */
    public static final int ISO_LANGUAGE_CODE_III_VALUE = 609;
    /**
     * <code>ISO_LANGUAGE_CODE_LOL = 610;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LOL_VALUE = 610;
    /**
     * <code>ISO_LANGUAGE_CODE_NSO = 611;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NSO_VALUE = 611;
    /**
     * <code>ISO_LANGUAGE_CODE_AZE = 612;</code>
     */
    public static final int ISO_LANGUAGE_CODE_AZE_VALUE = 612;
    /**
     * <code>ISO_LANGUAGE_CODE_GEM = 613;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GEM_VALUE = 613;
    /**
     * <code>ISO_LANGUAGE_CODE_YID = 614;</code>
     */
    public static final int ISO_LANGUAGE_CODE_YID_VALUE = 614;
    /**
     * <code>ISO_LANGUAGE_CODE_LOZ = 615;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LOZ_VALUE = 615;
    /**
     * <code>ISO_LANGUAGE_CODE_GEZ = 616;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GEZ_VALUE = 616;
    /**
     * <code>ISO_LANGUAGE_CODE_WEN = 617;</code>
     */
    public static final int ISO_LANGUAGE_CODE_WEN_VALUE = 617;
    /**
     * <code>ISO_LANGUAGE_CODE_MRI = 618;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MRI_VALUE = 618;
    /**
     * <code>ISO_LANGUAGE_CODE_IJO = 619;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IJO_VALUE = 619;
    /**
     * <code>ISO_LANGUAGE_CODE_MSA = 620;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MSA_VALUE = 620;
    /**
     * <code>ISO_LANGUAGE_CODE_NUB = 621;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NUB_VALUE = 621;
    /**
     * <code>ISO_LANGUAGE_CODE_XHO = 622;</code>
     */
    public static final int ISO_LANGUAGE_CODE_XHO_VALUE = 622;
    /**
     * <code>ISO_LANGUAGE_CODE_KOK = 623;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KOK_VALUE = 623;
    /**
     * <code>ISO_LANGUAGE_CODE_KOM = 624;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KOM_VALUE = 624;
    /**
     * <code>ISO_LANGUAGE_CODE_HIL = 625;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HIL_VALUE = 625;
    /**
     * <code>ISO_LANGUAGE_CODE_KON = 626;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KON_VALUE = 626;
    /**
     * <code>ISO_LANGUAGE_CODE_HIN = 627;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HIN_VALUE = 627;
    /**
     * <code>ISO_LANGUAGE_CODE_HIM = 628;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HIM_VALUE = 628;
    /**
     * <code>ISO_LANGUAGE_CODE_KOS = 629;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KOS_VALUE = 629;
    /**
     * <code>ISO_LANGUAGE_CODE_KOR = 630;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KOR_VALUE = 630;
    /**
     * <code>ISO_LANGUAGE_CODE_DAK = 631;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DAK_VALUE = 631;
    /**
     * <code>ISO_LANGUAGE_CODE_DAN = 632;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DAN_VALUE = 632;
    /**
     * <code>ISO_LANGUAGE_CODE_IKU = 633;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IKU_VALUE = 633;
    /**
     * <code>ISO_LANGUAGE_CODE_HIT = 634;</code>
     */
    public static final int ISO_LANGUAGE_CODE_HIT_VALUE = 634;
    /**
     * <code>ISO_LANGUAGE_CODE_DAR = 635;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DAR_VALUE = 635;
    /**
     * <code>ISO_LANGUAGE_CODE_TAH = 636;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TAH_VALUE = 636;
    /**
     * <code>ISO_LANGUAGE_CODE_DAY = 637;</code>
     */
    public static final int ISO_LANGUAGE_CODE_DAY_VALUE = 637;
    /**
     * <code>ISO_LANGUAGE_CODE_TAI = 638;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TAI_VALUE = 638;
    /**
     * <code>ISO_LANGUAGE_CODE_VEN = 639;</code>
     */
    public static final int ISO_LANGUAGE_CODE_VEN_VALUE = 639;
    /**
     * <code>ISO_LANGUAGE_CODE_TAM = 640;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TAM_VALUE = 640;
    /**
     * <code>ISO_LANGUAGE_CODE_KPE = 641;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KPE_VALUE = 641;
    /**
     * <code>ISO_LANGUAGE_CODE_ILE = 642;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ILE_VALUE = 642;
    /**
     * <code>ISO_LANGUAGE_CODE_TAT = 643;</code>
     */
    public static final int ISO_LANGUAGE_CODE_TAT_VALUE = 643;
    /**
     * <code>ISO_LANGUAGE_CODE_ILO = 644;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ILO_VALUE = 644;
    /**
     * <code>ISO_LANGUAGE_CODE_ZND = 645;</code>
     */
    public static final int ISO_LANGUAGE_CODE_ZND_VALUE = 645;
    /**
     * <code>ISO_LANGUAGE_CODE_NWC = 646;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NWC_VALUE = 646;
    /**
     * <code>ISO_LANGUAGE_CODE_UDM = 647;</code>
     */
    public static final int ISO_LANGUAGE_CODE_UDM_VALUE = 647;
    /**
     * <code>ISO_LANGUAGE_CODE_MUL = 648;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MUL_VALUE = 648;
    /**
     * <code>ISO_LANGUAGE_CODE_CAD = 649;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CAD_VALUE = 649;
    /**
     * <code>ISO_LANGUAGE_CODE_MUN = 650;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MUN_VALUE = 650;
    /**
     * <code>ISO_LANGUAGE_CODE_CAI = 651;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CAI_VALUE = 651;
    /**
     * <code>ISO_LANGUAGE_CODE_MUS = 652;</code>
     */
    public static final int ISO_LANGUAGE_CODE_MUS_VALUE = 652;
    /**
     * <code>ISO_LANGUAGE_CODE_GIL = 653;</code>
     */
    public static final int ISO_LANGUAGE_CODE_GIL_VALUE = 653;
    /**
     * <code>ISO_LANGUAGE_CODE_CAR = 654;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CAR_VALUE = 654;
    /**
     * <code>ISO_LANGUAGE_CODE_CAU = 655;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CAU_VALUE = 655;
    /**
     * <code>ISO_LANGUAGE_CODE_CAT = 656;</code>
     */
    public static final int ISO_LANGUAGE_CODE_CAT_VALUE = 656;
    /**
     * <code>ISO_LANGUAGE_CODE_SAD = 657;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAD_VALUE = 657;
    /**
     * <code>ISO_LANGUAGE_CODE_SAG = 658;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAG_VALUE = 658;
    /**
     * <code>ISO_LANGUAGE_CODE_SAI = 659;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAI_VALUE = 659;
    /**
     * <code>ISO_LANGUAGE_CODE_SAH = 660;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAH_VALUE = 660;
    /**
     * <code>ISO_LANGUAGE_CODE_INA = 661;</code>
     */
    public static final int ISO_LANGUAGE_CODE_INA_VALUE = 661;
    /**
     * <code>ISO_LANGUAGE_CODE_KRC = 662;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KRC_VALUE = 662;
    /**
     * <code>ISO_LANGUAGE_CODE_IND = 663;</code>
     */
    public static final int ISO_LANGUAGE_CODE_IND_VALUE = 663;
    /**
     * <code>ISO_LANGUAGE_CODE_SAM = 664;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAM_VALUE = 664;
    /**
     * <code>ISO_LANGUAGE_CODE_INC = 665;</code>
     */
    public static final int ISO_LANGUAGE_CODE_INC_VALUE = 665;
    /**
     * <code>ISO_LANGUAGE_CODE_SAL = 666;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAL_VALUE = 666;
    /**
     * <code>ISO_LANGUAGE_CODE_SAN = 667;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAN_VALUE = 667;
    /**
     * <code>ISO_LANGUAGE_CODE_INE = 668;</code>
     */
    public static final int ISO_LANGUAGE_CODE_INE_VALUE = 668;
    /**
     * <code>ISO_LANGUAGE_CODE_INH = 669;</code>
     */
    public static final int ISO_LANGUAGE_CODE_INH_VALUE = 669;
    /**
     * <code>ISO_LANGUAGE_CODE_KRL = 670;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KRL_VALUE = 670;
    /**
     * <code>ISO_LANGUAGE_CODE_SAS = 671;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAS_VALUE = 671;
    /**
     * <code>ISO_LANGUAGE_CODE_SAT = 672;</code>
     */
    public static final int ISO_LANGUAGE_CODE_SAT_VALUE = 672;
    /**
     * <code>ISO_LANGUAGE_CODE_JPN = 673;</code>
     */
    public static final int ISO_LANGUAGE_CODE_JPN_VALUE = 673;
    /**
     * <code>ISO_LANGUAGE_CODE_EFI = 674;</code>
     */
    public static final int ISO_LANGUAGE_CODE_EFI_VALUE = 674;
    /**
     * <code>ISO_LANGUAGE_CODE_KRO = 675;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KRO_VALUE = 675;
    /**
     * <code>ISO_LANGUAGE_CODE_JPR = 676;</code>
     */
    public static final int ISO_LANGUAGE_CODE_JPR_VALUE = 676;
    /**
     * <code>ISO_LANGUAGE_CODE_KRU = 677;</code>
     */
    public static final int ISO_LANGUAGE_CODE_KRU_VALUE = 677;
    /**
     * <code>ISO_LANGUAGE_CODE_LTZ = 678;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LTZ_VALUE = 678;
    /**
     * <code>ISO_LANGUAGE_CODE_NYA = 679;</code>
     */
    public static final int ISO_LANGUAGE_CODE_NYA_VALUE = 679;
    /**
     * <code>ISO_LANGUAGE_CODE_LUB = 680;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LUB_VALUE = 680;
    /**
     * <code>ISO_LANGUAGE_CODE_LUA = 681;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LUA_VALUE = 681;
    /**
     * <code>ISO_LANGUAGE_CODE_LUG = 682;</code>
     */
    public static final int ISO_LANGUAGE_CODE_LUG_VALUE = 682;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IsoLanguageCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IsoLanguageCode forNumber(int value) {
      switch (value) {
        case 0: return ISO_LANGUAGE_CODE_LUI;
        case 1: return ISO_LANGUAGE_CODE_NYN;
        case 2: return ISO_LANGUAGE_CODE_MWL;
        case 3: return ISO_LANGUAGE_CODE_NYM;
        case 4: return ISO_LANGUAGE_CODE_BAD;
        case 5: return ISO_LANGUAGE_CODE_LUN;
        case 6: return ISO_LANGUAGE_CODE_NYO;
        case 7: return ISO_LANGUAGE_CODE_FIJ;
        case 8: return ISO_LANGUAGE_CODE_LUO;
        case 9: return ISO_LANGUAGE_CODE_FIL;
        case 10: return ISO_LANGUAGE_CODE_HMN;
        case 11: return ISO_LANGUAGE_CODE_MWR;
        case 12: return ISO_LANGUAGE_CODE_FIN;
        case 13: return ISO_LANGUAGE_CODE_DEL;
        case 14: return ISO_LANGUAGE_CODE_HMO;
        case 15: return ISO_LANGUAGE_CODE_BAI;
        case 16: return ISO_LANGUAGE_CODE_LUS;
        case 17: return ISO_LANGUAGE_CODE_BAL;
        case 18: return ISO_LANGUAGE_CODE_DEN;
        case 19: return ISO_LANGUAGE_CODE_BAK;
        case 20: return ISO_LANGUAGE_CODE_BAN;
        case 21: return ISO_LANGUAGE_CODE_UGA;
        case 22: return ISO_LANGUAGE_CODE_BAM;
        case 23: return ISO_LANGUAGE_CODE_VIE;
        case 24: return ISO_LANGUAGE_CODE_FIU;
        case 25: return ISO_LANGUAGE_CODE_BAT;
        case 26: return ISO_LANGUAGE_CODE_DEU;
        case 27: return ISO_LANGUAGE_CODE_BAS;
        case 28: return ISO_LANGUAGE_CODE_EGY;
        case 29: return ISO_LANGUAGE_CODE_TEL;
        case 30: return ISO_LANGUAGE_CODE_RAJ;
        case 31: return ISO_LANGUAGE_CODE_JRB;
        case 32: return ISO_LANGUAGE_CODE_NZI;
        case 33: return ISO_LANGUAGE_CODE_GLA;
        case 34: return ISO_LANGUAGE_CODE_YOR;
        case 35: return ISO_LANGUAGE_CODE_TEM;
        case 36: return ISO_LANGUAGE_CODE_SCO;
        case 37: return ISO_LANGUAGE_CODE_SCN;
        case 38: return ISO_LANGUAGE_CODE_AA;
        case 39: return ISO_LANGUAGE_CODE_RAP;
        case 40: return ISO_LANGUAGE_CODE_TER;
        case 41: return ISO_LANGUAGE_CODE_AB;
        case 42: return ISO_LANGUAGE_CODE_GLE;
        case 43: return ISO_LANGUAGE_CODE_RAR;
        case 44: return ISO_LANGUAGE_CODE_TET;
        case 45: return ISO_LANGUAGE_CODE_GLG;
        case 46: return ISO_LANGUAGE_CODE_AE;
        case 47: return ISO_LANGUAGE_CODE_AF;
        case 48: return ISO_LANGUAGE_CODE_IPK;
        case 49: return ISO_LANGUAGE_CODE_AK;
        case 50: return ISO_LANGUAGE_CODE_AM;
        case 51: return ISO_LANGUAGE_CODE_AN;
        case 52: return ISO_LANGUAGE_CODE_GLV;
        case 53: return ISO_LANGUAGE_CODE_AR;
        case 54: return ISO_LANGUAGE_CODE_AS;
        case 55: return ISO_LANGUAGE_CODE_MYA;
        case 56: return ISO_LANGUAGE_CODE_AV;
        case 57: return ISO_LANGUAGE_CODE_YPK;
        case 58: return ISO_LANGUAGE_CODE_KUA;
        case 59: return ISO_LANGUAGE_CODE_AY;
        case 60: return ISO_LANGUAGE_CODE_WLN;
        case 61: return ISO_LANGUAGE_CODE_AZ;
        case 62: return ISO_LANGUAGE_CODE_BA;
        case 63: return ISO_LANGUAGE_CODE_AAA;
        case 64: return ISO_LANGUAGE_CODE_CEB;
        case 65: return ISO_LANGUAGE_CODE_KUM;
        case 66: return ISO_LANGUAGE_CODE_BE;
        case 67: return ISO_LANGUAGE_CODE_GMH;
        case 68: return ISO_LANGUAGE_CODE_MYN;
        case 69: return ISO_LANGUAGE_CODE_BG;
        case 70: return ISO_LANGUAGE_CODE_BH;
        case 71: return ISO_LANGUAGE_CODE_BI;
        case 72: return ISO_LANGUAGE_CODE_KUR;
        case 73: return ISO_LANGUAGE_CODE_BM;
        case 74: return ISO_LANGUAGE_CODE_CEL;
        case 75: return ISO_LANGUAGE_CODE_KUT;
        case 76: return ISO_LANGUAGE_CODE_MYV;
        case 77: return ISO_LANGUAGE_CODE_BN;
        case 78: return ISO_LANGUAGE_CODE_BO;
        case 79: return ISO_LANGUAGE_CODE_DGR;
        case 80: return ISO_LANGUAGE_CODE_BR;
        case 81: return ISO_LANGUAGE_CODE_CES;
        case 82: return ISO_LANGUAGE_CODE_BS;
        case 83: return ISO_LANGUAGE_CODE_UIG;
        case 84: return ISO_LANGUAGE_CODE_AAR;
        case 85: return ISO_LANGUAGE_CODE_TGL;
        case 86: return ISO_LANGUAGE_CODE_TGK;
        case 87: return ISO_LANGUAGE_CODE_IRA;
        case 88: return ISO_LANGUAGE_CODE_SEM;
        case 89: return ISO_LANGUAGE_CODE_SEL;
        case 90: return ISO_LANGUAGE_CODE_CA;
        case 91: return ISO_LANGUAGE_CODE_CE;
        case 92: return ISO_LANGUAGE_CODE_CH;
        case 93: return ISO_LANGUAGE_CODE_IRO;
        case 94: return ISO_LANGUAGE_CODE_ABK;
        case 95: return ISO_LANGUAGE_CODE_CO;
        case 96: return ISO_LANGUAGE_CODE_THA;
        case 97: return ISO_LANGUAGE_CODE_CR;
        case 98: return ISO_LANGUAGE_CODE_CS;
        case 99: return ISO_LANGUAGE_CODE_CU;
        case 100: return ISO_LANGUAGE_CODE_CV;
        case 101: return ISO_LANGUAGE_CODE_CY;
        case 102: return ISO_LANGUAGE_CODE_EKA;
        case 103: return ISO_LANGUAGE_CODE_DA;
        case 104: return ISO_LANGUAGE_CODE_DE;
        case 105: return ISO_LANGUAGE_CODE_GOH;
        case 106: return ISO_LANGUAGE_CODE_ACE;
        case 107: return ISO_LANGUAGE_CODE_ISL;
        case 108: return ISO_LANGUAGE_CODE_BEJ;
        case 109: return ISO_LANGUAGE_CODE_ACH;
        case 110: return ISO_LANGUAGE_CODE_GON;
        case 111: return ISO_LANGUAGE_CODE_BEL;
        case 112: return ISO_LANGUAGE_CODE_DIN;
        case 113: return ISO_LANGUAGE_CODE_BEN;
        case 114: return ISO_LANGUAGE_CODE_BEM;
        case 115: return ISO_LANGUAGE_CODE_GOR;
        case 116: return ISO_LANGUAGE_CODE_SGA;
        case 117: return ISO_LANGUAGE_CODE_GOT;
        case 118: return ISO_LANGUAGE_CODE_BER;
        case 119: return ISO_LANGUAGE_CODE_DIV;
        case 120: return ISO_LANGUAGE_CODE_ZUL;
        case 121: return ISO_LANGUAGE_CODE_PAA;
        case 122: return ISO_LANGUAGE_CODE_DV;
        case 123: return ISO_LANGUAGE_CODE_ZUN;
        case 124: return ISO_LANGUAGE_CODE_TIG;
        case 125: return ISO_LANGUAGE_CODE_WOL;
        case 126: return ISO_LANGUAGE_CODE_DZ;
        case 127: return ISO_LANGUAGE_CODE_ITA;
        case 128: return ISO_LANGUAGE_CODE_PAG;
        case 129: return ISO_LANGUAGE_CODE_PAL;
        case 130: return ISO_LANGUAGE_CODE_SGN;
        case 131: return ISO_LANGUAGE_CODE_PAN;
        case 132: return ISO_LANGUAGE_CODE_TIR;
        case 133: return ISO_LANGUAGE_CODE_CHB;
        case 134: return ISO_LANGUAGE_CODE_CHA;
        case 135: return ISO_LANGUAGE_CODE_UKR;
        case 136: return ISO_LANGUAGE_CODE_PAM;
        case 137: return ISO_LANGUAGE_CODE_PAP;
        case 138: return ISO_LANGUAGE_CODE_ADA;
        case 139: return ISO_LANGUAGE_CODE_EE;
        case 140: return ISO_LANGUAGE_CODE_TIV;
        case 141: return ISO_LANGUAGE_CODE_CHE;
        case 142: return ISO_LANGUAGE_CODE_CHG;
        case 143: return ISO_LANGUAGE_CODE_ELL;
        case 144: return ISO_LANGUAGE_CODE_PAU;
        case 145: return ISO_LANGUAGE_CODE_EL;
        case 146: return ISO_LANGUAGE_CODE_CHK;
        case 147: return ISO_LANGUAGE_CODE_CHN;
        case 148: return ISO_LANGUAGE_CODE_EN;
        case 149: return ISO_LANGUAGE_CODE_CHM;
        case 150: return ISO_LANGUAGE_CODE_EO;
        case 151: return ISO_LANGUAGE_CODE_CHP;
        case 152: return ISO_LANGUAGE_CODE_CHO;
        case 153: return ISO_LANGUAGE_CODE_CHR;
        case 154: return ISO_LANGUAGE_CODE_HRV;
        case 155: return ISO_LANGUAGE_CODE_ES;
        case 156: return ISO_LANGUAGE_CODE_ET;
        case 157: return ISO_LANGUAGE_CODE_CHV;
        case 158: return ISO_LANGUAGE_CODE_EU;
        case 159: return ISO_LANGUAGE_CODE_ELX;
        case 160: return ISO_LANGUAGE_CODE_CHU;
        case 161: return ISO_LANGUAGE_CODE_CHY;
        case 162: return ISO_LANGUAGE_CODE_HSB;
        case 163: return ISO_LANGUAGE_CODE_ADY;
        case 164: return ISO_LANGUAGE_CODE_SHN;
        case 165: return ISO_LANGUAGE_CODE_FA;
        case 166: return ISO_LANGUAGE_CODE_BGC;
        case 167: return ISO_LANGUAGE_CODE_FF;
        case 168: return ISO_LANGUAGE_CODE_FI;
        case 169: return ISO_LANGUAGE_CODE_FJ;
        case 170: return ISO_LANGUAGE_CODE_FON;
        case 171: return ISO_LANGUAGE_CODE_FO;
        case 172: return ISO_LANGUAGE_CODE_UMB;
        case 173: return ISO_LANGUAGE_CODE_FR;
        case 174: return ISO_LANGUAGE_CODE_SID;
        case 175: return ISO_LANGUAGE_CODE_VOL;
        case 176: return ISO_LANGUAGE_CODE_FY;
        case 177: return ISO_LANGUAGE_CODE_TKL;
        case 178: return ISO_LANGUAGE_CODE_GRB;
        case 179: return ISO_LANGUAGE_CODE_SIO;
        case 180: return ISO_LANGUAGE_CODE_SIN;
        case 181: return ISO_LANGUAGE_CODE_GRC;
        case 182: return ISO_LANGUAGE_CODE_GA;
        case 183: return ISO_LANGUAGE_CODE_VOT;
        case 184: return ISO_LANGUAGE_CODE_GD;
        case 185: return ISO_LANGUAGE_CODE_AFA;
        case 186: return ISO_LANGUAGE_CODE_ENG;
        case 187: return ISO_LANGUAGE_CODE_SIT;
        case 188: return ISO_LANGUAGE_CODE_GRN;
        case 189: return ISO_LANGUAGE_CODE_AFH;
        case 190: return ISO_LANGUAGE_CODE_GL;
        case 191: return ISO_LANGUAGE_CODE_ENM;
        case 192: return ISO_LANGUAGE_CODE_GN;
        case 193: return ISO_LANGUAGE_CODE_BHO;
        case 194: return ISO_LANGUAGE_CODE_UND;
        case 195: return ISO_LANGUAGE_CODE_AFR;
        case 196: return ISO_LANGUAGE_CODE_GU;
        case 197: return ISO_LANGUAGE_CODE_GV;
        case 198: return ISO_LANGUAGE_CODE_TLI;
        case 199: return ISO_LANGUAGE_CODE_TLH;
        case 200: return ISO_LANGUAGE_CODE_HA;
        case 201: return ISO_LANGUAGE_CODE_ZXX;
        case 202: return ISO_LANGUAGE_CODE_HE;
        case 203: return ISO_LANGUAGE_CODE_BIH;
        case 204: return ISO_LANGUAGE_CODE_HUN;
        case 205: return ISO_LANGUAGE_CODE_HI;
        case 206: return ISO_LANGUAGE_CODE_HUP;
        case 207: return ISO_LANGUAGE_CODE_BIK;
        case 208: return ISO_LANGUAGE_CODE_BIN;
        case 209: return ISO_LANGUAGE_CODE_HO;
        case 210: return ISO_LANGUAGE_CODE_HR;
        case 211: return ISO_LANGUAGE_CODE_GSW;
        case 212: return ISO_LANGUAGE_CODE_HT;
        case 213: return ISO_LANGUAGE_CODE_BIS;
        case 214: return ISO_LANGUAGE_CODE_HU;
        case 215: return ISO_LANGUAGE_CODE_TMH;
        case 216: return ISO_LANGUAGE_CODE_HY;
        case 217: return ISO_LANGUAGE_CODE_HZ;
        case 218: return ISO_LANGUAGE_CODE_FRA;
        case 219: return ISO_LANGUAGE_CODE_OCI;
        case 220: return ISO_LANGUAGE_CODE_NAH;
        case 221: return ISO_LANGUAGE_CODE_NAI;
        case 222: return ISO_LANGUAGE_CODE_IA;
        case 223: return ISO_LANGUAGE_CODE_ID;
        case 224: return ISO_LANGUAGE_CODE_PEO;
        case 225: return ISO_LANGUAGE_CODE_IE;
        case 226: return ISO_LANGUAGE_CODE_NAP;
        case 227: return ISO_LANGUAGE_CODE_IG;
        case 228: return ISO_LANGUAGE_CODE_II;
        case 229: return ISO_LANGUAGE_CODE_FRM;
        case 230: return ISO_LANGUAGE_CODE_ZZA;
        case 231: return ISO_LANGUAGE_CODE_IK;
        case 232: return ISO_LANGUAGE_CODE_NAV;
        case 233: return ISO_LANGUAGE_CODE_FRO;
        case 234: return ISO_LANGUAGE_CODE_NAU;
        case 235: return ISO_LANGUAGE_CODE_EPO;
        case 236: return ISO_LANGUAGE_CODE_IO;
        case 237: return ISO_LANGUAGE_CODE_FRS;
        case 238: return ISO_LANGUAGE_CODE_FRR;
        case 239: return ISO_LANGUAGE_CODE_SLA;
        case 240: return ISO_LANGUAGE_CODE_IS;
        case 241: return ISO_LANGUAGE_CODE_IT;
        case 242: return ISO_LANGUAGE_CODE_FRY;
        case 243: return ISO_LANGUAGE_CODE_IU;
        case 244: return ISO_LANGUAGE_CODE_SLK;
        case 245: return ISO_LANGUAGE_CODE_JA;
        case 246: return ISO_LANGUAGE_CODE_CMC;
        case 247: return ISO_LANGUAGE_CODE_NBL;
        case 248: return ISO_LANGUAGE_CODE_SLV;
        case 249: return ISO_LANGUAGE_CODE_GUJ;
        case 250: return ISO_LANGUAGE_CODE_DOI;
        case 251: return ISO_LANGUAGE_CODE_SMA;
        case 252: return ISO_LANGUAGE_CODE_AIN;
        case 253: return ISO_LANGUAGE_CODE_SME;
        case 254: return ISO_LANGUAGE_CODE_JV;
        case 255: return ISO_LANGUAGE_CODE_TOG;
        case 256: return ISO_LANGUAGE_CODE_SMI;
        case 257: return ISO_LANGUAGE_CODE_MAD;
        case 258: return ISO_LANGUAGE_CODE_SMJ;
        case 259: return ISO_LANGUAGE_CODE_TON;
        case 260: return ISO_LANGUAGE_CODE_MAG;
        case 261: return ISO_LANGUAGE_CODE_SMO;
        case 262: return ISO_LANGUAGE_CODE_MAI;
        case 263: return ISO_LANGUAGE_CODE_MAH;
        case 264: return ISO_LANGUAGE_CODE_SMN;
        case 265: return ISO_LANGUAGE_CODE_KA;
        case 266: return ISO_LANGUAGE_CODE_BLA;
        case 267: return ISO_LANGUAGE_CODE_MAK;
        case 268: return ISO_LANGUAGE_CODE_SMS;
        case 269: return ISO_LANGUAGE_CODE_MAL;
        case 270: return ISO_LANGUAGE_CODE_MAN;
        case 271: return ISO_LANGUAGE_CODE_KG;
        case 272: return ISO_LANGUAGE_CODE_MAP;
        case 273: return ISO_LANGUAGE_CODE_KI;
        case 274: return ISO_LANGUAGE_CODE_MAS;
        case 275: return ISO_LANGUAGE_CODE_KJ;
        case 276: return ISO_LANGUAGE_CODE_MAR;
        case 277: return ISO_LANGUAGE_CODE_KK;
        case 278: return ISO_LANGUAGE_CODE_KL;
        case 279: return ISO_LANGUAGE_CODE_KM;
        case 280: return ISO_LANGUAGE_CODE_KN;
        case 281: return ISO_LANGUAGE_CODE_KO;
        case 282: return ISO_LANGUAGE_CODE_URD;
        case 283: return ISO_LANGUAGE_CODE_CNR;
        case 284: return ISO_LANGUAGE_CODE_KR;
        case 285: return ISO_LANGUAGE_CODE_SNA;
        case 286: return ISO_LANGUAGE_CODE_KS;
        case 287: return ISO_LANGUAGE_CODE_SND;
        case 288: return ISO_LANGUAGE_CODE_KU;
        case 289: return ISO_LANGUAGE_CODE_KV;
        case 290: return ISO_LANGUAGE_CODE_KW;
        case 291: return ISO_LANGUAGE_CODE_TPI;
        case 292: return ISO_LANGUAGE_CODE_KY;
        case 293: return ISO_LANGUAGE_CODE_NDE;
        case 294: return ISO_LANGUAGE_CODE_PHI;
        case 295: return ISO_LANGUAGE_CODE_SNK;
        case 296: return ISO_LANGUAGE_CODE_HYE;
        case 297: return ISO_LANGUAGE_CODE_LA;
        case 298: return ISO_LANGUAGE_CODE_AKA;
        case 299: return ISO_LANGUAGE_CODE_LB;
        case 300: return ISO_LANGUAGE_CODE_PHN;
        case 301: return ISO_LANGUAGE_CODE_NDO;
        case 302: return ISO_LANGUAGE_CODE_GWI;
        case 303: return ISO_LANGUAGE_CODE_LG;
        case 304: return ISO_LANGUAGE_CODE_FUL;
        case 305: return ISO_LANGUAGE_CODE_NDS;
        case 306: return ISO_LANGUAGE_CODE_LI;
        case 307: return ISO_LANGUAGE_CODE_AKK;
        case 308: return ISO_LANGUAGE_CODE_LN;
        case 309: return ISO_LANGUAGE_CODE_FUR;
        case 310: return ISO_LANGUAGE_CODE_LO;
        case 311: return ISO_LANGUAGE_CODE_COP;
        case 312: return ISO_LANGUAGE_CODE_COS;
        case 313: return ISO_LANGUAGE_CODE_EST;
        case 314: return ISO_LANGUAGE_CODE_COR;
        case 315: return ISO_LANGUAGE_CODE_LT;
        case 316: return ISO_LANGUAGE_CODE_LU;
        case 317: return ISO_LANGUAGE_CODE_LV;
        case 318: return ISO_LANGUAGE_CODE_SOG;
        case 319: return ISO_LANGUAGE_CODE_LAD;
        case 320: return ISO_LANGUAGE_CODE_SOM;
        case 321: return ISO_LANGUAGE_CODE_DRA;
        case 322: return ISO_LANGUAGE_CODE_LAH;
        case 323: return ISO_LANGUAGE_CODE_SON;
        case 324: return ISO_LANGUAGE_CODE_NEP;
        case 325: return ISO_LANGUAGE_CODE_CPF;
        case 326: return ISO_LANGUAGE_CODE_SOT;
        case 327: return ISO_LANGUAGE_CODE_CPE;
        case 328: return ISO_LANGUAGE_CODE_LAM;
        case 329: return ISO_LANGUAGE_CODE_MG;
        case 330: return ISO_LANGUAGE_CODE_LAO;
        case 331: return ISO_LANGUAGE_CODE_MH;
        case 332: return ISO_LANGUAGE_CODE_ALE;
        case 333: return ISO_LANGUAGE_CODE_MI;
        case 334: return ISO_LANGUAGE_CODE_ALG;
        case 335: return ISO_LANGUAGE_CODE_LAT;
        case 336: return ISO_LANGUAGE_CODE_MK;
        case 337: return ISO_LANGUAGE_CODE_ML;
        case 338: return ISO_LANGUAGE_CODE_LAV;
        case 339: return ISO_LANGUAGE_CODE_MN;
        case 340: return ISO_LANGUAGE_CODE_NEW;
        case 341: return ISO_LANGUAGE_CODE_MO;
        case 342: return ISO_LANGUAGE_CODE_CPP;
        case 343: return ISO_LANGUAGE_CODE_SPA;
        case 344: return ISO_LANGUAGE_CODE_MR;
        case 345: return ISO_LANGUAGE_CODE_MS;
        case 346: return ISO_LANGUAGE_CODE_MT;
        case 347: return ISO_LANGUAGE_CODE_ALT;
        case 348: return ISO_LANGUAGE_CODE_BNT;
        case 349: return ISO_LANGUAGE_CODE_MY;
        case 350: return ISO_LANGUAGE_CODE_MDF;
        case 351: return ISO_LANGUAGE_CODE_DSB;
        case 352: return ISO_LANGUAGE_CODE_NA;
        case 353: return ISO_LANGUAGE_CODE_NB;
        case 354: return ISO_LANGUAGE_CODE_BOD;
        case 355: return ISO_LANGUAGE_CODE_ND;
        case 356: return ISO_LANGUAGE_CODE_NE;
        case 357: return ISO_LANGUAGE_CODE_NG;
        case 358: return ISO_LANGUAGE_CODE_MDR;
        case 359: return ISO_LANGUAGE_CODE_AMH;
        case 360: return ISO_LANGUAGE_CODE_NL;
        case 361: return ISO_LANGUAGE_CODE_NN;
        case 362: return ISO_LANGUAGE_CODE_NO;
        case 363: return ISO_LANGUAGE_CODE_EUS;
        case 364: return ISO_LANGUAGE_CODE_NR;
        case 365: return ISO_LANGUAGE_CODE_ROA;
        case 366: return ISO_LANGUAGE_CODE_BOS;
        case 367: return ISO_LANGUAGE_CODE_NV;
        case 368: return ISO_LANGUAGE_CODE_ROH;
        case 369: return ISO_LANGUAGE_CODE_SQI;
        case 370: return ISO_LANGUAGE_CODE_KAA;
        case 371: return ISO_LANGUAGE_CODE_NY;
        case 372: return ISO_LANGUAGE_CODE_TSI;
        case 373: return ISO_LANGUAGE_CODE_KAC;
        case 374: return ISO_LANGUAGE_CODE_KAB;
        case 375: return ISO_LANGUAGE_CODE_TSN;
        case 376: return ISO_LANGUAGE_CODE_RON;
        case 377: return ISO_LANGUAGE_CODE_TSO;
        case 378: return ISO_LANGUAGE_CODE_ROM;
        case 379: return ISO_LANGUAGE_CODE_OC;
        case 380: return ISO_LANGUAGE_CODE_KAM;
        case 381: return ISO_LANGUAGE_CODE_CRE;
        case 382: return ISO_LANGUAGE_CODE_KAL;
        case 383: return ISO_LANGUAGE_CODE_MEN;
        case 384: return ISO_LANGUAGE_CODE_CRH;
        case 385: return ISO_LANGUAGE_CODE_KAN;
        case 386: return ISO_LANGUAGE_CODE_OJ;
        case 387: return ISO_LANGUAGE_CODE_ANG;
        case 388: return ISO_LANGUAGE_CODE_KAS;
        case 389: return ISO_LANGUAGE_CODE_KAR;
        case 390: return ISO_LANGUAGE_CODE_KAU;
        case 391: return ISO_LANGUAGE_CODE_OM;
        case 392: return ISO_LANGUAGE_CODE_KAT;
        case 393: return ISO_LANGUAGE_CODE_CRP;
        case 394: return ISO_LANGUAGE_CODE_KAW;
        case 395: return ISO_LANGUAGE_CODE_ANP;
        case 396: return ISO_LANGUAGE_CODE_OR;
        case 397: return ISO_LANGUAGE_CODE_OS;
        case 398: return ISO_LANGUAGE_CODE_SRD;
        case 399: return ISO_LANGUAGE_CODE_KAZ;
        case 400: return ISO_LANGUAGE_CODE_PLI;
        case 401: return ISO_LANGUAGE_CODE_KBD;
        case 402: return ISO_LANGUAGE_CODE_SRN;
        case 403: return ISO_LANGUAGE_CODE_OJI;
        case 404: return ISO_LANGUAGE_CODE_SRP;
        case 405: return ISO_LANGUAGE_CODE_PA;
        case 406: return ISO_LANGUAGE_CODE_DUA;
        case 407: return ISO_LANGUAGE_CODE_EWE;
        case 408: return ISO_LANGUAGE_CODE_SRR;
        case 409: return ISO_LANGUAGE_CODE_CSB;
        case 410: return ISO_LANGUAGE_CODE_PI;
        case 411: return ISO_LANGUAGE_CODE_PL;
        case 412: return ISO_LANGUAGE_CODE_EWO;
        case 413: return ISO_LANGUAGE_CODE_DUM;
        case 414: return ISO_LANGUAGE_CODE_SSA;
        case 415: return ISO_LANGUAGE_CODE_PS;
        case 416: return ISO_LANGUAGE_CODE_PT;
        case 417: return ISO_LANGUAGE_CODE_MGA;
        case 418: return ISO_LANGUAGE_CODE_NIA;
        case 419: return ISO_LANGUAGE_CODE_NIC;
        case 420: return ISO_LANGUAGE_CODE_TUK;
        case 421: return ISO_LANGUAGE_CODE_TUM;
        case 422: return ISO_LANGUAGE_CODE_TUP;
        case 423: return ISO_LANGUAGE_CODE_TUR;
        case 424: return ISO_LANGUAGE_CODE_BRA;
        case 425: return ISO_LANGUAGE_CODE_TUT;
        case 426: return ISO_LANGUAGE_CODE_APA;
        case 427: return ISO_LANGUAGE_CODE_BRE;
        case 428: return ISO_LANGUAGE_CODE_SSW;
        case 429: return ISO_LANGUAGE_CODE_NIU;
        case 430: return ISO_LANGUAGE_CODE_JAV;
        case 431: return ISO_LANGUAGE_CODE_LEZ;
        case 432: return ISO_LANGUAGE_CODE_QU;
        case 433: return ISO_LANGUAGE_CODE_ZAP;
        case 434: return ISO_LANGUAGE_CODE_TVL;
        case 435: return ISO_LANGUAGE_CODE_JBO;
        case 436: return ISO_LANGUAGE_CODE_RM;
        case 437: return ISO_LANGUAGE_CODE_RN;
        case 438: return ISO_LANGUAGE_CODE_RO;
        case 439: return ISO_LANGUAGE_CODE_CUS;
        case 440: return ISO_LANGUAGE_CODE_QQA;
        case 441: return ISO_LANGUAGE_CODE_QQC;
        case 442: return ISO_LANGUAGE_CODE_RU;
        case 443: return ISO_LANGUAGE_CODE_QQB;
        case 444: return ISO_LANGUAGE_CODE_QQE;
        case 445: return ISO_LANGUAGE_CODE_RW;
        case 446: return ISO_LANGUAGE_CODE_QQD;
        case 447: return ISO_LANGUAGE_CODE_ZBL;
        case 448: return ISO_LANGUAGE_CODE_MIC;
        case 449: return ISO_LANGUAGE_CODE_QQG;
        case 450: return ISO_LANGUAGE_CODE_TWI;
        case 451: return ISO_LANGUAGE_CODE_QQF;
        case 452: return ISO_LANGUAGE_CODE_QQI;
        case 453: return ISO_LANGUAGE_CODE_SUK;
        case 454: return ISO_LANGUAGE_CODE_QQH;
        case 455: return ISO_LANGUAGE_CODE_QQJ;
        case 456: return ISO_LANGUAGE_CODE_POL;
        case 457: return ISO_LANGUAGE_CODE_SUN;
        case 458: return ISO_LANGUAGE_CODE_SA;
        case 459: return ISO_LANGUAGE_CODE_PON;
        case 460: return ISO_LANGUAGE_CODE_SC;
        case 461: return ISO_LANGUAGE_CODE_SUS;
        case 462: return ISO_LANGUAGE_CODE_ARA;
        case 463: return ISO_LANGUAGE_CODE_SD;
        case 464: return ISO_LANGUAGE_CODE_POR;
        case 465: return ISO_LANGUAGE_CODE_SE;
        case 466: return ISO_LANGUAGE_CODE_ARC;
        case 467: return ISO_LANGUAGE_CODE_MIN;
        case 468: return ISO_LANGUAGE_CODE_SG;
        case 469: return ISO_LANGUAGE_CODE_SI;
        case 470: return ISO_LANGUAGE_CODE_MIS;
        case 471: return ISO_LANGUAGE_CODE_ARG;
        case 472: return ISO_LANGUAGE_CODE_SUX;
        case 473: return ISO_LANGUAGE_CODE_SK;
        case 474: return ISO_LANGUAGE_CODE_BTK;
        case 475: return ISO_LANGUAGE_CODE_SL;
        case 476: return ISO_LANGUAGE_CODE_SM;
        case 477: return ISO_LANGUAGE_CODE_SN;
        case 478: return ISO_LANGUAGE_CODE_SO;
        case 479: return ISO_LANGUAGE_CODE_UZB;
        case 480: return ISO_LANGUAGE_CODE_ARN;
        case 481: return ISO_LANGUAGE_CODE_SQ;
        case 482: return ISO_LANGUAGE_CODE_ARP;
        case 483: return ISO_LANGUAGE_CODE_SR;
        case 484: return ISO_LANGUAGE_CODE_SS;
        case 485: return ISO_LANGUAGE_CODE_ST;
        case 486: return ISO_LANGUAGE_CODE_SU;
        case 487: return ISO_LANGUAGE_CODE_ART;
        case 488: return ISO_LANGUAGE_CODE_SV;
        case 489: return ISO_LANGUAGE_CODE_SW;
        case 490: return ISO_LANGUAGE_CODE_YAO;
        case 491: return ISO_LANGUAGE_CODE_NLD;
        case 492: return ISO_LANGUAGE_CODE_ARW;
        case 493: return ISO_LANGUAGE_CODE_IBA;
        case 494: return ISO_LANGUAGE_CODE_YAP;
        case 495: return ISO_LANGUAGE_CODE_TA;
        case 496: return ISO_LANGUAGE_CODE_BUA;
        case 497: return ISO_LANGUAGE_CODE_TE;
        case 498: return ISO_LANGUAGE_CODE_TG;
        case 499: return ISO_LANGUAGE_CODE_TH;
        case 500: return ISO_LANGUAGE_CODE_TI;
        case 501: return ISO_LANGUAGE_CODE_BUG;
        case 502: return ISO_LANGUAGE_CODE_IBO;
        case 503: return ISO_LANGUAGE_CODE_TK;
        case 504: return ISO_LANGUAGE_CODE_BUL;
        case 505: return ISO_LANGUAGE_CODE_TL;
        case 506: return ISO_LANGUAGE_CODE_ASM;
        case 507: return ISO_LANGUAGE_CODE_TN;
        case 508: return ISO_LANGUAGE_CODE_TO;
        case 509: return ISO_LANGUAGE_CODE_SWA;
        case 510: return ISO_LANGUAGE_CODE_TR;
        case 511: return ISO_LANGUAGE_CODE_TS;
        case 512: return ISO_LANGUAGE_CODE_SWE;
        case 513: return ISO_LANGUAGE_CODE_TT;
        case 514: return ISO_LANGUAGE_CODE_DYU;
        case 515: return ISO_LANGUAGE_CODE_TW;
        case 516: return ISO_LANGUAGE_CODE_AST;
        case 517: return ISO_LANGUAGE_CODE_TY;
        case 518: return ISO_LANGUAGE_CODE_MKD;
        case 519: return ISO_LANGUAGE_CODE_RUN;
        case 520: return ISO_LANGUAGE_CODE_MKH;
        case 521: return ISO_LANGUAGE_CODE_RUP;
        case 522: return ISO_LANGUAGE_CODE_LIN;
        case 523: return ISO_LANGUAGE_CODE_TYV;
        case 524: return ISO_LANGUAGE_CODE_LIM;
        case 525: return ISO_LANGUAGE_CODE_RUS;
        case 526: return ISO_LANGUAGE_CODE_HAI;
        case 527: return ISO_LANGUAGE_CODE_UG;
        case 528: return ISO_LANGUAGE_CODE_ATH;
        case 529: return ISO_LANGUAGE_CODE_LIT;
        case 530: return ISO_LANGUAGE_CODE_UK;
        case 531: return ISO_LANGUAGE_CODE_DZO;
        case 532: return ISO_LANGUAGE_CODE_HAT;
        case 533: return ISO_LANGUAGE_CODE_HAU;
        case 534: return ISO_LANGUAGE_CODE_UR;
        case 535: return ISO_LANGUAGE_CODE_PRA;
        case 536: return ISO_LANGUAGE_CODE_HAW;
        case 537: return ISO_LANGUAGE_CODE_XAL;
        case 538: return ISO_LANGUAGE_CODE_ZEN;
        case 539: return ISO_LANGUAGE_CODE_UZ;
        case 540: return ISO_LANGUAGE_CODE_KHA;
        case 541: return ISO_LANGUAGE_CODE_MLG;
        case 542: return ISO_LANGUAGE_CODE_PRO;
        case 543: return ISO_LANGUAGE_CODE_KHI;
        case 544: return ISO_LANGUAGE_CODE_NNO;
        case 545: return ISO_LANGUAGE_CODE_VE;
        case 546: return ISO_LANGUAGE_CODE_KHM;
        case 547: return ISO_LANGUAGE_CODE_VI;
        case 548: return ISO_LANGUAGE_CODE_KHO;
        case 549: return ISO_LANGUAGE_CODE_MLT;
        case 550: return ISO_LANGUAGE_CODE_IDO;
        case 551: return ISO_LANGUAGE_CODE_CYM;
        case 552: return ISO_LANGUAGE_CODE_VO;
        case 553: return ISO_LANGUAGE_CODE_SYC;
        case 554: return ISO_LANGUAGE_CODE_AUS;
        case 555: return ISO_LANGUAGE_CODE_NOB;
        case 556: return ISO_LANGUAGE_CODE_QUE;
        case 557: return ISO_LANGUAGE_CODE_GAA;
        case 558: return ISO_LANGUAGE_CODE_NOG;
        case 559: return ISO_LANGUAGE_CODE_WA;
        case 560: return ISO_LANGUAGE_CODE_KIK;
        case 561: return ISO_LANGUAGE_CODE_NON;
        case 562: return ISO_LANGUAGE_CODE_AVA;
        case 563: return ISO_LANGUAGE_CODE_SYR;
        case 564: return ISO_LANGUAGE_CODE_NOR;
        case 565: return ISO_LANGUAGE_CODE_AVE;
        case 566: return ISO_LANGUAGE_CODE_KIN;
        case 567: return ISO_LANGUAGE_CODE_KIR;
        case 568: return ISO_LANGUAGE_CODE_WO;
        case 569: return ISO_LANGUAGE_CODE_ZGH;
        case 570: return ISO_LANGUAGE_CODE_GAY;
        case 571: return ISO_LANGUAGE_CODE_WAK;
        case 572: return ISO_LANGUAGE_CODE_MNC;
        case 573: return ISO_LANGUAGE_CODE_WAL;
        case 574: return ISO_LANGUAGE_CODE_ORI;
        case 575: return ISO_LANGUAGE_CODE_GBA;
        case 576: return ISO_LANGUAGE_CODE_WAS;
        case 577: return ISO_LANGUAGE_CODE_MNI;
        case 578: return ISO_LANGUAGE_CODE_WAR;
        case 579: return ISO_LANGUAGE_CODE_AWA;
        case 580: return ISO_LANGUAGE_CODE_ORM;
        case 581: return ISO_LANGUAGE_CODE_MNO;
        case 582: return ISO_LANGUAGE_CODE_XH;
        case 583: return ISO_LANGUAGE_CODE_ZHA;
        case 584: return ISO_LANGUAGE_CODE_BYN;
        case 585: return ISO_LANGUAGE_CODE_OSA;
        case 586: return ISO_LANGUAGE_CODE_ZHO;
        case 587: return ISO_LANGUAGE_CODE_HEB;
        case 588: return ISO_LANGUAGE_CODE_MOH;
        case 589: return ISO_LANGUAGE_CODE_MON;
        case 590: return ISO_LANGUAGE_CODE_NQO;
        case 591: return ISO_LANGUAGE_CODE_OSS;
        case 592: return ISO_LANGUAGE_CODE_PUS;
        case 593: return ISO_LANGUAGE_CODE_YI;
        case 594: return ISO_LANGUAGE_CODE_MOS;
        case 595: return ISO_LANGUAGE_CODE_FAN;
        case 596: return ISO_LANGUAGE_CODE_HER;
        case 597: return ISO_LANGUAGE_CODE_FAO;
        case 598: return ISO_LANGUAGE_CODE_YO;
        case 599: return ISO_LANGUAGE_CODE_FAT;
        case 600: return ISO_LANGUAGE_CODE_FAS;
        case 601: return ISO_LANGUAGE_CODE_OTA;
        case 602: return ISO_LANGUAGE_CODE_VAI;
        case 603: return ISO_LANGUAGE_CODE_ZA;
        case 604: return ISO_LANGUAGE_CODE_OTO;
        case 605: return ISO_LANGUAGE_CODE_ZH;
        case 606: return ISO_LANGUAGE_CODE_AYM;
        case 607: return ISO_LANGUAGE_CODE_ZU;
        case 608: return ISO_LANGUAGE_CODE_KMB;
        case 609: return ISO_LANGUAGE_CODE_III;
        case 610: return ISO_LANGUAGE_CODE_LOL;
        case 611: return ISO_LANGUAGE_CODE_NSO;
        case 612: return ISO_LANGUAGE_CODE_AZE;
        case 613: return ISO_LANGUAGE_CODE_GEM;
        case 614: return ISO_LANGUAGE_CODE_YID;
        case 615: return ISO_LANGUAGE_CODE_LOZ;
        case 616: return ISO_LANGUAGE_CODE_GEZ;
        case 617: return ISO_LANGUAGE_CODE_WEN;
        case 618: return ISO_LANGUAGE_CODE_MRI;
        case 619: return ISO_LANGUAGE_CODE_IJO;
        case 620: return ISO_LANGUAGE_CODE_MSA;
        case 621: return ISO_LANGUAGE_CODE_NUB;
        case 622: return ISO_LANGUAGE_CODE_XHO;
        case 623: return ISO_LANGUAGE_CODE_KOK;
        case 624: return ISO_LANGUAGE_CODE_KOM;
        case 625: return ISO_LANGUAGE_CODE_HIL;
        case 626: return ISO_LANGUAGE_CODE_KON;
        case 627: return ISO_LANGUAGE_CODE_HIN;
        case 628: return ISO_LANGUAGE_CODE_HIM;
        case 629: return ISO_LANGUAGE_CODE_KOS;
        case 630: return ISO_LANGUAGE_CODE_KOR;
        case 631: return ISO_LANGUAGE_CODE_DAK;
        case 632: return ISO_LANGUAGE_CODE_DAN;
        case 633: return ISO_LANGUAGE_CODE_IKU;
        case 634: return ISO_LANGUAGE_CODE_HIT;
        case 635: return ISO_LANGUAGE_CODE_DAR;
        case 636: return ISO_LANGUAGE_CODE_TAH;
        case 637: return ISO_LANGUAGE_CODE_DAY;
        case 638: return ISO_LANGUAGE_CODE_TAI;
        case 639: return ISO_LANGUAGE_CODE_VEN;
        case 640: return ISO_LANGUAGE_CODE_TAM;
        case 641: return ISO_LANGUAGE_CODE_KPE;
        case 642: return ISO_LANGUAGE_CODE_ILE;
        case 643: return ISO_LANGUAGE_CODE_TAT;
        case 644: return ISO_LANGUAGE_CODE_ILO;
        case 645: return ISO_LANGUAGE_CODE_ZND;
        case 646: return ISO_LANGUAGE_CODE_NWC;
        case 647: return ISO_LANGUAGE_CODE_UDM;
        case 648: return ISO_LANGUAGE_CODE_MUL;
        case 649: return ISO_LANGUAGE_CODE_CAD;
        case 650: return ISO_LANGUAGE_CODE_MUN;
        case 651: return ISO_LANGUAGE_CODE_CAI;
        case 652: return ISO_LANGUAGE_CODE_MUS;
        case 653: return ISO_LANGUAGE_CODE_GIL;
        case 654: return ISO_LANGUAGE_CODE_CAR;
        case 655: return ISO_LANGUAGE_CODE_CAU;
        case 656: return ISO_LANGUAGE_CODE_CAT;
        case 657: return ISO_LANGUAGE_CODE_SAD;
        case 658: return ISO_LANGUAGE_CODE_SAG;
        case 659: return ISO_LANGUAGE_CODE_SAI;
        case 660: return ISO_LANGUAGE_CODE_SAH;
        case 661: return ISO_LANGUAGE_CODE_INA;
        case 662: return ISO_LANGUAGE_CODE_KRC;
        case 663: return ISO_LANGUAGE_CODE_IND;
        case 664: return ISO_LANGUAGE_CODE_SAM;
        case 665: return ISO_LANGUAGE_CODE_INC;
        case 666: return ISO_LANGUAGE_CODE_SAL;
        case 667: return ISO_LANGUAGE_CODE_SAN;
        case 668: return ISO_LANGUAGE_CODE_INE;
        case 669: return ISO_LANGUAGE_CODE_INH;
        case 670: return ISO_LANGUAGE_CODE_KRL;
        case 671: return ISO_LANGUAGE_CODE_SAS;
        case 672: return ISO_LANGUAGE_CODE_SAT;
        case 673: return ISO_LANGUAGE_CODE_JPN;
        case 674: return ISO_LANGUAGE_CODE_EFI;
        case 675: return ISO_LANGUAGE_CODE_KRO;
        case 676: return ISO_LANGUAGE_CODE_JPR;
        case 677: return ISO_LANGUAGE_CODE_KRU;
        case 678: return ISO_LANGUAGE_CODE_LTZ;
        case 679: return ISO_LANGUAGE_CODE_NYA;
        case 680: return ISO_LANGUAGE_CODE_LUB;
        case 681: return ISO_LANGUAGE_CODE_LUA;
        case 682: return ISO_LANGUAGE_CODE_LUG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IsoLanguageCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IsoLanguageCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IsoLanguageCode>() {
            public IsoLanguageCode findValueByNumber(int number) {
              return IsoLanguageCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(79);
    }

    private static final IsoLanguageCode[] VALUES = values();

    public static IsoLanguageCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IsoLanguageCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.IsoLanguageCode)
  }

  /**
   * Protobuf enum {@code avs.IsoTerritoryCode}
   */
  public enum IsoTerritoryCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ISO_TERRITORY_CODE_P_R = 0;</code>
     */
    ISO_TERRITORY_CODE_P_R(0),
    /**
     * <code>ISO_TERRITORY_CODE_P_S = 1;</code>
     */
    ISO_TERRITORY_CODE_P_S(1),
    /**
     * <code>ISO_TERRITORY_CODE_P_T = 2;</code>
     */
    ISO_TERRITORY_CODE_P_T(2),
    /**
     * <code>ISO_TERRITORY_CODE_P_W = 3;</code>
     */
    ISO_TERRITORY_CODE_P_W(3),
    /**
     * <code>ISO_TERRITORY_CODE_P_Y = 4;</code>
     */
    ISO_TERRITORY_CODE_P_Y(4),
    /**
     * <code>ISO_TERRITORY_CODE_Q_A = 5;</code>
     */
    ISO_TERRITORY_CODE_Q_A(5),
    /**
     * <code>ISO_TERRITORY_CODE_E_S__MINUS___C_E = 6;</code>
     */
    ISO_TERRITORY_CODE_E_S__MINUS___C_E(6),
    /**
     * <code>ISO_TERRITORY_CODE_E_S__MINUS___C_N = 7;</code>
     */
    ISO_TERRITORY_CODE_E_S__MINUS___C_N(7),
    /**
     * <code>ISO_TERRITORY_CODE_A_D = 8;</code>
     */
    ISO_TERRITORY_CODE_A_D(8),
    /**
     * <code>ISO_TERRITORY_CODE_A_E = 9;</code>
     */
    ISO_TERRITORY_CODE_A_E(9),
    /**
     * <code>ISO_TERRITORY_CODE_A_F = 10;</code>
     */
    ISO_TERRITORY_CODE_A_F(10),
    /**
     * <code>ISO_TERRITORY_CODE_A_G = 11;</code>
     */
    ISO_TERRITORY_CODE_A_G(11),
    /**
     * <code>ISO_TERRITORY_CODE_A_I = 12;</code>
     */
    ISO_TERRITORY_CODE_A_I(12),
    /**
     * <code>ISO_TERRITORY_CODE_A_L = 13;</code>
     */
    ISO_TERRITORY_CODE_A_L(13),
    /**
     * <code>ISO_TERRITORY_CODE_A_M = 14;</code>
     */
    ISO_TERRITORY_CODE_A_M(14),
    /**
     * <code>ISO_TERRITORY_CODE_A_N = 15;</code>
     */
    ISO_TERRITORY_CODE_A_N(15),
    /**
     * <code>ISO_TERRITORY_CODE_A_O = 16;</code>
     */
    ISO_TERRITORY_CODE_A_O(16),
    /**
     * <code>ISO_TERRITORY_CODE_A_Q = 17;</code>
     */
    ISO_TERRITORY_CODE_A_Q(17),
    /**
     * <code>ISO_TERRITORY_CODE_A_R = 18;</code>
     */
    ISO_TERRITORY_CODE_A_R(18),
    /**
     * <code>ISO_TERRITORY_CODE_A_S = 19;</code>
     */
    ISO_TERRITORY_CODE_A_S(19),
    /**
     * <code>ISO_TERRITORY_CODE_A_T = 20;</code>
     */
    ISO_TERRITORY_CODE_A_T(20),
    /**
     * <code>ISO_TERRITORY_CODE_R_E = 21;</code>
     */
    ISO_TERRITORY_CODE_R_E(21),
    /**
     * <code>ISO_TERRITORY_CODE_A_U = 22;</code>
     */
    ISO_TERRITORY_CODE_A_U(22),
    /**
     * <code>ISO_TERRITORY_CODE_A_W = 23;</code>
     */
    ISO_TERRITORY_CODE_A_W(23),
    /**
     * <code>ISO_TERRITORY_CODE_A_X = 24;</code>
     */
    ISO_TERRITORY_CODE_A_X(24),
    /**
     * <code>ISO_TERRITORY_CODE_A_Z = 25;</code>
     */
    ISO_TERRITORY_CODE_A_Z(25),
    /**
     * <code>ISO_TERRITORY_CODE_R_O = 26;</code>
     */
    ISO_TERRITORY_CODE_R_O(26),
    /**
     * <code>ISO_TERRITORY_CODE_B_A = 27;</code>
     */
    ISO_TERRITORY_CODE_B_A(27),
    /**
     * <code>ISO_TERRITORY_CODE_B_B = 28;</code>
     */
    ISO_TERRITORY_CODE_B_B(28),
    /**
     * <code>ISO_TERRITORY_CODE_R_S = 29;</code>
     */
    ISO_TERRITORY_CODE_R_S(29),
    /**
     * <code>ISO_TERRITORY_CODE_B_D = 30;</code>
     */
    ISO_TERRITORY_CODE_B_D(30),
    /**
     * <code>ISO_TERRITORY_CODE_B_E = 31;</code>
     */
    ISO_TERRITORY_CODE_B_E(31),
    /**
     * <code>ISO_TERRITORY_CODE_R_U = 32;</code>
     */
    ISO_TERRITORY_CODE_R_U(32),
    /**
     * <code>ISO_TERRITORY_CODE_B_F = 33;</code>
     */
    ISO_TERRITORY_CODE_B_F(33),
    /**
     * <code>ISO_TERRITORY_CODE_B_G = 34;</code>
     */
    ISO_TERRITORY_CODE_B_G(34),
    /**
     * <code>ISO_TERRITORY_CODE_R_W = 35;</code>
     */
    ISO_TERRITORY_CODE_R_W(35),
    /**
     * <code>ISO_TERRITORY_CODE_B_H = 36;</code>
     */
    ISO_TERRITORY_CODE_B_H(36),
    /**
     * <code>ISO_TERRITORY_CODE_B_I = 37;</code>
     */
    ISO_TERRITORY_CODE_B_I(37),
    /**
     * <code>ISO_TERRITORY_CODE_B_J = 38;</code>
     */
    ISO_TERRITORY_CODE_B_J(38),
    /**
     * <code>ISO_TERRITORY_CODE_B_L = 39;</code>
     */
    ISO_TERRITORY_CODE_B_L(39),
    /**
     * <code>ISO_TERRITORY_CODE_B_M = 40;</code>
     */
    ISO_TERRITORY_CODE_B_M(40),
    /**
     * <code>ISO_TERRITORY_CODE_B_N = 41;</code>
     */
    ISO_TERRITORY_CODE_B_N(41),
    /**
     * <code>ISO_TERRITORY_CODE_B_O = 42;</code>
     */
    ISO_TERRITORY_CODE_B_O(42),
    /**
     * <code>ISO_TERRITORY_CODE_S_A = 43;</code>
     */
    ISO_TERRITORY_CODE_S_A(43),
    /**
     * <code>ISO_TERRITORY_CODE_B_Q = 44;</code>
     */
    ISO_TERRITORY_CODE_B_Q(44),
    /**
     * <code>ISO_TERRITORY_CODE_S_B = 45;</code>
     */
    ISO_TERRITORY_CODE_S_B(45),
    /**
     * <code>ISO_TERRITORY_CODE_B_R = 46;</code>
     */
    ISO_TERRITORY_CODE_B_R(46),
    /**
     * <code>ISO_TERRITORY_CODE_S_C = 47;</code>
     */
    ISO_TERRITORY_CODE_S_C(47),
    /**
     * <code>ISO_TERRITORY_CODE_B_S = 48;</code>
     */
    ISO_TERRITORY_CODE_B_S(48),
    /**
     * <code>ISO_TERRITORY_CODE_S_D = 49;</code>
     */
    ISO_TERRITORY_CODE_S_D(49),
    /**
     * <code>ISO_TERRITORY_CODE_B_T = 50;</code>
     */
    ISO_TERRITORY_CODE_B_T(50),
    /**
     * <code>ISO_TERRITORY_CODE_S_E = 51;</code>
     */
    ISO_TERRITORY_CODE_S_E(51),
    /**
     * <code>ISO_TERRITORY_CODE_B_V = 52;</code>
     */
    ISO_TERRITORY_CODE_B_V(52),
    /**
     * <code>ISO_TERRITORY_CODE_S_G = 53;</code>
     */
    ISO_TERRITORY_CODE_S_G(53),
    /**
     * <code>ISO_TERRITORY_CODE_B_W = 54;</code>
     */
    ISO_TERRITORY_CODE_B_W(54),
    /**
     * <code>ISO_TERRITORY_CODE_S_H = 55;</code>
     */
    ISO_TERRITORY_CODE_S_H(55),
    /**
     * <code>ISO_TERRITORY_CODE_S_I = 56;</code>
     */
    ISO_TERRITORY_CODE_S_I(56),
    /**
     * <code>ISO_TERRITORY_CODE_B_Y = 57;</code>
     */
    ISO_TERRITORY_CODE_B_Y(57),
    /**
     * <code>ISO_TERRITORY_CODE_S_J = 58;</code>
     */
    ISO_TERRITORY_CODE_S_J(58),
    /**
     * <code>ISO_TERRITORY_CODE_B_Z = 59;</code>
     */
    ISO_TERRITORY_CODE_B_Z(59),
    /**
     * <code>ISO_TERRITORY_CODE_S_K = 60;</code>
     */
    ISO_TERRITORY_CODE_S_K(60),
    /**
     * <code>ISO_TERRITORY_CODE_S_L = 61;</code>
     */
    ISO_TERRITORY_CODE_S_L(61),
    /**
     * <code>ISO_TERRITORY_CODE_S_M = 62;</code>
     */
    ISO_TERRITORY_CODE_S_M(62),
    /**
     * <code>ISO_TERRITORY_CODE_S_N = 63;</code>
     */
    ISO_TERRITORY_CODE_S_N(63),
    /**
     * <code>ISO_TERRITORY_CODE_S_O = 64;</code>
     */
    ISO_TERRITORY_CODE_S_O(64),
    /**
     * <code>ISO_TERRITORY_CODE_C_A = 65;</code>
     */
    ISO_TERRITORY_CODE_C_A(65),
    /**
     * <code>ISO_TERRITORY_CODE_S_R = 66;</code>
     */
    ISO_TERRITORY_CODE_S_R(66),
    /**
     * <code>ISO_TERRITORY_CODE_C_C = 67;</code>
     */
    ISO_TERRITORY_CODE_C_C(67),
    /**
     * <code>ISO_TERRITORY_CODE_S_S = 68;</code>
     */
    ISO_TERRITORY_CODE_S_S(68),
    /**
     * <code>ISO_TERRITORY_CODE_C_D = 69;</code>
     */
    ISO_TERRITORY_CODE_C_D(69),
    /**
     * <code>ISO_TERRITORY_CODE_S_T = 70;</code>
     */
    ISO_TERRITORY_CODE_S_T(70),
    /**
     * <code>ISO_TERRITORY_CODE_C_F = 71;</code>
     */
    ISO_TERRITORY_CODE_C_F(71),
    /**
     * <code>ISO_TERRITORY_CODE_S_V = 72;</code>
     */
    ISO_TERRITORY_CODE_S_V(72),
    /**
     * <code>ISO_TERRITORY_CODE_C_G = 73;</code>
     */
    ISO_TERRITORY_CODE_C_G(73),
    /**
     * <code>ISO_TERRITORY_CODE_C_H = 74;</code>
     */
    ISO_TERRITORY_CODE_C_H(74),
    /**
     * <code>ISO_TERRITORY_CODE_S_X = 75;</code>
     */
    ISO_TERRITORY_CODE_S_X(75),
    /**
     * <code>ISO_TERRITORY_CODE_C_I = 76;</code>
     */
    ISO_TERRITORY_CODE_C_I(76),
    /**
     * <code>ISO_TERRITORY_CODE_S_Y = 77;</code>
     */
    ISO_TERRITORY_CODE_S_Y(77),
    /**
     * <code>ISO_TERRITORY_CODE_S_Z = 78;</code>
     */
    ISO_TERRITORY_CODE_S_Z(78),
    /**
     * <code>ISO_TERRITORY_CODE_C_K = 79;</code>
     */
    ISO_TERRITORY_CODE_C_K(79),
    /**
     * <code>ISO_TERRITORY_CODE_C_L = 80;</code>
     */
    ISO_TERRITORY_CODE_C_L(80),
    /**
     * <code>ISO_TERRITORY_CODE_C_M = 81;</code>
     */
    ISO_TERRITORY_CODE_C_M(81),
    /**
     * <code>ISO_TERRITORY_CODE_C_N = 82;</code>
     */
    ISO_TERRITORY_CODE_C_N(82),
    /**
     * <code>ISO_TERRITORY_CODE_C_O = 83;</code>
     */
    ISO_TERRITORY_CODE_C_O(83),
    /**
     * <code>ISO_TERRITORY_CODE_C_R = 84;</code>
     */
    ISO_TERRITORY_CODE_C_R(84),
    /**
     * <code>ISO_TERRITORY_CODE_T_C = 85;</code>
     */
    ISO_TERRITORY_CODE_T_C(85),
    /**
     * <code>ISO_TERRITORY_CODE_C_S = 86;</code>
     */
    ISO_TERRITORY_CODE_C_S(86),
    /**
     * <code>ISO_TERRITORY_CODE_T_D = 87;</code>
     */
    ISO_TERRITORY_CODE_T_D(87),
    /**
     * <code>ISO_TERRITORY_CODE_C_U = 88;</code>
     */
    ISO_TERRITORY_CODE_C_U(88),
    /**
     * <code>ISO_TERRITORY_CODE_T_F = 89;</code>
     */
    ISO_TERRITORY_CODE_T_F(89),
    /**
     * <code>ISO_TERRITORY_CODE_C_V = 90;</code>
     */
    ISO_TERRITORY_CODE_C_V(90),
    /**
     * <code>ISO_TERRITORY_CODE_T_G = 91;</code>
     */
    ISO_TERRITORY_CODE_T_G(91),
    /**
     * <code>ISO_TERRITORY_CODE_C_W = 92;</code>
     */
    ISO_TERRITORY_CODE_C_W(92),
    /**
     * <code>ISO_TERRITORY_CODE_T_H = 93;</code>
     */
    ISO_TERRITORY_CODE_T_H(93),
    /**
     * <code>ISO_TERRITORY_CODE_C_X = 94;</code>
     */
    ISO_TERRITORY_CODE_C_X(94),
    /**
     * <code>ISO_TERRITORY_CODE_C_Y = 95;</code>
     */
    ISO_TERRITORY_CODE_C_Y(95),
    /**
     * <code>ISO_TERRITORY_CODE_T_J = 96;</code>
     */
    ISO_TERRITORY_CODE_T_J(96),
    /**
     * <code>ISO_TERRITORY_CODE_C_Z = 97;</code>
     */
    ISO_TERRITORY_CODE_C_Z(97),
    /**
     * <code>ISO_TERRITORY_CODE_T_K = 98;</code>
     */
    ISO_TERRITORY_CODE_T_K(98),
    /**
     * <code>ISO_TERRITORY_CODE_T_L = 99;</code>
     */
    ISO_TERRITORY_CODE_T_L(99),
    /**
     * <code>ISO_TERRITORY_CODE_T_M = 100;</code>
     */
    ISO_TERRITORY_CODE_T_M(100),
    /**
     * <code>ISO_TERRITORY_CODE_T_N = 101;</code>
     */
    ISO_TERRITORY_CODE_T_N(101),
    /**
     * <code>ISO_TERRITORY_CODE_T_O = 102;</code>
     */
    ISO_TERRITORY_CODE_T_O(102),
    /**
     * <code>ISO_TERRITORY_CODE_T_R = 103;</code>
     */
    ISO_TERRITORY_CODE_T_R(103),
    /**
     * <code>ISO_TERRITORY_CODE_T_T = 104;</code>
     */
    ISO_TERRITORY_CODE_T_T(104),
    /**
     * <code>ISO_TERRITORY_CODE_D_E = 105;</code>
     */
    ISO_TERRITORY_CODE_D_E(105),
    /**
     * <code>ISO_TERRITORY_CODE_T_V = 106;</code>
     */
    ISO_TERRITORY_CODE_T_V(106),
    /**
     * <code>ISO_TERRITORY_CODE_T_W = 107;</code>
     */
    ISO_TERRITORY_CODE_T_W(107),
    /**
     * <code>ISO_TERRITORY_CODE_D_J = 108;</code>
     */
    ISO_TERRITORY_CODE_D_J(108),
    /**
     * <code>ISO_TERRITORY_CODE_T_Z = 109;</code>
     */
    ISO_TERRITORY_CODE_T_Z(109),
    /**
     * <code>ISO_TERRITORY_CODE_D_K = 110;</code>
     */
    ISO_TERRITORY_CODE_D_K(110),
    /**
     * <code>ISO_TERRITORY_CODE_D_M = 111;</code>
     */
    ISO_TERRITORY_CODE_D_M(111),
    /**
     * <code>ISO_TERRITORY_CODE_D_O = 112;</code>
     */
    ISO_TERRITORY_CODE_D_O(112),
    /**
     * <code>ISO_TERRITORY_CODE_U_A = 113;</code>
     */
    ISO_TERRITORY_CODE_U_A(113),
    /**
     * <code>ISO_TERRITORY_CODE_U_G = 114;</code>
     */
    ISO_TERRITORY_CODE_U_G(114),
    /**
     * <code>ISO_TERRITORY_CODE_D_Z = 115;</code>
     */
    ISO_TERRITORY_CODE_D_Z(115),
    /**
     * <code>ISO_TERRITORY_CODE_U_M = 116;</code>
     */
    ISO_TERRITORY_CODE_U_M(116),
    /**
     * <code>ISO_TERRITORY_CODE_E_C = 117;</code>
     */
    ISO_TERRITORY_CODE_E_C(117),
    /**
     * <code>ISO_TERRITORY_CODE_U_S = 118;</code>
     */
    ISO_TERRITORY_CODE_U_S(118),
    /**
     * <code>ISO_TERRITORY_CODE_E_E = 119;</code>
     */
    ISO_TERRITORY_CODE_E_E(119),
    /**
     * <code>ISO_TERRITORY_CODE_E_G = 120;</code>
     */
    ISO_TERRITORY_CODE_E_G(120),
    /**
     * <code>ISO_TERRITORY_CODE_E_H = 121;</code>
     */
    ISO_TERRITORY_CODE_E_H(121),
    /**
     * <code>ISO_TERRITORY_CODE_U_Y = 122;</code>
     */
    ISO_TERRITORY_CODE_U_Y(122),
    /**
     * <code>ISO_TERRITORY_CODE_U_Z = 123;</code>
     */
    ISO_TERRITORY_CODE_U_Z(123),
    /**
     * <code>ISO_TERRITORY_CODE_V_A = 124;</code>
     */
    ISO_TERRITORY_CODE_V_A(124),
    /**
     * <code>ISO_TERRITORY_CODE_E_R = 125;</code>
     */
    ISO_TERRITORY_CODE_E_R(125),
    /**
     * <code>ISO_TERRITORY_CODE_V_C = 126;</code>
     */
    ISO_TERRITORY_CODE_V_C(126),
    /**
     * <code>ISO_TERRITORY_CODE_E_S = 127;</code>
     */
    ISO_TERRITORY_CODE_E_S(127),
    /**
     * <code>ISO_TERRITORY_CODE_E_T = 128;</code>
     */
    ISO_TERRITORY_CODE_E_T(128),
    /**
     * <code>ISO_TERRITORY_CODE_V_E = 129;</code>
     */
    ISO_TERRITORY_CODE_V_E(129),
    /**
     * <code>ISO_TERRITORY_CODE_V_G = 130;</code>
     */
    ISO_TERRITORY_CODE_V_G(130),
    /**
     * <code>ISO_TERRITORY_CODE_V_I = 131;</code>
     */
    ISO_TERRITORY_CODE_V_I(131),
    /**
     * <code>ISO_TERRITORY_CODE_V_N = 132;</code>
     */
    ISO_TERRITORY_CODE_V_N(132),
    /**
     * <code>ISO_TERRITORY_CODE_V_U = 133;</code>
     */
    ISO_TERRITORY_CODE_V_U(133),
    /**
     * <code>ISO_TERRITORY_CODE_F_I = 134;</code>
     */
    ISO_TERRITORY_CODE_F_I(134),
    /**
     * <code>ISO_TERRITORY_CODE_F_J = 135;</code>
     */
    ISO_TERRITORY_CODE_F_J(135),
    /**
     * <code>ISO_TERRITORY_CODE_F_K = 136;</code>
     */
    ISO_TERRITORY_CODE_F_K(136),
    /**
     * <code>ISO_TERRITORY_CODE_F_M = 137;</code>
     */
    ISO_TERRITORY_CODE_F_M(137),
    /**
     * <code>ISO_TERRITORY_CODE_F_O = 138;</code>
     */
    ISO_TERRITORY_CODE_F_O(138),
    /**
     * <code>ISO_TERRITORY_CODE_F_R = 139;</code>
     */
    ISO_TERRITORY_CODE_F_R(139),
    /**
     * <code>ISO_TERRITORY_CODE_W_F = 140;</code>
     */
    ISO_TERRITORY_CODE_W_F(140),
    /**
     * <code>ISO_TERRITORY_CODE_G_A = 141;</code>
     */
    ISO_TERRITORY_CODE_G_A(141),
    /**
     * <code>ISO_TERRITORY_CODE_G_B = 142;</code>
     */
    ISO_TERRITORY_CODE_G_B(142),
    /**
     * <code>ISO_TERRITORY_CODE_W_S = 143;</code>
     */
    ISO_TERRITORY_CODE_W_S(143),
    /**
     * <code>ISO_TERRITORY_CODE_G_D = 144;</code>
     */
    ISO_TERRITORY_CODE_G_D(144),
    /**
     * <code>ISO_TERRITORY_CODE_G_E = 145;</code>
     */
    ISO_TERRITORY_CODE_G_E(145),
    /**
     * <code>ISO_TERRITORY_CODE_G_F = 146;</code>
     */
    ISO_TERRITORY_CODE_G_F(146),
    /**
     * <code>ISO_TERRITORY_CODE_G_G = 147;</code>
     */
    ISO_TERRITORY_CODE_G_G(147),
    /**
     * <code>ISO_TERRITORY_CODE_G_H = 148;</code>
     */
    ISO_TERRITORY_CODE_G_H(148),
    /**
     * <code>ISO_TERRITORY_CODE_G_I = 149;</code>
     */
    ISO_TERRITORY_CODE_G_I(149),
    /**
     * <code>ISO_TERRITORY_CODE_G_L = 150;</code>
     */
    ISO_TERRITORY_CODE_G_L(150),
    /**
     * <code>ISO_TERRITORY_CODE_G_M = 151;</code>
     */
    ISO_TERRITORY_CODE_G_M(151),
    /**
     * <code>ISO_TERRITORY_CODE_G_N = 152;</code>
     */
    ISO_TERRITORY_CODE_G_N(152),
    /**
     * <code>ISO_TERRITORY_CODE_G_P = 153;</code>
     */
    ISO_TERRITORY_CODE_G_P(153),
    /**
     * <code>ISO_TERRITORY_CODE_G_Q = 154;</code>
     */
    ISO_TERRITORY_CODE_G_Q(154),
    /**
     * <code>ISO_TERRITORY_CODE_G_R = 155;</code>
     */
    ISO_TERRITORY_CODE_G_R(155),
    /**
     * <code>ISO_TERRITORY_CODE_E_S__MINUS___M_L = 156;</code>
     */
    ISO_TERRITORY_CODE_E_S__MINUS___M_L(156),
    /**
     * <code>ISO_TERRITORY_CODE_G_S = 157;</code>
     */
    ISO_TERRITORY_CODE_G_S(157),
    /**
     * <code>ISO_TERRITORY_CODE_G_T = 158;</code>
     */
    ISO_TERRITORY_CODE_G_T(158),
    /**
     * <code>ISO_TERRITORY_CODE_G_U = 159;</code>
     */
    ISO_TERRITORY_CODE_G_U(159),
    /**
     * <code>ISO_TERRITORY_CODE_G_W = 160;</code>
     */
    ISO_TERRITORY_CODE_G_W(160),
    /**
     * <code>ISO_TERRITORY_CODE_G_Y = 161;</code>
     */
    ISO_TERRITORY_CODE_G_Y(161),
    /**
     * <code>ISO_TERRITORY_CODE_H_K = 162;</code>
     */
    ISO_TERRITORY_CODE_H_K(162),
    /**
     * <code>ISO_TERRITORY_CODE_H_M = 163;</code>
     */
    ISO_TERRITORY_CODE_H_M(163),
    /**
     * <code>ISO_TERRITORY_CODE_H_N = 164;</code>
     */
    ISO_TERRITORY_CODE_H_N(164),
    /**
     * <code>ISO_TERRITORY_CODE_H_R = 165;</code>
     */
    ISO_TERRITORY_CODE_H_R(165),
    /**
     * <code>ISO_TERRITORY_CODE_H_T = 166;</code>
     */
    ISO_TERRITORY_CODE_H_T(166),
    /**
     * <code>ISO_TERRITORY_CODE_Y_E = 167;</code>
     */
    ISO_TERRITORY_CODE_Y_E(167),
    /**
     * <code>ISO_TERRITORY_CODE_H_U = 168;</code>
     */
    ISO_TERRITORY_CODE_H_U(168),
    /**
     * <code>ISO_TERRITORY_CODE_I_D = 169;</code>
     */
    ISO_TERRITORY_CODE_I_D(169),
    /**
     * <code>ISO_TERRITORY_CODE_Y_T = 170;</code>
     */
    ISO_TERRITORY_CODE_Y_T(170),
    /**
     * <code>ISO_TERRITORY_CODE_I_E = 171;</code>
     */
    ISO_TERRITORY_CODE_I_E(171),
    /**
     * <code>ISO_TERRITORY_CODE_I_L = 172;</code>
     */
    ISO_TERRITORY_CODE_I_L(172),
    /**
     * <code>ISO_TERRITORY_CODE_I_M = 173;</code>
     */
    ISO_TERRITORY_CODE_I_M(173),
    /**
     * <code>ISO_TERRITORY_CODE_I_N = 174;</code>
     */
    ISO_TERRITORY_CODE_I_N(174),
    /**
     * <code>ISO_TERRITORY_CODE_I_O = 175;</code>
     */
    ISO_TERRITORY_CODE_I_O(175),
    /**
     * <code>ISO_TERRITORY_CODE_Z_A = 176;</code>
     */
    ISO_TERRITORY_CODE_Z_A(176),
    /**
     * <code>ISO_TERRITORY_CODE_I_Q = 177;</code>
     */
    ISO_TERRITORY_CODE_I_Q(177),
    /**
     * <code>ISO_TERRITORY_CODE_I_R = 178;</code>
     */
    ISO_TERRITORY_CODE_I_R(178),
    /**
     * <code>ISO_TERRITORY_CODE_I_S = 179;</code>
     */
    ISO_TERRITORY_CODE_I_S(179),
    /**
     * <code>ISO_TERRITORY_CODE_I_T = 180;</code>
     */
    ISO_TERRITORY_CODE_I_T(180),
    /**
     * <code>ISO_TERRITORY_CODE_Z_M = 181;</code>
     */
    ISO_TERRITORY_CODE_Z_M(181),
    /**
     * <code>ISO_TERRITORY_CODE_J_E = 182;</code>
     */
    ISO_TERRITORY_CODE_J_E(182),
    /**
     * <code>ISO_TERRITORY_CODE_Z_W = 183;</code>
     */
    ISO_TERRITORY_CODE_Z_W(183),
    /**
     * <code>ISO_TERRITORY_CODE_J_M = 184;</code>
     */
    ISO_TERRITORY_CODE_J_M(184),
    /**
     * <code>ISO_TERRITORY_CODE_J_O = 185;</code>
     */
    ISO_TERRITORY_CODE_J_O(185),
    /**
     * <code>ISO_TERRITORY_CODE_J_P = 186;</code>
     */
    ISO_TERRITORY_CODE_J_P(186),
    /**
     * <code>ISO_TERRITORY_CODE_K_E = 187;</code>
     */
    ISO_TERRITORY_CODE_K_E(187),
    /**
     * <code>ISO_TERRITORY_CODE_K_G = 188;</code>
     */
    ISO_TERRITORY_CODE_K_G(188),
    /**
     * <code>ISO_TERRITORY_CODE_K_H = 189;</code>
     */
    ISO_TERRITORY_CODE_K_H(189),
    /**
     * <code>ISO_TERRITORY_CODE_K_I = 190;</code>
     */
    ISO_TERRITORY_CODE_K_I(190),
    /**
     * <code>ISO_TERRITORY_CODE_K_M = 191;</code>
     */
    ISO_TERRITORY_CODE_K_M(191),
    /**
     * <code>ISO_TERRITORY_CODE_K_N = 192;</code>
     */
    ISO_TERRITORY_CODE_K_N(192),
    /**
     * <code>ISO_TERRITORY_CODE_K_P = 193;</code>
     */
    ISO_TERRITORY_CODE_K_P(193),
    /**
     * <code>ISO_TERRITORY_CODE_K_R = 194;</code>
     */
    ISO_TERRITORY_CODE_K_R(194),
    /**
     * <code>ISO_TERRITORY_CODE_K_W = 195;</code>
     */
    ISO_TERRITORY_CODE_K_W(195),
    /**
     * <code>ISO_TERRITORY_CODE_K_Y = 196;</code>
     */
    ISO_TERRITORY_CODE_K_Y(196),
    /**
     * <code>ISO_TERRITORY_CODE_K_Z = 197;</code>
     */
    ISO_TERRITORY_CODE_K_Z(197),
    /**
     * <code>ISO_TERRITORY_CODE_L_A = 198;</code>
     */
    ISO_TERRITORY_CODE_L_A(198),
    /**
     * <code>ISO_TERRITORY_CODE_L_B = 199;</code>
     */
    ISO_TERRITORY_CODE_L_B(199),
    /**
     * <code>ISO_TERRITORY_CODE_L_C = 200;</code>
     */
    ISO_TERRITORY_CODE_L_C(200),
    /**
     * <code>ISO_TERRITORY_CODE_L_I = 201;</code>
     */
    ISO_TERRITORY_CODE_L_I(201),
    /**
     * <code>ISO_TERRITORY_CODE_L_K = 202;</code>
     */
    ISO_TERRITORY_CODE_L_K(202),
    /**
     * <code>ISO_TERRITORY_CODE_L_R = 203;</code>
     */
    ISO_TERRITORY_CODE_L_R(203),
    /**
     * <code>ISO_TERRITORY_CODE_L_S = 204;</code>
     */
    ISO_TERRITORY_CODE_L_S(204),
    /**
     * <code>ISO_TERRITORY_CODE_L_T = 205;</code>
     */
    ISO_TERRITORY_CODE_L_T(205),
    /**
     * <code>ISO_TERRITORY_CODE_L_U = 206;</code>
     */
    ISO_TERRITORY_CODE_L_U(206),
    /**
     * <code>ISO_TERRITORY_CODE_L_V = 207;</code>
     */
    ISO_TERRITORY_CODE_L_V(207),
    /**
     * <code>ISO_TERRITORY_CODE_L_Y = 208;</code>
     */
    ISO_TERRITORY_CODE_L_Y(208),
    /**
     * <code>ISO_TERRITORY_CODE_M_A = 209;</code>
     */
    ISO_TERRITORY_CODE_M_A(209),
    /**
     * <code>ISO_TERRITORY_CODE_M_C = 210;</code>
     */
    ISO_TERRITORY_CODE_M_C(210),
    /**
     * <code>ISO_TERRITORY_CODE_M_D = 211;</code>
     */
    ISO_TERRITORY_CODE_M_D(211),
    /**
     * <code>ISO_TERRITORY_CODE_M_E = 212;</code>
     */
    ISO_TERRITORY_CODE_M_E(212),
    /**
     * <code>ISO_TERRITORY_CODE_M_F = 213;</code>
     */
    ISO_TERRITORY_CODE_M_F(213),
    /**
     * <code>ISO_TERRITORY_CODE_M_G = 214;</code>
     */
    ISO_TERRITORY_CODE_M_G(214),
    /**
     * <code>ISO_TERRITORY_CODE_M_H = 215;</code>
     */
    ISO_TERRITORY_CODE_M_H(215),
    /**
     * <code>ISO_TERRITORY_CODE_M_K = 216;</code>
     */
    ISO_TERRITORY_CODE_M_K(216),
    /**
     * <code>ISO_TERRITORY_CODE_M_L = 217;</code>
     */
    ISO_TERRITORY_CODE_M_L(217),
    /**
     * <code>ISO_TERRITORY_CODE_M_M = 218;</code>
     */
    ISO_TERRITORY_CODE_M_M(218),
    /**
     * <code>ISO_TERRITORY_CODE_M_N = 219;</code>
     */
    ISO_TERRITORY_CODE_M_N(219),
    /**
     * <code>ISO_TERRITORY_CODE_M_O = 220;</code>
     */
    ISO_TERRITORY_CODE_M_O(220),
    /**
     * <code>ISO_TERRITORY_CODE_M_P = 221;</code>
     */
    ISO_TERRITORY_CODE_M_P(221),
    /**
     * <code>ISO_TERRITORY_CODE_M_Q = 222;</code>
     */
    ISO_TERRITORY_CODE_M_Q(222),
    /**
     * <code>ISO_TERRITORY_CODE_M_R = 223;</code>
     */
    ISO_TERRITORY_CODE_M_R(223),
    /**
     * <code>ISO_TERRITORY_CODE_M_S = 224;</code>
     */
    ISO_TERRITORY_CODE_M_S(224),
    /**
     * <code>ISO_TERRITORY_CODE_M_T = 225;</code>
     */
    ISO_TERRITORY_CODE_M_T(225),
    /**
     * <code>ISO_TERRITORY_CODE_M_U = 226;</code>
     */
    ISO_TERRITORY_CODE_M_U(226),
    /**
     * <code>ISO_TERRITORY_CODE_M_V = 227;</code>
     */
    ISO_TERRITORY_CODE_M_V(227),
    /**
     * <code>ISO_TERRITORY_CODE_M_W = 228;</code>
     */
    ISO_TERRITORY_CODE_M_W(228),
    /**
     * <code>ISO_TERRITORY_CODE_M_X = 229;</code>
     */
    ISO_TERRITORY_CODE_M_X(229),
    /**
     * <code>ISO_TERRITORY_CODE_M_Y = 230;</code>
     */
    ISO_TERRITORY_CODE_M_Y(230),
    /**
     * <code>ISO_TERRITORY_CODE_M_Z = 231;</code>
     */
    ISO_TERRITORY_CODE_M_Z(231),
    /**
     * <code>ISO_TERRITORY_CODE_N_A = 232;</code>
     */
    ISO_TERRITORY_CODE_N_A(232),
    /**
     * <code>ISO_TERRITORY_CODE_N_C = 233;</code>
     */
    ISO_TERRITORY_CODE_N_C(233),
    /**
     * <code>ISO_TERRITORY_CODE_N_E = 234;</code>
     */
    ISO_TERRITORY_CODE_N_E(234),
    /**
     * <code>ISO_TERRITORY_CODE_N_F = 235;</code>
     */
    ISO_TERRITORY_CODE_N_F(235),
    /**
     * <code>ISO_TERRITORY_CODE_N_G = 236;</code>
     */
    ISO_TERRITORY_CODE_N_G(236),
    /**
     * <code>ISO_TERRITORY_CODE_N_I = 237;</code>
     */
    ISO_TERRITORY_CODE_N_I(237),
    /**
     * <code>ISO_TERRITORY_CODE_N_L = 238;</code>
     */
    ISO_TERRITORY_CODE_N_L(238),
    /**
     * <code>ISO_TERRITORY_CODE_N_O = 239;</code>
     */
    ISO_TERRITORY_CODE_N_O(239),
    /**
     * <code>ISO_TERRITORY_CODE_N_P = 240;</code>
     */
    ISO_TERRITORY_CODE_N_P(240),
    /**
     * <code>ISO_TERRITORY_CODE_N_R = 241;</code>
     */
    ISO_TERRITORY_CODE_N_R(241),
    /**
     * <code>ISO_TERRITORY_CODE_N_U = 242;</code>
     */
    ISO_TERRITORY_CODE_N_U(242),
    /**
     * <code>ISO_TERRITORY_CODE_N_Z = 243;</code>
     */
    ISO_TERRITORY_CODE_N_Z(243),
    /**
     * <code>ISO_TERRITORY_CODE_O_M = 244;</code>
     */
    ISO_TERRITORY_CODE_O_M(244),
    /**
     * <code>ISO_TERRITORY_CODE_P_A = 245;</code>
     */
    ISO_TERRITORY_CODE_P_A(245),
    /**
     * <code>ISO_TERRITORY_CODE_P_E = 246;</code>
     */
    ISO_TERRITORY_CODE_P_E(246),
    /**
     * <code>ISO_TERRITORY_CODE_P_F = 247;</code>
     */
    ISO_TERRITORY_CODE_P_F(247),
    /**
     * <code>ISO_TERRITORY_CODE_P_G = 248;</code>
     */
    ISO_TERRITORY_CODE_P_G(248),
    /**
     * <code>ISO_TERRITORY_CODE_P_H = 249;</code>
     */
    ISO_TERRITORY_CODE_P_H(249),
    /**
     * <code>ISO_TERRITORY_CODE_P_K = 250;</code>
     */
    ISO_TERRITORY_CODE_P_K(250),
    /**
     * <code>ISO_TERRITORY_CODE_P_L = 251;</code>
     */
    ISO_TERRITORY_CODE_P_L(251),
    /**
     * <code>ISO_TERRITORY_CODE_P_M = 252;</code>
     */
    ISO_TERRITORY_CODE_P_M(252),
    /**
     * <code>ISO_TERRITORY_CODE_P_N = 253;</code>
     */
    ISO_TERRITORY_CODE_P_N(253),
    ;

    /**
     * <code>ISO_TERRITORY_CODE_P_R = 0;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_R_VALUE = 0;
    /**
     * <code>ISO_TERRITORY_CODE_P_S = 1;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_S_VALUE = 1;
    /**
     * <code>ISO_TERRITORY_CODE_P_T = 2;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_T_VALUE = 2;
    /**
     * <code>ISO_TERRITORY_CODE_P_W = 3;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_W_VALUE = 3;
    /**
     * <code>ISO_TERRITORY_CODE_P_Y = 4;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_Y_VALUE = 4;
    /**
     * <code>ISO_TERRITORY_CODE_Q_A = 5;</code>
     */
    public static final int ISO_TERRITORY_CODE_Q_A_VALUE = 5;
    /**
     * <code>ISO_TERRITORY_CODE_E_S__MINUS___C_E = 6;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_S__MINUS___C_E_VALUE = 6;
    /**
     * <code>ISO_TERRITORY_CODE_E_S__MINUS___C_N = 7;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_S__MINUS___C_N_VALUE = 7;
    /**
     * <code>ISO_TERRITORY_CODE_A_D = 8;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_D_VALUE = 8;
    /**
     * <code>ISO_TERRITORY_CODE_A_E = 9;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_E_VALUE = 9;
    /**
     * <code>ISO_TERRITORY_CODE_A_F = 10;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_F_VALUE = 10;
    /**
     * <code>ISO_TERRITORY_CODE_A_G = 11;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_G_VALUE = 11;
    /**
     * <code>ISO_TERRITORY_CODE_A_I = 12;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_I_VALUE = 12;
    /**
     * <code>ISO_TERRITORY_CODE_A_L = 13;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_L_VALUE = 13;
    /**
     * <code>ISO_TERRITORY_CODE_A_M = 14;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_M_VALUE = 14;
    /**
     * <code>ISO_TERRITORY_CODE_A_N = 15;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_N_VALUE = 15;
    /**
     * <code>ISO_TERRITORY_CODE_A_O = 16;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_O_VALUE = 16;
    /**
     * <code>ISO_TERRITORY_CODE_A_Q = 17;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_Q_VALUE = 17;
    /**
     * <code>ISO_TERRITORY_CODE_A_R = 18;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_R_VALUE = 18;
    /**
     * <code>ISO_TERRITORY_CODE_A_S = 19;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_S_VALUE = 19;
    /**
     * <code>ISO_TERRITORY_CODE_A_T = 20;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_T_VALUE = 20;
    /**
     * <code>ISO_TERRITORY_CODE_R_E = 21;</code>
     */
    public static final int ISO_TERRITORY_CODE_R_E_VALUE = 21;
    /**
     * <code>ISO_TERRITORY_CODE_A_U = 22;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_U_VALUE = 22;
    /**
     * <code>ISO_TERRITORY_CODE_A_W = 23;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_W_VALUE = 23;
    /**
     * <code>ISO_TERRITORY_CODE_A_X = 24;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_X_VALUE = 24;
    /**
     * <code>ISO_TERRITORY_CODE_A_Z = 25;</code>
     */
    public static final int ISO_TERRITORY_CODE_A_Z_VALUE = 25;
    /**
     * <code>ISO_TERRITORY_CODE_R_O = 26;</code>
     */
    public static final int ISO_TERRITORY_CODE_R_O_VALUE = 26;
    /**
     * <code>ISO_TERRITORY_CODE_B_A = 27;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_A_VALUE = 27;
    /**
     * <code>ISO_TERRITORY_CODE_B_B = 28;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_B_VALUE = 28;
    /**
     * <code>ISO_TERRITORY_CODE_R_S = 29;</code>
     */
    public static final int ISO_TERRITORY_CODE_R_S_VALUE = 29;
    /**
     * <code>ISO_TERRITORY_CODE_B_D = 30;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_D_VALUE = 30;
    /**
     * <code>ISO_TERRITORY_CODE_B_E = 31;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_E_VALUE = 31;
    /**
     * <code>ISO_TERRITORY_CODE_R_U = 32;</code>
     */
    public static final int ISO_TERRITORY_CODE_R_U_VALUE = 32;
    /**
     * <code>ISO_TERRITORY_CODE_B_F = 33;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_F_VALUE = 33;
    /**
     * <code>ISO_TERRITORY_CODE_B_G = 34;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_G_VALUE = 34;
    /**
     * <code>ISO_TERRITORY_CODE_R_W = 35;</code>
     */
    public static final int ISO_TERRITORY_CODE_R_W_VALUE = 35;
    /**
     * <code>ISO_TERRITORY_CODE_B_H = 36;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_H_VALUE = 36;
    /**
     * <code>ISO_TERRITORY_CODE_B_I = 37;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_I_VALUE = 37;
    /**
     * <code>ISO_TERRITORY_CODE_B_J = 38;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_J_VALUE = 38;
    /**
     * <code>ISO_TERRITORY_CODE_B_L = 39;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_L_VALUE = 39;
    /**
     * <code>ISO_TERRITORY_CODE_B_M = 40;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_M_VALUE = 40;
    /**
     * <code>ISO_TERRITORY_CODE_B_N = 41;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_N_VALUE = 41;
    /**
     * <code>ISO_TERRITORY_CODE_B_O = 42;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_O_VALUE = 42;
    /**
     * <code>ISO_TERRITORY_CODE_S_A = 43;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_A_VALUE = 43;
    /**
     * <code>ISO_TERRITORY_CODE_B_Q = 44;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_Q_VALUE = 44;
    /**
     * <code>ISO_TERRITORY_CODE_S_B = 45;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_B_VALUE = 45;
    /**
     * <code>ISO_TERRITORY_CODE_B_R = 46;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_R_VALUE = 46;
    /**
     * <code>ISO_TERRITORY_CODE_S_C = 47;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_C_VALUE = 47;
    /**
     * <code>ISO_TERRITORY_CODE_B_S = 48;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_S_VALUE = 48;
    /**
     * <code>ISO_TERRITORY_CODE_S_D = 49;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_D_VALUE = 49;
    /**
     * <code>ISO_TERRITORY_CODE_B_T = 50;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_T_VALUE = 50;
    /**
     * <code>ISO_TERRITORY_CODE_S_E = 51;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_E_VALUE = 51;
    /**
     * <code>ISO_TERRITORY_CODE_B_V = 52;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_V_VALUE = 52;
    /**
     * <code>ISO_TERRITORY_CODE_S_G = 53;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_G_VALUE = 53;
    /**
     * <code>ISO_TERRITORY_CODE_B_W = 54;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_W_VALUE = 54;
    /**
     * <code>ISO_TERRITORY_CODE_S_H = 55;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_H_VALUE = 55;
    /**
     * <code>ISO_TERRITORY_CODE_S_I = 56;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_I_VALUE = 56;
    /**
     * <code>ISO_TERRITORY_CODE_B_Y = 57;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_Y_VALUE = 57;
    /**
     * <code>ISO_TERRITORY_CODE_S_J = 58;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_J_VALUE = 58;
    /**
     * <code>ISO_TERRITORY_CODE_B_Z = 59;</code>
     */
    public static final int ISO_TERRITORY_CODE_B_Z_VALUE = 59;
    /**
     * <code>ISO_TERRITORY_CODE_S_K = 60;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_K_VALUE = 60;
    /**
     * <code>ISO_TERRITORY_CODE_S_L = 61;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_L_VALUE = 61;
    /**
     * <code>ISO_TERRITORY_CODE_S_M = 62;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_M_VALUE = 62;
    /**
     * <code>ISO_TERRITORY_CODE_S_N = 63;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_N_VALUE = 63;
    /**
     * <code>ISO_TERRITORY_CODE_S_O = 64;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_O_VALUE = 64;
    /**
     * <code>ISO_TERRITORY_CODE_C_A = 65;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_A_VALUE = 65;
    /**
     * <code>ISO_TERRITORY_CODE_S_R = 66;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_R_VALUE = 66;
    /**
     * <code>ISO_TERRITORY_CODE_C_C = 67;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_C_VALUE = 67;
    /**
     * <code>ISO_TERRITORY_CODE_S_S = 68;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_S_VALUE = 68;
    /**
     * <code>ISO_TERRITORY_CODE_C_D = 69;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_D_VALUE = 69;
    /**
     * <code>ISO_TERRITORY_CODE_S_T = 70;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_T_VALUE = 70;
    /**
     * <code>ISO_TERRITORY_CODE_C_F = 71;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_F_VALUE = 71;
    /**
     * <code>ISO_TERRITORY_CODE_S_V = 72;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_V_VALUE = 72;
    /**
     * <code>ISO_TERRITORY_CODE_C_G = 73;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_G_VALUE = 73;
    /**
     * <code>ISO_TERRITORY_CODE_C_H = 74;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_H_VALUE = 74;
    /**
     * <code>ISO_TERRITORY_CODE_S_X = 75;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_X_VALUE = 75;
    /**
     * <code>ISO_TERRITORY_CODE_C_I = 76;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_I_VALUE = 76;
    /**
     * <code>ISO_TERRITORY_CODE_S_Y = 77;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_Y_VALUE = 77;
    /**
     * <code>ISO_TERRITORY_CODE_S_Z = 78;</code>
     */
    public static final int ISO_TERRITORY_CODE_S_Z_VALUE = 78;
    /**
     * <code>ISO_TERRITORY_CODE_C_K = 79;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_K_VALUE = 79;
    /**
     * <code>ISO_TERRITORY_CODE_C_L = 80;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_L_VALUE = 80;
    /**
     * <code>ISO_TERRITORY_CODE_C_M = 81;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_M_VALUE = 81;
    /**
     * <code>ISO_TERRITORY_CODE_C_N = 82;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_N_VALUE = 82;
    /**
     * <code>ISO_TERRITORY_CODE_C_O = 83;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_O_VALUE = 83;
    /**
     * <code>ISO_TERRITORY_CODE_C_R = 84;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_R_VALUE = 84;
    /**
     * <code>ISO_TERRITORY_CODE_T_C = 85;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_C_VALUE = 85;
    /**
     * <code>ISO_TERRITORY_CODE_C_S = 86;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_S_VALUE = 86;
    /**
     * <code>ISO_TERRITORY_CODE_T_D = 87;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_D_VALUE = 87;
    /**
     * <code>ISO_TERRITORY_CODE_C_U = 88;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_U_VALUE = 88;
    /**
     * <code>ISO_TERRITORY_CODE_T_F = 89;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_F_VALUE = 89;
    /**
     * <code>ISO_TERRITORY_CODE_C_V = 90;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_V_VALUE = 90;
    /**
     * <code>ISO_TERRITORY_CODE_T_G = 91;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_G_VALUE = 91;
    /**
     * <code>ISO_TERRITORY_CODE_C_W = 92;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_W_VALUE = 92;
    /**
     * <code>ISO_TERRITORY_CODE_T_H = 93;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_H_VALUE = 93;
    /**
     * <code>ISO_TERRITORY_CODE_C_X = 94;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_X_VALUE = 94;
    /**
     * <code>ISO_TERRITORY_CODE_C_Y = 95;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_Y_VALUE = 95;
    /**
     * <code>ISO_TERRITORY_CODE_T_J = 96;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_J_VALUE = 96;
    /**
     * <code>ISO_TERRITORY_CODE_C_Z = 97;</code>
     */
    public static final int ISO_TERRITORY_CODE_C_Z_VALUE = 97;
    /**
     * <code>ISO_TERRITORY_CODE_T_K = 98;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_K_VALUE = 98;
    /**
     * <code>ISO_TERRITORY_CODE_T_L = 99;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_L_VALUE = 99;
    /**
     * <code>ISO_TERRITORY_CODE_T_M = 100;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_M_VALUE = 100;
    /**
     * <code>ISO_TERRITORY_CODE_T_N = 101;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_N_VALUE = 101;
    /**
     * <code>ISO_TERRITORY_CODE_T_O = 102;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_O_VALUE = 102;
    /**
     * <code>ISO_TERRITORY_CODE_T_R = 103;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_R_VALUE = 103;
    /**
     * <code>ISO_TERRITORY_CODE_T_T = 104;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_T_VALUE = 104;
    /**
     * <code>ISO_TERRITORY_CODE_D_E = 105;</code>
     */
    public static final int ISO_TERRITORY_CODE_D_E_VALUE = 105;
    /**
     * <code>ISO_TERRITORY_CODE_T_V = 106;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_V_VALUE = 106;
    /**
     * <code>ISO_TERRITORY_CODE_T_W = 107;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_W_VALUE = 107;
    /**
     * <code>ISO_TERRITORY_CODE_D_J = 108;</code>
     */
    public static final int ISO_TERRITORY_CODE_D_J_VALUE = 108;
    /**
     * <code>ISO_TERRITORY_CODE_T_Z = 109;</code>
     */
    public static final int ISO_TERRITORY_CODE_T_Z_VALUE = 109;
    /**
     * <code>ISO_TERRITORY_CODE_D_K = 110;</code>
     */
    public static final int ISO_TERRITORY_CODE_D_K_VALUE = 110;
    /**
     * <code>ISO_TERRITORY_CODE_D_M = 111;</code>
     */
    public static final int ISO_TERRITORY_CODE_D_M_VALUE = 111;
    /**
     * <code>ISO_TERRITORY_CODE_D_O = 112;</code>
     */
    public static final int ISO_TERRITORY_CODE_D_O_VALUE = 112;
    /**
     * <code>ISO_TERRITORY_CODE_U_A = 113;</code>
     */
    public static final int ISO_TERRITORY_CODE_U_A_VALUE = 113;
    /**
     * <code>ISO_TERRITORY_CODE_U_G = 114;</code>
     */
    public static final int ISO_TERRITORY_CODE_U_G_VALUE = 114;
    /**
     * <code>ISO_TERRITORY_CODE_D_Z = 115;</code>
     */
    public static final int ISO_TERRITORY_CODE_D_Z_VALUE = 115;
    /**
     * <code>ISO_TERRITORY_CODE_U_M = 116;</code>
     */
    public static final int ISO_TERRITORY_CODE_U_M_VALUE = 116;
    /**
     * <code>ISO_TERRITORY_CODE_E_C = 117;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_C_VALUE = 117;
    /**
     * <code>ISO_TERRITORY_CODE_U_S = 118;</code>
     */
    public static final int ISO_TERRITORY_CODE_U_S_VALUE = 118;
    /**
     * <code>ISO_TERRITORY_CODE_E_E = 119;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_E_VALUE = 119;
    /**
     * <code>ISO_TERRITORY_CODE_E_G = 120;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_G_VALUE = 120;
    /**
     * <code>ISO_TERRITORY_CODE_E_H = 121;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_H_VALUE = 121;
    /**
     * <code>ISO_TERRITORY_CODE_U_Y = 122;</code>
     */
    public static final int ISO_TERRITORY_CODE_U_Y_VALUE = 122;
    /**
     * <code>ISO_TERRITORY_CODE_U_Z = 123;</code>
     */
    public static final int ISO_TERRITORY_CODE_U_Z_VALUE = 123;
    /**
     * <code>ISO_TERRITORY_CODE_V_A = 124;</code>
     */
    public static final int ISO_TERRITORY_CODE_V_A_VALUE = 124;
    /**
     * <code>ISO_TERRITORY_CODE_E_R = 125;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_R_VALUE = 125;
    /**
     * <code>ISO_TERRITORY_CODE_V_C = 126;</code>
     */
    public static final int ISO_TERRITORY_CODE_V_C_VALUE = 126;
    /**
     * <code>ISO_TERRITORY_CODE_E_S = 127;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_S_VALUE = 127;
    /**
     * <code>ISO_TERRITORY_CODE_E_T = 128;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_T_VALUE = 128;
    /**
     * <code>ISO_TERRITORY_CODE_V_E = 129;</code>
     */
    public static final int ISO_TERRITORY_CODE_V_E_VALUE = 129;
    /**
     * <code>ISO_TERRITORY_CODE_V_G = 130;</code>
     */
    public static final int ISO_TERRITORY_CODE_V_G_VALUE = 130;
    /**
     * <code>ISO_TERRITORY_CODE_V_I = 131;</code>
     */
    public static final int ISO_TERRITORY_CODE_V_I_VALUE = 131;
    /**
     * <code>ISO_TERRITORY_CODE_V_N = 132;</code>
     */
    public static final int ISO_TERRITORY_CODE_V_N_VALUE = 132;
    /**
     * <code>ISO_TERRITORY_CODE_V_U = 133;</code>
     */
    public static final int ISO_TERRITORY_CODE_V_U_VALUE = 133;
    /**
     * <code>ISO_TERRITORY_CODE_F_I = 134;</code>
     */
    public static final int ISO_TERRITORY_CODE_F_I_VALUE = 134;
    /**
     * <code>ISO_TERRITORY_CODE_F_J = 135;</code>
     */
    public static final int ISO_TERRITORY_CODE_F_J_VALUE = 135;
    /**
     * <code>ISO_TERRITORY_CODE_F_K = 136;</code>
     */
    public static final int ISO_TERRITORY_CODE_F_K_VALUE = 136;
    /**
     * <code>ISO_TERRITORY_CODE_F_M = 137;</code>
     */
    public static final int ISO_TERRITORY_CODE_F_M_VALUE = 137;
    /**
     * <code>ISO_TERRITORY_CODE_F_O = 138;</code>
     */
    public static final int ISO_TERRITORY_CODE_F_O_VALUE = 138;
    /**
     * <code>ISO_TERRITORY_CODE_F_R = 139;</code>
     */
    public static final int ISO_TERRITORY_CODE_F_R_VALUE = 139;
    /**
     * <code>ISO_TERRITORY_CODE_W_F = 140;</code>
     */
    public static final int ISO_TERRITORY_CODE_W_F_VALUE = 140;
    /**
     * <code>ISO_TERRITORY_CODE_G_A = 141;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_A_VALUE = 141;
    /**
     * <code>ISO_TERRITORY_CODE_G_B = 142;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_B_VALUE = 142;
    /**
     * <code>ISO_TERRITORY_CODE_W_S = 143;</code>
     */
    public static final int ISO_TERRITORY_CODE_W_S_VALUE = 143;
    /**
     * <code>ISO_TERRITORY_CODE_G_D = 144;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_D_VALUE = 144;
    /**
     * <code>ISO_TERRITORY_CODE_G_E = 145;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_E_VALUE = 145;
    /**
     * <code>ISO_TERRITORY_CODE_G_F = 146;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_F_VALUE = 146;
    /**
     * <code>ISO_TERRITORY_CODE_G_G = 147;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_G_VALUE = 147;
    /**
     * <code>ISO_TERRITORY_CODE_G_H = 148;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_H_VALUE = 148;
    /**
     * <code>ISO_TERRITORY_CODE_G_I = 149;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_I_VALUE = 149;
    /**
     * <code>ISO_TERRITORY_CODE_G_L = 150;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_L_VALUE = 150;
    /**
     * <code>ISO_TERRITORY_CODE_G_M = 151;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_M_VALUE = 151;
    /**
     * <code>ISO_TERRITORY_CODE_G_N = 152;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_N_VALUE = 152;
    /**
     * <code>ISO_TERRITORY_CODE_G_P = 153;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_P_VALUE = 153;
    /**
     * <code>ISO_TERRITORY_CODE_G_Q = 154;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_Q_VALUE = 154;
    /**
     * <code>ISO_TERRITORY_CODE_G_R = 155;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_R_VALUE = 155;
    /**
     * <code>ISO_TERRITORY_CODE_E_S__MINUS___M_L = 156;</code>
     */
    public static final int ISO_TERRITORY_CODE_E_S__MINUS___M_L_VALUE = 156;
    /**
     * <code>ISO_TERRITORY_CODE_G_S = 157;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_S_VALUE = 157;
    /**
     * <code>ISO_TERRITORY_CODE_G_T = 158;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_T_VALUE = 158;
    /**
     * <code>ISO_TERRITORY_CODE_G_U = 159;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_U_VALUE = 159;
    /**
     * <code>ISO_TERRITORY_CODE_G_W = 160;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_W_VALUE = 160;
    /**
     * <code>ISO_TERRITORY_CODE_G_Y = 161;</code>
     */
    public static final int ISO_TERRITORY_CODE_G_Y_VALUE = 161;
    /**
     * <code>ISO_TERRITORY_CODE_H_K = 162;</code>
     */
    public static final int ISO_TERRITORY_CODE_H_K_VALUE = 162;
    /**
     * <code>ISO_TERRITORY_CODE_H_M = 163;</code>
     */
    public static final int ISO_TERRITORY_CODE_H_M_VALUE = 163;
    /**
     * <code>ISO_TERRITORY_CODE_H_N = 164;</code>
     */
    public static final int ISO_TERRITORY_CODE_H_N_VALUE = 164;
    /**
     * <code>ISO_TERRITORY_CODE_H_R = 165;</code>
     */
    public static final int ISO_TERRITORY_CODE_H_R_VALUE = 165;
    /**
     * <code>ISO_TERRITORY_CODE_H_T = 166;</code>
     */
    public static final int ISO_TERRITORY_CODE_H_T_VALUE = 166;
    /**
     * <code>ISO_TERRITORY_CODE_Y_E = 167;</code>
     */
    public static final int ISO_TERRITORY_CODE_Y_E_VALUE = 167;
    /**
     * <code>ISO_TERRITORY_CODE_H_U = 168;</code>
     */
    public static final int ISO_TERRITORY_CODE_H_U_VALUE = 168;
    /**
     * <code>ISO_TERRITORY_CODE_I_D = 169;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_D_VALUE = 169;
    /**
     * <code>ISO_TERRITORY_CODE_Y_T = 170;</code>
     */
    public static final int ISO_TERRITORY_CODE_Y_T_VALUE = 170;
    /**
     * <code>ISO_TERRITORY_CODE_I_E = 171;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_E_VALUE = 171;
    /**
     * <code>ISO_TERRITORY_CODE_I_L = 172;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_L_VALUE = 172;
    /**
     * <code>ISO_TERRITORY_CODE_I_M = 173;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_M_VALUE = 173;
    /**
     * <code>ISO_TERRITORY_CODE_I_N = 174;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_N_VALUE = 174;
    /**
     * <code>ISO_TERRITORY_CODE_I_O = 175;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_O_VALUE = 175;
    /**
     * <code>ISO_TERRITORY_CODE_Z_A = 176;</code>
     */
    public static final int ISO_TERRITORY_CODE_Z_A_VALUE = 176;
    /**
     * <code>ISO_TERRITORY_CODE_I_Q = 177;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_Q_VALUE = 177;
    /**
     * <code>ISO_TERRITORY_CODE_I_R = 178;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_R_VALUE = 178;
    /**
     * <code>ISO_TERRITORY_CODE_I_S = 179;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_S_VALUE = 179;
    /**
     * <code>ISO_TERRITORY_CODE_I_T = 180;</code>
     */
    public static final int ISO_TERRITORY_CODE_I_T_VALUE = 180;
    /**
     * <code>ISO_TERRITORY_CODE_Z_M = 181;</code>
     */
    public static final int ISO_TERRITORY_CODE_Z_M_VALUE = 181;
    /**
     * <code>ISO_TERRITORY_CODE_J_E = 182;</code>
     */
    public static final int ISO_TERRITORY_CODE_J_E_VALUE = 182;
    /**
     * <code>ISO_TERRITORY_CODE_Z_W = 183;</code>
     */
    public static final int ISO_TERRITORY_CODE_Z_W_VALUE = 183;
    /**
     * <code>ISO_TERRITORY_CODE_J_M = 184;</code>
     */
    public static final int ISO_TERRITORY_CODE_J_M_VALUE = 184;
    /**
     * <code>ISO_TERRITORY_CODE_J_O = 185;</code>
     */
    public static final int ISO_TERRITORY_CODE_J_O_VALUE = 185;
    /**
     * <code>ISO_TERRITORY_CODE_J_P = 186;</code>
     */
    public static final int ISO_TERRITORY_CODE_J_P_VALUE = 186;
    /**
     * <code>ISO_TERRITORY_CODE_K_E = 187;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_E_VALUE = 187;
    /**
     * <code>ISO_TERRITORY_CODE_K_G = 188;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_G_VALUE = 188;
    /**
     * <code>ISO_TERRITORY_CODE_K_H = 189;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_H_VALUE = 189;
    /**
     * <code>ISO_TERRITORY_CODE_K_I = 190;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_I_VALUE = 190;
    /**
     * <code>ISO_TERRITORY_CODE_K_M = 191;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_M_VALUE = 191;
    /**
     * <code>ISO_TERRITORY_CODE_K_N = 192;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_N_VALUE = 192;
    /**
     * <code>ISO_TERRITORY_CODE_K_P = 193;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_P_VALUE = 193;
    /**
     * <code>ISO_TERRITORY_CODE_K_R = 194;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_R_VALUE = 194;
    /**
     * <code>ISO_TERRITORY_CODE_K_W = 195;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_W_VALUE = 195;
    /**
     * <code>ISO_TERRITORY_CODE_K_Y = 196;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_Y_VALUE = 196;
    /**
     * <code>ISO_TERRITORY_CODE_K_Z = 197;</code>
     */
    public static final int ISO_TERRITORY_CODE_K_Z_VALUE = 197;
    /**
     * <code>ISO_TERRITORY_CODE_L_A = 198;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_A_VALUE = 198;
    /**
     * <code>ISO_TERRITORY_CODE_L_B = 199;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_B_VALUE = 199;
    /**
     * <code>ISO_TERRITORY_CODE_L_C = 200;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_C_VALUE = 200;
    /**
     * <code>ISO_TERRITORY_CODE_L_I = 201;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_I_VALUE = 201;
    /**
     * <code>ISO_TERRITORY_CODE_L_K = 202;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_K_VALUE = 202;
    /**
     * <code>ISO_TERRITORY_CODE_L_R = 203;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_R_VALUE = 203;
    /**
     * <code>ISO_TERRITORY_CODE_L_S = 204;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_S_VALUE = 204;
    /**
     * <code>ISO_TERRITORY_CODE_L_T = 205;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_T_VALUE = 205;
    /**
     * <code>ISO_TERRITORY_CODE_L_U = 206;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_U_VALUE = 206;
    /**
     * <code>ISO_TERRITORY_CODE_L_V = 207;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_V_VALUE = 207;
    /**
     * <code>ISO_TERRITORY_CODE_L_Y = 208;</code>
     */
    public static final int ISO_TERRITORY_CODE_L_Y_VALUE = 208;
    /**
     * <code>ISO_TERRITORY_CODE_M_A = 209;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_A_VALUE = 209;
    /**
     * <code>ISO_TERRITORY_CODE_M_C = 210;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_C_VALUE = 210;
    /**
     * <code>ISO_TERRITORY_CODE_M_D = 211;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_D_VALUE = 211;
    /**
     * <code>ISO_TERRITORY_CODE_M_E = 212;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_E_VALUE = 212;
    /**
     * <code>ISO_TERRITORY_CODE_M_F = 213;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_F_VALUE = 213;
    /**
     * <code>ISO_TERRITORY_CODE_M_G = 214;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_G_VALUE = 214;
    /**
     * <code>ISO_TERRITORY_CODE_M_H = 215;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_H_VALUE = 215;
    /**
     * <code>ISO_TERRITORY_CODE_M_K = 216;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_K_VALUE = 216;
    /**
     * <code>ISO_TERRITORY_CODE_M_L = 217;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_L_VALUE = 217;
    /**
     * <code>ISO_TERRITORY_CODE_M_M = 218;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_M_VALUE = 218;
    /**
     * <code>ISO_TERRITORY_CODE_M_N = 219;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_N_VALUE = 219;
    /**
     * <code>ISO_TERRITORY_CODE_M_O = 220;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_O_VALUE = 220;
    /**
     * <code>ISO_TERRITORY_CODE_M_P = 221;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_P_VALUE = 221;
    /**
     * <code>ISO_TERRITORY_CODE_M_Q = 222;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_Q_VALUE = 222;
    /**
     * <code>ISO_TERRITORY_CODE_M_R = 223;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_R_VALUE = 223;
    /**
     * <code>ISO_TERRITORY_CODE_M_S = 224;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_S_VALUE = 224;
    /**
     * <code>ISO_TERRITORY_CODE_M_T = 225;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_T_VALUE = 225;
    /**
     * <code>ISO_TERRITORY_CODE_M_U = 226;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_U_VALUE = 226;
    /**
     * <code>ISO_TERRITORY_CODE_M_V = 227;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_V_VALUE = 227;
    /**
     * <code>ISO_TERRITORY_CODE_M_W = 228;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_W_VALUE = 228;
    /**
     * <code>ISO_TERRITORY_CODE_M_X = 229;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_X_VALUE = 229;
    /**
     * <code>ISO_TERRITORY_CODE_M_Y = 230;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_Y_VALUE = 230;
    /**
     * <code>ISO_TERRITORY_CODE_M_Z = 231;</code>
     */
    public static final int ISO_TERRITORY_CODE_M_Z_VALUE = 231;
    /**
     * <code>ISO_TERRITORY_CODE_N_A = 232;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_A_VALUE = 232;
    /**
     * <code>ISO_TERRITORY_CODE_N_C = 233;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_C_VALUE = 233;
    /**
     * <code>ISO_TERRITORY_CODE_N_E = 234;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_E_VALUE = 234;
    /**
     * <code>ISO_TERRITORY_CODE_N_F = 235;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_F_VALUE = 235;
    /**
     * <code>ISO_TERRITORY_CODE_N_G = 236;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_G_VALUE = 236;
    /**
     * <code>ISO_TERRITORY_CODE_N_I = 237;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_I_VALUE = 237;
    /**
     * <code>ISO_TERRITORY_CODE_N_L = 238;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_L_VALUE = 238;
    /**
     * <code>ISO_TERRITORY_CODE_N_O = 239;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_O_VALUE = 239;
    /**
     * <code>ISO_TERRITORY_CODE_N_P = 240;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_P_VALUE = 240;
    /**
     * <code>ISO_TERRITORY_CODE_N_R = 241;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_R_VALUE = 241;
    /**
     * <code>ISO_TERRITORY_CODE_N_U = 242;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_U_VALUE = 242;
    /**
     * <code>ISO_TERRITORY_CODE_N_Z = 243;</code>
     */
    public static final int ISO_TERRITORY_CODE_N_Z_VALUE = 243;
    /**
     * <code>ISO_TERRITORY_CODE_O_M = 244;</code>
     */
    public static final int ISO_TERRITORY_CODE_O_M_VALUE = 244;
    /**
     * <code>ISO_TERRITORY_CODE_P_A = 245;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_A_VALUE = 245;
    /**
     * <code>ISO_TERRITORY_CODE_P_E = 246;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_E_VALUE = 246;
    /**
     * <code>ISO_TERRITORY_CODE_P_F = 247;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_F_VALUE = 247;
    /**
     * <code>ISO_TERRITORY_CODE_P_G = 248;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_G_VALUE = 248;
    /**
     * <code>ISO_TERRITORY_CODE_P_H = 249;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_H_VALUE = 249;
    /**
     * <code>ISO_TERRITORY_CODE_P_K = 250;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_K_VALUE = 250;
    /**
     * <code>ISO_TERRITORY_CODE_P_L = 251;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_L_VALUE = 251;
    /**
     * <code>ISO_TERRITORY_CODE_P_M = 252;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_M_VALUE = 252;
    /**
     * <code>ISO_TERRITORY_CODE_P_N = 253;</code>
     */
    public static final int ISO_TERRITORY_CODE_P_N_VALUE = 253;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IsoTerritoryCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static IsoTerritoryCode forNumber(int value) {
      switch (value) {
        case 0: return ISO_TERRITORY_CODE_P_R;
        case 1: return ISO_TERRITORY_CODE_P_S;
        case 2: return ISO_TERRITORY_CODE_P_T;
        case 3: return ISO_TERRITORY_CODE_P_W;
        case 4: return ISO_TERRITORY_CODE_P_Y;
        case 5: return ISO_TERRITORY_CODE_Q_A;
        case 6: return ISO_TERRITORY_CODE_E_S__MINUS___C_E;
        case 7: return ISO_TERRITORY_CODE_E_S__MINUS___C_N;
        case 8: return ISO_TERRITORY_CODE_A_D;
        case 9: return ISO_TERRITORY_CODE_A_E;
        case 10: return ISO_TERRITORY_CODE_A_F;
        case 11: return ISO_TERRITORY_CODE_A_G;
        case 12: return ISO_TERRITORY_CODE_A_I;
        case 13: return ISO_TERRITORY_CODE_A_L;
        case 14: return ISO_TERRITORY_CODE_A_M;
        case 15: return ISO_TERRITORY_CODE_A_N;
        case 16: return ISO_TERRITORY_CODE_A_O;
        case 17: return ISO_TERRITORY_CODE_A_Q;
        case 18: return ISO_TERRITORY_CODE_A_R;
        case 19: return ISO_TERRITORY_CODE_A_S;
        case 20: return ISO_TERRITORY_CODE_A_T;
        case 21: return ISO_TERRITORY_CODE_R_E;
        case 22: return ISO_TERRITORY_CODE_A_U;
        case 23: return ISO_TERRITORY_CODE_A_W;
        case 24: return ISO_TERRITORY_CODE_A_X;
        case 25: return ISO_TERRITORY_CODE_A_Z;
        case 26: return ISO_TERRITORY_CODE_R_O;
        case 27: return ISO_TERRITORY_CODE_B_A;
        case 28: return ISO_TERRITORY_CODE_B_B;
        case 29: return ISO_TERRITORY_CODE_R_S;
        case 30: return ISO_TERRITORY_CODE_B_D;
        case 31: return ISO_TERRITORY_CODE_B_E;
        case 32: return ISO_TERRITORY_CODE_R_U;
        case 33: return ISO_TERRITORY_CODE_B_F;
        case 34: return ISO_TERRITORY_CODE_B_G;
        case 35: return ISO_TERRITORY_CODE_R_W;
        case 36: return ISO_TERRITORY_CODE_B_H;
        case 37: return ISO_TERRITORY_CODE_B_I;
        case 38: return ISO_TERRITORY_CODE_B_J;
        case 39: return ISO_TERRITORY_CODE_B_L;
        case 40: return ISO_TERRITORY_CODE_B_M;
        case 41: return ISO_TERRITORY_CODE_B_N;
        case 42: return ISO_TERRITORY_CODE_B_O;
        case 43: return ISO_TERRITORY_CODE_S_A;
        case 44: return ISO_TERRITORY_CODE_B_Q;
        case 45: return ISO_TERRITORY_CODE_S_B;
        case 46: return ISO_TERRITORY_CODE_B_R;
        case 47: return ISO_TERRITORY_CODE_S_C;
        case 48: return ISO_TERRITORY_CODE_B_S;
        case 49: return ISO_TERRITORY_CODE_S_D;
        case 50: return ISO_TERRITORY_CODE_B_T;
        case 51: return ISO_TERRITORY_CODE_S_E;
        case 52: return ISO_TERRITORY_CODE_B_V;
        case 53: return ISO_TERRITORY_CODE_S_G;
        case 54: return ISO_TERRITORY_CODE_B_W;
        case 55: return ISO_TERRITORY_CODE_S_H;
        case 56: return ISO_TERRITORY_CODE_S_I;
        case 57: return ISO_TERRITORY_CODE_B_Y;
        case 58: return ISO_TERRITORY_CODE_S_J;
        case 59: return ISO_TERRITORY_CODE_B_Z;
        case 60: return ISO_TERRITORY_CODE_S_K;
        case 61: return ISO_TERRITORY_CODE_S_L;
        case 62: return ISO_TERRITORY_CODE_S_M;
        case 63: return ISO_TERRITORY_CODE_S_N;
        case 64: return ISO_TERRITORY_CODE_S_O;
        case 65: return ISO_TERRITORY_CODE_C_A;
        case 66: return ISO_TERRITORY_CODE_S_R;
        case 67: return ISO_TERRITORY_CODE_C_C;
        case 68: return ISO_TERRITORY_CODE_S_S;
        case 69: return ISO_TERRITORY_CODE_C_D;
        case 70: return ISO_TERRITORY_CODE_S_T;
        case 71: return ISO_TERRITORY_CODE_C_F;
        case 72: return ISO_TERRITORY_CODE_S_V;
        case 73: return ISO_TERRITORY_CODE_C_G;
        case 74: return ISO_TERRITORY_CODE_C_H;
        case 75: return ISO_TERRITORY_CODE_S_X;
        case 76: return ISO_TERRITORY_CODE_C_I;
        case 77: return ISO_TERRITORY_CODE_S_Y;
        case 78: return ISO_TERRITORY_CODE_S_Z;
        case 79: return ISO_TERRITORY_CODE_C_K;
        case 80: return ISO_TERRITORY_CODE_C_L;
        case 81: return ISO_TERRITORY_CODE_C_M;
        case 82: return ISO_TERRITORY_CODE_C_N;
        case 83: return ISO_TERRITORY_CODE_C_O;
        case 84: return ISO_TERRITORY_CODE_C_R;
        case 85: return ISO_TERRITORY_CODE_T_C;
        case 86: return ISO_TERRITORY_CODE_C_S;
        case 87: return ISO_TERRITORY_CODE_T_D;
        case 88: return ISO_TERRITORY_CODE_C_U;
        case 89: return ISO_TERRITORY_CODE_T_F;
        case 90: return ISO_TERRITORY_CODE_C_V;
        case 91: return ISO_TERRITORY_CODE_T_G;
        case 92: return ISO_TERRITORY_CODE_C_W;
        case 93: return ISO_TERRITORY_CODE_T_H;
        case 94: return ISO_TERRITORY_CODE_C_X;
        case 95: return ISO_TERRITORY_CODE_C_Y;
        case 96: return ISO_TERRITORY_CODE_T_J;
        case 97: return ISO_TERRITORY_CODE_C_Z;
        case 98: return ISO_TERRITORY_CODE_T_K;
        case 99: return ISO_TERRITORY_CODE_T_L;
        case 100: return ISO_TERRITORY_CODE_T_M;
        case 101: return ISO_TERRITORY_CODE_T_N;
        case 102: return ISO_TERRITORY_CODE_T_O;
        case 103: return ISO_TERRITORY_CODE_T_R;
        case 104: return ISO_TERRITORY_CODE_T_T;
        case 105: return ISO_TERRITORY_CODE_D_E;
        case 106: return ISO_TERRITORY_CODE_T_V;
        case 107: return ISO_TERRITORY_CODE_T_W;
        case 108: return ISO_TERRITORY_CODE_D_J;
        case 109: return ISO_TERRITORY_CODE_T_Z;
        case 110: return ISO_TERRITORY_CODE_D_K;
        case 111: return ISO_TERRITORY_CODE_D_M;
        case 112: return ISO_TERRITORY_CODE_D_O;
        case 113: return ISO_TERRITORY_CODE_U_A;
        case 114: return ISO_TERRITORY_CODE_U_G;
        case 115: return ISO_TERRITORY_CODE_D_Z;
        case 116: return ISO_TERRITORY_CODE_U_M;
        case 117: return ISO_TERRITORY_CODE_E_C;
        case 118: return ISO_TERRITORY_CODE_U_S;
        case 119: return ISO_TERRITORY_CODE_E_E;
        case 120: return ISO_TERRITORY_CODE_E_G;
        case 121: return ISO_TERRITORY_CODE_E_H;
        case 122: return ISO_TERRITORY_CODE_U_Y;
        case 123: return ISO_TERRITORY_CODE_U_Z;
        case 124: return ISO_TERRITORY_CODE_V_A;
        case 125: return ISO_TERRITORY_CODE_E_R;
        case 126: return ISO_TERRITORY_CODE_V_C;
        case 127: return ISO_TERRITORY_CODE_E_S;
        case 128: return ISO_TERRITORY_CODE_E_T;
        case 129: return ISO_TERRITORY_CODE_V_E;
        case 130: return ISO_TERRITORY_CODE_V_G;
        case 131: return ISO_TERRITORY_CODE_V_I;
        case 132: return ISO_TERRITORY_CODE_V_N;
        case 133: return ISO_TERRITORY_CODE_V_U;
        case 134: return ISO_TERRITORY_CODE_F_I;
        case 135: return ISO_TERRITORY_CODE_F_J;
        case 136: return ISO_TERRITORY_CODE_F_K;
        case 137: return ISO_TERRITORY_CODE_F_M;
        case 138: return ISO_TERRITORY_CODE_F_O;
        case 139: return ISO_TERRITORY_CODE_F_R;
        case 140: return ISO_TERRITORY_CODE_W_F;
        case 141: return ISO_TERRITORY_CODE_G_A;
        case 142: return ISO_TERRITORY_CODE_G_B;
        case 143: return ISO_TERRITORY_CODE_W_S;
        case 144: return ISO_TERRITORY_CODE_G_D;
        case 145: return ISO_TERRITORY_CODE_G_E;
        case 146: return ISO_TERRITORY_CODE_G_F;
        case 147: return ISO_TERRITORY_CODE_G_G;
        case 148: return ISO_TERRITORY_CODE_G_H;
        case 149: return ISO_TERRITORY_CODE_G_I;
        case 150: return ISO_TERRITORY_CODE_G_L;
        case 151: return ISO_TERRITORY_CODE_G_M;
        case 152: return ISO_TERRITORY_CODE_G_N;
        case 153: return ISO_TERRITORY_CODE_G_P;
        case 154: return ISO_TERRITORY_CODE_G_Q;
        case 155: return ISO_TERRITORY_CODE_G_R;
        case 156: return ISO_TERRITORY_CODE_E_S__MINUS___M_L;
        case 157: return ISO_TERRITORY_CODE_G_S;
        case 158: return ISO_TERRITORY_CODE_G_T;
        case 159: return ISO_TERRITORY_CODE_G_U;
        case 160: return ISO_TERRITORY_CODE_G_W;
        case 161: return ISO_TERRITORY_CODE_G_Y;
        case 162: return ISO_TERRITORY_CODE_H_K;
        case 163: return ISO_TERRITORY_CODE_H_M;
        case 164: return ISO_TERRITORY_CODE_H_N;
        case 165: return ISO_TERRITORY_CODE_H_R;
        case 166: return ISO_TERRITORY_CODE_H_T;
        case 167: return ISO_TERRITORY_CODE_Y_E;
        case 168: return ISO_TERRITORY_CODE_H_U;
        case 169: return ISO_TERRITORY_CODE_I_D;
        case 170: return ISO_TERRITORY_CODE_Y_T;
        case 171: return ISO_TERRITORY_CODE_I_E;
        case 172: return ISO_TERRITORY_CODE_I_L;
        case 173: return ISO_TERRITORY_CODE_I_M;
        case 174: return ISO_TERRITORY_CODE_I_N;
        case 175: return ISO_TERRITORY_CODE_I_O;
        case 176: return ISO_TERRITORY_CODE_Z_A;
        case 177: return ISO_TERRITORY_CODE_I_Q;
        case 178: return ISO_TERRITORY_CODE_I_R;
        case 179: return ISO_TERRITORY_CODE_I_S;
        case 180: return ISO_TERRITORY_CODE_I_T;
        case 181: return ISO_TERRITORY_CODE_Z_M;
        case 182: return ISO_TERRITORY_CODE_J_E;
        case 183: return ISO_TERRITORY_CODE_Z_W;
        case 184: return ISO_TERRITORY_CODE_J_M;
        case 185: return ISO_TERRITORY_CODE_J_O;
        case 186: return ISO_TERRITORY_CODE_J_P;
        case 187: return ISO_TERRITORY_CODE_K_E;
        case 188: return ISO_TERRITORY_CODE_K_G;
        case 189: return ISO_TERRITORY_CODE_K_H;
        case 190: return ISO_TERRITORY_CODE_K_I;
        case 191: return ISO_TERRITORY_CODE_K_M;
        case 192: return ISO_TERRITORY_CODE_K_N;
        case 193: return ISO_TERRITORY_CODE_K_P;
        case 194: return ISO_TERRITORY_CODE_K_R;
        case 195: return ISO_TERRITORY_CODE_K_W;
        case 196: return ISO_TERRITORY_CODE_K_Y;
        case 197: return ISO_TERRITORY_CODE_K_Z;
        case 198: return ISO_TERRITORY_CODE_L_A;
        case 199: return ISO_TERRITORY_CODE_L_B;
        case 200: return ISO_TERRITORY_CODE_L_C;
        case 201: return ISO_TERRITORY_CODE_L_I;
        case 202: return ISO_TERRITORY_CODE_L_K;
        case 203: return ISO_TERRITORY_CODE_L_R;
        case 204: return ISO_TERRITORY_CODE_L_S;
        case 205: return ISO_TERRITORY_CODE_L_T;
        case 206: return ISO_TERRITORY_CODE_L_U;
        case 207: return ISO_TERRITORY_CODE_L_V;
        case 208: return ISO_TERRITORY_CODE_L_Y;
        case 209: return ISO_TERRITORY_CODE_M_A;
        case 210: return ISO_TERRITORY_CODE_M_C;
        case 211: return ISO_TERRITORY_CODE_M_D;
        case 212: return ISO_TERRITORY_CODE_M_E;
        case 213: return ISO_TERRITORY_CODE_M_F;
        case 214: return ISO_TERRITORY_CODE_M_G;
        case 215: return ISO_TERRITORY_CODE_M_H;
        case 216: return ISO_TERRITORY_CODE_M_K;
        case 217: return ISO_TERRITORY_CODE_M_L;
        case 218: return ISO_TERRITORY_CODE_M_M;
        case 219: return ISO_TERRITORY_CODE_M_N;
        case 220: return ISO_TERRITORY_CODE_M_O;
        case 221: return ISO_TERRITORY_CODE_M_P;
        case 222: return ISO_TERRITORY_CODE_M_Q;
        case 223: return ISO_TERRITORY_CODE_M_R;
        case 224: return ISO_TERRITORY_CODE_M_S;
        case 225: return ISO_TERRITORY_CODE_M_T;
        case 226: return ISO_TERRITORY_CODE_M_U;
        case 227: return ISO_TERRITORY_CODE_M_V;
        case 228: return ISO_TERRITORY_CODE_M_W;
        case 229: return ISO_TERRITORY_CODE_M_X;
        case 230: return ISO_TERRITORY_CODE_M_Y;
        case 231: return ISO_TERRITORY_CODE_M_Z;
        case 232: return ISO_TERRITORY_CODE_N_A;
        case 233: return ISO_TERRITORY_CODE_N_C;
        case 234: return ISO_TERRITORY_CODE_N_E;
        case 235: return ISO_TERRITORY_CODE_N_F;
        case 236: return ISO_TERRITORY_CODE_N_G;
        case 237: return ISO_TERRITORY_CODE_N_I;
        case 238: return ISO_TERRITORY_CODE_N_L;
        case 239: return ISO_TERRITORY_CODE_N_O;
        case 240: return ISO_TERRITORY_CODE_N_P;
        case 241: return ISO_TERRITORY_CODE_N_R;
        case 242: return ISO_TERRITORY_CODE_N_U;
        case 243: return ISO_TERRITORY_CODE_N_Z;
        case 244: return ISO_TERRITORY_CODE_O_M;
        case 245: return ISO_TERRITORY_CODE_P_A;
        case 246: return ISO_TERRITORY_CODE_P_E;
        case 247: return ISO_TERRITORY_CODE_P_F;
        case 248: return ISO_TERRITORY_CODE_P_G;
        case 249: return ISO_TERRITORY_CODE_P_H;
        case 250: return ISO_TERRITORY_CODE_P_K;
        case 251: return ISO_TERRITORY_CODE_P_L;
        case 252: return ISO_TERRITORY_CODE_P_M;
        case 253: return ISO_TERRITORY_CODE_P_N;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IsoTerritoryCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IsoTerritoryCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IsoTerritoryCode>() {
            public IsoTerritoryCode findValueByNumber(int number) {
              return IsoTerritoryCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(80);
    }

    private static final IsoTerritoryCode[] VALUES = values();

    public static IsoTerritoryCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private IsoTerritoryCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.IsoTerritoryCode)
  }

  /**
   * Protobuf enum {@code avs.LabelNameType}
   */
  public enum LabelNameType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LABEL_NAME_TYPE_DISPLAY_LABEL_NAME = 0;</code>
     */
    LABEL_NAME_TYPE_DISPLAY_LABEL_NAME(0),
    /**
     * <code>LABEL_NAME_TYPE_USER_DEFINED = 1;</code>
     */
    LABEL_NAME_TYPE_USER_DEFINED(1),
    ;

    /**
     * <code>LABEL_NAME_TYPE_DISPLAY_LABEL_NAME = 0;</code>
     */
    public static final int LABEL_NAME_TYPE_DISPLAY_LABEL_NAME_VALUE = 0;
    /**
     * <code>LABEL_NAME_TYPE_USER_DEFINED = 1;</code>
     */
    public static final int LABEL_NAME_TYPE_USER_DEFINED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LabelNameType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LabelNameType forNumber(int value) {
      switch (value) {
        case 0: return LABEL_NAME_TYPE_DISPLAY_LABEL_NAME;
        case 1: return LABEL_NAME_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LabelNameType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LabelNameType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LabelNameType>() {
            public LabelNameType findValueByNumber(int number) {
              return LabelNameType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(81);
    }

    private static final LabelNameType[] VALUES = values();

    public static LabelNameType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LabelNameType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LabelNameType)
  }

  /**
   * Protobuf enum {@code avs.LabelType}
   */
  public enum LabelType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LABEL_TYPE_USER_DEFINED = 0;</code>
     */
    LABEL_TYPE_USER_DEFINED(0),
    /**
     * <code>LABEL_TYPE_DISPLAY_LABEL = 1;</code>
     */
    LABEL_TYPE_DISPLAY_LABEL(1),
    ;

    /**
     * <code>LABEL_TYPE_USER_DEFINED = 0;</code>
     */
    public static final int LABEL_TYPE_USER_DEFINED_VALUE = 0;
    /**
     * <code>LABEL_TYPE_DISPLAY_LABEL = 1;</code>
     */
    public static final int LABEL_TYPE_DISPLAY_LABEL_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LabelType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LabelType forNumber(int value) {
      switch (value) {
        case 0: return LABEL_TYPE_USER_DEFINED;
        case 1: return LABEL_TYPE_DISPLAY_LABEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LabelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LabelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LabelType>() {
            public LabelType findValueByNumber(int number) {
              return LabelType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(82);
    }

    private static final LabelType[] VALUES = values();

    public static LabelType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LabelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LabelType)
  }

  /**
   * Protobuf enum {@code avs.LanguageLocalizationType}
   */
  public enum LanguageLocalizationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LANGUAGE_LOCALIZATION_TYPE_DUBBED = 0;</code>
     */
    LANGUAGE_LOCALIZATION_TYPE_DUBBED(0),
    /**
     * <code>LANGUAGE_LOCALIZATION_TYPE_MULTILINGUAL = 1;</code>
     */
    LANGUAGE_LOCALIZATION_TYPE_MULTILINGUAL(1),
    /**
     * <code>LANGUAGE_LOCALIZATION_TYPE_SUB_TITLED = 2;</code>
     */
    LANGUAGE_LOCALIZATION_TYPE_SUB_TITLED(2),
    /**
     * <code>LANGUAGE_LOCALIZATION_TYPE_ORIGINAL = 3;</code>
     */
    LANGUAGE_LOCALIZATION_TYPE_ORIGINAL(3),
    ;

    /**
     * <code>LANGUAGE_LOCALIZATION_TYPE_DUBBED = 0;</code>
     */
    public static final int LANGUAGE_LOCALIZATION_TYPE_DUBBED_VALUE = 0;
    /**
     * <code>LANGUAGE_LOCALIZATION_TYPE_MULTILINGUAL = 1;</code>
     */
    public static final int LANGUAGE_LOCALIZATION_TYPE_MULTILINGUAL_VALUE = 1;
    /**
     * <code>LANGUAGE_LOCALIZATION_TYPE_SUB_TITLED = 2;</code>
     */
    public static final int LANGUAGE_LOCALIZATION_TYPE_SUB_TITLED_VALUE = 2;
    /**
     * <code>LANGUAGE_LOCALIZATION_TYPE_ORIGINAL = 3;</code>
     */
    public static final int LANGUAGE_LOCALIZATION_TYPE_ORIGINAL_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LanguageLocalizationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LanguageLocalizationType forNumber(int value) {
      switch (value) {
        case 0: return LANGUAGE_LOCALIZATION_TYPE_DUBBED;
        case 1: return LANGUAGE_LOCALIZATION_TYPE_MULTILINGUAL;
        case 2: return LANGUAGE_LOCALIZATION_TYPE_SUB_TITLED;
        case 3: return LANGUAGE_LOCALIZATION_TYPE_ORIGINAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LanguageLocalizationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LanguageLocalizationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LanguageLocalizationType>() {
            public LanguageLocalizationType findValueByNumber(int number) {
              return LanguageLocalizationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(83);
    }

    private static final LanguageLocalizationType[] VALUES = values();

    public static LanguageLocalizationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LanguageLocalizationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LanguageLocalizationType)
  }

  /**
   * Protobuf enum {@code avs.LicenseRecord}
   */
  public enum LicenseRecord
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LICENSE_RECORD_HAS_LICENSE = 0;</code>
     */
    LICENSE_RECORD_HAS_LICENSE(0),
    /**
     * <code>LICENSE_RECORD_UNKNOWN = 1;</code>
     */
    LICENSE_RECORD_UNKNOWN(1),
    /**
     * <code>LICENSE_RECORD_HAS_NO_LICENSE = 2;</code>
     */
    LICENSE_RECORD_HAS_NO_LICENSE(2),
    ;

    /**
     * <code>LICENSE_RECORD_HAS_LICENSE = 0;</code>
     */
    public static final int LICENSE_RECORD_HAS_LICENSE_VALUE = 0;
    /**
     * <code>LICENSE_RECORD_UNKNOWN = 1;</code>
     */
    public static final int LICENSE_RECORD_UNKNOWN_VALUE = 1;
    /**
     * <code>LICENSE_RECORD_HAS_NO_LICENSE = 2;</code>
     */
    public static final int LICENSE_RECORD_HAS_NO_LICENSE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LicenseRecord valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LicenseRecord forNumber(int value) {
      switch (value) {
        case 0: return LICENSE_RECORD_HAS_LICENSE;
        case 1: return LICENSE_RECORD_UNKNOWN;
        case 2: return LICENSE_RECORD_HAS_NO_LICENSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LicenseRecord>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LicenseRecord> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LicenseRecord>() {
            public LicenseRecord findValueByNumber(int number) {
              return LicenseRecord.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(84);
    }

    private static final LicenseRecord[] VALUES = values();

    public static LicenseRecord valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LicenseRecord(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LicenseRecord)
  }

  /**
   * Protobuf enum {@code avs.LicenseRefusalReason}
   */
  public enum LicenseRefusalReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LICENSE_REFUSAL_REASON_WORK_IN_PUBLIC_DOMAIN = 0;</code>
     */
    LICENSE_REFUSAL_REASON_WORK_IN_PUBLIC_DOMAIN(0),
    /**
     * <code>LICENSE_REFUSAL_REASON_USER_DEFINED = 1;</code>
     */
    LICENSE_REFUSAL_REASON_USER_DEFINED(1),
    ;

    /**
     * <code>LICENSE_REFUSAL_REASON_WORK_IN_PUBLIC_DOMAIN = 0;</code>
     */
    public static final int LICENSE_REFUSAL_REASON_WORK_IN_PUBLIC_DOMAIN_VALUE = 0;
    /**
     * <code>LICENSE_REFUSAL_REASON_USER_DEFINED = 1;</code>
     */
    public static final int LICENSE_REFUSAL_REASON_USER_DEFINED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LicenseRefusalReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LicenseRefusalReason forNumber(int value) {
      switch (value) {
        case 0: return LICENSE_REFUSAL_REASON_WORK_IN_PUBLIC_DOMAIN;
        case 1: return LICENSE_REFUSAL_REASON_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LicenseRefusalReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LicenseRefusalReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LicenseRefusalReason>() {
            public LicenseRefusalReason findValueByNumber(int number) {
              return LicenseRefusalReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(85);
    }

    private static final LicenseRefusalReason[] VALUES = values();

    public static LicenseRefusalReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LicenseRefusalReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LicenseRefusalReason)
  }

  /**
   * Protobuf enum {@code avs.LicenseRejectionReason}
   */
  public enum LicenseRejectionReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LICENSE_REJECTION_REASON_DUPLICATE_LICENSE_REQUEST_NUMBER = 0;</code>
     */
    LICENSE_REJECTION_REASON_DUPLICATE_LICENSE_REQUEST_NUMBER(0),
    /**
     * <code>LICENSE_REJECTION_REASON_WORK_IN_PUBLIC_DOMAIN = 1;</code>
     */
    LICENSE_REJECTION_REASON_WORK_IN_PUBLIC_DOMAIN(1),
    /**
     * <code>LICENSE_REJECTION_REASON_LICENSE_EXISTS = 2;</code>
     */
    LICENSE_REJECTION_REASON_LICENSE_EXISTS(2),
    /**
     * <code>LICENSE_REJECTION_REASON_LICENSE_NOT_NEEDED = 3;</code>
     */
    LICENSE_REJECTION_REASON_LICENSE_NOT_NEEDED(3),
    /**
     * <code>LICENSE_REJECTION_REASON_REFERENCED_DOCUMENT_MISSING = 4;</code>
     */
    LICENSE_REJECTION_REASON_REFERENCED_DOCUMENT_MISSING(4),
    /**
     * <code>LICENSE_REJECTION_REASON_WRONG_ADDRESSEE = 5;</code>
     */
    LICENSE_REJECTION_REASON_WRONG_ADDRESSEE(5),
    /**
     * <code>LICENSE_REJECTION_REASON_WORK_USED_MULTIPLE_TIMES = 6;</code>
     */
    LICENSE_REJECTION_REASON_WORK_USED_MULTIPLE_TIMES(6),
    /**
     * <code>LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_SCOPE_OF_LICENSE = 7;</code>
     */
    LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_SCOPE_OF_LICENSE(7),
    /**
     * <code>LICENSE_REJECTION_REASON_LICENSE_BLOCKED = 8;</code>
     */
    LICENSE_REJECTION_REASON_LICENSE_BLOCKED(8),
    /**
     * <code>LICENSE_REJECTION_REASON_USER_DEFINED = 9;</code>
     */
    LICENSE_REJECTION_REASON_USER_DEFINED(9),
    /**
     * <code>LICENSE_REJECTION_REASON_SHARE_SPLITS_DIFFER = 10;</code>
     */
    LICENSE_REJECTION_REASON_SHARE_SPLITS_DIFFER(10),
    /**
     * <code>LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_ROYALTIES = 11;</code>
     */
    LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_ROYALTIES(11),
    ;

    /**
     * <code>LICENSE_REJECTION_REASON_DUPLICATE_LICENSE_REQUEST_NUMBER = 0;</code>
     */
    public static final int LICENSE_REJECTION_REASON_DUPLICATE_LICENSE_REQUEST_NUMBER_VALUE = 0;
    /**
     * <code>LICENSE_REJECTION_REASON_WORK_IN_PUBLIC_DOMAIN = 1;</code>
     */
    public static final int LICENSE_REJECTION_REASON_WORK_IN_PUBLIC_DOMAIN_VALUE = 1;
    /**
     * <code>LICENSE_REJECTION_REASON_LICENSE_EXISTS = 2;</code>
     */
    public static final int LICENSE_REJECTION_REASON_LICENSE_EXISTS_VALUE = 2;
    /**
     * <code>LICENSE_REJECTION_REASON_LICENSE_NOT_NEEDED = 3;</code>
     */
    public static final int LICENSE_REJECTION_REASON_LICENSE_NOT_NEEDED_VALUE = 3;
    /**
     * <code>LICENSE_REJECTION_REASON_REFERENCED_DOCUMENT_MISSING = 4;</code>
     */
    public static final int LICENSE_REJECTION_REASON_REFERENCED_DOCUMENT_MISSING_VALUE = 4;
    /**
     * <code>LICENSE_REJECTION_REASON_WRONG_ADDRESSEE = 5;</code>
     */
    public static final int LICENSE_REJECTION_REASON_WRONG_ADDRESSEE_VALUE = 5;
    /**
     * <code>LICENSE_REJECTION_REASON_WORK_USED_MULTIPLE_TIMES = 6;</code>
     */
    public static final int LICENSE_REJECTION_REASON_WORK_USED_MULTIPLE_TIMES_VALUE = 6;
    /**
     * <code>LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_SCOPE_OF_LICENSE = 7;</code>
     */
    public static final int LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_SCOPE_OF_LICENSE_VALUE = 7;
    /**
     * <code>LICENSE_REJECTION_REASON_LICENSE_BLOCKED = 8;</code>
     */
    public static final int LICENSE_REJECTION_REASON_LICENSE_BLOCKED_VALUE = 8;
    /**
     * <code>LICENSE_REJECTION_REASON_USER_DEFINED = 9;</code>
     */
    public static final int LICENSE_REJECTION_REASON_USER_DEFINED_VALUE = 9;
    /**
     * <code>LICENSE_REJECTION_REASON_SHARE_SPLITS_DIFFER = 10;</code>
     */
    public static final int LICENSE_REJECTION_REASON_SHARE_SPLITS_DIFFER_VALUE = 10;
    /**
     * <code>LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_ROYALTIES = 11;</code>
     */
    public static final int LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_ROYALTIES_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LicenseRejectionReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LicenseRejectionReason forNumber(int value) {
      switch (value) {
        case 0: return LICENSE_REJECTION_REASON_DUPLICATE_LICENSE_REQUEST_NUMBER;
        case 1: return LICENSE_REJECTION_REASON_WORK_IN_PUBLIC_DOMAIN;
        case 2: return LICENSE_REJECTION_REASON_LICENSE_EXISTS;
        case 3: return LICENSE_REJECTION_REASON_LICENSE_NOT_NEEDED;
        case 4: return LICENSE_REJECTION_REASON_REFERENCED_DOCUMENT_MISSING;
        case 5: return LICENSE_REJECTION_REASON_WRONG_ADDRESSEE;
        case 6: return LICENSE_REJECTION_REASON_WORK_USED_MULTIPLE_TIMES;
        case 7: return LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_SCOPE_OF_LICENSE;
        case 8: return LICENSE_REJECTION_REASON_LICENSE_BLOCKED;
        case 9: return LICENSE_REJECTION_REASON_USER_DEFINED;
        case 10: return LICENSE_REJECTION_REASON_SHARE_SPLITS_DIFFER;
        case 11: return LICENSE_REJECTION_REASON_DISAGREEMENT_OVER_ROYALTIES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LicenseRejectionReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LicenseRejectionReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LicenseRejectionReason>() {
            public LicenseRejectionReason findValueByNumber(int number) {
              return LicenseRejectionReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(86);
    }

    private static final LicenseRejectionReason[] VALUES = values();

    public static LicenseRejectionReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LicenseRejectionReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LicenseRejectionReason)
  }

  /**
   * Protobuf enum {@code avs.LinkAcknowledgementStatus}
   */
  public enum LinkAcknowledgementStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LINK_ACKNOWLEDGEMENT_STATUS_CONFLICT = 0;</code>
     */
    LINK_ACKNOWLEDGEMENT_STATUS_CONFLICT(0),
    /**
     * <code>LINK_ACKNOWLEDGEMENT_STATUS_USER_DEFINED = 1;</code>
     */
    LINK_ACKNOWLEDGEMENT_STATUS_USER_DEFINED(1),
    /**
     * <code>LINK_ACKNOWLEDGEMENT_STATUS_ACCEPTED = 2;</code>
     */
    LINK_ACKNOWLEDGEMENT_STATUS_ACCEPTED(2),
    /**
     * <code>LINK_ACKNOWLEDGEMENT_STATUS_ACKNOWLEDGED = 3;</code>
     */
    LINK_ACKNOWLEDGEMENT_STATUS_ACKNOWLEDGED(3),
    ;

    /**
     * <code>LINK_ACKNOWLEDGEMENT_STATUS_CONFLICT = 0;</code>
     */
    public static final int LINK_ACKNOWLEDGEMENT_STATUS_CONFLICT_VALUE = 0;
    /**
     * <code>LINK_ACKNOWLEDGEMENT_STATUS_USER_DEFINED = 1;</code>
     */
    public static final int LINK_ACKNOWLEDGEMENT_STATUS_USER_DEFINED_VALUE = 1;
    /**
     * <code>LINK_ACKNOWLEDGEMENT_STATUS_ACCEPTED = 2;</code>
     */
    public static final int LINK_ACKNOWLEDGEMENT_STATUS_ACCEPTED_VALUE = 2;
    /**
     * <code>LINK_ACKNOWLEDGEMENT_STATUS_ACKNOWLEDGED = 3;</code>
     */
    public static final int LINK_ACKNOWLEDGEMENT_STATUS_ACKNOWLEDGED_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LinkAcknowledgementStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LinkAcknowledgementStatus forNumber(int value) {
      switch (value) {
        case 0: return LINK_ACKNOWLEDGEMENT_STATUS_CONFLICT;
        case 1: return LINK_ACKNOWLEDGEMENT_STATUS_USER_DEFINED;
        case 2: return LINK_ACKNOWLEDGEMENT_STATUS_ACCEPTED;
        case 3: return LINK_ACKNOWLEDGEMENT_STATUS_ACKNOWLEDGED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LinkAcknowledgementStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LinkAcknowledgementStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LinkAcknowledgementStatus>() {
            public LinkAcknowledgementStatus findValueByNumber(int number) {
              return LinkAcknowledgementStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(87);
    }

    private static final LinkAcknowledgementStatus[] VALUES = values();

    public static LinkAcknowledgementStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LinkAcknowledgementStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LinkAcknowledgementStatus)
  }

  /**
   * Protobuf enum {@code avs.LinkDescription}
   */
  public enum LinkDescription
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LINK_DESCRIPTION_VIDEO_SCREEN_CAPTURE = 0;</code>
     */
    LINK_DESCRIPTION_VIDEO_SCREEN_CAPTURE(0),
    /**
     * <code>LINK_DESCRIPTION_USER_DEFINED = 1;</code>
     */
    LINK_DESCRIPTION_USER_DEFINED(1),
    /**
     * <code>LINK_DESCRIPTION_COVER_ART = 2;</code>
     */
    LINK_DESCRIPTION_COVER_ART(2),
    ;

    /**
     * <code>LINK_DESCRIPTION_VIDEO_SCREEN_CAPTURE = 0;</code>
     */
    public static final int LINK_DESCRIPTION_VIDEO_SCREEN_CAPTURE_VALUE = 0;
    /**
     * <code>LINK_DESCRIPTION_USER_DEFINED = 1;</code>
     */
    public static final int LINK_DESCRIPTION_USER_DEFINED_VALUE = 1;
    /**
     * <code>LINK_DESCRIPTION_COVER_ART = 2;</code>
     */
    public static final int LINK_DESCRIPTION_COVER_ART_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LinkDescription valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LinkDescription forNumber(int value) {
      switch (value) {
        case 0: return LINK_DESCRIPTION_VIDEO_SCREEN_CAPTURE;
        case 1: return LINK_DESCRIPTION_USER_DEFINED;
        case 2: return LINK_DESCRIPTION_COVER_ART;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LinkDescription>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LinkDescription> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LinkDescription>() {
            public LinkDescription findValueByNumber(int number) {
              return LinkDescription.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(88);
    }

    private static final LinkDescription[] VALUES = values();

    public static LinkDescription valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LinkDescription(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LinkDescription)
  }

  /**
   * Protobuf enum {@code avs.LyricsType}
   */
  public enum LyricsType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LYRICS_TYPE_HOOK = 0;</code>
     */
    LYRICS_TYPE_HOOK(0),
    /**
     * <code>LYRICS_TYPE_CHORUS = 1;</code>
     */
    LYRICS_TYPE_CHORUS(1),
    /**
     * <code>LYRICS_TYPE_UNKNOWN = 2;</code>
     */
    LYRICS_TYPE_UNKNOWN(2),
    /**
     * <code>LYRICS_TYPE_COMPLETE = 3;</code>
     */
    LYRICS_TYPE_COMPLETE(3),
    /**
     * <code>LYRICS_TYPE_STANZA = 4;</code>
     */
    LYRICS_TYPE_STANZA(4),
    /**
     * <code>LYRICS_TYPE_JAZZ_SCATS = 5;</code>
     */
    LYRICS_TYPE_JAZZ_SCATS(5),
    /**
     * <code>LYRICS_TYPE_CHORUS_AND_VERSE = 6;</code>
     */
    LYRICS_TYPE_CHORUS_AND_VERSE(6),
    /**
     * <code>LYRICS_TYPE_USER_DEFINED = 7;</code>
     */
    LYRICS_TYPE_USER_DEFINED(7),
    /**
     * <code>LYRICS_TYPE_VERSE = 8;</code>
     */
    LYRICS_TYPE_VERSE(8),
    /**
     * <code>LYRICS_TYPE_FIRST_LINE_OF_TEXT = 9;</code>
     */
    LYRICS_TYPE_FIRST_LINE_OF_TEXT(9),
    ;

    /**
     * <code>LYRICS_TYPE_HOOK = 0;</code>
     */
    public static final int LYRICS_TYPE_HOOK_VALUE = 0;
    /**
     * <code>LYRICS_TYPE_CHORUS = 1;</code>
     */
    public static final int LYRICS_TYPE_CHORUS_VALUE = 1;
    /**
     * <code>LYRICS_TYPE_UNKNOWN = 2;</code>
     */
    public static final int LYRICS_TYPE_UNKNOWN_VALUE = 2;
    /**
     * <code>LYRICS_TYPE_COMPLETE = 3;</code>
     */
    public static final int LYRICS_TYPE_COMPLETE_VALUE = 3;
    /**
     * <code>LYRICS_TYPE_STANZA = 4;</code>
     */
    public static final int LYRICS_TYPE_STANZA_VALUE = 4;
    /**
     * <code>LYRICS_TYPE_JAZZ_SCATS = 5;</code>
     */
    public static final int LYRICS_TYPE_JAZZ_SCATS_VALUE = 5;
    /**
     * <code>LYRICS_TYPE_CHORUS_AND_VERSE = 6;</code>
     */
    public static final int LYRICS_TYPE_CHORUS_AND_VERSE_VALUE = 6;
    /**
     * <code>LYRICS_TYPE_USER_DEFINED = 7;</code>
     */
    public static final int LYRICS_TYPE_USER_DEFINED_VALUE = 7;
    /**
     * <code>LYRICS_TYPE_VERSE = 8;</code>
     */
    public static final int LYRICS_TYPE_VERSE_VALUE = 8;
    /**
     * <code>LYRICS_TYPE_FIRST_LINE_OF_TEXT = 9;</code>
     */
    public static final int LYRICS_TYPE_FIRST_LINE_OF_TEXT_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LyricsType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LyricsType forNumber(int value) {
      switch (value) {
        case 0: return LYRICS_TYPE_HOOK;
        case 1: return LYRICS_TYPE_CHORUS;
        case 2: return LYRICS_TYPE_UNKNOWN;
        case 3: return LYRICS_TYPE_COMPLETE;
        case 4: return LYRICS_TYPE_STANZA;
        case 5: return LYRICS_TYPE_JAZZ_SCATS;
        case 6: return LYRICS_TYPE_CHORUS_AND_VERSE;
        case 7: return LYRICS_TYPE_USER_DEFINED;
        case 8: return LYRICS_TYPE_VERSE;
        case 9: return LYRICS_TYPE_FIRST_LINE_OF_TEXT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LyricsType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LyricsType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LyricsType>() {
            public LyricsType findValueByNumber(int number) {
              return LyricsType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(89);
    }

    private static final LyricsType[] VALUES = values();

    public static LyricsType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LyricsType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.LyricsType)
  }

  /**
   * Protobuf enum {@code avs.MeasurementType}
   */
  public enum MeasurementType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MEASUREMENT_TYPE_VIDEO = 0;</code>
     */
    MEASUREMENT_TYPE_VIDEO(0),
    /**
     * <code>MEASUREMENT_TYPE_BOTH_AUDIO_AND_VIDEO = 1;</code>
     */
    MEASUREMENT_TYPE_BOTH_AUDIO_AND_VIDEO(1),
    /**
     * <code>MEASUREMENT_TYPE_AUDIO = 2;</code>
     */
    MEASUREMENT_TYPE_AUDIO(2),
    /**
     * <code>MEASUREMENT_TYPE_EITHER_AUDIO_OR_VIDEO = 3;</code>
     */
    MEASUREMENT_TYPE_EITHER_AUDIO_OR_VIDEO(3),
    ;

    /**
     * <code>MEASUREMENT_TYPE_VIDEO = 0;</code>
     */
    public static final int MEASUREMENT_TYPE_VIDEO_VALUE = 0;
    /**
     * <code>MEASUREMENT_TYPE_BOTH_AUDIO_AND_VIDEO = 1;</code>
     */
    public static final int MEASUREMENT_TYPE_BOTH_AUDIO_AND_VIDEO_VALUE = 1;
    /**
     * <code>MEASUREMENT_TYPE_AUDIO = 2;</code>
     */
    public static final int MEASUREMENT_TYPE_AUDIO_VALUE = 2;
    /**
     * <code>MEASUREMENT_TYPE_EITHER_AUDIO_OR_VIDEO = 3;</code>
     */
    public static final int MEASUREMENT_TYPE_EITHER_AUDIO_OR_VIDEO_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MeasurementType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MeasurementType forNumber(int value) {
      switch (value) {
        case 0: return MEASUREMENT_TYPE_VIDEO;
        case 1: return MEASUREMENT_TYPE_BOTH_AUDIO_AND_VIDEO;
        case 2: return MEASUREMENT_TYPE_AUDIO;
        case 3: return MEASUREMENT_TYPE_EITHER_AUDIO_OR_VIDEO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MeasurementType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MeasurementType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MeasurementType>() {
            public MeasurementType findValueByNumber(int number) {
              return MeasurementType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(90);
    }

    private static final MeasurementType[] VALUES = values();

    public static MeasurementType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MeasurementType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MeasurementType)
  }

  /**
   * Protobuf enum {@code avs.MembershipType}
   */
  public enum MembershipType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MEMBERSHIP_TYPE_NATIONAL_MEMBER = 0;</code>
     */
    MEMBERSHIP_TYPE_NATIONAL_MEMBER(0),
    /**
     * <code>MEMBERSHIP_TYPE_REGIONAL_MEMBER = 1;</code>
     */
    MEMBERSHIP_TYPE_REGIONAL_MEMBER(1),
    /**
     * <code>MEMBERSHIP_TYPE_WORLDWIDE_MEMBER = 2;</code>
     */
    MEMBERSHIP_TYPE_WORLDWIDE_MEMBER(2),
    ;

    /**
     * <code>MEMBERSHIP_TYPE_NATIONAL_MEMBER = 0;</code>
     */
    public static final int MEMBERSHIP_TYPE_NATIONAL_MEMBER_VALUE = 0;
    /**
     * <code>MEMBERSHIP_TYPE_REGIONAL_MEMBER = 1;</code>
     */
    public static final int MEMBERSHIP_TYPE_REGIONAL_MEMBER_VALUE = 1;
    /**
     * <code>MEMBERSHIP_TYPE_WORLDWIDE_MEMBER = 2;</code>
     */
    public static final int MEMBERSHIP_TYPE_WORLDWIDE_MEMBER_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MembershipType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MembershipType forNumber(int value) {
      switch (value) {
        case 0: return MEMBERSHIP_TYPE_NATIONAL_MEMBER;
        case 1: return MEMBERSHIP_TYPE_REGIONAL_MEMBER;
        case 2: return MEMBERSHIP_TYPE_WORLDWIDE_MEMBER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MembershipType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MembershipType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MembershipType>() {
            public MembershipType findValueByNumber(int number) {
              return MembershipType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(91);
    }

    private static final MembershipType[] VALUES = values();

    public static MembershipType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MembershipType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MembershipType)
  }

  /**
   * Protobuf enum {@code avs.MessageActionType}
   */
  public enum MessageActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MESSAGE_ACTION_TYPE_RE_DELIVERY = 0;</code>
     */
    MESSAGE_ACTION_TYPE_RE_DELIVERY(0),
    /**
     * <code>MESSAGE_ACTION_TYPE_BACK_CATALOG_DELIVERY = 1;</code>
     */
    MESSAGE_ACTION_TYPE_BACK_CATALOG_DELIVERY(1),
    /**
     * <code>MESSAGE_ACTION_TYPE_NEW_RELEASE_DELIVERY = 2;</code>
     */
    MESSAGE_ACTION_TYPE_NEW_RELEASE_DELIVERY(2),
    /**
     * <code>MESSAGE_ACTION_TYPE_TAKE_DOWN = 3;</code>
     */
    MESSAGE_ACTION_TYPE_TAKE_DOWN(3),
    /**
     * <code>MESSAGE_ACTION_TYPE_USER_DEFINED = 4;</code>
     */
    MESSAGE_ACTION_TYPE_USER_DEFINED(4),
    /**
     * <code>MESSAGE_ACTION_TYPE_HIGH_PRIORITY_DELIVERY = 5;</code>
     */
    MESSAGE_ACTION_TYPE_HIGH_PRIORITY_DELIVERY(5),
    ;

    /**
     * <code>MESSAGE_ACTION_TYPE_RE_DELIVERY = 0;</code>
     */
    public static final int MESSAGE_ACTION_TYPE_RE_DELIVERY_VALUE = 0;
    /**
     * <code>MESSAGE_ACTION_TYPE_BACK_CATALOG_DELIVERY = 1;</code>
     */
    public static final int MESSAGE_ACTION_TYPE_BACK_CATALOG_DELIVERY_VALUE = 1;
    /**
     * <code>MESSAGE_ACTION_TYPE_NEW_RELEASE_DELIVERY = 2;</code>
     */
    public static final int MESSAGE_ACTION_TYPE_NEW_RELEASE_DELIVERY_VALUE = 2;
    /**
     * <code>MESSAGE_ACTION_TYPE_TAKE_DOWN = 3;</code>
     */
    public static final int MESSAGE_ACTION_TYPE_TAKE_DOWN_VALUE = 3;
    /**
     * <code>MESSAGE_ACTION_TYPE_USER_DEFINED = 4;</code>
     */
    public static final int MESSAGE_ACTION_TYPE_USER_DEFINED_VALUE = 4;
    /**
     * <code>MESSAGE_ACTION_TYPE_HIGH_PRIORITY_DELIVERY = 5;</code>
     */
    public static final int MESSAGE_ACTION_TYPE_HIGH_PRIORITY_DELIVERY_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageActionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessageActionType forNumber(int value) {
      switch (value) {
        case 0: return MESSAGE_ACTION_TYPE_RE_DELIVERY;
        case 1: return MESSAGE_ACTION_TYPE_BACK_CATALOG_DELIVERY;
        case 2: return MESSAGE_ACTION_TYPE_NEW_RELEASE_DELIVERY;
        case 3: return MESSAGE_ACTION_TYPE_TAKE_DOWN;
        case 4: return MESSAGE_ACTION_TYPE_USER_DEFINED;
        case 5: return MESSAGE_ACTION_TYPE_HIGH_PRIORITY_DELIVERY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageActionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageActionType>() {
            public MessageActionType findValueByNumber(int number) {
              return MessageActionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(92);
    }

    private static final MessageActionType[] VALUES = values();

    public static MessageActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageActionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MessageActionType)
  }

  /**
   * Protobuf enum {@code avs.MessageControlType}
   */
  public enum MessageControlType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MESSAGE_CONTROL_TYPE_LIVE_MESSAGE = 0;</code>
     */
    MESSAGE_CONTROL_TYPE_LIVE_MESSAGE(0),
    /**
     * <code>MESSAGE_CONTROL_TYPE_TEST_MESSAGE = 1;</code>
     */
    MESSAGE_CONTROL_TYPE_TEST_MESSAGE(1),
    ;

    /**
     * <code>MESSAGE_CONTROL_TYPE_LIVE_MESSAGE = 0;</code>
     */
    public static final int MESSAGE_CONTROL_TYPE_LIVE_MESSAGE_VALUE = 0;
    /**
     * <code>MESSAGE_CONTROL_TYPE_TEST_MESSAGE = 1;</code>
     */
    public static final int MESSAGE_CONTROL_TYPE_TEST_MESSAGE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageControlType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessageControlType forNumber(int value) {
      switch (value) {
        case 0: return MESSAGE_CONTROL_TYPE_LIVE_MESSAGE;
        case 1: return MESSAGE_CONTROL_TYPE_TEST_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageControlType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageControlType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageControlType>() {
            public MessageControlType findValueByNumber(int number) {
              return MessageControlType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(93);
    }

    private static final MessageControlType[] VALUES = values();

    public static MessageControlType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageControlType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MessageControlType)
  }

  /**
   * Protobuf enum {@code avs.MessagePurpose}
   */
  public enum MessagePurpose
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MESSAGE_PURPOSE_ACKNOWLEDGEMENT = 0;</code>
     */
    MESSAGE_PURPOSE_ACKNOWLEDGEMENT(0),
    /**
     * <code>MESSAGE_PURPOSE_LICENSE = 1;</code>
     */
    MESSAGE_PURPOSE_LICENSE(1),
    /**
     * <code>MESSAGE_PURPOSE_NDMA_LICENSE = 2;</code>
     */
    MESSAGE_PURPOSE_NDMA_LICENSE(2),
    ;

    /**
     * <code>MESSAGE_PURPOSE_ACKNOWLEDGEMENT = 0;</code>
     */
    public static final int MESSAGE_PURPOSE_ACKNOWLEDGEMENT_VALUE = 0;
    /**
     * <code>MESSAGE_PURPOSE_LICENSE = 1;</code>
     */
    public static final int MESSAGE_PURPOSE_LICENSE_VALUE = 1;
    /**
     * <code>MESSAGE_PURPOSE_NDMA_LICENSE = 2;</code>
     */
    public static final int MESSAGE_PURPOSE_NDMA_LICENSE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessagePurpose valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessagePurpose forNumber(int value) {
      switch (value) {
        case 0: return MESSAGE_PURPOSE_ACKNOWLEDGEMENT;
        case 1: return MESSAGE_PURPOSE_LICENSE;
        case 2: return MESSAGE_PURPOSE_NDMA_LICENSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessagePurpose>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessagePurpose> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessagePurpose>() {
            public MessagePurpose findValueByNumber(int number) {
              return MessagePurpose.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(94);
    }

    private static final MessagePurpose[] VALUES = values();

    public static MessagePurpose valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessagePurpose(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MessagePurpose)
  }

  /**
   * Protobuf enum {@code avs.MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MESSAGE_TYPE_MUSICAL_WORK_CLAIM_REQUEST_MESSAGE = 0;</code>
     */
    MESSAGE_TYPE_MUSICAL_WORK_CLAIM_REQUEST_MESSAGE(0),
    /**
     * <code>MESSAGE_TYPE_MUSICAL_WORK_CLAIM_NOTIFICATION_MESSAGE = 1;</code>
     */
    MESSAGE_TYPE_MUSICAL_WORK_CLAIM_NOTIFICATION_MESSAGE(1),
    /**
     * <code>MESSAGE_TYPE_LO_D_CONFIRMATION_MESSAGE = 2;</code>
     */
    MESSAGE_TYPE_LO_D_CONFIRMATION_MESSAGE(2),
    /**
     * <code>MESSAGE_TYPE_LICENSE_REVOCATION_MESSAGE = 3;</code>
     */
    MESSAGE_TYPE_LICENSE_REVOCATION_MESSAGE(3),
    /**
     * <code>MESSAGE_TYPE_LICENSE_REQUEST_MESSAGE = 4;</code>
     */
    MESSAGE_TYPE_LICENSE_REQUEST_MESSAGE(4),
    /**
     * <code>MESSAGE_TYPE_LO_D_MESSAGE = 5;</code>
     */
    MESSAGE_TYPE_LO_D_MESSAGE(5),
    /**
     * <code>MESSAGE_TYPE_LICENSE_MESSAGE = 6;</code>
     */
    MESSAGE_TYPE_LICENSE_MESSAGE(6),
    ;

    /**
     * <code>MESSAGE_TYPE_MUSICAL_WORK_CLAIM_REQUEST_MESSAGE = 0;</code>
     */
    public static final int MESSAGE_TYPE_MUSICAL_WORK_CLAIM_REQUEST_MESSAGE_VALUE = 0;
    /**
     * <code>MESSAGE_TYPE_MUSICAL_WORK_CLAIM_NOTIFICATION_MESSAGE = 1;</code>
     */
    public static final int MESSAGE_TYPE_MUSICAL_WORK_CLAIM_NOTIFICATION_MESSAGE_VALUE = 1;
    /**
     * <code>MESSAGE_TYPE_LO_D_CONFIRMATION_MESSAGE = 2;</code>
     */
    public static final int MESSAGE_TYPE_LO_D_CONFIRMATION_MESSAGE_VALUE = 2;
    /**
     * <code>MESSAGE_TYPE_LICENSE_REVOCATION_MESSAGE = 3;</code>
     */
    public static final int MESSAGE_TYPE_LICENSE_REVOCATION_MESSAGE_VALUE = 3;
    /**
     * <code>MESSAGE_TYPE_LICENSE_REQUEST_MESSAGE = 4;</code>
     */
    public static final int MESSAGE_TYPE_LICENSE_REQUEST_MESSAGE_VALUE = 4;
    /**
     * <code>MESSAGE_TYPE_LO_D_MESSAGE = 5;</code>
     */
    public static final int MESSAGE_TYPE_LO_D_MESSAGE_VALUE = 5;
    /**
     * <code>MESSAGE_TYPE_LICENSE_MESSAGE = 6;</code>
     */
    public static final int MESSAGE_TYPE_LICENSE_MESSAGE_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return MESSAGE_TYPE_MUSICAL_WORK_CLAIM_REQUEST_MESSAGE;
        case 1: return MESSAGE_TYPE_MUSICAL_WORK_CLAIM_NOTIFICATION_MESSAGE;
        case 2: return MESSAGE_TYPE_LO_D_CONFIRMATION_MESSAGE;
        case 3: return MESSAGE_TYPE_LICENSE_REVOCATION_MESSAGE;
        case 4: return MESSAGE_TYPE_LICENSE_REQUEST_MESSAGE;
        case 5: return MESSAGE_TYPE_LO_D_MESSAGE;
        case 6: return MESSAGE_TYPE_LICENSE_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(95);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MessageType)
  }

  /**
   * Protobuf enum {@code avs.MetadataSourceType}
   */
  public enum MetadataSourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>METADATA_SOURCE_TYPE_METADATA_PROVIDER = 0;</code>
     */
    METADATA_SOURCE_TYPE_METADATA_PROVIDER(0),
    /**
     * <code>METADATA_SOURCE_TYPE_JOURNALIST = 1;</code>
     */
    METADATA_SOURCE_TYPE_JOURNALIST(1),
    /**
     * <code>METADATA_SOURCE_TYPE_RIGHTS_CONTROLLER = 2;</code>
     */
    METADATA_SOURCE_TYPE_RIGHTS_CONTROLLER(2),
    /**
     * <code>METADATA_SOURCE_TYPE_USER_DEFINED = 3;</code>
     */
    METADATA_SOURCE_TYPE_USER_DEFINED(3),
    ;

    /**
     * <code>METADATA_SOURCE_TYPE_METADATA_PROVIDER = 0;</code>
     */
    public static final int METADATA_SOURCE_TYPE_METADATA_PROVIDER_VALUE = 0;
    /**
     * <code>METADATA_SOURCE_TYPE_JOURNALIST = 1;</code>
     */
    public static final int METADATA_SOURCE_TYPE_JOURNALIST_VALUE = 1;
    /**
     * <code>METADATA_SOURCE_TYPE_RIGHTS_CONTROLLER = 2;</code>
     */
    public static final int METADATA_SOURCE_TYPE_RIGHTS_CONTROLLER_VALUE = 2;
    /**
     * <code>METADATA_SOURCE_TYPE_USER_DEFINED = 3;</code>
     */
    public static final int METADATA_SOURCE_TYPE_USER_DEFINED_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MetadataSourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MetadataSourceType forNumber(int value) {
      switch (value) {
        case 0: return METADATA_SOURCE_TYPE_METADATA_PROVIDER;
        case 1: return METADATA_SOURCE_TYPE_JOURNALIST;
        case 2: return METADATA_SOURCE_TYPE_RIGHTS_CONTROLLER;
        case 3: return METADATA_SOURCE_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MetadataSourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MetadataSourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MetadataSourceType>() {
            public MetadataSourceType findValueByNumber(int number) {
              return MetadataSourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(96);
    }

    private static final MetadataSourceType[] VALUES = values();

    public static MetadataSourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MetadataSourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MetadataSourceType)
  }

  /**
   * Protobuf enum {@code avs.MissingLinkReason}
   */
  public enum MissingLinkReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MISSING_LINK_REASON_NO_LINK_FOUND = 0;</code>
     */
    MISSING_LINK_REASON_NO_LINK_FOUND(0),
    /**
     * <code>MISSING_LINK_REASON_NO_MATCH_FOUND = 1;</code>
     */
    MISSING_LINK_REASON_NO_MATCH_FOUND(1),
    /**
     * <code>MISSING_LINK_REASON_USER_DEFINED = 2;</code>
     */
    MISSING_LINK_REASON_USER_DEFINED(2),
    ;

    /**
     * <code>MISSING_LINK_REASON_NO_LINK_FOUND = 0;</code>
     */
    public static final int MISSING_LINK_REASON_NO_LINK_FOUND_VALUE = 0;
    /**
     * <code>MISSING_LINK_REASON_NO_MATCH_FOUND = 1;</code>
     */
    public static final int MISSING_LINK_REASON_NO_MATCH_FOUND_VALUE = 1;
    /**
     * <code>MISSING_LINK_REASON_USER_DEFINED = 2;</code>
     */
    public static final int MISSING_LINK_REASON_USER_DEFINED_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MissingLinkReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MissingLinkReason forNumber(int value) {
      switch (value) {
        case 0: return MISSING_LINK_REASON_NO_LINK_FOUND;
        case 1: return MISSING_LINK_REASON_NO_MATCH_FOUND;
        case 2: return MISSING_LINK_REASON_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MissingLinkReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MissingLinkReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MissingLinkReason>() {
            public MissingLinkReason findValueByNumber(int number) {
              return MissingLinkReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(97);
    }

    private static final MissingLinkReason[] VALUES = values();

    public static MissingLinkReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MissingLinkReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MissingLinkReason)
  }

  /**
   * Protobuf enum {@code avs.Mode}
   */
  public enum Mode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MODE_USER_DEFINED = 0;</code>
     */
    MODE_USER_DEFINED(0),
    ;

    /**
     * <code>MODE_USER_DEFINED = 0;</code>
     */
    public static final int MODE_USER_DEFINED_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Mode forNumber(int value) {
      switch (value) {
        case 0: return MODE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Mode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
            public Mode findValueByNumber(int number) {
              return Mode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(98);
    }

    private static final Mode[] VALUES = values();

    public static Mode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Mode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Mode)
  }

  /**
   * Protobuf enum {@code avs.Mood}
   */
  public enum Mood
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MOOD_ANGRY = 0;</code>
     */
    MOOD_ANGRY(0),
    /**
     * <code>MOOD_MELLOW = 1;</code>
     */
    MOOD_MELLOW(1),
    /**
     * <code>MOOD_LOW_KEY = 2;</code>
     */
    MOOD_LOW_KEY(2),
    /**
     * <code>MOOD_ANTICIPATION = 3;</code>
     */
    MOOD_ANTICIPATION(3),
    /**
     * <code>MOOD_FEELING_GOOD = 4;</code>
     */
    MOOD_FEELING_GOOD(4),
    /**
     * <code>MOOD_CONFIDENT = 5;</code>
     */
    MOOD_CONFIDENT(5),
    /**
     * <code>MOOD_EVIL = 6;</code>
     */
    MOOD_EVIL(6),
    /**
     * <code>MOOD_MOTIVATED = 7;</code>
     */
    MOOD_MOTIVATED(7),
    /**
     * <code>MOOD_SWAGGER = 8;</code>
     */
    MOOD_SWAGGER(8),
    /**
     * <code>MOOD_HUNGOVER = 9;</code>
     */
    MOOD_HUNGOVER(9),
    /**
     * <code>MOOD_RAINY_DAY = 10;</code>
     */
    MOOD_RAINY_DAY(10),
    /**
     * <code>MOOD_USER_DEFINED = 11;</code>
     */
    MOOD_USER_DEFINED(11),
    /**
     * <code>MOOD_DISGUST = 12;</code>
     */
    MOOD_DISGUST(12),
    /**
     * <code>MOOD_HAPPY = 13;</code>
     */
    MOOD_HAPPY(13),
    /**
     * <code>MOOD_CHILL = 14;</code>
     */
    MOOD_CHILL(14),
    /**
     * <code>MOOD_SURPRISE = 15;</code>
     */
    MOOD_SURPRISE(15),
    /**
     * <code>MOOD_DRAMATIC = 16;</code>
     */
    MOOD_DRAMATIC(16),
    /**
     * <code>MOOD_FREE = 17;</code>
     */
    MOOD_FREE(17),
    /**
     * <code>MOOD_EMPOWERED = 18;</code>
     */
    MOOD_EMPOWERED(18),
    /**
     * <code>MOOD_FEELING_DOWN = 19;</code>
     */
    MOOD_FEELING_DOWN(19),
    /**
     * <code>MOOD_ENERGIZED = 20;</code>
     */
    MOOD_ENERGIZED(20),
    /**
     * <code>MOOD_ROMANTIC = 21;</code>
     */
    MOOD_ROMANTIC(21),
    /**
     * <code>MOOD_PEACEFUL = 22;</code>
     */
    MOOD_PEACEFUL(22),
    /**
     * <code>MOOD_DARK = 23;</code>
     */
    MOOD_DARK(23),
    /**
     * <code>MOOD_SAD = 24;</code>
     */
    MOOD_SAD(24),
    /**
     * <code>MOOD_QUIET = 25;</code>
     */
    MOOD_QUIET(25),
    /**
     * <code>MOOD_SOULFUL = 26;</code>
     */
    MOOD_SOULFUL(26),
    /**
     * <code>MOOD_INSPIRING = 27;</code>
     */
    MOOD_INSPIRING(27),
    ;

    /**
     * <code>MOOD_ANGRY = 0;</code>
     */
    public static final int MOOD_ANGRY_VALUE = 0;
    /**
     * <code>MOOD_MELLOW = 1;</code>
     */
    public static final int MOOD_MELLOW_VALUE = 1;
    /**
     * <code>MOOD_LOW_KEY = 2;</code>
     */
    public static final int MOOD_LOW_KEY_VALUE = 2;
    /**
     * <code>MOOD_ANTICIPATION = 3;</code>
     */
    public static final int MOOD_ANTICIPATION_VALUE = 3;
    /**
     * <code>MOOD_FEELING_GOOD = 4;</code>
     */
    public static final int MOOD_FEELING_GOOD_VALUE = 4;
    /**
     * <code>MOOD_CONFIDENT = 5;</code>
     */
    public static final int MOOD_CONFIDENT_VALUE = 5;
    /**
     * <code>MOOD_EVIL = 6;</code>
     */
    public static final int MOOD_EVIL_VALUE = 6;
    /**
     * <code>MOOD_MOTIVATED = 7;</code>
     */
    public static final int MOOD_MOTIVATED_VALUE = 7;
    /**
     * <code>MOOD_SWAGGER = 8;</code>
     */
    public static final int MOOD_SWAGGER_VALUE = 8;
    /**
     * <code>MOOD_HUNGOVER = 9;</code>
     */
    public static final int MOOD_HUNGOVER_VALUE = 9;
    /**
     * <code>MOOD_RAINY_DAY = 10;</code>
     */
    public static final int MOOD_RAINY_DAY_VALUE = 10;
    /**
     * <code>MOOD_USER_DEFINED = 11;</code>
     */
    public static final int MOOD_USER_DEFINED_VALUE = 11;
    /**
     * <code>MOOD_DISGUST = 12;</code>
     */
    public static final int MOOD_DISGUST_VALUE = 12;
    /**
     * <code>MOOD_HAPPY = 13;</code>
     */
    public static final int MOOD_HAPPY_VALUE = 13;
    /**
     * <code>MOOD_CHILL = 14;</code>
     */
    public static final int MOOD_CHILL_VALUE = 14;
    /**
     * <code>MOOD_SURPRISE = 15;</code>
     */
    public static final int MOOD_SURPRISE_VALUE = 15;
    /**
     * <code>MOOD_DRAMATIC = 16;</code>
     */
    public static final int MOOD_DRAMATIC_VALUE = 16;
    /**
     * <code>MOOD_FREE = 17;</code>
     */
    public static final int MOOD_FREE_VALUE = 17;
    /**
     * <code>MOOD_EMPOWERED = 18;</code>
     */
    public static final int MOOD_EMPOWERED_VALUE = 18;
    /**
     * <code>MOOD_FEELING_DOWN = 19;</code>
     */
    public static final int MOOD_FEELING_DOWN_VALUE = 19;
    /**
     * <code>MOOD_ENERGIZED = 20;</code>
     */
    public static final int MOOD_ENERGIZED_VALUE = 20;
    /**
     * <code>MOOD_ROMANTIC = 21;</code>
     */
    public static final int MOOD_ROMANTIC_VALUE = 21;
    /**
     * <code>MOOD_PEACEFUL = 22;</code>
     */
    public static final int MOOD_PEACEFUL_VALUE = 22;
    /**
     * <code>MOOD_DARK = 23;</code>
     */
    public static final int MOOD_DARK_VALUE = 23;
    /**
     * <code>MOOD_SAD = 24;</code>
     */
    public static final int MOOD_SAD_VALUE = 24;
    /**
     * <code>MOOD_QUIET = 25;</code>
     */
    public static final int MOOD_QUIET_VALUE = 25;
    /**
     * <code>MOOD_SOULFUL = 26;</code>
     */
    public static final int MOOD_SOULFUL_VALUE = 26;
    /**
     * <code>MOOD_INSPIRING = 27;</code>
     */
    public static final int MOOD_INSPIRING_VALUE = 27;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Mood valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Mood forNumber(int value) {
      switch (value) {
        case 0: return MOOD_ANGRY;
        case 1: return MOOD_MELLOW;
        case 2: return MOOD_LOW_KEY;
        case 3: return MOOD_ANTICIPATION;
        case 4: return MOOD_FEELING_GOOD;
        case 5: return MOOD_CONFIDENT;
        case 6: return MOOD_EVIL;
        case 7: return MOOD_MOTIVATED;
        case 8: return MOOD_SWAGGER;
        case 9: return MOOD_HUNGOVER;
        case 10: return MOOD_RAINY_DAY;
        case 11: return MOOD_USER_DEFINED;
        case 12: return MOOD_DISGUST;
        case 13: return MOOD_HAPPY;
        case 14: return MOOD_CHILL;
        case 15: return MOOD_SURPRISE;
        case 16: return MOOD_DRAMATIC;
        case 17: return MOOD_FREE;
        case 18: return MOOD_EMPOWERED;
        case 19: return MOOD_FEELING_DOWN;
        case 20: return MOOD_ENERGIZED;
        case 21: return MOOD_ROMANTIC;
        case 22: return MOOD_PEACEFUL;
        case 23: return MOOD_DARK;
        case 24: return MOOD_SAD;
        case 25: return MOOD_QUIET;
        case 26: return MOOD_SOULFUL;
        case 27: return MOOD_INSPIRING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Mood>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Mood> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Mood>() {
            public Mood findValueByNumber(int number) {
              return Mood.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(99);
    }

    private static final Mood[] VALUES = values();

    public static Mood valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Mood(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Mood)
  }

  /**
   * Protobuf enum {@code avs.MoodOrThemeType}
   */
  public enum MoodOrThemeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MOOD_OR_THEME_TYPE_LYRICS_AND_MELODY = 0;</code>
     */
    MOOD_OR_THEME_TYPE_LYRICS_AND_MELODY(0),
    /**
     * <code>MOOD_OR_THEME_TYPE_MELODY = 1;</code>
     */
    MOOD_OR_THEME_TYPE_MELODY(1),
    /**
     * <code>MOOD_OR_THEME_TYPE_LYRICS = 2;</code>
     */
    MOOD_OR_THEME_TYPE_LYRICS(2),
    ;

    /**
     * <code>MOOD_OR_THEME_TYPE_LYRICS_AND_MELODY = 0;</code>
     */
    public static final int MOOD_OR_THEME_TYPE_LYRICS_AND_MELODY_VALUE = 0;
    /**
     * <code>MOOD_OR_THEME_TYPE_MELODY = 1;</code>
     */
    public static final int MOOD_OR_THEME_TYPE_MELODY_VALUE = 1;
    /**
     * <code>MOOD_OR_THEME_TYPE_LYRICS = 2;</code>
     */
    public static final int MOOD_OR_THEME_TYPE_LYRICS_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MoodOrThemeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MoodOrThemeType forNumber(int value) {
      switch (value) {
        case 0: return MOOD_OR_THEME_TYPE_LYRICS_AND_MELODY;
        case 1: return MOOD_OR_THEME_TYPE_MELODY;
        case 2: return MOOD_OR_THEME_TYPE_LYRICS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MoodOrThemeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MoodOrThemeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MoodOrThemeType>() {
            public MoodOrThemeType findValueByNumber(int number) {
              return MoodOrThemeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(100);
    }

    private static final MoodOrThemeType[] VALUES = values();

    public static MoodOrThemeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MoodOrThemeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MoodOrThemeType)
  }

  /**
   * Protobuf enum {@code avs.MusicalWorkContributorRole}
   */
  public enum MusicalWorkContributorRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR = 0;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR(0),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER = 1;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER(1),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR = 2;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR(2),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST = 3;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST(3),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL = 4;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL(4),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT = 5;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT(5),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER = 6;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER(6),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST = 7;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST(7),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR = 8;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR(8),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER = 9;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER(9),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR = 10;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR(10),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER = 11;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER(11),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER = 12;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER(12),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER = 13;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER(13),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER = 14;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER(14),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN = 15;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN(15),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER = 16;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER(16),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER = 17;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER(17),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR = 18;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR(18),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT = 19;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT(19),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST = 20;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST(20),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST = 21;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST(21),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT = 22;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT(22),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS = 23;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS(23),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED = 24;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED(24),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR = 25;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR(25),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER = 26;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER(26),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER = 27;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER(27),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER = 28;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER(28),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER = 29;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER(29),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER = 30;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER(30),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER = 31;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER(31),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT = 32;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT(32),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER = 33;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER(33),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER = 34;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER(34),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER = 35;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER(35),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER = 36;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER(36),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER = 37;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER(37),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER = 38;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER(38),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER = 39;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER(39),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT = 40;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT(40),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD = 41;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD(41),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR = 42;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR(42),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR = 43;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR(43),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR = 44;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR(44),
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST = 45;</code>
     */
    MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST(45),
    ;

    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR = 0;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR_VALUE = 0;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER = 1;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER_VALUE = 1;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR = 2;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR_VALUE = 2;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST = 3;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST_VALUE = 3;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL = 4;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL_VALUE = 4;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT = 5;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT_VALUE = 5;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER = 6;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER_VALUE = 6;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST = 7;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST_VALUE = 7;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR = 8;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR_VALUE = 8;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER = 9;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER_VALUE = 9;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR = 10;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR_VALUE = 10;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER = 11;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER_VALUE = 11;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER = 12;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER_VALUE = 12;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER = 13;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER_VALUE = 13;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER = 14;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER_VALUE = 14;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN = 15;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN_VALUE = 15;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER = 16;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER_VALUE = 16;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER = 17;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER_VALUE = 17;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR = 18;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR_VALUE = 18;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT = 19;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT_VALUE = 19;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST = 20;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST_VALUE = 20;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST = 21;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST_VALUE = 21;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT = 22;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT_VALUE = 22;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS = 23;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS_VALUE = 23;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED = 24;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED_VALUE = 24;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR = 25;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR_VALUE = 25;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER = 26;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER_VALUE = 26;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER = 27;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER_VALUE = 27;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER = 28;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_VALUE = 28;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER = 29;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER_VALUE = 29;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER = 30;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER_VALUE = 30;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER = 31;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER_VALUE = 31;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT = 32;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT_VALUE = 32;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER = 33;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER_VALUE = 33;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER = 34;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER_VALUE = 34;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER = 35;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER_VALUE = 35;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER = 36;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER_VALUE = 36;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER = 37;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER_VALUE = 37;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER = 38;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER_VALUE = 38;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER = 39;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER_VALUE = 39;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT = 40;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT_VALUE = 40;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD = 41;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD_VALUE = 41;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR = 42;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR_VALUE = 42;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR = 43;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR_VALUE = 43;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR = 44;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_VALUE = 44;
    /**
     * <code>MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST = 45;</code>
     */
    public static final int MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST_VALUE = 45;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MusicalWorkContributorRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MusicalWorkContributorRole forNumber(int value) {
      switch (value) {
        case 0: return MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR;
        case 1: return MUSICAL_WORK_CONTRIBUTOR_ROLE_ENGRAVER;
        case 2: return MUSICAL_WORK_CONTRIBUTOR_ROLE_SCREENPLAY_AUTHOR;
        case 3: return MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST;
        case 4: return MUSICAL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOMPANYING_MATERIAL;
        case 5: return MUSICAL_WORK_CONTRIBUTOR_ROLE_LANDSCAPE_ARCHITECT;
        case 6: return MUSICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBLISHER;
        case 7: return MUSICAL_WORK_CONTRIBUTOR_ROLE_JOURNALIST;
        case 8: return MUSICAL_WORK_CONTRIBUTOR_ROLE_CONCEPTOR;
        case 9: return MUSICAL_WORK_CONTRIBUTOR_ROLE_ADAPTER;
        case 10: return MUSICAL_WORK_CONTRIBUTOR_ROLE_CREATOR;
        case 11: return MUSICAL_WORK_CONTRIBUTOR_ROLE_LITHOGRAPHER;
        case 12: return MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER;
        case 13: return MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_ENGRAVER;
        case 14: return MUSICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISHER;
        case 15: return MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN;
        case 16: return MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_ENGRAVER;
        case 17: return MUSICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER;
        case 18: return MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR;
        case 19: return MUSICAL_WORK_CONTRIBUTOR_ROLE_DISSERTANT;
        case 20: return MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_LYRICIST;
        case 21: return MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER_LYRICIST;
        case 22: return MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLAIMANT;
        case 23: return MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS;
        case 24: return MUSICAL_WORK_CONTRIBUTOR_ROLE_USER_DEFINED;
        case 25: return MUSICAL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR;
        case 26: return MUSICAL_WORK_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER;
        case 27: return MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPILER;
        case 28: return MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPOSER;
        case 29: return MUSICAL_WORK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER;
        case 30: return MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRANGER;
        case 31: return MUSICAL_WORK_CONTRIBUTOR_ROLE_WOODCUTTER;
        case 32: return MUSICAL_WORK_CONTRIBUTOR_ROLE_PLAYWRIGHT;
        case 33: return MUSICAL_WORK_CONTRIBUTOR_ROLE_REPORTER;
        case 34: return MUSICAL_WORK_CONTRIBUTOR_ROLE_MUSIC_PUBLISHER;
        case 35: return MUSICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER;
        case 36: return MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER;
        case 37: return MUSICAL_WORK_CONTRIBUTOR_ROLE_SUBSTITUTED_PUBLISHER;
        case 38: return MUSICAL_WORK_CONTRIBUTOR_ROLE_REVIEWER;
        case 39: return MUSICAL_WORK_CONTRIBUTOR_ROLE_ETCHER;
        case 40: return MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT;
        case 41: return MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR_OF_AFTERWORD;
        case 42: return MUSICAL_WORK_CONTRIBUTOR_ROLE_SCULPTOR;
        case 43: return MUSICAL_WORK_CONTRIBUTOR_ROLE_RUBRICATOR;
        case 44: return MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHOR;
        case 45: return MUSICAL_WORK_CONTRIBUTOR_ROLE_LIBRETTIST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MusicalWorkContributorRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MusicalWorkContributorRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MusicalWorkContributorRole>() {
            public MusicalWorkContributorRole findValueByNumber(int number) {
              return MusicalWorkContributorRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(101);
    }

    private static final MusicalWorkContributorRole[] VALUES = values();

    public static MusicalWorkContributorRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MusicalWorkContributorRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MusicalWorkContributorRole)
  }

  /**
   * Protobuf enum {@code avs.MusicalWorkType}
   */
  public enum MusicalWorkType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MUSICAL_WORK_TYPE_POTPOURRI = 0;</code>
     */
    MUSICAL_WORK_TYPE_POTPOURRI(0),
    /**
     * <code>MUSICAL_WORK_TYPE_PRODUCTION_MUSIC_LIBRARY_WORK = 1;</code>
     */
    MUSICAL_WORK_TYPE_PRODUCTION_MUSIC_LIBRARY_WORK(1),
    /**
     * <code>MUSICAL_WORK_TYPE_LYRIC_REPLACEMENT = 2;</code>
     */
    MUSICAL_WORK_TYPE_LYRIC_REPLACEMENT(2),
    /**
     * <code>MUSICAL_WORK_TYPE_ADAPTED_WITH_NEW_LYRICS = 3;</code>
     */
    MUSICAL_WORK_TYPE_ADAPTED_WITH_NEW_LYRICS(3),
    /**
     * <code>MUSICAL_WORK_TYPE_MUSICAL_WORK_MOVEMENT = 4;</code>
     */
    MUSICAL_WORK_TYPE_MUSICAL_WORK_MOVEMENT(4),
    /**
     * <code>MUSICAL_WORK_TYPE_TV_PRODUCTION_WORK = 5;</code>
     */
    MUSICAL_WORK_TYPE_TV_PRODUCTION_WORK(5),
    /**
     * <code>MUSICAL_WORK_TYPE_LYRIC_REMOVAL = 6;</code>
     */
    MUSICAL_WORK_TYPE_LYRIC_REMOVAL(6),
    /**
     * <code>MUSICAL_WORK_TYPE_MUSICAL_WORK_WITH_SAMPLES = 7;</code>
     */
    MUSICAL_WORK_TYPE_MUSICAL_WORK_WITH_SAMPLES(7),
    /**
     * <code>MUSICAL_WORK_TYPE_UNKNOWN = 8;</code>
     */
    MUSICAL_WORK_TYPE_UNKNOWN(8),
    /**
     * <code>MUSICAL_WORK_TYPE_MASHUP = 9;</code>
     */
    MUSICAL_WORK_TYPE_MASHUP(9),
    /**
     * <code>MUSICAL_WORK_TYPE_DRAMATICO_MUSICAL_WORK = 10;</code>
     */
    MUSICAL_WORK_TYPE_DRAMATICO_MUSICAL_WORK(10),
    /**
     * <code>MUSICAL_WORK_TYPE_MEDLEY = 11;</code>
     */
    MUSICAL_WORK_TYPE_MEDLEY(11),
    /**
     * <code>MUSICAL_WORK_TYPE_LYRIC_TRANSLATION = 12;</code>
     */
    MUSICAL_WORK_TYPE_LYRIC_TRANSLATION(12),
    /**
     * <code>MUSICAL_WORK_TYPE_UNSPECIFIED_ARRANGEMENT = 13;</code>
     */
    MUSICAL_WORK_TYPE_UNSPECIFIED_ARRANGEMENT(13),
    /**
     * <code>MUSICAL_WORK_TYPE_USER_DEFINED = 14;</code>
     */
    MUSICAL_WORK_TYPE_USER_DEFINED(14),
    /**
     * <code>MUSICAL_WORK_TYPE_COMPOSITE_MUSICAL_WORK = 15;</code>
     */
    MUSICAL_WORK_TYPE_COMPOSITE_MUSICAL_WORK(15),
    /**
     * <code>MUSICAL_WORK_TYPE_VIDEO_PRODUCTION_WORK = 16;</code>
     */
    MUSICAL_WORK_TYPE_VIDEO_PRODUCTION_WORK(16),
    /**
     * <code>MUSICAL_WORK_TYPE_ARRANGED_WITH_NEW_MUSIC = 17;</code>
     */
    MUSICAL_WORK_TYPE_ARRANGED_WITH_NEW_MUSIC(17),
    /**
     * <code>MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT_OF_TEXT = 18;</code>
     */
    MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT_OF_TEXT(18),
    /**
     * <code>MUSICAL_WORK_TYPE_RADIO_PRODUCTION_WORK = 19;</code>
     */
    MUSICAL_WORK_TYPE_RADIO_PRODUCTION_WORK(19),
    /**
     * <code>MUSICAL_WORK_TYPE_ADAPTED_IN_ORIGINAL_LANGUAGE = 20;</code>
     */
    MUSICAL_WORK_TYPE_ADAPTED_IN_ORIGINAL_LANGUAGE(20),
    /**
     * <code>MUSICAL_WORK_TYPE_ORIGINAL_LYRICS_ARRANGEMENT = 21;</code>
     */
    MUSICAL_WORK_TYPE_ORIGINAL_LYRICS_ARRANGEMENT(21),
    /**
     * <code>MUSICAL_WORK_TYPE_UNSPECIFIED_MUSICAL_WORK_EXCERPT = 22;</code>
     */
    MUSICAL_WORK_TYPE_UNSPECIFIED_MUSICAL_WORK_EXCERPT(22),
    /**
     * <code>MUSICAL_WORK_TYPE_ADAPTED_INSTRUMENTAL_WORK = 23;</code>
     */
    MUSICAL_WORK_TYPE_ADAPTED_INSTRUMENTAL_WORK(23),
    /**
     * <code>MUSICAL_WORK_TYPE_THEATER_PRODUCTION_WORK = 24;</code>
     */
    MUSICAL_WORK_TYPE_THEATER_PRODUCTION_WORK(24),
    /**
     * <code>MUSICAL_WORK_TYPE_ORIGINAL_MUSICAL_WORK = 25;</code>
     */
    MUSICAL_WORK_TYPE_ORIGINAL_MUSICAL_WORK(25),
    /**
     * <code>MUSICAL_WORK_TYPE_MULTIMEDIA_PRODUCTION_WORK = 26;</code>
     */
    MUSICAL_WORK_TYPE_MULTIMEDIA_PRODUCTION_WORK(26),
    /**
     * <code>MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT = 27;</code>
     */
    MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT(27),
    /**
     * <code>MUSICAL_WORK_TYPE_ORIGINAL_MUSIC_ADAPTATION = 28;</code>
     */
    MUSICAL_WORK_TYPE_ORIGINAL_MUSIC_ADAPTATION(28),
    ;

    /**
     * <code>MUSICAL_WORK_TYPE_POTPOURRI = 0;</code>
     */
    public static final int MUSICAL_WORK_TYPE_POTPOURRI_VALUE = 0;
    /**
     * <code>MUSICAL_WORK_TYPE_PRODUCTION_MUSIC_LIBRARY_WORK = 1;</code>
     */
    public static final int MUSICAL_WORK_TYPE_PRODUCTION_MUSIC_LIBRARY_WORK_VALUE = 1;
    /**
     * <code>MUSICAL_WORK_TYPE_LYRIC_REPLACEMENT = 2;</code>
     */
    public static final int MUSICAL_WORK_TYPE_LYRIC_REPLACEMENT_VALUE = 2;
    /**
     * <code>MUSICAL_WORK_TYPE_ADAPTED_WITH_NEW_LYRICS = 3;</code>
     */
    public static final int MUSICAL_WORK_TYPE_ADAPTED_WITH_NEW_LYRICS_VALUE = 3;
    /**
     * <code>MUSICAL_WORK_TYPE_MUSICAL_WORK_MOVEMENT = 4;</code>
     */
    public static final int MUSICAL_WORK_TYPE_MUSICAL_WORK_MOVEMENT_VALUE = 4;
    /**
     * <code>MUSICAL_WORK_TYPE_TV_PRODUCTION_WORK = 5;</code>
     */
    public static final int MUSICAL_WORK_TYPE_TV_PRODUCTION_WORK_VALUE = 5;
    /**
     * <code>MUSICAL_WORK_TYPE_LYRIC_REMOVAL = 6;</code>
     */
    public static final int MUSICAL_WORK_TYPE_LYRIC_REMOVAL_VALUE = 6;
    /**
     * <code>MUSICAL_WORK_TYPE_MUSICAL_WORK_WITH_SAMPLES = 7;</code>
     */
    public static final int MUSICAL_WORK_TYPE_MUSICAL_WORK_WITH_SAMPLES_VALUE = 7;
    /**
     * <code>MUSICAL_WORK_TYPE_UNKNOWN = 8;</code>
     */
    public static final int MUSICAL_WORK_TYPE_UNKNOWN_VALUE = 8;
    /**
     * <code>MUSICAL_WORK_TYPE_MASHUP = 9;</code>
     */
    public static final int MUSICAL_WORK_TYPE_MASHUP_VALUE = 9;
    /**
     * <code>MUSICAL_WORK_TYPE_DRAMATICO_MUSICAL_WORK = 10;</code>
     */
    public static final int MUSICAL_WORK_TYPE_DRAMATICO_MUSICAL_WORK_VALUE = 10;
    /**
     * <code>MUSICAL_WORK_TYPE_MEDLEY = 11;</code>
     */
    public static final int MUSICAL_WORK_TYPE_MEDLEY_VALUE = 11;
    /**
     * <code>MUSICAL_WORK_TYPE_LYRIC_TRANSLATION = 12;</code>
     */
    public static final int MUSICAL_WORK_TYPE_LYRIC_TRANSLATION_VALUE = 12;
    /**
     * <code>MUSICAL_WORK_TYPE_UNSPECIFIED_ARRANGEMENT = 13;</code>
     */
    public static final int MUSICAL_WORK_TYPE_UNSPECIFIED_ARRANGEMENT_VALUE = 13;
    /**
     * <code>MUSICAL_WORK_TYPE_USER_DEFINED = 14;</code>
     */
    public static final int MUSICAL_WORK_TYPE_USER_DEFINED_VALUE = 14;
    /**
     * <code>MUSICAL_WORK_TYPE_COMPOSITE_MUSICAL_WORK = 15;</code>
     */
    public static final int MUSICAL_WORK_TYPE_COMPOSITE_MUSICAL_WORK_VALUE = 15;
    /**
     * <code>MUSICAL_WORK_TYPE_VIDEO_PRODUCTION_WORK = 16;</code>
     */
    public static final int MUSICAL_WORK_TYPE_VIDEO_PRODUCTION_WORK_VALUE = 16;
    /**
     * <code>MUSICAL_WORK_TYPE_ARRANGED_WITH_NEW_MUSIC = 17;</code>
     */
    public static final int MUSICAL_WORK_TYPE_ARRANGED_WITH_NEW_MUSIC_VALUE = 17;
    /**
     * <code>MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT_OF_TEXT = 18;</code>
     */
    public static final int MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT_OF_TEXT_VALUE = 18;
    /**
     * <code>MUSICAL_WORK_TYPE_RADIO_PRODUCTION_WORK = 19;</code>
     */
    public static final int MUSICAL_WORK_TYPE_RADIO_PRODUCTION_WORK_VALUE = 19;
    /**
     * <code>MUSICAL_WORK_TYPE_ADAPTED_IN_ORIGINAL_LANGUAGE = 20;</code>
     */
    public static final int MUSICAL_WORK_TYPE_ADAPTED_IN_ORIGINAL_LANGUAGE_VALUE = 20;
    /**
     * <code>MUSICAL_WORK_TYPE_ORIGINAL_LYRICS_ARRANGEMENT = 21;</code>
     */
    public static final int MUSICAL_WORK_TYPE_ORIGINAL_LYRICS_ARRANGEMENT_VALUE = 21;
    /**
     * <code>MUSICAL_WORK_TYPE_UNSPECIFIED_MUSICAL_WORK_EXCERPT = 22;</code>
     */
    public static final int MUSICAL_WORK_TYPE_UNSPECIFIED_MUSICAL_WORK_EXCERPT_VALUE = 22;
    /**
     * <code>MUSICAL_WORK_TYPE_ADAPTED_INSTRUMENTAL_WORK = 23;</code>
     */
    public static final int MUSICAL_WORK_TYPE_ADAPTED_INSTRUMENTAL_WORK_VALUE = 23;
    /**
     * <code>MUSICAL_WORK_TYPE_THEATER_PRODUCTION_WORK = 24;</code>
     */
    public static final int MUSICAL_WORK_TYPE_THEATER_PRODUCTION_WORK_VALUE = 24;
    /**
     * <code>MUSICAL_WORK_TYPE_ORIGINAL_MUSICAL_WORK = 25;</code>
     */
    public static final int MUSICAL_WORK_TYPE_ORIGINAL_MUSICAL_WORK_VALUE = 25;
    /**
     * <code>MUSICAL_WORK_TYPE_MULTIMEDIA_PRODUCTION_WORK = 26;</code>
     */
    public static final int MUSICAL_WORK_TYPE_MULTIMEDIA_PRODUCTION_WORK_VALUE = 26;
    /**
     * <code>MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT = 27;</code>
     */
    public static final int MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT_VALUE = 27;
    /**
     * <code>MUSICAL_WORK_TYPE_ORIGINAL_MUSIC_ADAPTATION = 28;</code>
     */
    public static final int MUSICAL_WORK_TYPE_ORIGINAL_MUSIC_ADAPTATION_VALUE = 28;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MusicalWorkType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MusicalWorkType forNumber(int value) {
      switch (value) {
        case 0: return MUSICAL_WORK_TYPE_POTPOURRI;
        case 1: return MUSICAL_WORK_TYPE_PRODUCTION_MUSIC_LIBRARY_WORK;
        case 2: return MUSICAL_WORK_TYPE_LYRIC_REPLACEMENT;
        case 3: return MUSICAL_WORK_TYPE_ADAPTED_WITH_NEW_LYRICS;
        case 4: return MUSICAL_WORK_TYPE_MUSICAL_WORK_MOVEMENT;
        case 5: return MUSICAL_WORK_TYPE_TV_PRODUCTION_WORK;
        case 6: return MUSICAL_WORK_TYPE_LYRIC_REMOVAL;
        case 7: return MUSICAL_WORK_TYPE_MUSICAL_WORK_WITH_SAMPLES;
        case 8: return MUSICAL_WORK_TYPE_UNKNOWN;
        case 9: return MUSICAL_WORK_TYPE_MASHUP;
        case 10: return MUSICAL_WORK_TYPE_DRAMATICO_MUSICAL_WORK;
        case 11: return MUSICAL_WORK_TYPE_MEDLEY;
        case 12: return MUSICAL_WORK_TYPE_LYRIC_TRANSLATION;
        case 13: return MUSICAL_WORK_TYPE_UNSPECIFIED_ARRANGEMENT;
        case 14: return MUSICAL_WORK_TYPE_USER_DEFINED;
        case 15: return MUSICAL_WORK_TYPE_COMPOSITE_MUSICAL_WORK;
        case 16: return MUSICAL_WORK_TYPE_VIDEO_PRODUCTION_WORK;
        case 17: return MUSICAL_WORK_TYPE_ARRANGED_WITH_NEW_MUSIC;
        case 18: return MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT_OF_TEXT;
        case 19: return MUSICAL_WORK_TYPE_RADIO_PRODUCTION_WORK;
        case 20: return MUSICAL_WORK_TYPE_ADAPTED_IN_ORIGINAL_LANGUAGE;
        case 21: return MUSICAL_WORK_TYPE_ORIGINAL_LYRICS_ARRANGEMENT;
        case 22: return MUSICAL_WORK_TYPE_UNSPECIFIED_MUSICAL_WORK_EXCERPT;
        case 23: return MUSICAL_WORK_TYPE_ADAPTED_INSTRUMENTAL_WORK;
        case 24: return MUSICAL_WORK_TYPE_THEATER_PRODUCTION_WORK;
        case 25: return MUSICAL_WORK_TYPE_ORIGINAL_MUSICAL_WORK;
        case 26: return MUSICAL_WORK_TYPE_MULTIMEDIA_PRODUCTION_WORK;
        case 27: return MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT;
        case 28: return MUSICAL_WORK_TYPE_ORIGINAL_MUSIC_ADAPTATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MusicalWorkType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MusicalWorkType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MusicalWorkType>() {
            public MusicalWorkType findValueByNumber(int number) {
              return MusicalWorkType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(102);
    }

    private static final MusicalWorkType[] VALUES = values();

    public static MusicalWorkType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MusicalWorkType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MusicalWorkType)
  }

  /**
   * Protobuf enum {@code avs.MwnlFileStatus}
   */
  public enum MwnlFileStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MWNL_FILE_STATUS_FILE_O_K = 0;</code>
     */
    MWNL_FILE_STATUS_FILE_O_K(0),
    /**
     * <code>MWNL_FILE_STATUS_USER_DEFINED = 1;</code>
     */
    MWNL_FILE_STATUS_USER_DEFINED(1),
    ;

    /**
     * <code>MWNL_FILE_STATUS_FILE_O_K = 0;</code>
     */
    public static final int MWNL_FILE_STATUS_FILE_O_K_VALUE = 0;
    /**
     * <code>MWNL_FILE_STATUS_USER_DEFINED = 1;</code>
     */
    public static final int MWNL_FILE_STATUS_USER_DEFINED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MwnlFileStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MwnlFileStatus forNumber(int value) {
      switch (value) {
        case 0: return MWNL_FILE_STATUS_FILE_O_K;
        case 1: return MWNL_FILE_STATUS_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MwnlFileStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MwnlFileStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MwnlFileStatus>() {
            public MwnlFileStatus findValueByNumber(int number) {
              return MwnlFileStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(103);
    }

    private static final MwnlFileStatus[] VALUES = values();

    public static MwnlFileStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MwnlFileStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MwnlFileStatus)
  }

  /**
   * Protobuf enum {@code avs.MwnlProposedActionType}
   */
  public enum MwnlProposedActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MWNL_PROPOSED_ACTION_TYPE_RESUBMIT = 0;</code>
     */
    MWNL_PROPOSED_ACTION_TYPE_RESUBMIT(0),
    /**
     * <code>MWNL_PROPOSED_ACTION_TYPE_USER_DEFINED = 1;</code>
     */
    MWNL_PROPOSED_ACTION_TYPE_USER_DEFINED(1),
    ;

    /**
     * <code>MWNL_PROPOSED_ACTION_TYPE_RESUBMIT = 0;</code>
     */
    public static final int MWNL_PROPOSED_ACTION_TYPE_RESUBMIT_VALUE = 0;
    /**
     * <code>MWNL_PROPOSED_ACTION_TYPE_USER_DEFINED = 1;</code>
     */
    public static final int MWNL_PROPOSED_ACTION_TYPE_USER_DEFINED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MwnlProposedActionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MwnlProposedActionType forNumber(int value) {
      switch (value) {
        case 0: return MWNL_PROPOSED_ACTION_TYPE_RESUBMIT;
        case 1: return MWNL_PROPOSED_ACTION_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MwnlProposedActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MwnlProposedActionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MwnlProposedActionType>() {
            public MwnlProposedActionType findValueByNumber(int number) {
              return MwnlProposedActionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(104);
    }

    private static final MwnlProposedActionType[] VALUES = values();

    public static MwnlProposedActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MwnlProposedActionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.MwnlProposedActionType)
  }

  /**
   * Protobuf enum {@code avs.NewStudioRole}
   */
  public enum NewStudioRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NEW_STUDIO_ROLE_PRODUCTION_MANAGER = 0;</code>
     */
    NEW_STUDIO_ROLE_PRODUCTION_MANAGER(0),
    /**
     * <code>NEW_STUDIO_ROLE_REDACTOR = 1;</code>
     */
    NEW_STUDIO_ROLE_REDACTOR(1),
    /**
     * <code>NEW_STUDIO_ROLE_SERIES_PRODUCER = 2;</code>
     */
    NEW_STUDIO_ROLE_SERIES_PRODUCER(2),
    /**
     * <code>NEW_STUDIO_ROLE_PRE_PRODUCTION = 3;</code>
     */
    NEW_STUDIO_ROLE_PRE_PRODUCTION(3),
    /**
     * <code>NEW_STUDIO_ROLE_CO_EXECUTIVE_PRODUCER = 4;</code>
     */
    NEW_STUDIO_ROLE_CO_EXECUTIVE_PRODUCER(4),
    /**
     * <code>NEW_STUDIO_ROLE_STUDIO_PERSONNEL = 5;</code>
     */
    NEW_STUDIO_ROLE_STUDIO_PERSONNEL(5),
    /**
     * <code>NEW_STUDIO_ROLE_TAPE_OPERATOR = 6;</code>
     */
    NEW_STUDIO_ROLE_TAPE_OPERATOR(6),
    /**
     * <code>NEW_STUDIO_ROLE_PRE_PRODUCTION_ENGINEER = 7;</code>
     */
    NEW_STUDIO_ROLE_PRE_PRODUCTION_ENGINEER(7),
    /**
     * <code>NEW_STUDIO_ROLE_MUSICIAN = 8;</code>
     */
    NEW_STUDIO_ROLE_MUSICIAN(8),
    /**
     * <code>NEW_STUDIO_ROLE_PRODUCTION_COMPANY = 9;</code>
     */
    NEW_STUDIO_ROLE_PRODUCTION_COMPANY(9),
    /**
     * <code>NEW_STUDIO_ROLE_CHIEF_LIGHTING_TECHNICIAN = 10;</code>
     */
    NEW_STUDIO_ROLE_CHIEF_LIGHTING_TECHNICIAN(10),
    /**
     * <code>NEW_STUDIO_ROLE_PYROTECHNICIAN = 11;</code>
     */
    NEW_STUDIO_ROLE_PYROTECHNICIAN(11),
    /**
     * <code>NEW_STUDIO_ROLE_SCRIPT_SUPERVISOR = 12;</code>
     */
    NEW_STUDIO_ROLE_SCRIPT_SUPERVISOR(12),
    /**
     * <code>NEW_STUDIO_ROLE_RESEARCH_TEAM_MEMBER = 13;</code>
     */
    NEW_STUDIO_ROLE_RESEARCH_TEAM_MEMBER(13),
    /**
     * <code>NEW_STUDIO_ROLE_USER_DEFINED = 14;</code>
     */
    NEW_STUDIO_ROLE_USER_DEFINED(14),
    /**
     * <code>NEW_STUDIO_ROLE_CONTINUITY_CHECKER = 15;</code>
     */
    NEW_STUDIO_ROLE_CONTINUITY_CHECKER(15),
    /**
     * <code>NEW_STUDIO_ROLE_ADDITIONAL_ENGINEER = 16;</code>
     */
    NEW_STUDIO_ROLE_ADDITIONAL_ENGINEER(16),
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_DIRECTOR = 17;</code>
     */
    NEW_STUDIO_ROLE_ASSISTANT_DIRECTOR(17),
    /**
     * <code>NEW_STUDIO_ROLE_PHOTOGRAPHY_DIRECTOR = 18;</code>
     */
    NEW_STUDIO_ROLE_PHOTOGRAPHY_DIRECTOR(18),
    /**
     * <code>NEW_STUDIO_ROLE_DIRECTOR = 19;</code>
     */
    NEW_STUDIO_ROLE_DIRECTOR(19),
    /**
     * <code>NEW_STUDIO_ROLE_EDITOR_IN_CHIEF = 20;</code>
     */
    NEW_STUDIO_ROLE_EDITOR_IN_CHIEF(20),
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN = 21;</code>
     */
    NEW_STUDIO_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN(21),
    /**
     * <code>NEW_STUDIO_ROLE_VOCAL_PRODUCER = 22;</code>
     */
    NEW_STUDIO_ROLE_VOCAL_PRODUCER(22),
    /**
     * <code>NEW_STUDIO_ROLE_SCENIC_OPERATIVE = 23;</code>
     */
    NEW_STUDIO_ROLE_SCENIC_OPERATIVE(23),
    /**
     * <code>NEW_STUDIO_ROLE_PUBLISHING_DIRECTOR = 24;</code>
     */
    NEW_STUDIO_ROLE_PUBLISHING_DIRECTOR(24),
    /**
     * <code>NEW_STUDIO_ROLE_STUDIO_PRODUCER = 25;</code>
     */
    NEW_STUDIO_ROLE_STUDIO_PRODUCER(25),
    /**
     * <code>NEW_STUDIO_ROLE_STAGE_DIRECTOR = 26;</code>
     */
    NEW_STUDIO_ROLE_STAGE_DIRECTOR(26),
    /**
     * <code>NEW_STUDIO_ROLE_ARMOURER = 27;</code>
     */
    NEW_STUDIO_ROLE_ARMOURER(27),
    /**
     * <code>NEW_STUDIO_ROLE_SOUND_MIXER = 28;</code>
     */
    NEW_STUDIO_ROLE_SOUND_MIXER(28),
    /**
     * <code>NEW_STUDIO_ROLE_SECOND_ENGINEER = 29;</code>
     */
    NEW_STUDIO_ROLE_SECOND_ENGINEER(29),
    /**
     * <code>NEW_STUDIO_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER = 30;</code>
     */
    NEW_STUDIO_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER(30),
    /**
     * <code>NEW_STUDIO_ROLE_CAMERA_OPERATOR = 31;</code>
     */
    NEW_STUDIO_ROLE_CAMERA_OPERATOR(31),
    /**
     * <code>NEW_STUDIO_ROLE_OVERDUB_ENGINEER = 32;</code>
     */
    NEW_STUDIO_ROLE_OVERDUB_ENGINEER(32),
    /**
     * <code>NEW_STUDIO_ROLE_VIDEOGRAPHER = 33;</code>
     */
    NEW_STUDIO_ROLE_VIDEOGRAPHER(33),
    /**
     * <code>NEW_STUDIO_ROLE_SUBTITLES_EDITOR = 34;</code>
     */
    NEW_STUDIO_ROLE_SUBTITLES_EDITOR(34),
    /**
     * <code>NEW_STUDIO_ROLE_A_AND_R_COORDINATOR = 35;</code>
     */
    NEW_STUDIO_ROLE_A_AND_R_COORDINATOR(35),
    /**
     * <code>NEW_STUDIO_ROLE_VISUAL_EDITOR = 36;</code>
     */
    NEW_STUDIO_ROLE_VISUAL_EDITOR(36),
    /**
     * <code>NEW_STUDIO_ROLE_MIXING_ENGINEER = 37;</code>
     */
    NEW_STUDIO_ROLE_MIXING_ENGINEER(37),
    /**
     * <code>NEW_STUDIO_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR = 38;</code>
     */
    NEW_STUDIO_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR(38),
    /**
     * <code>NEW_STUDIO_ROLE_BINDER = 39;</code>
     */
    NEW_STUDIO_ROLE_BINDER(39),
    /**
     * <code>NEW_STUDIO_ROLE_GRIP = 40;</code>
     */
    NEW_STUDIO_ROLE_GRIP(40),
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_CAMERA_OPERATOR = 41;</code>
     */
    NEW_STUDIO_ROLE_ASSISTANT_CAMERA_OPERATOR(41),
    /**
     * <code>NEW_STUDIO_ROLE_FILM_DIRECTOR = 42;</code>
     */
    NEW_STUDIO_ROLE_FILM_DIRECTOR(42),
    /**
     * <code>NEW_STUDIO_ROLE_CLAPPER_LOADER = 43;</code>
     */
    NEW_STUDIO_ROLE_CLAPPER_LOADER(43),
    /**
     * <code>NEW_STUDIO_ROLE_REMIXING_ENGINEER = 44;</code>
     */
    NEW_STUDIO_ROLE_REMIXING_ENGINEER(44),
    /**
     * <code>NEW_STUDIO_ROLE_BOOKPLATE_DESIGNER = 45;</code>
     */
    NEW_STUDIO_ROLE_BOOKPLATE_DESIGNER(45),
    /**
     * <code>NEW_STUDIO_ROLE_TRACKING_SECOND_ENGINEER = 46;</code>
     */
    NEW_STUDIO_ROLE_TRACKING_SECOND_ENGINEER(46),
    /**
     * <code>NEW_STUDIO_ROLE_BOOK_DESIGNER = 47;</code>
     */
    NEW_STUDIO_ROLE_BOOK_DESIGNER(47),
    /**
     * <code>NEW_STUDIO_ROLE_HAIRDRESSER = 48;</code>
     */
    NEW_STUDIO_ROLE_HAIRDRESSER(48),
    /**
     * <code>NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER = 49;</code>
     */
    NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER(49),
    /**
     * <code>NEW_STUDIO_ROLE_COSTUME_DESIGNER = 50;</code>
     */
    NEW_STUDIO_ROLE_COSTUME_DESIGNER(50),
    /**
     * <code>NEW_STUDIO_ROLE_MAKE_UP_ARTIST = 51;</code>
     */
    NEW_STUDIO_ROLE_MAKE_UP_ARTIST(51),
    /**
     * <code>NEW_STUDIO_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT = 52;</code>
     */
    NEW_STUDIO_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT(52),
    /**
     * <code>NEW_STUDIO_ROLE_LOCATION_MANAGER = 53;</code>
     */
    NEW_STUDIO_ROLE_LOCATION_MANAGER(53),
    /**
     * <code>NEW_STUDIO_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER = 54;</code>
     */
    NEW_STUDIO_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER(54),
    /**
     * <code>NEW_STUDIO_ROLE_STRING_ENGINEER = 55;</code>
     */
    NEW_STUDIO_ROLE_STRING_ENGINEER(55),
    /**
     * <code>NEW_STUDIO_ROLE_PROGRAM_PRODUCER = 56;</code>
     */
    NEW_STUDIO_ROLE_PROGRAM_PRODUCER(56),
    /**
     * <code>NEW_STUDIO_ROLE_REMIXING_SECOND_ENGINEER = 57;</code>
     */
    NEW_STUDIO_ROLE_REMIXING_SECOND_ENGINEER(57),
    /**
     * <code>NEW_STUDIO_ROLE_GRAPHIC_ASSISTANT = 58;</code>
     */
    NEW_STUDIO_ROLE_GRAPHIC_ASSISTANT(58),
    /**
     * <code>NEW_STUDIO_ROLE_MIXING_SECOND_ENGINEER = 59;</code>
     */
    NEW_STUDIO_ROLE_MIXING_SECOND_ENGINEER(59),
    /**
     * <code>NEW_STUDIO_ROLE_LEADMAN = 60;</code>
     */
    NEW_STUDIO_ROLE_LEADMAN(60),
    /**
     * <code>NEW_STUDIO_ROLE_TONMEISTER = 61;</code>
     */
    NEW_STUDIO_ROLE_TONMEISTER(61),
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_VISUAL_EDITOR = 62;</code>
     */
    NEW_STUDIO_ROLE_ASSISTANT_VISUAL_EDITOR(62),
    /**
     * <code>NEW_STUDIO_ROLE_PRODUCTION_DEPARTMENT = 63;</code>
     */
    NEW_STUDIO_ROLE_PRODUCTION_DEPARTMENT(63),
    /**
     * <code>NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER = 64;</code>
     */
    NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER(64),
    /**
     * <code>NEW_STUDIO_ROLE_DRESSER = 65;</code>
     */
    NEW_STUDIO_ROLE_DRESSER(65),
    /**
     * <code>NEW_STUDIO_ROLE_ANIMATOR = 66;</code>
     */
    NEW_STUDIO_ROLE_ANIMATOR(66),
    /**
     * <code>NEW_STUDIO_ROLE_LIGHTING_DIRECTOR = 67;</code>
     */
    NEW_STUDIO_ROLE_LIGHTING_DIRECTOR(67),
    /**
     * <code>NEW_STUDIO_ROLE_LIGHTING_TECHNICIAN = 68;</code>
     */
    NEW_STUDIO_ROLE_LIGHTING_TECHNICIAN(68),
    /**
     * <code>NEW_STUDIO_ROLE_FILM_DISTRIBUTOR = 69;</code>
     */
    NEW_STUDIO_ROLE_FILM_DISTRIBUTOR(69),
    /**
     * <code>NEW_STUDIO_ROLE_INITIAL_PRODUCER = 70;</code>
     */
    NEW_STUDIO_ROLE_INITIAL_PRODUCER(70),
    /**
     * <code>NEW_STUDIO_ROLE_CORRESPONDENT = 71;</code>
     */
    NEW_STUDIO_ROLE_CORRESPONDENT(71),
    /**
     * <code>NEW_STUDIO_ROLE_CONSULTANT = 72;</code>
     */
    NEW_STUDIO_ROLE_CONSULTANT(72),
    /**
     * <code>NEW_STUDIO_ROLE_SUBTITLES_TRANSLATOR = 73;</code>
     */
    NEW_STUDIO_ROLE_SUBTITLES_TRANSLATOR(73),
    /**
     * <code>NEW_STUDIO_ROLE_ARTIST_VOCAL_ENGINEER = 74;</code>
     */
    NEW_STUDIO_ROLE_ARTIST_VOCAL_ENGINEER(74),
    /**
     * <code>NEW_STUDIO_ROLE_RIGGER = 75;</code>
     */
    NEW_STUDIO_ROLE_RIGGER(75),
    /**
     * <code>NEW_STUDIO_ROLE_ARTIST_VOCAL_SECOND_ENGINEER = 76;</code>
     */
    NEW_STUDIO_ROLE_ARTIST_VOCAL_SECOND_ENGINEER(76),
    /**
     * <code>NEW_STUDIO_ROLE_REPETITEUR = 77;</code>
     */
    NEW_STUDIO_ROLE_REPETITEUR(77),
    /**
     * <code>NEW_STUDIO_ROLE_RESTAGER = 78;</code>
     */
    NEW_STUDIO_ROLE_RESTAGER(78),
    /**
     * <code>NEW_STUDIO_ROLE_GRAPHIC_DESIGNER = 79;</code>
     */
    NEW_STUDIO_ROLE_GRAPHIC_DESIGNER(79),
    /**
     * <code>NEW_STUDIO_ROLE_BROADCAST_JOURNALIST = 80;</code>
     */
    NEW_STUDIO_ROLE_BROADCAST_JOURNALIST(80),
    /**
     * <code>NEW_STUDIO_ROLE_DIGITAL_EDITING_ENGINEER = 81;</code>
     */
    NEW_STUDIO_ROLE_DIGITAL_EDITING_ENGINEER(81),
    /**
     * <code>NEW_STUDIO_ROLE_BINDING_DESIGNER = 82;</code>
     */
    NEW_STUDIO_ROLE_BINDING_DESIGNER(82),
    /**
     * <code>NEW_STUDIO_ROLE_DIALOGUE_COACH = 83;</code>
     */
    NEW_STUDIO_ROLE_DIALOGUE_COACH(83),
    /**
     * <code>NEW_STUDIO_ROLE_FIGHT_DIRECTOR = 84;</code>
     */
    NEW_STUDIO_ROLE_FIGHT_DIRECTOR(84),
    /**
     * <code>NEW_STUDIO_ROLE_COMPILATION_PRODUCER = 85;</code>
     */
    NEW_STUDIO_ROLE_COMPILATION_PRODUCER(85),
    /**
     * <code>NEW_STUDIO_ROLE_CONTRACTOR = 86;</code>
     */
    NEW_STUDIO_ROLE_CONTRACTOR(86),
    /**
     * <code>NEW_STUDIO_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER = 87;</code>
     */
    NEW_STUDIO_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER(87),
    /**
     * <code>NEW_STUDIO_ROLE_ENCODER = 88;</code>
     */
    NEW_STUDIO_ROLE_ENCODER(88),
    /**
     * <code>NEW_STUDIO_ROLE_MANUFACTURER = 89;</code>
     */
    NEW_STUDIO_ROLE_MANUFACTURER(89),
    /**
     * <code>NEW_STUDIO_ROLE_RECORDING_ENGINEER = 90;</code>
     */
    NEW_STUDIO_ROLE_RECORDING_ENGINEER(90),
    /**
     * <code>NEW_STUDIO_ROLE_STUDIO_CONDUCTOR = 91;</code>
     */
    NEW_STUDIO_ROLE_STUDIO_CONDUCTOR(91),
    /**
     * <code>NEW_STUDIO_ROLE_ART_DIRECTOR = 92;</code>
     */
    NEW_STUDIO_ROLE_ART_DIRECTOR(92),
    /**
     * <code>NEW_STUDIO_ROLE_KEY_GRIP = 93;</code>
     */
    NEW_STUDIO_ROLE_KEY_GRIP(93),
    /**
     * <code>NEW_STUDIO_ROLE_RECORDING_SECOND_ENGINEER = 94;</code>
     */
    NEW_STUDIO_ROLE_RECORDING_SECOND_ENGINEER(94),
    /**
     * <code>NEW_STUDIO_ROLE_COVER_DESIGNER = 95;</code>
     */
    NEW_STUDIO_ROLE_COVER_DESIGNER(95),
    /**
     * <code>NEW_STUDIO_ROLE_DISTRIBUTION_COMPANY = 96;</code>
     */
    NEW_STUDIO_ROLE_DISTRIBUTION_COMPANY(96),
    /**
     * <code>NEW_STUDIO_ROLE_FILM_EDITOR = 97;</code>
     */
    NEW_STUDIO_ROLE_FILM_EDITOR(97),
    /**
     * <code>NEW_STUDIO_ROLE_FILM_SOUND_ENGINEER = 98;</code>
     */
    NEW_STUDIO_ROLE_FILM_SOUND_ENGINEER(98),
    /**
     * <code>NEW_STUDIO_ROLE_STRING_PRODUCER = 99;</code>
     */
    NEW_STUDIO_ROLE_STRING_PRODUCER(99),
    /**
     * <code>NEW_STUDIO_ROLE_TRACKING_ENGINEER = 100;</code>
     */
    NEW_STUDIO_ROLE_TRACKING_ENGINEER(100),
    /**
     * <code>NEW_STUDIO_ROLE_SET_DESIGNER = 101;</code>
     */
    NEW_STUDIO_ROLE_SET_DESIGNER(101),
    /**
     * <code>NEW_STUDIO_ROLE_PROGRAMMING_ENGINEER = 102;</code>
     */
    NEW_STUDIO_ROLE_PROGRAMMING_ENGINEER(102),
    /**
     * <code>NEW_STUDIO_ROLE_ANNOTATOR = 103;</code>
     */
    NEW_STUDIO_ROLE_ANNOTATOR(103),
    /**
     * <code>NEW_STUDIO_ROLE_DUBBER = 104;</code>
     */
    NEW_STUDIO_ROLE_DUBBER(104),
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_PRODUCER = 105;</code>
     */
    NEW_STUDIO_ROLE_ASSISTANT_PRODUCER(105),
    /**
     * <code>NEW_STUDIO_ROLE_FOLEY_EDITOR = 106;</code>
     */
    NEW_STUDIO_ROLE_FOLEY_EDITOR(106),
    /**
     * <code>NEW_STUDIO_ROLE_MATTE_ARTIST = 107;</code>
     */
    NEW_STUDIO_ROLE_MATTE_ARTIST(107),
    /**
     * <code>NEW_STUDIO_ROLE_DIGITAL_EDITING_SECOND_ENGINEER = 108;</code>
     */
    NEW_STUDIO_ROLE_DIGITAL_EDITING_SECOND_ENGINEER(108),
    /**
     * <code>NEW_STUDIO_ROLE_REISSUE_PRODUCER = 109;</code>
     */
    NEW_STUDIO_ROLE_REISSUE_PRODUCER(109),
    /**
     * <code>NEW_STUDIO_ROLE_CARPENTER = 110;</code>
     */
    NEW_STUDIO_ROLE_CARPENTER(110),
    /**
     * <code>NEW_STUDIO_ROLE_MUSIC_DIRECTOR = 111;</code>
     */
    NEW_STUDIO_ROLE_MUSIC_DIRECTOR(111),
    /**
     * <code>NEW_STUDIO_ROLE_POST_PRODUCER = 112;</code>
     */
    NEW_STUDIO_ROLE_POST_PRODUCER(112),
    /**
     * <code>NEW_STUDIO_ROLE_RUNNER = 113;</code>
     */
    NEW_STUDIO_ROLE_RUNNER(113),
    /**
     * <code>NEW_STUDIO_ROLE_CHOREOGRAPHER = 114;</code>
     */
    NEW_STUDIO_ROLE_CHOREOGRAPHER(114),
    /**
     * <code>NEW_STUDIO_ROLE_COMMISSIONING_BROADCASTER = 115;</code>
     */
    NEW_STUDIO_ROLE_COMMISSIONING_BROADCASTER(115),
    /**
     * <code>NEW_STUDIO_ROLE_PROPERTY_MANAGER = 116;</code>
     */
    NEW_STUDIO_ROLE_PROPERTY_MANAGER(116),
    /**
     * <code>NEW_STUDIO_ROLE_EXPERT = 117;</code>
     */
    NEW_STUDIO_ROLE_EXPERT(117),
    /**
     * <code>NEW_STUDIO_ROLE_ANIMAL_TRAINER = 118;</code>
     */
    NEW_STUDIO_ROLE_ANIMAL_TRAINER(118),
    /**
     * <code>NEW_STUDIO_ROLE_FOLEY_MIXER = 119;</code>
     */
    NEW_STUDIO_ROLE_FOLEY_MIXER(119),
    /**
     * <code>NEW_STUDIO_ROLE_MASTERING_SECOND_ENGINEER = 120;</code>
     */
    NEW_STUDIO_ROLE_MASTERING_SECOND_ENGINEER(120),
    /**
     * <code>NEW_STUDIO_ROLE_BOOKJACK_DESIGNER = 121;</code>
     */
    NEW_STUDIO_ROLE_BOOKJACK_DESIGNER(121),
    /**
     * <code>NEW_STUDIO_ROLE_BROADCAST_ASSISTANT = 122;</code>
     */
    NEW_STUDIO_ROLE_BROADCAST_ASSISTANT(122),
    /**
     * <code>NEW_STUDIO_ROLE_SET_DRESSER = 123;</code>
     */
    NEW_STUDIO_ROLE_SET_DRESSER(123),
    /**
     * <code>NEW_STUDIO_ROLE_DESIGNER = 124;</code>
     */
    NEW_STUDIO_ROLE_DESIGNER(124),
    /**
     * <code>NEW_STUDIO_ROLE_ENGINEER = 125;</code>
     */
    NEW_STUDIO_ROLE_ENGINEER(125),
    /**
     * <code>NEW_STUDIO_ROLE_FILM_PRODUCER = 126;</code>
     */
    NEW_STUDIO_ROLE_FILM_PRODUCER(126),
    /**
     * <code>NEW_STUDIO_ROLE_CO_PRODUCER = 127;</code>
     */
    NEW_STUDIO_ROLE_CO_PRODUCER(127),
    /**
     * <code>NEW_STUDIO_ROLE_MASTERING_ENGINEER = 128;</code>
     */
    NEW_STUDIO_ROLE_MASTERING_ENGINEER(128),
    /**
     * <code>NEW_STUDIO_ROLE_BOOK_PRODUCER = 129;</code>
     */
    NEW_STUDIO_ROLE_BOOK_PRODUCER(129),
    /**
     * <code>NEW_STUDIO_ROLE_RESEARCHER = 130;</code>
     */
    NEW_STUDIO_ROLE_RESEARCHER(130),
    /**
     * <code>NEW_STUDIO_ROLE_SOUND_DESIGNER = 131;</code>
     */
    NEW_STUDIO_ROLE_SOUND_DESIGNER(131),
    /**
     * <code>NEW_STUDIO_ROLE_GREENSMAN = 132;</code>
     */
    NEW_STUDIO_ROLE_GREENSMAN(132),
    /**
     * <code>NEW_STUDIO_ROLE_SPECIAL_EFFECTS_TECHNICIAN = 133;</code>
     */
    NEW_STUDIO_ROLE_SPECIAL_EFFECTS_TECHNICIAN(133),
    /**
     * <code>NEW_STUDIO_ROLE_SECOND_UNIT_DIRECTOR = 134;</code>
     */
    NEW_STUDIO_ROLE_SECOND_UNIT_DIRECTOR(134),
    /**
     * <code>NEW_STUDIO_ROLE_WARDROBE = 135;</code>
     */
    NEW_STUDIO_ROLE_WARDROBE(135),
    /**
     * <code>NEW_STUDIO_ROLE_FOCUS_PULLER = 136;</code>
     */
    NEW_STUDIO_ROLE_FOCUS_PULLER(136),
    /**
     * <code>NEW_STUDIO_ROLE_RESEARCH_TEAM_HEAD = 137;</code>
     */
    NEW_STUDIO_ROLE_RESEARCH_TEAM_HEAD(137),
    /**
     * <code>NEW_STUDIO_ROLE_VISUAL_EFFECTS_TECHNICIAN = 138;</code>
     */
    NEW_STUDIO_ROLE_VISUAL_EFFECTS_TECHNICIAN(138),
    /**
     * <code>NEW_STUDIO_ROLE_SOUND_RECORDIST = 139;</code>
     */
    NEW_STUDIO_ROLE_SOUND_RECORDIST(139),
    /**
     * <code>NEW_STUDIO_ROLE_TRANSPORTATION_MANAGER = 140;</code>
     */
    NEW_STUDIO_ROLE_TRANSPORTATION_MANAGER(140),
    /**
     * <code>NEW_STUDIO_ROLE_VISION_MIXER = 141;</code>
     */
    NEW_STUDIO_ROLE_VISION_MIXER(141),
    /**
     * <code>NEW_STUDIO_ROLE_TECHNICAL_DIRECTOR = 142;</code>
     */
    NEW_STUDIO_ROLE_TECHNICAL_DIRECTOR(142),
    /**
     * <code>NEW_STUDIO_ROLE_NEWS_PRODUCER = 143;</code>
     */
    NEW_STUDIO_ROLE_NEWS_PRODUCER(143),
    /**
     * <code>NEW_STUDIO_ROLE_SPONSOR = 144;</code>
     */
    NEW_STUDIO_ROLE_SPONSOR(144),
    /**
     * <code>NEW_STUDIO_ROLE_PRODUCTION_SECRETARY = 145;</code>
     */
    NEW_STUDIO_ROLE_PRODUCTION_SECRETARY(145),
    /**
     * <code>NEW_STUDIO_ROLE_FOLEY_ARTIST = 146;</code>
     */
    NEW_STUDIO_ROLE_FOLEY_ARTIST(146),
    /**
     * <code>NEW_STUDIO_ROLE_VIDEO_PRODUCER = 147;</code>
     */
    NEW_STUDIO_ROLE_VIDEO_PRODUCER(147),
    /**
     * <code>NEW_STUDIO_ROLE_SCIENTIFIC_ADVISOR = 148;</code>
     */
    NEW_STUDIO_ROLE_SCIENTIFIC_ADVISOR(148),
    /**
     * <code>NEW_STUDIO_ROLE_AURAL_TRAINER = 149;</code>
     */
    NEW_STUDIO_ROLE_AURAL_TRAINER(149),
    /**
     * <code>NEW_STUDIO_ROLE_EDITOR_OF_THE_DAY = 150;</code>
     */
    NEW_STUDIO_ROLE_EDITOR_OF_THE_DAY(150),
    /**
     * <code>NEW_STUDIO_ROLE_PROGRAM_PROPOSAL_WRITER = 151;</code>
     */
    NEW_STUDIO_ROLE_PROGRAM_PROPOSAL_WRITER(151),
    /**
     * <code>NEW_STUDIO_ROLE_SECOND_ASSISTANT_DIRECTOR = 152;</code>
     */
    NEW_STUDIO_ROLE_SECOND_ASSISTANT_DIRECTOR(152),
    /**
     * <code>NEW_STUDIO_ROLE_CASTING_DIRECTOR = 153;</code>
     */
    NEW_STUDIO_ROLE_CASTING_DIRECTOR(153),
    /**
     * <code>NEW_STUDIO_ROLE_EXECUTIVE_PRODUCER = 154;</code>
     */
    NEW_STUDIO_ROLE_EXECUTIVE_PRODUCER(154),
    /**
     * <code>NEW_STUDIO_ROLE_FLOOR_MANAGER = 155;</code>
     */
    NEW_STUDIO_ROLE_FLOOR_MANAGER(155),
    /**
     * <code>NEW_STUDIO_ROLE_EDITOR = 156;</code>
     */
    NEW_STUDIO_ROLE_EDITOR(156),
    /**
     * <code>NEW_STUDIO_ROLE_OVERDUB_SECOND_ENGINEER = 157;</code>
     */
    NEW_STUDIO_ROLE_OVERDUB_SECOND_ENGINEER(157),
    /**
     * <code>NEW_STUDIO_ROLE_CENSOR = 158;</code>
     */
    NEW_STUDIO_ROLE_CENSOR(158),
    ;

    /**
     * <code>NEW_STUDIO_ROLE_PRODUCTION_MANAGER = 0;</code>
     */
    public static final int NEW_STUDIO_ROLE_PRODUCTION_MANAGER_VALUE = 0;
    /**
     * <code>NEW_STUDIO_ROLE_REDACTOR = 1;</code>
     */
    public static final int NEW_STUDIO_ROLE_REDACTOR_VALUE = 1;
    /**
     * <code>NEW_STUDIO_ROLE_SERIES_PRODUCER = 2;</code>
     */
    public static final int NEW_STUDIO_ROLE_SERIES_PRODUCER_VALUE = 2;
    /**
     * <code>NEW_STUDIO_ROLE_PRE_PRODUCTION = 3;</code>
     */
    public static final int NEW_STUDIO_ROLE_PRE_PRODUCTION_VALUE = 3;
    /**
     * <code>NEW_STUDIO_ROLE_CO_EXECUTIVE_PRODUCER = 4;</code>
     */
    public static final int NEW_STUDIO_ROLE_CO_EXECUTIVE_PRODUCER_VALUE = 4;
    /**
     * <code>NEW_STUDIO_ROLE_STUDIO_PERSONNEL = 5;</code>
     */
    public static final int NEW_STUDIO_ROLE_STUDIO_PERSONNEL_VALUE = 5;
    /**
     * <code>NEW_STUDIO_ROLE_TAPE_OPERATOR = 6;</code>
     */
    public static final int NEW_STUDIO_ROLE_TAPE_OPERATOR_VALUE = 6;
    /**
     * <code>NEW_STUDIO_ROLE_PRE_PRODUCTION_ENGINEER = 7;</code>
     */
    public static final int NEW_STUDIO_ROLE_PRE_PRODUCTION_ENGINEER_VALUE = 7;
    /**
     * <code>NEW_STUDIO_ROLE_MUSICIAN = 8;</code>
     */
    public static final int NEW_STUDIO_ROLE_MUSICIAN_VALUE = 8;
    /**
     * <code>NEW_STUDIO_ROLE_PRODUCTION_COMPANY = 9;</code>
     */
    public static final int NEW_STUDIO_ROLE_PRODUCTION_COMPANY_VALUE = 9;
    /**
     * <code>NEW_STUDIO_ROLE_CHIEF_LIGHTING_TECHNICIAN = 10;</code>
     */
    public static final int NEW_STUDIO_ROLE_CHIEF_LIGHTING_TECHNICIAN_VALUE = 10;
    /**
     * <code>NEW_STUDIO_ROLE_PYROTECHNICIAN = 11;</code>
     */
    public static final int NEW_STUDIO_ROLE_PYROTECHNICIAN_VALUE = 11;
    /**
     * <code>NEW_STUDIO_ROLE_SCRIPT_SUPERVISOR = 12;</code>
     */
    public static final int NEW_STUDIO_ROLE_SCRIPT_SUPERVISOR_VALUE = 12;
    /**
     * <code>NEW_STUDIO_ROLE_RESEARCH_TEAM_MEMBER = 13;</code>
     */
    public static final int NEW_STUDIO_ROLE_RESEARCH_TEAM_MEMBER_VALUE = 13;
    /**
     * <code>NEW_STUDIO_ROLE_USER_DEFINED = 14;</code>
     */
    public static final int NEW_STUDIO_ROLE_USER_DEFINED_VALUE = 14;
    /**
     * <code>NEW_STUDIO_ROLE_CONTINUITY_CHECKER = 15;</code>
     */
    public static final int NEW_STUDIO_ROLE_CONTINUITY_CHECKER_VALUE = 15;
    /**
     * <code>NEW_STUDIO_ROLE_ADDITIONAL_ENGINEER = 16;</code>
     */
    public static final int NEW_STUDIO_ROLE_ADDITIONAL_ENGINEER_VALUE = 16;
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_DIRECTOR = 17;</code>
     */
    public static final int NEW_STUDIO_ROLE_ASSISTANT_DIRECTOR_VALUE = 17;
    /**
     * <code>NEW_STUDIO_ROLE_PHOTOGRAPHY_DIRECTOR = 18;</code>
     */
    public static final int NEW_STUDIO_ROLE_PHOTOGRAPHY_DIRECTOR_VALUE = 18;
    /**
     * <code>NEW_STUDIO_ROLE_DIRECTOR = 19;</code>
     */
    public static final int NEW_STUDIO_ROLE_DIRECTOR_VALUE = 19;
    /**
     * <code>NEW_STUDIO_ROLE_EDITOR_IN_CHIEF = 20;</code>
     */
    public static final int NEW_STUDIO_ROLE_EDITOR_IN_CHIEF_VALUE = 20;
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN = 21;</code>
     */
    public static final int NEW_STUDIO_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN_VALUE = 21;
    /**
     * <code>NEW_STUDIO_ROLE_VOCAL_PRODUCER = 22;</code>
     */
    public static final int NEW_STUDIO_ROLE_VOCAL_PRODUCER_VALUE = 22;
    /**
     * <code>NEW_STUDIO_ROLE_SCENIC_OPERATIVE = 23;</code>
     */
    public static final int NEW_STUDIO_ROLE_SCENIC_OPERATIVE_VALUE = 23;
    /**
     * <code>NEW_STUDIO_ROLE_PUBLISHING_DIRECTOR = 24;</code>
     */
    public static final int NEW_STUDIO_ROLE_PUBLISHING_DIRECTOR_VALUE = 24;
    /**
     * <code>NEW_STUDIO_ROLE_STUDIO_PRODUCER = 25;</code>
     */
    public static final int NEW_STUDIO_ROLE_STUDIO_PRODUCER_VALUE = 25;
    /**
     * <code>NEW_STUDIO_ROLE_STAGE_DIRECTOR = 26;</code>
     */
    public static final int NEW_STUDIO_ROLE_STAGE_DIRECTOR_VALUE = 26;
    /**
     * <code>NEW_STUDIO_ROLE_ARMOURER = 27;</code>
     */
    public static final int NEW_STUDIO_ROLE_ARMOURER_VALUE = 27;
    /**
     * <code>NEW_STUDIO_ROLE_SOUND_MIXER = 28;</code>
     */
    public static final int NEW_STUDIO_ROLE_SOUND_MIXER_VALUE = 28;
    /**
     * <code>NEW_STUDIO_ROLE_SECOND_ENGINEER = 29;</code>
     */
    public static final int NEW_STUDIO_ROLE_SECOND_ENGINEER_VALUE = 29;
    /**
     * <code>NEW_STUDIO_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER = 30;</code>
     */
    public static final int NEW_STUDIO_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER_VALUE = 30;
    /**
     * <code>NEW_STUDIO_ROLE_CAMERA_OPERATOR = 31;</code>
     */
    public static final int NEW_STUDIO_ROLE_CAMERA_OPERATOR_VALUE = 31;
    /**
     * <code>NEW_STUDIO_ROLE_OVERDUB_ENGINEER = 32;</code>
     */
    public static final int NEW_STUDIO_ROLE_OVERDUB_ENGINEER_VALUE = 32;
    /**
     * <code>NEW_STUDIO_ROLE_VIDEOGRAPHER = 33;</code>
     */
    public static final int NEW_STUDIO_ROLE_VIDEOGRAPHER_VALUE = 33;
    /**
     * <code>NEW_STUDIO_ROLE_SUBTITLES_EDITOR = 34;</code>
     */
    public static final int NEW_STUDIO_ROLE_SUBTITLES_EDITOR_VALUE = 34;
    /**
     * <code>NEW_STUDIO_ROLE_A_AND_R_COORDINATOR = 35;</code>
     */
    public static final int NEW_STUDIO_ROLE_A_AND_R_COORDINATOR_VALUE = 35;
    /**
     * <code>NEW_STUDIO_ROLE_VISUAL_EDITOR = 36;</code>
     */
    public static final int NEW_STUDIO_ROLE_VISUAL_EDITOR_VALUE = 36;
    /**
     * <code>NEW_STUDIO_ROLE_MIXING_ENGINEER = 37;</code>
     */
    public static final int NEW_STUDIO_ROLE_MIXING_ENGINEER_VALUE = 37;
    /**
     * <code>NEW_STUDIO_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR = 38;</code>
     */
    public static final int NEW_STUDIO_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR_VALUE = 38;
    /**
     * <code>NEW_STUDIO_ROLE_BINDER = 39;</code>
     */
    public static final int NEW_STUDIO_ROLE_BINDER_VALUE = 39;
    /**
     * <code>NEW_STUDIO_ROLE_GRIP = 40;</code>
     */
    public static final int NEW_STUDIO_ROLE_GRIP_VALUE = 40;
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_CAMERA_OPERATOR = 41;</code>
     */
    public static final int NEW_STUDIO_ROLE_ASSISTANT_CAMERA_OPERATOR_VALUE = 41;
    /**
     * <code>NEW_STUDIO_ROLE_FILM_DIRECTOR = 42;</code>
     */
    public static final int NEW_STUDIO_ROLE_FILM_DIRECTOR_VALUE = 42;
    /**
     * <code>NEW_STUDIO_ROLE_CLAPPER_LOADER = 43;</code>
     */
    public static final int NEW_STUDIO_ROLE_CLAPPER_LOADER_VALUE = 43;
    /**
     * <code>NEW_STUDIO_ROLE_REMIXING_ENGINEER = 44;</code>
     */
    public static final int NEW_STUDIO_ROLE_REMIXING_ENGINEER_VALUE = 44;
    /**
     * <code>NEW_STUDIO_ROLE_BOOKPLATE_DESIGNER = 45;</code>
     */
    public static final int NEW_STUDIO_ROLE_BOOKPLATE_DESIGNER_VALUE = 45;
    /**
     * <code>NEW_STUDIO_ROLE_TRACKING_SECOND_ENGINEER = 46;</code>
     */
    public static final int NEW_STUDIO_ROLE_TRACKING_SECOND_ENGINEER_VALUE = 46;
    /**
     * <code>NEW_STUDIO_ROLE_BOOK_DESIGNER = 47;</code>
     */
    public static final int NEW_STUDIO_ROLE_BOOK_DESIGNER_VALUE = 47;
    /**
     * <code>NEW_STUDIO_ROLE_HAIRDRESSER = 48;</code>
     */
    public static final int NEW_STUDIO_ROLE_HAIRDRESSER_VALUE = 48;
    /**
     * <code>NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER = 49;</code>
     */
    public static final int NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER_VALUE = 49;
    /**
     * <code>NEW_STUDIO_ROLE_COSTUME_DESIGNER = 50;</code>
     */
    public static final int NEW_STUDIO_ROLE_COSTUME_DESIGNER_VALUE = 50;
    /**
     * <code>NEW_STUDIO_ROLE_MAKE_UP_ARTIST = 51;</code>
     */
    public static final int NEW_STUDIO_ROLE_MAKE_UP_ARTIST_VALUE = 51;
    /**
     * <code>NEW_STUDIO_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT = 52;</code>
     */
    public static final int NEW_STUDIO_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT_VALUE = 52;
    /**
     * <code>NEW_STUDIO_ROLE_LOCATION_MANAGER = 53;</code>
     */
    public static final int NEW_STUDIO_ROLE_LOCATION_MANAGER_VALUE = 53;
    /**
     * <code>NEW_STUDIO_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER = 54;</code>
     */
    public static final int NEW_STUDIO_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER_VALUE = 54;
    /**
     * <code>NEW_STUDIO_ROLE_STRING_ENGINEER = 55;</code>
     */
    public static final int NEW_STUDIO_ROLE_STRING_ENGINEER_VALUE = 55;
    /**
     * <code>NEW_STUDIO_ROLE_PROGRAM_PRODUCER = 56;</code>
     */
    public static final int NEW_STUDIO_ROLE_PROGRAM_PRODUCER_VALUE = 56;
    /**
     * <code>NEW_STUDIO_ROLE_REMIXING_SECOND_ENGINEER = 57;</code>
     */
    public static final int NEW_STUDIO_ROLE_REMIXING_SECOND_ENGINEER_VALUE = 57;
    /**
     * <code>NEW_STUDIO_ROLE_GRAPHIC_ASSISTANT = 58;</code>
     */
    public static final int NEW_STUDIO_ROLE_GRAPHIC_ASSISTANT_VALUE = 58;
    /**
     * <code>NEW_STUDIO_ROLE_MIXING_SECOND_ENGINEER = 59;</code>
     */
    public static final int NEW_STUDIO_ROLE_MIXING_SECOND_ENGINEER_VALUE = 59;
    /**
     * <code>NEW_STUDIO_ROLE_LEADMAN = 60;</code>
     */
    public static final int NEW_STUDIO_ROLE_LEADMAN_VALUE = 60;
    /**
     * <code>NEW_STUDIO_ROLE_TONMEISTER = 61;</code>
     */
    public static final int NEW_STUDIO_ROLE_TONMEISTER_VALUE = 61;
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_VISUAL_EDITOR = 62;</code>
     */
    public static final int NEW_STUDIO_ROLE_ASSISTANT_VISUAL_EDITOR_VALUE = 62;
    /**
     * <code>NEW_STUDIO_ROLE_PRODUCTION_DEPARTMENT = 63;</code>
     */
    public static final int NEW_STUDIO_ROLE_PRODUCTION_DEPARTMENT_VALUE = 63;
    /**
     * <code>NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER = 64;</code>
     */
    public static final int NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER_VALUE = 64;
    /**
     * <code>NEW_STUDIO_ROLE_DRESSER = 65;</code>
     */
    public static final int NEW_STUDIO_ROLE_DRESSER_VALUE = 65;
    /**
     * <code>NEW_STUDIO_ROLE_ANIMATOR = 66;</code>
     */
    public static final int NEW_STUDIO_ROLE_ANIMATOR_VALUE = 66;
    /**
     * <code>NEW_STUDIO_ROLE_LIGHTING_DIRECTOR = 67;</code>
     */
    public static final int NEW_STUDIO_ROLE_LIGHTING_DIRECTOR_VALUE = 67;
    /**
     * <code>NEW_STUDIO_ROLE_LIGHTING_TECHNICIAN = 68;</code>
     */
    public static final int NEW_STUDIO_ROLE_LIGHTING_TECHNICIAN_VALUE = 68;
    /**
     * <code>NEW_STUDIO_ROLE_FILM_DISTRIBUTOR = 69;</code>
     */
    public static final int NEW_STUDIO_ROLE_FILM_DISTRIBUTOR_VALUE = 69;
    /**
     * <code>NEW_STUDIO_ROLE_INITIAL_PRODUCER = 70;</code>
     */
    public static final int NEW_STUDIO_ROLE_INITIAL_PRODUCER_VALUE = 70;
    /**
     * <code>NEW_STUDIO_ROLE_CORRESPONDENT = 71;</code>
     */
    public static final int NEW_STUDIO_ROLE_CORRESPONDENT_VALUE = 71;
    /**
     * <code>NEW_STUDIO_ROLE_CONSULTANT = 72;</code>
     */
    public static final int NEW_STUDIO_ROLE_CONSULTANT_VALUE = 72;
    /**
     * <code>NEW_STUDIO_ROLE_SUBTITLES_TRANSLATOR = 73;</code>
     */
    public static final int NEW_STUDIO_ROLE_SUBTITLES_TRANSLATOR_VALUE = 73;
    /**
     * <code>NEW_STUDIO_ROLE_ARTIST_VOCAL_ENGINEER = 74;</code>
     */
    public static final int NEW_STUDIO_ROLE_ARTIST_VOCAL_ENGINEER_VALUE = 74;
    /**
     * <code>NEW_STUDIO_ROLE_RIGGER = 75;</code>
     */
    public static final int NEW_STUDIO_ROLE_RIGGER_VALUE = 75;
    /**
     * <code>NEW_STUDIO_ROLE_ARTIST_VOCAL_SECOND_ENGINEER = 76;</code>
     */
    public static final int NEW_STUDIO_ROLE_ARTIST_VOCAL_SECOND_ENGINEER_VALUE = 76;
    /**
     * <code>NEW_STUDIO_ROLE_REPETITEUR = 77;</code>
     */
    public static final int NEW_STUDIO_ROLE_REPETITEUR_VALUE = 77;
    /**
     * <code>NEW_STUDIO_ROLE_RESTAGER = 78;</code>
     */
    public static final int NEW_STUDIO_ROLE_RESTAGER_VALUE = 78;
    /**
     * <code>NEW_STUDIO_ROLE_GRAPHIC_DESIGNER = 79;</code>
     */
    public static final int NEW_STUDIO_ROLE_GRAPHIC_DESIGNER_VALUE = 79;
    /**
     * <code>NEW_STUDIO_ROLE_BROADCAST_JOURNALIST = 80;</code>
     */
    public static final int NEW_STUDIO_ROLE_BROADCAST_JOURNALIST_VALUE = 80;
    /**
     * <code>NEW_STUDIO_ROLE_DIGITAL_EDITING_ENGINEER = 81;</code>
     */
    public static final int NEW_STUDIO_ROLE_DIGITAL_EDITING_ENGINEER_VALUE = 81;
    /**
     * <code>NEW_STUDIO_ROLE_BINDING_DESIGNER = 82;</code>
     */
    public static final int NEW_STUDIO_ROLE_BINDING_DESIGNER_VALUE = 82;
    /**
     * <code>NEW_STUDIO_ROLE_DIALOGUE_COACH = 83;</code>
     */
    public static final int NEW_STUDIO_ROLE_DIALOGUE_COACH_VALUE = 83;
    /**
     * <code>NEW_STUDIO_ROLE_FIGHT_DIRECTOR = 84;</code>
     */
    public static final int NEW_STUDIO_ROLE_FIGHT_DIRECTOR_VALUE = 84;
    /**
     * <code>NEW_STUDIO_ROLE_COMPILATION_PRODUCER = 85;</code>
     */
    public static final int NEW_STUDIO_ROLE_COMPILATION_PRODUCER_VALUE = 85;
    /**
     * <code>NEW_STUDIO_ROLE_CONTRACTOR = 86;</code>
     */
    public static final int NEW_STUDIO_ROLE_CONTRACTOR_VALUE = 86;
    /**
     * <code>NEW_STUDIO_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER = 87;</code>
     */
    public static final int NEW_STUDIO_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER_VALUE = 87;
    /**
     * <code>NEW_STUDIO_ROLE_ENCODER = 88;</code>
     */
    public static final int NEW_STUDIO_ROLE_ENCODER_VALUE = 88;
    /**
     * <code>NEW_STUDIO_ROLE_MANUFACTURER = 89;</code>
     */
    public static final int NEW_STUDIO_ROLE_MANUFACTURER_VALUE = 89;
    /**
     * <code>NEW_STUDIO_ROLE_RECORDING_ENGINEER = 90;</code>
     */
    public static final int NEW_STUDIO_ROLE_RECORDING_ENGINEER_VALUE = 90;
    /**
     * <code>NEW_STUDIO_ROLE_STUDIO_CONDUCTOR = 91;</code>
     */
    public static final int NEW_STUDIO_ROLE_STUDIO_CONDUCTOR_VALUE = 91;
    /**
     * <code>NEW_STUDIO_ROLE_ART_DIRECTOR = 92;</code>
     */
    public static final int NEW_STUDIO_ROLE_ART_DIRECTOR_VALUE = 92;
    /**
     * <code>NEW_STUDIO_ROLE_KEY_GRIP = 93;</code>
     */
    public static final int NEW_STUDIO_ROLE_KEY_GRIP_VALUE = 93;
    /**
     * <code>NEW_STUDIO_ROLE_RECORDING_SECOND_ENGINEER = 94;</code>
     */
    public static final int NEW_STUDIO_ROLE_RECORDING_SECOND_ENGINEER_VALUE = 94;
    /**
     * <code>NEW_STUDIO_ROLE_COVER_DESIGNER = 95;</code>
     */
    public static final int NEW_STUDIO_ROLE_COVER_DESIGNER_VALUE = 95;
    /**
     * <code>NEW_STUDIO_ROLE_DISTRIBUTION_COMPANY = 96;</code>
     */
    public static final int NEW_STUDIO_ROLE_DISTRIBUTION_COMPANY_VALUE = 96;
    /**
     * <code>NEW_STUDIO_ROLE_FILM_EDITOR = 97;</code>
     */
    public static final int NEW_STUDIO_ROLE_FILM_EDITOR_VALUE = 97;
    /**
     * <code>NEW_STUDIO_ROLE_FILM_SOUND_ENGINEER = 98;</code>
     */
    public static final int NEW_STUDIO_ROLE_FILM_SOUND_ENGINEER_VALUE = 98;
    /**
     * <code>NEW_STUDIO_ROLE_STRING_PRODUCER = 99;</code>
     */
    public static final int NEW_STUDIO_ROLE_STRING_PRODUCER_VALUE = 99;
    /**
     * <code>NEW_STUDIO_ROLE_TRACKING_ENGINEER = 100;</code>
     */
    public static final int NEW_STUDIO_ROLE_TRACKING_ENGINEER_VALUE = 100;
    /**
     * <code>NEW_STUDIO_ROLE_SET_DESIGNER = 101;</code>
     */
    public static final int NEW_STUDIO_ROLE_SET_DESIGNER_VALUE = 101;
    /**
     * <code>NEW_STUDIO_ROLE_PROGRAMMING_ENGINEER = 102;</code>
     */
    public static final int NEW_STUDIO_ROLE_PROGRAMMING_ENGINEER_VALUE = 102;
    /**
     * <code>NEW_STUDIO_ROLE_ANNOTATOR = 103;</code>
     */
    public static final int NEW_STUDIO_ROLE_ANNOTATOR_VALUE = 103;
    /**
     * <code>NEW_STUDIO_ROLE_DUBBER = 104;</code>
     */
    public static final int NEW_STUDIO_ROLE_DUBBER_VALUE = 104;
    /**
     * <code>NEW_STUDIO_ROLE_ASSISTANT_PRODUCER = 105;</code>
     */
    public static final int NEW_STUDIO_ROLE_ASSISTANT_PRODUCER_VALUE = 105;
    /**
     * <code>NEW_STUDIO_ROLE_FOLEY_EDITOR = 106;</code>
     */
    public static final int NEW_STUDIO_ROLE_FOLEY_EDITOR_VALUE = 106;
    /**
     * <code>NEW_STUDIO_ROLE_MATTE_ARTIST = 107;</code>
     */
    public static final int NEW_STUDIO_ROLE_MATTE_ARTIST_VALUE = 107;
    /**
     * <code>NEW_STUDIO_ROLE_DIGITAL_EDITING_SECOND_ENGINEER = 108;</code>
     */
    public static final int NEW_STUDIO_ROLE_DIGITAL_EDITING_SECOND_ENGINEER_VALUE = 108;
    /**
     * <code>NEW_STUDIO_ROLE_REISSUE_PRODUCER = 109;</code>
     */
    public static final int NEW_STUDIO_ROLE_REISSUE_PRODUCER_VALUE = 109;
    /**
     * <code>NEW_STUDIO_ROLE_CARPENTER = 110;</code>
     */
    public static final int NEW_STUDIO_ROLE_CARPENTER_VALUE = 110;
    /**
     * <code>NEW_STUDIO_ROLE_MUSIC_DIRECTOR = 111;</code>
     */
    public static final int NEW_STUDIO_ROLE_MUSIC_DIRECTOR_VALUE = 111;
    /**
     * <code>NEW_STUDIO_ROLE_POST_PRODUCER = 112;</code>
     */
    public static final int NEW_STUDIO_ROLE_POST_PRODUCER_VALUE = 112;
    /**
     * <code>NEW_STUDIO_ROLE_RUNNER = 113;</code>
     */
    public static final int NEW_STUDIO_ROLE_RUNNER_VALUE = 113;
    /**
     * <code>NEW_STUDIO_ROLE_CHOREOGRAPHER = 114;</code>
     */
    public static final int NEW_STUDIO_ROLE_CHOREOGRAPHER_VALUE = 114;
    /**
     * <code>NEW_STUDIO_ROLE_COMMISSIONING_BROADCASTER = 115;</code>
     */
    public static final int NEW_STUDIO_ROLE_COMMISSIONING_BROADCASTER_VALUE = 115;
    /**
     * <code>NEW_STUDIO_ROLE_PROPERTY_MANAGER = 116;</code>
     */
    public static final int NEW_STUDIO_ROLE_PROPERTY_MANAGER_VALUE = 116;
    /**
     * <code>NEW_STUDIO_ROLE_EXPERT = 117;</code>
     */
    public static final int NEW_STUDIO_ROLE_EXPERT_VALUE = 117;
    /**
     * <code>NEW_STUDIO_ROLE_ANIMAL_TRAINER = 118;</code>
     */
    public static final int NEW_STUDIO_ROLE_ANIMAL_TRAINER_VALUE = 118;
    /**
     * <code>NEW_STUDIO_ROLE_FOLEY_MIXER = 119;</code>
     */
    public static final int NEW_STUDIO_ROLE_FOLEY_MIXER_VALUE = 119;
    /**
     * <code>NEW_STUDIO_ROLE_MASTERING_SECOND_ENGINEER = 120;</code>
     */
    public static final int NEW_STUDIO_ROLE_MASTERING_SECOND_ENGINEER_VALUE = 120;
    /**
     * <code>NEW_STUDIO_ROLE_BOOKJACK_DESIGNER = 121;</code>
     */
    public static final int NEW_STUDIO_ROLE_BOOKJACK_DESIGNER_VALUE = 121;
    /**
     * <code>NEW_STUDIO_ROLE_BROADCAST_ASSISTANT = 122;</code>
     */
    public static final int NEW_STUDIO_ROLE_BROADCAST_ASSISTANT_VALUE = 122;
    /**
     * <code>NEW_STUDIO_ROLE_SET_DRESSER = 123;</code>
     */
    public static final int NEW_STUDIO_ROLE_SET_DRESSER_VALUE = 123;
    /**
     * <code>NEW_STUDIO_ROLE_DESIGNER = 124;</code>
     */
    public static final int NEW_STUDIO_ROLE_DESIGNER_VALUE = 124;
    /**
     * <code>NEW_STUDIO_ROLE_ENGINEER = 125;</code>
     */
    public static final int NEW_STUDIO_ROLE_ENGINEER_VALUE = 125;
    /**
     * <code>NEW_STUDIO_ROLE_FILM_PRODUCER = 126;</code>
     */
    public static final int NEW_STUDIO_ROLE_FILM_PRODUCER_VALUE = 126;
    /**
     * <code>NEW_STUDIO_ROLE_CO_PRODUCER = 127;</code>
     */
    public static final int NEW_STUDIO_ROLE_CO_PRODUCER_VALUE = 127;
    /**
     * <code>NEW_STUDIO_ROLE_MASTERING_ENGINEER = 128;</code>
     */
    public static final int NEW_STUDIO_ROLE_MASTERING_ENGINEER_VALUE = 128;
    /**
     * <code>NEW_STUDIO_ROLE_BOOK_PRODUCER = 129;</code>
     */
    public static final int NEW_STUDIO_ROLE_BOOK_PRODUCER_VALUE = 129;
    /**
     * <code>NEW_STUDIO_ROLE_RESEARCHER = 130;</code>
     */
    public static final int NEW_STUDIO_ROLE_RESEARCHER_VALUE = 130;
    /**
     * <code>NEW_STUDIO_ROLE_SOUND_DESIGNER = 131;</code>
     */
    public static final int NEW_STUDIO_ROLE_SOUND_DESIGNER_VALUE = 131;
    /**
     * <code>NEW_STUDIO_ROLE_GREENSMAN = 132;</code>
     */
    public static final int NEW_STUDIO_ROLE_GREENSMAN_VALUE = 132;
    /**
     * <code>NEW_STUDIO_ROLE_SPECIAL_EFFECTS_TECHNICIAN = 133;</code>
     */
    public static final int NEW_STUDIO_ROLE_SPECIAL_EFFECTS_TECHNICIAN_VALUE = 133;
    /**
     * <code>NEW_STUDIO_ROLE_SECOND_UNIT_DIRECTOR = 134;</code>
     */
    public static final int NEW_STUDIO_ROLE_SECOND_UNIT_DIRECTOR_VALUE = 134;
    /**
     * <code>NEW_STUDIO_ROLE_WARDROBE = 135;</code>
     */
    public static final int NEW_STUDIO_ROLE_WARDROBE_VALUE = 135;
    /**
     * <code>NEW_STUDIO_ROLE_FOCUS_PULLER = 136;</code>
     */
    public static final int NEW_STUDIO_ROLE_FOCUS_PULLER_VALUE = 136;
    /**
     * <code>NEW_STUDIO_ROLE_RESEARCH_TEAM_HEAD = 137;</code>
     */
    public static final int NEW_STUDIO_ROLE_RESEARCH_TEAM_HEAD_VALUE = 137;
    /**
     * <code>NEW_STUDIO_ROLE_VISUAL_EFFECTS_TECHNICIAN = 138;</code>
     */
    public static final int NEW_STUDIO_ROLE_VISUAL_EFFECTS_TECHNICIAN_VALUE = 138;
    /**
     * <code>NEW_STUDIO_ROLE_SOUND_RECORDIST = 139;</code>
     */
    public static final int NEW_STUDIO_ROLE_SOUND_RECORDIST_VALUE = 139;
    /**
     * <code>NEW_STUDIO_ROLE_TRANSPORTATION_MANAGER = 140;</code>
     */
    public static final int NEW_STUDIO_ROLE_TRANSPORTATION_MANAGER_VALUE = 140;
    /**
     * <code>NEW_STUDIO_ROLE_VISION_MIXER = 141;</code>
     */
    public static final int NEW_STUDIO_ROLE_VISION_MIXER_VALUE = 141;
    /**
     * <code>NEW_STUDIO_ROLE_TECHNICAL_DIRECTOR = 142;</code>
     */
    public static final int NEW_STUDIO_ROLE_TECHNICAL_DIRECTOR_VALUE = 142;
    /**
     * <code>NEW_STUDIO_ROLE_NEWS_PRODUCER = 143;</code>
     */
    public static final int NEW_STUDIO_ROLE_NEWS_PRODUCER_VALUE = 143;
    /**
     * <code>NEW_STUDIO_ROLE_SPONSOR = 144;</code>
     */
    public static final int NEW_STUDIO_ROLE_SPONSOR_VALUE = 144;
    /**
     * <code>NEW_STUDIO_ROLE_PRODUCTION_SECRETARY = 145;</code>
     */
    public static final int NEW_STUDIO_ROLE_PRODUCTION_SECRETARY_VALUE = 145;
    /**
     * <code>NEW_STUDIO_ROLE_FOLEY_ARTIST = 146;</code>
     */
    public static final int NEW_STUDIO_ROLE_FOLEY_ARTIST_VALUE = 146;
    /**
     * <code>NEW_STUDIO_ROLE_VIDEO_PRODUCER = 147;</code>
     */
    public static final int NEW_STUDIO_ROLE_VIDEO_PRODUCER_VALUE = 147;
    /**
     * <code>NEW_STUDIO_ROLE_SCIENTIFIC_ADVISOR = 148;</code>
     */
    public static final int NEW_STUDIO_ROLE_SCIENTIFIC_ADVISOR_VALUE = 148;
    /**
     * <code>NEW_STUDIO_ROLE_AURAL_TRAINER = 149;</code>
     */
    public static final int NEW_STUDIO_ROLE_AURAL_TRAINER_VALUE = 149;
    /**
     * <code>NEW_STUDIO_ROLE_EDITOR_OF_THE_DAY = 150;</code>
     */
    public static final int NEW_STUDIO_ROLE_EDITOR_OF_THE_DAY_VALUE = 150;
    /**
     * <code>NEW_STUDIO_ROLE_PROGRAM_PROPOSAL_WRITER = 151;</code>
     */
    public static final int NEW_STUDIO_ROLE_PROGRAM_PROPOSAL_WRITER_VALUE = 151;
    /**
     * <code>NEW_STUDIO_ROLE_SECOND_ASSISTANT_DIRECTOR = 152;</code>
     */
    public static final int NEW_STUDIO_ROLE_SECOND_ASSISTANT_DIRECTOR_VALUE = 152;
    /**
     * <code>NEW_STUDIO_ROLE_CASTING_DIRECTOR = 153;</code>
     */
    public static final int NEW_STUDIO_ROLE_CASTING_DIRECTOR_VALUE = 153;
    /**
     * <code>NEW_STUDIO_ROLE_EXECUTIVE_PRODUCER = 154;</code>
     */
    public static final int NEW_STUDIO_ROLE_EXECUTIVE_PRODUCER_VALUE = 154;
    /**
     * <code>NEW_STUDIO_ROLE_FLOOR_MANAGER = 155;</code>
     */
    public static final int NEW_STUDIO_ROLE_FLOOR_MANAGER_VALUE = 155;
    /**
     * <code>NEW_STUDIO_ROLE_EDITOR = 156;</code>
     */
    public static final int NEW_STUDIO_ROLE_EDITOR_VALUE = 156;
    /**
     * <code>NEW_STUDIO_ROLE_OVERDUB_SECOND_ENGINEER = 157;</code>
     */
    public static final int NEW_STUDIO_ROLE_OVERDUB_SECOND_ENGINEER_VALUE = 157;
    /**
     * <code>NEW_STUDIO_ROLE_CENSOR = 158;</code>
     */
    public static final int NEW_STUDIO_ROLE_CENSOR_VALUE = 158;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NewStudioRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static NewStudioRole forNumber(int value) {
      switch (value) {
        case 0: return NEW_STUDIO_ROLE_PRODUCTION_MANAGER;
        case 1: return NEW_STUDIO_ROLE_REDACTOR;
        case 2: return NEW_STUDIO_ROLE_SERIES_PRODUCER;
        case 3: return NEW_STUDIO_ROLE_PRE_PRODUCTION;
        case 4: return NEW_STUDIO_ROLE_CO_EXECUTIVE_PRODUCER;
        case 5: return NEW_STUDIO_ROLE_STUDIO_PERSONNEL;
        case 6: return NEW_STUDIO_ROLE_TAPE_OPERATOR;
        case 7: return NEW_STUDIO_ROLE_PRE_PRODUCTION_ENGINEER;
        case 8: return NEW_STUDIO_ROLE_MUSICIAN;
        case 9: return NEW_STUDIO_ROLE_PRODUCTION_COMPANY;
        case 10: return NEW_STUDIO_ROLE_CHIEF_LIGHTING_TECHNICIAN;
        case 11: return NEW_STUDIO_ROLE_PYROTECHNICIAN;
        case 12: return NEW_STUDIO_ROLE_SCRIPT_SUPERVISOR;
        case 13: return NEW_STUDIO_ROLE_RESEARCH_TEAM_MEMBER;
        case 14: return NEW_STUDIO_ROLE_USER_DEFINED;
        case 15: return NEW_STUDIO_ROLE_CONTINUITY_CHECKER;
        case 16: return NEW_STUDIO_ROLE_ADDITIONAL_ENGINEER;
        case 17: return NEW_STUDIO_ROLE_ASSISTANT_DIRECTOR;
        case 18: return NEW_STUDIO_ROLE_PHOTOGRAPHY_DIRECTOR;
        case 19: return NEW_STUDIO_ROLE_DIRECTOR;
        case 20: return NEW_STUDIO_ROLE_EDITOR_IN_CHIEF;
        case 21: return NEW_STUDIO_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN;
        case 22: return NEW_STUDIO_ROLE_VOCAL_PRODUCER;
        case 23: return NEW_STUDIO_ROLE_SCENIC_OPERATIVE;
        case 24: return NEW_STUDIO_ROLE_PUBLISHING_DIRECTOR;
        case 25: return NEW_STUDIO_ROLE_STUDIO_PRODUCER;
        case 26: return NEW_STUDIO_ROLE_STAGE_DIRECTOR;
        case 27: return NEW_STUDIO_ROLE_ARMOURER;
        case 28: return NEW_STUDIO_ROLE_SOUND_MIXER;
        case 29: return NEW_STUDIO_ROLE_SECOND_ENGINEER;
        case 30: return NEW_STUDIO_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER;
        case 31: return NEW_STUDIO_ROLE_CAMERA_OPERATOR;
        case 32: return NEW_STUDIO_ROLE_OVERDUB_ENGINEER;
        case 33: return NEW_STUDIO_ROLE_VIDEOGRAPHER;
        case 34: return NEW_STUDIO_ROLE_SUBTITLES_EDITOR;
        case 35: return NEW_STUDIO_ROLE_A_AND_R_COORDINATOR;
        case 36: return NEW_STUDIO_ROLE_VISUAL_EDITOR;
        case 37: return NEW_STUDIO_ROLE_MIXING_ENGINEER;
        case 38: return NEW_STUDIO_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR;
        case 39: return NEW_STUDIO_ROLE_BINDER;
        case 40: return NEW_STUDIO_ROLE_GRIP;
        case 41: return NEW_STUDIO_ROLE_ASSISTANT_CAMERA_OPERATOR;
        case 42: return NEW_STUDIO_ROLE_FILM_DIRECTOR;
        case 43: return NEW_STUDIO_ROLE_CLAPPER_LOADER;
        case 44: return NEW_STUDIO_ROLE_REMIXING_ENGINEER;
        case 45: return NEW_STUDIO_ROLE_BOOKPLATE_DESIGNER;
        case 46: return NEW_STUDIO_ROLE_TRACKING_SECOND_ENGINEER;
        case 47: return NEW_STUDIO_ROLE_BOOK_DESIGNER;
        case 48: return NEW_STUDIO_ROLE_HAIRDRESSER;
        case 49: return NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER;
        case 50: return NEW_STUDIO_ROLE_COSTUME_DESIGNER;
        case 51: return NEW_STUDIO_ROLE_MAKE_UP_ARTIST;
        case 52: return NEW_STUDIO_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT;
        case 53: return NEW_STUDIO_ROLE_LOCATION_MANAGER;
        case 54: return NEW_STUDIO_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER;
        case 55: return NEW_STUDIO_ROLE_STRING_ENGINEER;
        case 56: return NEW_STUDIO_ROLE_PROGRAM_PRODUCER;
        case 57: return NEW_STUDIO_ROLE_REMIXING_SECOND_ENGINEER;
        case 58: return NEW_STUDIO_ROLE_GRAPHIC_ASSISTANT;
        case 59: return NEW_STUDIO_ROLE_MIXING_SECOND_ENGINEER;
        case 60: return NEW_STUDIO_ROLE_LEADMAN;
        case 61: return NEW_STUDIO_ROLE_TONMEISTER;
        case 62: return NEW_STUDIO_ROLE_ASSISTANT_VISUAL_EDITOR;
        case 63: return NEW_STUDIO_ROLE_PRODUCTION_DEPARTMENT;
        case 64: return NEW_STUDIO_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER;
        case 65: return NEW_STUDIO_ROLE_DRESSER;
        case 66: return NEW_STUDIO_ROLE_ANIMATOR;
        case 67: return NEW_STUDIO_ROLE_LIGHTING_DIRECTOR;
        case 68: return NEW_STUDIO_ROLE_LIGHTING_TECHNICIAN;
        case 69: return NEW_STUDIO_ROLE_FILM_DISTRIBUTOR;
        case 70: return NEW_STUDIO_ROLE_INITIAL_PRODUCER;
        case 71: return NEW_STUDIO_ROLE_CORRESPONDENT;
        case 72: return NEW_STUDIO_ROLE_CONSULTANT;
        case 73: return NEW_STUDIO_ROLE_SUBTITLES_TRANSLATOR;
        case 74: return NEW_STUDIO_ROLE_ARTIST_VOCAL_ENGINEER;
        case 75: return NEW_STUDIO_ROLE_RIGGER;
        case 76: return NEW_STUDIO_ROLE_ARTIST_VOCAL_SECOND_ENGINEER;
        case 77: return NEW_STUDIO_ROLE_REPETITEUR;
        case 78: return NEW_STUDIO_ROLE_RESTAGER;
        case 79: return NEW_STUDIO_ROLE_GRAPHIC_DESIGNER;
        case 80: return NEW_STUDIO_ROLE_BROADCAST_JOURNALIST;
        case 81: return NEW_STUDIO_ROLE_DIGITAL_EDITING_ENGINEER;
        case 82: return NEW_STUDIO_ROLE_BINDING_DESIGNER;
        case 83: return NEW_STUDIO_ROLE_DIALOGUE_COACH;
        case 84: return NEW_STUDIO_ROLE_FIGHT_DIRECTOR;
        case 85: return NEW_STUDIO_ROLE_COMPILATION_PRODUCER;
        case 86: return NEW_STUDIO_ROLE_CONTRACTOR;
        case 87: return NEW_STUDIO_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER;
        case 88: return NEW_STUDIO_ROLE_ENCODER;
        case 89: return NEW_STUDIO_ROLE_MANUFACTURER;
        case 90: return NEW_STUDIO_ROLE_RECORDING_ENGINEER;
        case 91: return NEW_STUDIO_ROLE_STUDIO_CONDUCTOR;
        case 92: return NEW_STUDIO_ROLE_ART_DIRECTOR;
        case 93: return NEW_STUDIO_ROLE_KEY_GRIP;
        case 94: return NEW_STUDIO_ROLE_RECORDING_SECOND_ENGINEER;
        case 95: return NEW_STUDIO_ROLE_COVER_DESIGNER;
        case 96: return NEW_STUDIO_ROLE_DISTRIBUTION_COMPANY;
        case 97: return NEW_STUDIO_ROLE_FILM_EDITOR;
        case 98: return NEW_STUDIO_ROLE_FILM_SOUND_ENGINEER;
        case 99: return NEW_STUDIO_ROLE_STRING_PRODUCER;
        case 100: return NEW_STUDIO_ROLE_TRACKING_ENGINEER;
        case 101: return NEW_STUDIO_ROLE_SET_DESIGNER;
        case 102: return NEW_STUDIO_ROLE_PROGRAMMING_ENGINEER;
        case 103: return NEW_STUDIO_ROLE_ANNOTATOR;
        case 104: return NEW_STUDIO_ROLE_DUBBER;
        case 105: return NEW_STUDIO_ROLE_ASSISTANT_PRODUCER;
        case 106: return NEW_STUDIO_ROLE_FOLEY_EDITOR;
        case 107: return NEW_STUDIO_ROLE_MATTE_ARTIST;
        case 108: return NEW_STUDIO_ROLE_DIGITAL_EDITING_SECOND_ENGINEER;
        case 109: return NEW_STUDIO_ROLE_REISSUE_PRODUCER;
        case 110: return NEW_STUDIO_ROLE_CARPENTER;
        case 111: return NEW_STUDIO_ROLE_MUSIC_DIRECTOR;
        case 112: return NEW_STUDIO_ROLE_POST_PRODUCER;
        case 113: return NEW_STUDIO_ROLE_RUNNER;
        case 114: return NEW_STUDIO_ROLE_CHOREOGRAPHER;
        case 115: return NEW_STUDIO_ROLE_COMMISSIONING_BROADCASTER;
        case 116: return NEW_STUDIO_ROLE_PROPERTY_MANAGER;
        case 117: return NEW_STUDIO_ROLE_EXPERT;
        case 118: return NEW_STUDIO_ROLE_ANIMAL_TRAINER;
        case 119: return NEW_STUDIO_ROLE_FOLEY_MIXER;
        case 120: return NEW_STUDIO_ROLE_MASTERING_SECOND_ENGINEER;
        case 121: return NEW_STUDIO_ROLE_BOOKJACK_DESIGNER;
        case 122: return NEW_STUDIO_ROLE_BROADCAST_ASSISTANT;
        case 123: return NEW_STUDIO_ROLE_SET_DRESSER;
        case 124: return NEW_STUDIO_ROLE_DESIGNER;
        case 125: return NEW_STUDIO_ROLE_ENGINEER;
        case 126: return NEW_STUDIO_ROLE_FILM_PRODUCER;
        case 127: return NEW_STUDIO_ROLE_CO_PRODUCER;
        case 128: return NEW_STUDIO_ROLE_MASTERING_ENGINEER;
        case 129: return NEW_STUDIO_ROLE_BOOK_PRODUCER;
        case 130: return NEW_STUDIO_ROLE_RESEARCHER;
        case 131: return NEW_STUDIO_ROLE_SOUND_DESIGNER;
        case 132: return NEW_STUDIO_ROLE_GREENSMAN;
        case 133: return NEW_STUDIO_ROLE_SPECIAL_EFFECTS_TECHNICIAN;
        case 134: return NEW_STUDIO_ROLE_SECOND_UNIT_DIRECTOR;
        case 135: return NEW_STUDIO_ROLE_WARDROBE;
        case 136: return NEW_STUDIO_ROLE_FOCUS_PULLER;
        case 137: return NEW_STUDIO_ROLE_RESEARCH_TEAM_HEAD;
        case 138: return NEW_STUDIO_ROLE_VISUAL_EFFECTS_TECHNICIAN;
        case 139: return NEW_STUDIO_ROLE_SOUND_RECORDIST;
        case 140: return NEW_STUDIO_ROLE_TRANSPORTATION_MANAGER;
        case 141: return NEW_STUDIO_ROLE_VISION_MIXER;
        case 142: return NEW_STUDIO_ROLE_TECHNICAL_DIRECTOR;
        case 143: return NEW_STUDIO_ROLE_NEWS_PRODUCER;
        case 144: return NEW_STUDIO_ROLE_SPONSOR;
        case 145: return NEW_STUDIO_ROLE_PRODUCTION_SECRETARY;
        case 146: return NEW_STUDIO_ROLE_FOLEY_ARTIST;
        case 147: return NEW_STUDIO_ROLE_VIDEO_PRODUCER;
        case 148: return NEW_STUDIO_ROLE_SCIENTIFIC_ADVISOR;
        case 149: return NEW_STUDIO_ROLE_AURAL_TRAINER;
        case 150: return NEW_STUDIO_ROLE_EDITOR_OF_THE_DAY;
        case 151: return NEW_STUDIO_ROLE_PROGRAM_PROPOSAL_WRITER;
        case 152: return NEW_STUDIO_ROLE_SECOND_ASSISTANT_DIRECTOR;
        case 153: return NEW_STUDIO_ROLE_CASTING_DIRECTOR;
        case 154: return NEW_STUDIO_ROLE_EXECUTIVE_PRODUCER;
        case 155: return NEW_STUDIO_ROLE_FLOOR_MANAGER;
        case 156: return NEW_STUDIO_ROLE_EDITOR;
        case 157: return NEW_STUDIO_ROLE_OVERDUB_SECOND_ENGINEER;
        case 158: return NEW_STUDIO_ROLE_CENSOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NewStudioRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NewStudioRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NewStudioRole>() {
            public NewStudioRole findValueByNumber(int number) {
              return NewStudioRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(105);
    }

    private static final NewStudioRole[] VALUES = values();

    public static NewStudioRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NewStudioRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.NewStudioRole)
  }

  /**
   * Protobuf enum {@code avs.OperatingSystemType}
   */
  public enum OperatingSystemType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OPERATING_SYSTEM_TYPE_UNKNOWN = 0;</code>
     */
    OPERATING_SYSTEM_TYPE_UNKNOWN(0),
    /**
     * <code>OPERATING_SYSTEM_TYPE_SYMBIAN = 1;</code>
     */
    OPERATING_SYSTEM_TYPE_SYMBIAN(1),
    /**
     * <code>OPERATING_SYSTEM_TYPE_MAC_O_S = 2;</code>
     */
    OPERATING_SYSTEM_TYPE_MAC_O_S(2),
    /**
     * <code>OPERATING_SYSTEM_TYPE_MS_WINDOWS = 3;</code>
     */
    OPERATING_SYSTEM_TYPE_MS_WINDOWS(3),
    ;

    /**
     * <code>OPERATING_SYSTEM_TYPE_UNKNOWN = 0;</code>
     */
    public static final int OPERATING_SYSTEM_TYPE_UNKNOWN_VALUE = 0;
    /**
     * <code>OPERATING_SYSTEM_TYPE_SYMBIAN = 1;</code>
     */
    public static final int OPERATING_SYSTEM_TYPE_SYMBIAN_VALUE = 1;
    /**
     * <code>OPERATING_SYSTEM_TYPE_MAC_O_S = 2;</code>
     */
    public static final int OPERATING_SYSTEM_TYPE_MAC_O_S_VALUE = 2;
    /**
     * <code>OPERATING_SYSTEM_TYPE_MS_WINDOWS = 3;</code>
     */
    public static final int OPERATING_SYSTEM_TYPE_MS_WINDOWS_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OperatingSystemType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OperatingSystemType forNumber(int value) {
      switch (value) {
        case 0: return OPERATING_SYSTEM_TYPE_UNKNOWN;
        case 1: return OPERATING_SYSTEM_TYPE_SYMBIAN;
        case 2: return OPERATING_SYSTEM_TYPE_MAC_O_S;
        case 3: return OPERATING_SYSTEM_TYPE_MS_WINDOWS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OperatingSystemType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OperatingSystemType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OperatingSystemType>() {
            public OperatingSystemType findValueByNumber(int number) {
              return OperatingSystemType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(106);
    }

    private static final OperatingSystemType[] VALUES = values();

    public static OperatingSystemType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OperatingSystemType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.OperatingSystemType)
  }

  /**
   * Protobuf enum {@code avs.PLineType}
   */
  public enum PLineType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>P_LINE_TYPE_REMASTERING_P_LINE = 0;</code>
     */
    P_LINE_TYPE_REMASTERING_P_LINE(0),
    /**
     * <code>P_LINE_TYPE_ORIGINAL_P_LINE = 1;</code>
     */
    P_LINE_TYPE_ORIGINAL_P_LINE(1),
    ;

    /**
     * <code>P_LINE_TYPE_REMASTERING_P_LINE = 0;</code>
     */
    public static final int P_LINE_TYPE_REMASTERING_P_LINE_VALUE = 0;
    /**
     * <code>P_LINE_TYPE_ORIGINAL_P_LINE = 1;</code>
     */
    public static final int P_LINE_TYPE_ORIGINAL_P_LINE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PLineType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PLineType forNumber(int value) {
      switch (value) {
        case 0: return P_LINE_TYPE_REMASTERING_P_LINE;
        case 1: return P_LINE_TYPE_ORIGINAL_P_LINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PLineType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PLineType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PLineType>() {
            public PLineType findValueByNumber(int number) {
              return PLineType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(107);
    }

    private static final PLineType[] VALUES = values();

    public static PLineType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PLineType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.PLineType)
  }

  /**
   * Protobuf enum {@code avs.ParentalWarningType}
   */
  public enum ParentalWarningType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PARENTAL_WARNING_TYPE_NOT_EXPLICIT = 0;</code>
     */
    PARENTAL_WARNING_TYPE_NOT_EXPLICIT(0),
    /**
     * <code>PARENTAL_WARNING_TYPE_UNKNOWN = 1;</code>
     */
    PARENTAL_WARNING_TYPE_UNKNOWN(1),
    /**
     * <code>PARENTAL_WARNING_TYPE_NO_ADVICE_AVAILABLE = 2;</code>
     */
    PARENTAL_WARNING_TYPE_NO_ADVICE_AVAILABLE(2),
    /**
     * <code>PARENTAL_WARNING_TYPE_EXPLICIT = 3;</code>
     */
    PARENTAL_WARNING_TYPE_EXPLICIT(3),
    /**
     * <code>PARENTAL_WARNING_TYPE_EXPLICIT_CONTENT_EDITED = 4;</code>
     */
    PARENTAL_WARNING_TYPE_EXPLICIT_CONTENT_EDITED(4),
    /**
     * <code>PARENTAL_WARNING_TYPE_USER_DEFINED = 5;</code>
     */
    PARENTAL_WARNING_TYPE_USER_DEFINED(5),
    ;

    /**
     * <code>PARENTAL_WARNING_TYPE_NOT_EXPLICIT = 0;</code>
     */
    public static final int PARENTAL_WARNING_TYPE_NOT_EXPLICIT_VALUE = 0;
    /**
     * <code>PARENTAL_WARNING_TYPE_UNKNOWN = 1;</code>
     */
    public static final int PARENTAL_WARNING_TYPE_UNKNOWN_VALUE = 1;
    /**
     * <code>PARENTAL_WARNING_TYPE_NO_ADVICE_AVAILABLE = 2;</code>
     */
    public static final int PARENTAL_WARNING_TYPE_NO_ADVICE_AVAILABLE_VALUE = 2;
    /**
     * <code>PARENTAL_WARNING_TYPE_EXPLICIT = 3;</code>
     */
    public static final int PARENTAL_WARNING_TYPE_EXPLICIT_VALUE = 3;
    /**
     * <code>PARENTAL_WARNING_TYPE_EXPLICIT_CONTENT_EDITED = 4;</code>
     */
    public static final int PARENTAL_WARNING_TYPE_EXPLICIT_CONTENT_EDITED_VALUE = 4;
    /**
     * <code>PARENTAL_WARNING_TYPE_USER_DEFINED = 5;</code>
     */
    public static final int PARENTAL_WARNING_TYPE_USER_DEFINED_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParentalWarningType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ParentalWarningType forNumber(int value) {
      switch (value) {
        case 0: return PARENTAL_WARNING_TYPE_NOT_EXPLICIT;
        case 1: return PARENTAL_WARNING_TYPE_UNKNOWN;
        case 2: return PARENTAL_WARNING_TYPE_NO_ADVICE_AVAILABLE;
        case 3: return PARENTAL_WARNING_TYPE_EXPLICIT;
        case 4: return PARENTAL_WARNING_TYPE_EXPLICIT_CONTENT_EDITED;
        case 5: return PARENTAL_WARNING_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ParentalWarningType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ParentalWarningType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ParentalWarningType>() {
            public ParentalWarningType findValueByNumber(int number) {
              return ParentalWarningType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(108);
    }

    private static final ParentalWarningType[] VALUES = values();

    public static ParentalWarningType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ParentalWarningType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ParentalWarningType)
  }

  /**
   * Protobuf enum {@code avs.PartyRelationshipType}
   */
  public enum PartyRelationshipType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_HAS_MEMBER = 0;</code>
     */
    PARTY_RELATIONSHIP_TYPE_HAS_MEMBER(0),
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_IS_PART_OF = 1;</code>
     */
    PARTY_RELATIONSHIP_TYPE_IS_PART_OF(1),
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_IS_CHILD_OF = 2;</code>
     */
    PARTY_RELATIONSHIP_TYPE_IS_CHILD_OF(2),
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_IS_MEMBER_OF = 3;</code>
     */
    PARTY_RELATIONSHIP_TYPE_IS_MEMBER_OF(3),
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_HAS_PART = 4;</code>
     */
    PARTY_RELATIONSHIP_TYPE_HAS_PART(4),
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_USER_DEFINED = 5;</code>
     */
    PARTY_RELATIONSHIP_TYPE_USER_DEFINED(5),
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_IS_PARENT_OF = 6;</code>
     */
    PARTY_RELATIONSHIP_TYPE_IS_PARENT_OF(6),
    ;

    /**
     * <code>PARTY_RELATIONSHIP_TYPE_HAS_MEMBER = 0;</code>
     */
    public static final int PARTY_RELATIONSHIP_TYPE_HAS_MEMBER_VALUE = 0;
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_IS_PART_OF = 1;</code>
     */
    public static final int PARTY_RELATIONSHIP_TYPE_IS_PART_OF_VALUE = 1;
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_IS_CHILD_OF = 2;</code>
     */
    public static final int PARTY_RELATIONSHIP_TYPE_IS_CHILD_OF_VALUE = 2;
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_IS_MEMBER_OF = 3;</code>
     */
    public static final int PARTY_RELATIONSHIP_TYPE_IS_MEMBER_OF_VALUE = 3;
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_HAS_PART = 4;</code>
     */
    public static final int PARTY_RELATIONSHIP_TYPE_HAS_PART_VALUE = 4;
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_USER_DEFINED = 5;</code>
     */
    public static final int PARTY_RELATIONSHIP_TYPE_USER_DEFINED_VALUE = 5;
    /**
     * <code>PARTY_RELATIONSHIP_TYPE_IS_PARENT_OF = 6;</code>
     */
    public static final int PARTY_RELATIONSHIP_TYPE_IS_PARENT_OF_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PartyRelationshipType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PartyRelationshipType forNumber(int value) {
      switch (value) {
        case 0: return PARTY_RELATIONSHIP_TYPE_HAS_MEMBER;
        case 1: return PARTY_RELATIONSHIP_TYPE_IS_PART_OF;
        case 2: return PARTY_RELATIONSHIP_TYPE_IS_CHILD_OF;
        case 3: return PARTY_RELATIONSHIP_TYPE_IS_MEMBER_OF;
        case 4: return PARTY_RELATIONSHIP_TYPE_HAS_PART;
        case 5: return PARTY_RELATIONSHIP_TYPE_USER_DEFINED;
        case 6: return PARTY_RELATIONSHIP_TYPE_IS_PARENT_OF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PartyRelationshipType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PartyRelationshipType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PartyRelationshipType>() {
            public PartyRelationshipType findValueByNumber(int number) {
              return PartyRelationshipType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(109);
    }

    private static final PartyRelationshipType[] VALUES = values();

    public static PartyRelationshipType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PartyRelationshipType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.PartyRelationshipType)
  }

  /**
   * Protobuf enum {@code avs.PercentageType}
   */
  public enum PercentageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_NET_SALES = 0;</code>
     */
    PERCENTAGE_TYPE_PERCENTAGE_OF_NET_SALES(0),
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_GROSS_REVENUE = 1;</code>
     */
    PERCENTAGE_TYPE_PERCENTAGE_OF_GROSS_REVENUE(1),
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_FREE_GOODS_PERMITTED = 2;</code>
     */
    PERCENTAGE_TYPE_PERCENTAGE_OF_FREE_GOODS_PERMITTED(2),
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_NET_REVENUE = 3;</code>
     */
    PERCENTAGE_TYPE_PERCENTAGE_OF_NET_REVENUE(3),
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_STATUTORY_ROYALTY_RATE = 4;</code>
     */
    PERCENTAGE_TYPE_PERCENTAGE_OF_STATUTORY_ROYALTY_RATE(4),
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_PRICE_CONSUMER_PAID = 5;</code>
     */
    PERCENTAGE_TYPE_PERCENTAGE_OF_PRICE_CONSUMER_PAID(5),
    ;

    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_NET_SALES = 0;</code>
     */
    public static final int PERCENTAGE_TYPE_PERCENTAGE_OF_NET_SALES_VALUE = 0;
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_GROSS_REVENUE = 1;</code>
     */
    public static final int PERCENTAGE_TYPE_PERCENTAGE_OF_GROSS_REVENUE_VALUE = 1;
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_FREE_GOODS_PERMITTED = 2;</code>
     */
    public static final int PERCENTAGE_TYPE_PERCENTAGE_OF_FREE_GOODS_PERMITTED_VALUE = 2;
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_NET_REVENUE = 3;</code>
     */
    public static final int PERCENTAGE_TYPE_PERCENTAGE_OF_NET_REVENUE_VALUE = 3;
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_STATUTORY_ROYALTY_RATE = 4;</code>
     */
    public static final int PERCENTAGE_TYPE_PERCENTAGE_OF_STATUTORY_ROYALTY_RATE_VALUE = 4;
    /**
     * <code>PERCENTAGE_TYPE_PERCENTAGE_OF_PRICE_CONSUMER_PAID = 5;</code>
     */
    public static final int PERCENTAGE_TYPE_PERCENTAGE_OF_PRICE_CONSUMER_PAID_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PercentageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PercentageType forNumber(int value) {
      switch (value) {
        case 0: return PERCENTAGE_TYPE_PERCENTAGE_OF_NET_SALES;
        case 1: return PERCENTAGE_TYPE_PERCENTAGE_OF_GROSS_REVENUE;
        case 2: return PERCENTAGE_TYPE_PERCENTAGE_OF_FREE_GOODS_PERMITTED;
        case 3: return PERCENTAGE_TYPE_PERCENTAGE_OF_NET_REVENUE;
        case 4: return PERCENTAGE_TYPE_PERCENTAGE_OF_STATUTORY_ROYALTY_RATE;
        case 5: return PERCENTAGE_TYPE_PERCENTAGE_OF_PRICE_CONSUMER_PAID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PercentageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PercentageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PercentageType>() {
            public PercentageType findValueByNumber(int number) {
              return PercentageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(110);
    }

    private static final PercentageType[] VALUES = values();

    public static PercentageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PercentageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.PercentageType)
  }

  /**
   * Protobuf enum {@code avs.Period}
   */
  public enum Period
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PERIOD_EXPERIMENTAL = 0;</code>
     */
    PERIOD_EXPERIMENTAL(0),
    /**
     * <code>PERIOD_CONTEMPORARY = 1;</code>
     */
    PERIOD_CONTEMPORARY(1),
    /**
     * <code>PERIOD_IMPRESSIONISM = 2;</code>
     */
    PERIOD_IMPRESSIONISM(2),
    /**
     * <code>PERIOD_ARS_SUBTILIOR = 3;</code>
     */
    PERIOD_ARS_SUBTILIOR(3),
    /**
     * <code>PERIOD_NEOCLASSICISM = 4;</code>
     */
    PERIOD_NEOCLASSICISM(4),
    /**
     * <code>PERIOD_HIGH_MODERN = 5;</code>
     */
    PERIOD_HIGH_MODERN(5),
    /**
     * <code>PERIOD_ANCIENT_MUSIC = 6;</code>
     */
    PERIOD_ANCIENT_MUSIC(6),
    /**
     * <code>PERIOD_MODERN = 7;</code>
     */
    PERIOD_MODERN(7),
    /**
     * <code>PERIOD_RENAISSANCE = 8;</code>
     */
    PERIOD_RENAISSANCE(8),
    /**
     * <code>PERIOD_MEDIEVAL = 9;</code>
     */
    PERIOD_MEDIEVAL(9),
    /**
     * <code>PERIOD_GALANT_MUSIC = 10;</code>
     */
    PERIOD_GALANT_MUSIC(10),
    /**
     * <code>PERIOD_POST_MODERN = 11;</code>
     */
    PERIOD_POST_MODERN(11),
    /**
     * <code>PERIOD_ARS_NOVA = 12;</code>
     */
    PERIOD_ARS_NOVA(12),
    /**
     * <code>PERIOD_CLASSICAL = 13;</code>
     */
    PERIOD_CLASSICAL(13),
    /**
     * <code>PERIOD_USER_DEFINED = 14;</code>
     */
    PERIOD_USER_DEFINED(14),
    /**
     * <code>PERIOD_ARS_ANTIQUA = 15;</code>
     */
    PERIOD_ARS_ANTIQUA(15),
    /**
     * <code>PERIOD_LATE_ROMANTIC = 16;</code>
     */
    PERIOD_LATE_ROMANTIC(16),
    /**
     * <code>PERIOD_BAROQUE = 17;</code>
     */
    PERIOD_BAROQUE(17),
    /**
     * <code>PERIOD_EARLY_ROMANTIC = 18;</code>
     */
    PERIOD_EARLY_ROMANTIC(18),
    ;

    /**
     * <code>PERIOD_EXPERIMENTAL = 0;</code>
     */
    public static final int PERIOD_EXPERIMENTAL_VALUE = 0;
    /**
     * <code>PERIOD_CONTEMPORARY = 1;</code>
     */
    public static final int PERIOD_CONTEMPORARY_VALUE = 1;
    /**
     * <code>PERIOD_IMPRESSIONISM = 2;</code>
     */
    public static final int PERIOD_IMPRESSIONISM_VALUE = 2;
    /**
     * <code>PERIOD_ARS_SUBTILIOR = 3;</code>
     */
    public static final int PERIOD_ARS_SUBTILIOR_VALUE = 3;
    /**
     * <code>PERIOD_NEOCLASSICISM = 4;</code>
     */
    public static final int PERIOD_NEOCLASSICISM_VALUE = 4;
    /**
     * <code>PERIOD_HIGH_MODERN = 5;</code>
     */
    public static final int PERIOD_HIGH_MODERN_VALUE = 5;
    /**
     * <code>PERIOD_ANCIENT_MUSIC = 6;</code>
     */
    public static final int PERIOD_ANCIENT_MUSIC_VALUE = 6;
    /**
     * <code>PERIOD_MODERN = 7;</code>
     */
    public static final int PERIOD_MODERN_VALUE = 7;
    /**
     * <code>PERIOD_RENAISSANCE = 8;</code>
     */
    public static final int PERIOD_RENAISSANCE_VALUE = 8;
    /**
     * <code>PERIOD_MEDIEVAL = 9;</code>
     */
    public static final int PERIOD_MEDIEVAL_VALUE = 9;
    /**
     * <code>PERIOD_GALANT_MUSIC = 10;</code>
     */
    public static final int PERIOD_GALANT_MUSIC_VALUE = 10;
    /**
     * <code>PERIOD_POST_MODERN = 11;</code>
     */
    public static final int PERIOD_POST_MODERN_VALUE = 11;
    /**
     * <code>PERIOD_ARS_NOVA = 12;</code>
     */
    public static final int PERIOD_ARS_NOVA_VALUE = 12;
    /**
     * <code>PERIOD_CLASSICAL = 13;</code>
     */
    public static final int PERIOD_CLASSICAL_VALUE = 13;
    /**
     * <code>PERIOD_USER_DEFINED = 14;</code>
     */
    public static final int PERIOD_USER_DEFINED_VALUE = 14;
    /**
     * <code>PERIOD_ARS_ANTIQUA = 15;</code>
     */
    public static final int PERIOD_ARS_ANTIQUA_VALUE = 15;
    /**
     * <code>PERIOD_LATE_ROMANTIC = 16;</code>
     */
    public static final int PERIOD_LATE_ROMANTIC_VALUE = 16;
    /**
     * <code>PERIOD_BAROQUE = 17;</code>
     */
    public static final int PERIOD_BAROQUE_VALUE = 17;
    /**
     * <code>PERIOD_EARLY_ROMANTIC = 18;</code>
     */
    public static final int PERIOD_EARLY_ROMANTIC_VALUE = 18;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Period valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Period forNumber(int value) {
      switch (value) {
        case 0: return PERIOD_EXPERIMENTAL;
        case 1: return PERIOD_CONTEMPORARY;
        case 2: return PERIOD_IMPRESSIONISM;
        case 3: return PERIOD_ARS_SUBTILIOR;
        case 4: return PERIOD_NEOCLASSICISM;
        case 5: return PERIOD_HIGH_MODERN;
        case 6: return PERIOD_ANCIENT_MUSIC;
        case 7: return PERIOD_MODERN;
        case 8: return PERIOD_RENAISSANCE;
        case 9: return PERIOD_MEDIEVAL;
        case 10: return PERIOD_GALANT_MUSIC;
        case 11: return PERIOD_POST_MODERN;
        case 12: return PERIOD_ARS_NOVA;
        case 13: return PERIOD_CLASSICAL;
        case 14: return PERIOD_USER_DEFINED;
        case 15: return PERIOD_ARS_ANTIQUA;
        case 16: return PERIOD_LATE_ROMANTIC;
        case 17: return PERIOD_BAROQUE;
        case 18: return PERIOD_EARLY_ROMANTIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Period>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Period> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Period>() {
            public Period findValueByNumber(int number) {
              return Period.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(111);
    }

    private static final Period[] VALUES = values();

    public static Period valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Period(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Period)
  }

  /**
   * Protobuf enum {@code avs.PhysicalCarrierType}
   */
  public enum PhysicalCarrierType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PHYSICAL_CARRIER_TYPE_DUAL_DISC = 0;</code>
     */
    PHYSICAL_CARRIER_TYPE_DUAL_DISC(0),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_VIDEO_CASSETTE = 1;</code>
     */
    PHYSICAL_CARRIER_TYPE_VIDEO_CASSETTE(1),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_C_D = 2;</code>
     */
    PHYSICAL_CARRIER_TYPE_C_D(2),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_D_V_D = 3;</code>
     */
    PHYSICAL_CARRIER_TYPE_D_V_D(3),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_MEMORY_DEVICE = 4;</code>
     */
    PHYSICAL_CARRIER_TYPE_MEMORY_DEVICE(4),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_BLU_RAY = 5;</code>
     */
    PHYSICAL_CARRIER_TYPE_BLU_RAY(5),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_COMPACT_CASSETTE = 6;</code>
     */
    PHYSICAL_CARRIER_TYPE_COMPACT_CASSETTE(6),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_S_A_C_D = 7;</code>
     */
    PHYSICAL_CARRIER_TYPE_S_A_C_D(7),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_VINYL_DISK = 8;</code>
     */
    PHYSICAL_CARRIER_TYPE_VINYL_DISK(8),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_COMBI_PACK = 9;</code>
     */
    PHYSICAL_CARRIER_TYPE_COMBI_PACK(9),
    /**
     * <code>PHYSICAL_CARRIER_TYPE_USER_DEFINED = 10;</code>
     */
    PHYSICAL_CARRIER_TYPE_USER_DEFINED(10),
    ;

    /**
     * <code>PHYSICAL_CARRIER_TYPE_DUAL_DISC = 0;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_DUAL_DISC_VALUE = 0;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_VIDEO_CASSETTE = 1;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_VIDEO_CASSETTE_VALUE = 1;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_C_D = 2;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_C_D_VALUE = 2;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_D_V_D = 3;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_D_V_D_VALUE = 3;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_MEMORY_DEVICE = 4;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_MEMORY_DEVICE_VALUE = 4;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_BLU_RAY = 5;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_BLU_RAY_VALUE = 5;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_COMPACT_CASSETTE = 6;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_COMPACT_CASSETTE_VALUE = 6;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_S_A_C_D = 7;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_S_A_C_D_VALUE = 7;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_VINYL_DISK = 8;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_VINYL_DISK_VALUE = 8;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_COMBI_PACK = 9;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_COMBI_PACK_VALUE = 9;
    /**
     * <code>PHYSICAL_CARRIER_TYPE_USER_DEFINED = 10;</code>
     */
    public static final int PHYSICAL_CARRIER_TYPE_USER_DEFINED_VALUE = 10;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PhysicalCarrierType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PhysicalCarrierType forNumber(int value) {
      switch (value) {
        case 0: return PHYSICAL_CARRIER_TYPE_DUAL_DISC;
        case 1: return PHYSICAL_CARRIER_TYPE_VIDEO_CASSETTE;
        case 2: return PHYSICAL_CARRIER_TYPE_C_D;
        case 3: return PHYSICAL_CARRIER_TYPE_D_V_D;
        case 4: return PHYSICAL_CARRIER_TYPE_MEMORY_DEVICE;
        case 5: return PHYSICAL_CARRIER_TYPE_BLU_RAY;
        case 6: return PHYSICAL_CARRIER_TYPE_COMPACT_CASSETTE;
        case 7: return PHYSICAL_CARRIER_TYPE_S_A_C_D;
        case 8: return PHYSICAL_CARRIER_TYPE_VINYL_DISK;
        case 9: return PHYSICAL_CARRIER_TYPE_COMBI_PACK;
        case 10: return PHYSICAL_CARRIER_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PhysicalCarrierType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PhysicalCarrierType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PhysicalCarrierType>() {
            public PhysicalCarrierType findValueByNumber(int number) {
              return PhysicalCarrierType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(112);
    }

    private static final PhysicalCarrierType[] VALUES = values();

    public static PhysicalCarrierType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PhysicalCarrierType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.PhysicalCarrierType)
  }

  /**
   * Protobuf enum {@code avs.PriceInformationType}
   */
  public enum PriceInformationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRICE_INFORMATION_TYPE_PRE_ORDER_PRICE = 0;</code>
     */
    PRICE_INFORMATION_TYPE_PRE_ORDER_PRICE(0),
    /**
     * <code>PRICE_INFORMATION_TYPE_USER_DEFINED = 1;</code>
     */
    PRICE_INFORMATION_TYPE_USER_DEFINED(1),
    /**
     * <code>PRICE_INFORMATION_TYPE_STANDARD_RETAIL_PRICE = 2;</code>
     */
    PRICE_INFORMATION_TYPE_STANDARD_RETAIL_PRICE(2),
    ;

    /**
     * <code>PRICE_INFORMATION_TYPE_PRE_ORDER_PRICE = 0;</code>
     */
    public static final int PRICE_INFORMATION_TYPE_PRE_ORDER_PRICE_VALUE = 0;
    /**
     * <code>PRICE_INFORMATION_TYPE_USER_DEFINED = 1;</code>
     */
    public static final int PRICE_INFORMATION_TYPE_USER_DEFINED_VALUE = 1;
    /**
     * <code>PRICE_INFORMATION_TYPE_STANDARD_RETAIL_PRICE = 2;</code>
     */
    public static final int PRICE_INFORMATION_TYPE_STANDARD_RETAIL_PRICE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PriceInformationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PriceInformationType forNumber(int value) {
      switch (value) {
        case 0: return PRICE_INFORMATION_TYPE_PRE_ORDER_PRICE;
        case 1: return PRICE_INFORMATION_TYPE_USER_DEFINED;
        case 2: return PRICE_INFORMATION_TYPE_STANDARD_RETAIL_PRICE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PriceInformationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PriceInformationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PriceInformationType>() {
            public PriceInformationType findValueByNumber(int number) {
              return PriceInformationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(113);
    }

    private static final PriceInformationType[] VALUES = values();

    public static PriceInformationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PriceInformationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.PriceInformationType)
  }

  /**
   * Protobuf enum {@code avs.ProductType}
   */
  public enum ProductType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRODUCT_TYPE_AUDIO_PRODUCT = 0;</code>
     */
    PRODUCT_TYPE_AUDIO_PRODUCT(0),
    /**
     * <code>PRODUCT_TYPE_MIXED_MEDIA_BUNDLE_PRODUCT = 1;</code>
     */
    PRODUCT_TYPE_MIXED_MEDIA_BUNDLE_PRODUCT(1),
    /**
     * <code>PRODUCT_TYPE_VIDEO_PRODUCT = 2;</code>
     */
    PRODUCT_TYPE_VIDEO_PRODUCT(2),
    /**
     * <code>PRODUCT_TYPE_MOBILE_PRODUCT = 3;</code>
     */
    PRODUCT_TYPE_MOBILE_PRODUCT(3),
    /**
     * <code>PRODUCT_TYPE_GRAPHICS_PRODUCT = 4;</code>
     */
    PRODUCT_TYPE_GRAPHICS_PRODUCT(4),
    /**
     * <code>PRODUCT_TYPE_USER_DEFINED = 5;</code>
     */
    PRODUCT_TYPE_USER_DEFINED(5),
    ;

    /**
     * <code>PRODUCT_TYPE_AUDIO_PRODUCT = 0;</code>
     */
    public static final int PRODUCT_TYPE_AUDIO_PRODUCT_VALUE = 0;
    /**
     * <code>PRODUCT_TYPE_MIXED_MEDIA_BUNDLE_PRODUCT = 1;</code>
     */
    public static final int PRODUCT_TYPE_MIXED_MEDIA_BUNDLE_PRODUCT_VALUE = 1;
    /**
     * <code>PRODUCT_TYPE_VIDEO_PRODUCT = 2;</code>
     */
    public static final int PRODUCT_TYPE_VIDEO_PRODUCT_VALUE = 2;
    /**
     * <code>PRODUCT_TYPE_MOBILE_PRODUCT = 3;</code>
     */
    public static final int PRODUCT_TYPE_MOBILE_PRODUCT_VALUE = 3;
    /**
     * <code>PRODUCT_TYPE_GRAPHICS_PRODUCT = 4;</code>
     */
    public static final int PRODUCT_TYPE_GRAPHICS_PRODUCT_VALUE = 4;
    /**
     * <code>PRODUCT_TYPE_USER_DEFINED = 5;</code>
     */
    public static final int PRODUCT_TYPE_USER_DEFINED_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProductType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ProductType forNumber(int value) {
      switch (value) {
        case 0: return PRODUCT_TYPE_AUDIO_PRODUCT;
        case 1: return PRODUCT_TYPE_MIXED_MEDIA_BUNDLE_PRODUCT;
        case 2: return PRODUCT_TYPE_VIDEO_PRODUCT;
        case 3: return PRODUCT_TYPE_MOBILE_PRODUCT;
        case 4: return PRODUCT_TYPE_GRAPHICS_PRODUCT;
        case 5: return PRODUCT_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProductType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ProductType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProductType>() {
            public ProductType findValueByNumber(int number) {
              return ProductType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(114);
    }

    private static final ProductType[] VALUES = values();

    public static ProductType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ProductType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ProductType)
  }

  /**
   * Protobuf enum {@code avs.ProfileId}
   */
  public enum ProfileId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PROFILE_ID_RADIO_BROADCAST_PROFILE = 0;</code>
     */
    PROFILE_ID_RADIO_BROADCAST_PROFILE(0),
    /**
     * <code>PROFILE_ID_BASIC_AUDIO_PROFILE = 1;</code>
     */
    PROFILE_ID_BASIC_AUDIO_PROFILE(1),
    /**
     * <code>PROFILE_ID_AUDIO_VISUAL_PROFILE = 2;</code>
     */
    PROFILE_ID_AUDIO_VISUAL_PROFILE(2),
    /**
     * <code>PROFILE_ID_FINANCIAL_REPORTING_TO_RECORD_COMPANIES_PROFILE_S_R_B = 3;</code>
     */
    PROFILE_ID_FINANCIAL_REPORTING_TO_RECORD_COMPANIES_PROFILE_S_R_B(3),
    /**
     * <code>PROFILE_ID_MASTER_LIST_PROFILE = 4;</code>
     */
    PROFILE_ID_MASTER_LIST_PROFILE(4),
    /**
     * <code>PROFILE_ID_BASIC_AUDIO_PROFILE_S_R_B = 5;</code>
     */
    PROFILE_ID_BASIC_AUDIO_PROFILE_S_R_B(5),
    /**
     * <code>PROFILE_ID_MASTER_LIST_PROFILE_S_R_B = 6;</code>
     */
    PROFILE_ID_MASTER_LIST_PROFILE_S_R_B(6),
    /**
     * <code>PROFILE_ID_U_G_C_PROFILE = 7;</code>
     */
    PROFILE_ID_U_G_C_PROFILE(7),
    /**
     * <code>PROFILE_ID_AUDIO_VISUAL_PROFILE_S_R_B = 8;</code>
     */
    PROFILE_ID_AUDIO_VISUAL_PROFILE_S_R_B(8),
    /**
     * <code>PROFILE_ID_ROYALTY_REPORTING_PROFILE = 9;</code>
     */
    PROFILE_ID_ROYALTY_REPORTING_PROFILE(9),
    ;

    /**
     * <code>PROFILE_ID_RADIO_BROADCAST_PROFILE = 0;</code>
     */
    public static final int PROFILE_ID_RADIO_BROADCAST_PROFILE_VALUE = 0;
    /**
     * <code>PROFILE_ID_BASIC_AUDIO_PROFILE = 1;</code>
     */
    public static final int PROFILE_ID_BASIC_AUDIO_PROFILE_VALUE = 1;
    /**
     * <code>PROFILE_ID_AUDIO_VISUAL_PROFILE = 2;</code>
     */
    public static final int PROFILE_ID_AUDIO_VISUAL_PROFILE_VALUE = 2;
    /**
     * <code>PROFILE_ID_FINANCIAL_REPORTING_TO_RECORD_COMPANIES_PROFILE_S_R_B = 3;</code>
     */
    public static final int PROFILE_ID_FINANCIAL_REPORTING_TO_RECORD_COMPANIES_PROFILE_S_R_B_VALUE = 3;
    /**
     * <code>PROFILE_ID_MASTER_LIST_PROFILE = 4;</code>
     */
    public static final int PROFILE_ID_MASTER_LIST_PROFILE_VALUE = 4;
    /**
     * <code>PROFILE_ID_BASIC_AUDIO_PROFILE_S_R_B = 5;</code>
     */
    public static final int PROFILE_ID_BASIC_AUDIO_PROFILE_S_R_B_VALUE = 5;
    /**
     * <code>PROFILE_ID_MASTER_LIST_PROFILE_S_R_B = 6;</code>
     */
    public static final int PROFILE_ID_MASTER_LIST_PROFILE_S_R_B_VALUE = 6;
    /**
     * <code>PROFILE_ID_U_G_C_PROFILE = 7;</code>
     */
    public static final int PROFILE_ID_U_G_C_PROFILE_VALUE = 7;
    /**
     * <code>PROFILE_ID_AUDIO_VISUAL_PROFILE_S_R_B = 8;</code>
     */
    public static final int PROFILE_ID_AUDIO_VISUAL_PROFILE_S_R_B_VALUE = 8;
    /**
     * <code>PROFILE_ID_ROYALTY_REPORTING_PROFILE = 9;</code>
     */
    public static final int PROFILE_ID_ROYALTY_REPORTING_PROFILE_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProfileId valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ProfileId forNumber(int value) {
      switch (value) {
        case 0: return PROFILE_ID_RADIO_BROADCAST_PROFILE;
        case 1: return PROFILE_ID_BASIC_AUDIO_PROFILE;
        case 2: return PROFILE_ID_AUDIO_VISUAL_PROFILE;
        case 3: return PROFILE_ID_FINANCIAL_REPORTING_TO_RECORD_COMPANIES_PROFILE_S_R_B;
        case 4: return PROFILE_ID_MASTER_LIST_PROFILE;
        case 5: return PROFILE_ID_BASIC_AUDIO_PROFILE_S_R_B;
        case 6: return PROFILE_ID_MASTER_LIST_PROFILE_S_R_B;
        case 7: return PROFILE_ID_U_G_C_PROFILE;
        case 8: return PROFILE_ID_AUDIO_VISUAL_PROFILE_S_R_B;
        case 9: return PROFILE_ID_ROYALTY_REPORTING_PROFILE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProfileId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ProfileId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProfileId>() {
            public ProfileId findValueByNumber(int number) {
              return ProfileId.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(115);
    }

    private static final ProfileId[] VALUES = values();

    public static ProfileId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ProfileId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ProfileId)
  }

  /**
   * Protobuf enum {@code avs.Purpose}
   */
  public enum Purpose
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PURPOSE_FILM_TRAILER_MUSIC = 0;</code>
     */
    PURPOSE_FILM_TRAILER_MUSIC(0),
    /**
     * <code>PURPOSE_CHANNEL_TRAILER_MUSIC = 1;</code>
     */
    PURPOSE_CHANNEL_TRAILER_MUSIC(1),
    /**
     * <code>PURPOSE_EXTRACT = 2;</code>
     */
    PURPOSE_EXTRACT(2),
    /**
     * <code>PURPOSE_TRAILER_MUSIC = 3;</code>
     */
    PURPOSE_TRAILER_MUSIC(3),
    /**
     * <code>PURPOSE_USER_DEFINED = 4;</code>
     */
    PURPOSE_USER_DEFINED(4),
    /**
     * <code>PURPOSE_BACKGROUND_MUSIC = 5;</code>
     */
    PURPOSE_BACKGROUND_MUSIC(5),
    /**
     * <code>PURPOSE_FOREGROUND_MUSIC = 6;</code>
     */
    PURPOSE_FOREGROUND_MUSIC(6),
    ;

    /**
     * <code>PURPOSE_FILM_TRAILER_MUSIC = 0;</code>
     */
    public static final int PURPOSE_FILM_TRAILER_MUSIC_VALUE = 0;
    /**
     * <code>PURPOSE_CHANNEL_TRAILER_MUSIC = 1;</code>
     */
    public static final int PURPOSE_CHANNEL_TRAILER_MUSIC_VALUE = 1;
    /**
     * <code>PURPOSE_EXTRACT = 2;</code>
     */
    public static final int PURPOSE_EXTRACT_VALUE = 2;
    /**
     * <code>PURPOSE_TRAILER_MUSIC = 3;</code>
     */
    public static final int PURPOSE_TRAILER_MUSIC_VALUE = 3;
    /**
     * <code>PURPOSE_USER_DEFINED = 4;</code>
     */
    public static final int PURPOSE_USER_DEFINED_VALUE = 4;
    /**
     * <code>PURPOSE_BACKGROUND_MUSIC = 5;</code>
     */
    public static final int PURPOSE_BACKGROUND_MUSIC_VALUE = 5;
    /**
     * <code>PURPOSE_FOREGROUND_MUSIC = 6;</code>
     */
    public static final int PURPOSE_FOREGROUND_MUSIC_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Purpose valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Purpose forNumber(int value) {
      switch (value) {
        case 0: return PURPOSE_FILM_TRAILER_MUSIC;
        case 1: return PURPOSE_CHANNEL_TRAILER_MUSIC;
        case 2: return PURPOSE_EXTRACT;
        case 3: return PURPOSE_TRAILER_MUSIC;
        case 4: return PURPOSE_USER_DEFINED;
        case 5: return PURPOSE_BACKGROUND_MUSIC;
        case 6: return PURPOSE_FOREGROUND_MUSIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Purpose>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Purpose> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Purpose>() {
            public Purpose findValueByNumber(int number) {
              return Purpose.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(116);
    }

    private static final Purpose[] VALUES = values();

    public static Purpose valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Purpose(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Purpose)
  }

  /**
   * Protobuf enum {@code avs.RatingAgency}
   */
  public enum RatingAgency
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RATING_AGENCY_T_E_L_A = 0;</code>
     */
    RATING_AGENCY_T_E_L_A(0),
    /**
     * <code>RATING_AGENCY_V_E_T = 1;</code>
     */
    RATING_AGENCY_V_E_T(1),
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___P_E = 2;</code>
     */
    RATING_AGENCY_F_I_L_M__MINUS___P_E(2),
    /**
     * <code>RATING_AGENCY_R_D_C_Q = 3;</code>
     */
    RATING_AGENCY_R_D_C_Q(3),
    /**
     * <code>RATING_AGENCY_B_F_S_C = 4;</code>
     */
    RATING_AGENCY_B_F_S_C(4),
    /**
     * <code>RATING_AGENCY_M_D_A = 5;</code>
     */
    RATING_AGENCY_M_D_A(5),
    /**
     * <code>RATING_AGENCY_B_M_U_K_K = 6;</code>
     */
    RATING_AGENCY_B_M_U_K_K(6),
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___G_R = 7;</code>
     */
    RATING_AGENCY_F_I_L_M__MINUS___G_R(7),
    /**
     * <code>RATING_AGENCY_N_B_C = 8;</code>
     */
    RATING_AGENCY_N_B_C(8),
    /**
     * <code>RATING_AGENCY_M_C_C_A_A = 9;</code>
     */
    RATING_AGENCY_M_C_C_A_A(9),
    /**
     * <code>RATING_AGENCY_N_F_V_C_B = 10;</code>
     */
    RATING_AGENCY_N_F_V_C_B(10),
    /**
     * <code>RATING_AGENCY_M_D_C_B = 11;</code>
     */
    RATING_AGENCY_M_D_C_B(11),
    /**
     * <code>RATING_AGENCY_A_N_A_T_E_L = 12;</code>
     */
    RATING_AGENCY_A_N_A_T_E_L(12),
    /**
     * <code>RATING_AGENCY_S_M__MINUS___S_A = 13;</code>
     */
    RATING_AGENCY_S_M__MINUS___S_A(13),
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___C_H = 14;</code>
     */
    RATING_AGENCY_F_I_L_M__MINUS___C_H(14),
    /**
     * <code>RATING_AGENCY_I_C_A_A = 15;</code>
     */
    RATING_AGENCY_I_C_A_A(15),
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___S_K = 16;</code>
     */
    RATING_AGENCY_F_I_L_M__MINUS___S_K(16),
    /**
     * <code>RATING_AGENCY_M_F_C_B = 17;</code>
     */
    RATING_AGENCY_M_F_C_B(17),
    /**
     * <code>RATING_AGENCY_USER_DEFINED = 18;</code>
     */
    RATING_AGENCY_USER_DEFINED(18),
    /**
     * <code>RATING_AGENCY_L_S_F = 19;</code>
     */
    RATING_AGENCY_L_S_F(19),
    /**
     * <code>RATING_AGENCY_F_S_K = 20;</code>
     */
    RATING_AGENCY_F_S_K(20),
    /**
     * <code>RATING_AGENCY_F_C_B = 21;</code>
     */
    RATING_AGENCY_F_C_B(21),
    /**
     * <code>RATING_AGENCY_M_E_K_U = 22;</code>
     */
    RATING_AGENCY_M_E_K_U(22),
    /**
     * <code>RATING_AGENCY_M_I_C = 23;</code>
     */
    RATING_AGENCY_M_I_C(23),
    /**
     * <code>RATING_AGENCY_O_F_L_C__MINUS___N_Z = 24;</code>
     */
    RATING_AGENCY_O_F_L_C__MINUS___N_Z(24),
    /**
     * <code>RATING_AGENCY_M_P_A_A = 25;</code>
     */
    RATING_AGENCY_M_P_A_A(25),
    /**
     * <code>RATING_AGENCY_N_K_C = 26;</code>
     */
    RATING_AGENCY_N_K_C(26),
    /**
     * <code>RATING_AGENCY_A_C_M_A = 27;</code>
     */
    RATING_AGENCY_A_C_M_A(27),
    /**
     * <code>RATING_AGENCY_FILMTILSYNET = 28;</code>
     */
    RATING_AGENCY_FILMTILSYNET(28),
    /**
     * <code>RATING_AGENCY_O_F_L_C = 29;</code>
     */
    RATING_AGENCY_O_F_L_C(29),
    /**
     * <code>RATING_AGENCY_EIRIN = 30;</code>
     */
    RATING_AGENCY_EIRIN(30),
    /**
     * <code>RATING_AGENCY_B_F_C_O = 31;</code>
     */
    RATING_AGENCY_B_F_C_O(31),
    /**
     * <code>RATING_AGENCY_SI_B_C_I = 32;</code>
     */
    RATING_AGENCY_SI_B_C_I(32),
    /**
     * <code>RATING_AGENCY_K_M_R_B = 33;</code>
     */
    RATING_AGENCY_K_M_R_B(33),
    /**
     * <code>RATING_AGENCY_R_I_A_A = 34;</code>
     */
    RATING_AGENCY_R_I_A_A(34),
    /**
     * <code>RATING_AGENCY_M_O_C__MINUS___T_W = 35;</code>
     */
    RATING_AGENCY_M_O_C__MINUS___T_W(35),
    /**
     * <code>RATING_AGENCY_P_E_G_I = 36;</code>
     */
    RATING_AGENCY_P_E_G_I(36),
    /**
     * <code>RATING_AGENCY_F_C_O = 37;</code>
     */
    RATING_AGENCY_F_C_O(37),
    /**
     * <code>RATING_AGENCY_C_N_A = 38;</code>
     */
    RATING_AGENCY_C_N_A(38),
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___C_Z = 39;</code>
     */
    RATING_AGENCY_F_I_L_M__MINUS___C_Z(39),
    /**
     * <code>RATING_AGENCY_I_F_C_O_F = 40;</code>
     */
    RATING_AGENCY_I_F_C_O_F(40),
    /**
     * <code>RATING_AGENCY_C_N_C = 41;</code>
     */
    RATING_AGENCY_C_N_C(41),
    /**
     * <code>RATING_AGENCY_F_P_B = 42;</code>
     */
    RATING_AGENCY_F_P_B(42),
    /**
     * <code>RATING_AGENCY_N_C_S = 43;</code>
     */
    RATING_AGENCY_N_C_S(43),
    /**
     * <code>RATING_AGENCY_C_H_V_R_S = 44;</code>
     */
    RATING_AGENCY_C_H_V_R_S(44),
    /**
     * <code>RATING_AGENCY_R_T_C = 45;</code>
     */
    RATING_AGENCY_R_T_C(45),
    /**
     * <code>RATING_AGENCY_R_T_E = 46;</code>
     */
    RATING_AGENCY_R_T_E(46),
    /**
     * <code>RATING_AGENCY_C_B_F_C = 47;</code>
     */
    RATING_AGENCY_C_B_F_C(47),
    /**
     * <code>RATING_AGENCY_MEDIETILSYNET = 48;</code>
     */
    RATING_AGENCY_MEDIETILSYNET(48),
    /**
     * <code>RATING_AGENCY_C_S_C_F = 49;</code>
     */
    RATING_AGENCY_C_S_C_F(49),
    /**
     * <code>RATING_AGENCY_A_F_R = 50;</code>
     */
    RATING_AGENCY_A_F_R(50),
    /**
     * <code>RATING_AGENCY_N_F_R_C = 51;</code>
     */
    RATING_AGENCY_N_F_R_C(51),
    /**
     * <code>RATING_AGENCY_A_G_C_O_M = 52;</code>
     */
    RATING_AGENCY_A_G_C_O_M(52),
    /**
     * <code>RATING_AGENCY_M_T_R_C_B = 53;</code>
     */
    RATING_AGENCY_M_T_R_C_B(53),
    /**
     * <code>RATING_AGENCY_C_S_A = 54;</code>
     */
    RATING_AGENCY_C_S_A(54),
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___E_E = 55;</code>
     */
    RATING_AGENCY_F_I_L_M__MINUS___E_E(55),
    /**
     * <code>RATING_AGENCY_S_B_B = 56;</code>
     */
    RATING_AGENCY_S_B_B(56),
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___E_G = 57;</code>
     */
    RATING_AGENCY_F_I_L_M__MINUS___E_G(57),
    /**
     * <code>RATING_AGENCY_M_P_A_A_T = 58;</code>
     */
    RATING_AGENCY_M_P_A_A_T(58),
    /**
     * <code>RATING_AGENCY_SMAIS = 59;</code>
     */
    RATING_AGENCY_SMAIS(59),
    /**
     * <code>RATING_AGENCY_C_I_C_F = 60;</code>
     */
    RATING_AGENCY_C_I_C_F(60),
    /**
     * <code>RATING_AGENCY_K_F_C_B = 61;</code>
     */
    RATING_AGENCY_K_F_C_B(61),
    /**
     * <code>RATING_AGENCY_KIJKWIJZER = 62;</code>
     */
    RATING_AGENCY_KIJKWIJZER(62),
    /**
     * <code>RATING_AGENCY_S_P_I_O__MINUS___J_K = 63;</code>
     */
    RATING_AGENCY_S_P_I_O__MINUS___J_K(63),
    /**
     * <code>RATING_AGENCY_D_J_C_T_Q = 64;</code>
     */
    RATING_AGENCY_D_J_C_T_Q(64),
    /**
     * <code>RATING_AGENCY_T_V_P_G = 65;</code>
     */
    RATING_AGENCY_T_V_P_G(65),
    /**
     * <code>RATING_AGENCY_M_O_C = 66;</code>
     */
    RATING_AGENCY_M_O_C(66),
    /**
     * <code>RATING_AGENCY_M_B_A_C_T = 67;</code>
     */
    RATING_AGENCY_M_B_A_C_T(67),
    /**
     * <code>RATING_AGENCY_M_B_U = 68;</code>
     */
    RATING_AGENCY_M_B_U(68),
    /**
     * <code>RATING_AGENCY_B_B_F_C = 69;</code>
     */
    RATING_AGENCY_B_B_F_C(69),
    /**
     * <code>RATING_AGENCY_C_C_C = 70;</code>
     */
    RATING_AGENCY_C_C_C(70),
    /**
     * <code>RATING_AGENCY_O_F_R_B = 71;</code>
     */
    RATING_AGENCY_O_F_R_B(71),
    /**
     * <code>RATING_AGENCY_C_C_E = 72;</code>
     */
    RATING_AGENCY_C_C_E(72),
    /**
     * <code>RATING_AGENCY_F_A_B = 73;</code>
     */
    RATING_AGENCY_F_A_B(73),
    /**
     * <code>RATING_AGENCY_K_R = 74;</code>
     */
    RATING_AGENCY_K_R(74),
    /**
     * <code>RATING_AGENCY_I_F_C_O = 75;</code>
     */
    RATING_AGENCY_I_F_C_O(75),
    /**
     * <code>RATING_AGENCY_B_F_V_C = 76;</code>
     */
    RATING_AGENCY_B_F_V_C(76),
    /**
     * <code>RATING_AGENCY_C_B_S_C = 77;</code>
     */
    RATING_AGENCY_C_B_S_C(77),
    /**
     * <code>RATING_AGENCY_C_P_B_C = 78;</code>
     */
    RATING_AGENCY_C_P_B_C(78),
    /**
     * <code>RATING_AGENCY_K_R_R_I_T = 79;</code>
     */
    RATING_AGENCY_K_R_R_I_T(79),
    /**
     * <code>RATING_AGENCY_C_B_S_C__MINUS___F = 80;</code>
     */
    RATING_AGENCY_C_B_S_C__MINUS___F(80),
    /**
     * <code>RATING_AGENCY_M_K_R_F = 81;</code>
     */
    RATING_AGENCY_M_K_R_F(81),
    /**
     * <code>RATING_AGENCY_F_R_B = 82;</code>
     */
    RATING_AGENCY_F_R_B(82),
    /**
     * <code>RATING_AGENCY_I_N_C_A_A = 83;</code>
     */
    RATING_AGENCY_I_N_C_A_A(83),
    /**
     * <code>RATING_AGENCY_R_C_N_O_F = 84;</code>
     */
    RATING_AGENCY_R_C_N_O_F(84),
    /**
     * <code>RATING_AGENCY_N_I_C_A_M = 85;</code>
     */
    RATING_AGENCY_N_I_C_A_M(85),
    /**
     * <code>RATING_AGENCY_E_S_R_B = 86;</code>
     */
    RATING_AGENCY_E_S_R_B(86),
    /**
     * <code>RATING_AGENCY_U_S_F_A = 87;</code>
     */
    RATING_AGENCY_U_S_F_A(87),
    ;

    /**
     * <code>RATING_AGENCY_T_E_L_A = 0;</code>
     */
    public static final int RATING_AGENCY_T_E_L_A_VALUE = 0;
    /**
     * <code>RATING_AGENCY_V_E_T = 1;</code>
     */
    public static final int RATING_AGENCY_V_E_T_VALUE = 1;
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___P_E = 2;</code>
     */
    public static final int RATING_AGENCY_F_I_L_M__MINUS___P_E_VALUE = 2;
    /**
     * <code>RATING_AGENCY_R_D_C_Q = 3;</code>
     */
    public static final int RATING_AGENCY_R_D_C_Q_VALUE = 3;
    /**
     * <code>RATING_AGENCY_B_F_S_C = 4;</code>
     */
    public static final int RATING_AGENCY_B_F_S_C_VALUE = 4;
    /**
     * <code>RATING_AGENCY_M_D_A = 5;</code>
     */
    public static final int RATING_AGENCY_M_D_A_VALUE = 5;
    /**
     * <code>RATING_AGENCY_B_M_U_K_K = 6;</code>
     */
    public static final int RATING_AGENCY_B_M_U_K_K_VALUE = 6;
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___G_R = 7;</code>
     */
    public static final int RATING_AGENCY_F_I_L_M__MINUS___G_R_VALUE = 7;
    /**
     * <code>RATING_AGENCY_N_B_C = 8;</code>
     */
    public static final int RATING_AGENCY_N_B_C_VALUE = 8;
    /**
     * <code>RATING_AGENCY_M_C_C_A_A = 9;</code>
     */
    public static final int RATING_AGENCY_M_C_C_A_A_VALUE = 9;
    /**
     * <code>RATING_AGENCY_N_F_V_C_B = 10;</code>
     */
    public static final int RATING_AGENCY_N_F_V_C_B_VALUE = 10;
    /**
     * <code>RATING_AGENCY_M_D_C_B = 11;</code>
     */
    public static final int RATING_AGENCY_M_D_C_B_VALUE = 11;
    /**
     * <code>RATING_AGENCY_A_N_A_T_E_L = 12;</code>
     */
    public static final int RATING_AGENCY_A_N_A_T_E_L_VALUE = 12;
    /**
     * <code>RATING_AGENCY_S_M__MINUS___S_A = 13;</code>
     */
    public static final int RATING_AGENCY_S_M__MINUS___S_A_VALUE = 13;
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___C_H = 14;</code>
     */
    public static final int RATING_AGENCY_F_I_L_M__MINUS___C_H_VALUE = 14;
    /**
     * <code>RATING_AGENCY_I_C_A_A = 15;</code>
     */
    public static final int RATING_AGENCY_I_C_A_A_VALUE = 15;
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___S_K = 16;</code>
     */
    public static final int RATING_AGENCY_F_I_L_M__MINUS___S_K_VALUE = 16;
    /**
     * <code>RATING_AGENCY_M_F_C_B = 17;</code>
     */
    public static final int RATING_AGENCY_M_F_C_B_VALUE = 17;
    /**
     * <code>RATING_AGENCY_USER_DEFINED = 18;</code>
     */
    public static final int RATING_AGENCY_USER_DEFINED_VALUE = 18;
    /**
     * <code>RATING_AGENCY_L_S_F = 19;</code>
     */
    public static final int RATING_AGENCY_L_S_F_VALUE = 19;
    /**
     * <code>RATING_AGENCY_F_S_K = 20;</code>
     */
    public static final int RATING_AGENCY_F_S_K_VALUE = 20;
    /**
     * <code>RATING_AGENCY_F_C_B = 21;</code>
     */
    public static final int RATING_AGENCY_F_C_B_VALUE = 21;
    /**
     * <code>RATING_AGENCY_M_E_K_U = 22;</code>
     */
    public static final int RATING_AGENCY_M_E_K_U_VALUE = 22;
    /**
     * <code>RATING_AGENCY_M_I_C = 23;</code>
     */
    public static final int RATING_AGENCY_M_I_C_VALUE = 23;
    /**
     * <code>RATING_AGENCY_O_F_L_C__MINUS___N_Z = 24;</code>
     */
    public static final int RATING_AGENCY_O_F_L_C__MINUS___N_Z_VALUE = 24;
    /**
     * <code>RATING_AGENCY_M_P_A_A = 25;</code>
     */
    public static final int RATING_AGENCY_M_P_A_A_VALUE = 25;
    /**
     * <code>RATING_AGENCY_N_K_C = 26;</code>
     */
    public static final int RATING_AGENCY_N_K_C_VALUE = 26;
    /**
     * <code>RATING_AGENCY_A_C_M_A = 27;</code>
     */
    public static final int RATING_AGENCY_A_C_M_A_VALUE = 27;
    /**
     * <code>RATING_AGENCY_FILMTILSYNET = 28;</code>
     */
    public static final int RATING_AGENCY_FILMTILSYNET_VALUE = 28;
    /**
     * <code>RATING_AGENCY_O_F_L_C = 29;</code>
     */
    public static final int RATING_AGENCY_O_F_L_C_VALUE = 29;
    /**
     * <code>RATING_AGENCY_EIRIN = 30;</code>
     */
    public static final int RATING_AGENCY_EIRIN_VALUE = 30;
    /**
     * <code>RATING_AGENCY_B_F_C_O = 31;</code>
     */
    public static final int RATING_AGENCY_B_F_C_O_VALUE = 31;
    /**
     * <code>RATING_AGENCY_SI_B_C_I = 32;</code>
     */
    public static final int RATING_AGENCY_SI_B_C_I_VALUE = 32;
    /**
     * <code>RATING_AGENCY_K_M_R_B = 33;</code>
     */
    public static final int RATING_AGENCY_K_M_R_B_VALUE = 33;
    /**
     * <code>RATING_AGENCY_R_I_A_A = 34;</code>
     */
    public static final int RATING_AGENCY_R_I_A_A_VALUE = 34;
    /**
     * <code>RATING_AGENCY_M_O_C__MINUS___T_W = 35;</code>
     */
    public static final int RATING_AGENCY_M_O_C__MINUS___T_W_VALUE = 35;
    /**
     * <code>RATING_AGENCY_P_E_G_I = 36;</code>
     */
    public static final int RATING_AGENCY_P_E_G_I_VALUE = 36;
    /**
     * <code>RATING_AGENCY_F_C_O = 37;</code>
     */
    public static final int RATING_AGENCY_F_C_O_VALUE = 37;
    /**
     * <code>RATING_AGENCY_C_N_A = 38;</code>
     */
    public static final int RATING_AGENCY_C_N_A_VALUE = 38;
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___C_Z = 39;</code>
     */
    public static final int RATING_AGENCY_F_I_L_M__MINUS___C_Z_VALUE = 39;
    /**
     * <code>RATING_AGENCY_I_F_C_O_F = 40;</code>
     */
    public static final int RATING_AGENCY_I_F_C_O_F_VALUE = 40;
    /**
     * <code>RATING_AGENCY_C_N_C = 41;</code>
     */
    public static final int RATING_AGENCY_C_N_C_VALUE = 41;
    /**
     * <code>RATING_AGENCY_F_P_B = 42;</code>
     */
    public static final int RATING_AGENCY_F_P_B_VALUE = 42;
    /**
     * <code>RATING_AGENCY_N_C_S = 43;</code>
     */
    public static final int RATING_AGENCY_N_C_S_VALUE = 43;
    /**
     * <code>RATING_AGENCY_C_H_V_R_S = 44;</code>
     */
    public static final int RATING_AGENCY_C_H_V_R_S_VALUE = 44;
    /**
     * <code>RATING_AGENCY_R_T_C = 45;</code>
     */
    public static final int RATING_AGENCY_R_T_C_VALUE = 45;
    /**
     * <code>RATING_AGENCY_R_T_E = 46;</code>
     */
    public static final int RATING_AGENCY_R_T_E_VALUE = 46;
    /**
     * <code>RATING_AGENCY_C_B_F_C = 47;</code>
     */
    public static final int RATING_AGENCY_C_B_F_C_VALUE = 47;
    /**
     * <code>RATING_AGENCY_MEDIETILSYNET = 48;</code>
     */
    public static final int RATING_AGENCY_MEDIETILSYNET_VALUE = 48;
    /**
     * <code>RATING_AGENCY_C_S_C_F = 49;</code>
     */
    public static final int RATING_AGENCY_C_S_C_F_VALUE = 49;
    /**
     * <code>RATING_AGENCY_A_F_R = 50;</code>
     */
    public static final int RATING_AGENCY_A_F_R_VALUE = 50;
    /**
     * <code>RATING_AGENCY_N_F_R_C = 51;</code>
     */
    public static final int RATING_AGENCY_N_F_R_C_VALUE = 51;
    /**
     * <code>RATING_AGENCY_A_G_C_O_M = 52;</code>
     */
    public static final int RATING_AGENCY_A_G_C_O_M_VALUE = 52;
    /**
     * <code>RATING_AGENCY_M_T_R_C_B = 53;</code>
     */
    public static final int RATING_AGENCY_M_T_R_C_B_VALUE = 53;
    /**
     * <code>RATING_AGENCY_C_S_A = 54;</code>
     */
    public static final int RATING_AGENCY_C_S_A_VALUE = 54;
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___E_E = 55;</code>
     */
    public static final int RATING_AGENCY_F_I_L_M__MINUS___E_E_VALUE = 55;
    /**
     * <code>RATING_AGENCY_S_B_B = 56;</code>
     */
    public static final int RATING_AGENCY_S_B_B_VALUE = 56;
    /**
     * <code>RATING_AGENCY_F_I_L_M__MINUS___E_G = 57;</code>
     */
    public static final int RATING_AGENCY_F_I_L_M__MINUS___E_G_VALUE = 57;
    /**
     * <code>RATING_AGENCY_M_P_A_A_T = 58;</code>
     */
    public static final int RATING_AGENCY_M_P_A_A_T_VALUE = 58;
    /**
     * <code>RATING_AGENCY_SMAIS = 59;</code>
     */
    public static final int RATING_AGENCY_SMAIS_VALUE = 59;
    /**
     * <code>RATING_AGENCY_C_I_C_F = 60;</code>
     */
    public static final int RATING_AGENCY_C_I_C_F_VALUE = 60;
    /**
     * <code>RATING_AGENCY_K_F_C_B = 61;</code>
     */
    public static final int RATING_AGENCY_K_F_C_B_VALUE = 61;
    /**
     * <code>RATING_AGENCY_KIJKWIJZER = 62;</code>
     */
    public static final int RATING_AGENCY_KIJKWIJZER_VALUE = 62;
    /**
     * <code>RATING_AGENCY_S_P_I_O__MINUS___J_K = 63;</code>
     */
    public static final int RATING_AGENCY_S_P_I_O__MINUS___J_K_VALUE = 63;
    /**
     * <code>RATING_AGENCY_D_J_C_T_Q = 64;</code>
     */
    public static final int RATING_AGENCY_D_J_C_T_Q_VALUE = 64;
    /**
     * <code>RATING_AGENCY_T_V_P_G = 65;</code>
     */
    public static final int RATING_AGENCY_T_V_P_G_VALUE = 65;
    /**
     * <code>RATING_AGENCY_M_O_C = 66;</code>
     */
    public static final int RATING_AGENCY_M_O_C_VALUE = 66;
    /**
     * <code>RATING_AGENCY_M_B_A_C_T = 67;</code>
     */
    public static final int RATING_AGENCY_M_B_A_C_T_VALUE = 67;
    /**
     * <code>RATING_AGENCY_M_B_U = 68;</code>
     */
    public static final int RATING_AGENCY_M_B_U_VALUE = 68;
    /**
     * <code>RATING_AGENCY_B_B_F_C = 69;</code>
     */
    public static final int RATING_AGENCY_B_B_F_C_VALUE = 69;
    /**
     * <code>RATING_AGENCY_C_C_C = 70;</code>
     */
    public static final int RATING_AGENCY_C_C_C_VALUE = 70;
    /**
     * <code>RATING_AGENCY_O_F_R_B = 71;</code>
     */
    public static final int RATING_AGENCY_O_F_R_B_VALUE = 71;
    /**
     * <code>RATING_AGENCY_C_C_E = 72;</code>
     */
    public static final int RATING_AGENCY_C_C_E_VALUE = 72;
    /**
     * <code>RATING_AGENCY_F_A_B = 73;</code>
     */
    public static final int RATING_AGENCY_F_A_B_VALUE = 73;
    /**
     * <code>RATING_AGENCY_K_R = 74;</code>
     */
    public static final int RATING_AGENCY_K_R_VALUE = 74;
    /**
     * <code>RATING_AGENCY_I_F_C_O = 75;</code>
     */
    public static final int RATING_AGENCY_I_F_C_O_VALUE = 75;
    /**
     * <code>RATING_AGENCY_B_F_V_C = 76;</code>
     */
    public static final int RATING_AGENCY_B_F_V_C_VALUE = 76;
    /**
     * <code>RATING_AGENCY_C_B_S_C = 77;</code>
     */
    public static final int RATING_AGENCY_C_B_S_C_VALUE = 77;
    /**
     * <code>RATING_AGENCY_C_P_B_C = 78;</code>
     */
    public static final int RATING_AGENCY_C_P_B_C_VALUE = 78;
    /**
     * <code>RATING_AGENCY_K_R_R_I_T = 79;</code>
     */
    public static final int RATING_AGENCY_K_R_R_I_T_VALUE = 79;
    /**
     * <code>RATING_AGENCY_C_B_S_C__MINUS___F = 80;</code>
     */
    public static final int RATING_AGENCY_C_B_S_C__MINUS___F_VALUE = 80;
    /**
     * <code>RATING_AGENCY_M_K_R_F = 81;</code>
     */
    public static final int RATING_AGENCY_M_K_R_F_VALUE = 81;
    /**
     * <code>RATING_AGENCY_F_R_B = 82;</code>
     */
    public static final int RATING_AGENCY_F_R_B_VALUE = 82;
    /**
     * <code>RATING_AGENCY_I_N_C_A_A = 83;</code>
     */
    public static final int RATING_AGENCY_I_N_C_A_A_VALUE = 83;
    /**
     * <code>RATING_AGENCY_R_C_N_O_F = 84;</code>
     */
    public static final int RATING_AGENCY_R_C_N_O_F_VALUE = 84;
    /**
     * <code>RATING_AGENCY_N_I_C_A_M = 85;</code>
     */
    public static final int RATING_AGENCY_N_I_C_A_M_VALUE = 85;
    /**
     * <code>RATING_AGENCY_E_S_R_B = 86;</code>
     */
    public static final int RATING_AGENCY_E_S_R_B_VALUE = 86;
    /**
     * <code>RATING_AGENCY_U_S_F_A = 87;</code>
     */
    public static final int RATING_AGENCY_U_S_F_A_VALUE = 87;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RatingAgency valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RatingAgency forNumber(int value) {
      switch (value) {
        case 0: return RATING_AGENCY_T_E_L_A;
        case 1: return RATING_AGENCY_V_E_T;
        case 2: return RATING_AGENCY_F_I_L_M__MINUS___P_E;
        case 3: return RATING_AGENCY_R_D_C_Q;
        case 4: return RATING_AGENCY_B_F_S_C;
        case 5: return RATING_AGENCY_M_D_A;
        case 6: return RATING_AGENCY_B_M_U_K_K;
        case 7: return RATING_AGENCY_F_I_L_M__MINUS___G_R;
        case 8: return RATING_AGENCY_N_B_C;
        case 9: return RATING_AGENCY_M_C_C_A_A;
        case 10: return RATING_AGENCY_N_F_V_C_B;
        case 11: return RATING_AGENCY_M_D_C_B;
        case 12: return RATING_AGENCY_A_N_A_T_E_L;
        case 13: return RATING_AGENCY_S_M__MINUS___S_A;
        case 14: return RATING_AGENCY_F_I_L_M__MINUS___C_H;
        case 15: return RATING_AGENCY_I_C_A_A;
        case 16: return RATING_AGENCY_F_I_L_M__MINUS___S_K;
        case 17: return RATING_AGENCY_M_F_C_B;
        case 18: return RATING_AGENCY_USER_DEFINED;
        case 19: return RATING_AGENCY_L_S_F;
        case 20: return RATING_AGENCY_F_S_K;
        case 21: return RATING_AGENCY_F_C_B;
        case 22: return RATING_AGENCY_M_E_K_U;
        case 23: return RATING_AGENCY_M_I_C;
        case 24: return RATING_AGENCY_O_F_L_C__MINUS___N_Z;
        case 25: return RATING_AGENCY_M_P_A_A;
        case 26: return RATING_AGENCY_N_K_C;
        case 27: return RATING_AGENCY_A_C_M_A;
        case 28: return RATING_AGENCY_FILMTILSYNET;
        case 29: return RATING_AGENCY_O_F_L_C;
        case 30: return RATING_AGENCY_EIRIN;
        case 31: return RATING_AGENCY_B_F_C_O;
        case 32: return RATING_AGENCY_SI_B_C_I;
        case 33: return RATING_AGENCY_K_M_R_B;
        case 34: return RATING_AGENCY_R_I_A_A;
        case 35: return RATING_AGENCY_M_O_C__MINUS___T_W;
        case 36: return RATING_AGENCY_P_E_G_I;
        case 37: return RATING_AGENCY_F_C_O;
        case 38: return RATING_AGENCY_C_N_A;
        case 39: return RATING_AGENCY_F_I_L_M__MINUS___C_Z;
        case 40: return RATING_AGENCY_I_F_C_O_F;
        case 41: return RATING_AGENCY_C_N_C;
        case 42: return RATING_AGENCY_F_P_B;
        case 43: return RATING_AGENCY_N_C_S;
        case 44: return RATING_AGENCY_C_H_V_R_S;
        case 45: return RATING_AGENCY_R_T_C;
        case 46: return RATING_AGENCY_R_T_E;
        case 47: return RATING_AGENCY_C_B_F_C;
        case 48: return RATING_AGENCY_MEDIETILSYNET;
        case 49: return RATING_AGENCY_C_S_C_F;
        case 50: return RATING_AGENCY_A_F_R;
        case 51: return RATING_AGENCY_N_F_R_C;
        case 52: return RATING_AGENCY_A_G_C_O_M;
        case 53: return RATING_AGENCY_M_T_R_C_B;
        case 54: return RATING_AGENCY_C_S_A;
        case 55: return RATING_AGENCY_F_I_L_M__MINUS___E_E;
        case 56: return RATING_AGENCY_S_B_B;
        case 57: return RATING_AGENCY_F_I_L_M__MINUS___E_G;
        case 58: return RATING_AGENCY_M_P_A_A_T;
        case 59: return RATING_AGENCY_SMAIS;
        case 60: return RATING_AGENCY_C_I_C_F;
        case 61: return RATING_AGENCY_K_F_C_B;
        case 62: return RATING_AGENCY_KIJKWIJZER;
        case 63: return RATING_AGENCY_S_P_I_O__MINUS___J_K;
        case 64: return RATING_AGENCY_D_J_C_T_Q;
        case 65: return RATING_AGENCY_T_V_P_G;
        case 66: return RATING_AGENCY_M_O_C;
        case 67: return RATING_AGENCY_M_B_A_C_T;
        case 68: return RATING_AGENCY_M_B_U;
        case 69: return RATING_AGENCY_B_B_F_C;
        case 70: return RATING_AGENCY_C_C_C;
        case 71: return RATING_AGENCY_O_F_R_B;
        case 72: return RATING_AGENCY_C_C_E;
        case 73: return RATING_AGENCY_F_A_B;
        case 74: return RATING_AGENCY_K_R;
        case 75: return RATING_AGENCY_I_F_C_O;
        case 76: return RATING_AGENCY_B_F_V_C;
        case 77: return RATING_AGENCY_C_B_S_C;
        case 78: return RATING_AGENCY_C_P_B_C;
        case 79: return RATING_AGENCY_K_R_R_I_T;
        case 80: return RATING_AGENCY_C_B_S_C__MINUS___F;
        case 81: return RATING_AGENCY_M_K_R_F;
        case 82: return RATING_AGENCY_F_R_B;
        case 83: return RATING_AGENCY_I_N_C_A_A;
        case 84: return RATING_AGENCY_R_C_N_O_F;
        case 85: return RATING_AGENCY_N_I_C_A_M;
        case 86: return RATING_AGENCY_E_S_R_B;
        case 87: return RATING_AGENCY_U_S_F_A;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RatingAgency>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RatingAgency> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RatingAgency>() {
            public RatingAgency findValueByNumber(int number) {
              return RatingAgency.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(117);
    }

    private static final RatingAgency[] VALUES = values();

    public static RatingAgency valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RatingAgency(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RatingAgency)
  }

  /**
   * Protobuf enum {@code avs.RatingReason}
   */
  public enum RatingReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RATING_REASON_DRUGS = 0;</code>
     */
    RATING_REASON_DRUGS(0),
    /**
     * <code>RATING_REASON_GAMBLING = 1;</code>
     */
    RATING_REASON_GAMBLING(1),
    /**
     * <code>RATING_REASON_SEXUAL_VIOLENCE = 2;</code>
     */
    RATING_REASON_SEXUAL_VIOLENCE(2),
    /**
     * <code>RATING_REASON_BEHAVIOUR = 3;</code>
     */
    RATING_REASON_BEHAVIOUR(3),
    /**
     * <code>RATING_REASON_BLASPHEMY = 4;</code>
     */
    RATING_REASON_BLASPHEMY(4),
    /**
     * <code>RATING_REASON_VIOLENCE = 5;</code>
     */
    RATING_REASON_VIOLENCE(5),
    /**
     * <code>RATING_REASON_ONLINE_GAMEPLAY = 6;</code>
     */
    RATING_REASON_ONLINE_GAMEPLAY(6),
    /**
     * <code>RATING_REASON_SEX = 7;</code>
     */
    RATING_REASON_SEX(7),
    /**
     * <code>RATING_REASON_NUDITY = 8;</code>
     */
    RATING_REASON_NUDITY(8),
    /**
     * <code>RATING_REASON_DISCRIMINATION_OR_PREJUDICE = 9;</code>
     */
    RATING_REASON_DISCRIMINATION_OR_PREJUDICE(9),
    /**
     * <code>RATING_REASON_EXPLICIT_SEX = 10;</code>
     */
    RATING_REASON_EXPLICIT_SEX(10),
    /**
     * <code>RATING_REASON_ILLEGAL_DRUGS = 11;</code>
     */
    RATING_REASON_ILLEGAL_DRUGS(11),
    /**
     * <code>RATING_REASON_FEAR_OR_HORROR = 12;</code>
     */
    RATING_REASON_FEAR_OR_HORROR(12),
    /**
     * <code>RATING_REASON_EXTREME_VIOLENCE = 13;</code>
     */
    RATING_REASON_EXTREME_VIOLENCE(13),
    /**
     * <code>RATING_REASON_LANGUAGE = 14;</code>
     */
    RATING_REASON_LANGUAGE(14),
    /**
     * <code>RATING_REASON_CRIME = 15;</code>
     */
    RATING_REASON_CRIME(15),
    /**
     * <code>RATING_REASON_LEGAL_DRUGS = 16;</code>
     */
    RATING_REASON_LEGAL_DRUGS(16),
    /**
     * <code>RATING_REASON_THEME = 17;</code>
     */
    RATING_REASON_THEME(17),
    /**
     * <code>RATING_REASON_USER_DEFINED = 18;</code>
     */
    RATING_REASON_USER_DEFINED(18),
    ;

    /**
     * <code>RATING_REASON_DRUGS = 0;</code>
     */
    public static final int RATING_REASON_DRUGS_VALUE = 0;
    /**
     * <code>RATING_REASON_GAMBLING = 1;</code>
     */
    public static final int RATING_REASON_GAMBLING_VALUE = 1;
    /**
     * <code>RATING_REASON_SEXUAL_VIOLENCE = 2;</code>
     */
    public static final int RATING_REASON_SEXUAL_VIOLENCE_VALUE = 2;
    /**
     * <code>RATING_REASON_BEHAVIOUR = 3;</code>
     */
    public static final int RATING_REASON_BEHAVIOUR_VALUE = 3;
    /**
     * <code>RATING_REASON_BLASPHEMY = 4;</code>
     */
    public static final int RATING_REASON_BLASPHEMY_VALUE = 4;
    /**
     * <code>RATING_REASON_VIOLENCE = 5;</code>
     */
    public static final int RATING_REASON_VIOLENCE_VALUE = 5;
    /**
     * <code>RATING_REASON_ONLINE_GAMEPLAY = 6;</code>
     */
    public static final int RATING_REASON_ONLINE_GAMEPLAY_VALUE = 6;
    /**
     * <code>RATING_REASON_SEX = 7;</code>
     */
    public static final int RATING_REASON_SEX_VALUE = 7;
    /**
     * <code>RATING_REASON_NUDITY = 8;</code>
     */
    public static final int RATING_REASON_NUDITY_VALUE = 8;
    /**
     * <code>RATING_REASON_DISCRIMINATION_OR_PREJUDICE = 9;</code>
     */
    public static final int RATING_REASON_DISCRIMINATION_OR_PREJUDICE_VALUE = 9;
    /**
     * <code>RATING_REASON_EXPLICIT_SEX = 10;</code>
     */
    public static final int RATING_REASON_EXPLICIT_SEX_VALUE = 10;
    /**
     * <code>RATING_REASON_ILLEGAL_DRUGS = 11;</code>
     */
    public static final int RATING_REASON_ILLEGAL_DRUGS_VALUE = 11;
    /**
     * <code>RATING_REASON_FEAR_OR_HORROR = 12;</code>
     */
    public static final int RATING_REASON_FEAR_OR_HORROR_VALUE = 12;
    /**
     * <code>RATING_REASON_EXTREME_VIOLENCE = 13;</code>
     */
    public static final int RATING_REASON_EXTREME_VIOLENCE_VALUE = 13;
    /**
     * <code>RATING_REASON_LANGUAGE = 14;</code>
     */
    public static final int RATING_REASON_LANGUAGE_VALUE = 14;
    /**
     * <code>RATING_REASON_CRIME = 15;</code>
     */
    public static final int RATING_REASON_CRIME_VALUE = 15;
    /**
     * <code>RATING_REASON_LEGAL_DRUGS = 16;</code>
     */
    public static final int RATING_REASON_LEGAL_DRUGS_VALUE = 16;
    /**
     * <code>RATING_REASON_THEME = 17;</code>
     */
    public static final int RATING_REASON_THEME_VALUE = 17;
    /**
     * <code>RATING_REASON_USER_DEFINED = 18;</code>
     */
    public static final int RATING_REASON_USER_DEFINED_VALUE = 18;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RatingReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RatingReason forNumber(int value) {
      switch (value) {
        case 0: return RATING_REASON_DRUGS;
        case 1: return RATING_REASON_GAMBLING;
        case 2: return RATING_REASON_SEXUAL_VIOLENCE;
        case 3: return RATING_REASON_BEHAVIOUR;
        case 4: return RATING_REASON_BLASPHEMY;
        case 5: return RATING_REASON_VIOLENCE;
        case 6: return RATING_REASON_ONLINE_GAMEPLAY;
        case 7: return RATING_REASON_SEX;
        case 8: return RATING_REASON_NUDITY;
        case 9: return RATING_REASON_DISCRIMINATION_OR_PREJUDICE;
        case 10: return RATING_REASON_EXPLICIT_SEX;
        case 11: return RATING_REASON_ILLEGAL_DRUGS;
        case 12: return RATING_REASON_FEAR_OR_HORROR;
        case 13: return RATING_REASON_EXTREME_VIOLENCE;
        case 14: return RATING_REASON_LANGUAGE;
        case 15: return RATING_REASON_CRIME;
        case 16: return RATING_REASON_LEGAL_DRUGS;
        case 17: return RATING_REASON_THEME;
        case 18: return RATING_REASON_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RatingReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RatingReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RatingReason>() {
            public RatingReason findValueByNumber(int number) {
              return RatingReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(118);
    }

    private static final RatingReason[] VALUES = values();

    public static RatingReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RatingReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RatingReason)
  }

  /**
   * Protobuf enum {@code avs.RdrMessageType}
   */
  public enum RdrMessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RDR_MESSAGE_TYPE_REQUEST_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE = 0;</code>
     */
    RDR_MESSAGE_TYPE_REQUEST_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE(0),
    /**
     * <code>RDR_MESSAGE_TYPE_DECLARATION_OF_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE = 1;</code>
     */
    RDR_MESSAGE_TYPE_DECLARATION_OF_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE(1),
    /**
     * <code>RDR_MESSAGE_TYPE_REVOKE_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE = 2;</code>
     */
    RDR_MESSAGE_TYPE_REVOKE_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE(2),
    /**
     * <code>RDR_MESSAGE_TYPE_RIGHTS_CLAIM_STATUS_UPDATE_MESSAGE = 3;</code>
     */
    RDR_MESSAGE_TYPE_RIGHTS_CLAIM_STATUS_UPDATE_MESSAGE(3),
    /**
     * <code>RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_MESSAGE = 4;</code>
     */
    RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_MESSAGE(4),
    /**
     * <code>RDR_MESSAGE_TYPE_REVOKE_COLLECTION_MANDATE_MESSAGE = 5;</code>
     */
    RDR_MESSAGE_TYPE_REVOKE_COLLECTION_MANDATE_MESSAGE(5),
    /**
     * <code>RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_STATUS_UPDATE_MESSAGE = 6;</code>
     */
    RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_STATUS_UPDATE_MESSAGE(6),
    ;

    /**
     * <code>RDR_MESSAGE_TYPE_REQUEST_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE = 0;</code>
     */
    public static final int RDR_MESSAGE_TYPE_REQUEST_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE_VALUE = 0;
    /**
     * <code>RDR_MESSAGE_TYPE_DECLARATION_OF_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE = 1;</code>
     */
    public static final int RDR_MESSAGE_TYPE_DECLARATION_OF_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE_VALUE = 1;
    /**
     * <code>RDR_MESSAGE_TYPE_REVOKE_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE = 2;</code>
     */
    public static final int RDR_MESSAGE_TYPE_REVOKE_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE_VALUE = 2;
    /**
     * <code>RDR_MESSAGE_TYPE_RIGHTS_CLAIM_STATUS_UPDATE_MESSAGE = 3;</code>
     */
    public static final int RDR_MESSAGE_TYPE_RIGHTS_CLAIM_STATUS_UPDATE_MESSAGE_VALUE = 3;
    /**
     * <code>RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_MESSAGE = 4;</code>
     */
    public static final int RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_MESSAGE_VALUE = 4;
    /**
     * <code>RDR_MESSAGE_TYPE_REVOKE_COLLECTION_MANDATE_MESSAGE = 5;</code>
     */
    public static final int RDR_MESSAGE_TYPE_REVOKE_COLLECTION_MANDATE_MESSAGE_VALUE = 5;
    /**
     * <code>RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_STATUS_UPDATE_MESSAGE = 6;</code>
     */
    public static final int RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_STATUS_UPDATE_MESSAGE_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RdrMessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RdrMessageType forNumber(int value) {
      switch (value) {
        case 0: return RDR_MESSAGE_TYPE_REQUEST_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE;
        case 1: return RDR_MESSAGE_TYPE_DECLARATION_OF_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE;
        case 2: return RDR_MESSAGE_TYPE_REVOKE_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE;
        case 3: return RDR_MESSAGE_TYPE_RIGHTS_CLAIM_STATUS_UPDATE_MESSAGE;
        case 4: return RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_MESSAGE;
        case 5: return RDR_MESSAGE_TYPE_REVOKE_COLLECTION_MANDATE_MESSAGE;
        case 6: return RDR_MESSAGE_TYPE_ASSERTION_OF_COLLECTION_MANDATE_STATUS_UPDATE_MESSAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RdrMessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RdrMessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RdrMessageType>() {
            public RdrMessageType findValueByNumber(int number) {
              return RdrMessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(119);
    }

    private static final RdrMessageType[] VALUES = values();

    public static RdrMessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RdrMessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RdrMessageType)
  }

  /**
   * Protobuf enum {@code avs.RdrcFileStatus}
   */
  public enum RdrcFileStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RDRC_FILE_STATUS_FILE_O_K = 0;</code>
     */
    RDRC_FILE_STATUS_FILE_O_K(0),
    /**
     * <code>RDRC_FILE_STATUS_USER_DEFINED = 1;</code>
     */
    RDRC_FILE_STATUS_USER_DEFINED(1),
    ;

    /**
     * <code>RDRC_FILE_STATUS_FILE_O_K = 0;</code>
     */
    public static final int RDRC_FILE_STATUS_FILE_O_K_VALUE = 0;
    /**
     * <code>RDRC_FILE_STATUS_USER_DEFINED = 1;</code>
     */
    public static final int RDRC_FILE_STATUS_USER_DEFINED_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RdrcFileStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RdrcFileStatus forNumber(int value) {
      switch (value) {
        case 0: return RDRC_FILE_STATUS_FILE_O_K;
        case 1: return RDRC_FILE_STATUS_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RdrcFileStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RdrcFileStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RdrcFileStatus>() {
            public RdrcFileStatus findValueByNumber(int number) {
              return RdrcFileStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(120);
    }

    private static final RdrcFileStatus[] VALUES = values();

    public static RdrcFileStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RdrcFileStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RdrcFileStatus)
  }

  /**
   * Protobuf enum {@code avs.RecipientRevenueType}
   */
  public enum RecipientRevenueType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RECIPIENT_REVENUE_TYPE_PERFORMER_AND_PRODUCER_REVENUE = 0;</code>
     */
    RECIPIENT_REVENUE_TYPE_PERFORMER_AND_PRODUCER_REVENUE(0),
    /**
     * <code>RECIPIENT_REVENUE_TYPE_PERFORMER_REVENUE = 1;</code>
     */
    RECIPIENT_REVENUE_TYPE_PERFORMER_REVENUE(1),
    /**
     * <code>RECIPIENT_REVENUE_TYPE_PRODUCER_REVENUE = 2;</code>
     */
    RECIPIENT_REVENUE_TYPE_PRODUCER_REVENUE(2),
    ;

    /**
     * <code>RECIPIENT_REVENUE_TYPE_PERFORMER_AND_PRODUCER_REVENUE = 0;</code>
     */
    public static final int RECIPIENT_REVENUE_TYPE_PERFORMER_AND_PRODUCER_REVENUE_VALUE = 0;
    /**
     * <code>RECIPIENT_REVENUE_TYPE_PERFORMER_REVENUE = 1;</code>
     */
    public static final int RECIPIENT_REVENUE_TYPE_PERFORMER_REVENUE_VALUE = 1;
    /**
     * <code>RECIPIENT_REVENUE_TYPE_PRODUCER_REVENUE = 2;</code>
     */
    public static final int RECIPIENT_REVENUE_TYPE_PRODUCER_REVENUE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RecipientRevenueType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RecipientRevenueType forNumber(int value) {
      switch (value) {
        case 0: return RECIPIENT_REVENUE_TYPE_PERFORMER_AND_PRODUCER_REVENUE;
        case 1: return RECIPIENT_REVENUE_TYPE_PERFORMER_REVENUE;
        case 2: return RECIPIENT_REVENUE_TYPE_PRODUCER_REVENUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RecipientRevenueType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RecipientRevenueType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RecipientRevenueType>() {
            public RecipientRevenueType findValueByNumber(int number) {
              return RecipientRevenueType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(121);
    }

    private static final RecipientRevenueType[] VALUES = values();

    public static RecipientRevenueType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RecipientRevenueType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RecipientRevenueType)
  }

  /**
   * Protobuf enum {@code avs.RecordingMode}
   */
  public enum RecordingMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RECORDING_MODE_QUAD = 0;</code>
     */
    RECORDING_MODE_QUAD(0),
    /**
     * <code>RECORDING_MODE_MULTI_TRACK = 1;</code>
     */
    RECORDING_MODE_MULTI_TRACK(1),
    /**
     * <code>RECORDING_MODE_SURROUND_SOUND = 2;</code>
     */
    RECORDING_MODE_SURROUND_SOUND(2),
    /**
     * <code>RECORDING_MODE_UNKNOWN = 3;</code>
     */
    RECORDING_MODE_UNKNOWN(3),
    /**
     * <code>RECORDING_MODE_MONO = 4;</code>
     */
    RECORDING_MODE_MONO(4),
    /**
     * <code>RECORDING_MODE_BINAURAL_AUDIO = 5;</code>
     */
    RECORDING_MODE_BINAURAL_AUDIO(5),
    /**
     * <code>RECORDING_MODE_L_C_R = 6;</code>
     */
    RECORDING_MODE_L_C_R(6),
    /**
     * <code>RECORDING_MODE_STEREO = 7;</code>
     */
    RECORDING_MODE_STEREO(7),
    /**
     * <code>RECORDING_MODE_STEMS = 8;</code>
     */
    RECORDING_MODE_STEMS(8),
    /**
     * <code>RECORDING_MODE_MULTICHANNEL_AUDIO = 9;</code>
     */
    RECORDING_MODE_MULTICHANNEL_AUDIO(9),
    ;

    /**
     * <code>RECORDING_MODE_QUAD = 0;</code>
     */
    public static final int RECORDING_MODE_QUAD_VALUE = 0;
    /**
     * <code>RECORDING_MODE_MULTI_TRACK = 1;</code>
     */
    public static final int RECORDING_MODE_MULTI_TRACK_VALUE = 1;
    /**
     * <code>RECORDING_MODE_SURROUND_SOUND = 2;</code>
     */
    public static final int RECORDING_MODE_SURROUND_SOUND_VALUE = 2;
    /**
     * <code>RECORDING_MODE_UNKNOWN = 3;</code>
     */
    public static final int RECORDING_MODE_UNKNOWN_VALUE = 3;
    /**
     * <code>RECORDING_MODE_MONO = 4;</code>
     */
    public static final int RECORDING_MODE_MONO_VALUE = 4;
    /**
     * <code>RECORDING_MODE_BINAURAL_AUDIO = 5;</code>
     */
    public static final int RECORDING_MODE_BINAURAL_AUDIO_VALUE = 5;
    /**
     * <code>RECORDING_MODE_L_C_R = 6;</code>
     */
    public static final int RECORDING_MODE_L_C_R_VALUE = 6;
    /**
     * <code>RECORDING_MODE_STEREO = 7;</code>
     */
    public static final int RECORDING_MODE_STEREO_VALUE = 7;
    /**
     * <code>RECORDING_MODE_STEMS = 8;</code>
     */
    public static final int RECORDING_MODE_STEMS_VALUE = 8;
    /**
     * <code>RECORDING_MODE_MULTICHANNEL_AUDIO = 9;</code>
     */
    public static final int RECORDING_MODE_MULTICHANNEL_AUDIO_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RecordingMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RecordingMode forNumber(int value) {
      switch (value) {
        case 0: return RECORDING_MODE_QUAD;
        case 1: return RECORDING_MODE_MULTI_TRACK;
        case 2: return RECORDING_MODE_SURROUND_SOUND;
        case 3: return RECORDING_MODE_UNKNOWN;
        case 4: return RECORDING_MODE_MONO;
        case 5: return RECORDING_MODE_BINAURAL_AUDIO;
        case 6: return RECORDING_MODE_L_C_R;
        case 7: return RECORDING_MODE_STEREO;
        case 8: return RECORDING_MODE_STEMS;
        case 9: return RECORDING_MODE_MULTICHANNEL_AUDIO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RecordingMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RecordingMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RecordingMode>() {
            public RecordingMode findValueByNumber(int number) {
              return RecordingMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(122);
    }

    private static final RecordingMode[] VALUES = values();

    public static RecordingMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RecordingMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RecordingMode)
  }

  /**
   * Protobuf enum {@code avs.RecordingPartType}
   */
  public enum RecordingPartType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RECORDING_PART_TYPE_HOOK = 0;</code>
     */
    RECORDING_PART_TYPE_HOOK(0),
    /**
     * <code>RECORDING_PART_TYPE_SOLO_SECTION = 1;</code>
     */
    RECORDING_PART_TYPE_SOLO_SECTION(1),
    /**
     * <code>RECORDING_PART_TYPE_HEAD = 2;</code>
     */
    RECORDING_PART_TYPE_HEAD(2),
    /**
     * <code>RECORDING_PART_TYPE_CHORUS = 3;</code>
     */
    RECORDING_PART_TYPE_CHORUS(3),
    /**
     * <code>RECORDING_PART_TYPE_CODA = 4;</code>
     */
    RECORDING_PART_TYPE_CODA(4),
    /**
     * <code>RECORDING_PART_TYPE_PRE_CHORUS = 5;</code>
     */
    RECORDING_PART_TYPE_PRE_CHORUS(5),
    /**
     * <code>RECORDING_PART_TYPE_PREVIEW = 6;</code>
     */
    RECORDING_PART_TYPE_PREVIEW(6),
    /**
     * <code>RECORDING_PART_TYPE_DROP = 7;</code>
     */
    RECORDING_PART_TYPE_DROP(7),
    /**
     * <code>RECORDING_PART_TYPE_INTRO = 8;</code>
     */
    RECORDING_PART_TYPE_INTRO(8),
    /**
     * <code>RECORDING_PART_TYPE_USED = 9;</code>
     */
    RECORDING_PART_TYPE_USED(9),
    /**
     * <code>RECORDING_PART_TYPE_BREAKDOWN = 10;</code>
     */
    RECORDING_PART_TYPE_BREAKDOWN(10),
    /**
     * <code>RECORDING_PART_TYPE_OUTRO = 11;</code>
     */
    RECORDING_PART_TYPE_OUTRO(11),
    /**
     * <code>RECORDING_PART_TYPE_MIDDLE_EIGHTH = 12;</code>
     */
    RECORDING_PART_TYPE_MIDDLE_EIGHTH(12),
    /**
     * <code>RECORDING_PART_TYPE_USER_DEFINED = 13;</code>
     */
    RECORDING_PART_TYPE_USER_DEFINED(13),
    /**
     * <code>RECORDING_PART_TYPE_BRIDGE = 14;</code>
     */
    RECORDING_PART_TYPE_BRIDGE(14),
    /**
     * <code>RECORDING_PART_TYPE_KEY_CHANGE = 15;</code>
     */
    RECORDING_PART_TYPE_KEY_CHANGE(15),
    /**
     * <code>RECORDING_PART_TYPE_VERSE = 16;</code>
     */
    RECORDING_PART_TYPE_VERSE(16),
    ;

    /**
     * <code>RECORDING_PART_TYPE_HOOK = 0;</code>
     */
    public static final int RECORDING_PART_TYPE_HOOK_VALUE = 0;
    /**
     * <code>RECORDING_PART_TYPE_SOLO_SECTION = 1;</code>
     */
    public static final int RECORDING_PART_TYPE_SOLO_SECTION_VALUE = 1;
    /**
     * <code>RECORDING_PART_TYPE_HEAD = 2;</code>
     */
    public static final int RECORDING_PART_TYPE_HEAD_VALUE = 2;
    /**
     * <code>RECORDING_PART_TYPE_CHORUS = 3;</code>
     */
    public static final int RECORDING_PART_TYPE_CHORUS_VALUE = 3;
    /**
     * <code>RECORDING_PART_TYPE_CODA = 4;</code>
     */
    public static final int RECORDING_PART_TYPE_CODA_VALUE = 4;
    /**
     * <code>RECORDING_PART_TYPE_PRE_CHORUS = 5;</code>
     */
    public static final int RECORDING_PART_TYPE_PRE_CHORUS_VALUE = 5;
    /**
     * <code>RECORDING_PART_TYPE_PREVIEW = 6;</code>
     */
    public static final int RECORDING_PART_TYPE_PREVIEW_VALUE = 6;
    /**
     * <code>RECORDING_PART_TYPE_DROP = 7;</code>
     */
    public static final int RECORDING_PART_TYPE_DROP_VALUE = 7;
    /**
     * <code>RECORDING_PART_TYPE_INTRO = 8;</code>
     */
    public static final int RECORDING_PART_TYPE_INTRO_VALUE = 8;
    /**
     * <code>RECORDING_PART_TYPE_USED = 9;</code>
     */
    public static final int RECORDING_PART_TYPE_USED_VALUE = 9;
    /**
     * <code>RECORDING_PART_TYPE_BREAKDOWN = 10;</code>
     */
    public static final int RECORDING_PART_TYPE_BREAKDOWN_VALUE = 10;
    /**
     * <code>RECORDING_PART_TYPE_OUTRO = 11;</code>
     */
    public static final int RECORDING_PART_TYPE_OUTRO_VALUE = 11;
    /**
     * <code>RECORDING_PART_TYPE_MIDDLE_EIGHTH = 12;</code>
     */
    public static final int RECORDING_PART_TYPE_MIDDLE_EIGHTH_VALUE = 12;
    /**
     * <code>RECORDING_PART_TYPE_USER_DEFINED = 13;</code>
     */
    public static final int RECORDING_PART_TYPE_USER_DEFINED_VALUE = 13;
    /**
     * <code>RECORDING_PART_TYPE_BRIDGE = 14;</code>
     */
    public static final int RECORDING_PART_TYPE_BRIDGE_VALUE = 14;
    /**
     * <code>RECORDING_PART_TYPE_KEY_CHANGE = 15;</code>
     */
    public static final int RECORDING_PART_TYPE_KEY_CHANGE_VALUE = 15;
    /**
     * <code>RECORDING_PART_TYPE_VERSE = 16;</code>
     */
    public static final int RECORDING_PART_TYPE_VERSE_VALUE = 16;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RecordingPartType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RecordingPartType forNumber(int value) {
      switch (value) {
        case 0: return RECORDING_PART_TYPE_HOOK;
        case 1: return RECORDING_PART_TYPE_SOLO_SECTION;
        case 2: return RECORDING_PART_TYPE_HEAD;
        case 3: return RECORDING_PART_TYPE_CHORUS;
        case 4: return RECORDING_PART_TYPE_CODA;
        case 5: return RECORDING_PART_TYPE_PRE_CHORUS;
        case 6: return RECORDING_PART_TYPE_PREVIEW;
        case 7: return RECORDING_PART_TYPE_DROP;
        case 8: return RECORDING_PART_TYPE_INTRO;
        case 9: return RECORDING_PART_TYPE_USED;
        case 10: return RECORDING_PART_TYPE_BREAKDOWN;
        case 11: return RECORDING_PART_TYPE_OUTRO;
        case 12: return RECORDING_PART_TYPE_MIDDLE_EIGHTH;
        case 13: return RECORDING_PART_TYPE_USER_DEFINED;
        case 14: return RECORDING_PART_TYPE_BRIDGE;
        case 15: return RECORDING_PART_TYPE_KEY_CHANGE;
        case 16: return RECORDING_PART_TYPE_VERSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RecordingPartType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RecordingPartType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RecordingPartType>() {
            public RecordingPartType findValueByNumber(int number) {
              return RecordingPartType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(123);
    }

    private static final RecordingPartType[] VALUES = values();

    public static RecordingPartType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RecordingPartType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RecordingPartType)
  }

  /**
   * Protobuf enum {@code avs.ReferenceCreation}
   */
  public enum ReferenceCreation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REFERENCE_CREATION_CONSUMER_RESOURCE = 0;</code>
     */
    REFERENCE_CREATION_CONSUMER_RESOURCE(0),
    /**
     * <code>REFERENCE_CREATION_REFERENCE_RESOURCE = 1;</code>
     */
    REFERENCE_CREATION_REFERENCE_RESOURCE(1),
    ;

    /**
     * <code>REFERENCE_CREATION_CONSUMER_RESOURCE = 0;</code>
     */
    public static final int REFERENCE_CREATION_CONSUMER_RESOURCE_VALUE = 0;
    /**
     * <code>REFERENCE_CREATION_REFERENCE_RESOURCE = 1;</code>
     */
    public static final int REFERENCE_CREATION_REFERENCE_RESOURCE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReferenceCreation valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReferenceCreation forNumber(int value) {
      switch (value) {
        case 0: return REFERENCE_CREATION_CONSUMER_RESOURCE;
        case 1: return REFERENCE_CREATION_REFERENCE_RESOURCE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReferenceCreation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReferenceCreation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReferenceCreation>() {
            public ReferenceCreation findValueByNumber(int number) {
              return ReferenceCreation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(124);
    }

    private static final ReferenceCreation[] VALUES = values();

    public static ReferenceCreation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReferenceCreation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReferenceCreation)
  }

  /**
   * Protobuf enum {@code avs.ReferenceUnit}
   */
  public enum ReferenceUnit
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REFERENCE_UNIT_PER_USE = 0;</code>
     */
    REFERENCE_UNIT_PER_USE(0),
    /**
     * <code>REFERENCE_UNIT_PER_LICENSE = 1;</code>
     */
    REFERENCE_UNIT_PER_LICENSE(1),
    ;

    /**
     * <code>REFERENCE_UNIT_PER_USE = 0;</code>
     */
    public static final int REFERENCE_UNIT_PER_USE_VALUE = 0;
    /**
     * <code>REFERENCE_UNIT_PER_LICENSE = 1;</code>
     */
    public static final int REFERENCE_UNIT_PER_LICENSE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReferenceUnit valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReferenceUnit forNumber(int value) {
      switch (value) {
        case 0: return REFERENCE_UNIT_PER_USE;
        case 1: return REFERENCE_UNIT_PER_LICENSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReferenceUnit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReferenceUnit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReferenceUnit>() {
            public ReferenceUnit findValueByNumber(int number) {
              return ReferenceUnit.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(125);
    }

    private static final ReferenceUnit[] VALUES = values();

    public static ReferenceUnit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReferenceUnit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReferenceUnit)
  }

  /**
   * Protobuf enum {@code avs.RegistrationStatus}
   */
  public enum RegistrationStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REGISTRATION_STATUS_CLAIM_MEETS_RECOMMENDED_PROFILE = 0;</code>
     */
    REGISTRATION_STATUS_CLAIM_MEETS_RECOMMENDED_PROFILE(0),
    /**
     * <code>REGISTRATION_STATUS_RESOURCE_REGISTERED_INVALID = 1;</code>
     */
    REGISTRATION_STATUS_RESOURCE_REGISTERED_INVALID(1),
    /**
     * <code>REGISTRATION_STATUS_RESOURCE_REGISTERED_VALID = 2;</code>
     */
    REGISTRATION_STATUS_RESOURCE_REGISTERED_VALID(2),
    /**
     * <code>REGISTRATION_STATUS_CLAIM_MEETS_CORE_DATA_PROFILE = 3;</code>
     */
    REGISTRATION_STATUS_CLAIM_MEETS_CORE_DATA_PROFILE(3),
    /**
     * <code>REGISTRATION_STATUS_PENDING_REVIEW = 4;</code>
     */
    REGISTRATION_STATUS_PENDING_REVIEW(4),
    /**
     * <code>REGISTRATION_STATUS_REGISTRATION_REJECTED = 5;</code>
     */
    REGISTRATION_STATUS_REGISTRATION_REJECTED(5),
    ;

    /**
     * <code>REGISTRATION_STATUS_CLAIM_MEETS_RECOMMENDED_PROFILE = 0;</code>
     */
    public static final int REGISTRATION_STATUS_CLAIM_MEETS_RECOMMENDED_PROFILE_VALUE = 0;
    /**
     * <code>REGISTRATION_STATUS_RESOURCE_REGISTERED_INVALID = 1;</code>
     */
    public static final int REGISTRATION_STATUS_RESOURCE_REGISTERED_INVALID_VALUE = 1;
    /**
     * <code>REGISTRATION_STATUS_RESOURCE_REGISTERED_VALID = 2;</code>
     */
    public static final int REGISTRATION_STATUS_RESOURCE_REGISTERED_VALID_VALUE = 2;
    /**
     * <code>REGISTRATION_STATUS_CLAIM_MEETS_CORE_DATA_PROFILE = 3;</code>
     */
    public static final int REGISTRATION_STATUS_CLAIM_MEETS_CORE_DATA_PROFILE_VALUE = 3;
    /**
     * <code>REGISTRATION_STATUS_PENDING_REVIEW = 4;</code>
     */
    public static final int REGISTRATION_STATUS_PENDING_REVIEW_VALUE = 4;
    /**
     * <code>REGISTRATION_STATUS_REGISTRATION_REJECTED = 5;</code>
     */
    public static final int REGISTRATION_STATUS_REGISTRATION_REJECTED_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RegistrationStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RegistrationStatus forNumber(int value) {
      switch (value) {
        case 0: return REGISTRATION_STATUS_CLAIM_MEETS_RECOMMENDED_PROFILE;
        case 1: return REGISTRATION_STATUS_RESOURCE_REGISTERED_INVALID;
        case 2: return REGISTRATION_STATUS_RESOURCE_REGISTERED_VALID;
        case 3: return REGISTRATION_STATUS_CLAIM_MEETS_CORE_DATA_PROFILE;
        case 4: return REGISTRATION_STATUS_PENDING_REVIEW;
        case 5: return REGISTRATION_STATUS_REGISTRATION_REJECTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RegistrationStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RegistrationStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RegistrationStatus>() {
            public RegistrationStatus findValueByNumber(int number) {
              return RegistrationStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(126);
    }

    private static final RegistrationStatus[] VALUES = values();

    public static RegistrationStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RegistrationStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RegistrationStatus)
  }

  /**
   * Protobuf enum {@code avs.RelatedResourceType}
   */
  public enum RelatedResourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELATED_RESOURCE_TYPE_ALBUM_VERSION = 0;</code>
     */
    RELATED_RESOURCE_TYPE_ALBUM_VERSION(0),
    /**
     * <code>RELATED_RESOURCE_TYPE_A_CAPPELLA_VERSION = 1;</code>
     */
    RELATED_RESOURCE_TYPE_A_CAPPELLA_VERSION(1),
    /**
     * <code>RELATED_RESOURCE_TYPE_INSTRUMENTAL_VERSION = 2;</code>
     */
    RELATED_RESOURCE_TYPE_INSTRUMENTAL_VERSION(2),
    /**
     * <code>RELATED_RESOURCE_TYPE_ALTERNATIVE_VERSION = 3;</code>
     */
    RELATED_RESOURCE_TYPE_ALTERNATIVE_VERSION(3),
    /**
     * <code>RELATED_RESOURCE_TYPE_ACOUSTIC_VERSION = 4;</code>
     */
    RELATED_RESOURCE_TYPE_ACOUSTIC_VERSION(4),
    /**
     * <code>RELATED_RESOURCE_TYPE_COVER = 5;</code>
     */
    RELATED_RESOURCE_TYPE_COVER(5),
    /**
     * <code>RELATED_RESOURCE_TYPE_STUDIO_VERSION = 6;</code>
     */
    RELATED_RESOURCE_TYPE_STUDIO_VERSION(6),
    /**
     * <code>RELATED_RESOURCE_TYPE_TV_TRACK = 7;</code>
     */
    RELATED_RESOURCE_TYPE_TV_TRACK(7),
    /**
     * <code>RELATED_RESOURCE_TYPE_MEDLEY = 8;</code>
     */
    RELATED_RESOURCE_TYPE_MEDLEY(8),
    /**
     * <code>RELATED_RESOURCE_TYPE_LIVE_VERSION = 9;</code>
     */
    RELATED_RESOURCE_TYPE_LIVE_VERSION(9),
    /**
     * <code>RELATED_RESOURCE_TYPE_DEMO_VERSION = 10;</code>
     */
    RELATED_RESOURCE_TYPE_DEMO_VERSION(10),
    /**
     * <code>RELATED_RESOURCE_TYPE_ORIGINAL_RECORDING = 11;</code>
     */
    RELATED_RESOURCE_TYPE_ORIGINAL_RECORDING(11),
    /**
     * <code>RELATED_RESOURCE_TYPE_SINGLE_VERSION = 12;</code>
     */
    RELATED_RESOURCE_TYPE_SINGLE_VERSION(12),
    /**
     * <code>RELATED_RESOURCE_TYPE_USER_DEFINED = 13;</code>
     */
    RELATED_RESOURCE_TYPE_USER_DEFINED(13),
    /**
     * <code>RELATED_RESOURCE_TYPE_RADIO_VERSION = 14;</code>
     */
    RELATED_RESOURCE_TYPE_RADIO_VERSION(14),
    /**
     * <code>RELATED_RESOURCE_TYPE_CLEAN_VERSION = 15;</code>
     */
    RELATED_RESOURCE_TYPE_CLEAN_VERSION(15),
    ;

    /**
     * <code>RELATED_RESOURCE_TYPE_ALBUM_VERSION = 0;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_ALBUM_VERSION_VALUE = 0;
    /**
     * <code>RELATED_RESOURCE_TYPE_A_CAPPELLA_VERSION = 1;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_A_CAPPELLA_VERSION_VALUE = 1;
    /**
     * <code>RELATED_RESOURCE_TYPE_INSTRUMENTAL_VERSION = 2;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_INSTRUMENTAL_VERSION_VALUE = 2;
    /**
     * <code>RELATED_RESOURCE_TYPE_ALTERNATIVE_VERSION = 3;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_ALTERNATIVE_VERSION_VALUE = 3;
    /**
     * <code>RELATED_RESOURCE_TYPE_ACOUSTIC_VERSION = 4;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_ACOUSTIC_VERSION_VALUE = 4;
    /**
     * <code>RELATED_RESOURCE_TYPE_COVER = 5;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_COVER_VALUE = 5;
    /**
     * <code>RELATED_RESOURCE_TYPE_STUDIO_VERSION = 6;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_STUDIO_VERSION_VALUE = 6;
    /**
     * <code>RELATED_RESOURCE_TYPE_TV_TRACK = 7;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_TV_TRACK_VALUE = 7;
    /**
     * <code>RELATED_RESOURCE_TYPE_MEDLEY = 8;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_MEDLEY_VALUE = 8;
    /**
     * <code>RELATED_RESOURCE_TYPE_LIVE_VERSION = 9;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_LIVE_VERSION_VALUE = 9;
    /**
     * <code>RELATED_RESOURCE_TYPE_DEMO_VERSION = 10;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_DEMO_VERSION_VALUE = 10;
    /**
     * <code>RELATED_RESOURCE_TYPE_ORIGINAL_RECORDING = 11;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_ORIGINAL_RECORDING_VALUE = 11;
    /**
     * <code>RELATED_RESOURCE_TYPE_SINGLE_VERSION = 12;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_SINGLE_VERSION_VALUE = 12;
    /**
     * <code>RELATED_RESOURCE_TYPE_USER_DEFINED = 13;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_USER_DEFINED_VALUE = 13;
    /**
     * <code>RELATED_RESOURCE_TYPE_RADIO_VERSION = 14;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_RADIO_VERSION_VALUE = 14;
    /**
     * <code>RELATED_RESOURCE_TYPE_CLEAN_VERSION = 15;</code>
     */
    public static final int RELATED_RESOURCE_TYPE_CLEAN_VERSION_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RelatedResourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RelatedResourceType forNumber(int value) {
      switch (value) {
        case 0: return RELATED_RESOURCE_TYPE_ALBUM_VERSION;
        case 1: return RELATED_RESOURCE_TYPE_A_CAPPELLA_VERSION;
        case 2: return RELATED_RESOURCE_TYPE_INSTRUMENTAL_VERSION;
        case 3: return RELATED_RESOURCE_TYPE_ALTERNATIVE_VERSION;
        case 4: return RELATED_RESOURCE_TYPE_ACOUSTIC_VERSION;
        case 5: return RELATED_RESOURCE_TYPE_COVER;
        case 6: return RELATED_RESOURCE_TYPE_STUDIO_VERSION;
        case 7: return RELATED_RESOURCE_TYPE_TV_TRACK;
        case 8: return RELATED_RESOURCE_TYPE_MEDLEY;
        case 9: return RELATED_RESOURCE_TYPE_LIVE_VERSION;
        case 10: return RELATED_RESOURCE_TYPE_DEMO_VERSION;
        case 11: return RELATED_RESOURCE_TYPE_ORIGINAL_RECORDING;
        case 12: return RELATED_RESOURCE_TYPE_SINGLE_VERSION;
        case 13: return RELATED_RESOURCE_TYPE_USER_DEFINED;
        case 14: return RELATED_RESOURCE_TYPE_RADIO_VERSION;
        case 15: return RELATED_RESOURCE_TYPE_CLEAN_VERSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RelatedResourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RelatedResourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RelatedResourceType>() {
            public RelatedResourceType findValueByNumber(int number) {
              return RelatedResourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(127);
    }

    private static final RelatedResourceType[] VALUES = values();

    public static RelatedResourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RelatedResourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RelatedResourceType)
  }

  /**
   * Protobuf enum {@code avs.RelationalRelator}
   */
  public enum RelationalRelator
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELATIONAL_RELATOR_LESS_THAN = 0;</code>
     */
    RELATIONAL_RELATOR_LESS_THAN(0),
    /**
     * <code>RELATIONAL_RELATOR_LESS_THAN_OR_EQUAL_TO = 1;</code>
     */
    RELATIONAL_RELATOR_LESS_THAN_OR_EQUAL_TO(1),
    /**
     * <code>RELATIONAL_RELATOR_MORE_THAN_OR_EQUAL_TO = 2;</code>
     */
    RELATIONAL_RELATOR_MORE_THAN_OR_EQUAL_TO(2),
    /**
     * <code>RELATIONAL_RELATOR_NOT_EQUAL_TO = 3;</code>
     */
    RELATIONAL_RELATOR_NOT_EQUAL_TO(3),
    /**
     * <code>RELATIONAL_RELATOR_MORE_THAN = 4;</code>
     */
    RELATIONAL_RELATOR_MORE_THAN(4),
    /**
     * <code>RELATIONAL_RELATOR_EQUAL_TO = 5;</code>
     */
    RELATIONAL_RELATOR_EQUAL_TO(5),
    ;

    /**
     * <code>RELATIONAL_RELATOR_LESS_THAN = 0;</code>
     */
    public static final int RELATIONAL_RELATOR_LESS_THAN_VALUE = 0;
    /**
     * <code>RELATIONAL_RELATOR_LESS_THAN_OR_EQUAL_TO = 1;</code>
     */
    public static final int RELATIONAL_RELATOR_LESS_THAN_OR_EQUAL_TO_VALUE = 1;
    /**
     * <code>RELATIONAL_RELATOR_MORE_THAN_OR_EQUAL_TO = 2;</code>
     */
    public static final int RELATIONAL_RELATOR_MORE_THAN_OR_EQUAL_TO_VALUE = 2;
    /**
     * <code>RELATIONAL_RELATOR_NOT_EQUAL_TO = 3;</code>
     */
    public static final int RELATIONAL_RELATOR_NOT_EQUAL_TO_VALUE = 3;
    /**
     * <code>RELATIONAL_RELATOR_MORE_THAN = 4;</code>
     */
    public static final int RELATIONAL_RELATOR_MORE_THAN_VALUE = 4;
    /**
     * <code>RELATIONAL_RELATOR_EQUAL_TO = 5;</code>
     */
    public static final int RELATIONAL_RELATOR_EQUAL_TO_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RelationalRelator valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RelationalRelator forNumber(int value) {
      switch (value) {
        case 0: return RELATIONAL_RELATOR_LESS_THAN;
        case 1: return RELATIONAL_RELATOR_LESS_THAN_OR_EQUAL_TO;
        case 2: return RELATIONAL_RELATOR_MORE_THAN_OR_EQUAL_TO;
        case 3: return RELATIONAL_RELATOR_NOT_EQUAL_TO;
        case 4: return RELATIONAL_RELATOR_MORE_THAN;
        case 5: return RELATIONAL_RELATOR_EQUAL_TO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RelationalRelator>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RelationalRelator> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RelationalRelator>() {
            public RelationalRelator findValueByNumber(int number) {
              return RelationalRelator.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(128);
    }

    private static final RelationalRelator[] VALUES = values();

    public static RelationalRelator valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RelationalRelator(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RelationalRelator)
  }

  /**
   * Protobuf enum {@code avs.ReleaseProfileVariantVersionId}
   */
  public enum ReleaseProfileVariantVersionId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET__SP___CLASSICAL = 0;</code>
     */
    RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET__SP___CLASSICAL(0),
    /**
     * <code>RELEASE_PROFILE_VARIANT_VERSION_ID_CLASSICAL = 1;</code>
     */
    RELEASE_PROFILE_VARIANT_VERSION_ID_CLASSICAL(1),
    /**
     * <code>RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET = 2;</code>
     */
    RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET(2),
    ;

    /**
     * <code>RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET__SP___CLASSICAL = 0;</code>
     */
    public static final int RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET__SP___CLASSICAL_VALUE = 0;
    /**
     * <code>RELEASE_PROFILE_VARIANT_VERSION_ID_CLASSICAL = 1;</code>
     */
    public static final int RELEASE_PROFILE_VARIANT_VERSION_ID_CLASSICAL_VALUE = 1;
    /**
     * <code>RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET = 2;</code>
     */
    public static final int RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReleaseProfileVariantVersionId valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReleaseProfileVariantVersionId forNumber(int value) {
      switch (value) {
        case 0: return RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET__SP___CLASSICAL;
        case 1: return RELEASE_PROFILE_VARIANT_VERSION_ID_CLASSICAL;
        case 2: return RELEASE_PROFILE_VARIANT_VERSION_ID_BOXED_SET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReleaseProfileVariantVersionId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReleaseProfileVariantVersionId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReleaseProfileVariantVersionId>() {
            public ReleaseProfileVariantVersionId findValueByNumber(int number) {
              return ReleaseProfileVariantVersionId.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(129);
    }

    private static final ReleaseProfileVariantVersionId[] VALUES = values();

    public static ReleaseProfileVariantVersionId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReleaseProfileVariantVersionId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReleaseProfileVariantVersionId)
  }

  /**
   * Protobuf enum {@code avs.ReleaseProfileVersionId}
   */
  public enum ReleaseProfileVersionId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_LONG_FORM_MUSICAL_WORK_VIDEO = 0;</code>
     */
    RELEASE_PROFILE_VERSION_ID_LONG_FORM_MUSICAL_WORK_VIDEO(0),
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_MIXED_MEDIA = 1;</code>
     */
    RELEASE_PROFILE_VERSION_ID_MIXED_MEDIA(1),
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_VIDEO = 2;</code>
     */
    RELEASE_PROFILE_VERSION_ID_VIDEO(2),
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_RINGTONE = 3;</code>
     */
    RELEASE_PROFILE_VERSION_ID_RINGTONE(3),
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_DJ_MIX = 4;</code>
     */
    RELEASE_PROFILE_VERSION_ID_DJ_MIX(4),
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_AUDIO = 5;</code>
     */
    RELEASE_PROFILE_VERSION_ID_AUDIO(5),
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_SIMPLE_AUDIO_SINGLE = 6;</code>
     */
    RELEASE_PROFILE_VERSION_ID_SIMPLE_AUDIO_SINGLE(6),
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_SIMPLE_VIDEO_SINGLE = 7;</code>
     */
    RELEASE_PROFILE_VERSION_ID_SIMPLE_VIDEO_SINGLE(7),
    ;

    /**
     * <code>RELEASE_PROFILE_VERSION_ID_LONG_FORM_MUSICAL_WORK_VIDEO = 0;</code>
     */
    public static final int RELEASE_PROFILE_VERSION_ID_LONG_FORM_MUSICAL_WORK_VIDEO_VALUE = 0;
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_MIXED_MEDIA = 1;</code>
     */
    public static final int RELEASE_PROFILE_VERSION_ID_MIXED_MEDIA_VALUE = 1;
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_VIDEO = 2;</code>
     */
    public static final int RELEASE_PROFILE_VERSION_ID_VIDEO_VALUE = 2;
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_RINGTONE = 3;</code>
     */
    public static final int RELEASE_PROFILE_VERSION_ID_RINGTONE_VALUE = 3;
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_DJ_MIX = 4;</code>
     */
    public static final int RELEASE_PROFILE_VERSION_ID_DJ_MIX_VALUE = 4;
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_AUDIO = 5;</code>
     */
    public static final int RELEASE_PROFILE_VERSION_ID_AUDIO_VALUE = 5;
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_SIMPLE_AUDIO_SINGLE = 6;</code>
     */
    public static final int RELEASE_PROFILE_VERSION_ID_SIMPLE_AUDIO_SINGLE_VALUE = 6;
    /**
     * <code>RELEASE_PROFILE_VERSION_ID_SIMPLE_VIDEO_SINGLE = 7;</code>
     */
    public static final int RELEASE_PROFILE_VERSION_ID_SIMPLE_VIDEO_SINGLE_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReleaseProfileVersionId valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReleaseProfileVersionId forNumber(int value) {
      switch (value) {
        case 0: return RELEASE_PROFILE_VERSION_ID_LONG_FORM_MUSICAL_WORK_VIDEO;
        case 1: return RELEASE_PROFILE_VERSION_ID_MIXED_MEDIA;
        case 2: return RELEASE_PROFILE_VERSION_ID_VIDEO;
        case 3: return RELEASE_PROFILE_VERSION_ID_RINGTONE;
        case 4: return RELEASE_PROFILE_VERSION_ID_DJ_MIX;
        case 5: return RELEASE_PROFILE_VERSION_ID_AUDIO;
        case 6: return RELEASE_PROFILE_VERSION_ID_SIMPLE_AUDIO_SINGLE;
        case 7: return RELEASE_PROFILE_VERSION_ID_SIMPLE_VIDEO_SINGLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReleaseProfileVersionId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReleaseProfileVersionId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReleaseProfileVersionId>() {
            public ReleaseProfileVersionId findValueByNumber(int number) {
              return ReleaseProfileVersionId.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(130);
    }

    private static final ReleaseProfileVersionId[] VALUES = values();

    public static ReleaseProfileVersionId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReleaseProfileVersionId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReleaseProfileVersionId)
  }

  /**
   * Protobuf enum {@code avs.ReleaseRelationshipType}
   */
  public enum ReleaseRelationshipType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_DIGITAL_EQUIVALENT_TO_PHYSICAL = 0;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_DIGITAL_EQUIVALENT_TO_PHYSICAL(0),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_AUDIO = 1;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_AUDIO(1),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_EXTENDED_FROM_ALBUM = 2;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_EXTENDED_FROM_ALBUM(2),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_SAME_ARTIST = 3;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_HAS_SAME_ARTIST(3),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_RELEASE_FROM_RELEASE = 4;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_RELEASE_FROM_RELEASE(4),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_VIDEO = 5;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_VIDEO(5),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING = 6;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING(6),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM = 7;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM(7),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_FROM_AUDIO = 8;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_FROM_AUDIO(8),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_SHORTENED_FROM_ALBUM = 9;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_SHORTENED_FROM_ALBUM(9),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_SAME_ENSEMBLE = 10;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_SAME_ENSEMBLE(10),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_UNKNOWN = 11;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_UNKNOWN(11),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_FROM_VIDEO = 12;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_FROM_VIDEO(12),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_PHYSICAL_EQUIVALENT_TO_DIGITAL = 13;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_PHYSICAL_EQUIVALENT_TO_DIGITAL(13),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_ENSEMBLE = 14;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_ENSEMBLE(14),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_ENSEMBLE_WITH_ARTIST = 15;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_HAS_ENSEMBLE_WITH_ARTIST(15),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_SIMILAR_CONTENT = 16;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_HAS_SIMILAR_CONTENT(16),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_PARENT_RELEASE = 17;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_IS_PARENT_RELEASE(17),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_USER_DEFINED = 18;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_USER_DEFINED(18),
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_SAME_RECORDING_PROJECT = 19;</code>
     */
    RELEASE_RELATIONSHIP_TYPE_HAS_SAME_RECORDING_PROJECT(19),
    ;

    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_DIGITAL_EQUIVALENT_TO_PHYSICAL = 0;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_DIGITAL_EQUIVALENT_TO_PHYSICAL_VALUE = 0;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_AUDIO = 1;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_AUDIO_VALUE = 1;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_EXTENDED_FROM_ALBUM = 2;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_EXTENDED_FROM_ALBUM_VALUE = 2;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_SAME_ARTIST = 3;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_HAS_SAME_ARTIST_VALUE = 3;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_RELEASE_FROM_RELEASE = 4;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_RELEASE_FROM_RELEASE_VALUE = 4;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_VIDEO = 5;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_VIDEO_VALUE = 5;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING = 6;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING_VALUE = 6;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM = 7;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM_VALUE = 7;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_FROM_AUDIO = 8;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_FROM_AUDIO_VALUE = 8;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_SHORTENED_FROM_ALBUM = 9;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_SHORTENED_FROM_ALBUM_VALUE = 9;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_SAME_ENSEMBLE = 10;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_SAME_ENSEMBLE_VALUE = 10;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_UNKNOWN = 11;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_UNKNOWN_VALUE = 11;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_FROM_VIDEO = 12;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_FROM_VIDEO_VALUE = 12;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_PHYSICAL_EQUIVALENT_TO_DIGITAL = 13;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_PHYSICAL_EQUIVALENT_TO_DIGITAL_VALUE = 13;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_ENSEMBLE = 14;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_ENSEMBLE_VALUE = 14;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_ENSEMBLE_WITH_ARTIST = 15;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_HAS_ENSEMBLE_WITH_ARTIST_VALUE = 15;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_SIMILAR_CONTENT = 16;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_HAS_SIMILAR_CONTENT_VALUE = 16;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_IS_PARENT_RELEASE = 17;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_IS_PARENT_RELEASE_VALUE = 17;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_USER_DEFINED = 18;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_USER_DEFINED_VALUE = 18;
    /**
     * <code>RELEASE_RELATIONSHIP_TYPE_HAS_SAME_RECORDING_PROJECT = 19;</code>
     */
    public static final int RELEASE_RELATIONSHIP_TYPE_HAS_SAME_RECORDING_PROJECT_VALUE = 19;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReleaseRelationshipType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReleaseRelationshipType forNumber(int value) {
      switch (value) {
        case 0: return RELEASE_RELATIONSHIP_TYPE_IS_DIGITAL_EQUIVALENT_TO_PHYSICAL;
        case 1: return RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_AUDIO;
        case 2: return RELEASE_RELATIONSHIP_TYPE_IS_EXTENDED_FROM_ALBUM;
        case 3: return RELEASE_RELATIONSHIP_TYPE_HAS_SAME_ARTIST;
        case 4: return RELEASE_RELATIONSHIP_TYPE_IS_RELEASE_FROM_RELEASE;
        case 5: return RELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_TO_VIDEO;
        case 6: return RELEASE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING;
        case 7: return RELEASE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM;
        case 8: return RELEASE_RELATIONSHIP_TYPE_IS_FROM_AUDIO;
        case 9: return RELEASE_RELATIONSHIP_TYPE_IS_SHORTENED_FROM_ALBUM;
        case 10: return RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_SAME_ENSEMBLE;
        case 11: return RELEASE_RELATIONSHIP_TYPE_UNKNOWN;
        case 12: return RELEASE_RELATIONSHIP_TYPE_IS_FROM_VIDEO;
        case 13: return RELEASE_RELATIONSHIP_TYPE_IS_PHYSICAL_EQUIVALENT_TO_DIGITAL;
        case 14: return RELEASE_RELATIONSHIP_TYPE_HAS_ARTIST_FROM_ENSEMBLE;
        case 15: return RELEASE_RELATIONSHIP_TYPE_HAS_ENSEMBLE_WITH_ARTIST;
        case 16: return RELEASE_RELATIONSHIP_TYPE_HAS_SIMILAR_CONTENT;
        case 17: return RELEASE_RELATIONSHIP_TYPE_IS_PARENT_RELEASE;
        case 18: return RELEASE_RELATIONSHIP_TYPE_USER_DEFINED;
        case 19: return RELEASE_RELATIONSHIP_TYPE_HAS_SAME_RECORDING_PROJECT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReleaseRelationshipType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReleaseRelationshipType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReleaseRelationshipType>() {
            public ReleaseRelationshipType findValueByNumber(int number) {
              return ReleaseRelationshipType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(131);
    }

    private static final ReleaseRelationshipType[] VALUES = values();

    public static ReleaseRelationshipType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReleaseRelationshipType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReleaseRelationshipType)
  }

  /**
   * Protobuf enum {@code avs.ReleaseResourceType}
   */
  public enum ReleaseResourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELEASE_RESOURCE_TYPE_PRIMARY_RESOURCE = 0;</code>
     */
    RELEASE_RESOURCE_TYPE_PRIMARY_RESOURCE(0),
    /**
     * <code>RELEASE_RESOURCE_TYPE_SECONDARY_RESOURCE = 1;</code>
     */
    RELEASE_RESOURCE_TYPE_SECONDARY_RESOURCE(1),
    ;

    /**
     * <code>RELEASE_RESOURCE_TYPE_PRIMARY_RESOURCE = 0;</code>
     */
    public static final int RELEASE_RESOURCE_TYPE_PRIMARY_RESOURCE_VALUE = 0;
    /**
     * <code>RELEASE_RESOURCE_TYPE_SECONDARY_RESOURCE = 1;</code>
     */
    public static final int RELEASE_RESOURCE_TYPE_SECONDARY_RESOURCE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReleaseResourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReleaseResourceType forNumber(int value) {
      switch (value) {
        case 0: return RELEASE_RESOURCE_TYPE_PRIMARY_RESOURCE;
        case 1: return RELEASE_RESOURCE_TYPE_SECONDARY_RESOURCE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReleaseResourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReleaseResourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReleaseResourceType>() {
            public ReleaseResourceType findValueByNumber(int number) {
              return ReleaseResourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(132);
    }

    private static final ReleaseResourceType[] VALUES = values();

    public static ReleaseResourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReleaseResourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReleaseResourceType)
  }

  /**
   * Protobuf enum {@code avs.ReleaseType}
   */
  public enum ReleaseType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELEASE_TYPE_LIVE_EVENT_VIDEO = 0;</code>
     */
    RELEASE_TYPE_LIVE_EVENT_VIDEO(0),
    /**
     * <code>RELEASE_TYPE_CLASSICAL_ALBUM = 1;</code>
     */
    RELEASE_TYPE_CLASSICAL_ALBUM(1),
    /**
     * <code>RELEASE_TYPE_CLASSICAL_MULTIMEDIA_ALBUM = 2;</code>
     */
    RELEASE_TYPE_CLASSICAL_MULTIMEDIA_ALBUM(2),
    /**
     * <code>RELEASE_TYPE_ALBUM = 3;</code>
     */
    RELEASE_TYPE_ALBUM(3),
    /**
     * <code>RELEASE_TYPE_SHORT_FILM = 4;</code>
     */
    RELEASE_TYPE_SHORT_FILM(4),
    /**
     * <code>RELEASE_TYPE_AS_PER_CONTRACT = 5;</code>
     */
    RELEASE_TYPE_AS_PER_CONTRACT(5),
    /**
     * <code>RELEASE_TYPE_FEATURE_FILM = 6;</code>
     */
    RELEASE_TYPE_FEATURE_FILM(6),
    /**
     * <code>RELEASE_TYPE_RINGTONE_RELEASE = 7;</code>
     */
    RELEASE_TYPE_RINGTONE_RELEASE(7),
    /**
     * <code>RELEASE_TYPE_SINGLE_RESOURCE_RELEASE = 8;</code>
     */
    RELEASE_TYPE_SINGLE_RESOURCE_RELEASE(8),
    /**
     * <code>RELEASE_TYPE_ALERT_TONE_RELEASE = 9;</code>
     */
    RELEASE_TYPE_ALERT_TONE_RELEASE(9),
    /**
     * <code>RELEASE_TYPE_SHEET_MUSIC_RELEASE = 10;</code>
     */
    RELEASE_TYPE_SHEET_MUSIC_RELEASE(10),
    /**
     * <code>RELEASE_TYPE_TRACK_RELEASE = 11;</code>
     */
    RELEASE_TYPE_TRACK_RELEASE(11),
    /**
     * <code>RELEASE_TYPE_CLASSICAL_DIGITAL_BOXED_SET = 12;</code>
     */
    RELEASE_TYPE_CLASSICAL_DIGITAL_BOXED_SET(12),
    /**
     * <code>RELEASE_TYPE_RINGBACK_TONE_RELEASE = 13;</code>
     */
    RELEASE_TYPE_RINGBACK_TONE_RELEASE(13),
    /**
     * <code>RELEASE_TYPE_USER_DEFINED = 14;</code>
     */
    RELEASE_TYPE_USER_DEFINED(14),
    /**
     * <code>RELEASE_TYPE_LOGO_RELEASE = 15;</code>
     */
    RELEASE_TYPE_LOGO_RELEASE(15),
    /**
     * <code>RELEASE_TYPE_MULTIMEDIA_ALBUM = 16;</code>
     */
    RELEASE_TYPE_MULTIMEDIA_ALBUM(16),
    /**
     * <code>RELEASE_TYPE_AUDIO_DRAMA_RELEASE = 17;</code>
     */
    RELEASE_TYPE_AUDIO_DRAMA_RELEASE(17),
    /**
     * <code>RELEASE_TYPE_BOOKLET_BACK_IMAGE_RELEASE = 18;</code>
     */
    RELEASE_TYPE_BOOKLET_BACK_IMAGE_RELEASE(18),
    /**
     * <code>RELEASE_TYPE_E_P = 19;</code>
     */
    RELEASE_TYPE_E_P(19),
    /**
     * <code>RELEASE_TYPE_MULTIMEDIA_SINGLE = 20;</code>
     */
    RELEASE_TYPE_MULTIMEDIA_SINGLE(20),
    /**
     * <code>RELEASE_TYPE_DRAMATICO_MUSICAL_VIDEO_RELEASE = 21;</code>
     */
    RELEASE_TYPE_DRAMATICO_MUSICAL_VIDEO_RELEASE(21),
    /**
     * <code>RELEASE_TYPE_BOOKLET_FRONT_IMAGE_RELEASE = 22;</code>
     */
    RELEASE_TYPE_BOOKLET_FRONT_IMAGE_RELEASE(22),
    /**
     * <code>RELEASE_TYPE_DRAMA = 23;</code>
     */
    RELEASE_TYPE_DRAMA(23),
    /**
     * <code>RELEASE_TYPE_NON_MUSICAL_WORK_BASED_GAME_RELEASE = 24;</code>
     */
    RELEASE_TYPE_NON_MUSICAL_WORK_BASED_GAME_RELEASE(24),
    /**
     * <code>RELEASE_TYPE_DJ_MIX = 25;</code>
     */
    RELEASE_TYPE_DJ_MIX(25),
    /**
     * <code>RELEASE_TYPE_MULTIMEDIA_DIGITAL_BOXED_SET = 26;</code>
     */
    RELEASE_TYPE_MULTIMEDIA_DIGITAL_BOXED_SET(26),
    /**
     * <code>RELEASE_TYPE_STEM_BUNDLE = 27;</code>
     */
    RELEASE_TYPE_STEM_BUNDLE(27),
    /**
     * <code>RELEASE_TYPE_PLAY_LIST = 28;</code>
     */
    RELEASE_TYPE_PLAY_LIST(28),
    /**
     * <code>RELEASE_TYPE_AUDIO_BOOK_RELEASE = 29;</code>
     */
    RELEASE_TYPE_AUDIO_BOOK_RELEASE(29),
    /**
     * <code>RELEASE_TYPE_DIGITAL_BOX_SET_RELEASE = 30;</code>
     */
    RELEASE_TYPE_DIGITAL_BOX_SET_RELEASE(30),
    /**
     * <code>RELEASE_TYPE_KARAOKE_RELEASE = 31;</code>
     */
    RELEASE_TYPE_KARAOKE_RELEASE(31),
    /**
     * <code>RELEASE_TYPE_WALLPAPER_RELEASE = 32;</code>
     */
    RELEASE_TYPE_WALLPAPER_RELEASE(32),
    /**
     * <code>RELEASE_TYPE_DOCUMENTARY = 33;</code>
     */
    RELEASE_TYPE_DOCUMENTARY(33),
    /**
     * <code>RELEASE_TYPE_SEASON = 34;</code>
     */
    RELEASE_TYPE_SEASON(34),
    /**
     * <code>RELEASE_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE = 35;</code>
     */
    RELEASE_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE(35),
    /**
     * <code>RELEASE_TYPE_BUNDLE = 36;</code>
     */
    RELEASE_TYPE_BUNDLE(36),
    /**
     * <code>RELEASE_TYPE_E_BOOK_RELEASE = 37;</code>
     */
    RELEASE_TYPE_E_BOOK_RELEASE(37),
    /**
     * <code>RELEASE_TYPE_VIDEO_ALBUM = 38;</code>
     */
    RELEASE_TYPE_VIDEO_ALBUM(38),
    /**
     * <code>RELEASE_TYPE_BOOKLET_RELEASE = 39;</code>
     */
    RELEASE_TYPE_BOOKLET_RELEASE(39),
    /**
     * <code>RELEASE_TYPE_MUSICAL_WORK_BASED_GAME_RELEASE = 40;</code>
     */
    RELEASE_TYPE_MUSICAL_WORK_BASED_GAME_RELEASE(40),
    /**
     * <code>RELEASE_TYPE_EPISODE = 41;</code>
     */
    RELEASE_TYPE_EPISODE(41),
    /**
     * <code>RELEASE_TYPE_SERIES = 42;</code>
     */
    RELEASE_TYPE_SERIES(42),
    /**
     * <code>RELEASE_TYPE_LYRIC_SHEET_RELEASE = 43;</code>
     */
    RELEASE_TYPE_LYRIC_SHEET_RELEASE(43),
    /**
     * <code>RELEASE_TYPE_SINGLE = 44;</code>
     */
    RELEASE_TYPE_SINGLE(44),
    /**
     * <code>RELEASE_TYPE_VIDEO_SINGLE = 45;</code>
     */
    RELEASE_TYPE_VIDEO_SINGLE(45),
    /**
     * <code>RELEASE_TYPE_BACK_COVER_IMAGE_RELEASE = 46;</code>
     */
    RELEASE_TYPE_BACK_COVER_IMAGE_RELEASE(46),
    /**
     * <code>RELEASE_TYPE_CONCERT_VIDEO = 47;</code>
     */
    RELEASE_TYPE_CONCERT_VIDEO(47),
    /**
     * <code>RELEASE_TYPE_VIDEO_MASTERTONE_RELEASE = 48;</code>
     */
    RELEASE_TYPE_VIDEO_MASTERTONE_RELEASE(48),
    /**
     * <code>RELEASE_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE = 49;</code>
     */
    RELEASE_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE(49),
    ;

    /**
     * <code>RELEASE_TYPE_LIVE_EVENT_VIDEO = 0;</code>
     */
    public static final int RELEASE_TYPE_LIVE_EVENT_VIDEO_VALUE = 0;
    /**
     * <code>RELEASE_TYPE_CLASSICAL_ALBUM = 1;</code>
     */
    public static final int RELEASE_TYPE_CLASSICAL_ALBUM_VALUE = 1;
    /**
     * <code>RELEASE_TYPE_CLASSICAL_MULTIMEDIA_ALBUM = 2;</code>
     */
    public static final int RELEASE_TYPE_CLASSICAL_MULTIMEDIA_ALBUM_VALUE = 2;
    /**
     * <code>RELEASE_TYPE_ALBUM = 3;</code>
     */
    public static final int RELEASE_TYPE_ALBUM_VALUE = 3;
    /**
     * <code>RELEASE_TYPE_SHORT_FILM = 4;</code>
     */
    public static final int RELEASE_TYPE_SHORT_FILM_VALUE = 4;
    /**
     * <code>RELEASE_TYPE_AS_PER_CONTRACT = 5;</code>
     */
    public static final int RELEASE_TYPE_AS_PER_CONTRACT_VALUE = 5;
    /**
     * <code>RELEASE_TYPE_FEATURE_FILM = 6;</code>
     */
    public static final int RELEASE_TYPE_FEATURE_FILM_VALUE = 6;
    /**
     * <code>RELEASE_TYPE_RINGTONE_RELEASE = 7;</code>
     */
    public static final int RELEASE_TYPE_RINGTONE_RELEASE_VALUE = 7;
    /**
     * <code>RELEASE_TYPE_SINGLE_RESOURCE_RELEASE = 8;</code>
     */
    public static final int RELEASE_TYPE_SINGLE_RESOURCE_RELEASE_VALUE = 8;
    /**
     * <code>RELEASE_TYPE_ALERT_TONE_RELEASE = 9;</code>
     */
    public static final int RELEASE_TYPE_ALERT_TONE_RELEASE_VALUE = 9;
    /**
     * <code>RELEASE_TYPE_SHEET_MUSIC_RELEASE = 10;</code>
     */
    public static final int RELEASE_TYPE_SHEET_MUSIC_RELEASE_VALUE = 10;
    /**
     * <code>RELEASE_TYPE_TRACK_RELEASE = 11;</code>
     */
    public static final int RELEASE_TYPE_TRACK_RELEASE_VALUE = 11;
    /**
     * <code>RELEASE_TYPE_CLASSICAL_DIGITAL_BOXED_SET = 12;</code>
     */
    public static final int RELEASE_TYPE_CLASSICAL_DIGITAL_BOXED_SET_VALUE = 12;
    /**
     * <code>RELEASE_TYPE_RINGBACK_TONE_RELEASE = 13;</code>
     */
    public static final int RELEASE_TYPE_RINGBACK_TONE_RELEASE_VALUE = 13;
    /**
     * <code>RELEASE_TYPE_USER_DEFINED = 14;</code>
     */
    public static final int RELEASE_TYPE_USER_DEFINED_VALUE = 14;
    /**
     * <code>RELEASE_TYPE_LOGO_RELEASE = 15;</code>
     */
    public static final int RELEASE_TYPE_LOGO_RELEASE_VALUE = 15;
    /**
     * <code>RELEASE_TYPE_MULTIMEDIA_ALBUM = 16;</code>
     */
    public static final int RELEASE_TYPE_MULTIMEDIA_ALBUM_VALUE = 16;
    /**
     * <code>RELEASE_TYPE_AUDIO_DRAMA_RELEASE = 17;</code>
     */
    public static final int RELEASE_TYPE_AUDIO_DRAMA_RELEASE_VALUE = 17;
    /**
     * <code>RELEASE_TYPE_BOOKLET_BACK_IMAGE_RELEASE = 18;</code>
     */
    public static final int RELEASE_TYPE_BOOKLET_BACK_IMAGE_RELEASE_VALUE = 18;
    /**
     * <code>RELEASE_TYPE_E_P = 19;</code>
     */
    public static final int RELEASE_TYPE_E_P_VALUE = 19;
    /**
     * <code>RELEASE_TYPE_MULTIMEDIA_SINGLE = 20;</code>
     */
    public static final int RELEASE_TYPE_MULTIMEDIA_SINGLE_VALUE = 20;
    /**
     * <code>RELEASE_TYPE_DRAMATICO_MUSICAL_VIDEO_RELEASE = 21;</code>
     */
    public static final int RELEASE_TYPE_DRAMATICO_MUSICAL_VIDEO_RELEASE_VALUE = 21;
    /**
     * <code>RELEASE_TYPE_BOOKLET_FRONT_IMAGE_RELEASE = 22;</code>
     */
    public static final int RELEASE_TYPE_BOOKLET_FRONT_IMAGE_RELEASE_VALUE = 22;
    /**
     * <code>RELEASE_TYPE_DRAMA = 23;</code>
     */
    public static final int RELEASE_TYPE_DRAMA_VALUE = 23;
    /**
     * <code>RELEASE_TYPE_NON_MUSICAL_WORK_BASED_GAME_RELEASE = 24;</code>
     */
    public static final int RELEASE_TYPE_NON_MUSICAL_WORK_BASED_GAME_RELEASE_VALUE = 24;
    /**
     * <code>RELEASE_TYPE_DJ_MIX = 25;</code>
     */
    public static final int RELEASE_TYPE_DJ_MIX_VALUE = 25;
    /**
     * <code>RELEASE_TYPE_MULTIMEDIA_DIGITAL_BOXED_SET = 26;</code>
     */
    public static final int RELEASE_TYPE_MULTIMEDIA_DIGITAL_BOXED_SET_VALUE = 26;
    /**
     * <code>RELEASE_TYPE_STEM_BUNDLE = 27;</code>
     */
    public static final int RELEASE_TYPE_STEM_BUNDLE_VALUE = 27;
    /**
     * <code>RELEASE_TYPE_PLAY_LIST = 28;</code>
     */
    public static final int RELEASE_TYPE_PLAY_LIST_VALUE = 28;
    /**
     * <code>RELEASE_TYPE_AUDIO_BOOK_RELEASE = 29;</code>
     */
    public static final int RELEASE_TYPE_AUDIO_BOOK_RELEASE_VALUE = 29;
    /**
     * <code>RELEASE_TYPE_DIGITAL_BOX_SET_RELEASE = 30;</code>
     */
    public static final int RELEASE_TYPE_DIGITAL_BOX_SET_RELEASE_VALUE = 30;
    /**
     * <code>RELEASE_TYPE_KARAOKE_RELEASE = 31;</code>
     */
    public static final int RELEASE_TYPE_KARAOKE_RELEASE_VALUE = 31;
    /**
     * <code>RELEASE_TYPE_WALLPAPER_RELEASE = 32;</code>
     */
    public static final int RELEASE_TYPE_WALLPAPER_RELEASE_VALUE = 32;
    /**
     * <code>RELEASE_TYPE_DOCUMENTARY = 33;</code>
     */
    public static final int RELEASE_TYPE_DOCUMENTARY_VALUE = 33;
    /**
     * <code>RELEASE_TYPE_SEASON = 34;</code>
     */
    public static final int RELEASE_TYPE_SEASON_VALUE = 34;
    /**
     * <code>RELEASE_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE = 35;</code>
     */
    public static final int RELEASE_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE_VALUE = 35;
    /**
     * <code>RELEASE_TYPE_BUNDLE = 36;</code>
     */
    public static final int RELEASE_TYPE_BUNDLE_VALUE = 36;
    /**
     * <code>RELEASE_TYPE_E_BOOK_RELEASE = 37;</code>
     */
    public static final int RELEASE_TYPE_E_BOOK_RELEASE_VALUE = 37;
    /**
     * <code>RELEASE_TYPE_VIDEO_ALBUM = 38;</code>
     */
    public static final int RELEASE_TYPE_VIDEO_ALBUM_VALUE = 38;
    /**
     * <code>RELEASE_TYPE_BOOKLET_RELEASE = 39;</code>
     */
    public static final int RELEASE_TYPE_BOOKLET_RELEASE_VALUE = 39;
    /**
     * <code>RELEASE_TYPE_MUSICAL_WORK_BASED_GAME_RELEASE = 40;</code>
     */
    public static final int RELEASE_TYPE_MUSICAL_WORK_BASED_GAME_RELEASE_VALUE = 40;
    /**
     * <code>RELEASE_TYPE_EPISODE = 41;</code>
     */
    public static final int RELEASE_TYPE_EPISODE_VALUE = 41;
    /**
     * <code>RELEASE_TYPE_SERIES = 42;</code>
     */
    public static final int RELEASE_TYPE_SERIES_VALUE = 42;
    /**
     * <code>RELEASE_TYPE_LYRIC_SHEET_RELEASE = 43;</code>
     */
    public static final int RELEASE_TYPE_LYRIC_SHEET_RELEASE_VALUE = 43;
    /**
     * <code>RELEASE_TYPE_SINGLE = 44;</code>
     */
    public static final int RELEASE_TYPE_SINGLE_VALUE = 44;
    /**
     * <code>RELEASE_TYPE_VIDEO_SINGLE = 45;</code>
     */
    public static final int RELEASE_TYPE_VIDEO_SINGLE_VALUE = 45;
    /**
     * <code>RELEASE_TYPE_BACK_COVER_IMAGE_RELEASE = 46;</code>
     */
    public static final int RELEASE_TYPE_BACK_COVER_IMAGE_RELEASE_VALUE = 46;
    /**
     * <code>RELEASE_TYPE_CONCERT_VIDEO = 47;</code>
     */
    public static final int RELEASE_TYPE_CONCERT_VIDEO_VALUE = 47;
    /**
     * <code>RELEASE_TYPE_VIDEO_MASTERTONE_RELEASE = 48;</code>
     */
    public static final int RELEASE_TYPE_VIDEO_MASTERTONE_RELEASE_VALUE = 48;
    /**
     * <code>RELEASE_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE = 49;</code>
     */
    public static final int RELEASE_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE_VALUE = 49;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReleaseType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReleaseType forNumber(int value) {
      switch (value) {
        case 0: return RELEASE_TYPE_LIVE_EVENT_VIDEO;
        case 1: return RELEASE_TYPE_CLASSICAL_ALBUM;
        case 2: return RELEASE_TYPE_CLASSICAL_MULTIMEDIA_ALBUM;
        case 3: return RELEASE_TYPE_ALBUM;
        case 4: return RELEASE_TYPE_SHORT_FILM;
        case 5: return RELEASE_TYPE_AS_PER_CONTRACT;
        case 6: return RELEASE_TYPE_FEATURE_FILM;
        case 7: return RELEASE_TYPE_RINGTONE_RELEASE;
        case 8: return RELEASE_TYPE_SINGLE_RESOURCE_RELEASE;
        case 9: return RELEASE_TYPE_ALERT_TONE_RELEASE;
        case 10: return RELEASE_TYPE_SHEET_MUSIC_RELEASE;
        case 11: return RELEASE_TYPE_TRACK_RELEASE;
        case 12: return RELEASE_TYPE_CLASSICAL_DIGITAL_BOXED_SET;
        case 13: return RELEASE_TYPE_RINGBACK_TONE_RELEASE;
        case 14: return RELEASE_TYPE_USER_DEFINED;
        case 15: return RELEASE_TYPE_LOGO_RELEASE;
        case 16: return RELEASE_TYPE_MULTIMEDIA_ALBUM;
        case 17: return RELEASE_TYPE_AUDIO_DRAMA_RELEASE;
        case 18: return RELEASE_TYPE_BOOKLET_BACK_IMAGE_RELEASE;
        case 19: return RELEASE_TYPE_E_P;
        case 20: return RELEASE_TYPE_MULTIMEDIA_SINGLE;
        case 21: return RELEASE_TYPE_DRAMATICO_MUSICAL_VIDEO_RELEASE;
        case 22: return RELEASE_TYPE_BOOKLET_FRONT_IMAGE_RELEASE;
        case 23: return RELEASE_TYPE_DRAMA;
        case 24: return RELEASE_TYPE_NON_MUSICAL_WORK_BASED_GAME_RELEASE;
        case 25: return RELEASE_TYPE_DJ_MIX;
        case 26: return RELEASE_TYPE_MULTIMEDIA_DIGITAL_BOXED_SET;
        case 27: return RELEASE_TYPE_STEM_BUNDLE;
        case 28: return RELEASE_TYPE_PLAY_LIST;
        case 29: return RELEASE_TYPE_AUDIO_BOOK_RELEASE;
        case 30: return RELEASE_TYPE_DIGITAL_BOX_SET_RELEASE;
        case 31: return RELEASE_TYPE_KARAOKE_RELEASE;
        case 32: return RELEASE_TYPE_WALLPAPER_RELEASE;
        case 33: return RELEASE_TYPE_DOCUMENTARY;
        case 34: return RELEASE_TYPE_SEASON;
        case 35: return RELEASE_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE;
        case 36: return RELEASE_TYPE_BUNDLE;
        case 37: return RELEASE_TYPE_E_BOOK_RELEASE;
        case 38: return RELEASE_TYPE_VIDEO_ALBUM;
        case 39: return RELEASE_TYPE_BOOKLET_RELEASE;
        case 40: return RELEASE_TYPE_MUSICAL_WORK_BASED_GAME_RELEASE;
        case 41: return RELEASE_TYPE_EPISODE;
        case 42: return RELEASE_TYPE_SERIES;
        case 43: return RELEASE_TYPE_LYRIC_SHEET_RELEASE;
        case 44: return RELEASE_TYPE_SINGLE;
        case 45: return RELEASE_TYPE_VIDEO_SINGLE;
        case 46: return RELEASE_TYPE_BACK_COVER_IMAGE_RELEASE;
        case 47: return RELEASE_TYPE_CONCERT_VIDEO;
        case 48: return RELEASE_TYPE_VIDEO_MASTERTONE_RELEASE;
        case 49: return RELEASE_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReleaseType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReleaseType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReleaseType>() {
            public ReleaseType findValueByNumber(int number) {
              return ReleaseType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(133);
    }

    private static final ReleaseType[] VALUES = values();

    public static ReleaseType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReleaseType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReleaseType)
  }

  /**
   * Protobuf enum {@code avs.ReleaseType_ERN4}
   */
  public enum ReleaseType_ERN4
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELEASE_TYPE__E_R_N4_LIVE_EVENT_VIDEO = 0;</code>
     */
    RELEASE_TYPE__E_R_N4_LIVE_EVENT_VIDEO(0),
    /**
     * <code>RELEASE_TYPE__E_R_N4_CLASSICAL_ALBUM = 1;</code>
     */
    RELEASE_TYPE__E_R_N4_CLASSICAL_ALBUM(1),
    /**
     * <code>RELEASE_TYPE__E_R_N4_CLASSICAL_MULTIMEDIA_ALBUM = 2;</code>
     */
    RELEASE_TYPE__E_R_N4_CLASSICAL_MULTIMEDIA_ALBUM(2),
    /**
     * <code>RELEASE_TYPE__E_R_N4_ALBUM = 3;</code>
     */
    RELEASE_TYPE__E_R_N4_ALBUM(3),
    /**
     * <code>RELEASE_TYPE__E_R_N4_SHORT_FILM = 4;</code>
     */
    RELEASE_TYPE__E_R_N4_SHORT_FILM(4),
    /**
     * <code>RELEASE_TYPE__E_R_N4_AS_PER_CONTRACT = 5;</code>
     */
    RELEASE_TYPE__E_R_N4_AS_PER_CONTRACT(5),
    /**
     * <code>RELEASE_TYPE__E_R_N4_FEATURE_FILM = 6;</code>
     */
    RELEASE_TYPE__E_R_N4_FEATURE_FILM(6),
    /**
     * <code>RELEASE_TYPE__E_R_N4_RINGTONE_RELEASE = 7;</code>
     */
    RELEASE_TYPE__E_R_N4_RINGTONE_RELEASE(7),
    /**
     * <code>RELEASE_TYPE__E_R_N4_SINGLE_RESOURCE_RELEASE = 8;</code>
     */
    RELEASE_TYPE__E_R_N4_SINGLE_RESOURCE_RELEASE(8),
    /**
     * <code>RELEASE_TYPE__E_R_N4_ALERT_TONE_RELEASE = 9;</code>
     */
    RELEASE_TYPE__E_R_N4_ALERT_TONE_RELEASE(9),
    /**
     * <code>RELEASE_TYPE__E_R_N4_SHEET_MUSIC_RELEASE = 10;</code>
     */
    RELEASE_TYPE__E_R_N4_SHEET_MUSIC_RELEASE(10),
    /**
     * <code>RELEASE_TYPE__E_R_N4_CLASSICAL_DIGITAL_BOXED_SET = 11;</code>
     */
    RELEASE_TYPE__E_R_N4_CLASSICAL_DIGITAL_BOXED_SET(11),
    /**
     * <code>RELEASE_TYPE__E_R_N4_RINGBACK_TONE_RELEASE = 12;</code>
     */
    RELEASE_TYPE__E_R_N4_RINGBACK_TONE_RELEASE(12),
    /**
     * <code>RELEASE_TYPE__E_R_N4_USER_DEFINED = 13;</code>
     */
    RELEASE_TYPE__E_R_N4_USER_DEFINED(13),
    /**
     * <code>RELEASE_TYPE__E_R_N4_LOGO_RELEASE = 14;</code>
     */
    RELEASE_TYPE__E_R_N4_LOGO_RELEASE(14),
    /**
     * <code>RELEASE_TYPE__E_R_N4_MULTIMEDIA_ALBUM = 15;</code>
     */
    RELEASE_TYPE__E_R_N4_MULTIMEDIA_ALBUM(15),
    /**
     * <code>RELEASE_TYPE__E_R_N4_AUDIO_DRAMA_RELEASE = 16;</code>
     */
    RELEASE_TYPE__E_R_N4_AUDIO_DRAMA_RELEASE(16),
    /**
     * <code>RELEASE_TYPE__E_R_N4_BOOKLET_BACK_IMAGE_RELEASE = 17;</code>
     */
    RELEASE_TYPE__E_R_N4_BOOKLET_BACK_IMAGE_RELEASE(17),
    /**
     * <code>RELEASE_TYPE__E_R_N4_E_P = 18;</code>
     */
    RELEASE_TYPE__E_R_N4_E_P(18),
    /**
     * <code>RELEASE_TYPE__E_R_N4_MULTIMEDIA_SINGLE = 19;</code>
     */
    RELEASE_TYPE__E_R_N4_MULTIMEDIA_SINGLE(19),
    /**
     * <code>RELEASE_TYPE__E_R_N4_DRAMATICO_MUSICAL_VIDEO_RELEASE = 20;</code>
     */
    RELEASE_TYPE__E_R_N4_DRAMATICO_MUSICAL_VIDEO_RELEASE(20),
    /**
     * <code>RELEASE_TYPE__E_R_N4_BOOKLET_FRONT_IMAGE_RELEASE = 21;</code>
     */
    RELEASE_TYPE__E_R_N4_BOOKLET_FRONT_IMAGE_RELEASE(21),
    /**
     * <code>RELEASE_TYPE__E_R_N4_DRAMA = 22;</code>
     */
    RELEASE_TYPE__E_R_N4_DRAMA(22),
    /**
     * <code>RELEASE_TYPE__E_R_N4_NON_MUSICAL_WORK_BASED_GAME_RELEASE = 23;</code>
     */
    RELEASE_TYPE__E_R_N4_NON_MUSICAL_WORK_BASED_GAME_RELEASE(23),
    /**
     * <code>RELEASE_TYPE__E_R_N4_DJ_MIX = 24;</code>
     */
    RELEASE_TYPE__E_R_N4_DJ_MIX(24),
    /**
     * <code>RELEASE_TYPE__E_R_N4_MULTIMEDIA_DIGITAL_BOXED_SET = 25;</code>
     */
    RELEASE_TYPE__E_R_N4_MULTIMEDIA_DIGITAL_BOXED_SET(25),
    /**
     * <code>RELEASE_TYPE__E_R_N4_STEM_BUNDLE = 26;</code>
     */
    RELEASE_TYPE__E_R_N4_STEM_BUNDLE(26),
    /**
     * <code>RELEASE_TYPE__E_R_N4_PLAY_LIST = 27;</code>
     */
    RELEASE_TYPE__E_R_N4_PLAY_LIST(27),
    /**
     * <code>RELEASE_TYPE__E_R_N4_AUDIO_BOOK_RELEASE = 28;</code>
     */
    RELEASE_TYPE__E_R_N4_AUDIO_BOOK_RELEASE(28),
    /**
     * <code>RELEASE_TYPE__E_R_N4_DIGITAL_BOX_SET_RELEASE = 29;</code>
     */
    RELEASE_TYPE__E_R_N4_DIGITAL_BOX_SET_RELEASE(29),
    /**
     * <code>RELEASE_TYPE__E_R_N4_KARAOKE_RELEASE = 30;</code>
     */
    RELEASE_TYPE__E_R_N4_KARAOKE_RELEASE(30),
    /**
     * <code>RELEASE_TYPE__E_R_N4_WALLPAPER_RELEASE = 31;</code>
     */
    RELEASE_TYPE__E_R_N4_WALLPAPER_RELEASE(31),
    /**
     * <code>RELEASE_TYPE__E_R_N4_DOCUMENTARY = 32;</code>
     */
    RELEASE_TYPE__E_R_N4_DOCUMENTARY(32),
    /**
     * <code>RELEASE_TYPE__E_R_N4_SEASON = 33;</code>
     */
    RELEASE_TYPE__E_R_N4_SEASON(33),
    /**
     * <code>RELEASE_TYPE__E_R_N4_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE = 34;</code>
     */
    RELEASE_TYPE__E_R_N4_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE(34),
    /**
     * <code>RELEASE_TYPE__E_R_N4_BUNDLE = 35;</code>
     */
    RELEASE_TYPE__E_R_N4_BUNDLE(35),
    /**
     * <code>RELEASE_TYPE__E_R_N4_E_BOOK_RELEASE = 36;</code>
     */
    RELEASE_TYPE__E_R_N4_E_BOOK_RELEASE(36),
    /**
     * <code>RELEASE_TYPE__E_R_N4_VIDEO_ALBUM = 37;</code>
     */
    RELEASE_TYPE__E_R_N4_VIDEO_ALBUM(37),
    /**
     * <code>RELEASE_TYPE__E_R_N4_BOOKLET_RELEASE = 38;</code>
     */
    RELEASE_TYPE__E_R_N4_BOOKLET_RELEASE(38),
    /**
     * <code>RELEASE_TYPE__E_R_N4_MUSICAL_WORK_BASED_GAME_RELEASE = 39;</code>
     */
    RELEASE_TYPE__E_R_N4_MUSICAL_WORK_BASED_GAME_RELEASE(39),
    /**
     * <code>RELEASE_TYPE__E_R_N4_EPISODE = 40;</code>
     */
    RELEASE_TYPE__E_R_N4_EPISODE(40),
    /**
     * <code>RELEASE_TYPE__E_R_N4_SERIES = 41;</code>
     */
    RELEASE_TYPE__E_R_N4_SERIES(41),
    /**
     * <code>RELEASE_TYPE__E_R_N4_LYRIC_SHEET_RELEASE = 42;</code>
     */
    RELEASE_TYPE__E_R_N4_LYRIC_SHEET_RELEASE(42),
    /**
     * <code>RELEASE_TYPE__E_R_N4_SINGLE = 43;</code>
     */
    RELEASE_TYPE__E_R_N4_SINGLE(43),
    /**
     * <code>RELEASE_TYPE__E_R_N4_VIDEO_SINGLE = 44;</code>
     */
    RELEASE_TYPE__E_R_N4_VIDEO_SINGLE(44),
    /**
     * <code>RELEASE_TYPE__E_R_N4_BACK_COVER_IMAGE_RELEASE = 45;</code>
     */
    RELEASE_TYPE__E_R_N4_BACK_COVER_IMAGE_RELEASE(45),
    /**
     * <code>RELEASE_TYPE__E_R_N4_CONCERT_VIDEO = 46;</code>
     */
    RELEASE_TYPE__E_R_N4_CONCERT_VIDEO(46),
    /**
     * <code>RELEASE_TYPE__E_R_N4_VIDEO_MASTERTONE_RELEASE = 47;</code>
     */
    RELEASE_TYPE__E_R_N4_VIDEO_MASTERTONE_RELEASE(47),
    /**
     * <code>RELEASE_TYPE__E_R_N4_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE = 48;</code>
     */
    RELEASE_TYPE__E_R_N4_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE(48),
    ;

    /**
     * <code>RELEASE_TYPE__E_R_N4_LIVE_EVENT_VIDEO = 0;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_LIVE_EVENT_VIDEO_VALUE = 0;
    /**
     * <code>RELEASE_TYPE__E_R_N4_CLASSICAL_ALBUM = 1;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_CLASSICAL_ALBUM_VALUE = 1;
    /**
     * <code>RELEASE_TYPE__E_R_N4_CLASSICAL_MULTIMEDIA_ALBUM = 2;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_CLASSICAL_MULTIMEDIA_ALBUM_VALUE = 2;
    /**
     * <code>RELEASE_TYPE__E_R_N4_ALBUM = 3;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_ALBUM_VALUE = 3;
    /**
     * <code>RELEASE_TYPE__E_R_N4_SHORT_FILM = 4;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_SHORT_FILM_VALUE = 4;
    /**
     * <code>RELEASE_TYPE__E_R_N4_AS_PER_CONTRACT = 5;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_AS_PER_CONTRACT_VALUE = 5;
    /**
     * <code>RELEASE_TYPE__E_R_N4_FEATURE_FILM = 6;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_FEATURE_FILM_VALUE = 6;
    /**
     * <code>RELEASE_TYPE__E_R_N4_RINGTONE_RELEASE = 7;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_RINGTONE_RELEASE_VALUE = 7;
    /**
     * <code>RELEASE_TYPE__E_R_N4_SINGLE_RESOURCE_RELEASE = 8;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_SINGLE_RESOURCE_RELEASE_VALUE = 8;
    /**
     * <code>RELEASE_TYPE__E_R_N4_ALERT_TONE_RELEASE = 9;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_ALERT_TONE_RELEASE_VALUE = 9;
    /**
     * <code>RELEASE_TYPE__E_R_N4_SHEET_MUSIC_RELEASE = 10;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_SHEET_MUSIC_RELEASE_VALUE = 10;
    /**
     * <code>RELEASE_TYPE__E_R_N4_CLASSICAL_DIGITAL_BOXED_SET = 11;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_CLASSICAL_DIGITAL_BOXED_SET_VALUE = 11;
    /**
     * <code>RELEASE_TYPE__E_R_N4_RINGBACK_TONE_RELEASE = 12;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_RINGBACK_TONE_RELEASE_VALUE = 12;
    /**
     * <code>RELEASE_TYPE__E_R_N4_USER_DEFINED = 13;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_USER_DEFINED_VALUE = 13;
    /**
     * <code>RELEASE_TYPE__E_R_N4_LOGO_RELEASE = 14;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_LOGO_RELEASE_VALUE = 14;
    /**
     * <code>RELEASE_TYPE__E_R_N4_MULTIMEDIA_ALBUM = 15;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_MULTIMEDIA_ALBUM_VALUE = 15;
    /**
     * <code>RELEASE_TYPE__E_R_N4_AUDIO_DRAMA_RELEASE = 16;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_AUDIO_DRAMA_RELEASE_VALUE = 16;
    /**
     * <code>RELEASE_TYPE__E_R_N4_BOOKLET_BACK_IMAGE_RELEASE = 17;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_BOOKLET_BACK_IMAGE_RELEASE_VALUE = 17;
    /**
     * <code>RELEASE_TYPE__E_R_N4_E_P = 18;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_E_P_VALUE = 18;
    /**
     * <code>RELEASE_TYPE__E_R_N4_MULTIMEDIA_SINGLE = 19;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_MULTIMEDIA_SINGLE_VALUE = 19;
    /**
     * <code>RELEASE_TYPE__E_R_N4_DRAMATICO_MUSICAL_VIDEO_RELEASE = 20;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_DRAMATICO_MUSICAL_VIDEO_RELEASE_VALUE = 20;
    /**
     * <code>RELEASE_TYPE__E_R_N4_BOOKLET_FRONT_IMAGE_RELEASE = 21;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_BOOKLET_FRONT_IMAGE_RELEASE_VALUE = 21;
    /**
     * <code>RELEASE_TYPE__E_R_N4_DRAMA = 22;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_DRAMA_VALUE = 22;
    /**
     * <code>RELEASE_TYPE__E_R_N4_NON_MUSICAL_WORK_BASED_GAME_RELEASE = 23;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_NON_MUSICAL_WORK_BASED_GAME_RELEASE_VALUE = 23;
    /**
     * <code>RELEASE_TYPE__E_R_N4_DJ_MIX = 24;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_DJ_MIX_VALUE = 24;
    /**
     * <code>RELEASE_TYPE__E_R_N4_MULTIMEDIA_DIGITAL_BOXED_SET = 25;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_MULTIMEDIA_DIGITAL_BOXED_SET_VALUE = 25;
    /**
     * <code>RELEASE_TYPE__E_R_N4_STEM_BUNDLE = 26;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_STEM_BUNDLE_VALUE = 26;
    /**
     * <code>RELEASE_TYPE__E_R_N4_PLAY_LIST = 27;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_PLAY_LIST_VALUE = 27;
    /**
     * <code>RELEASE_TYPE__E_R_N4_AUDIO_BOOK_RELEASE = 28;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_AUDIO_BOOK_RELEASE_VALUE = 28;
    /**
     * <code>RELEASE_TYPE__E_R_N4_DIGITAL_BOX_SET_RELEASE = 29;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_DIGITAL_BOX_SET_RELEASE_VALUE = 29;
    /**
     * <code>RELEASE_TYPE__E_R_N4_KARAOKE_RELEASE = 30;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_KARAOKE_RELEASE_VALUE = 30;
    /**
     * <code>RELEASE_TYPE__E_R_N4_WALLPAPER_RELEASE = 31;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_WALLPAPER_RELEASE_VALUE = 31;
    /**
     * <code>RELEASE_TYPE__E_R_N4_DOCUMENTARY = 32;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_DOCUMENTARY_VALUE = 32;
    /**
     * <code>RELEASE_TYPE__E_R_N4_SEASON = 33;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_SEASON_VALUE = 33;
    /**
     * <code>RELEASE_TYPE__E_R_N4_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE = 34;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE_VALUE = 34;
    /**
     * <code>RELEASE_TYPE__E_R_N4_BUNDLE = 35;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_BUNDLE_VALUE = 35;
    /**
     * <code>RELEASE_TYPE__E_R_N4_E_BOOK_RELEASE = 36;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_E_BOOK_RELEASE_VALUE = 36;
    /**
     * <code>RELEASE_TYPE__E_R_N4_VIDEO_ALBUM = 37;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_VIDEO_ALBUM_VALUE = 37;
    /**
     * <code>RELEASE_TYPE__E_R_N4_BOOKLET_RELEASE = 38;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_BOOKLET_RELEASE_VALUE = 38;
    /**
     * <code>RELEASE_TYPE__E_R_N4_MUSICAL_WORK_BASED_GAME_RELEASE = 39;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_MUSICAL_WORK_BASED_GAME_RELEASE_VALUE = 39;
    /**
     * <code>RELEASE_TYPE__E_R_N4_EPISODE = 40;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_EPISODE_VALUE = 40;
    /**
     * <code>RELEASE_TYPE__E_R_N4_SERIES = 41;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_SERIES_VALUE = 41;
    /**
     * <code>RELEASE_TYPE__E_R_N4_LYRIC_SHEET_RELEASE = 42;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_LYRIC_SHEET_RELEASE_VALUE = 42;
    /**
     * <code>RELEASE_TYPE__E_R_N4_SINGLE = 43;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_SINGLE_VALUE = 43;
    /**
     * <code>RELEASE_TYPE__E_R_N4_VIDEO_SINGLE = 44;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_VIDEO_SINGLE_VALUE = 44;
    /**
     * <code>RELEASE_TYPE__E_R_N4_BACK_COVER_IMAGE_RELEASE = 45;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_BACK_COVER_IMAGE_RELEASE_VALUE = 45;
    /**
     * <code>RELEASE_TYPE__E_R_N4_CONCERT_VIDEO = 46;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_CONCERT_VIDEO_VALUE = 46;
    /**
     * <code>RELEASE_TYPE__E_R_N4_VIDEO_MASTERTONE_RELEASE = 47;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_VIDEO_MASTERTONE_RELEASE_VALUE = 47;
    /**
     * <code>RELEASE_TYPE__E_R_N4_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE = 48;</code>
     */
    public static final int RELEASE_TYPE__E_R_N4_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE_VALUE = 48;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReleaseType_ERN4 valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReleaseType_ERN4 forNumber(int value) {
      switch (value) {
        case 0: return RELEASE_TYPE__E_R_N4_LIVE_EVENT_VIDEO;
        case 1: return RELEASE_TYPE__E_R_N4_CLASSICAL_ALBUM;
        case 2: return RELEASE_TYPE__E_R_N4_CLASSICAL_MULTIMEDIA_ALBUM;
        case 3: return RELEASE_TYPE__E_R_N4_ALBUM;
        case 4: return RELEASE_TYPE__E_R_N4_SHORT_FILM;
        case 5: return RELEASE_TYPE__E_R_N4_AS_PER_CONTRACT;
        case 6: return RELEASE_TYPE__E_R_N4_FEATURE_FILM;
        case 7: return RELEASE_TYPE__E_R_N4_RINGTONE_RELEASE;
        case 8: return RELEASE_TYPE__E_R_N4_SINGLE_RESOURCE_RELEASE;
        case 9: return RELEASE_TYPE__E_R_N4_ALERT_TONE_RELEASE;
        case 10: return RELEASE_TYPE__E_R_N4_SHEET_MUSIC_RELEASE;
        case 11: return RELEASE_TYPE__E_R_N4_CLASSICAL_DIGITAL_BOXED_SET;
        case 12: return RELEASE_TYPE__E_R_N4_RINGBACK_TONE_RELEASE;
        case 13: return RELEASE_TYPE__E_R_N4_USER_DEFINED;
        case 14: return RELEASE_TYPE__E_R_N4_LOGO_RELEASE;
        case 15: return RELEASE_TYPE__E_R_N4_MULTIMEDIA_ALBUM;
        case 16: return RELEASE_TYPE__E_R_N4_AUDIO_DRAMA_RELEASE;
        case 17: return RELEASE_TYPE__E_R_N4_BOOKLET_BACK_IMAGE_RELEASE;
        case 18: return RELEASE_TYPE__E_R_N4_E_P;
        case 19: return RELEASE_TYPE__E_R_N4_MULTIMEDIA_SINGLE;
        case 20: return RELEASE_TYPE__E_R_N4_DRAMATICO_MUSICAL_VIDEO_RELEASE;
        case 21: return RELEASE_TYPE__E_R_N4_BOOKLET_FRONT_IMAGE_RELEASE;
        case 22: return RELEASE_TYPE__E_R_N4_DRAMA;
        case 23: return RELEASE_TYPE__E_R_N4_NON_MUSICAL_WORK_BASED_GAME_RELEASE;
        case 24: return RELEASE_TYPE__E_R_N4_DJ_MIX;
        case 25: return RELEASE_TYPE__E_R_N4_MULTIMEDIA_DIGITAL_BOXED_SET;
        case 26: return RELEASE_TYPE__E_R_N4_STEM_BUNDLE;
        case 27: return RELEASE_TYPE__E_R_N4_PLAY_LIST;
        case 28: return RELEASE_TYPE__E_R_N4_AUDIO_BOOK_RELEASE;
        case 29: return RELEASE_TYPE__E_R_N4_DIGITAL_BOX_SET_RELEASE;
        case 30: return RELEASE_TYPE__E_R_N4_KARAOKE_RELEASE;
        case 31: return RELEASE_TYPE__E_R_N4_WALLPAPER_RELEASE;
        case 32: return RELEASE_TYPE__E_R_N4_DOCUMENTARY;
        case 33: return RELEASE_TYPE__E_R_N4_SEASON;
        case 34: return RELEASE_TYPE__E_R_N4_LONG_FORM_NON_MUSICAL_WORK_VIDEO_RELEASE;
        case 35: return RELEASE_TYPE__E_R_N4_BUNDLE;
        case 36: return RELEASE_TYPE__E_R_N4_E_BOOK_RELEASE;
        case 37: return RELEASE_TYPE__E_R_N4_VIDEO_ALBUM;
        case 38: return RELEASE_TYPE__E_R_N4_BOOKLET_RELEASE;
        case 39: return RELEASE_TYPE__E_R_N4_MUSICAL_WORK_BASED_GAME_RELEASE;
        case 40: return RELEASE_TYPE__E_R_N4_EPISODE;
        case 41: return RELEASE_TYPE__E_R_N4_SERIES;
        case 42: return RELEASE_TYPE__E_R_N4_LYRIC_SHEET_RELEASE;
        case 43: return RELEASE_TYPE__E_R_N4_SINGLE;
        case 44: return RELEASE_TYPE__E_R_N4_VIDEO_SINGLE;
        case 45: return RELEASE_TYPE__E_R_N4_BACK_COVER_IMAGE_RELEASE;
        case 46: return RELEASE_TYPE__E_R_N4_CONCERT_VIDEO;
        case 47: return RELEASE_TYPE__E_R_N4_VIDEO_MASTERTONE_RELEASE;
        case 48: return RELEASE_TYPE__E_R_N4_LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReleaseType_ERN4>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReleaseType_ERN4> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReleaseType_ERN4>() {
            public ReleaseType_ERN4 findValueByNumber(int number) {
              return ReleaseType_ERN4.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(134);
    }

    private static final ReleaseType_ERN4[] VALUES = values();

    public static ReleaseType_ERN4 valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReleaseType_ERN4(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReleaseType_ERN4)
  }

  /**
   * Protobuf enum {@code avs.ReleaseType_MCNOTIF}
   */
  public enum ReleaseType_MCNOTIF
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_RINGTONE_RELEASE = 0;</code>
     */
    RELEASE_TYPE__M_C_N_O_T_I_F_RINGTONE_RELEASE(0),
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_SINGLE = 1;</code>
     */
    RELEASE_TYPE__M_C_N_O_T_I_F_SINGLE(1),
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_SINGLE = 2;</code>
     */
    RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_SINGLE(2),
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_ALBUM = 3;</code>
     */
    RELEASE_TYPE__M_C_N_O_T_I_F_ALBUM(3),
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_E_P = 4;</code>
     */
    RELEASE_TYPE__M_C_N_O_T_I_F_E_P(4),
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_RINGBACK_TONE_RELEASE = 5;</code>
     */
    RELEASE_TYPE__M_C_N_O_T_I_F_RINGBACK_TONE_RELEASE(5),
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_ALBUM = 6;</code>
     */
    RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_ALBUM(6),
    ;

    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_RINGTONE_RELEASE = 0;</code>
     */
    public static final int RELEASE_TYPE__M_C_N_O_T_I_F_RINGTONE_RELEASE_VALUE = 0;
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_SINGLE = 1;</code>
     */
    public static final int RELEASE_TYPE__M_C_N_O_T_I_F_SINGLE_VALUE = 1;
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_SINGLE = 2;</code>
     */
    public static final int RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_SINGLE_VALUE = 2;
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_ALBUM = 3;</code>
     */
    public static final int RELEASE_TYPE__M_C_N_O_T_I_F_ALBUM_VALUE = 3;
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_E_P = 4;</code>
     */
    public static final int RELEASE_TYPE__M_C_N_O_T_I_F_E_P_VALUE = 4;
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_RINGBACK_TONE_RELEASE = 5;</code>
     */
    public static final int RELEASE_TYPE__M_C_N_O_T_I_F_RINGBACK_TONE_RELEASE_VALUE = 5;
    /**
     * <code>RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_ALBUM = 6;</code>
     */
    public static final int RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_ALBUM_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReleaseType_MCNOTIF valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReleaseType_MCNOTIF forNumber(int value) {
      switch (value) {
        case 0: return RELEASE_TYPE__M_C_N_O_T_I_F_RINGTONE_RELEASE;
        case 1: return RELEASE_TYPE__M_C_N_O_T_I_F_SINGLE;
        case 2: return RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_SINGLE;
        case 3: return RELEASE_TYPE__M_C_N_O_T_I_F_ALBUM;
        case 4: return RELEASE_TYPE__M_C_N_O_T_I_F_E_P;
        case 5: return RELEASE_TYPE__M_C_N_O_T_I_F_RINGBACK_TONE_RELEASE;
        case 6: return RELEASE_TYPE__M_C_N_O_T_I_F_VIDEO_ALBUM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReleaseType_MCNOTIF>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReleaseType_MCNOTIF> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReleaseType_MCNOTIF>() {
            public ReleaseType_MCNOTIF findValueByNumber(int number) {
              return ReleaseType_MCNOTIF.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(135);
    }

    private static final ReleaseType_MCNOTIF[] VALUES = values();

    public static ReleaseType_MCNOTIF valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReleaseType_MCNOTIF(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ReleaseType_MCNOTIF)
  }

  /**
   * Protobuf enum {@code avs.RequestMessagePurpose}
   */
  public enum RequestMessagePurpose
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REQUEST_MESSAGE_PURPOSE_NDMA_LICENSE_REQUEST = 0;</code>
     */
    REQUEST_MESSAGE_PURPOSE_NDMA_LICENSE_REQUEST(0),
    /**
     * <code>REQUEST_MESSAGE_PURPOSE_LICENSE_REQUEST = 1;</code>
     */
    REQUEST_MESSAGE_PURPOSE_LICENSE_REQUEST(1),
    /**
     * <code>REQUEST_MESSAGE_PURPOSE_NOTIFICATION = 2;</code>
     */
    REQUEST_MESSAGE_PURPOSE_NOTIFICATION(2),
    ;

    /**
     * <code>REQUEST_MESSAGE_PURPOSE_NDMA_LICENSE_REQUEST = 0;</code>
     */
    public static final int REQUEST_MESSAGE_PURPOSE_NDMA_LICENSE_REQUEST_VALUE = 0;
    /**
     * <code>REQUEST_MESSAGE_PURPOSE_LICENSE_REQUEST = 1;</code>
     */
    public static final int REQUEST_MESSAGE_PURPOSE_LICENSE_REQUEST_VALUE = 1;
    /**
     * <code>REQUEST_MESSAGE_PURPOSE_NOTIFICATION = 2;</code>
     */
    public static final int REQUEST_MESSAGE_PURPOSE_NOTIFICATION_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequestMessagePurpose valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RequestMessagePurpose forNumber(int value) {
      switch (value) {
        case 0: return REQUEST_MESSAGE_PURPOSE_NDMA_LICENSE_REQUEST;
        case 1: return REQUEST_MESSAGE_PURPOSE_LICENSE_REQUEST;
        case 2: return REQUEST_MESSAGE_PURPOSE_NOTIFICATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestMessagePurpose>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestMessagePurpose> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestMessagePurpose>() {
            public RequestMessagePurpose findValueByNumber(int number) {
              return RequestMessagePurpose.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(136);
    }

    private static final RequestMessagePurpose[] VALUES = values();

    public static RequestMessagePurpose valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestMessagePurpose(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RequestMessagePurpose)
  }

  /**
   * Protobuf enum {@code avs.RequestReason}
   */
  public enum RequestReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REQUEST_REASON_SPECIFIC_REQUEST = 0;</code>
     */
    REQUEST_REASON_SPECIFIC_REQUEST(0),
    /**
     * <code>REQUEST_REASON_WRITER_REMOVAL = 1;</code>
     */
    REQUEST_REASON_WRITER_REMOVAL(1),
    /**
     * <code>REQUEST_REASON_WRITER_CHANGE = 2;</code>
     */
    REQUEST_REASON_WRITER_CHANGE(2),
    /**
     * <code>REQUEST_REASON_PUBLISHER_CHANGE = 3;</code>
     */
    REQUEST_REASON_PUBLISHER_CHANGE(3),
    /**
     * <code>REQUEST_REASON_WRITER_ADDITION = 4;</code>
     */
    REQUEST_REASON_WRITER_ADDITION(4),
    /**
     * <code>REQUEST_REASON_DISPUTE_RESOLUTION_REQUEST = 5;</code>
     */
    REQUEST_REASON_DISPUTE_RESOLUTION_REQUEST(5),
    /**
     * <code>REQUEST_REASON_RECALL = 6;</code>
     */
    REQUEST_REASON_RECALL(6),
    /**
     * <code>REQUEST_REASON_GENERAL_REQUEST = 7;</code>
     */
    REQUEST_REASON_GENERAL_REQUEST(7),
    /**
     * <code>REQUEST_REASON_PUBLISHER_ADDITION = 8;</code>
     */
    REQUEST_REASON_PUBLISHER_ADDITION(8),
    /**
     * <code>REQUEST_REASON_PUBLISHER_REMOVAL = 9;</code>
     */
    REQUEST_REASON_PUBLISHER_REMOVAL(9),
    /**
     * <code>REQUEST_REASON_RELEASE_LIST_UPDATE = 10;</code>
     */
    REQUEST_REASON_RELEASE_LIST_UPDATE(10),
    /**
     * <code>REQUEST_REASON_USER_DEFINED = 11;</code>
     */
    REQUEST_REASON_USER_DEFINED(11),
    ;

    /**
     * <code>REQUEST_REASON_SPECIFIC_REQUEST = 0;</code>
     */
    public static final int REQUEST_REASON_SPECIFIC_REQUEST_VALUE = 0;
    /**
     * <code>REQUEST_REASON_WRITER_REMOVAL = 1;</code>
     */
    public static final int REQUEST_REASON_WRITER_REMOVAL_VALUE = 1;
    /**
     * <code>REQUEST_REASON_WRITER_CHANGE = 2;</code>
     */
    public static final int REQUEST_REASON_WRITER_CHANGE_VALUE = 2;
    /**
     * <code>REQUEST_REASON_PUBLISHER_CHANGE = 3;</code>
     */
    public static final int REQUEST_REASON_PUBLISHER_CHANGE_VALUE = 3;
    /**
     * <code>REQUEST_REASON_WRITER_ADDITION = 4;</code>
     */
    public static final int REQUEST_REASON_WRITER_ADDITION_VALUE = 4;
    /**
     * <code>REQUEST_REASON_DISPUTE_RESOLUTION_REQUEST = 5;</code>
     */
    public static final int REQUEST_REASON_DISPUTE_RESOLUTION_REQUEST_VALUE = 5;
    /**
     * <code>REQUEST_REASON_RECALL = 6;</code>
     */
    public static final int REQUEST_REASON_RECALL_VALUE = 6;
    /**
     * <code>REQUEST_REASON_GENERAL_REQUEST = 7;</code>
     */
    public static final int REQUEST_REASON_GENERAL_REQUEST_VALUE = 7;
    /**
     * <code>REQUEST_REASON_PUBLISHER_ADDITION = 8;</code>
     */
    public static final int REQUEST_REASON_PUBLISHER_ADDITION_VALUE = 8;
    /**
     * <code>REQUEST_REASON_PUBLISHER_REMOVAL = 9;</code>
     */
    public static final int REQUEST_REASON_PUBLISHER_REMOVAL_VALUE = 9;
    /**
     * <code>REQUEST_REASON_RELEASE_LIST_UPDATE = 10;</code>
     */
    public static final int REQUEST_REASON_RELEASE_LIST_UPDATE_VALUE = 10;
    /**
     * <code>REQUEST_REASON_USER_DEFINED = 11;</code>
     */
    public static final int REQUEST_REASON_USER_DEFINED_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequestReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RequestReason forNumber(int value) {
      switch (value) {
        case 0: return REQUEST_REASON_SPECIFIC_REQUEST;
        case 1: return REQUEST_REASON_WRITER_REMOVAL;
        case 2: return REQUEST_REASON_WRITER_CHANGE;
        case 3: return REQUEST_REASON_PUBLISHER_CHANGE;
        case 4: return REQUEST_REASON_WRITER_ADDITION;
        case 5: return REQUEST_REASON_DISPUTE_RESOLUTION_REQUEST;
        case 6: return REQUEST_REASON_RECALL;
        case 7: return REQUEST_REASON_GENERAL_REQUEST;
        case 8: return REQUEST_REASON_PUBLISHER_ADDITION;
        case 9: return REQUEST_REASON_PUBLISHER_REMOVAL;
        case 10: return REQUEST_REASON_RELEASE_LIST_UPDATE;
        case 11: return REQUEST_REASON_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestReason>() {
            public RequestReason findValueByNumber(int number) {
              return RequestReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(137);
    }

    private static final RequestReason[] VALUES = values();

    public static RequestReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RequestReason)
  }

  /**
   * Protobuf enum {@code avs.ResourceContributorRole}
   */
  public enum ResourceContributorRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARTIST = 0;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ARTIST(0),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER = 1;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER(1),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWED_GUEST = 2;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWED_GUEST(2),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER = 3;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER(3),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ART_COPYIST = 4;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ART_COPYIST(4),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SERIES_PRODUCER = 5;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SERIES_PRODUCER(5),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION = 6;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION(6),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER = 7;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER(7),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER = 8;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER(8),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TAPE_OPERATOR = 9;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TAPE_OPERATOR(9),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER = 10;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER(10),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANNOUNCER = 11;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ANNOUNCER(11),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PUPPETEER = 12;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PUPPETEER(12),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_UNKNOWN = 13;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_UNKNOWN(13),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST = 14;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST(14),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSICIAN = 15;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MUSICIAN(15),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER = 16;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER(16),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ACTOR = 17;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ACTOR(17),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PAINTER = 18;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PAINTER(18),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STORY_TELLER = 19;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STORY_TELLER(19),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_USER_DEFINED = 20;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_USER_DEFINED(20),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR = 21;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR(21),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR = 22;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR(22),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA = 23;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA(23),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER = 24;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER(24),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_PRODUCER = 25;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VOCAL_PRODUCER(25),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SCENIC_OPERATIVE = 26;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SCENIC_OPERATIVE(26),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMER = 27;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMER(27),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PRODUCER = 28;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PRODUCER(28),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STAGE_DIRECTOR = 29;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STAGE_DIRECTOR(29),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TYPE_DESIGNER = 30;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TYPE_DESIGNER(30),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GROUP_MEMBER = 31;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_GROUP_MEMBER(31),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EDITOR = 32;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EDITOR(32),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ARRANGER = 33;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ARRANGER(33),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR = 34;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR(34),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_DIRECTOR = 35;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FILM_DIRECTOR(35),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CLAPPER_LOADER = 36;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CLAPPER_LOADER(36),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REMIXING_ENGINEER = 37;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_REMIXING_ENGINEER(37),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER = 38;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER(38),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER = 39;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER(39),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_HAIRDRESSER = 40;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_HAIRDRESSER(40),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER = 41;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER(41),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COSTUME_DESIGNER = 42;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COSTUME_DESIGNER(42),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT = 43;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT(43),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SPEAKER = 44;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SPEAKER(44),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LOCATION_MANAGER = 45;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_LOCATION_MANAGER(45),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CALLIGRAPHER = 46;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CALLIGRAPHER(46),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER = 47;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER(47),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT = 48;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT(48),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER = 49;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER(49),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LEADMAN = 50;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_LEADMAN(50),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ENGINEER = 51;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ENGINEER(51),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT = 52;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT(52),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DRESSER = 53;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DRESSER(53),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BALANCE_ENGINEER = 54;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BALANCE_ENGINEER(54),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CORRESPONDENT = 55;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CORRESPONDENT(55),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONSULTANT = 56;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CONSULTANT(56),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSIC_GROUP = 57;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MUSIC_GROUP(57),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR = 58;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR(58),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER = 59;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER(59),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL = 60;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL(60),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER = 61;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER(61),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER = 62;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER(62),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RESTAGER = 63;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RESTAGER(63),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_D_J = 64;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_D_J(64),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST = 65;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST(65),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CIRCUS_ARTIST = 66;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CIRCUS_ARTIST(66),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER = 67;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER(67),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR = 68;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR(68),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_COACH = 69;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_COACH(69),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FIGHT_DIRECTOR = 70;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FIGHT_DIRECTOR(70),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANCHOR_PERSON = 71;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ANCHOR_PERSON(71),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMPILATION_PRODUCER = 72;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COMPILATION_PRODUCER(72),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONTRACTOR = 73;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CONTRACTOR(73),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER = 74;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER(74),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ORIGINAL_ARTIST = 75;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ORIGINAL_ARTIST(75),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR = 76;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR(76),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ART_DIRECTOR = 77;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ART_DIRECTOR(77),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_KEY_GRIP = 78;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_KEY_GRIP(78),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER = 79;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER(79),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR = 80;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR(80),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ACCOMPANYIST = 81;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ACCOMPANYIST(81),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY = 82;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY(82),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DANCER = 83;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DANCER(83),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_EDITOR = 84;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FILM_EDITOR(84),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STRING_PRODUCER = 85;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STRING_PRODUCER(85),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANNOTATOR = 86;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ANNOTATOR(86),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWER = 87;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWER(87),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHER = 88;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHER(88),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER = 89;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER(89),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONDUCTOR = 90;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CONDUCTOR(90),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER = 91;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER(91),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REISSUE_PRODUCER = 92;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_REISSUE_PRODUCER(92),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CARPENTER = 93;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CARPENTER(93),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LEAD_PERFORMER = 94;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_LEAD_PERFORMER(94),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_POST_PRODUCER = 95;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_POST_PRODUCER(95),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHOREOGRAPHER = 96;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CHOREOGRAPHER(96),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMMENTATOR = 97;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COMMENTATOR(97),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER = 98;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER(98),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER = 99;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER(99),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_MIXER = 100;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CO_MIXER(100),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EXPERT = 101;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_EXPERT(101),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CAUSEUR = 102;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CAUSEUR(102),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHORUS_MASTER = 103;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CHORUS_MASTER(103),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER = 104;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER(104),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT = 105;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT(105),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SET_DRESSER = 106;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SET_DRESSER(106),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER = 107;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER(107),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHOIR = 108;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CHOIR(108),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ENGINEER = 109;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ENGINEER(109),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_PRODUCER = 110;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CO_PRODUCER(110),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BOOK_PRODUCER = 111;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BOOK_PRODUCER(111),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RESEARCHER = 112;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RESEARCHER(112),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOUND_DESIGNER = 113;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SOUND_DESIGNER(113),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN = 114;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN(114),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSIC_ARRANGER = 115;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MUSIC_ARRANGER(115),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOICE_ACTOR = 116;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VOICE_ACTOR(116),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR = 117;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR(117),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_WARDROBE = 118;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_WARDROBE(118),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN = 119;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN(119),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUNTS = 120;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STUNTS(120),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER = 121;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER(121),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_NEWS_PRODUCER = 122;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_NEWS_PRODUCER(122),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LEAD_VOCALIST = 123;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_LEAD_VOCALIST(123),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SPONSOR = 124;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SPONSOR(124),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY = 125;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY(125),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VIDEO_PRODUCER = 126;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VIDEO_PRODUCER(126),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR = 127;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR(127),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_AURAL_TRAINER = 128;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_AURAL_TRAINER(128),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CASTING_DIRECTOR = 129;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CASTING_DIRECTOR(129),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER = 130;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER(130),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER = 131;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER(131),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_CONDUCTOR = 132;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SECOND_CONDUCTOR(132),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EDITOR = 133;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_EDITOR(133),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_KEY_CHARACTER = 134;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_KEY_CHARACTER(134),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_MANAGER = 135;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_MANAGER(135),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REDACTOR = 136;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_REDACTOR(136),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CARTOONIST = 137;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CARTOONIST(137),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER = 138;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER(138),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONCERT_MASTER = 139;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CONCERT_MASTER(139),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PERSONNEL = 140;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PERSONNEL(140),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMEDIAN = 141;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COMEDIAN(141),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSIC_COPYIST = 142;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MUSIC_COPYIST(142),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COMPANY = 143;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COMPANY(143),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN = 144;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN(144),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PYROTECHNICIAN = 145;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PYROTECHNICIAN(145),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR = 146;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR(146),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER = 147;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER(147),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONTINUITY_CHECKER = 148;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CONTINUITY_CHECKER(148),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOLOIST = 149;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SOLOIST(149),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER = 150;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER(150),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REMIXED_ARTIST = 151;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_REMIXED_ARTIST(151),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIRECTOR = 152;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DIRECTOR(152),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF = 153;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF(153),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN = 154;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN(154),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOUND_SUPERVISOR = 155;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SOUND_SUPERVISOR(155),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR = 156;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR(156),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARMOURER = 157;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ARMOURER(157),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROJECT_ENGINEER = 158;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PROJECT_ENGINEER(158),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_NOT_SPECIFIED = 159;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_NOT_SPECIFIED(159),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOUND_MIXER = 160;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SOUND_MIXER(160),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_ENGINEER = 161;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SECOND_ENGINEER(161),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER = 162;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER(162),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CAMERA_OPERATOR = 163;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CAMERA_OPERATOR(163),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_ENGINEER = 164;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_ENGINEER(164),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VIDEOGRAPHER = 165;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VIDEOGRAPHER(165),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BAND_LEADER = 166;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BAND_LEADER(166),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_EDITOR = 167;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_EDITOR(167),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR = 168;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR(168),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_EDITOR = 169;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_EDITOR(169),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MIXING_ENGINEER = 170;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MIXING_ENGINEER(170),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER = 171;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER(171),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR = 172;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR(172),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BINDER = 173;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BINDER(173),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_DIRECTOR = 174;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CO_DIRECTOR(174),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GRIP = 175;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_GRIP(175),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BOOK_DESIGNER = 176;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BOOK_DESIGNER(176),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR = 177;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR(177),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CARTOGRAPHER = 178;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CARTOGRAPHER(178),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MAKE_UP_ARTIST = 179;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MAKE_UP_ARTIST(179),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PLAYBACK_SINGER = 180;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PLAYBACK_SINGER(180),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STRING_ENGINEER = 181;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STRING_ENGINEER(181),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DRAUGHTSMAN = 182;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DRAUGHTSMAN(182),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROGRAM_PRODUCER = 183;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PROGRAM_PRODUCER(183),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER = 184;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER(184),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VIDEO_DIRECTOR = 185;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VIDEO_DIRECTOR(185),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TONMEISTER = 186;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TONMEISTER(186),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR = 187;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR(187),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER = 188;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER(188),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER = 189;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER(189),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANIMATOR = 190;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ANIMATOR(190),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR = 191;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR(191),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GUEST_CONDUCTOR = 192;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_GUEST_CONDUCTOR(192),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN = 193;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN(193),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR = 194;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR(194),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_INITIAL_PRODUCER = 195;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_INITIAL_PRODUCER(195),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR = 196;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR(196),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER = 197;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER(197),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RIGGER = 198;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RIGGER(198),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN = 199;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN(199),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COLOR_SEPARATOR = 200;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COLOR_SEPARATOR(200),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REPETITEUR = 201;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_REPETITEUR(201),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER = 202;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER(202),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT = 203;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT(203),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MIXER = 204;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MIXER(204),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BINDING_DESIGNER = 205;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_BINDING_DESIGNER(205),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DELINEATOR = 206;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DELINEATOR(206),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ENCODER = 207;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ENCODER(207),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER = 208;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER(208),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MANUFACTURER = 209;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MANUFACTURER(209),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RECORDING_ENGINEER = 210;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RECORDING_ENGINEER(210),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER = 211;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER(211),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FACSIMILIST = 212;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FACSIMILIST(212),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_KEY_TALENT = 213;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_KEY_TALENT(213),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CLUB_D_J = 214;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CLUB_D_J(214),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COVER_DESIGNER = 215;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_COVER_DESIGNER(215),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER = 216;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER(216),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRACKING_ENGINEER = 217;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TRACKING_ENGINEER(217),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PERFORMER = 218;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PERFORMER(218),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SET_DESIGNER = 219;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SET_DESIGNER(219),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER = 220;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER(220),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER = 221;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER(221),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ILLUSTRATOR = 222;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ILLUSTRATOR(222),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_NEWS_READER = 223;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_NEWS_READER(223),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DUBBER = 224;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DUBBER(224),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ENSEMBLE = 225;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ENSEMBLE(225),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER = 226;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER(226),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FOLEY_EDITOR = 227;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FOLEY_EDITOR(227),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MATTE_ARTIST = 228;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MATTE_ARTIST(228),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSIC_DIRECTOR = 229;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MUSIC_DIRECTOR(229),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RUNNER = 230;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RUNNER(230),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROPERTY_MANAGER = 231;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_PROPERTY_MANAGER(231),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHOIR_MEMBER = 232;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CHOIR_MEMBER(232),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANIMAL_TRAINER = 233;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ANIMAL_TRAINER(233),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FOLEY_MIXER = 234;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FOLEY_MIXER(234),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER = 235;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER(235),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DESIGNER = 236;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_DESIGNER(236),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_PRODUCER = 237;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FILM_PRODUCER(237),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MASTERING_ENGINEER = 238;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_MASTERING_ENGINEER(238),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SUPPORTING_ACTOR = 239;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SUPPORTING_ACTOR(239),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GREENSMAN = 240;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_GREENSMAN(240),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR = 241;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR(241),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR = 242;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR(242),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FOCUS_PULLER = 243;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FOCUS_PULLER(243),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REMIXER = 244;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_REMIXER(244),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD = 245;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD(245),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOUND_RECORDIST = 246;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SOUND_RECORDIST(246),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STRINGS_DIRECTOR = 247;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STRINGS_DIRECTOR(247),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VISION_MIXER = 248;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VISION_MIXER(248),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER = 249;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER(249),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR = 250;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR(250),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STAGE_ENGINEER = 251;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STAGE_ENGINEER(251),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUDIO_MUSICIAN = 252;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_STUDIO_MUSICIAN(252),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCALIST = 253;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_VOCALIST(253),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FOLEY_ARTIST = 254;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FOLEY_ARTIST(254),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY = 255;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY(255),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR = 256;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR(256),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FLOOR_MANAGER = 257;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_FLOOR_MANAGER(257),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ARTIST = 258;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ARTIST(258),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER = 259;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER(259),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CENSOR = 260;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_CENSOR(260),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_NARRATOR = 261;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_NARRATOR(261),
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER = 262;</code>
     */
    RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER(262),
    ;

    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARTIST = 0;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VALUE = 0;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER = 1;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER_VALUE = 1;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWED_GUEST = 2;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWED_GUEST_VALUE = 2;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER = 3;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER_VALUE = 3;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ART_COPYIST = 4;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ART_COPYIST_VALUE = 4;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SERIES_PRODUCER = 5;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SERIES_PRODUCER_VALUE = 5;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION = 6;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_VALUE = 6;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER = 7;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER_VALUE = 7;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER = 8;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER_VALUE = 8;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TAPE_OPERATOR = 9;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TAPE_OPERATOR_VALUE = 9;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER = 10;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER_VALUE = 10;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANNOUNCER = 11;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ANNOUNCER_VALUE = 11;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PUPPETEER = 12;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PUPPETEER_VALUE = 12;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_UNKNOWN = 13;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_UNKNOWN_VALUE = 13;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST = 14;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST_VALUE = 14;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSICIAN = 15;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MUSICIAN_VALUE = 15;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER = 16;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER_VALUE = 16;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ACTOR = 17;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ACTOR_VALUE = 17;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PAINTER = 18;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PAINTER_VALUE = 18;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STORY_TELLER = 19;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STORY_TELLER_VALUE = 19;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_USER_DEFINED = 20;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_USER_DEFINED_VALUE = 20;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR = 21;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR_VALUE = 21;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR = 22;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR_VALUE = 22;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA = 23;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA_VALUE = 23;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER = 24;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER_VALUE = 24;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_PRODUCER = 25;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VOCAL_PRODUCER_VALUE = 25;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SCENIC_OPERATIVE = 26;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SCENIC_OPERATIVE_VALUE = 26;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMER = 27;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMER_VALUE = 27;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PRODUCER = 28;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PRODUCER_VALUE = 28;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STAGE_DIRECTOR = 29;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STAGE_DIRECTOR_VALUE = 29;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TYPE_DESIGNER = 30;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TYPE_DESIGNER_VALUE = 30;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GROUP_MEMBER = 31;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_GROUP_MEMBER_VALUE = 31;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EDITOR = 32;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EDITOR_VALUE = 32;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ARRANGER = 33;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ARRANGER_VALUE = 33;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR = 34;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR_VALUE = 34;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_DIRECTOR = 35;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FILM_DIRECTOR_VALUE = 35;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CLAPPER_LOADER = 36;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CLAPPER_LOADER_VALUE = 36;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REMIXING_ENGINEER = 37;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_REMIXING_ENGINEER_VALUE = 37;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER = 38;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER_VALUE = 38;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER = 39;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER_VALUE = 39;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_HAIRDRESSER = 40;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_HAIRDRESSER_VALUE = 40;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER = 41;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER_VALUE = 41;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COSTUME_DESIGNER = 42;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COSTUME_DESIGNER_VALUE = 42;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT = 43;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT_VALUE = 43;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SPEAKER = 44;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SPEAKER_VALUE = 44;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LOCATION_MANAGER = 45;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_LOCATION_MANAGER_VALUE = 45;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CALLIGRAPHER = 46;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CALLIGRAPHER_VALUE = 46;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER = 47;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER_VALUE = 47;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT = 48;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT_VALUE = 48;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER = 49;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER_VALUE = 49;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LEADMAN = 50;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_LEADMAN_VALUE = 50;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ENGINEER = 51;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ENGINEER_VALUE = 51;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT = 52;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT_VALUE = 52;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DRESSER = 53;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DRESSER_VALUE = 53;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BALANCE_ENGINEER = 54;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BALANCE_ENGINEER_VALUE = 54;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CORRESPONDENT = 55;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CORRESPONDENT_VALUE = 55;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONSULTANT = 56;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CONSULTANT_VALUE = 56;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSIC_GROUP = 57;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MUSIC_GROUP_VALUE = 57;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR = 58;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR_VALUE = 58;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER = 59;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER_VALUE = 59;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL = 60;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL_VALUE = 60;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER = 61;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER_VALUE = 61;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER = 62;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER_VALUE = 62;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RESTAGER = 63;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RESTAGER_VALUE = 63;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_D_J = 64;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_D_J_VALUE = 64;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST = 65;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST_VALUE = 65;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CIRCUS_ARTIST = 66;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CIRCUS_ARTIST_VALUE = 66;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER = 67;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER_VALUE = 67;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR = 68;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR_VALUE = 68;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_COACH = 69;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_COACH_VALUE = 69;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FIGHT_DIRECTOR = 70;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FIGHT_DIRECTOR_VALUE = 70;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANCHOR_PERSON = 71;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ANCHOR_PERSON_VALUE = 71;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMPILATION_PRODUCER = 72;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COMPILATION_PRODUCER_VALUE = 72;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONTRACTOR = 73;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CONTRACTOR_VALUE = 73;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER = 74;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER_VALUE = 74;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ORIGINAL_ARTIST = 75;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ORIGINAL_ARTIST_VALUE = 75;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR = 76;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR_VALUE = 76;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ART_DIRECTOR = 77;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ART_DIRECTOR_VALUE = 77;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_KEY_GRIP = 78;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_KEY_GRIP_VALUE = 78;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER = 79;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER_VALUE = 79;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR = 80;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR_VALUE = 80;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ACCOMPANYIST = 81;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ACCOMPANYIST_VALUE = 81;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY = 82;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY_VALUE = 82;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DANCER = 83;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DANCER_VALUE = 83;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_EDITOR = 84;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FILM_EDITOR_VALUE = 84;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STRING_PRODUCER = 85;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STRING_PRODUCER_VALUE = 85;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANNOTATOR = 86;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ANNOTATOR_VALUE = 86;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWER = 87;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWER_VALUE = 87;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHER = 88;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHER_VALUE = 88;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER = 89;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER_VALUE = 89;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONDUCTOR = 90;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CONDUCTOR_VALUE = 90;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER = 91;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER_VALUE = 91;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REISSUE_PRODUCER = 92;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_REISSUE_PRODUCER_VALUE = 92;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CARPENTER = 93;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CARPENTER_VALUE = 93;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LEAD_PERFORMER = 94;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_LEAD_PERFORMER_VALUE = 94;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_POST_PRODUCER = 95;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_POST_PRODUCER_VALUE = 95;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHOREOGRAPHER = 96;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CHOREOGRAPHER_VALUE = 96;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMMENTATOR = 97;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COMMENTATOR_VALUE = 97;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER = 98;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER_VALUE = 98;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER = 99;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER_VALUE = 99;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_MIXER = 100;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CO_MIXER_VALUE = 100;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EXPERT = 101;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_EXPERT_VALUE = 101;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CAUSEUR = 102;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CAUSEUR_VALUE = 102;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHORUS_MASTER = 103;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CHORUS_MASTER_VALUE = 103;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER = 104;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER_VALUE = 104;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT = 105;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT_VALUE = 105;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SET_DRESSER = 106;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SET_DRESSER_VALUE = 106;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER = 107;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER_VALUE = 107;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHOIR = 108;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CHOIR_VALUE = 108;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ENGINEER = 109;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ENGINEER_VALUE = 109;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_PRODUCER = 110;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CO_PRODUCER_VALUE = 110;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BOOK_PRODUCER = 111;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BOOK_PRODUCER_VALUE = 111;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RESEARCHER = 112;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RESEARCHER_VALUE = 112;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOUND_DESIGNER = 113;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SOUND_DESIGNER_VALUE = 113;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN = 114;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN_VALUE = 114;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSIC_ARRANGER = 115;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MUSIC_ARRANGER_VALUE = 115;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOICE_ACTOR = 116;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VOICE_ACTOR_VALUE = 116;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR = 117;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR_VALUE = 117;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_WARDROBE = 118;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_WARDROBE_VALUE = 118;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN = 119;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN_VALUE = 119;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUNTS = 120;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STUNTS_VALUE = 120;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER = 121;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER_VALUE = 121;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_NEWS_PRODUCER = 122;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_NEWS_PRODUCER_VALUE = 122;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LEAD_VOCALIST = 123;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_LEAD_VOCALIST_VALUE = 123;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SPONSOR = 124;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SPONSOR_VALUE = 124;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY = 125;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY_VALUE = 125;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VIDEO_PRODUCER = 126;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VIDEO_PRODUCER_VALUE = 126;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR = 127;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR_VALUE = 127;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_AURAL_TRAINER = 128;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_AURAL_TRAINER_VALUE = 128;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CASTING_DIRECTOR = 129;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CASTING_DIRECTOR_VALUE = 129;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER = 130;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER_VALUE = 130;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER = 131;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER_VALUE = 131;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_CONDUCTOR = 132;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SECOND_CONDUCTOR_VALUE = 132;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EDITOR = 133;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_EDITOR_VALUE = 133;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_KEY_CHARACTER = 134;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_KEY_CHARACTER_VALUE = 134;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_MANAGER = 135;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_MANAGER_VALUE = 135;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REDACTOR = 136;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_REDACTOR_VALUE = 136;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CARTOONIST = 137;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CARTOONIST_VALUE = 137;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER = 138;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER_VALUE = 138;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONCERT_MASTER = 139;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CONCERT_MASTER_VALUE = 139;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PERSONNEL = 140;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PERSONNEL_VALUE = 140;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMEDIAN = 141;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COMEDIAN_VALUE = 141;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSIC_COPYIST = 142;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MUSIC_COPYIST_VALUE = 142;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COMPANY = 143;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COMPANY_VALUE = 143;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN = 144;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN_VALUE = 144;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PYROTECHNICIAN = 145;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PYROTECHNICIAN_VALUE = 145;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR = 146;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR_VALUE = 146;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER = 147;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER_VALUE = 147;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CONTINUITY_CHECKER = 148;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CONTINUITY_CHECKER_VALUE = 148;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOLOIST = 149;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SOLOIST_VALUE = 149;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER = 150;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER_VALUE = 150;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REMIXED_ARTIST = 151;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_REMIXED_ARTIST_VALUE = 151;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DIRECTOR = 152;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DIRECTOR_VALUE = 152;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF = 153;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF_VALUE = 153;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN = 154;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN_VALUE = 154;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOUND_SUPERVISOR = 155;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SOUND_SUPERVISOR_VALUE = 155;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR = 156;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR_VALUE = 156;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARMOURER = 157;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ARMOURER_VALUE = 157;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROJECT_ENGINEER = 158;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PROJECT_ENGINEER_VALUE = 158;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_NOT_SPECIFIED = 159;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_NOT_SPECIFIED_VALUE = 159;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOUND_MIXER = 160;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SOUND_MIXER_VALUE = 160;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_ENGINEER = 161;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SECOND_ENGINEER_VALUE = 161;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER = 162;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER_VALUE = 162;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CAMERA_OPERATOR = 163;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CAMERA_OPERATOR_VALUE = 163;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_ENGINEER = 164;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_ENGINEER_VALUE = 164;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VIDEOGRAPHER = 165;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VIDEOGRAPHER_VALUE = 165;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BAND_LEADER = 166;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BAND_LEADER_VALUE = 166;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_EDITOR = 167;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_EDITOR_VALUE = 167;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR = 168;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR_VALUE = 168;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_EDITOR = 169;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_EDITOR_VALUE = 169;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MIXING_ENGINEER = 170;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MIXING_ENGINEER_VALUE = 170;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER = 171;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER_VALUE = 171;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR = 172;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR_VALUE = 172;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BINDER = 173;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BINDER_VALUE = 173;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CO_DIRECTOR = 174;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CO_DIRECTOR_VALUE = 174;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GRIP = 175;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_GRIP_VALUE = 175;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BOOK_DESIGNER = 176;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BOOK_DESIGNER_VALUE = 176;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR = 177;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR_VALUE = 177;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CARTOGRAPHER = 178;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CARTOGRAPHER_VALUE = 178;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MAKE_UP_ARTIST = 179;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MAKE_UP_ARTIST_VALUE = 179;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PLAYBACK_SINGER = 180;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PLAYBACK_SINGER_VALUE = 180;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STRING_ENGINEER = 181;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STRING_ENGINEER_VALUE = 181;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DRAUGHTSMAN = 182;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DRAUGHTSMAN_VALUE = 182;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROGRAM_PRODUCER = 183;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PROGRAM_PRODUCER_VALUE = 183;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER = 184;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER_VALUE = 184;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VIDEO_DIRECTOR = 185;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VIDEO_DIRECTOR_VALUE = 185;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TONMEISTER = 186;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TONMEISTER_VALUE = 186;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR = 187;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR_VALUE = 187;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER = 188;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER_VALUE = 188;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER = 189;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER_VALUE = 189;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANIMATOR = 190;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ANIMATOR_VALUE = 190;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR = 191;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR_VALUE = 191;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GUEST_CONDUCTOR = 192;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_GUEST_CONDUCTOR_VALUE = 192;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN = 193;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN_VALUE = 193;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR = 194;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR_VALUE = 194;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_INITIAL_PRODUCER = 195;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_INITIAL_PRODUCER_VALUE = 195;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR = 196;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR_VALUE = 196;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER = 197;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER_VALUE = 197;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RIGGER = 198;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RIGGER_VALUE = 198;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN = 199;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN_VALUE = 199;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COLOR_SEPARATOR = 200;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COLOR_SEPARATOR_VALUE = 200;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REPETITEUR = 201;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_REPETITEUR_VALUE = 201;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER = 202;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER_VALUE = 202;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT = 203;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT_VALUE = 203;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MIXER = 204;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MIXER_VALUE = 204;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_BINDING_DESIGNER = 205;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_BINDING_DESIGNER_VALUE = 205;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DELINEATOR = 206;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DELINEATOR_VALUE = 206;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ENCODER = 207;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ENCODER_VALUE = 207;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER = 208;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER_VALUE = 208;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MANUFACTURER = 209;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MANUFACTURER_VALUE = 209;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RECORDING_ENGINEER = 210;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RECORDING_ENGINEER_VALUE = 210;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER = 211;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER_VALUE = 211;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FACSIMILIST = 212;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FACSIMILIST_VALUE = 212;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_KEY_TALENT = 213;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_KEY_TALENT_VALUE = 213;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CLUB_D_J = 214;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CLUB_D_J_VALUE = 214;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_COVER_DESIGNER = 215;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_COVER_DESIGNER_VALUE = 215;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER = 216;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER_VALUE = 216;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TRACKING_ENGINEER = 217;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TRACKING_ENGINEER_VALUE = 217;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PERFORMER = 218;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PERFORMER_VALUE = 218;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SET_DESIGNER = 219;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SET_DESIGNER_VALUE = 219;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER = 220;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER_VALUE = 220;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER = 221;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER_VALUE = 221;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ILLUSTRATOR = 222;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ILLUSTRATOR_VALUE = 222;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_NEWS_READER = 223;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_NEWS_READER_VALUE = 223;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DUBBER = 224;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DUBBER_VALUE = 224;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ENSEMBLE = 225;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ENSEMBLE_VALUE = 225;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER = 226;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER_VALUE = 226;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FOLEY_EDITOR = 227;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FOLEY_EDITOR_VALUE = 227;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MATTE_ARTIST = 228;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MATTE_ARTIST_VALUE = 228;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MUSIC_DIRECTOR = 229;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MUSIC_DIRECTOR_VALUE = 229;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RUNNER = 230;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RUNNER_VALUE = 230;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_PROPERTY_MANAGER = 231;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_PROPERTY_MANAGER_VALUE = 231;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CHOIR_MEMBER = 232;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CHOIR_MEMBER_VALUE = 232;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ANIMAL_TRAINER = 233;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ANIMAL_TRAINER_VALUE = 233;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FOLEY_MIXER = 234;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FOLEY_MIXER_VALUE = 234;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER = 235;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER_VALUE = 235;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_DESIGNER = 236;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_DESIGNER_VALUE = 236;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FILM_PRODUCER = 237;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FILM_PRODUCER_VALUE = 237;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_MASTERING_ENGINEER = 238;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_MASTERING_ENGINEER_VALUE = 238;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SUPPORTING_ACTOR = 239;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SUPPORTING_ACTOR_VALUE = 239;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GREENSMAN = 240;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_GREENSMAN_VALUE = 240;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR = 241;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR_VALUE = 241;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR = 242;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR_VALUE = 242;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FOCUS_PULLER = 243;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FOCUS_PULLER_VALUE = 243;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_REMIXER = 244;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_REMIXER_VALUE = 244;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD = 245;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD_VALUE = 245;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SOUND_RECORDIST = 246;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SOUND_RECORDIST_VALUE = 246;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STRINGS_DIRECTOR = 247;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STRINGS_DIRECTOR_VALUE = 247;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VISION_MIXER = 248;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VISION_MIXER_VALUE = 248;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER = 249;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER_VALUE = 249;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR = 250;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR_VALUE = 250;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STAGE_ENGINEER = 251;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STAGE_ENGINEER_VALUE = 251;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_STUDIO_MUSICIAN = 252;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_STUDIO_MUSICIAN_VALUE = 252;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_VOCALIST = 253;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_VOCALIST_VALUE = 253;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FOLEY_ARTIST = 254;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FOLEY_ARTIST_VALUE = 254;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY = 255;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY_VALUE = 255;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR = 256;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR_VALUE = 256;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_FLOOR_MANAGER = 257;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_FLOOR_MANAGER_VALUE = 257;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ARTIST = 258;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ARTIST_VALUE = 258;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER = 259;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER_VALUE = 259;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_CENSOR = 260;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_CENSOR_VALUE = 260;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_NARRATOR = 261;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_NARRATOR_VALUE = 261;
    /**
     * <code>RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER = 262;</code>
     */
    public static final int RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER_VALUE = 262;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceContributorRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResourceContributorRole forNumber(int value) {
      switch (value) {
        case 0: return RESOURCE_CONTRIBUTOR_ROLE_ARTIST;
        case 1: return RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER;
        case 2: return RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWED_GUEST;
        case 3: return RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PRODUCER;
        case 4: return RESOURCE_CONTRIBUTOR_ROLE_ART_COPYIST;
        case 5: return RESOURCE_CONTRIBUTOR_ROLE_SERIES_PRODUCER;
        case 6: return RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION;
        case 7: return RESOURCE_CONTRIBUTOR_ROLE_CO_EXECUTIVE_PRODUCER;
        case 8: return RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATED_PERFORMER;
        case 9: return RESOURCE_CONTRIBUTOR_ROLE_TAPE_OPERATOR;
        case 10: return RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_ENGINEER;
        case 11: return RESOURCE_CONTRIBUTOR_ROLE_ANNOUNCER;
        case 12: return RESOURCE_CONTRIBUTOR_ROLE_PUPPETEER;
        case 13: return RESOURCE_CONTRIBUTOR_ROLE_UNKNOWN;
        case 14: return RESOURCE_CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST;
        case 15: return RESOURCE_CONTRIBUTOR_ROLE_MUSICIAN;
        case 16: return RESOURCE_CONTRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER;
        case 17: return RESOURCE_CONTRIBUTOR_ROLE_ACTOR;
        case 18: return RESOURCE_CONTRIBUTOR_ROLE_PAINTER;
        case 19: return RESOURCE_CONTRIBUTOR_ROLE_STORY_TELLER;
        case 20: return RESOURCE_CONTRIBUTOR_ROLE_USER_DEFINED;
        case 21: return RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_DIRECTOR;
        case 22: return RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRECTOR;
        case 23: return RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA;
        case 24: return RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_PROGRAMMER;
        case 25: return RESOURCE_CONTRIBUTOR_ROLE_VOCAL_PRODUCER;
        case 26: return RESOURCE_CONTRIBUTOR_ROLE_SCENIC_OPERATIVE;
        case 27: return RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMER;
        case 28: return RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PRODUCER;
        case 29: return RESOURCE_CONTRIBUTOR_ROLE_STAGE_DIRECTOR;
        case 30: return RESOURCE_CONTRIBUTOR_ROLE_TYPE_DESIGNER;
        case 31: return RESOURCE_CONTRIBUTOR_ROLE_GROUP_MEMBER;
        case 32: return RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EDITOR;
        case 33: return RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ARRANGER;
        case 34: return RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CAMERA_OPERATOR;
        case 35: return RESOURCE_CONTRIBUTOR_ROLE_FILM_DIRECTOR;
        case 36: return RESOURCE_CONTRIBUTOR_ROLE_CLAPPER_LOADER;
        case 37: return RESOURCE_CONTRIBUTOR_ROLE_REMIXING_ENGINEER;
        case 38: return RESOURCE_CONTRIBUTOR_ROLE_BOOKPLATE_DESIGNER;
        case 39: return RESOURCE_CONTRIBUTOR_ROLE_TRACKING_SECOND_ENGINEER;
        case 40: return RESOURCE_CONTRIBUTOR_ROLE_HAIRDRESSER;
        case 41: return RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER;
        case 42: return RESOURCE_CONTRIBUTOR_ROLE_COSTUME_DESIGNER;
        case 43: return RESOURCE_CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_PRODUCT;
        case 44: return RESOURCE_CONTRIBUTOR_ROLE_SPEAKER;
        case 45: return RESOURCE_CONTRIBUTOR_ROLE_LOCATION_MANAGER;
        case 46: return RESOURCE_CONTRIBUTOR_ROLE_CALLIGRAPHER;
        case 47: return RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGINEER;
        case 48: return RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ASSISTANT;
        case 49: return RESOURCE_CONTRIBUTOR_ROLE_MIXING_SECOND_ENGINEER;
        case 50: return RESOURCE_CONTRIBUTOR_ROLE_LEADMAN;
        case 51: return RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ENGINEER;
        case 52: return RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT;
        case 53: return RESOURCE_CONTRIBUTOR_ROLE_DRESSER;
        case 54: return RESOURCE_CONTRIBUTOR_ROLE_BALANCE_ENGINEER;
        case 55: return RESOURCE_CONTRIBUTOR_ROLE_CORRESPONDENT;
        case 56: return RESOURCE_CONTRIBUTOR_ROLE_CONSULTANT;
        case 57: return RESOURCE_CONTRIBUTOR_ROLE_MUSIC_GROUP;
        case 58: return RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CONDUCTOR;
        case 59: return RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_SECOND_ENGINEER;
        case 60: return RESOURCE_CONTRIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL;
        case 61: return RESOURCE_CONTRIBUTOR_ROLE_SIGN_LANGUAGE_INTERPRETER;
        case 62: return RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER;
        case 63: return RESOURCE_CONTRIBUTOR_ROLE_RESTAGER;
        case 64: return RESOURCE_CONTRIBUTOR_ROLE_D_J;
        case 65: return RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_JOURNALIST;
        case 66: return RESOURCE_CONTRIBUTOR_ROLE_CIRCUS_ARTIST;
        case 67: return RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER;
        case 68: return RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR;
        case 69: return RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_COACH;
        case 70: return RESOURCE_CONTRIBUTOR_ROLE_FIGHT_DIRECTOR;
        case 71: return RESOURCE_CONTRIBUTOR_ROLE_ANCHOR_PERSON;
        case 72: return RESOURCE_CONTRIBUTOR_ROLE_COMPILATION_PRODUCER;
        case 73: return RESOURCE_CONTRIBUTOR_ROLE_CONTRACTOR;
        case 74: return RESOURCE_CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_ENGINEER;
        case 75: return RESOURCE_CONTRIBUTOR_ROLE_ORIGINAL_ARTIST;
        case 76: return RESOURCE_CONTRIBUTOR_ROLE_STUDIO_CONDUCTOR;
        case 77: return RESOURCE_CONTRIBUTOR_ROLE_ART_DIRECTOR;
        case 78: return RESOURCE_CONTRIBUTOR_ROLE_KEY_GRIP;
        case 79: return RESOURCE_CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGINEER;
        case 80: return RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_ADMINISTRATOR;
        case 81: return RESOURCE_CONTRIBUTOR_ROLE_ACCOMPANYIST;
        case 82: return RESOURCE_CONTRIBUTOR_ROLE_DISTRIBUTION_COMPANY;
        case 83: return RESOURCE_CONTRIBUTOR_ROLE_DANCER;
        case 84: return RESOURCE_CONTRIBUTOR_ROLE_FILM_EDITOR;
        case 85: return RESOURCE_CONTRIBUTOR_ROLE_STRING_PRODUCER;
        case 86: return RESOURCE_CONTRIBUTOR_ROLE_ANNOTATOR;
        case 87: return RESOURCE_CONTRIBUTOR_ROLE_INTERVIEWER;
        case 88: return RESOURCE_CONTRIBUTOR_ROLE_PHOTOGRAPHER;
        case 89: return RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_ENGINEER;
        case 90: return RESOURCE_CONTRIBUTOR_ROLE_CONDUCTOR;
        case 91: return RESOURCE_CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECOND_ENGINEER;
        case 92: return RESOURCE_CONTRIBUTOR_ROLE_REISSUE_PRODUCER;
        case 93: return RESOURCE_CONTRIBUTOR_ROLE_CARPENTER;
        case 94: return RESOURCE_CONTRIBUTOR_ROLE_LEAD_PERFORMER;
        case 95: return RESOURCE_CONTRIBUTOR_ROLE_POST_PRODUCER;
        case 96: return RESOURCE_CONTRIBUTOR_ROLE_CHOREOGRAPHER;
        case 97: return RESOURCE_CONTRIBUTOR_ROLE_COMMENTATOR;
        case 98: return RESOURCE_CONTRIBUTOR_ROLE_COMMISSIONING_BROADCASTER;
        case 99: return RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER;
        case 100: return RESOURCE_CONTRIBUTOR_ROLE_CO_MIXER;
        case 101: return RESOURCE_CONTRIBUTOR_ROLE_EXPERT;
        case 102: return RESOURCE_CONTRIBUTOR_ROLE_CAUSEUR;
        case 103: return RESOURCE_CONTRIBUTOR_ROLE_CHORUS_MASTER;
        case 104: return RESOURCE_CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER;
        case 105: return RESOURCE_CONTRIBUTOR_ROLE_BROADCAST_ASSISTANT;
        case 106: return RESOURCE_CONTRIBUTOR_ROLE_SET_DRESSER;
        case 107: return RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER;
        case 108: return RESOURCE_CONTRIBUTOR_ROLE_CHOIR;
        case 109: return RESOURCE_CONTRIBUTOR_ROLE_ENGINEER;
        case 110: return RESOURCE_CONTRIBUTOR_ROLE_CO_PRODUCER;
        case 111: return RESOURCE_CONTRIBUTOR_ROLE_BOOK_PRODUCER;
        case 112: return RESOURCE_CONTRIBUTOR_ROLE_RESEARCHER;
        case 113: return RESOURCE_CONTRIBUTOR_ROLE_SOUND_DESIGNER;
        case 114: return RESOURCE_CONTRIBUTOR_ROLE_SPECIAL_EFFECTS_TECHNICIAN;
        case 115: return RESOURCE_CONTRIBUTOR_ROLE_MUSIC_ARRANGER;
        case 116: return RESOURCE_CONTRIBUTOR_ROLE_VOICE_ACTOR;
        case 117: return RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COORDINATOR;
        case 118: return RESOURCE_CONTRIBUTOR_ROLE_WARDROBE;
        case 119: return RESOURCE_CONTRIBUTOR_ROLE_VISUAL_EFFECTS_TECHNICIAN;
        case 120: return RESOURCE_CONTRIBUTOR_ROLE_STUNTS;
        case 121: return RESOURCE_CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER;
        case 122: return RESOURCE_CONTRIBUTOR_ROLE_NEWS_PRODUCER;
        case 123: return RESOURCE_CONTRIBUTOR_ROLE_LEAD_VOCALIST;
        case 124: return RESOURCE_CONTRIBUTOR_ROLE_SPONSOR;
        case 125: return RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_SECRETARY;
        case 126: return RESOURCE_CONTRIBUTOR_ROLE_VIDEO_PRODUCER;
        case 127: return RESOURCE_CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR;
        case 128: return RESOURCE_CONTRIBUTOR_ROLE_AURAL_TRAINER;
        case 129: return RESOURCE_CONTRIBUTOR_ROLE_CASTING_DIRECTOR;
        case 130: return RESOURCE_CONTRIBUTOR_ROLE_EXECUTIVE_PRODUCER;
        case 131: return RESOURCE_CONTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER;
        case 132: return RESOURCE_CONTRIBUTOR_ROLE_SECOND_CONDUCTOR;
        case 133: return RESOURCE_CONTRIBUTOR_ROLE_EDITOR;
        case 134: return RESOURCE_CONTRIBUTOR_ROLE_KEY_CHARACTER;
        case 135: return RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_MANAGER;
        case 136: return RESOURCE_CONTRIBUTOR_ROLE_REDACTOR;
        case 137: return RESOURCE_CONTRIBUTOR_ROLE_CARTOONIST;
        case 138: return RESOURCE_CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER;
        case 139: return RESOURCE_CONTRIBUTOR_ROLE_CONCERT_MASTER;
        case 140: return RESOURCE_CONTRIBUTOR_ROLE_STUDIO_PERSONNEL;
        case 141: return RESOURCE_CONTRIBUTOR_ROLE_COMEDIAN;
        case 142: return RESOURCE_CONTRIBUTOR_ROLE_MUSIC_COPYIST;
        case 143: return RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_COMPANY;
        case 144: return RESOURCE_CONTRIBUTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN;
        case 145: return RESOURCE_CONTRIBUTOR_ROLE_PYROTECHNICIAN;
        case 146: return RESOURCE_CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR;
        case 147: return RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER;
        case 148: return RESOURCE_CONTRIBUTOR_ROLE_CONTINUITY_CHECKER;
        case 149: return RESOURCE_CONTRIBUTOR_ROLE_SOLOIST;
        case 150: return RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_ENGINEER;
        case 151: return RESOURCE_CONTRIBUTOR_ROLE_REMIXED_ARTIST;
        case 152: return RESOURCE_CONTRIBUTOR_ROLE_DIRECTOR;
        case 153: return RESOURCE_CONTRIBUTOR_ROLE_EDITOR_IN_CHIEF;
        case 154: return RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNICIAN;
        case 155: return RESOURCE_CONTRIBUTOR_ROLE_SOUND_SUPERVISOR;
        case 156: return RESOURCE_CONTRIBUTOR_ROLE_PUBLISHING_DIRECTOR;
        case 157: return RESOURCE_CONTRIBUTOR_ROLE_ARMOURER;
        case 158: return RESOURCE_CONTRIBUTOR_ROLE_PROJECT_ENGINEER;
        case 159: return RESOURCE_CONTRIBUTOR_ROLE_NOT_SPECIFIED;
        case 160: return RESOURCE_CONTRIBUTOR_ROLE_SOUND_MIXER;
        case 161: return RESOURCE_CONTRIBUTOR_ROLE_SECOND_ENGINEER;
        case 162: return RESOURCE_CONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_ENGINEER;
        case 163: return RESOURCE_CONTRIBUTOR_ROLE_CAMERA_OPERATOR;
        case 164: return RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_ENGINEER;
        case 165: return RESOURCE_CONTRIBUTOR_ROLE_VIDEOGRAPHER;
        case 166: return RESOURCE_CONTRIBUTOR_ROLE_BAND_LEADER;
        case 167: return RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_EDITOR;
        case 168: return RESOURCE_CONTRIBUTOR_ROLE_A_AND_R_COORDINATOR;
        case 169: return RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_EDITOR;
        case 170: return RESOURCE_CONTRIBUTOR_ROLE_MIXING_ENGINEER;
        case 171: return RESOURCE_CONTRIBUTOR_ROLE_ASSOCIATE_PRODUCER;
        case 172: return RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERATOR;
        case 173: return RESOURCE_CONTRIBUTOR_ROLE_BINDER;
        case 174: return RESOURCE_CONTRIBUTOR_ROLE_CO_DIRECTOR;
        case 175: return RESOURCE_CONTRIBUTOR_ROLE_GRIP;
        case 176: return RESOURCE_CONTRIBUTOR_ROLE_BOOK_DESIGNER;
        case 177: return RESOURCE_CONTRIBUTOR_ROLE_COMPUTER_GRAPHIC_CREATOR;
        case 178: return RESOURCE_CONTRIBUTOR_ROLE_CARTOGRAPHER;
        case 179: return RESOURCE_CONTRIBUTOR_ROLE_MAKE_UP_ARTIST;
        case 180: return RESOURCE_CONTRIBUTOR_ROLE_PLAYBACK_SINGER;
        case 181: return RESOURCE_CONTRIBUTOR_ROLE_STRING_ENGINEER;
        case 182: return RESOURCE_CONTRIBUTOR_ROLE_DRAUGHTSMAN;
        case 183: return RESOURCE_CONTRIBUTOR_ROLE_PROGRAM_PRODUCER;
        case 184: return RESOURCE_CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGINEER;
        case 185: return RESOURCE_CONTRIBUTOR_ROLE_VIDEO_DIRECTOR;
        case 186: return RESOURCE_CONTRIBUTOR_ROLE_TONMEISTER;
        case 187: return RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_VISUAL_EDITOR;
        case 188: return RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_ENGINEER;
        case 189: return RESOURCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFETIES_ENGINEER;
        case 190: return RESOURCE_CONTRIBUTOR_ROLE_ANIMATOR;
        case 191: return RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR;
        case 192: return RESOURCE_CONTRIBUTOR_ROLE_GUEST_CONDUCTOR;
        case 193: return RESOURCE_CONTRIBUTOR_ROLE_LIGHTING_TECHNICIAN;
        case 194: return RESOURCE_CONTRIBUTOR_ROLE_FILM_DISTRIBUTOR;
        case 195: return RESOURCE_CONTRIBUTOR_ROLE_INITIAL_PRODUCER;
        case 196: return RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_TRANSLATOR;
        case 197: return RESOURCE_CONTRIBUTOR_ROLE_ARTIST_VOCAL_ENGINEER;
        case 198: return RESOURCE_CONTRIBUTOR_ROLE_RIGGER;
        case 199: return RESOURCE_CONTRIBUTOR_ROLE_PRIMARY_MUSICIAN;
        case 200: return RESOURCE_CONTRIBUTOR_ROLE_COLOR_SEPARATOR;
        case 201: return RESOURCE_CONTRIBUTOR_ROLE_REPETITEUR;
        case 202: return RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER;
        case 203: return RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_ASSISTANT;
        case 204: return RESOURCE_CONTRIBUTOR_ROLE_MIXER;
        case 205: return RESOURCE_CONTRIBUTOR_ROLE_BINDING_DESIGNER;
        case 206: return RESOURCE_CONTRIBUTOR_ROLE_DELINEATOR;
        case 207: return RESOURCE_CONTRIBUTOR_ROLE_ENCODER;
        case 208: return RESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_SECOND_ENGINEER;
        case 209: return RESOURCE_CONTRIBUTOR_ROLE_MANUFACTURER;
        case 210: return RESOURCE_CONTRIBUTOR_ROLE_RECORDING_ENGINEER;
        case 211: return RESOURCE_CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGINEER;
        case 212: return RESOURCE_CONTRIBUTOR_ROLE_FACSIMILIST;
        case 213: return RESOURCE_CONTRIBUTOR_ROLE_KEY_TALENT;
        case 214: return RESOURCE_CONTRIBUTOR_ROLE_CLUB_D_J;
        case 215: return RESOURCE_CONTRIBUTOR_ROLE_COVER_DESIGNER;
        case 216: return RESOURCE_CONTRIBUTOR_ROLE_FILM_SOUND_ENGINEER;
        case 217: return RESOURCE_CONTRIBUTOR_ROLE_TRACKING_ENGINEER;
        case 218: return RESOURCE_CONTRIBUTOR_ROLE_PERFORMER;
        case 219: return RESOURCE_CONTRIBUTOR_ROLE_SET_DESIGNER;
        case 220: return RESOURCE_CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER;
        case 221: return RESOURCE_CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER;
        case 222: return RESOURCE_CONTRIBUTOR_ROLE_ILLUSTRATOR;
        case 223: return RESOURCE_CONTRIBUTOR_ROLE_NEWS_READER;
        case 224: return RESOURCE_CONTRIBUTOR_ROLE_DUBBER;
        case 225: return RESOURCE_CONTRIBUTOR_ROLE_ENSEMBLE;
        case 226: return RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT_PRODUCER;
        case 227: return RESOURCE_CONTRIBUTOR_ROLE_FOLEY_EDITOR;
        case 228: return RESOURCE_CONTRIBUTOR_ROLE_MATTE_ARTIST;
        case 229: return RESOURCE_CONTRIBUTOR_ROLE_MUSIC_DIRECTOR;
        case 230: return RESOURCE_CONTRIBUTOR_ROLE_RUNNER;
        case 231: return RESOURCE_CONTRIBUTOR_ROLE_PROPERTY_MANAGER;
        case 232: return RESOURCE_CONTRIBUTOR_ROLE_CHOIR_MEMBER;
        case 233: return RESOURCE_CONTRIBUTOR_ROLE_ANIMAL_TRAINER;
        case 234: return RESOURCE_CONTRIBUTOR_ROLE_FOLEY_MIXER;
        case 235: return RESOURCE_CONTRIBUTOR_ROLE_MASTERING_SECOND_ENGINEER;
        case 236: return RESOURCE_CONTRIBUTOR_ROLE_DESIGNER;
        case 237: return RESOURCE_CONTRIBUTOR_ROLE_FILM_PRODUCER;
        case 238: return RESOURCE_CONTRIBUTOR_ROLE_MASTERING_ENGINEER;
        case 239: return RESOURCE_CONTRIBUTOR_ROLE_SUPPORTING_ACTOR;
        case 240: return RESOURCE_CONTRIBUTOR_ROLE_GREENSMAN;
        case 241: return RESOURCE_CONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR;
        case 242: return RESOURCE_CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECTOR;
        case 243: return RESOURCE_CONTRIBUTOR_ROLE_FOCUS_PULLER;
        case 244: return RESOURCE_CONTRIBUTOR_ROLE_REMIXER;
        case 245: return RESOURCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_HEAD;
        case 246: return RESOURCE_CONTRIBUTOR_ROLE_SOUND_RECORDIST;
        case 247: return RESOURCE_CONTRIBUTOR_ROLE_STRINGS_DIRECTOR;
        case 248: return RESOURCE_CONTRIBUTOR_ROLE_VISION_MIXER;
        case 249: return RESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING_ENGINEER;
        case 250: return RESOURCE_CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR;
        case 251: return RESOURCE_CONTRIBUTOR_ROLE_STAGE_ENGINEER;
        case 252: return RESOURCE_CONTRIBUTOR_ROLE_STUDIO_MUSICIAN;
        case 253: return RESOURCE_CONTRIBUTOR_ROLE_VOCALIST;
        case 254: return RESOURCE_CONTRIBUTOR_ROLE_FOLEY_ARTIST;
        case 255: return RESOURCE_CONTRIBUTOR_ROLE_EDITOR_OF_THE_DAY;
        case 256: return RESOURCE_CONTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR;
        case 257: return RESOURCE_CONTRIBUTOR_ROLE_FLOOR_MANAGER;
        case 258: return RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC_ARTIST;
        case 259: return RESOURCE_CONTRIBUTOR_ROLE_OVERDUB_SECOND_ENGINEER;
        case 260: return RESOURCE_CONTRIBUTOR_ROLE_CENSOR;
        case 261: return RESOURCE_CONTRIBUTOR_ROLE_NARRATOR;
        case 262: return RESOURCE_CONTRIBUTOR_ROLE_ADDITIONAL_PERFORMER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceContributorRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceContributorRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceContributorRole>() {
            public ResourceContributorRole findValueByNumber(int number) {
              return ResourceContributorRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(138);
    }

    private static final ResourceContributorRole[] VALUES = values();

    public static ResourceContributorRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceContributorRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ResourceContributorRole)
  }

  /**
   * Protobuf enum {@code avs.ResourceGroupType}
   */
  public enum ResourceGroupType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESOURCE_GROUP_TYPE_SIDE = 0;</code>
     */
    RESOURCE_GROUP_TYPE_SIDE(0),
    /**
     * <code>RESOURCE_GROUP_TYPE_MULTI_WORK_PART = 1;</code>
     */
    RESOURCE_GROUP_TYPE_MULTI_WORK_PART(1),
    /**
     * <code>RESOURCE_GROUP_TYPE_RELEASE_COMPONENT = 2;</code>
     */
    RESOURCE_GROUP_TYPE_RELEASE_COMPONENT(2),
    /**
     * <code>RESOURCE_GROUP_TYPE_COMPONENT_RELEASE = 3;</code>
     */
    RESOURCE_GROUP_TYPE_COMPONENT_RELEASE(3),
    /**
     * <code>RESOURCE_GROUP_TYPE_COMPONENT = 4;</code>
     */
    RESOURCE_GROUP_TYPE_COMPONENT(4),
    ;

    /**
     * <code>RESOURCE_GROUP_TYPE_SIDE = 0;</code>
     */
    public static final int RESOURCE_GROUP_TYPE_SIDE_VALUE = 0;
    /**
     * <code>RESOURCE_GROUP_TYPE_MULTI_WORK_PART = 1;</code>
     */
    public static final int RESOURCE_GROUP_TYPE_MULTI_WORK_PART_VALUE = 1;
    /**
     * <code>RESOURCE_GROUP_TYPE_RELEASE_COMPONENT = 2;</code>
     */
    public static final int RESOURCE_GROUP_TYPE_RELEASE_COMPONENT_VALUE = 2;
    /**
     * <code>RESOURCE_GROUP_TYPE_COMPONENT_RELEASE = 3;</code>
     */
    public static final int RESOURCE_GROUP_TYPE_COMPONENT_RELEASE_VALUE = 3;
    /**
     * <code>RESOURCE_GROUP_TYPE_COMPONENT = 4;</code>
     */
    public static final int RESOURCE_GROUP_TYPE_COMPONENT_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceGroupType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResourceGroupType forNumber(int value) {
      switch (value) {
        case 0: return RESOURCE_GROUP_TYPE_SIDE;
        case 1: return RESOURCE_GROUP_TYPE_MULTI_WORK_PART;
        case 2: return RESOURCE_GROUP_TYPE_RELEASE_COMPONENT;
        case 3: return RESOURCE_GROUP_TYPE_COMPONENT_RELEASE;
        case 4: return RESOURCE_GROUP_TYPE_COMPONENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceGroupType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceGroupType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceGroupType>() {
            public ResourceGroupType findValueByNumber(int number) {
              return ResourceGroupType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(139);
    }

    private static final ResourceGroupType[] VALUES = values();

    public static ResourceGroupType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceGroupType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ResourceGroupType)
  }

  /**
   * Protobuf enum {@code avs.ResourceRelationshipType}
   */
  public enum ResourceRelationshipType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_CONTAINS_SAMPLES_FROM = 0;</code>
     */
    RESOURCE_RELATIONSHIP_TYPE_CONTAINS_SAMPLES_FROM(0),
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_COVER_OF = 1;</code>
     */
    RESOURCE_RELATIONSHIP_TYPE_IS_COVER_OF(1),
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_PART_OF = 2;</code>
     */
    RESOURCE_RELATIONSHIP_TYPE_IS_PART_OF(2),
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_SAMPLED_BY = 3;</code>
     */
    RESOURCE_RELATIONSHIP_TYPE_IS_SAMPLED_BY(3),
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING = 4;</code>
     */
    RESOURCE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING(4),
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_USER_DEFINED = 5;</code>
     */
    RESOURCE_RELATIONSHIP_TYPE_USER_DEFINED(5),
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM = 6;</code>
     */
    RESOURCE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM(6),
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_COVERED_BY = 7;</code>
     */
    RESOURCE_RELATIONSHIP_TYPE_IS_COVERED_BY(7),
    ;

    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_CONTAINS_SAMPLES_FROM = 0;</code>
     */
    public static final int RESOURCE_RELATIONSHIP_TYPE_CONTAINS_SAMPLES_FROM_VALUE = 0;
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_COVER_OF = 1;</code>
     */
    public static final int RESOURCE_RELATIONSHIP_TYPE_IS_COVER_OF_VALUE = 1;
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_PART_OF = 2;</code>
     */
    public static final int RESOURCE_RELATIONSHIP_TYPE_IS_PART_OF_VALUE = 2;
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_SAMPLED_BY = 3;</code>
     */
    public static final int RESOURCE_RELATIONSHIP_TYPE_IS_SAMPLED_BY_VALUE = 3;
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING = 4;</code>
     */
    public static final int RESOURCE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING_VALUE = 4;
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_USER_DEFINED = 5;</code>
     */
    public static final int RESOURCE_RELATIONSHIP_TYPE_USER_DEFINED_VALUE = 5;
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM = 6;</code>
     */
    public static final int RESOURCE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM_VALUE = 6;
    /**
     * <code>RESOURCE_RELATIONSHIP_TYPE_IS_COVERED_BY = 7;</code>
     */
    public static final int RESOURCE_RELATIONSHIP_TYPE_IS_COVERED_BY_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceRelationshipType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResourceRelationshipType forNumber(int value) {
      switch (value) {
        case 0: return RESOURCE_RELATIONSHIP_TYPE_CONTAINS_SAMPLES_FROM;
        case 1: return RESOURCE_RELATIONSHIP_TYPE_IS_COVER_OF;
        case 2: return RESOURCE_RELATIONSHIP_TYPE_IS_PART_OF;
        case 3: return RESOURCE_RELATIONSHIP_TYPE_IS_SAMPLED_BY;
        case 4: return RESOURCE_RELATIONSHIP_TYPE_IS_DIFFERENT_ENCODING;
        case 5: return RESOURCE_RELATIONSHIP_TYPE_USER_DEFINED;
        case 6: return RESOURCE_RELATIONSHIP_TYPE_HAS_CONTENT_FROM;
        case 7: return RESOURCE_RELATIONSHIP_TYPE_IS_COVERED_BY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceRelationshipType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceRelationshipType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceRelationshipType>() {
            public ResourceRelationshipType findValueByNumber(int number) {
              return ResourceRelationshipType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(140);
    }

    private static final ResourceRelationshipType[] VALUES = values();

    public static ResourceRelationshipType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceRelationshipType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ResourceRelationshipType)
  }

  /**
   * Protobuf enum {@code avs.ResourceType}
   */
  public enum ResourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESOURCE_TYPE_USER_DEFINED_RESOURCE = 0;</code>
     */
    RESOURCE_TYPE_USER_DEFINED_RESOURCE(0),
    /**
     * <code>RESOURCE_TYPE_M_I_D_I = 1;</code>
     */
    RESOURCE_TYPE_M_I_D_I(1),
    /**
     * <code>RESOURCE_TYPE_VIDEO = 2;</code>
     */
    RESOURCE_TYPE_VIDEO(2),
    /**
     * <code>RESOURCE_TYPE_SHEET_MUSIC = 3;</code>
     */
    RESOURCE_TYPE_SHEET_MUSIC(3),
    /**
     * <code>RESOURCE_TYPE_SOFTWARE = 4;</code>
     */
    RESOURCE_TYPE_SOFTWARE(4),
    /**
     * <code>RESOURCE_TYPE_SOUND_RECORDING = 5;</code>
     */
    RESOURCE_TYPE_SOUND_RECORDING(5),
    /**
     * <code>RESOURCE_TYPE_TEXT = 6;</code>
     */
    RESOURCE_TYPE_TEXT(6),
    /**
     * <code>RESOURCE_TYPE_IMAGE = 7;</code>
     */
    RESOURCE_TYPE_IMAGE(7),
    ;

    /**
     * <code>RESOURCE_TYPE_USER_DEFINED_RESOURCE = 0;</code>
     */
    public static final int RESOURCE_TYPE_USER_DEFINED_RESOURCE_VALUE = 0;
    /**
     * <code>RESOURCE_TYPE_M_I_D_I = 1;</code>
     */
    public static final int RESOURCE_TYPE_M_I_D_I_VALUE = 1;
    /**
     * <code>RESOURCE_TYPE_VIDEO = 2;</code>
     */
    public static final int RESOURCE_TYPE_VIDEO_VALUE = 2;
    /**
     * <code>RESOURCE_TYPE_SHEET_MUSIC = 3;</code>
     */
    public static final int RESOURCE_TYPE_SHEET_MUSIC_VALUE = 3;
    /**
     * <code>RESOURCE_TYPE_SOFTWARE = 4;</code>
     */
    public static final int RESOURCE_TYPE_SOFTWARE_VALUE = 4;
    /**
     * <code>RESOURCE_TYPE_SOUND_RECORDING = 5;</code>
     */
    public static final int RESOURCE_TYPE_SOUND_RECORDING_VALUE = 5;
    /**
     * <code>RESOURCE_TYPE_TEXT = 6;</code>
     */
    public static final int RESOURCE_TYPE_TEXT_VALUE = 6;
    /**
     * <code>RESOURCE_TYPE_IMAGE = 7;</code>
     */
    public static final int RESOURCE_TYPE_IMAGE_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResourceType forNumber(int value) {
      switch (value) {
        case 0: return RESOURCE_TYPE_USER_DEFINED_RESOURCE;
        case 1: return RESOURCE_TYPE_M_I_D_I;
        case 2: return RESOURCE_TYPE_VIDEO;
        case 3: return RESOURCE_TYPE_SHEET_MUSIC;
        case 4: return RESOURCE_TYPE_SOFTWARE;
        case 5: return RESOURCE_TYPE_SOUND_RECORDING;
        case 6: return RESOURCE_TYPE_TEXT;
        case 7: return RESOURCE_TYPE_IMAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceType>() {
            public ResourceType findValueByNumber(int number) {
              return ResourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(141);
    }

    private static final ResourceType[] VALUES = values();

    public static ResourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ResourceType)
  }

  /**
   * Protobuf enum {@code avs.ResourceType_MCNOTIF}
   */
  public enum ResourceType_MCNOTIF
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESOURCE_TYPE__M_C_N_O_T_I_F_VIDEO = 0;</code>
     */
    RESOURCE_TYPE__M_C_N_O_T_I_F_VIDEO(0),
    /**
     * <code>RESOURCE_TYPE__M_C_N_O_T_I_F_SHEET_MUSIC = 1;</code>
     */
    RESOURCE_TYPE__M_C_N_O_T_I_F_SHEET_MUSIC(1),
    /**
     * <code>RESOURCE_TYPE__M_C_N_O_T_I_F_SOUND_RECORDING = 2;</code>
     */
    RESOURCE_TYPE__M_C_N_O_T_I_F_SOUND_RECORDING(2),
    ;

    /**
     * <code>RESOURCE_TYPE__M_C_N_O_T_I_F_VIDEO = 0;</code>
     */
    public static final int RESOURCE_TYPE__M_C_N_O_T_I_F_VIDEO_VALUE = 0;
    /**
     * <code>RESOURCE_TYPE__M_C_N_O_T_I_F_SHEET_MUSIC = 1;</code>
     */
    public static final int RESOURCE_TYPE__M_C_N_O_T_I_F_SHEET_MUSIC_VALUE = 1;
    /**
     * <code>RESOURCE_TYPE__M_C_N_O_T_I_F_SOUND_RECORDING = 2;</code>
     */
    public static final int RESOURCE_TYPE__M_C_N_O_T_I_F_SOUND_RECORDING_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceType_MCNOTIF valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResourceType_MCNOTIF forNumber(int value) {
      switch (value) {
        case 0: return RESOURCE_TYPE__M_C_N_O_T_I_F_VIDEO;
        case 1: return RESOURCE_TYPE__M_C_N_O_T_I_F_SHEET_MUSIC;
        case 2: return RESOURCE_TYPE__M_C_N_O_T_I_F_SOUND_RECORDING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceType_MCNOTIF>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceType_MCNOTIF> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceType_MCNOTIF>() {
            public ResourceType_MCNOTIF findValueByNumber(int number) {
              return ResourceType_MCNOTIF.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(142);
    }

    private static final ResourceType_MCNOTIF[] VALUES = values();

    public static ResourceType_MCNOTIF valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceType_MCNOTIF(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ResourceType_MCNOTIF)
  }

  /**
   * Protobuf enum {@code avs.ResourceType_RDRR}
   */
  public enum ResourceType_RDRR
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESOURCE_TYPE__R_D_R_R_VIDEO = 0;</code>
     */
    RESOURCE_TYPE__R_D_R_R_VIDEO(0),
    /**
     * <code>RESOURCE_TYPE__R_D_R_R_SOUND_RECORDING = 1;</code>
     */
    RESOURCE_TYPE__R_D_R_R_SOUND_RECORDING(1),
    ;

    /**
     * <code>RESOURCE_TYPE__R_D_R_R_VIDEO = 0;</code>
     */
    public static final int RESOURCE_TYPE__R_D_R_R_VIDEO_VALUE = 0;
    /**
     * <code>RESOURCE_TYPE__R_D_R_R_SOUND_RECORDING = 1;</code>
     */
    public static final int RESOURCE_TYPE__R_D_R_R_SOUND_RECORDING_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceType_RDRR valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResourceType_RDRR forNumber(int value) {
      switch (value) {
        case 0: return RESOURCE_TYPE__R_D_R_R_VIDEO;
        case 1: return RESOURCE_TYPE__R_D_R_R_SOUND_RECORDING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceType_RDRR>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceType_RDRR> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceType_RDRR>() {
            public ResourceType_RDRR findValueByNumber(int number) {
              return ResourceType_RDRR.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(143);
    }

    private static final ResourceType_RDRR[] VALUES = values();

    public static ResourceType_RDRR valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceType_RDRR(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ResourceType_RDRR)
  }

  /**
   * Protobuf enum {@code avs.ResourceWorkRelationshipType}
   */
  public enum ResourceWorkRelationshipType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_MUSICAL_WORK_WITH_SAMPLES = 0;</code>
     */
    RESOURCE_WORK_RELATIONSHIP_TYPE_MUSICAL_WORK_WITH_SAMPLES(0),
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_MEDLEY = 1;</code>
     */
    RESOURCE_WORK_RELATIONSHIP_TYPE_MEDLEY(1),
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_SINGLE_WORK_RESOURCE = 2;</code>
     */
    RESOURCE_WORK_RELATIONSHIP_TYPE_SINGLE_WORK_RESOURCE(2),
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_MULTIPLE_WORK_RESOURCE = 3;</code>
     */
    RESOURCE_WORK_RELATIONSHIP_TYPE_MULTIPLE_WORK_RESOURCE(3),
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_INTERPELLATION = 4;</code>
     */
    RESOURCE_WORK_RELATIONSHIP_TYPE_INTERPELLATION(4),
    ;

    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_MUSICAL_WORK_WITH_SAMPLES = 0;</code>
     */
    public static final int RESOURCE_WORK_RELATIONSHIP_TYPE_MUSICAL_WORK_WITH_SAMPLES_VALUE = 0;
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_MEDLEY = 1;</code>
     */
    public static final int RESOURCE_WORK_RELATIONSHIP_TYPE_MEDLEY_VALUE = 1;
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_SINGLE_WORK_RESOURCE = 2;</code>
     */
    public static final int RESOURCE_WORK_RELATIONSHIP_TYPE_SINGLE_WORK_RESOURCE_VALUE = 2;
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_MULTIPLE_WORK_RESOURCE = 3;</code>
     */
    public static final int RESOURCE_WORK_RELATIONSHIP_TYPE_MULTIPLE_WORK_RESOURCE_VALUE = 3;
    /**
     * <code>RESOURCE_WORK_RELATIONSHIP_TYPE_INTERPELLATION = 4;</code>
     */
    public static final int RESOURCE_WORK_RELATIONSHIP_TYPE_INTERPELLATION_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceWorkRelationshipType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResourceWorkRelationshipType forNumber(int value) {
      switch (value) {
        case 0: return RESOURCE_WORK_RELATIONSHIP_TYPE_MUSICAL_WORK_WITH_SAMPLES;
        case 1: return RESOURCE_WORK_RELATIONSHIP_TYPE_MEDLEY;
        case 2: return RESOURCE_WORK_RELATIONSHIP_TYPE_SINGLE_WORK_RESOURCE;
        case 3: return RESOURCE_WORK_RELATIONSHIP_TYPE_MULTIPLE_WORK_RESOURCE;
        case 4: return RESOURCE_WORK_RELATIONSHIP_TYPE_INTERPELLATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResourceWorkRelationshipType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResourceWorkRelationshipType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResourceWorkRelationshipType>() {
            public ResourceWorkRelationshipType findValueByNumber(int number) {
              return ResourceWorkRelationshipType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(144);
    }

    private static final ResourceWorkRelationshipType[] VALUES = values();

    public static ResourceWorkRelationshipType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResourceWorkRelationshipType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ResourceWorkRelationshipType)
  }

  /**
   * Protobuf enum {@code avs.RevenueSourceType}
   */
  public enum RevenueSourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REVENUE_SOURCE_TYPE_INDEMNITY_REVENUE = 0;</code>
     */
    REVENUE_SOURCE_TYPE_INDEMNITY_REVENUE(0),
    /**
     * <code>REVENUE_SOURCE_TYPE_ROYALTY_REVENUE = 1;</code>
     */
    REVENUE_SOURCE_TYPE_ROYALTY_REVENUE(1),
    /**
     * <code>REVENUE_SOURCE_TYPE_FINANCIAL_REVENUE = 2;</code>
     */
    REVENUE_SOURCE_TYPE_FINANCIAL_REVENUE(2),
    ;

    /**
     * <code>REVENUE_SOURCE_TYPE_INDEMNITY_REVENUE = 0;</code>
     */
    public static final int REVENUE_SOURCE_TYPE_INDEMNITY_REVENUE_VALUE = 0;
    /**
     * <code>REVENUE_SOURCE_TYPE_ROYALTY_REVENUE = 1;</code>
     */
    public static final int REVENUE_SOURCE_TYPE_ROYALTY_REVENUE_VALUE = 1;
    /**
     * <code>REVENUE_SOURCE_TYPE_FINANCIAL_REVENUE = 2;</code>
     */
    public static final int REVENUE_SOURCE_TYPE_FINANCIAL_REVENUE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RevenueSourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RevenueSourceType forNumber(int value) {
      switch (value) {
        case 0: return REVENUE_SOURCE_TYPE_INDEMNITY_REVENUE;
        case 1: return REVENUE_SOURCE_TYPE_ROYALTY_REVENUE;
        case 2: return REVENUE_SOURCE_TYPE_FINANCIAL_REVENUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RevenueSourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RevenueSourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RevenueSourceType>() {
            public RevenueSourceType findValueByNumber(int number) {
              return RevenueSourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(145);
    }

    private static final RevenueSourceType[] VALUES = values();

    public static RevenueSourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RevenueSourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RevenueSourceType)
  }

  /**
   * Protobuf enum {@code avs.RhythmStyle}
   */
  public enum RhythmStyle
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RHYTHM_STYLE_BOOGIE_WOOGIE = 0;</code>
     */
    RHYTHM_STYLE_BOOGIE_WOOGIE(0),
    /**
     * <code>RHYTHM_STYLE_ONE_DROP = 1;</code>
     */
    RHYTHM_STYLE_ONE_DROP(1),
    /**
     * <code>RHYTHM_STYLE_SHUFFLE = 2;</code>
     */
    RHYTHM_STYLE_SHUFFLE(2),
    /**
     * <code>RHYTHM_STYLE_SKANK = 3;</code>
     */
    RHYTHM_STYLE_SKANK(3),
    /**
     * <code>RHYTHM_STYLE_TALA = 4;</code>
     */
    RHYTHM_STYLE_TALA(4),
    /**
     * <code>RHYTHM_STYLE_CUMBIA = 5;</code>
     */
    RHYTHM_STYLE_CUMBIA(5),
    /**
     * <code>RHYTHM_STYLE_POLYRHYTHM = 6;</code>
     */
    RHYTHM_STYLE_POLYRHYTHM(6),
    /**
     * <code>RHYTHM_STYLE_BLUES = 7;</code>
     */
    RHYTHM_STYLE_BLUES(7),
    /**
     * <code>RHYTHM_STYLE_NYABINGHI = 8;</code>
     */
    RHYTHM_STYLE_NYABINGHI(8),
    /**
     * <code>RHYTHM_STYLE_FLAMENCO = 9;</code>
     */
    RHYTHM_STYLE_FLAMENCO(9),
    /**
     * <code>RHYTHM_STYLE_MERENGUE = 10;</code>
     */
    RHYTHM_STYLE_MERENGUE(10),
    /**
     * <code>RHYTHM_STYLE_ROCK_AND_ROLL = 11;</code>
     */
    RHYTHM_STYLE_ROCK_AND_ROLL(11),
    /**
     * <code>RHYTHM_STYLE_TEJANO = 12;</code>
     */
    RHYTHM_STYLE_TEJANO(12),
    /**
     * <code>RHYTHM_STYLE_CALYPSO = 13;</code>
     */
    RHYTHM_STYLE_CALYPSO(13),
    /**
     * <code>RHYTHM_STYLE_RUMBA = 14;</code>
     */
    RHYTHM_STYLE_RUMBA(14),
    /**
     * <code>RHYTHM_STYLE_DEMBOW = 15;</code>
     */
    RHYTHM_STYLE_DEMBOW(15),
    /**
     * <code>RHYTHM_STYLE_DISCO = 16;</code>
     */
    RHYTHM_STYLE_DISCO(16),
    /**
     * <code>RHYTHM_STYLE_4_ON_THE_FLOOR = 17;</code>
     */
    RHYTHM_STYLE_4_ON_THE_FLOOR(17),
    /**
     * <code>RHYTHM_STYLE_USER_DEFINED = 18;</code>
     */
    RHYTHM_STYLE_USER_DEFINED(18),
    ;

    /**
     * <code>RHYTHM_STYLE_BOOGIE_WOOGIE = 0;</code>
     */
    public static final int RHYTHM_STYLE_BOOGIE_WOOGIE_VALUE = 0;
    /**
     * <code>RHYTHM_STYLE_ONE_DROP = 1;</code>
     */
    public static final int RHYTHM_STYLE_ONE_DROP_VALUE = 1;
    /**
     * <code>RHYTHM_STYLE_SHUFFLE = 2;</code>
     */
    public static final int RHYTHM_STYLE_SHUFFLE_VALUE = 2;
    /**
     * <code>RHYTHM_STYLE_SKANK = 3;</code>
     */
    public static final int RHYTHM_STYLE_SKANK_VALUE = 3;
    /**
     * <code>RHYTHM_STYLE_TALA = 4;</code>
     */
    public static final int RHYTHM_STYLE_TALA_VALUE = 4;
    /**
     * <code>RHYTHM_STYLE_CUMBIA = 5;</code>
     */
    public static final int RHYTHM_STYLE_CUMBIA_VALUE = 5;
    /**
     * <code>RHYTHM_STYLE_POLYRHYTHM = 6;</code>
     */
    public static final int RHYTHM_STYLE_POLYRHYTHM_VALUE = 6;
    /**
     * <code>RHYTHM_STYLE_BLUES = 7;</code>
     */
    public static final int RHYTHM_STYLE_BLUES_VALUE = 7;
    /**
     * <code>RHYTHM_STYLE_NYABINGHI = 8;</code>
     */
    public static final int RHYTHM_STYLE_NYABINGHI_VALUE = 8;
    /**
     * <code>RHYTHM_STYLE_FLAMENCO = 9;</code>
     */
    public static final int RHYTHM_STYLE_FLAMENCO_VALUE = 9;
    /**
     * <code>RHYTHM_STYLE_MERENGUE = 10;</code>
     */
    public static final int RHYTHM_STYLE_MERENGUE_VALUE = 10;
    /**
     * <code>RHYTHM_STYLE_ROCK_AND_ROLL = 11;</code>
     */
    public static final int RHYTHM_STYLE_ROCK_AND_ROLL_VALUE = 11;
    /**
     * <code>RHYTHM_STYLE_TEJANO = 12;</code>
     */
    public static final int RHYTHM_STYLE_TEJANO_VALUE = 12;
    /**
     * <code>RHYTHM_STYLE_CALYPSO = 13;</code>
     */
    public static final int RHYTHM_STYLE_CALYPSO_VALUE = 13;
    /**
     * <code>RHYTHM_STYLE_RUMBA = 14;</code>
     */
    public static final int RHYTHM_STYLE_RUMBA_VALUE = 14;
    /**
     * <code>RHYTHM_STYLE_DEMBOW = 15;</code>
     */
    public static final int RHYTHM_STYLE_DEMBOW_VALUE = 15;
    /**
     * <code>RHYTHM_STYLE_DISCO = 16;</code>
     */
    public static final int RHYTHM_STYLE_DISCO_VALUE = 16;
    /**
     * <code>RHYTHM_STYLE_4_ON_THE_FLOOR = 17;</code>
     */
    public static final int RHYTHM_STYLE_4_ON_THE_FLOOR_VALUE = 17;
    /**
     * <code>RHYTHM_STYLE_USER_DEFINED = 18;</code>
     */
    public static final int RHYTHM_STYLE_USER_DEFINED_VALUE = 18;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RhythmStyle valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RhythmStyle forNumber(int value) {
      switch (value) {
        case 0: return RHYTHM_STYLE_BOOGIE_WOOGIE;
        case 1: return RHYTHM_STYLE_ONE_DROP;
        case 2: return RHYTHM_STYLE_SHUFFLE;
        case 3: return RHYTHM_STYLE_SKANK;
        case 4: return RHYTHM_STYLE_TALA;
        case 5: return RHYTHM_STYLE_CUMBIA;
        case 6: return RHYTHM_STYLE_POLYRHYTHM;
        case 7: return RHYTHM_STYLE_BLUES;
        case 8: return RHYTHM_STYLE_NYABINGHI;
        case 9: return RHYTHM_STYLE_FLAMENCO;
        case 10: return RHYTHM_STYLE_MERENGUE;
        case 11: return RHYTHM_STYLE_ROCK_AND_ROLL;
        case 12: return RHYTHM_STYLE_TEJANO;
        case 13: return RHYTHM_STYLE_CALYPSO;
        case 14: return RHYTHM_STYLE_RUMBA;
        case 15: return RHYTHM_STYLE_DEMBOW;
        case 16: return RHYTHM_STYLE_DISCO;
        case 17: return RHYTHM_STYLE_4_ON_THE_FLOOR;
        case 18: return RHYTHM_STYLE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RhythmStyle>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RhythmStyle> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RhythmStyle>() {
            public RhythmStyle findValueByNumber(int number) {
              return RhythmStyle.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(146);
    }

    private static final RhythmStyle[] VALUES = values();

    public static RhythmStyle valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RhythmStyle(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RhythmStyle)
  }

  /**
   * Protobuf enum {@code avs.RightShareType}
   */
  public enum RightShareType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHT_SHARE_TYPE_MUSICAL_WORK_MANUSCRIPT_SHARE = 0;</code>
     */
    RIGHT_SHARE_TYPE_MUSICAL_WORK_MANUSCRIPT_SHARE(0),
    /**
     * <code>RIGHT_SHARE_TYPE_ORIGINAL_PUBLISHER_SHARE = 1;</code>
     */
    RIGHT_SHARE_TYPE_ORIGINAL_PUBLISHER_SHARE(1),
    /**
     * <code>RIGHT_SHARE_TYPE_LICENSING_SHARE = 2;</code>
     */
    RIGHT_SHARE_TYPE_LICENSING_SHARE(2),
    /**
     * <code>RIGHT_SHARE_TYPE_MUSICAL_WORK_COLLECTION_SHARE = 3;</code>
     */
    RIGHT_SHARE_TYPE_MUSICAL_WORK_COLLECTION_SHARE(3),
    ;

    /**
     * <code>RIGHT_SHARE_TYPE_MUSICAL_WORK_MANUSCRIPT_SHARE = 0;</code>
     */
    public static final int RIGHT_SHARE_TYPE_MUSICAL_WORK_MANUSCRIPT_SHARE_VALUE = 0;
    /**
     * <code>RIGHT_SHARE_TYPE_ORIGINAL_PUBLISHER_SHARE = 1;</code>
     */
    public static final int RIGHT_SHARE_TYPE_ORIGINAL_PUBLISHER_SHARE_VALUE = 1;
    /**
     * <code>RIGHT_SHARE_TYPE_LICENSING_SHARE = 2;</code>
     */
    public static final int RIGHT_SHARE_TYPE_LICENSING_SHARE_VALUE = 2;
    /**
     * <code>RIGHT_SHARE_TYPE_MUSICAL_WORK_COLLECTION_SHARE = 3;</code>
     */
    public static final int RIGHT_SHARE_TYPE_MUSICAL_WORK_COLLECTION_SHARE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightShareType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightShareType forNumber(int value) {
      switch (value) {
        case 0: return RIGHT_SHARE_TYPE_MUSICAL_WORK_MANUSCRIPT_SHARE;
        case 1: return RIGHT_SHARE_TYPE_ORIGINAL_PUBLISHER_SHARE;
        case 2: return RIGHT_SHARE_TYPE_LICENSING_SHARE;
        case 3: return RIGHT_SHARE_TYPE_MUSICAL_WORK_COLLECTION_SHARE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightShareType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightShareType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightShareType>() {
            public RightShareType findValueByNumber(int number) {
              return RightShareType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(147);
    }

    private static final RightShareType[] VALUES = values();

    public static RightShareType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightShareType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightShareType)
  }

  /**
   * Protobuf enum {@code avs.RightsClaimPolicyType}
   */
  public enum RightsClaimPolicyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHTS_CLAIM_POLICY_TYPE_MONETIZE = 0;</code>
     */
    RIGHTS_CLAIM_POLICY_TYPE_MONETIZE(0),
    /**
     * <code>RIGHTS_CLAIM_POLICY_TYPE_REPORT_USAGE = 1;</code>
     */
    RIGHTS_CLAIM_POLICY_TYPE_REPORT_USAGE(1),
    /**
     * <code>RIGHTS_CLAIM_POLICY_TYPE_BLOCK_ACCESS = 2;</code>
     */
    RIGHTS_CLAIM_POLICY_TYPE_BLOCK_ACCESS(2),
    ;

    /**
     * <code>RIGHTS_CLAIM_POLICY_TYPE_MONETIZE = 0;</code>
     */
    public static final int RIGHTS_CLAIM_POLICY_TYPE_MONETIZE_VALUE = 0;
    /**
     * <code>RIGHTS_CLAIM_POLICY_TYPE_REPORT_USAGE = 1;</code>
     */
    public static final int RIGHTS_CLAIM_POLICY_TYPE_REPORT_USAGE_VALUE = 1;
    /**
     * <code>RIGHTS_CLAIM_POLICY_TYPE_BLOCK_ACCESS = 2;</code>
     */
    public static final int RIGHTS_CLAIM_POLICY_TYPE_BLOCK_ACCESS_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightsClaimPolicyType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightsClaimPolicyType forNumber(int value) {
      switch (value) {
        case 0: return RIGHTS_CLAIM_POLICY_TYPE_MONETIZE;
        case 1: return RIGHTS_CLAIM_POLICY_TYPE_REPORT_USAGE;
        case 2: return RIGHTS_CLAIM_POLICY_TYPE_BLOCK_ACCESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightsClaimPolicyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightsClaimPolicyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightsClaimPolicyType>() {
            public RightsClaimPolicyType findValueByNumber(int number) {
              return RightsClaimPolicyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(148);
    }

    private static final RightsClaimPolicyType[] VALUES = values();

    public static RightsClaimPolicyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightsClaimPolicyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightsClaimPolicyType)
  }

  /**
   * Protobuf enum {@code avs.RightsClaimStatus}
   */
  public enum RightsClaimStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHTS_CLAIM_STATUS_CONFLICT = 0;</code>
     */
    RIGHTS_CLAIM_STATUS_CONFLICT(0),
    /**
     * <code>RIGHTS_CLAIM_STATUS_REVOKED = 1;</code>
     */
    RIGHTS_CLAIM_STATUS_REVOKED(1),
    /**
     * <code>RIGHTS_CLAIM_STATUS_NO_CONFLICT = 2;</code>
     */
    RIGHTS_CLAIM_STATUS_NO_CONFLICT(2),
    /**
     * <code>RIGHTS_CLAIM_STATUS_PENDING_REVIEW = 3;</code>
     */
    RIGHTS_CLAIM_STATUS_PENDING_REVIEW(3),
    /**
     * <code>RIGHTS_CLAIM_STATUS_REJECTED = 4;</code>
     */
    RIGHTS_CLAIM_STATUS_REJECTED(4),
    /**
     * <code>RIGHTS_CLAIM_STATUS_DATA_INCONSISTENT = 5;</code>
     */
    RIGHTS_CLAIM_STATUS_DATA_INCONSISTENT(5),
    ;

    /**
     * <code>RIGHTS_CLAIM_STATUS_CONFLICT = 0;</code>
     */
    public static final int RIGHTS_CLAIM_STATUS_CONFLICT_VALUE = 0;
    /**
     * <code>RIGHTS_CLAIM_STATUS_REVOKED = 1;</code>
     */
    public static final int RIGHTS_CLAIM_STATUS_REVOKED_VALUE = 1;
    /**
     * <code>RIGHTS_CLAIM_STATUS_NO_CONFLICT = 2;</code>
     */
    public static final int RIGHTS_CLAIM_STATUS_NO_CONFLICT_VALUE = 2;
    /**
     * <code>RIGHTS_CLAIM_STATUS_PENDING_REVIEW = 3;</code>
     */
    public static final int RIGHTS_CLAIM_STATUS_PENDING_REVIEW_VALUE = 3;
    /**
     * <code>RIGHTS_CLAIM_STATUS_REJECTED = 4;</code>
     */
    public static final int RIGHTS_CLAIM_STATUS_REJECTED_VALUE = 4;
    /**
     * <code>RIGHTS_CLAIM_STATUS_DATA_INCONSISTENT = 5;</code>
     */
    public static final int RIGHTS_CLAIM_STATUS_DATA_INCONSISTENT_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightsClaimStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightsClaimStatus forNumber(int value) {
      switch (value) {
        case 0: return RIGHTS_CLAIM_STATUS_CONFLICT;
        case 1: return RIGHTS_CLAIM_STATUS_REVOKED;
        case 2: return RIGHTS_CLAIM_STATUS_NO_CONFLICT;
        case 3: return RIGHTS_CLAIM_STATUS_PENDING_REVIEW;
        case 4: return RIGHTS_CLAIM_STATUS_REJECTED;
        case 5: return RIGHTS_CLAIM_STATUS_DATA_INCONSISTENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightsClaimStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightsClaimStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightsClaimStatus>() {
            public RightsClaimStatus findValueByNumber(int number) {
              return RightsClaimStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(149);
    }

    private static final RightsClaimStatus[] VALUES = values();

    public static RightsClaimStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightsClaimStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightsClaimStatus)
  }

  /**
   * Protobuf enum {@code avs.RightsControlType}
   */
  public enum RightsControlType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHTS_CONTROL_TYPE_ORIGINAL_OWNER = 0;</code>
     */
    RIGHTS_CONTROL_TYPE_ORIGINAL_OWNER(0),
    /**
     * <code>RIGHTS_CONTROL_TYPE_EXCLUSIVE_LICENSEE = 1;</code>
     */
    RIGHTS_CONTROL_TYPE_EXCLUSIVE_LICENSEE(1),
    /**
     * <code>RIGHTS_CONTROL_TYPE_LOCAL_PAYEE = 2;</code>
     */
    RIGHTS_CONTROL_TYPE_LOCAL_PAYEE(2),
    /**
     * <code>RIGHTS_CONTROL_TYPE_RIGHTS_ADMINISTRATOR = 3;</code>
     */
    RIGHTS_CONTROL_TYPE_RIGHTS_ADMINISTRATOR(3),
    /**
     * <code>RIGHTS_CONTROL_TYPE_SUCCESSOR_IN_TITLE = 4;</code>
     */
    RIGHTS_CONTROL_TYPE_SUCCESSOR_IN_TITLE(4),
    ;

    /**
     * <code>RIGHTS_CONTROL_TYPE_ORIGINAL_OWNER = 0;</code>
     */
    public static final int RIGHTS_CONTROL_TYPE_ORIGINAL_OWNER_VALUE = 0;
    /**
     * <code>RIGHTS_CONTROL_TYPE_EXCLUSIVE_LICENSEE = 1;</code>
     */
    public static final int RIGHTS_CONTROL_TYPE_EXCLUSIVE_LICENSEE_VALUE = 1;
    /**
     * <code>RIGHTS_CONTROL_TYPE_LOCAL_PAYEE = 2;</code>
     */
    public static final int RIGHTS_CONTROL_TYPE_LOCAL_PAYEE_VALUE = 2;
    /**
     * <code>RIGHTS_CONTROL_TYPE_RIGHTS_ADMINISTRATOR = 3;</code>
     */
    public static final int RIGHTS_CONTROL_TYPE_RIGHTS_ADMINISTRATOR_VALUE = 3;
    /**
     * <code>RIGHTS_CONTROL_TYPE_SUCCESSOR_IN_TITLE = 4;</code>
     */
    public static final int RIGHTS_CONTROL_TYPE_SUCCESSOR_IN_TITLE_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightsControlType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightsControlType forNumber(int value) {
      switch (value) {
        case 0: return RIGHTS_CONTROL_TYPE_ORIGINAL_OWNER;
        case 1: return RIGHTS_CONTROL_TYPE_EXCLUSIVE_LICENSEE;
        case 2: return RIGHTS_CONTROL_TYPE_LOCAL_PAYEE;
        case 3: return RIGHTS_CONTROL_TYPE_RIGHTS_ADMINISTRATOR;
        case 4: return RIGHTS_CONTROL_TYPE_SUCCESSOR_IN_TITLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightsControlType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightsControlType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightsControlType>() {
            public RightsControlType findValueByNumber(int number) {
              return RightsControlType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(150);
    }

    private static final RightsControlType[] VALUES = values();

    public static RightsControlType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightsControlType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightsControlType)
  }

  /**
   * Protobuf enum {@code avs.RightsControllerRole}
   */
  public enum RightsControllerRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_ROYALTY_ADMINISTRATOR = 0;</code>
     */
    RIGHTS_CONTROLLER_ROLE_ROYALTY_ADMINISTRATOR(0),
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_UNKNOWN = 1;</code>
     */
    RIGHTS_CONTROLLER_ROLE_UNKNOWN(1),
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_LOCAL_PAYEE = 2;</code>
     */
    RIGHTS_CONTROLLER_ROLE_LOCAL_PAYEE(2),
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_RIGHTS_ADMINISTRATOR = 3;</code>
     */
    RIGHTS_CONTROLLER_ROLE_RIGHTS_ADMINISTRATOR(3),
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_RIGHTS_CONTROLLER = 4;</code>
     */
    RIGHTS_CONTROLLER_ROLE_RIGHTS_CONTROLLER(4),
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_ADMINISTRATING_RECORD_COMPANY = 5;</code>
     */
    RIGHTS_CONTROLLER_ROLE_ADMINISTRATING_RECORD_COMPANY(5),
    ;

    /**
     * <code>RIGHTS_CONTROLLER_ROLE_ROYALTY_ADMINISTRATOR = 0;</code>
     */
    public static final int RIGHTS_CONTROLLER_ROLE_ROYALTY_ADMINISTRATOR_VALUE = 0;
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_UNKNOWN = 1;</code>
     */
    public static final int RIGHTS_CONTROLLER_ROLE_UNKNOWN_VALUE = 1;
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_LOCAL_PAYEE = 2;</code>
     */
    public static final int RIGHTS_CONTROLLER_ROLE_LOCAL_PAYEE_VALUE = 2;
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_RIGHTS_ADMINISTRATOR = 3;</code>
     */
    public static final int RIGHTS_CONTROLLER_ROLE_RIGHTS_ADMINISTRATOR_VALUE = 3;
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_RIGHTS_CONTROLLER = 4;</code>
     */
    public static final int RIGHTS_CONTROLLER_ROLE_RIGHTS_CONTROLLER_VALUE = 4;
    /**
     * <code>RIGHTS_CONTROLLER_ROLE_ADMINISTRATING_RECORD_COMPANY = 5;</code>
     */
    public static final int RIGHTS_CONTROLLER_ROLE_ADMINISTRATING_RECORD_COMPANY_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightsControllerRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightsControllerRole forNumber(int value) {
      switch (value) {
        case 0: return RIGHTS_CONTROLLER_ROLE_ROYALTY_ADMINISTRATOR;
        case 1: return RIGHTS_CONTROLLER_ROLE_UNKNOWN;
        case 2: return RIGHTS_CONTROLLER_ROLE_LOCAL_PAYEE;
        case 3: return RIGHTS_CONTROLLER_ROLE_RIGHTS_ADMINISTRATOR;
        case 4: return RIGHTS_CONTROLLER_ROLE_RIGHTS_CONTROLLER;
        case 5: return RIGHTS_CONTROLLER_ROLE_ADMINISTRATING_RECORD_COMPANY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightsControllerRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightsControllerRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightsControllerRole>() {
            public RightsControllerRole findValueByNumber(int number) {
              return RightsControllerRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(151);
    }

    private static final RightsControllerRole[] VALUES = values();

    public static RightsControllerRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightsControllerRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightsControllerRole)
  }

  /**
   * Protobuf enum {@code avs.RightsControllerType}
   */
  public enum RightsControllerType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHTS_CONTROLLER_TYPE_ORIGINAL_OWNER = 0;</code>
     */
    RIGHTS_CONTROLLER_TYPE_ORIGINAL_OWNER(0),
    /**
     * <code>RIGHTS_CONTROLLER_TYPE_EXCLUSIVE_LICENSEE = 1;</code>
     */
    RIGHTS_CONTROLLER_TYPE_EXCLUSIVE_LICENSEE(1),
    /**
     * <code>RIGHTS_CONTROLLER_TYPE_SUCCESSOR_IN_TITLE = 2;</code>
     */
    RIGHTS_CONTROLLER_TYPE_SUCCESSOR_IN_TITLE(2),
    ;

    /**
     * <code>RIGHTS_CONTROLLER_TYPE_ORIGINAL_OWNER = 0;</code>
     */
    public static final int RIGHTS_CONTROLLER_TYPE_ORIGINAL_OWNER_VALUE = 0;
    /**
     * <code>RIGHTS_CONTROLLER_TYPE_EXCLUSIVE_LICENSEE = 1;</code>
     */
    public static final int RIGHTS_CONTROLLER_TYPE_EXCLUSIVE_LICENSEE_VALUE = 1;
    /**
     * <code>RIGHTS_CONTROLLER_TYPE_SUCCESSOR_IN_TITLE = 2;</code>
     */
    public static final int RIGHTS_CONTROLLER_TYPE_SUCCESSOR_IN_TITLE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightsControllerType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightsControllerType forNumber(int value) {
      switch (value) {
        case 0: return RIGHTS_CONTROLLER_TYPE_ORIGINAL_OWNER;
        case 1: return RIGHTS_CONTROLLER_TYPE_EXCLUSIVE_LICENSEE;
        case 2: return RIGHTS_CONTROLLER_TYPE_SUCCESSOR_IN_TITLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightsControllerType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightsControllerType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightsControllerType>() {
            public RightsControllerType findValueByNumber(int number) {
              return RightsControllerType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(152);
    }

    private static final RightsControllerType[] VALUES = values();

    public static RightsControllerType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightsControllerType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightsControllerType)
  }

  /**
   * Protobuf enum {@code avs.RightsCoverage}
   */
  public enum RightsCoverage
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHTS_COVERAGE_MECHANICAL_RIGHT = 0;</code>
     */
    RIGHTS_COVERAGE_MECHANICAL_RIGHT(0),
    /**
     * <code>RIGHTS_COVERAGE_PRINT_RIGHT = 1;</code>
     */
    RIGHTS_COVERAGE_PRINT_RIGHT(1),
    /**
     * <code>RIGHTS_COVERAGE_MAKE_AVAILABLE_RIGHT = 2;</code>
     */
    RIGHTS_COVERAGE_MAKE_AVAILABLE_RIGHT(2),
    /**
     * <code>RIGHTS_COVERAGE_REPRODUCTION_RIGHT = 3;</code>
     */
    RIGHTS_COVERAGE_REPRODUCTION_RIGHT(3),
    /**
     * <code>RIGHTS_COVERAGE_SYNCHRONIZATION_RIGHT = 4;</code>
     */
    RIGHTS_COVERAGE_SYNCHRONIZATION_RIGHT(4),
    /**
     * <code>RIGHTS_COVERAGE_USER_DEFINED = 5;</code>
     */
    RIGHTS_COVERAGE_USER_DEFINED(5),
    /**
     * <code>RIGHTS_COVERAGE_PERFORMING_RIGHT = 6;</code>
     */
    RIGHTS_COVERAGE_PERFORMING_RIGHT(6),
    ;

    /**
     * <code>RIGHTS_COVERAGE_MECHANICAL_RIGHT = 0;</code>
     */
    public static final int RIGHTS_COVERAGE_MECHANICAL_RIGHT_VALUE = 0;
    /**
     * <code>RIGHTS_COVERAGE_PRINT_RIGHT = 1;</code>
     */
    public static final int RIGHTS_COVERAGE_PRINT_RIGHT_VALUE = 1;
    /**
     * <code>RIGHTS_COVERAGE_MAKE_AVAILABLE_RIGHT = 2;</code>
     */
    public static final int RIGHTS_COVERAGE_MAKE_AVAILABLE_RIGHT_VALUE = 2;
    /**
     * <code>RIGHTS_COVERAGE_REPRODUCTION_RIGHT = 3;</code>
     */
    public static final int RIGHTS_COVERAGE_REPRODUCTION_RIGHT_VALUE = 3;
    /**
     * <code>RIGHTS_COVERAGE_SYNCHRONIZATION_RIGHT = 4;</code>
     */
    public static final int RIGHTS_COVERAGE_SYNCHRONIZATION_RIGHT_VALUE = 4;
    /**
     * <code>RIGHTS_COVERAGE_USER_DEFINED = 5;</code>
     */
    public static final int RIGHTS_COVERAGE_USER_DEFINED_VALUE = 5;
    /**
     * <code>RIGHTS_COVERAGE_PERFORMING_RIGHT = 6;</code>
     */
    public static final int RIGHTS_COVERAGE_PERFORMING_RIGHT_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightsCoverage valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightsCoverage forNumber(int value) {
      switch (value) {
        case 0: return RIGHTS_COVERAGE_MECHANICAL_RIGHT;
        case 1: return RIGHTS_COVERAGE_PRINT_RIGHT;
        case 2: return RIGHTS_COVERAGE_MAKE_AVAILABLE_RIGHT;
        case 3: return RIGHTS_COVERAGE_REPRODUCTION_RIGHT;
        case 4: return RIGHTS_COVERAGE_SYNCHRONIZATION_RIGHT;
        case 5: return RIGHTS_COVERAGE_USER_DEFINED;
        case 6: return RIGHTS_COVERAGE_PERFORMING_RIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightsCoverage>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightsCoverage> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightsCoverage>() {
            public RightsCoverage findValueByNumber(int number) {
              return RightsCoverage.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(153);
    }

    private static final RightsCoverage[] VALUES = values();

    public static RightsCoverage valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightsCoverage(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightsCoverage)
  }

  /**
   * Protobuf enum {@code avs.RightsCoverage_MWNL}
   */
  public enum RightsCoverage_MWNL
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHTS_COVERAGE__M_W_N_L_MECHANICAL_RIGHT = 0;</code>
     */
    RIGHTS_COVERAGE__M_W_N_L_MECHANICAL_RIGHT(0),
    /**
     * <code>RIGHTS_COVERAGE__M_W_N_L_PRINT_RIGHT = 1;</code>
     */
    RIGHTS_COVERAGE__M_W_N_L_PRINT_RIGHT(1),
    /**
     * <code>RIGHTS_COVERAGE__M_W_N_L_SYNCHRONIZATION_RIGHT = 2;</code>
     */
    RIGHTS_COVERAGE__M_W_N_L_SYNCHRONIZATION_RIGHT(2),
    /**
     * <code>RIGHTS_COVERAGE__M_W_N_L_PERFORMING_RIGHT = 3;</code>
     */
    RIGHTS_COVERAGE__M_W_N_L_PERFORMING_RIGHT(3),
    ;

    /**
     * <code>RIGHTS_COVERAGE__M_W_N_L_MECHANICAL_RIGHT = 0;</code>
     */
    public static final int RIGHTS_COVERAGE__M_W_N_L_MECHANICAL_RIGHT_VALUE = 0;
    /**
     * <code>RIGHTS_COVERAGE__M_W_N_L_PRINT_RIGHT = 1;</code>
     */
    public static final int RIGHTS_COVERAGE__M_W_N_L_PRINT_RIGHT_VALUE = 1;
    /**
     * <code>RIGHTS_COVERAGE__M_W_N_L_SYNCHRONIZATION_RIGHT = 2;</code>
     */
    public static final int RIGHTS_COVERAGE__M_W_N_L_SYNCHRONIZATION_RIGHT_VALUE = 2;
    /**
     * <code>RIGHTS_COVERAGE__M_W_N_L_PERFORMING_RIGHT = 3;</code>
     */
    public static final int RIGHTS_COVERAGE__M_W_N_L_PERFORMING_RIGHT_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightsCoverage_MWNL valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightsCoverage_MWNL forNumber(int value) {
      switch (value) {
        case 0: return RIGHTS_COVERAGE__M_W_N_L_MECHANICAL_RIGHT;
        case 1: return RIGHTS_COVERAGE__M_W_N_L_PRINT_RIGHT;
        case 2: return RIGHTS_COVERAGE__M_W_N_L_SYNCHRONIZATION_RIGHT;
        case 3: return RIGHTS_COVERAGE__M_W_N_L_PERFORMING_RIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightsCoverage_MWNL>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightsCoverage_MWNL> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightsCoverage_MWNL>() {
            public RightsCoverage_MWNL findValueByNumber(int number) {
              return RightsCoverage_MWNL.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(154);
    }

    private static final RightsCoverage_MWNL[] VALUES = values();

    public static RightsCoverage_MWNL valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightsCoverage_MWNL(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightsCoverage_MWNL)
  }

  /**
   * Protobuf enum {@code avs.RightsStatementProfile}
   */
  public enum RightsStatementProfile
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RIGHTS_STATEMENT_PROFILE_RIGHTS_STATEMENT = 0;</code>
     */
    RIGHTS_STATEMENT_PROFILE_RIGHTS_STATEMENT(0),
    /**
     * <code>RIGHTS_STATEMENT_PROFILE_MANDATED_USAGE_RIGHTS = 1;</code>
     */
    RIGHTS_STATEMENT_PROFILE_MANDATED_USAGE_RIGHTS(1),
    ;

    /**
     * <code>RIGHTS_STATEMENT_PROFILE_RIGHTS_STATEMENT = 0;</code>
     */
    public static final int RIGHTS_STATEMENT_PROFILE_RIGHTS_STATEMENT_VALUE = 0;
    /**
     * <code>RIGHTS_STATEMENT_PROFILE_MANDATED_USAGE_RIGHTS = 1;</code>
     */
    public static final int RIGHTS_STATEMENT_PROFILE_MANDATED_USAGE_RIGHTS_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightsStatementProfile valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RightsStatementProfile forNumber(int value) {
      switch (value) {
        case 0: return RIGHTS_STATEMENT_PROFILE_RIGHTS_STATEMENT;
        case 1: return RIGHTS_STATEMENT_PROFILE_MANDATED_USAGE_RIGHTS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RightsStatementProfile>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RightsStatementProfile> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RightsStatementProfile>() {
            public RightsStatementProfile findValueByNumber(int number) {
              return RightsStatementProfile.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(155);
    }

    private static final RightsStatementProfile[] VALUES = values();

    public static RightsStatementProfile valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RightsStatementProfile(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RightsStatementProfile)
  }

  /**
   * Protobuf enum {@code avs.RootChordNote}
   */
  public enum RootChordNote
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ROOT_CHORD_NOTE_A = 0;</code>
     */
    ROOT_CHORD_NOTE_A(0),
    /**
     * <code>ROOT_CHORD_NOTE_B = 1;</code>
     */
    ROOT_CHORD_NOTE_B(1),
    /**
     * <code>ROOT_CHORD_NOTE_C = 2;</code>
     */
    ROOT_CHORD_NOTE_C(2),
    /**
     * <code>ROOT_CHORD_NOTE_D = 3;</code>
     */
    ROOT_CHORD_NOTE_D(3),
    /**
     * <code>ROOT_CHORD_NOTE_GB__FS___F__SHARP__ = 4;</code>
     */
    ROOT_CHORD_NOTE_GB__FS___F__SHARP__(4),
    /**
     * <code>ROOT_CHORD_NOTE_E = 5;</code>
     */
    ROOT_CHORD_NOTE_E(5),
    /**
     * <code>ROOT_CHORD_NOTE_F = 6;</code>
     */
    ROOT_CHORD_NOTE_F(6),
    /**
     * <code>ROOT_CHORD_NOTE_G = 7;</code>
     */
    ROOT_CHORD_NOTE_G(7),
    /**
     * <code>ROOT_CHORD_NOTE_EB__FS___D__SHARP__ = 8;</code>
     */
    ROOT_CHORD_NOTE_EB__FS___D__SHARP__(8),
    /**
     * <code>ROOT_CHORD_NOTE_AB__FS___G__SHARP__ = 9;</code>
     */
    ROOT_CHORD_NOTE_AB__FS___G__SHARP__(9),
    /**
     * <code>ROOT_CHORD_NOTE_C__SHARP____FS___DB = 10;</code>
     */
    ROOT_CHORD_NOTE_C__SHARP____FS___DB(10),
    /**
     * <code>ROOT_CHORD_NOTE_USER_DEFINED = 11;</code>
     */
    ROOT_CHORD_NOTE_USER_DEFINED(11),
    /**
     * <code>ROOT_CHORD_NOTE_BB__FS___A__SHARP__ = 12;</code>
     */
    ROOT_CHORD_NOTE_BB__FS___A__SHARP__(12),
    ;

    /**
     * <code>ROOT_CHORD_NOTE_A = 0;</code>
     */
    public static final int ROOT_CHORD_NOTE_A_VALUE = 0;
    /**
     * <code>ROOT_CHORD_NOTE_B = 1;</code>
     */
    public static final int ROOT_CHORD_NOTE_B_VALUE = 1;
    /**
     * <code>ROOT_CHORD_NOTE_C = 2;</code>
     */
    public static final int ROOT_CHORD_NOTE_C_VALUE = 2;
    /**
     * <code>ROOT_CHORD_NOTE_D = 3;</code>
     */
    public static final int ROOT_CHORD_NOTE_D_VALUE = 3;
    /**
     * <code>ROOT_CHORD_NOTE_GB__FS___F__SHARP__ = 4;</code>
     */
    public static final int ROOT_CHORD_NOTE_GB__FS___F__SHARP___VALUE = 4;
    /**
     * <code>ROOT_CHORD_NOTE_E = 5;</code>
     */
    public static final int ROOT_CHORD_NOTE_E_VALUE = 5;
    /**
     * <code>ROOT_CHORD_NOTE_F = 6;</code>
     */
    public static final int ROOT_CHORD_NOTE_F_VALUE = 6;
    /**
     * <code>ROOT_CHORD_NOTE_G = 7;</code>
     */
    public static final int ROOT_CHORD_NOTE_G_VALUE = 7;
    /**
     * <code>ROOT_CHORD_NOTE_EB__FS___D__SHARP__ = 8;</code>
     */
    public static final int ROOT_CHORD_NOTE_EB__FS___D__SHARP___VALUE = 8;
    /**
     * <code>ROOT_CHORD_NOTE_AB__FS___G__SHARP__ = 9;</code>
     */
    public static final int ROOT_CHORD_NOTE_AB__FS___G__SHARP___VALUE = 9;
    /**
     * <code>ROOT_CHORD_NOTE_C__SHARP____FS___DB = 10;</code>
     */
    public static final int ROOT_CHORD_NOTE_C__SHARP____FS___DB_VALUE = 10;
    /**
     * <code>ROOT_CHORD_NOTE_USER_DEFINED = 11;</code>
     */
    public static final int ROOT_CHORD_NOTE_USER_DEFINED_VALUE = 11;
    /**
     * <code>ROOT_CHORD_NOTE_BB__FS___A__SHARP__ = 12;</code>
     */
    public static final int ROOT_CHORD_NOTE_BB__FS___A__SHARP___VALUE = 12;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RootChordNote valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RootChordNote forNumber(int value) {
      switch (value) {
        case 0: return ROOT_CHORD_NOTE_A;
        case 1: return ROOT_CHORD_NOTE_B;
        case 2: return ROOT_CHORD_NOTE_C;
        case 3: return ROOT_CHORD_NOTE_D;
        case 4: return ROOT_CHORD_NOTE_GB__FS___F__SHARP__;
        case 5: return ROOT_CHORD_NOTE_E;
        case 6: return ROOT_CHORD_NOTE_F;
        case 7: return ROOT_CHORD_NOTE_G;
        case 8: return ROOT_CHORD_NOTE_EB__FS___D__SHARP__;
        case 9: return ROOT_CHORD_NOTE_AB__FS___G__SHARP__;
        case 10: return ROOT_CHORD_NOTE_C__SHARP____FS___DB;
        case 11: return ROOT_CHORD_NOTE_USER_DEFINED;
        case 12: return ROOT_CHORD_NOTE_BB__FS___A__SHARP__;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RootChordNote>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RootChordNote> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RootChordNote>() {
            public RootChordNote findValueByNumber(int number) {
              return RootChordNote.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(156);
    }

    private static final RootChordNote[] VALUES = values();

    public static RootChordNote valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RootChordNote(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RootChordNote)
  }

  /**
   * Protobuf enum {@code avs.RootChordQuality}
   */
  public enum RootChordQuality
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ROOT_CHORD_QUALITY_MAJOR_MINOR_SEVENTH = 0;</code>
     */
    ROOT_CHORD_QUALITY_MAJOR_MINOR_SEVENTH(0),
    /**
     * <code>ROOT_CHORD_QUALITY_MINOR_TRIAD = 1;</code>
     */
    ROOT_CHORD_QUALITY_MINOR_TRIAD(1),
    /**
     * <code>ROOT_CHORD_QUALITY_DIMINISHED_SEVENTH = 2;</code>
     */
    ROOT_CHORD_QUALITY_DIMINISHED_SEVENTH(2),
    /**
     * <code>ROOT_CHORD_QUALITY_MINOR_SEVENTH = 3;</code>
     */
    ROOT_CHORD_QUALITY_MINOR_SEVENTH(3),
    /**
     * <code>ROOT_CHORD_QUALITY_MAJOR_TRIAD = 4;</code>
     */
    ROOT_CHORD_QUALITY_MAJOR_TRIAD(4),
    /**
     * <code>ROOT_CHORD_QUALITY_MINOR_SIXTH = 5;</code>
     */
    ROOT_CHORD_QUALITY_MINOR_SIXTH(5),
    /**
     * <code>ROOT_CHORD_QUALITY_AUGMENTED_SEVENTH = 6;</code>
     */
    ROOT_CHORD_QUALITY_AUGMENTED_SEVENTH(6),
    /**
     * <code>ROOT_CHORD_QUALITY_DOMINANT_SEVENTH = 7;</code>
     */
    ROOT_CHORD_QUALITY_DOMINANT_SEVENTH(7),
    /**
     * <code>ROOT_CHORD_QUALITY_DIMINISHED_TRIAD = 8;</code>
     */
    ROOT_CHORD_QUALITY_DIMINISHED_TRIAD(8),
    /**
     * <code>ROOT_CHORD_QUALITY_HALF_DIMINISHED_SEVENTH = 9;</code>
     */
    ROOT_CHORD_QUALITY_HALF_DIMINISHED_SEVENTH(9),
    /**
     * <code>ROOT_CHORD_QUALITY_MAJOR_SEVENTH = 10;</code>
     */
    ROOT_CHORD_QUALITY_MAJOR_SEVENTH(10),
    /**
     * <code>ROOT_CHORD_QUALITY_AUGMENTED_TRIAD = 11;</code>
     */
    ROOT_CHORD_QUALITY_AUGMENTED_TRIAD(11),
    /**
     * <code>ROOT_CHORD_QUALITY_FIFTH = 12;</code>
     */
    ROOT_CHORD_QUALITY_FIFTH(12),
    /**
     * <code>ROOT_CHORD_QUALITY_SUSPENDED = 13;</code>
     */
    ROOT_CHORD_QUALITY_SUSPENDED(13),
    /**
     * <code>ROOT_CHORD_QUALITY_USER_DEFINED = 14;</code>
     */
    ROOT_CHORD_QUALITY_USER_DEFINED(14),
    /**
     * <code>ROOT_CHORD_QUALITY_MAJOR_SIXTH = 15;</code>
     */
    ROOT_CHORD_QUALITY_MAJOR_SIXTH(15),
    ;

    /**
     * <code>ROOT_CHORD_QUALITY_MAJOR_MINOR_SEVENTH = 0;</code>
     */
    public static final int ROOT_CHORD_QUALITY_MAJOR_MINOR_SEVENTH_VALUE = 0;
    /**
     * <code>ROOT_CHORD_QUALITY_MINOR_TRIAD = 1;</code>
     */
    public static final int ROOT_CHORD_QUALITY_MINOR_TRIAD_VALUE = 1;
    /**
     * <code>ROOT_CHORD_QUALITY_DIMINISHED_SEVENTH = 2;</code>
     */
    public static final int ROOT_CHORD_QUALITY_DIMINISHED_SEVENTH_VALUE = 2;
    /**
     * <code>ROOT_CHORD_QUALITY_MINOR_SEVENTH = 3;</code>
     */
    public static final int ROOT_CHORD_QUALITY_MINOR_SEVENTH_VALUE = 3;
    /**
     * <code>ROOT_CHORD_QUALITY_MAJOR_TRIAD = 4;</code>
     */
    public static final int ROOT_CHORD_QUALITY_MAJOR_TRIAD_VALUE = 4;
    /**
     * <code>ROOT_CHORD_QUALITY_MINOR_SIXTH = 5;</code>
     */
    public static final int ROOT_CHORD_QUALITY_MINOR_SIXTH_VALUE = 5;
    /**
     * <code>ROOT_CHORD_QUALITY_AUGMENTED_SEVENTH = 6;</code>
     */
    public static final int ROOT_CHORD_QUALITY_AUGMENTED_SEVENTH_VALUE = 6;
    /**
     * <code>ROOT_CHORD_QUALITY_DOMINANT_SEVENTH = 7;</code>
     */
    public static final int ROOT_CHORD_QUALITY_DOMINANT_SEVENTH_VALUE = 7;
    /**
     * <code>ROOT_CHORD_QUALITY_DIMINISHED_TRIAD = 8;</code>
     */
    public static final int ROOT_CHORD_QUALITY_DIMINISHED_TRIAD_VALUE = 8;
    /**
     * <code>ROOT_CHORD_QUALITY_HALF_DIMINISHED_SEVENTH = 9;</code>
     */
    public static final int ROOT_CHORD_QUALITY_HALF_DIMINISHED_SEVENTH_VALUE = 9;
    /**
     * <code>ROOT_CHORD_QUALITY_MAJOR_SEVENTH = 10;</code>
     */
    public static final int ROOT_CHORD_QUALITY_MAJOR_SEVENTH_VALUE = 10;
    /**
     * <code>ROOT_CHORD_QUALITY_AUGMENTED_TRIAD = 11;</code>
     */
    public static final int ROOT_CHORD_QUALITY_AUGMENTED_TRIAD_VALUE = 11;
    /**
     * <code>ROOT_CHORD_QUALITY_FIFTH = 12;</code>
     */
    public static final int ROOT_CHORD_QUALITY_FIFTH_VALUE = 12;
    /**
     * <code>ROOT_CHORD_QUALITY_SUSPENDED = 13;</code>
     */
    public static final int ROOT_CHORD_QUALITY_SUSPENDED_VALUE = 13;
    /**
     * <code>ROOT_CHORD_QUALITY_USER_DEFINED = 14;</code>
     */
    public static final int ROOT_CHORD_QUALITY_USER_DEFINED_VALUE = 14;
    /**
     * <code>ROOT_CHORD_QUALITY_MAJOR_SIXTH = 15;</code>
     */
    public static final int ROOT_CHORD_QUALITY_MAJOR_SIXTH_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RootChordQuality valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RootChordQuality forNumber(int value) {
      switch (value) {
        case 0: return ROOT_CHORD_QUALITY_MAJOR_MINOR_SEVENTH;
        case 1: return ROOT_CHORD_QUALITY_MINOR_TRIAD;
        case 2: return ROOT_CHORD_QUALITY_DIMINISHED_SEVENTH;
        case 3: return ROOT_CHORD_QUALITY_MINOR_SEVENTH;
        case 4: return ROOT_CHORD_QUALITY_MAJOR_TRIAD;
        case 5: return ROOT_CHORD_QUALITY_MINOR_SIXTH;
        case 6: return ROOT_CHORD_QUALITY_AUGMENTED_SEVENTH;
        case 7: return ROOT_CHORD_QUALITY_DOMINANT_SEVENTH;
        case 8: return ROOT_CHORD_QUALITY_DIMINISHED_TRIAD;
        case 9: return ROOT_CHORD_QUALITY_HALF_DIMINISHED_SEVENTH;
        case 10: return ROOT_CHORD_QUALITY_MAJOR_SEVENTH;
        case 11: return ROOT_CHORD_QUALITY_AUGMENTED_TRIAD;
        case 12: return ROOT_CHORD_QUALITY_FIFTH;
        case 13: return ROOT_CHORD_QUALITY_SUSPENDED;
        case 14: return ROOT_CHORD_QUALITY_USER_DEFINED;
        case 15: return ROOT_CHORD_QUALITY_MAJOR_SIXTH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RootChordQuality>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RootChordQuality> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RootChordQuality>() {
            public RootChordQuality findValueByNumber(int number) {
              return RootChordQuality.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(157);
    }

    private static final RootChordQuality[] VALUES = values();

    public static RootChordQuality valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RootChordQuality(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RootChordQuality)
  }

  /**
   * Protobuf enum {@code avs.RoyaltyRateCalculationType}
   */
  public enum RoyaltyRateCalculationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_RETAIL_PRICE = 0;</code>
     */
    ROYALTY_RATE_CALCULATION_TYPE_RETAIL_PRICE(0),
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_CONTROLLED_COMPOSITION_ROYALTY_RATE = 1;</code>
     */
    ROYALTY_RATE_CALCULATION_TYPE_CONTROLLED_COMPOSITION_ROYALTY_RATE(1),
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_P_P_D = 2;</code>
     */
    ROYALTY_RATE_CALCULATION_TYPE_P_P_D(2),
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_NEGOTIATED_ROYALTY_RATE = 3;</code>
     */
    ROYALTY_RATE_CALCULATION_TYPE_NEGOTIATED_ROYALTY_RATE(3),
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_REDUCED_STATUTORY_ROYALTY_RATE = 4;</code>
     */
    ROYALTY_RATE_CALCULATION_TYPE_REDUCED_STATUTORY_ROYALTY_RATE(4),
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_STATUTORY_ROYALTY_RATE = 5;</code>
     */
    ROYALTY_RATE_CALCULATION_TYPE_STATUTORY_ROYALTY_RATE(5),
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_MINIMUM_STATUTORY_ROYALTY_RATE = 6;</code>
     */
    ROYALTY_RATE_CALCULATION_TYPE_MINIMUM_STATUTORY_ROYALTY_RATE(6),
    ;

    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_RETAIL_PRICE = 0;</code>
     */
    public static final int ROYALTY_RATE_CALCULATION_TYPE_RETAIL_PRICE_VALUE = 0;
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_CONTROLLED_COMPOSITION_ROYALTY_RATE = 1;</code>
     */
    public static final int ROYALTY_RATE_CALCULATION_TYPE_CONTROLLED_COMPOSITION_ROYALTY_RATE_VALUE = 1;
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_P_P_D = 2;</code>
     */
    public static final int ROYALTY_RATE_CALCULATION_TYPE_P_P_D_VALUE = 2;
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_NEGOTIATED_ROYALTY_RATE = 3;</code>
     */
    public static final int ROYALTY_RATE_CALCULATION_TYPE_NEGOTIATED_ROYALTY_RATE_VALUE = 3;
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_REDUCED_STATUTORY_ROYALTY_RATE = 4;</code>
     */
    public static final int ROYALTY_RATE_CALCULATION_TYPE_REDUCED_STATUTORY_ROYALTY_RATE_VALUE = 4;
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_STATUTORY_ROYALTY_RATE = 5;</code>
     */
    public static final int ROYALTY_RATE_CALCULATION_TYPE_STATUTORY_ROYALTY_RATE_VALUE = 5;
    /**
     * <code>ROYALTY_RATE_CALCULATION_TYPE_MINIMUM_STATUTORY_ROYALTY_RATE = 6;</code>
     */
    public static final int ROYALTY_RATE_CALCULATION_TYPE_MINIMUM_STATUTORY_ROYALTY_RATE_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RoyaltyRateCalculationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoyaltyRateCalculationType forNumber(int value) {
      switch (value) {
        case 0: return ROYALTY_RATE_CALCULATION_TYPE_RETAIL_PRICE;
        case 1: return ROYALTY_RATE_CALCULATION_TYPE_CONTROLLED_COMPOSITION_ROYALTY_RATE;
        case 2: return ROYALTY_RATE_CALCULATION_TYPE_P_P_D;
        case 3: return ROYALTY_RATE_CALCULATION_TYPE_NEGOTIATED_ROYALTY_RATE;
        case 4: return ROYALTY_RATE_CALCULATION_TYPE_REDUCED_STATUTORY_ROYALTY_RATE;
        case 5: return ROYALTY_RATE_CALCULATION_TYPE_STATUTORY_ROYALTY_RATE;
        case 6: return ROYALTY_RATE_CALCULATION_TYPE_MINIMUM_STATUTORY_ROYALTY_RATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoyaltyRateCalculationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoyaltyRateCalculationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoyaltyRateCalculationType>() {
            public RoyaltyRateCalculationType findValueByNumber(int number) {
              return RoyaltyRateCalculationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(158);
    }

    private static final RoyaltyRateCalculationType[] VALUES = values();

    public static RoyaltyRateCalculationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RoyaltyRateCalculationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RoyaltyRateCalculationType)
  }

  /**
   * Protobuf enum {@code avs.RoyaltyRateType}
   */
  public enum RoyaltyRateType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ROYALTY_RATE_TYPE_PERCENTAGE_ROYALTY_RATE = 0;</code>
     */
    ROYALTY_RATE_TYPE_PERCENTAGE_ROYALTY_RATE(0),
    /**
     * <code>ROYALTY_RATE_TYPE_PENNY_RATE = 1;</code>
     */
    ROYALTY_RATE_TYPE_PENNY_RATE(1),
    ;

    /**
     * <code>ROYALTY_RATE_TYPE_PERCENTAGE_ROYALTY_RATE = 0;</code>
     */
    public static final int ROYALTY_RATE_TYPE_PERCENTAGE_ROYALTY_RATE_VALUE = 0;
    /**
     * <code>ROYALTY_RATE_TYPE_PENNY_RATE = 1;</code>
     */
    public static final int ROYALTY_RATE_TYPE_PENNY_RATE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RoyaltyRateType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoyaltyRateType forNumber(int value) {
      switch (value) {
        case 0: return ROYALTY_RATE_TYPE_PERCENTAGE_ROYALTY_RATE;
        case 1: return ROYALTY_RATE_TYPE_PENNY_RATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoyaltyRateType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoyaltyRateType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoyaltyRateType>() {
            public RoyaltyRateType findValueByNumber(int number) {
              return RoyaltyRateType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(159);
    }

    private static final RoyaltyRateType[] VALUES = values();

    public static RoyaltyRateType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RoyaltyRateType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.RoyaltyRateType)
  }

  /**
   * Protobuf enum {@code avs.SessionType}
   */
  public enum SessionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SESSION_TYPE_MIXING = 0;</code>
     */
    SESSION_TYPE_MIXING(0),
    /**
     * <code>SESSION_TYPE_DEMO = 1;</code>
     */
    SESSION_TYPE_DEMO(1),
    /**
     * <code>SESSION_TYPE_TRACKING = 2;</code>
     */
    SESSION_TYPE_TRACKING(2),
    /**
     * <code>SESSION_TYPE_PRESERVATION = 3;</code>
     */
    SESSION_TYPE_PRESERVATION(3),
    /**
     * <code>SESSION_TYPE_LIVE_PERFORMANCE = 4;</code>
     */
    SESSION_TYPE_LIVE_PERFORMANCE(4),
    /**
     * <code>SESSION_TYPE_EDITING = 5;</code>
     */
    SESSION_TYPE_EDITING(5),
    /**
     * <code>SESSION_TYPE_MASTERING = 6;</code>
     */
    SESSION_TYPE_MASTERING(6),
    /**
     * <code>SESSION_TYPE_PRE_PRODUCTION = 7;</code>
     */
    SESSION_TYPE_PRE_PRODUCTION(7),
    /**
     * <code>SESSION_TYPE_REMIXING = 8;</code>
     */
    SESSION_TYPE_REMIXING(8),
    /**
     * <code>SESSION_TYPE_OVERDUB = 9;</code>
     */
    SESSION_TYPE_OVERDUB(9),
    /**
     * <code>SESSION_TYPE_PROJECT = 10;</code>
     */
    SESSION_TYPE_PROJECT(10),
    /**
     * <code>SESSION_TYPE_DIGITAL_EDITING = 11;</code>
     */
    SESSION_TYPE_DIGITAL_EDITING(11),
    /**
     * <code>SESSION_TYPE_ARTIST_VOCALS = 12;</code>
     */
    SESSION_TYPE_ARTIST_VOCALS(12),
    /**
     * <code>SESSION_TYPE_PRODUCTION = 13;</code>
     */
    SESSION_TYPE_PRODUCTION(13),
    /**
     * <code>SESSION_TYPE_TRANSFER = 14;</code>
     */
    SESSION_TYPE_TRANSFER(14),
    /**
     * <code>SESSION_TYPE_VOCAL = 15;</code>
     */
    SESSION_TYPE_VOCAL(15),
    /**
     * <code>SESSION_TYPE_RECORDING = 16;</code>
     */
    SESSION_TYPE_RECORDING(16),
    /**
     * <code>SESSION_TYPE_TRANSFERS_AND_SAFETIES = 17;</code>
     */
    SESSION_TYPE_TRANSFERS_AND_SAFETIES(17),
    /**
     * <code>SESSION_TYPE_USER_DEFINED = 18;</code>
     */
    SESSION_TYPE_USER_DEFINED(18),
    ;

    /**
     * <code>SESSION_TYPE_MIXING = 0;</code>
     */
    public static final int SESSION_TYPE_MIXING_VALUE = 0;
    /**
     * <code>SESSION_TYPE_DEMO = 1;</code>
     */
    public static final int SESSION_TYPE_DEMO_VALUE = 1;
    /**
     * <code>SESSION_TYPE_TRACKING = 2;</code>
     */
    public static final int SESSION_TYPE_TRACKING_VALUE = 2;
    /**
     * <code>SESSION_TYPE_PRESERVATION = 3;</code>
     */
    public static final int SESSION_TYPE_PRESERVATION_VALUE = 3;
    /**
     * <code>SESSION_TYPE_LIVE_PERFORMANCE = 4;</code>
     */
    public static final int SESSION_TYPE_LIVE_PERFORMANCE_VALUE = 4;
    /**
     * <code>SESSION_TYPE_EDITING = 5;</code>
     */
    public static final int SESSION_TYPE_EDITING_VALUE = 5;
    /**
     * <code>SESSION_TYPE_MASTERING = 6;</code>
     */
    public static final int SESSION_TYPE_MASTERING_VALUE = 6;
    /**
     * <code>SESSION_TYPE_PRE_PRODUCTION = 7;</code>
     */
    public static final int SESSION_TYPE_PRE_PRODUCTION_VALUE = 7;
    /**
     * <code>SESSION_TYPE_REMIXING = 8;</code>
     */
    public static final int SESSION_TYPE_REMIXING_VALUE = 8;
    /**
     * <code>SESSION_TYPE_OVERDUB = 9;</code>
     */
    public static final int SESSION_TYPE_OVERDUB_VALUE = 9;
    /**
     * <code>SESSION_TYPE_PROJECT = 10;</code>
     */
    public static final int SESSION_TYPE_PROJECT_VALUE = 10;
    /**
     * <code>SESSION_TYPE_DIGITAL_EDITING = 11;</code>
     */
    public static final int SESSION_TYPE_DIGITAL_EDITING_VALUE = 11;
    /**
     * <code>SESSION_TYPE_ARTIST_VOCALS = 12;</code>
     */
    public static final int SESSION_TYPE_ARTIST_VOCALS_VALUE = 12;
    /**
     * <code>SESSION_TYPE_PRODUCTION = 13;</code>
     */
    public static final int SESSION_TYPE_PRODUCTION_VALUE = 13;
    /**
     * <code>SESSION_TYPE_TRANSFER = 14;</code>
     */
    public static final int SESSION_TYPE_TRANSFER_VALUE = 14;
    /**
     * <code>SESSION_TYPE_VOCAL = 15;</code>
     */
    public static final int SESSION_TYPE_VOCAL_VALUE = 15;
    /**
     * <code>SESSION_TYPE_RECORDING = 16;</code>
     */
    public static final int SESSION_TYPE_RECORDING_VALUE = 16;
    /**
     * <code>SESSION_TYPE_TRANSFERS_AND_SAFETIES = 17;</code>
     */
    public static final int SESSION_TYPE_TRANSFERS_AND_SAFETIES_VALUE = 17;
    /**
     * <code>SESSION_TYPE_USER_DEFINED = 18;</code>
     */
    public static final int SESSION_TYPE_USER_DEFINED_VALUE = 18;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SessionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SessionType forNumber(int value) {
      switch (value) {
        case 0: return SESSION_TYPE_MIXING;
        case 1: return SESSION_TYPE_DEMO;
        case 2: return SESSION_TYPE_TRACKING;
        case 3: return SESSION_TYPE_PRESERVATION;
        case 4: return SESSION_TYPE_LIVE_PERFORMANCE;
        case 5: return SESSION_TYPE_EDITING;
        case 6: return SESSION_TYPE_MASTERING;
        case 7: return SESSION_TYPE_PRE_PRODUCTION;
        case 8: return SESSION_TYPE_REMIXING;
        case 9: return SESSION_TYPE_OVERDUB;
        case 10: return SESSION_TYPE_PROJECT;
        case 11: return SESSION_TYPE_DIGITAL_EDITING;
        case 12: return SESSION_TYPE_ARTIST_VOCALS;
        case 13: return SESSION_TYPE_PRODUCTION;
        case 14: return SESSION_TYPE_TRANSFER;
        case 15: return SESSION_TYPE_VOCAL;
        case 16: return SESSION_TYPE_RECORDING;
        case 17: return SESSION_TYPE_TRANSFERS_AND_SAFETIES;
        case 18: return SESSION_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SessionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SessionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SessionType>() {
            public SessionType findValueByNumber(int number) {
              return SessionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(160);
    }

    private static final SessionType[] VALUES = values();

    public static SessionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SessionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SessionType)
  }

  /**
   * Protobuf enum {@code avs.SheetMusicCodecType}
   */
  public enum SheetMusicCodecType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SHEET_MUSIC_CODEC_TYPE_USER_DEFINED = 0;</code>
     */
    SHEET_MUSIC_CODEC_TYPE_USER_DEFINED(0),
    ;

    /**
     * <code>SHEET_MUSIC_CODEC_TYPE_USER_DEFINED = 0;</code>
     */
    public static final int SHEET_MUSIC_CODEC_TYPE_USER_DEFINED_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SheetMusicCodecType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SheetMusicCodecType forNumber(int value) {
      switch (value) {
        case 0: return SHEET_MUSIC_CODEC_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SheetMusicCodecType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SheetMusicCodecType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SheetMusicCodecType>() {
            public SheetMusicCodecType findValueByNumber(int number) {
              return SheetMusicCodecType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(161);
    }

    private static final SheetMusicCodecType[] VALUES = values();

    public static SheetMusicCodecType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SheetMusicCodecType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SheetMusicCodecType)
  }

  /**
   * Protobuf enum {@code avs.SheetMusicType}
   */
  public enum SheetMusicType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SHEET_MUSIC_TYPE_USER_DEFINED = 0;</code>
     */
    SHEET_MUSIC_TYPE_USER_DEFINED(0),
    ;

    /**
     * <code>SHEET_MUSIC_TYPE_USER_DEFINED = 0;</code>
     */
    public static final int SHEET_MUSIC_TYPE_USER_DEFINED_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SheetMusicType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SheetMusicType forNumber(int value) {
      switch (value) {
        case 0: return SHEET_MUSIC_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SheetMusicType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SheetMusicType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SheetMusicType>() {
            public SheetMusicType findValueByNumber(int number) {
              return SheetMusicType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(162);
    }

    private static final SheetMusicType[] VALUES = values();

    public static SheetMusicType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SheetMusicType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SheetMusicType)
  }

  /**
   * Protobuf enum {@code avs.SoftwareType}
   */
  public enum SoftwareType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SOFTWARE_TYPE_SCREENSAVER = 0;</code>
     */
    SOFTWARE_TYPE_SCREENSAVER(0),
    /**
     * <code>SOFTWARE_TYPE_MUSICAL_WORK_BASED_GAME = 1;</code>
     */
    SOFTWARE_TYPE_MUSICAL_WORK_BASED_GAME(1),
    /**
     * <code>SOFTWARE_TYPE_INTERACTIVE_BOOKLET = 2;</code>
     */
    SOFTWARE_TYPE_INTERACTIVE_BOOKLET(2),
    /**
     * <code>SOFTWARE_TYPE_UNKNOWN = 3;</code>
     */
    SOFTWARE_TYPE_UNKNOWN(3),
    /**
     * <code>SOFTWARE_TYPE_NON_MUSICAL_WORK_BASED_GAME = 4;</code>
     */
    SOFTWARE_TYPE_NON_MUSICAL_WORK_BASED_GAME(4),
    /**
     * <code>SOFTWARE_TYPE_USER_DEFINED = 5;</code>
     */
    SOFTWARE_TYPE_USER_DEFINED(5),
    ;

    /**
     * <code>SOFTWARE_TYPE_SCREENSAVER = 0;</code>
     */
    public static final int SOFTWARE_TYPE_SCREENSAVER_VALUE = 0;
    /**
     * <code>SOFTWARE_TYPE_MUSICAL_WORK_BASED_GAME = 1;</code>
     */
    public static final int SOFTWARE_TYPE_MUSICAL_WORK_BASED_GAME_VALUE = 1;
    /**
     * <code>SOFTWARE_TYPE_INTERACTIVE_BOOKLET = 2;</code>
     */
    public static final int SOFTWARE_TYPE_INTERACTIVE_BOOKLET_VALUE = 2;
    /**
     * <code>SOFTWARE_TYPE_UNKNOWN = 3;</code>
     */
    public static final int SOFTWARE_TYPE_UNKNOWN_VALUE = 3;
    /**
     * <code>SOFTWARE_TYPE_NON_MUSICAL_WORK_BASED_GAME = 4;</code>
     */
    public static final int SOFTWARE_TYPE_NON_MUSICAL_WORK_BASED_GAME_VALUE = 4;
    /**
     * <code>SOFTWARE_TYPE_USER_DEFINED = 5;</code>
     */
    public static final int SOFTWARE_TYPE_USER_DEFINED_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SoftwareType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SoftwareType forNumber(int value) {
      switch (value) {
        case 0: return SOFTWARE_TYPE_SCREENSAVER;
        case 1: return SOFTWARE_TYPE_MUSICAL_WORK_BASED_GAME;
        case 2: return SOFTWARE_TYPE_INTERACTIVE_BOOKLET;
        case 3: return SOFTWARE_TYPE_UNKNOWN;
        case 4: return SOFTWARE_TYPE_NON_MUSICAL_WORK_BASED_GAME;
        case 5: return SOFTWARE_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SoftwareType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SoftwareType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SoftwareType>() {
            public SoftwareType findValueByNumber(int number) {
              return SoftwareType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(163);
    }

    private static final SoftwareType[] VALUES = values();

    public static SoftwareType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SoftwareType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SoftwareType)
  }

  /**
   * Protobuf enum {@code avs.SoundRecordingType}
   */
  public enum SoundRecordingType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SOUND_RECORDING_TYPE_SPOKEN_WORD_SOUND_RECORDING = 0;</code>
     */
    SOUND_RECORDING_TYPE_SPOKEN_WORD_SOUND_RECORDING(0),
    /**
     * <code>SOUND_RECORDING_TYPE_MUSICAL_WORK_READALONG_SOUND_RECORDING = 1;</code>
     */
    SOUND_RECORDING_TYPE_MUSICAL_WORK_READALONG_SOUND_RECORDING(1),
    /**
     * <code>SOUND_RECORDING_TYPE_UNKNOWN = 2;</code>
     */
    SOUND_RECORDING_TYPE_UNKNOWN(2),
    /**
     * <code>SOUND_RECORDING_TYPE_MUSICAL_WORK_SOUND_RECORDING = 3;</code>
     */
    SOUND_RECORDING_TYPE_MUSICAL_WORK_SOUND_RECORDING(3),
    /**
     * <code>SOUND_RECORDING_TYPE_AUDIO_STEM = 4;</code>
     */
    SOUND_RECORDING_TYPE_AUDIO_STEM(4),
    /**
     * <code>SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_SOUND_RECORDING = 5;</code>
     */
    SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_SOUND_RECORDING(5),
    /**
     * <code>SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_READALONG_SOUND_RECORDING = 6;</code>
     */
    SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_READALONG_SOUND_RECORDING(6),
    /**
     * <code>SOUND_RECORDING_TYPE_USER_DEFINED = 7;</code>
     */
    SOUND_RECORDING_TYPE_USER_DEFINED(7),
    ;

    /**
     * <code>SOUND_RECORDING_TYPE_SPOKEN_WORD_SOUND_RECORDING = 0;</code>
     */
    public static final int SOUND_RECORDING_TYPE_SPOKEN_WORD_SOUND_RECORDING_VALUE = 0;
    /**
     * <code>SOUND_RECORDING_TYPE_MUSICAL_WORK_READALONG_SOUND_RECORDING = 1;</code>
     */
    public static final int SOUND_RECORDING_TYPE_MUSICAL_WORK_READALONG_SOUND_RECORDING_VALUE = 1;
    /**
     * <code>SOUND_RECORDING_TYPE_UNKNOWN = 2;</code>
     */
    public static final int SOUND_RECORDING_TYPE_UNKNOWN_VALUE = 2;
    /**
     * <code>SOUND_RECORDING_TYPE_MUSICAL_WORK_SOUND_RECORDING = 3;</code>
     */
    public static final int SOUND_RECORDING_TYPE_MUSICAL_WORK_SOUND_RECORDING_VALUE = 3;
    /**
     * <code>SOUND_RECORDING_TYPE_AUDIO_STEM = 4;</code>
     */
    public static final int SOUND_RECORDING_TYPE_AUDIO_STEM_VALUE = 4;
    /**
     * <code>SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_SOUND_RECORDING = 5;</code>
     */
    public static final int SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_SOUND_RECORDING_VALUE = 5;
    /**
     * <code>SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_READALONG_SOUND_RECORDING = 6;</code>
     */
    public static final int SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_READALONG_SOUND_RECORDING_VALUE = 6;
    /**
     * <code>SOUND_RECORDING_TYPE_USER_DEFINED = 7;</code>
     */
    public static final int SOUND_RECORDING_TYPE_USER_DEFINED_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SoundRecordingType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SoundRecordingType forNumber(int value) {
      switch (value) {
        case 0: return SOUND_RECORDING_TYPE_SPOKEN_WORD_SOUND_RECORDING;
        case 1: return SOUND_RECORDING_TYPE_MUSICAL_WORK_READALONG_SOUND_RECORDING;
        case 2: return SOUND_RECORDING_TYPE_UNKNOWN;
        case 3: return SOUND_RECORDING_TYPE_MUSICAL_WORK_SOUND_RECORDING;
        case 4: return SOUND_RECORDING_TYPE_AUDIO_STEM;
        case 5: return SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_SOUND_RECORDING;
        case 6: return SOUND_RECORDING_TYPE_NON_MUSICAL_WORK_READALONG_SOUND_RECORDING;
        case 7: return SOUND_RECORDING_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SoundRecordingType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SoundRecordingType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SoundRecordingType>() {
            public SoundRecordingType findValueByNumber(int number) {
              return SoundRecordingType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(164);
    }

    private static final SoundRecordingType[] VALUES = values();

    public static SoundRecordingType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SoundRecordingType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SoundRecordingType)
  }

  /**
   * Protobuf enum {@code avs.Status}
   */
  public enum Status
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STATUS_AWAITING_MATERIALS = 0;</code>
     */
    STATUS_AWAITING_MATERIALS(0),
    /**
     * <code>STATUS_VERIFIED = 1;</code>
     */
    STATUS_VERIFIED(1),
    /**
     * <code>STATUS_CLOSED = 2;</code>
     */
    STATUS_CLOSED(2),
    /**
     * <code>STATUS_NOT_STARTED = 3;</code>
     */
    STATUS_NOT_STARTED(3),
    /**
     * <code>STATUS_COMPLETED = 4;</code>
     */
    STATUS_COMPLETED(4),
    /**
     * <code>STATUS_ASSETS_NEEDED = 5;</code>
     */
    STATUS_ASSETS_NEEDED(5),
    /**
     * <code>STATUS_CANCELED = 6;</code>
     */
    STATUS_CANCELED(6),
    /**
     * <code>STATUS_BACKED_UP = 7;</code>
     */
    STATUS_BACKED_UP(7),
    /**
     * <code>STATUS_USER_DEFINED = 8;</code>
     */
    STATUS_USER_DEFINED(8),
    /**
     * <code>STATUS_IN_WORK = 9;</code>
     */
    STATUS_IN_WORK(9),
    ;

    /**
     * <code>STATUS_AWAITING_MATERIALS = 0;</code>
     */
    public static final int STATUS_AWAITING_MATERIALS_VALUE = 0;
    /**
     * <code>STATUS_VERIFIED = 1;</code>
     */
    public static final int STATUS_VERIFIED_VALUE = 1;
    /**
     * <code>STATUS_CLOSED = 2;</code>
     */
    public static final int STATUS_CLOSED_VALUE = 2;
    /**
     * <code>STATUS_NOT_STARTED = 3;</code>
     */
    public static final int STATUS_NOT_STARTED_VALUE = 3;
    /**
     * <code>STATUS_COMPLETED = 4;</code>
     */
    public static final int STATUS_COMPLETED_VALUE = 4;
    /**
     * <code>STATUS_ASSETS_NEEDED = 5;</code>
     */
    public static final int STATUS_ASSETS_NEEDED_VALUE = 5;
    /**
     * <code>STATUS_CANCELED = 6;</code>
     */
    public static final int STATUS_CANCELED_VALUE = 6;
    /**
     * <code>STATUS_BACKED_UP = 7;</code>
     */
    public static final int STATUS_BACKED_UP_VALUE = 7;
    /**
     * <code>STATUS_USER_DEFINED = 8;</code>
     */
    public static final int STATUS_USER_DEFINED_VALUE = 8;
    /**
     * <code>STATUS_IN_WORK = 9;</code>
     */
    public static final int STATUS_IN_WORK_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Status forNumber(int value) {
      switch (value) {
        case 0: return STATUS_AWAITING_MATERIALS;
        case 1: return STATUS_VERIFIED;
        case 2: return STATUS_CLOSED;
        case 3: return STATUS_NOT_STARTED;
        case 4: return STATUS_COMPLETED;
        case 5: return STATUS_ASSETS_NEEDED;
        case 6: return STATUS_CANCELED;
        case 7: return STATUS_BACKED_UP;
        case 8: return STATUS_USER_DEFINED;
        case 9: return STATUS_IN_WORK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Status> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(165);
    }

    private static final Status[] VALUES = values();

    public static Status valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Status)
  }

  /**
   * Protobuf enum {@code avs.SubGenre}
   */
  public enum SubGenre
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUB_GENRE_MIDDLE20TH_CENTURY = 0;</code>
     */
    SUB_GENRE_MIDDLE20TH_CENTURY(0),
    /**
     * <code>SUB_GENRE_AFRICAN_JAZZ = 1;</code>
     */
    SUB_GENRE_AFRICAN_JAZZ(1),
    /**
     * <code>SUB_GENRE_HARD_BOP = 2;</code>
     */
    SUB_GENRE_HARD_BOP(2),
    /**
     * <code>SUB_GENRE_NOUVELLE_CHANSON = 3;</code>
     */
    SUB_GENRE_NOUVELLE_CHANSON(3),
    /**
     * <code>SUB_GENRE_URBAN_CONTEMPORARY_GOSPEL = 4;</code>
     */
    SUB_GENRE_URBAN_CONTEMPORARY_GOSPEL(4),
    /**
     * <code>SUB_GENRE_CUMBIA = 5;</code>
     */
    SUB_GENRE_CUMBIA(5),
    /**
     * <code>SUB_GENRE_NEW_FLAMENCO = 6;</code>
     */
    SUB_GENRE_NEW_FLAMENCO(6),
    /**
     * <code>SUB_GENRE_SALVES = 7;</code>
     */
    SUB_GENRE_SALVES(7),
    /**
     * <code>SUB_GENRE_DARK_WAVE = 8;</code>
     */
    SUB_GENRE_DARK_WAVE(8),
    /**
     * <code>SUB_GENRE_INTERVIEW = 9;</code>
     */
    SUB_GENRE_INTERVIEW(9),
    /**
     * <code>SUB_GENRE_BARBERSHOP_MUSIC = 10;</code>
     */
    SUB_GENRE_BARBERSHOP_MUSIC(10),
    /**
     * <code>SUB_GENRE_BOOGIE = 11;</code>
     */
    SUB_GENRE_BOOGIE(11),
    /**
     * <code>SUB_GENRE_SURF = 12;</code>
     */
    SUB_GENRE_SURF(12),
    /**
     * <code>SUB_GENRE_PROGRESSIVE_TRANCE = 13;</code>
     */
    SUB_GENRE_PROGRESSIVE_TRANCE(13),
    /**
     * <code>SUB_GENRE_DEATH_METAL = 14;</code>
     */
    SUB_GENRE_DEATH_METAL(14),
    /**
     * <code>SUB_GENRE_MODERN_COUNTRY = 15;</code>
     */
    SUB_GENRE_MODERN_COUNTRY(15),
    /**
     * <code>SUB_GENRE_MBALAX = 16;</code>
     */
    SUB_GENRE_MBALAX(16),
    /**
     * <code>SUB_GENRE_EASTCOAST_HIP_HOP = 17;</code>
     */
    SUB_GENRE_EASTCOAST_HIP_HOP(17),
    /**
     * <code>SUB_GENRE_2_STEP_GARAGE = 18;</code>
     */
    SUB_GENRE_2_STEP_GARAGE(18),
    /**
     * <code>SUB_GENRE_POWER_POP = 19;</code>
     */
    SUB_GENRE_POWER_POP(19),
    /**
     * <code>SUB_GENRE_NORTENO = 20;</code>
     */
    SUB_GENRE_NORTENO(20),
    /**
     * <code>SUB_GENRE_GO_GO = 21;</code>
     */
    SUB_GENRE_GO_GO(21),
    /**
     * <code>SUB_GENRE_CELTIC = 22;</code>
     */
    SUB_GENRE_CELTIC(22),
    /**
     * <code>SUB_GENRE_PIANO_BLUES = 23;</code>
     */
    SUB_GENRE_PIANO_BLUES(23),
    /**
     * <code>SUB_GENRE_GOLDEN_AGE = 24;</code>
     */
    SUB_GENRE_GOLDEN_AGE(24),
    /**
     * <code>SUB_GENRE_MAKOSSA = 25;</code>
     */
    SUB_GENRE_MAKOSSA(25),
    /**
     * <code>SUB_GENRE_MODERN_LAIKO = 26;</code>
     */
    SUB_GENRE_MODERN_LAIKO(26),
    /**
     * <code>SUB_GENRE_ACOUSTIC_CHICAGO_BLUES = 27;</code>
     */
    SUB_GENRE_ACOUSTIC_CHICAGO_BLUES(27),
    /**
     * <code>SUB_GENRE_JUNGLE = 28;</code>
     */
    SUB_GENRE_JUNGLE(28),
    /**
     * <code>SUB_GENRE_PUNJABI_MUSIC = 29;</code>
     */
    SUB_GENRE_PUNJABI_MUSIC(29),
    /**
     * <code>SUB_GENRE_PSYCHEDELIC_SOUL = 30;</code>
     */
    SUB_GENRE_PSYCHEDELIC_SOUL(30),
    /**
     * <code>SUB_GENRE_TIBETAN_MUSIC = 31;</code>
     */
    SUB_GENRE_TIBETAN_MUSIC(31),
    /**
     * <code>SUB_GENRE_JUMP__MINUS___BLUES = 32;</code>
     */
    SUB_GENRE_JUMP__MINUS___BLUES(32),
    /**
     * <code>SUB_GENRE_GREGORIAN_CHANT = 33;</code>
     */
    SUB_GENRE_GREGORIAN_CHANT(33),
    /**
     * <code>SUB_GENRE_SCREAMO = 34;</code>
     */
    SUB_GENRE_SCREAMO(34),
    /**
     * <code>SUB_GENRE_CONSCIOUS_RAP = 35;</code>
     */
    SUB_GENRE_CONSCIOUS_RAP(35),
    /**
     * <code>SUB_GENRE_MIDDLE_BAROQUE = 36;</code>
     */
    SUB_GENRE_MIDDLE_BAROQUE(36),
    /**
     * <code>SUB_GENRE_WORLDBEAT = 37;</code>
     */
    SUB_GENRE_WORLDBEAT(37),
    /**
     * <code>SUB_GENRE_DEEP_SOUL = 38;</code>
     */
    SUB_GENRE_DEEP_SOUL(38),
    /**
     * <code>SUB_GENRE_DRUM_N_BASS = 39;</code>
     */
    SUB_GENRE_DRUM_N_BASS(39),
    /**
     * <code>SUB_GENRE_CARNATIC_MUSIC = 40;</code>
     */
    SUB_GENRE_CARNATIC_MUSIC(40),
    /**
     * <code>SUB_GENRE_MERSEYBEAT = 41;</code>
     */
    SUB_GENRE_MERSEYBEAT(41),
    /**
     * <code>SUB_GENRE_QUIET_STORM = 42;</code>
     */
    SUB_GENRE_QUIET_STORM(42),
    /**
     * <code>SUB_GENRE_NASHVILLE_SOUND = 43;</code>
     */
    SUB_GENRE_NASHVILLE_SOUND(43),
    /**
     * <code>SUB_GENRE_BRITISH_INVASION = 44;</code>
     */
    SUB_GENRE_BRITISH_INVASION(44),
    /**
     * <code>SUB_GENRE_SPEED_METAL = 45;</code>
     */
    SUB_GENRE_SPEED_METAL(45),
    /**
     * <code>SUB_GENRE_AMERICAN_PRIMITIVE_GUITAR = 46;</code>
     */
    SUB_GENRE_AMERICAN_PRIMITIVE_GUITAR(46),
    /**
     * <code>SUB_GENRE_OUTLAW_COUNTRY = 47;</code>
     */
    SUB_GENRE_OUTLAW_COUNTRY(47),
    /**
     * <code>SUB_GENRE_ALTERNATIVE_COUNTRY = 48;</code>
     */
    SUB_GENRE_ALTERNATIVE_COUNTRY(48),
    /**
     * <code>SUB_GENRE_ALTERNATIVE_POP = 49;</code>
     */
    SUB_GENRE_ALTERNATIVE_POP(49),
    /**
     * <code>SUB_GENRE_DIRTY_RAP = 50;</code>
     */
    SUB_GENRE_DIRTY_RAP(50),
    /**
     * <code>SUB_GENRE_INDIAN_MUSIC = 51;</code>
     */
    SUB_GENRE_INDIAN_MUSIC(51),
    /**
     * <code>SUB_GENRE_INDIAN_POP = 52;</code>
     */
    SUB_GENRE_INDIAN_POP(52),
    /**
     * <code>SUB_GENRE_MEDIEVAL = 53;</code>
     */
    SUB_GENRE_MEDIEVAL(53),
    /**
     * <code>SUB_GENRE_DUBSTEP_U_S = 54;</code>
     */
    SUB_GENRE_DUBSTEP_U_S(54),
    /**
     * <code>SUB_GENRE_THRASH_METAL = 55;</code>
     */
    SUB_GENRE_THRASH_METAL(55),
    /**
     * <code>SUB_GENRE_AMBIENT = 56;</code>
     */
    SUB_GENRE_AMBIENT(56),
    /**
     * <code>SUB_GENRE_OLD_TIME = 57;</code>
     */
    SUB_GENRE_OLD_TIME(57),
    /**
     * <code>SUB_GENRE_ELECTRONICA__FS___ECLECTIC = 58;</code>
     */
    SUB_GENRE_ELECTRONICA__FS___ECLECTIC(58),
    /**
     * <code>SUB_GENRE_DUBSTEP_U_K = 59;</code>
     */
    SUB_GENRE_DUBSTEP_U_K(59),
    /**
     * <code>SUB_GENRE_MARIACHI = 60;</code>
     */
    SUB_GENRE_MARIACHI(60),
    /**
     * <code>SUB_GENRE_COLOMBIAN_MUSIC = 61;</code>
     */
    SUB_GENRE_COLOMBIAN_MUSIC(61),
    /**
     * <code>SUB_GENRE_MADCHESTER = 62;</code>
     */
    SUB_GENRE_MADCHESTER(62),
    /**
     * <code>SUB_GENRE_SAMBA = 63;</code>
     */
    SUB_GENRE_SAMBA(63),
    /**
     * <code>SUB_GENRE_FOLK_BAROQUE = 64;</code>
     */
    SUB_GENRE_FOLK_BAROQUE(64),
    /**
     * <code>SUB_GENRE_RANCHERA = 65;</code>
     */
    SUB_GENRE_RANCHERA(65),
    /**
     * <code>SUB_GENRE_PHILLYSOUND = 66;</code>
     */
    SUB_GENRE_PHILLYSOUND(66),
    /**
     * <code>SUB_GENRE_BOLLYWOOD = 67;</code>
     */
    SUB_GENRE_BOLLYWOOD(67),
    /**
     * <code>SUB_GENRE_SYNTH_POP = 68;</code>
     */
    SUB_GENRE_SYNTH_POP(68),
    /**
     * <code>SUB_GENRE_IRISH_MUSIC = 69;</code>
     */
    SUB_GENRE_IRISH_MUSIC(69),
    /**
     * <code>SUB_GENRE_MODERN_CREATIVE = 70;</code>
     */
    SUB_GENRE_MODERN_CREATIVE(70),
    /**
     * <code>SUB_GENRE_SOUTH_AMERICAN_ROCK = 71;</code>
     */
    SUB_GENRE_SOUTH_AMERICAN_ROCK(71),
    /**
     * <code>SUB_GENRE_TWEE_POP = 72;</code>
     */
    SUB_GENRE_TWEE_POP(72),
    /**
     * <code>SUB_GENRE_AMBROSIAN_CHANT = 73;</code>
     */
    SUB_GENRE_AMBROSIAN_CHANT(73),
    /**
     * <code>SUB_GENRE_COUNTRY_ROCK = 74;</code>
     */
    SUB_GENRE_COUNTRY_ROCK(74),
    /**
     * <code>SUB_GENRE_GOTHIC_METAL = 75;</code>
     */
    SUB_GENRE_GOTHIC_METAL(75),
    /**
     * <code>SUB_GENRE_HIPLIFE = 76;</code>
     */
    SUB_GENRE_HIPLIFE(76),
    /**
     * <code>SUB_GENRE_SOFT_ROCK = 77;</code>
     */
    SUB_GENRE_SOFT_ROCK(77),
    /**
     * <code>SUB_GENRE_PROGRESSIVE_ROCK = 78;</code>
     */
    SUB_GENRE_PROGRESSIVE_ROCK(78),
    /**
     * <code>SUB_GENRE_JAZZ_HOUSE = 79;</code>
     */
    SUB_GENRE_JAZZ_HOUSE(79),
    /**
     * <code>SUB_GENRE_TRADITIONAL_COUNTRY = 80;</code>
     */
    SUB_GENRE_TRADITIONAL_COUNTRY(80),
    /**
     * <code>SUB_GENRE_EXOTICA = 81;</code>
     */
    SUB_GENRE_EXOTICA(81),
    /**
     * <code>SUB_GENRE_SERIALISM = 82;</code>
     */
    SUB_GENRE_SERIALISM(82),
    /**
     * <code>SUB_GENRE_SWING_REVIVAL = 83;</code>
     */
    SUB_GENRE_SWING_REVIVAL(83),
    /**
     * <code>SUB_GENRE_PLAINSONG = 84;</code>
     */
    SUB_GENRE_PLAINSONG(84),
    /**
     * <code>SUB_GENRE_NEAPOLITAN_SONG = 85;</code>
     */
    SUB_GENRE_NEAPOLITAN_SONG(85),
    /**
     * <code>SUB_GENRE_CANADIAN_FIDDLING = 86;</code>
     */
    SUB_GENRE_CANADIAN_FIDDLING(86),
    /**
     * <code>SUB_GENRE_EARLY_RENAISSANCE = 87;</code>
     */
    SUB_GENRE_EARLY_RENAISSANCE(87),
    /**
     * <code>SUB_GENRE_BIKUTSI = 88;</code>
     */
    SUB_GENRE_BIKUTSI(88),
    /**
     * <code>SUB_GENRE_POST_ROCK = 89;</code>
     */
    SUB_GENRE_POST_ROCK(89),
    /**
     * <code>SUB_GENRE_NEO_CLASSICAL = 90;</code>
     */
    SUB_GENRE_NEO_CLASSICAL(90),
    /**
     * <code>SUB_GENRE_HARDSTYLE = 91;</code>
     */
    SUB_GENRE_HARDSTYLE(91),
    /**
     * <code>SUB_GENRE_INDUSTRIAL = 92;</code>
     */
    SUB_GENRE_INDUSTRIAL(92),
    /**
     * <code>SUB_GENRE_HIGHLIFE = 93;</code>
     */
    SUB_GENRE_HIGHLIFE(93),
    /**
     * <code>SUB_GENRE_HAIR_METAL = 94;</code>
     */
    SUB_GENRE_HAIR_METAL(94),
    /**
     * <code>SUB_GENRE_LATE20TH_CENTURY = 95;</code>
     */
    SUB_GENRE_LATE20TH_CENTURY(95),
    /**
     * <code>SUB_GENRE_FOLK_REVIVAL = 96;</code>
     */
    SUB_GENRE_FOLK_REVIVAL(96),
    /**
     * <code>SUB_GENRE_COUNTRY_POP = 97;</code>
     */
    SUB_GENRE_COUNTRY_POP(97),
    /**
     * <code>SUB_GENRE_POLKA = 98;</code>
     */
    SUB_GENRE_POLKA(98),
    /**
     * <code>SUB_GENRE_HONKY_TONK = 99;</code>
     */
    SUB_GENRE_HONKY_TONK(99),
    /**
     * <code>SUB_GENRE_TRADITIONAL_ACOUSTIC = 100;</code>
     */
    SUB_GENRE_TRADITIONAL_ACOUSTIC(100),
    /**
     * <code>SUB_GENRE_BLUE_EYED_SOUL = 101;</code>
     */
    SUB_GENRE_BLUE_EYED_SOUL(101),
    /**
     * <code>SUB_GENRE_ZYDECO = 102;</code>
     */
    SUB_GENRE_ZYDECO(102),
    /**
     * <code>SUB_GENRE_TANGO = 103;</code>
     */
    SUB_GENRE_TANGO(103),
    /**
     * <code>SUB_GENRE_BIG_BEAT = 104;</code>
     */
    SUB_GENRE_BIG_BEAT(104),
    /**
     * <code>SUB_GENRE_ALTERNATIVE_DANCE = 105;</code>
     */
    SUB_GENRE_ALTERNATIVE_DANCE(105),
    /**
     * <code>SUB_GENRE_NEW_ROMANTIC = 106;</code>
     */
    SUB_GENRE_NEW_ROMANTIC(106),
    /**
     * <code>SUB_GENRE_NOISE_POP = 107;</code>
     */
    SUB_GENRE_NOISE_POP(107),
    /**
     * <code>SUB_GENRE_SKA = 108;</code>
     */
    SUB_GENRE_SKA(108),
    /**
     * <code>SUB_GENRE_NOISE_MUSIC = 109;</code>
     */
    SUB_GENRE_NOISE_MUSIC(109),
    /**
     * <code>SUB_GENRE_CAPOEIRA_MUSIC = 110;</code>
     */
    SUB_GENRE_CAPOEIRA_MUSIC(110),
    /**
     * <code>SUB_GENRE_FOLKTRONICA = 111;</code>
     */
    SUB_GENRE_FOLKTRONICA(111),
    /**
     * <code>SUB_GENRE_UNDERGROUND = 112;</code>
     */
    SUB_GENRE_UNDERGROUND(112),
    /**
     * <code>SUB_GENRE_ROMANTIC = 113;</code>
     */
    SUB_GENRE_ROMANTIC(113),
    /**
     * <code>SUB_GENRE_GABBA = 114;</code>
     */
    SUB_GENRE_GABBA(114),
    /**
     * <code>SUB_GENRE_CZECH_MUSIC = 115;</code>
     */
    SUB_GENRE_CZECH_MUSIC(115),
    /**
     * <code>SUB_GENRE_DOMINICAN_MUSIC = 116;</code>
     */
    SUB_GENRE_DOMINICAN_MUSIC(116),
    /**
     * <code>SUB_GENRE_BOOGALOO = 117;</code>
     */
    SUB_GENRE_BOOGALOO(117),
    /**
     * <code>SUB_GENRE_JOVEM_GUARDA = 118;</code>
     */
    SUB_GENRE_JOVEM_GUARDA(118),
    /**
     * <code>SUB_GENRE_JAZZ_POP = 119;</code>
     */
    SUB_GENRE_JAZZ_POP(119),
    /**
     * <code>SUB_GENRE_CHILEAN_MUSIC = 120;</code>
     */
    SUB_GENRE_CHILEAN_MUSIC(120),
    /**
     * <code>SUB_GENRE_SOUL_JAZZ = 121;</code>
     */
    SUB_GENRE_SOUL_JAZZ(121),
    /**
     * <code>SUB_GENRE_HARDCORE_PUNK = 122;</code>
     */
    SUB_GENRE_HARDCORE_PUNK(122),
    /**
     * <code>SUB_GENRE_AMBIENT_HOUSE = 123;</code>
     */
    SUB_GENRE_AMBIENT_HOUSE(123),
    /**
     * <code>SUB_GENRE_DUTCH_HOUSE = 124;</code>
     */
    SUB_GENRE_DUTCH_HOUSE(124),
    /**
     * <code>SUB_GENRE_ALTERNATIVE_ROCK = 125;</code>
     */
    SUB_GENRE_ALTERNATIVE_ROCK(125),
    /**
     * <code>SUB_GENRE_FLAMENCO = 126;</code>
     */
    SUB_GENRE_FLAMENCO(126),
    /**
     * <code>SUB_GENRE_ROCK_N_ROLL = 127;</code>
     */
    SUB_GENRE_ROCK_N_ROLL(127),
    /**
     * <code>SUB_GENRE_MIDDLE_EASTERN_MUSIC = 128;</code>
     */
    SUB_GENRE_MIDDLE_EASTERN_MUSIC(128),
    /**
     * <code>SUB_GENRE_DETROIT_HOUSE = 129;</code>
     */
    SUB_GENRE_DETROIT_HOUSE(129),
    /**
     * <code>SUB_GENRE_ELECTRIC_TEXAS_BLUES = 130;</code>
     */
    SUB_GENRE_ELECTRIC_TEXAS_BLUES(130),
    /**
     * <code>SUB_GENRE_BOOGIE_ROCK = 131;</code>
     */
    SUB_GENRE_BOOGIE_ROCK(131),
    /**
     * <code>SUB_GENRE_MBAQANGA = 132;</code>
     */
    SUB_GENRE_MBAQANGA(132),
    /**
     * <code>SUB_GENRE_TRANCE = 133;</code>
     */
    SUB_GENRE_TRANCE(133),
    /**
     * <code>SUB_GENRE_CHA_CHA_CHA = 134;</code>
     */
    SUB_GENRE_CHA_CHA_CHA(134),
    /**
     * <code>SUB_GENRE_SPANISH_MUSIC = 135;</code>
     */
    SUB_GENRE_SPANISH_MUSIC(135),
    /**
     * <code>SUB_GENRE_ALTERNATIVE_R__APO__N__APO___B = 136;</code>
     */
    SUB_GENRE_ALTERNATIVE_R__APO__N__APO___B(136),
    /**
     * <code>SUB_GENRE_EARLY_ROCK = 137;</code>
     */
    SUB_GENRE_EARLY_ROCK(137),
    /**
     * <code>SUB_GENRE_HARD_TRANCE = 138;</code>
     */
    SUB_GENRE_HARD_TRANCE(138),
    /**
     * <code>SUB_GENRE_ROOTS_REGGAE = 139;</code>
     */
    SUB_GENRE_ROOTS_REGGAE(139),
    /**
     * <code>SUB_GENRE_CARIBBEAN_POP = 140;</code>
     */
    SUB_GENRE_CARIBBEAN_POP(140),
    /**
     * <code>SUB_GENRE_LATE_BAROQUE = 141;</code>
     */
    SUB_GENRE_LATE_BAROQUE(141),
    /**
     * <code>SUB_GENRE_GERMAN_MUSIC = 142;</code>
     */
    SUB_GENRE_GERMAN_MUSIC(142),
    /**
     * <code>SUB_GENRE_EURODANCE = 143;</code>
     */
    SUB_GENRE_EURODANCE(143),
    /**
     * <code>SUB_GENRE_JAPANESE_POP = 144;</code>
     */
    SUB_GENRE_JAPANESE_POP(144),
    /**
     * <code>SUB_GENRE_BAROQUE = 145;</code>
     */
    SUB_GENRE_BAROQUE(145),
    /**
     * <code>SUB_GENRE_BOOGIE_WOOGIE = 146;</code>
     */
    SUB_GENRE_BOOGIE_WOOGIE(146),
    /**
     * <code>SUB_GENRE_SOUTHERN_RAP = 147;</code>
     */
    SUB_GENRE_SOUTHERN_RAP(147),
    /**
     * <code>SUB_GENRE_EXPERIMENTAL_ROCK = 148;</code>
     */
    SUB_GENRE_EXPERIMENTAL_ROCK(148),
    /**
     * <code>SUB_GENRE_SOUKOUS = 149;</code>
     */
    SUB_GENRE_SOUKOUS(149),
    /**
     * <code>SUB_GENRE_CONVERSATION = 150;</code>
     */
    SUB_GENRE_CONVERSATION(150),
    /**
     * <code>SUB_GENRE_CANTO_POP = 151;</code>
     */
    SUB_GENRE_CANTO_POP(151),
    /**
     * <code>SUB_GENRE_BEBOP = 152;</code>
     */
    SUB_GENRE_BEBOP(152),
    /**
     * <code>SUB_GENRE_ALT_METAL = 153;</code>
     */
    SUB_GENRE_ALT_METAL(153),
    /**
     * <code>SUB_GENRE_GAUCHO_MUSIC = 154;</code>
     */
    SUB_GENRE_GAUCHO_MUSIC(154),
    /**
     * <code>SUB_GENRE_CHRISTIAN_RAP = 155;</code>
     */
    SUB_GENRE_CHRISTIAN_RAP(155),
    /**
     * <code>SUB_GENRE_DEEP_HOUSE = 156;</code>
     */
    SUB_GENRE_DEEP_HOUSE(156),
    /**
     * <code>SUB_GENRE_BRIT_POP = 157;</code>
     */
    SUB_GENRE_BRIT_POP(157),
    /**
     * <code>SUB_GENRE_DIXIELAND = 158;</code>
     */
    SUB_GENRE_DIXIELAND(158),
    /**
     * <code>SUB_GENRE_CLASSICAL_CROSSOVER = 159;</code>
     */
    SUB_GENRE_CLASSICAL_CROSSOVER(159),
    /**
     * <code>SUB_GENRE_JEWISH_MUSIC = 160;</code>
     */
    SUB_GENRE_JEWISH_MUSIC(160),
    /**
     * <code>SUB_GENRE_EARLY20TH_CENTURY = 161;</code>
     */
    SUB_GENRE_EARLY20TH_CENTURY(161),
    /**
     * <code>SUB_GENRE_TWO_TONE = 162;</code>
     */
    SUB_GENRE_TWO_TONE(162),
    /**
     * <code>SUB_GENRE_AMERICAN_FOLK = 163;</code>
     */
    SUB_GENRE_AMERICAN_FOLK(163),
    /**
     * <code>SUB_GENRE_SERTANEJO = 164;</code>
     */
    SUB_GENRE_SERTANEJO(164),
    /**
     * <code>SUB_GENRE_N_D_W = 165;</code>
     */
    SUB_GENRE_N_D_W(165),
    /**
     * <code>SUB_GENRE_OI__BANG__ = 166;</code>
     */
    SUB_GENRE_OI__BANG__(166),
    /**
     * <code>SUB_GENRE_ACID_TECHNO = 167;</code>
     */
    SUB_GENRE_ACID_TECHNO(167),
    /**
     * <code>SUB_GENRE_MODERN_POP = 168;</code>
     */
    SUB_GENRE_MODERN_POP(168),
    /**
     * <code>SUB_GENRE_IMPRESSIONISM = 169;</code>
     */
    SUB_GENRE_IMPRESSIONISM(169),
    /**
     * <code>SUB_GENRE_BLUEGRASS = 170;</code>
     */
    SUB_GENRE_BLUEGRASS(170),
    /**
     * <code>SUB_GENRE_SOUTHERN_GOSPEL = 171;</code>
     */
    SUB_GENRE_SOUTHERN_GOSPEL(171),
    /**
     * <code>SUB_GENRE_KRAUTROCK = 172;</code>
     */
    SUB_GENRE_KRAUTROCK(172),
    /**
     * <code>SUB_GENRE_SON = 173;</code>
     */
    SUB_GENRE_SON(173),
    /**
     * <code>SUB_GENRE_GYPSY_JAZZ = 174;</code>
     */
    SUB_GENRE_GYPSY_JAZZ(174),
    /**
     * <code>SUB_GENRE_TURKISH_CLASSICAL_MUSIC = 175;</code>
     */
    SUB_GENRE_TURKISH_CLASSICAL_MUSIC(175),
    /**
     * <code>SUB_GENRE_NEO_TRADITIONAL_COUNTRY = 176;</code>
     */
    SUB_GENRE_NEO_TRADITIONAL_COUNTRY(176),
    /**
     * <code>SUB_GENRE_BASSLINE = 177;</code>
     */
    SUB_GENRE_BASSLINE(177),
    /**
     * <code>SUB_GENRE_MEXICAN_MUSIC = 178;</code>
     */
    SUB_GENRE_MEXICAN_MUSIC(178),
    /**
     * <code>SUB_GENRE_SAMBA_ROCK = 179;</code>
     */
    SUB_GENRE_SAMBA_ROCK(179),
    /**
     * <code>SUB_GENRE_MINIMALISM = 180;</code>
     */
    SUB_GENRE_MINIMALISM(180),
    /**
     * <code>SUB_GENRE_KUDURO = 181;</code>
     */
    SUB_GENRE_KUDURO(181),
    /**
     * <code>SUB_GENRE_SKIT = 182;</code>
     */
    SUB_GENRE_SKIT(182),
    /**
     * <code>SUB_GENRE_DOWNTEMPO = 183;</code>
     */
    SUB_GENRE_DOWNTEMPO(183),
    /**
     * <code>SUB_GENRE_AFRICAN_POP = 184;</code>
     */
    SUB_GENRE_AFRICAN_POP(184),
    /**
     * <code>SUB_GENRE_GRINDCORE = 185;</code>
     */
    SUB_GENRE_GRINDCORE(185),
    /**
     * <code>SUB_GENRE_INDIE_POP = 186;</code>
     */
    SUB_GENRE_INDIE_POP(186),
    /**
     * <code>SUB_GENRE_NATIONALIST = 187;</code>
     */
    SUB_GENRE_NATIONALIST(187),
    /**
     * <code>SUB_GENRE_TEXAS_COUNTRY = 188;</code>
     */
    SUB_GENRE_TEXAS_COUNTRY(188),
    /**
     * <code>SUB_GENRE_DELTA_BLUES = 189;</code>
     */
    SUB_GENRE_DELTA_BLUES(189),
    /**
     * <code>SUB_GENRE_BACHATA = 190;</code>
     */
    SUB_GENRE_BACHATA(190),
    /**
     * <code>SUB_GENRE_FUNK_CARIOCA = 191;</code>
     */
    SUB_GENRE_FUNK_CARIOCA(191),
    /**
     * <code>SUB_GENRE_KOREAN_POP = 192;</code>
     */
    SUB_GENRE_KOREAN_POP(192),
    /**
     * <code>SUB_GENRE_FUTURE_GARAGE = 193;</code>
     */
    SUB_GENRE_FUTURE_GARAGE(193),
    /**
     * <code>SUB_GENRE_CLASSIC_FEMALE_BLUES = 194;</code>
     */
    SUB_GENRE_CLASSIC_FEMALE_BLUES(194),
    /**
     * <code>SUB_GENRE_EXPRESSIONISM = 195;</code>
     */
    SUB_GENRE_EXPRESSIONISM(195),
    /**
     * <code>SUB_GENRE_SHOEGAZE = 196;</code>
     */
    SUB_GENRE_SHOEGAZE(196),
    /**
     * <code>SUB_GENRE_ARGENTINIAN_MUSIC = 197;</code>
     */
    SUB_GENRE_ARGENTINIAN_MUSIC(197),
    /**
     * <code>SUB_GENRE_KLEZMER = 198;</code>
     */
    SUB_GENRE_KLEZMER(198),
    /**
     * <code>SUB_GENRE_INSTRUMENTAL_HIP_HOP = 199;</code>
     */
    SUB_GENRE_INSTRUMENTAL_HIP_HOP(199),
    /**
     * <code>SUB_GENRE_NEW_WAVE = 200;</code>
     */
    SUB_GENRE_NEW_WAVE(200),
    /**
     * <code>SUB_GENRE_BOSSA_NOVA = 201;</code>
     */
    SUB_GENRE_BOSSA_NOVA(201),
    /**
     * <code>SUB_GENRE_SCHRANZ = 202;</code>
     */
    SUB_GENRE_SCHRANZ(202),
    /**
     * <code>SUB_GENRE_NORTH_AMERICAN_FOLK = 203;</code>
     */
    SUB_GENRE_NORTH_AMERICAN_FOLK(203),
    /**
     * <code>SUB_GENRE_ORCHESTRAL_FUSION = 204;</code>
     */
    SUB_GENRE_ORCHESTRAL_FUSION(204),
    /**
     * <code>SUB_GENRE_DUBTRONICA = 205;</code>
     */
    SUB_GENRE_DUBTRONICA(205),
    /**
     * <code>SUB_GENRE_NEW_JACK_SWING = 206;</code>
     */
    SUB_GENRE_NEW_JACK_SWING(206),
    /**
     * <code>SUB_GENRE_SPECTRALISM = 207;</code>
     */
    SUB_GENRE_SPECTRALISM(207),
    /**
     * <code>SUB_GENRE_NEW_AGE = 208;</code>
     */
    SUB_GENRE_NEW_AGE(208),
    /**
     * <code>SUB_GENRE_SOUTHERN_SOUL = 209;</code>
     */
    SUB_GENRE_SOUTHERN_SOUL(209),
    /**
     * <code>SUB_GENRE_PRE_CLASSICAL = 210;</code>
     */
    SUB_GENRE_PRE_CLASSICAL(210),
    /**
     * <code>SUB_GENRE_TRIP_HOP = 211;</code>
     */
    SUB_GENRE_TRIP_HOP(211),
    /**
     * <code>SUB_GENRE_ROCKABILLY = 212;</code>
     */
    SUB_GENRE_ROCKABILLY(212),
    /**
     * <code>SUB_GENRE_DUB = 213;</code>
     */
    SUB_GENRE_DUB(213),
    /**
     * <code>SUB_GENRE_MODERN_JAZZ = 214;</code>
     */
    SUB_GENRE_MODERN_JAZZ(214),
    /**
     * <code>SUB_GENRE_HARD_ROCK = 215;</code>
     */
    SUB_GENRE_HARD_ROCK(215),
    /**
     * <code>SUB_GENRE_MODERN_R__APO__N__APO___B = 216;</code>
     */
    SUB_GENRE_MODERN_R__APO__N__APO___B(216),
    /**
     * <code>SUB_GENRE_BRITISH_FOLK = 217;</code>
     */
    SUB_GENRE_BRITISH_FOLK(217),
    /**
     * <code>SUB_GENRE_HARDCORE = 218;</code>
     */
    SUB_GENRE_HARDCORE(218),
    /**
     * <code>SUB_GENRE_BRITISH_DANCE_BAND = 219;</code>
     */
    SUB_GENRE_BRITISH_DANCE_BAND(219),
    /**
     * <code>SUB_GENRE_INDUSTRIAL_METAL = 220;</code>
     */
    SUB_GENRE_INDUSTRIAL_METAL(220),
    /**
     * <code>SUB_GENRE_CRUNK = 221;</code>
     */
    SUB_GENRE_CRUNK(221),
    /**
     * <code>SUB_GENRE_LATIN_JAZZ = 222;</code>
     */
    SUB_GENRE_LATIN_JAZZ(222),
    /**
     * <code>SUB_GENRE_CLASSIC_ROCK = 223;</code>
     */
    SUB_GENRE_CLASSIC_ROCK(223),
    /**
     * <code>SUB_GENRE_FUNK_METAL = 224;</code>
     */
    SUB_GENRE_FUNK_METAL(224),
    /**
     * <code>SUB_GENRE_PSYCHEDELIC_TRANCE = 225;</code>
     */
    SUB_GENRE_PSYCHEDELIC_TRANCE(225),
    /**
     * <code>SUB_GENRE_EXPERIMENTAL_HIP_HOP = 226;</code>
     */
    SUB_GENRE_EXPERIMENTAL_HIP_HOP(226),
    /**
     * <code>SUB_GENRE_BRAZILIAN_POP = 227;</code>
     */
    SUB_GENRE_BRAZILIAN_POP(227),
    /**
     * <code>SUB_GENRE_JAZZ_FUSION = 228;</code>
     */
    SUB_GENRE_JAZZ_FUSION(228),
    /**
     * <code>SUB_GENRE_HEARTLAND_ROCK = 229;</code>
     */
    SUB_GENRE_HEARTLAND_ROCK(229),
    /**
     * <code>SUB_GENRE_CANADIAN_FOLK = 230;</code>
     */
    SUB_GENRE_CANADIAN_FOLK(230),
    /**
     * <code>SUB_GENRE_EXPERIMENTAL_CLASSICAL = 231;</code>
     */
    SUB_GENRE_EXPERIMENTAL_CLASSICAL(231),
    /**
     * <code>SUB_GENRE_CONTEMPORARY_R__APO__N__APO___B = 232;</code>
     */
    SUB_GENRE_CONTEMPORARY_R__APO__N__APO___B(232),
    /**
     * <code>SUB_GENRE_COUNTRY_BLUES = 233;</code>
     */
    SUB_GENRE_COUNTRY_BLUES(233),
    /**
     * <code>SUB_GENRE_HIP_HOUSE = 234;</code>
     */
    SUB_GENRE_HIP_HOUSE(234),
    /**
     * <code>SUB_GENRE_CHICAGO_BLUES = 235;</code>
     */
    SUB_GENRE_CHICAGO_BLUES(235),
    /**
     * <code>SUB_GENRE_GARAGE_ROCK = 236;</code>
     */
    SUB_GENRE_GARAGE_ROCK(236),
    /**
     * <code>SUB_GENRE_MONOLOGUE = 237;</code>
     */
    SUB_GENRE_MONOLOGUE(237),
    /**
     * <code>SUB_GENRE_HINDUSTANI_CLASSICAL_MUSIC = 238;</code>
     */
    SUB_GENRE_HINDUSTANI_CLASSICAL_MUSIC(238),
    /**
     * <code>SUB_GENRE_BYZANTINE_CHANT = 239;</code>
     */
    SUB_GENRE_BYZANTINE_CHANT(239),
    /**
     * <code>SUB_GENRE_SPIRITUAL = 240;</code>
     */
    SUB_GENRE_SPIRITUAL(240),
    /**
     * <code>SUB_GENRE_AFRICAN_MUSIC = 241;</code>
     */
    SUB_GENRE_AFRICAN_MUSIC(241),
    /**
     * <code>SUB_GENRE_CARIBBEAN_MUSIC = 242;</code>
     */
    SUB_GENRE_CARIBBEAN_MUSIC(242),
    /**
     * <code>SUB_GENRE_REGIONAL_MEXICAN = 243;</code>
     */
    SUB_GENRE_REGIONAL_MEXICAN(243),
    /**
     * <code>SUB_GENRE_MIAMI_BASS = 244;</code>
     */
    SUB_GENRE_MIAMI_BASS(244),
    /**
     * <code>SUB_GENRE_PIL__OI__N = 245;</code>
     */
    SUB_GENRE_PIL__OI__N(245),
    /**
     * <code>SUB_GENRE_SWING = 246;</code>
     */
    SUB_GENRE_SWING(246),
    /**
     * <code>SUB_GENRE_BRAZILIAN = 247;</code>
     */
    SUB_GENRE_BRAZILIAN(247),
    /**
     * <code>SUB_GENRE_O_G_FUNK = 248;</code>
     */
    SUB_GENRE_O_G_FUNK(248),
    /**
     * <code>SUB_GENRE_USER_DEFINED = 249;</code>
     */
    SUB_GENRE_USER_DEFINED(249),
    /**
     * <code>SUB_GENRE_MODERN_BLUES = 250;</code>
     */
    SUB_GENRE_MODERN_BLUES(250),
    /**
     * <code>SUB_GENRE_GLITCH = 251;</code>
     */
    SUB_GENRE_GLITCH(251),
    /**
     * <code>SUB_GENRE_NEW_MEXICO_MUSIC = 252;</code>
     */
    SUB_GENRE_NEW_MEXICO_MUSIC(252),
    /**
     * <code>SUB_GENRE_PROGRESSIVE_METAL = 253;</code>
     */
    SUB_GENRE_PROGRESSIVE_METAL(253),
    /**
     * <code>SUB_GENRE_EARLY_BAROQUE = 254;</code>
     */
    SUB_GENRE_EARLY_BAROQUE(254),
    /**
     * <code>SUB_GENRE_EXPERIMENTAL_ELECTRONIC = 255;</code>
     */
    SUB_GENRE_EXPERIMENTAL_ELECTRONIC(255),
    /**
     * <code>SUB_GENRE_CLASSIC_R__APO__N__APO___B = 256;</code>
     */
    SUB_GENRE_CLASSIC_R__APO__N__APO___B(256),
    /**
     * <code>SUB_GENRE_MODAL_JAZZ = 257;</code>
     */
    SUB_GENRE_MODAL_JAZZ(257),
    /**
     * <code>SUB_GENRE_TRIBAL_HOUSE = 258;</code>
     */
    SUB_GENRE_TRIBAL_HOUSE(258),
    /**
     * <code>SUB_GENRE_GERMAN_POP = 259;</code>
     */
    SUB_GENRE_GERMAN_POP(259),
    /**
     * <code>SUB_GENRE_FRENCH_HOUSE = 260;</code>
     */
    SUB_GENRE_FRENCH_HOUSE(260),
    /**
     * <code>SUB_GENRE_ETHIOPIAN_JAZZ = 261;</code>
     */
    SUB_GENRE_ETHIOPIAN_JAZZ(261),
    /**
     * <code>SUB_GENRE_NEW_ORLEANS_R__APO__N__APO___B = 262;</code>
     */
    SUB_GENRE_NEW_ORLEANS_R__APO__N__APO___B(262),
    /**
     * <code>SUB_GENRE_SALSA = 263;</code>
     */
    SUB_GENRE_SALSA(263),
    /**
     * <code>SUB_GENRE_TURKISH_MUSIC = 264;</code>
     */
    SUB_GENRE_TURKISH_MUSIC(264),
    /**
     * <code>SUB_GENRE_SOUL = 265;</code>
     */
    SUB_GENRE_SOUL(265),
    /**
     * <code>SUB_GENRE_INDIE_ROCK = 266;</code>
     */
    SUB_GENRE_INDIE_ROCK(266),
    /**
     * <code>SUB_GENRE_ENGLISH_FOLK = 267;</code>
     */
    SUB_GENRE_ENGLISH_FOLK(267),
    /**
     * <code>SUB_GENRE_THIRD_WAVE_SKA = 268;</code>
     */
    SUB_GENRE_THIRD_WAVE_SKA(268),
    /**
     * <code>SUB_GENRE_JAMAICAN_MUSIC = 269;</code>
     */
    SUB_GENRE_JAMAICAN_MUSIC(269),
    /**
     * <code>SUB_GENRE_ITALO_DISCO = 270;</code>
     */
    SUB_GENRE_ITALO_DISCO(270),
    /**
     * <code>SUB_GENRE_CHICAGO_SOUL = 271;</code>
     */
    SUB_GENRE_CHICAGO_SOUL(271),
    /**
     * <code>SUB_GENRE_BLACK_METAL = 272;</code>
     */
    SUB_GENRE_BLACK_METAL(272),
    /**
     * <code>SUB_GENRE_PROGRESSIVE_HOUSE = 273;</code>
     */
    SUB_GENRE_PROGRESSIVE_HOUSE(273),
    /**
     * <code>SUB_GENRE_U_K_FUNKY = 274;</code>
     */
    SUB_GENRE_U_K_FUNKY(274),
    /**
     * <code>SUB_GENRE_LATIN_FREESTYLE = 275;</code>
     */
    SUB_GENRE_LATIN_FREESTYLE(275),
    /**
     * <code>SUB_GENRE_DANCEHALL = 276;</code>
     */
    SUB_GENRE_DANCEHALL(276),
    /**
     * <code>SUB_GENRE_TEJANO = 277;</code>
     */
    SUB_GENRE_TEJANO(277),
    /**
     * <code>SUB_GENRE_JUG_ENSEMBLE = 278;</code>
     */
    SUB_GENRE_JUG_ENSEMBLE(278),
    /**
     * <code>SUB_GENRE_CUECA = 279;</code>
     */
    SUB_GENRE_CUECA(279),
    /**
     * <code>SUB_GENRE_BREGA = 280;</code>
     */
    SUB_GENRE_BREGA(280),
    /**
     * <code>SUB_GENRE_ELECTRO_HOUSE = 281;</code>
     */
    SUB_GENRE_ELECTRO_HOUSE(281),
    /**
     * <code>SUB_GENRE_SCHLAGER = 282;</code>
     */
    SUB_GENRE_SCHLAGER(282),
    /**
     * <code>SUB_GENRE_HI_N_R_G = 283;</code>
     */
    SUB_GENRE_HI_N_R_G(283),
    /**
     * <code>SUB_GENRE_INDONESIAN_POP = 284;</code>
     */
    SUB_GENRE_INDONESIAN_POP(284),
    /**
     * <code>SUB_GENRE_BRAZILIAN_MUSIC = 285;</code>
     */
    SUB_GENRE_BRAZILIAN_MUSIC(285),
    /**
     * <code>SUB_GENRE_IRISH_FOLK = 286;</code>
     */
    SUB_GENRE_IRISH_FOLK(286),
    /**
     * <code>SUB_GENRE_NU_DISCO = 287;</code>
     */
    SUB_GENRE_NU_DISCO(287),
    /**
     * <code>SUB_GENRE_CHINESE_POP = 288;</code>
     */
    SUB_GENRE_CHINESE_POP(288),
    /**
     * <code>SUB_GENRE_RENAISSANCE = 289;</code>
     */
    SUB_GENRE_RENAISSANCE(289),
    /**
     * <code>SUB_GENRE_MINIMAL_HOUSE = 290;</code>
     */
    SUB_GENRE_MINIMAL_HOUSE(290),
    /**
     * <code>SUB_GENRE_MEMPHIS_SOUL = 291;</code>
     */
    SUB_GENRE_MEMPHIS_SOUL(291),
    /**
     * <code>SUB_GENRE_SCOTTISH_FOLK = 292;</code>
     */
    SUB_GENRE_SCOTTISH_FOLK(292),
    /**
     * <code>SUB_GENRE_NEW_ORLEANS_BLUES = 293;</code>
     */
    SUB_GENRE_NEW_ORLEANS_BLUES(293),
    /**
     * <code>SUB_GENRE_MINNEAPOLIS_FUNK = 294;</code>
     */
    SUB_GENRE_MINNEAPOLIS_FUNK(294),
    /**
     * <code>SUB_GENRE_GOTHIC_ROCK = 295;</code>
     */
    SUB_GENRE_GOTHIC_ROCK(295),
    /**
     * <code>SUB_GENRE_SYNTHWAVE = 296;</code>
     */
    SUB_GENRE_SYNTHWAVE(296),
    /**
     * <code>SUB_GENRE_GUARACHA = 297;</code>
     */
    SUB_GENRE_GUARACHA(297),
    /**
     * <code>SUB_GENRE_TRADITIONAL_ELECTRIC = 298;</code>
     */
    SUB_GENRE_TRADITIONAL_ELECTRIC(298),
    /**
     * <code>SUB_GENRE_COOL_JAZZ = 299;</code>
     */
    SUB_GENRE_COOL_JAZZ(299),
    /**
     * <code>SUB_GENRE_PUNK = 300;</code>
     */
    SUB_GENRE_PUNK(300),
    /**
     * <code>SUB_GENRE_FADO = 301;</code>
     */
    SUB_GENRE_FADO(301),
    /**
     * <code>SUB_GENRE_METAL = 302;</code>
     */
    SUB_GENRE_METAL(302),
    /**
     * <code>SUB_GENRE_WORK_SONGS = 303;</code>
     */
    SUB_GENRE_WORK_SONGS(303),
    /**
     * <code>SUB_GENRE_DOO_WOP = 304;</code>
     */
    SUB_GENRE_DOO_WOP(304),
    /**
     * <code>SUB_GENRE_20TH_CENTURY = 305;</code>
     */
    SUB_GENRE_20TH_CENTURY(305),
    /**
     * <code>SUB_GENRE_LATIN_HOUSE = 306;</code>
     */
    SUB_GENRE_LATIN_HOUSE(306),
    /**
     * <code>SUB_GENRE_SMOOTH_JAZZ = 307;</code>
     */
    SUB_GENRE_SMOOTH_JAZZ(307),
    /**
     * <code>SUB_GENRE_I_D_M = 308;</code>
     */
    SUB_GENRE_I_D_M(308),
    /**
     * <code>SUB_GENRE_SWAMP_BLUES = 309;</code>
     */
    SUB_GENRE_SWAMP_BLUES(309),
    /**
     * <code>SUB_GENRE_EARLY_ELECTRONIC = 310;</code>
     */
    SUB_GENRE_EARLY_ELECTRONIC(310),
    /**
     * <code>SUB_GENRE_WESTERN_SWING = 311;</code>
     */
    SUB_GENRE_WESTERN_SWING(311),
    /**
     * <code>SUB_GENRE_KWAITO = 312;</code>
     */
    SUB_GENRE_KWAITO(312),
    /**
     * <code>SUB_GENRE_ITALIAN_MUSIC = 313;</code>
     */
    SUB_GENRE_ITALIAN_MUSIC(313),
    /**
     * <code>SUB_GENRE_POP_ROCK = 314;</code>
     */
    SUB_GENRE_POP_ROCK(314),
    /**
     * <code>SUB_GENRE_POST_HARDCORE = 315;</code>
     */
    SUB_GENRE_POST_HARDCORE(315),
    /**
     * <code>SUB_GENRE_NOISE_ROCK = 316;</code>
     */
    SUB_GENRE_NOISE_ROCK(316),
    /**
     * <code>SUB_GENRE_PSYCHEDELIC_POP = 317;</code>
     */
    SUB_GENRE_PSYCHEDELIC_POP(317),
    /**
     * <code>SUB_GENRE_REPENTE = 318;</code>
     */
    SUB_GENRE_REPENTE(318),
    /**
     * <code>SUB_GENRE_PUERTO_RICAN_MUSIC = 319;</code>
     */
    SUB_GENRE_PUERTO_RICAN_MUSIC(319),
    /**
     * <code>SUB_GENRE_WEST_COAST_SOUL = 320;</code>
     */
    SUB_GENRE_WEST_COAST_SOUL(320),
    /**
     * <code>SUB_GENRE_INDONESIAN_MUSIC = 321;</code>
     */
    SUB_GENRE_INDONESIAN_MUSIC(321),
    /**
     * <code>SUB_GENRE_DIMOTIKO = 322;</code>
     */
    SUB_GENRE_DIMOTIKO(322),
    /**
     * <code>SUB_GENRE_DISCO = 323;</code>
     */
    SUB_GENRE_DISCO(323),
    /**
     * <code>SUB_GENRE_U_K_GARAGE = 324;</code>
     */
    SUB_GENRE_U_K_GARAGE(324),
    /**
     * <code>SUB_GENRE_GLAM_ROCK = 325;</code>
     */
    SUB_GENRE_GLAM_ROCK(325),
    /**
     * <code>SUB_GENRE_ALTERNATIVE_RAP = 326;</code>
     */
    SUB_GENRE_ALTERNATIVE_RAP(326),
    /**
     * <code>SUB_GENRE_POST_CLASSICAL = 327;</code>
     */
    SUB_GENRE_POST_CLASSICAL(327),
    /**
     * <code>SUB_GENRE_INDIETRONICA = 328;</code>
     */
    SUB_GENRE_INDIETRONICA(328),
    /**
     * <code>SUB_GENRE_CLASSIC_GOSPEL = 329;</code>
     */
    SUB_GENRE_CLASSIC_GOSPEL(329),
    /**
     * <code>SUB_GENRE_TRADITIONAL_JAZZ = 330;</code>
     */
    SUB_GENRE_TRADITIONAL_JAZZ(330),
    /**
     * <code>SUB_GENRE_MARACATU = 331;</code>
     */
    SUB_GENRE_MARACATU(331),
    /**
     * <code>SUB_GENRE_CORRIDOS = 332;</code>
     */
    SUB_GENRE_CORRIDOS(332),
    /**
     * <code>SUB_GENRE_CONTRADANZA = 333;</code>
     */
    SUB_GENRE_CONTRADANZA(333),
    /**
     * <code>SUB_GENRE_GRIME = 334;</code>
     */
    SUB_GENRE_GRIME(334),
    /**
     * <code>SUB_GENRE_BRITISH_BLUES = 335;</code>
     */
    SUB_GENRE_BRITISH_BLUES(335),
    /**
     * <code>SUB_GENRE_FUNK = 336;</code>
     */
    SUB_GENRE_FUNK(336),
    /**
     * <code>SUB_GENRE_INDIE_FOLK = 337;</code>
     */
    SUB_GENRE_INDIE_FOLK(337),
    /**
     * <code>SUB_GENRE_KIZOMBA = 338;</code>
     */
    SUB_GENRE_KIZOMBA(338),
    /**
     * <code>SUB_GENRE_DIGITAL_HARDCORE = 339;</code>
     */
    SUB_GENRE_DIGITAL_HARDCORE(339),
    /**
     * <code>SUB_GENRE_NEO_ROMANTIC = 340;</code>
     */
    SUB_GENRE_NEO_ROMANTIC(340),
    /**
     * <code>SUB_GENRE_TROPICALIA = 341;</code>
     */
    SUB_GENRE_TROPICALIA(341),
    /**
     * <code>SUB_GENRE_POP_RAP = 342;</code>
     */
    SUB_GENRE_POP_RAP(342),
    /**
     * <code>SUB_GENRE_COUNTRY_RAP = 343;</code>
     */
    SUB_GENRE_COUNTRY_RAP(343),
    /**
     * <code>SUB_GENRE_KAYOKYOKU = 344;</code>
     */
    SUB_GENRE_KAYOKYOKU(344),
    /**
     * <code>SUB_GENRE_WELSH_FOLK = 345;</code>
     */
    SUB_GENRE_WELSH_FOLK(345),
    /**
     * <code>SUB_GENRE_BALINESE_MUSIC = 346;</code>
     */
    SUB_GENRE_BALINESE_MUSIC(346),
    /**
     * <code>SUB_GENRE_ACOUSMATIC = 347;</code>
     */
    SUB_GENRE_ACOUSMATIC(347),
    /**
     * <code>SUB_GENRE_MINIMAL_TECHNO = 348;</code>
     */
    SUB_GENRE_MINIMAL_TECHNO(348),
    /**
     * <code>SUB_GENRE_AXE = 349;</code>
     */
    SUB_GENRE_AXE(349),
    /**
     * <code>SUB_GENRE_ACID_HOUSE = 350;</code>
     */
    SUB_GENRE_ACID_HOUSE(350),
    /**
     * <code>SUB_GENRE_AFOXE = 351;</code>
     */
    SUB_GENRE_AFOXE(351),
    /**
     * <code>SUB_GENRE_PSYCHOBILLY = 352;</code>
     */
    SUB_GENRE_PSYCHOBILLY(352),
    /**
     * <code>SUB_GENRE_ELECTRIC_FOLK = 353;</code>
     */
    SUB_GENRE_ELECTRIC_FOLK(353),
    /**
     * <code>SUB_GENRE_ARS_NOVA = 354;</code>
     */
    SUB_GENRE_ARS_NOVA(354),
    /**
     * <code>SUB_GENRE_CLASSICAL = 355;</code>
     */
    SUB_GENRE_CLASSICAL(355),
    /**
     * <code>SUB_GENRE_STONER_ROCK = 356;</code>
     */
    SUB_GENRE_STONER_ROCK(356),
    /**
     * <code>SUB_GENRE_TECH_HOUSE = 357;</code>
     */
    SUB_GENRE_TECH_HOUSE(357),
    /**
     * <code>SUB_GENRE_EMO_ROCK = 358;</code>
     */
    SUB_GENRE_EMO_ROCK(358),
    /**
     * <code>SUB_GENRE_M_P_B = 359;</code>
     */
    SUB_GENRE_M_P_B(359),
    /**
     * <code>SUB_GENRE_POST_BOP = 360;</code>
     */
    SUB_GENRE_POST_BOP(360),
    /**
     * <code>SUB_GENRE_WORLD_FUSION_JAZZ = 361;</code>
     */
    SUB_GENRE_WORLD_FUSION_JAZZ(361),
    /**
     * <code>SUB_GENRE_ROOTS = 362;</code>
     */
    SUB_GENRE_ROOTS(362),
    /**
     * <code>SUB_GENRE_FIRST_VIENNESE_SCHOOL = 363;</code>
     */
    SUB_GENRE_FIRST_VIENNESE_SCHOOL(363),
    /**
     * <code>SUB_GENRE_LATE_RENAISSANCE = 364;</code>
     */
    SUB_GENRE_LATE_RENAISSANCE(364),
    /**
     * <code>SUB_GENRE_JAZZ_BLUES = 365;</code>
     */
    SUB_GENRE_JAZZ_BLUES(365),
    /**
     * <code>SUB_GENRE_HARDCORE_BREAKBEAT = 366;</code>
     */
    SUB_GENRE_HARDCORE_BREAKBEAT(366),
    /**
     * <code>SUB_GENRE_SEA_SHANTIES = 367;</code>
     */
    SUB_GENRE_SEA_SHANTIES(367),
    /**
     * <code>SUB_GENRE_ROMANIAN_MUSIC = 368;</code>
     */
    SUB_GENRE_ROMANIAN_MUSIC(368),
    /**
     * <code>SUB_GENRE_JAZZ_FUNK = 369;</code>
     */
    SUB_GENRE_JAZZ_FUNK(369),
    /**
     * <code>SUB_GENRE_TRADITIONAL_POP = 370;</code>
     */
    SUB_GENRE_TRADITIONAL_POP(370),
    /**
     * <code>SUB_GENRE_POETRY = 371;</code>
     */
    SUB_GENRE_POETRY(371),
    /**
     * <code>SUB_GENRE_BAKERSFIELD_SOUND = 372;</code>
     */
    SUB_GENRE_BAKERSFIELD_SOUND(372),
    /**
     * <code>SUB_GENRE_FRENCH_POP = 373;</code>
     */
    SUB_GENRE_FRENCH_POP(373),
    /**
     * <code>SUB_GENRE_MODERNISM = 374;</code>
     */
    SUB_GENRE_MODERNISM(374),
    /**
     * <code>SUB_GENRE_ORGANUM = 375;</code>
     */
    SUB_GENRE_ORGANUM(375),
    /**
     * <code>SUB_GENRE_NO_WAVE = 376;</code>
     */
    SUB_GENRE_NO_WAVE(376),
    /**
     * <code>SUB_GENRE_GARAGE_HOUSE = 377;</code>
     */
    SUB_GENRE_GARAGE_HOUSE(377),
    /**
     * <code>SUB_GENRE_HOUSE = 378;</code>
     */
    SUB_GENRE_HOUSE(378),
    /**
     * <code>SUB_GENRE_SWAMP_ROCK = 379;</code>
     */
    SUB_GENRE_SWAMP_ROCK(379),
    /**
     * <code>SUB_GENRE_MAMBO = 380;</code>
     */
    SUB_GENRE_MAMBO(380),
    /**
     * <code>SUB_GENRE_PORTUGUESE_MUSIC = 381;</code>
     */
    SUB_GENRE_PORTUGUESE_MUSIC(381),
    /**
     * <code>SUB_GENRE_TONADA = 382;</code>
     */
    SUB_GENRE_TONADA(382),
    /**
     * <code>SUB_GENRE_MUSIQUE_CONCRETE = 383;</code>
     */
    SUB_GENRE_MUSIQUE_CONCRETE(383),
    /**
     * <code>SUB_GENRE_ACID_JAZZ = 384;</code>
     */
    SUB_GENRE_ACID_JAZZ(384),
    /**
     * <code>SUB_GENRE_POP_FUNK = 385;</code>
     */
    SUB_GENRE_POP_FUNK(385),
    /**
     * <code>SUB_GENRE_POST_GRUNGE = 386;</code>
     */
    SUB_GENRE_POST_GRUNGE(386),
    /**
     * <code>SUB_GENRE_HOKKIEN_POP = 387;</code>
     */
    SUB_GENRE_HOKKIEN_POP(387),
    /**
     * <code>SUB_GENRE_HILL_COUNTRY_BLUES = 388;</code>
     */
    SUB_GENRE_HILL_COUNTRY_BLUES(388),
    /**
     * <code>SUB_GENRE_BREAKBEAT = 389;</code>
     */
    SUB_GENRE_BREAKBEAT(389),
    /**
     * <code>SUB_GENRE_AFROBEAT = 390;</code>
     */
    SUB_GENRE_AFROBEAT(390),
    /**
     * <code>SUB_GENRE_GREEK_POP = 391;</code>
     */
    SUB_GENRE_GREEK_POP(391),
    /**
     * <code>SUB_GENRE_FREE_JAZZ = 392;</code>
     */
    SUB_GENRE_FREE_JAZZ(392),
    /**
     * <code>SUB_GENRE_NEO_SOUL = 393;</code>
     */
    SUB_GENRE_NEO_SOUL(393),
    /**
     * <code>SUB_GENRE_POST_MINIMALISM = 394;</code>
     */
    SUB_GENRE_POST_MINIMALISM(394),
    /**
     * <code>SUB_GENRE_E_B_M = 395;</code>
     */
    SUB_GENRE_E_B_M(395),
    /**
     * <code>SUB_GENRE_TELUGU = 396;</code>
     */
    SUB_GENRE_TELUGU(396),
    /**
     * <code>SUB_GENRE_DREAM_POP = 397;</code>
     */
    SUB_GENRE_DREAM_POP(397),
    /**
     * <code>SUB_GENRE_NU_METAL = 398;</code>
     */
    SUB_GENRE_NU_METAL(398),
    /**
     * <code>SUB_GENRE_DANZON = 399;</code>
     */
    SUB_GENRE_DANZON(399),
    /**
     * <code>SUB_GENRE_BANDA = 400;</code>
     */
    SUB_GENRE_BANDA(400),
    /**
     * <code>SUB_GENRE_METALCORE = 401;</code>
     */
    SUB_GENRE_METALCORE(401),
    /**
     * <code>SUB_GENRE_MATH_ROCK = 402;</code>
     */
    SUB_GENRE_MATH_ROCK(402),
    /**
     * <code>SUB_GENRE_GRUNGE = 403;</code>
     */
    SUB_GENRE_GRUNGE(403),
    /**
     * <code>SUB_GENRE_TRAP = 404;</code>
     */
    SUB_GENRE_TRAP(404),
    /**
     * <code>SUB_GENRE_ELECTROCLASH = 405;</code>
     */
    SUB_GENRE_ELECTROCLASH(405),
    /**
     * <code>SUB_GENRE_RIOT_GRRRL = 406;</code>
     */
    SUB_GENRE_RIOT_GRRRL(406),
    /**
     * <code>SUB_GENRE_RETRO_SOUL = 407;</code>
     */
    SUB_GENRE_RETRO_SOUL(407),
    /**
     * <code>SUB_GENRE_PALO = 408;</code>
     */
    SUB_GENRE_PALO(408),
    /**
     * <code>SUB_GENRE_CHICAGO_HOUSE = 409;</code>
     */
    SUB_GENRE_CHICAGO_HOUSE(409),
    /**
     * <code>SUB_GENRE_AFRO_ROCK = 410;</code>
     */
    SUB_GENRE_AFRO_ROCK(410),
    /**
     * <code>SUB_GENRE_FRENCH_MUSIC = 411;</code>
     */
    SUB_GENRE_FRENCH_MUSIC(411),
    /**
     * <code>SUB_GENRE_WEST_COAST_BLUES = 412;</code>
     */
    SUB_GENRE_WEST_COAST_BLUES(412),
    /**
     * <code>SUB_GENRE_SOUTHERN_ROCK = 413;</code>
     */
    SUB_GENRE_SOUTHERN_ROCK(413),
    /**
     * <code>SUB_GENRE_ARS_ANTIQUA = 414;</code>
     */
    SUB_GENRE_ARS_ANTIQUA(414),
    /**
     * <code>SUB_GENRE_LATE_ROMANTIC = 415;</code>
     */
    SUB_GENRE_LATE_ROMANTIC(415),
    /**
     * <code>SUB_GENRE_TRADITIONAL_R__APO__N__APO___B = 416;</code>
     */
    SUB_GENRE_TRADITIONAL_R__APO__N__APO___B(416),
    /**
     * <code>SUB_GENRE_AFRO_FUNK = 417;</code>
     */
    SUB_GENRE_AFRO_FUNK(417),
    /**
     * <code>SUB_GENRE_BROKEN_BEAT = 418;</code>
     */
    SUB_GENRE_BROKEN_BEAT(418),
    /**
     * <code>SUB_GENRE_HUPANGO = 419;</code>
     */
    SUB_GENRE_HUPANGO(419),
    /**
     * <code>SUB_GENRE_ROCKSTEADY = 420;</code>
     */
    SUB_GENRE_ROCKSTEADY(420),
    /**
     * <code>SUB_GENRE_21ST_CENTURY = 421;</code>
     */
    SUB_GENRE_21ST_CENTURY(421),
    /**
     * <code>SUB_GENRE_CHIMURENGA = 422;</code>
     */
    SUB_GENRE_CHIMURENGA(422),
    /**
     * <code>SUB_GENRE_CLASSIC_HIP_HOP = 423;</code>
     */
    SUB_GENRE_CLASSIC_HIP_HOP(423),
    /**
     * <code>SUB_GENRE_HAPPY_HARDCORE = 424;</code>
     */
    SUB_GENRE_HAPPY_HARDCORE(424),
    /**
     * <code>SUB_GENRE_CALYPSO = 425;</code>
     */
    SUB_GENRE_CALYPSO(425),
    /**
     * <code>SUB_GENRE_TEXAS_BLUES = 426;</code>
     */
    SUB_GENRE_TEXAS_BLUES(426),
    /**
     * <code>SUB_GENRE_POST_PUNK = 427;</code>
     */
    SUB_GENRE_POST_PUNK(427),
    /**
     * <code>SUB_GENRE_CONJUNTO = 428;</code>
     */
    SUB_GENRE_CONJUNTO(428),
    /**
     * <code>SUB_GENRE_DURANGUENSE = 429;</code>
     */
    SUB_GENRE_DURANGUENSE(429),
    /**
     * <code>SUB_GENRE_PAKISTANI_MUSIC = 430;</code>
     */
    SUB_GENRE_PAKISTANI_MUSIC(430),
    /**
     * <code>SUB_GENRE_EARLY_ROMANTIC = 431;</code>
     */
    SUB_GENRE_EARLY_ROMANTIC(431),
    /**
     * <code>SUB_GENRE_COMMENTARY = 432;</code>
     */
    SUB_GENRE_COMMENTARY(432),
    /**
     * <code>SUB_GENRE_DRUMSTEP = 433;</code>
     */
    SUB_GENRE_DRUMSTEP(433),
    /**
     * <code>SUB_GENRE_ELECTRO_GOTH = 434;</code>
     */
    SUB_GENRE_ELECTRO_GOTH(434),
    /**
     * <code>SUB_GENRE_GRUPERA = 435;</code>
     */
    SUB_GENRE_GRUPERA(435),
    /**
     * <code>SUB_GENRE_CHORO = 436;</code>
     */
    SUB_GENRE_CHORO(436),
    /**
     * <code>SUB_GENRE_GANGSTA_RAP = 437;</code>
     */
    SUB_GENRE_GANGSTA_RAP(437),
    /**
     * <code>SUB_GENRE_CONTEMPORARY = 438;</code>
     */
    SUB_GENRE_CONTEMPORARY(438),
    /**
     * <code>SUB_GENRE_LIGHT_MUSIC = 439;</code>
     */
    SUB_GENRE_LIGHT_MUSIC(439),
    /**
     * <code>SUB_GENRE_GREEK_MUSIC = 440;</code>
     */
    SUB_GENRE_GREEK_MUSIC(440),
    /**
     * <code>SUB_GENRE_MANDO_POP = 441;</code>
     */
    SUB_GENRE_MANDO_POP(441),
    /**
     * <code>SUB_GENRE_CHAMBER_POP = 442;</code>
     */
    SUB_GENRE_CHAMBER_POP(442),
    /**
     * <code>SUB_GENRE_DOOM_METAL = 443;</code>
     */
    SUB_GENRE_DOOM_METAL(443),
    /**
     * <code>SUB_GENRE_MERENGUE = 444;</code>
     */
    SUB_GENRE_MERENGUE(444),
    /**
     * <code>SUB_GENRE_PSYCHEDELIC_ROCK = 445;</code>
     */
    SUB_GENRE_PSYCHEDELIC_ROCK(445),
    /**
     * <code>SUB_GENRE_REGGAETON = 446;</code>
     */
    SUB_GENRE_REGGAETON(446),
    /**
     * <code>SUB_GENRE_P_FUNK = 447;</code>
     */
    SUB_GENRE_P_FUNK(447),
    /**
     * <code>SUB_GENRE_AMERICANA = 448;</code>
     */
    SUB_GENRE_AMERICANA(448),
    /**
     * <code>SUB_GENRE_CAPE_JAZZ = 449;</code>
     */
    SUB_GENRE_CAPE_JAZZ(449),
    /**
     * <code>SUB_GENRE_WESTCOAST_HIP_HOP = 450;</code>
     */
    SUB_GENRE_WESTCOAST_HIP_HOP(450),
    /**
     * <code>SUB_GENRE_G_FUNK = 451;</code>
     */
    SUB_GENRE_G_FUNK(451),
    /**
     * <code>SUB_GENRE_MUSIC_OF_THE_PHILIPPINES = 452;</code>
     */
    SUB_GENRE_MUSIC_OF_THE_PHILIPPINES(452),
    /**
     * <code>SUB_GENRE_JAZZ_ROCK = 453;</code>
     */
    SUB_GENRE_JAZZ_ROCK(453),
    /**
     * <code>SUB_GENRE_JAVANESE_MUSIC = 454;</code>
     */
    SUB_GENRE_JAVANESE_MUSIC(454),
    /**
     * <code>SUB_GENRE_MIDDLE_RENAISSANCE = 455;</code>
     */
    SUB_GENRE_MIDDLE_RENAISSANCE(455),
    /**
     * <code>SUB_GENRE_SOUTH_AMERICAN_MUSIC = 456;</code>
     */
    SUB_GENRE_SOUTH_AMERICAN_MUSIC(456),
    /**
     * <code>SUB_GENRE_ELECTRONIC_POP = 457;</code>
     */
    SUB_GENRE_ELECTRONIC_POP(457),
    /**
     * <code>SUB_GENRE_NEO_PSYCHEDELIA = 458;</code>
     */
    SUB_GENRE_NEO_PSYCHEDELIA(458),
    /**
     * <code>SUB_GENRE_ART_ROCK = 459;</code>
     */
    SUB_GENRE_ART_ROCK(459),
    /**
     * <code>SUB_GENRE_VOCAL_HOUSE = 460;</code>
     */
    SUB_GENRE_VOCAL_HOUSE(460),
    /**
     * <code>SUB_GENRE_PROTO_PUNK = 461;</code>
     */
    SUB_GENRE_PROTO_PUNK(461),
    /**
     * <code>SUB_GENRE_FILIPINO_POP = 462;</code>
     */
    SUB_GENRE_FILIPINO_POP(462),
    /**
     * <code>SUB_GENRE_MOTOWN_SOUND = 463;</code>
     */
    SUB_GENRE_MOTOWN_SOUND(463),
    /**
     * <code>SUB_GENRE_DRILL_N_BASS = 464;</code>
     */
    SUB_GENRE_DRILL_N_BASS(464),
    /**
     * <code>SUB_GENRE_FUTURISM = 465;</code>
     */
    SUB_GENRE_FUTURISM(465),
    /**
     * <code>SUB_GENRE_TECHNO = 466;</code>
     */
    SUB_GENRE_TECHNO(466),
    /**
     * <code>SUB_GENRE_RAGTIME = 467;</code>
     */
    SUB_GENRE_RAGTIME(467),
    /**
     * <code>SUB_GENRE_AVANT_GARDE_JAZZ = 468;</code>
     */
    SUB_GENRE_AVANT_GARDE_JAZZ(468),
    /**
     * <code>SUB_GENRE_STAND_UP_COMEDY = 469;</code>
     */
    SUB_GENRE_STAND_UP_COMEDY(469),
    /**
     * <code>SUB_GENRE_PIEDMONT_BLUES = 470;</code>
     */
    SUB_GENRE_PIEDMONT_BLUES(470),
    /**
     * <code>SUB_GENRE_HARDCORE_RAP = 471;</code>
     */
    SUB_GENRE_HARDCORE_RAP(471),
    /**
     * <code>SUB_GENRE_BRIT_ROCK = 472;</code>
     */
    SUB_GENRE_BRIT_ROCK(472),
    /**
     * <code>SUB_GENRE_MIDDLE_ROMANTIC = 473;</code>
     */
    SUB_GENRE_MIDDLE_ROMANTIC(473),
    /**
     * <code>SUB_GENRE_SPEED_GARAGE = 474;</code>
     */
    SUB_GENRE_SPEED_GARAGE(474),
    /**
     * <code>SUB_GENRE_CUBAN_MUSIC = 475;</code>
     */
    SUB_GENRE_CUBAN_MUSIC(475),
    /**
     * <code>SUB_GENRE_NORTH_AMERICAN_MUSIC = 476;</code>
     */
    SUB_GENRE_NORTH_AMERICAN_MUSIC(476),
    /**
     * <code>SUB_GENRE_DETROIT_TECHNO = 477;</code>
     */
    SUB_GENRE_DETROIT_TECHNO(477),
    /**
     * <code>SUB_GENRE_ELECTRO = 478;</code>
     */
    SUB_GENRE_ELECTRO(478),
    /**
     * <code>SUB_GENRE_SOCA = 479;</code>
     */
    SUB_GENRE_SOCA(479),
    /**
     * <code>SUB_GENRE_SPACE_ROCK = 480;</code>
     */
    SUB_GENRE_SPACE_ROCK(480),
    /**
     * <code>SUB_GENRE_ENKA = 481;</code>
     */
    SUB_GENRE_ENKA(481),
    /**
     * <code>SUB_GENRE_POP_PUNK = 482;</code>
     */
    SUB_GENRE_POP_PUNK(482),
    ;

    /**
     * <code>SUB_GENRE_MIDDLE20TH_CENTURY = 0;</code>
     */
    public static final int SUB_GENRE_MIDDLE20TH_CENTURY_VALUE = 0;
    /**
     * <code>SUB_GENRE_AFRICAN_JAZZ = 1;</code>
     */
    public static final int SUB_GENRE_AFRICAN_JAZZ_VALUE = 1;
    /**
     * <code>SUB_GENRE_HARD_BOP = 2;</code>
     */
    public static final int SUB_GENRE_HARD_BOP_VALUE = 2;
    /**
     * <code>SUB_GENRE_NOUVELLE_CHANSON = 3;</code>
     */
    public static final int SUB_GENRE_NOUVELLE_CHANSON_VALUE = 3;
    /**
     * <code>SUB_GENRE_URBAN_CONTEMPORARY_GOSPEL = 4;</code>
     */
    public static final int SUB_GENRE_URBAN_CONTEMPORARY_GOSPEL_VALUE = 4;
    /**
     * <code>SUB_GENRE_CUMBIA = 5;</code>
     */
    public static final int SUB_GENRE_CUMBIA_VALUE = 5;
    /**
     * <code>SUB_GENRE_NEW_FLAMENCO = 6;</code>
     */
    public static final int SUB_GENRE_NEW_FLAMENCO_VALUE = 6;
    /**
     * <code>SUB_GENRE_SALVES = 7;</code>
     */
    public static final int SUB_GENRE_SALVES_VALUE = 7;
    /**
     * <code>SUB_GENRE_DARK_WAVE = 8;</code>
     */
    public static final int SUB_GENRE_DARK_WAVE_VALUE = 8;
    /**
     * <code>SUB_GENRE_INTERVIEW = 9;</code>
     */
    public static final int SUB_GENRE_INTERVIEW_VALUE = 9;
    /**
     * <code>SUB_GENRE_BARBERSHOP_MUSIC = 10;</code>
     */
    public static final int SUB_GENRE_BARBERSHOP_MUSIC_VALUE = 10;
    /**
     * <code>SUB_GENRE_BOOGIE = 11;</code>
     */
    public static final int SUB_GENRE_BOOGIE_VALUE = 11;
    /**
     * <code>SUB_GENRE_SURF = 12;</code>
     */
    public static final int SUB_GENRE_SURF_VALUE = 12;
    /**
     * <code>SUB_GENRE_PROGRESSIVE_TRANCE = 13;</code>
     */
    public static final int SUB_GENRE_PROGRESSIVE_TRANCE_VALUE = 13;
    /**
     * <code>SUB_GENRE_DEATH_METAL = 14;</code>
     */
    public static final int SUB_GENRE_DEATH_METAL_VALUE = 14;
    /**
     * <code>SUB_GENRE_MODERN_COUNTRY = 15;</code>
     */
    public static final int SUB_GENRE_MODERN_COUNTRY_VALUE = 15;
    /**
     * <code>SUB_GENRE_MBALAX = 16;</code>
     */
    public static final int SUB_GENRE_MBALAX_VALUE = 16;
    /**
     * <code>SUB_GENRE_EASTCOAST_HIP_HOP = 17;</code>
     */
    public static final int SUB_GENRE_EASTCOAST_HIP_HOP_VALUE = 17;
    /**
     * <code>SUB_GENRE_2_STEP_GARAGE = 18;</code>
     */
    public static final int SUB_GENRE_2_STEP_GARAGE_VALUE = 18;
    /**
     * <code>SUB_GENRE_POWER_POP = 19;</code>
     */
    public static final int SUB_GENRE_POWER_POP_VALUE = 19;
    /**
     * <code>SUB_GENRE_NORTENO = 20;</code>
     */
    public static final int SUB_GENRE_NORTENO_VALUE = 20;
    /**
     * <code>SUB_GENRE_GO_GO = 21;</code>
     */
    public static final int SUB_GENRE_GO_GO_VALUE = 21;
    /**
     * <code>SUB_GENRE_CELTIC = 22;</code>
     */
    public static final int SUB_GENRE_CELTIC_VALUE = 22;
    /**
     * <code>SUB_GENRE_PIANO_BLUES = 23;</code>
     */
    public static final int SUB_GENRE_PIANO_BLUES_VALUE = 23;
    /**
     * <code>SUB_GENRE_GOLDEN_AGE = 24;</code>
     */
    public static final int SUB_GENRE_GOLDEN_AGE_VALUE = 24;
    /**
     * <code>SUB_GENRE_MAKOSSA = 25;</code>
     */
    public static final int SUB_GENRE_MAKOSSA_VALUE = 25;
    /**
     * <code>SUB_GENRE_MODERN_LAIKO = 26;</code>
     */
    public static final int SUB_GENRE_MODERN_LAIKO_VALUE = 26;
    /**
     * <code>SUB_GENRE_ACOUSTIC_CHICAGO_BLUES = 27;</code>
     */
    public static final int SUB_GENRE_ACOUSTIC_CHICAGO_BLUES_VALUE = 27;
    /**
     * <code>SUB_GENRE_JUNGLE = 28;</code>
     */
    public static final int SUB_GENRE_JUNGLE_VALUE = 28;
    /**
     * <code>SUB_GENRE_PUNJABI_MUSIC = 29;</code>
     */
    public static final int SUB_GENRE_PUNJABI_MUSIC_VALUE = 29;
    /**
     * <code>SUB_GENRE_PSYCHEDELIC_SOUL = 30;</code>
     */
    public static final int SUB_GENRE_PSYCHEDELIC_SOUL_VALUE = 30;
    /**
     * <code>SUB_GENRE_TIBETAN_MUSIC = 31;</code>
     */
    public static final int SUB_GENRE_TIBETAN_MUSIC_VALUE = 31;
    /**
     * <code>SUB_GENRE_JUMP__MINUS___BLUES = 32;</code>
     */
    public static final int SUB_GENRE_JUMP__MINUS___BLUES_VALUE = 32;
    /**
     * <code>SUB_GENRE_GREGORIAN_CHANT = 33;</code>
     */
    public static final int SUB_GENRE_GREGORIAN_CHANT_VALUE = 33;
    /**
     * <code>SUB_GENRE_SCREAMO = 34;</code>
     */
    public static final int SUB_GENRE_SCREAMO_VALUE = 34;
    /**
     * <code>SUB_GENRE_CONSCIOUS_RAP = 35;</code>
     */
    public static final int SUB_GENRE_CONSCIOUS_RAP_VALUE = 35;
    /**
     * <code>SUB_GENRE_MIDDLE_BAROQUE = 36;</code>
     */
    public static final int SUB_GENRE_MIDDLE_BAROQUE_VALUE = 36;
    /**
     * <code>SUB_GENRE_WORLDBEAT = 37;</code>
     */
    public static final int SUB_GENRE_WORLDBEAT_VALUE = 37;
    /**
     * <code>SUB_GENRE_DEEP_SOUL = 38;</code>
     */
    public static final int SUB_GENRE_DEEP_SOUL_VALUE = 38;
    /**
     * <code>SUB_GENRE_DRUM_N_BASS = 39;</code>
     */
    public static final int SUB_GENRE_DRUM_N_BASS_VALUE = 39;
    /**
     * <code>SUB_GENRE_CARNATIC_MUSIC = 40;</code>
     */
    public static final int SUB_GENRE_CARNATIC_MUSIC_VALUE = 40;
    /**
     * <code>SUB_GENRE_MERSEYBEAT = 41;</code>
     */
    public static final int SUB_GENRE_MERSEYBEAT_VALUE = 41;
    /**
     * <code>SUB_GENRE_QUIET_STORM = 42;</code>
     */
    public static final int SUB_GENRE_QUIET_STORM_VALUE = 42;
    /**
     * <code>SUB_GENRE_NASHVILLE_SOUND = 43;</code>
     */
    public static final int SUB_GENRE_NASHVILLE_SOUND_VALUE = 43;
    /**
     * <code>SUB_GENRE_BRITISH_INVASION = 44;</code>
     */
    public static final int SUB_GENRE_BRITISH_INVASION_VALUE = 44;
    /**
     * <code>SUB_GENRE_SPEED_METAL = 45;</code>
     */
    public static final int SUB_GENRE_SPEED_METAL_VALUE = 45;
    /**
     * <code>SUB_GENRE_AMERICAN_PRIMITIVE_GUITAR = 46;</code>
     */
    public static final int SUB_GENRE_AMERICAN_PRIMITIVE_GUITAR_VALUE = 46;
    /**
     * <code>SUB_GENRE_OUTLAW_COUNTRY = 47;</code>
     */
    public static final int SUB_GENRE_OUTLAW_COUNTRY_VALUE = 47;
    /**
     * <code>SUB_GENRE_ALTERNATIVE_COUNTRY = 48;</code>
     */
    public static final int SUB_GENRE_ALTERNATIVE_COUNTRY_VALUE = 48;
    /**
     * <code>SUB_GENRE_ALTERNATIVE_POP = 49;</code>
     */
    public static final int SUB_GENRE_ALTERNATIVE_POP_VALUE = 49;
    /**
     * <code>SUB_GENRE_DIRTY_RAP = 50;</code>
     */
    public static final int SUB_GENRE_DIRTY_RAP_VALUE = 50;
    /**
     * <code>SUB_GENRE_INDIAN_MUSIC = 51;</code>
     */
    public static final int SUB_GENRE_INDIAN_MUSIC_VALUE = 51;
    /**
     * <code>SUB_GENRE_INDIAN_POP = 52;</code>
     */
    public static final int SUB_GENRE_INDIAN_POP_VALUE = 52;
    /**
     * <code>SUB_GENRE_MEDIEVAL = 53;</code>
     */
    public static final int SUB_GENRE_MEDIEVAL_VALUE = 53;
    /**
     * <code>SUB_GENRE_DUBSTEP_U_S = 54;</code>
     */
    public static final int SUB_GENRE_DUBSTEP_U_S_VALUE = 54;
    /**
     * <code>SUB_GENRE_THRASH_METAL = 55;</code>
     */
    public static final int SUB_GENRE_THRASH_METAL_VALUE = 55;
    /**
     * <code>SUB_GENRE_AMBIENT = 56;</code>
     */
    public static final int SUB_GENRE_AMBIENT_VALUE = 56;
    /**
     * <code>SUB_GENRE_OLD_TIME = 57;</code>
     */
    public static final int SUB_GENRE_OLD_TIME_VALUE = 57;
    /**
     * <code>SUB_GENRE_ELECTRONICA__FS___ECLECTIC = 58;</code>
     */
    public static final int SUB_GENRE_ELECTRONICA__FS___ECLECTIC_VALUE = 58;
    /**
     * <code>SUB_GENRE_DUBSTEP_U_K = 59;</code>
     */
    public static final int SUB_GENRE_DUBSTEP_U_K_VALUE = 59;
    /**
     * <code>SUB_GENRE_MARIACHI = 60;</code>
     */
    public static final int SUB_GENRE_MARIACHI_VALUE = 60;
    /**
     * <code>SUB_GENRE_COLOMBIAN_MUSIC = 61;</code>
     */
    public static final int SUB_GENRE_COLOMBIAN_MUSIC_VALUE = 61;
    /**
     * <code>SUB_GENRE_MADCHESTER = 62;</code>
     */
    public static final int SUB_GENRE_MADCHESTER_VALUE = 62;
    /**
     * <code>SUB_GENRE_SAMBA = 63;</code>
     */
    public static final int SUB_GENRE_SAMBA_VALUE = 63;
    /**
     * <code>SUB_GENRE_FOLK_BAROQUE = 64;</code>
     */
    public static final int SUB_GENRE_FOLK_BAROQUE_VALUE = 64;
    /**
     * <code>SUB_GENRE_RANCHERA = 65;</code>
     */
    public static final int SUB_GENRE_RANCHERA_VALUE = 65;
    /**
     * <code>SUB_GENRE_PHILLYSOUND = 66;</code>
     */
    public static final int SUB_GENRE_PHILLYSOUND_VALUE = 66;
    /**
     * <code>SUB_GENRE_BOLLYWOOD = 67;</code>
     */
    public static final int SUB_GENRE_BOLLYWOOD_VALUE = 67;
    /**
     * <code>SUB_GENRE_SYNTH_POP = 68;</code>
     */
    public static final int SUB_GENRE_SYNTH_POP_VALUE = 68;
    /**
     * <code>SUB_GENRE_IRISH_MUSIC = 69;</code>
     */
    public static final int SUB_GENRE_IRISH_MUSIC_VALUE = 69;
    /**
     * <code>SUB_GENRE_MODERN_CREATIVE = 70;</code>
     */
    public static final int SUB_GENRE_MODERN_CREATIVE_VALUE = 70;
    /**
     * <code>SUB_GENRE_SOUTH_AMERICAN_ROCK = 71;</code>
     */
    public static final int SUB_GENRE_SOUTH_AMERICAN_ROCK_VALUE = 71;
    /**
     * <code>SUB_GENRE_TWEE_POP = 72;</code>
     */
    public static final int SUB_GENRE_TWEE_POP_VALUE = 72;
    /**
     * <code>SUB_GENRE_AMBROSIAN_CHANT = 73;</code>
     */
    public static final int SUB_GENRE_AMBROSIAN_CHANT_VALUE = 73;
    /**
     * <code>SUB_GENRE_COUNTRY_ROCK = 74;</code>
     */
    public static final int SUB_GENRE_COUNTRY_ROCK_VALUE = 74;
    /**
     * <code>SUB_GENRE_GOTHIC_METAL = 75;</code>
     */
    public static final int SUB_GENRE_GOTHIC_METAL_VALUE = 75;
    /**
     * <code>SUB_GENRE_HIPLIFE = 76;</code>
     */
    public static final int SUB_GENRE_HIPLIFE_VALUE = 76;
    /**
     * <code>SUB_GENRE_SOFT_ROCK = 77;</code>
     */
    public static final int SUB_GENRE_SOFT_ROCK_VALUE = 77;
    /**
     * <code>SUB_GENRE_PROGRESSIVE_ROCK = 78;</code>
     */
    public static final int SUB_GENRE_PROGRESSIVE_ROCK_VALUE = 78;
    /**
     * <code>SUB_GENRE_JAZZ_HOUSE = 79;</code>
     */
    public static final int SUB_GENRE_JAZZ_HOUSE_VALUE = 79;
    /**
     * <code>SUB_GENRE_TRADITIONAL_COUNTRY = 80;</code>
     */
    public static final int SUB_GENRE_TRADITIONAL_COUNTRY_VALUE = 80;
    /**
     * <code>SUB_GENRE_EXOTICA = 81;</code>
     */
    public static final int SUB_GENRE_EXOTICA_VALUE = 81;
    /**
     * <code>SUB_GENRE_SERIALISM = 82;</code>
     */
    public static final int SUB_GENRE_SERIALISM_VALUE = 82;
    /**
     * <code>SUB_GENRE_SWING_REVIVAL = 83;</code>
     */
    public static final int SUB_GENRE_SWING_REVIVAL_VALUE = 83;
    /**
     * <code>SUB_GENRE_PLAINSONG = 84;</code>
     */
    public static final int SUB_GENRE_PLAINSONG_VALUE = 84;
    /**
     * <code>SUB_GENRE_NEAPOLITAN_SONG = 85;</code>
     */
    public static final int SUB_GENRE_NEAPOLITAN_SONG_VALUE = 85;
    /**
     * <code>SUB_GENRE_CANADIAN_FIDDLING = 86;</code>
     */
    public static final int SUB_GENRE_CANADIAN_FIDDLING_VALUE = 86;
    /**
     * <code>SUB_GENRE_EARLY_RENAISSANCE = 87;</code>
     */
    public static final int SUB_GENRE_EARLY_RENAISSANCE_VALUE = 87;
    /**
     * <code>SUB_GENRE_BIKUTSI = 88;</code>
     */
    public static final int SUB_GENRE_BIKUTSI_VALUE = 88;
    /**
     * <code>SUB_GENRE_POST_ROCK = 89;</code>
     */
    public static final int SUB_GENRE_POST_ROCK_VALUE = 89;
    /**
     * <code>SUB_GENRE_NEO_CLASSICAL = 90;</code>
     */
    public static final int SUB_GENRE_NEO_CLASSICAL_VALUE = 90;
    /**
     * <code>SUB_GENRE_HARDSTYLE = 91;</code>
     */
    public static final int SUB_GENRE_HARDSTYLE_VALUE = 91;
    /**
     * <code>SUB_GENRE_INDUSTRIAL = 92;</code>
     */
    public static final int SUB_GENRE_INDUSTRIAL_VALUE = 92;
    /**
     * <code>SUB_GENRE_HIGHLIFE = 93;</code>
     */
    public static final int SUB_GENRE_HIGHLIFE_VALUE = 93;
    /**
     * <code>SUB_GENRE_HAIR_METAL = 94;</code>
     */
    public static final int SUB_GENRE_HAIR_METAL_VALUE = 94;
    /**
     * <code>SUB_GENRE_LATE20TH_CENTURY = 95;</code>
     */
    public static final int SUB_GENRE_LATE20TH_CENTURY_VALUE = 95;
    /**
     * <code>SUB_GENRE_FOLK_REVIVAL = 96;</code>
     */
    public static final int SUB_GENRE_FOLK_REVIVAL_VALUE = 96;
    /**
     * <code>SUB_GENRE_COUNTRY_POP = 97;</code>
     */
    public static final int SUB_GENRE_COUNTRY_POP_VALUE = 97;
    /**
     * <code>SUB_GENRE_POLKA = 98;</code>
     */
    public static final int SUB_GENRE_POLKA_VALUE = 98;
    /**
     * <code>SUB_GENRE_HONKY_TONK = 99;</code>
     */
    public static final int SUB_GENRE_HONKY_TONK_VALUE = 99;
    /**
     * <code>SUB_GENRE_TRADITIONAL_ACOUSTIC = 100;</code>
     */
    public static final int SUB_GENRE_TRADITIONAL_ACOUSTIC_VALUE = 100;
    /**
     * <code>SUB_GENRE_BLUE_EYED_SOUL = 101;</code>
     */
    public static final int SUB_GENRE_BLUE_EYED_SOUL_VALUE = 101;
    /**
     * <code>SUB_GENRE_ZYDECO = 102;</code>
     */
    public static final int SUB_GENRE_ZYDECO_VALUE = 102;
    /**
     * <code>SUB_GENRE_TANGO = 103;</code>
     */
    public static final int SUB_GENRE_TANGO_VALUE = 103;
    /**
     * <code>SUB_GENRE_BIG_BEAT = 104;</code>
     */
    public static final int SUB_GENRE_BIG_BEAT_VALUE = 104;
    /**
     * <code>SUB_GENRE_ALTERNATIVE_DANCE = 105;</code>
     */
    public static final int SUB_GENRE_ALTERNATIVE_DANCE_VALUE = 105;
    /**
     * <code>SUB_GENRE_NEW_ROMANTIC = 106;</code>
     */
    public static final int SUB_GENRE_NEW_ROMANTIC_VALUE = 106;
    /**
     * <code>SUB_GENRE_NOISE_POP = 107;</code>
     */
    public static final int SUB_GENRE_NOISE_POP_VALUE = 107;
    /**
     * <code>SUB_GENRE_SKA = 108;</code>
     */
    public static final int SUB_GENRE_SKA_VALUE = 108;
    /**
     * <code>SUB_GENRE_NOISE_MUSIC = 109;</code>
     */
    public static final int SUB_GENRE_NOISE_MUSIC_VALUE = 109;
    /**
     * <code>SUB_GENRE_CAPOEIRA_MUSIC = 110;</code>
     */
    public static final int SUB_GENRE_CAPOEIRA_MUSIC_VALUE = 110;
    /**
     * <code>SUB_GENRE_FOLKTRONICA = 111;</code>
     */
    public static final int SUB_GENRE_FOLKTRONICA_VALUE = 111;
    /**
     * <code>SUB_GENRE_UNDERGROUND = 112;</code>
     */
    public static final int SUB_GENRE_UNDERGROUND_VALUE = 112;
    /**
     * <code>SUB_GENRE_ROMANTIC = 113;</code>
     */
    public static final int SUB_GENRE_ROMANTIC_VALUE = 113;
    /**
     * <code>SUB_GENRE_GABBA = 114;</code>
     */
    public static final int SUB_GENRE_GABBA_VALUE = 114;
    /**
     * <code>SUB_GENRE_CZECH_MUSIC = 115;</code>
     */
    public static final int SUB_GENRE_CZECH_MUSIC_VALUE = 115;
    /**
     * <code>SUB_GENRE_DOMINICAN_MUSIC = 116;</code>
     */
    public static final int SUB_GENRE_DOMINICAN_MUSIC_VALUE = 116;
    /**
     * <code>SUB_GENRE_BOOGALOO = 117;</code>
     */
    public static final int SUB_GENRE_BOOGALOO_VALUE = 117;
    /**
     * <code>SUB_GENRE_JOVEM_GUARDA = 118;</code>
     */
    public static final int SUB_GENRE_JOVEM_GUARDA_VALUE = 118;
    /**
     * <code>SUB_GENRE_JAZZ_POP = 119;</code>
     */
    public static final int SUB_GENRE_JAZZ_POP_VALUE = 119;
    /**
     * <code>SUB_GENRE_CHILEAN_MUSIC = 120;</code>
     */
    public static final int SUB_GENRE_CHILEAN_MUSIC_VALUE = 120;
    /**
     * <code>SUB_GENRE_SOUL_JAZZ = 121;</code>
     */
    public static final int SUB_GENRE_SOUL_JAZZ_VALUE = 121;
    /**
     * <code>SUB_GENRE_HARDCORE_PUNK = 122;</code>
     */
    public static final int SUB_GENRE_HARDCORE_PUNK_VALUE = 122;
    /**
     * <code>SUB_GENRE_AMBIENT_HOUSE = 123;</code>
     */
    public static final int SUB_GENRE_AMBIENT_HOUSE_VALUE = 123;
    /**
     * <code>SUB_GENRE_DUTCH_HOUSE = 124;</code>
     */
    public static final int SUB_GENRE_DUTCH_HOUSE_VALUE = 124;
    /**
     * <code>SUB_GENRE_ALTERNATIVE_ROCK = 125;</code>
     */
    public static final int SUB_GENRE_ALTERNATIVE_ROCK_VALUE = 125;
    /**
     * <code>SUB_GENRE_FLAMENCO = 126;</code>
     */
    public static final int SUB_GENRE_FLAMENCO_VALUE = 126;
    /**
     * <code>SUB_GENRE_ROCK_N_ROLL = 127;</code>
     */
    public static final int SUB_GENRE_ROCK_N_ROLL_VALUE = 127;
    /**
     * <code>SUB_GENRE_MIDDLE_EASTERN_MUSIC = 128;</code>
     */
    public static final int SUB_GENRE_MIDDLE_EASTERN_MUSIC_VALUE = 128;
    /**
     * <code>SUB_GENRE_DETROIT_HOUSE = 129;</code>
     */
    public static final int SUB_GENRE_DETROIT_HOUSE_VALUE = 129;
    /**
     * <code>SUB_GENRE_ELECTRIC_TEXAS_BLUES = 130;</code>
     */
    public static final int SUB_GENRE_ELECTRIC_TEXAS_BLUES_VALUE = 130;
    /**
     * <code>SUB_GENRE_BOOGIE_ROCK = 131;</code>
     */
    public static final int SUB_GENRE_BOOGIE_ROCK_VALUE = 131;
    /**
     * <code>SUB_GENRE_MBAQANGA = 132;</code>
     */
    public static final int SUB_GENRE_MBAQANGA_VALUE = 132;
    /**
     * <code>SUB_GENRE_TRANCE = 133;</code>
     */
    public static final int SUB_GENRE_TRANCE_VALUE = 133;
    /**
     * <code>SUB_GENRE_CHA_CHA_CHA = 134;</code>
     */
    public static final int SUB_GENRE_CHA_CHA_CHA_VALUE = 134;
    /**
     * <code>SUB_GENRE_SPANISH_MUSIC = 135;</code>
     */
    public static final int SUB_GENRE_SPANISH_MUSIC_VALUE = 135;
    /**
     * <code>SUB_GENRE_ALTERNATIVE_R__APO__N__APO___B = 136;</code>
     */
    public static final int SUB_GENRE_ALTERNATIVE_R__APO__N__APO___B_VALUE = 136;
    /**
     * <code>SUB_GENRE_EARLY_ROCK = 137;</code>
     */
    public static final int SUB_GENRE_EARLY_ROCK_VALUE = 137;
    /**
     * <code>SUB_GENRE_HARD_TRANCE = 138;</code>
     */
    public static final int SUB_GENRE_HARD_TRANCE_VALUE = 138;
    /**
     * <code>SUB_GENRE_ROOTS_REGGAE = 139;</code>
     */
    public static final int SUB_GENRE_ROOTS_REGGAE_VALUE = 139;
    /**
     * <code>SUB_GENRE_CARIBBEAN_POP = 140;</code>
     */
    public static final int SUB_GENRE_CARIBBEAN_POP_VALUE = 140;
    /**
     * <code>SUB_GENRE_LATE_BAROQUE = 141;</code>
     */
    public static final int SUB_GENRE_LATE_BAROQUE_VALUE = 141;
    /**
     * <code>SUB_GENRE_GERMAN_MUSIC = 142;</code>
     */
    public static final int SUB_GENRE_GERMAN_MUSIC_VALUE = 142;
    /**
     * <code>SUB_GENRE_EURODANCE = 143;</code>
     */
    public static final int SUB_GENRE_EURODANCE_VALUE = 143;
    /**
     * <code>SUB_GENRE_JAPANESE_POP = 144;</code>
     */
    public static final int SUB_GENRE_JAPANESE_POP_VALUE = 144;
    /**
     * <code>SUB_GENRE_BAROQUE = 145;</code>
     */
    public static final int SUB_GENRE_BAROQUE_VALUE = 145;
    /**
     * <code>SUB_GENRE_BOOGIE_WOOGIE = 146;</code>
     */
    public static final int SUB_GENRE_BOOGIE_WOOGIE_VALUE = 146;
    /**
     * <code>SUB_GENRE_SOUTHERN_RAP = 147;</code>
     */
    public static final int SUB_GENRE_SOUTHERN_RAP_VALUE = 147;
    /**
     * <code>SUB_GENRE_EXPERIMENTAL_ROCK = 148;</code>
     */
    public static final int SUB_GENRE_EXPERIMENTAL_ROCK_VALUE = 148;
    /**
     * <code>SUB_GENRE_SOUKOUS = 149;</code>
     */
    public static final int SUB_GENRE_SOUKOUS_VALUE = 149;
    /**
     * <code>SUB_GENRE_CONVERSATION = 150;</code>
     */
    public static final int SUB_GENRE_CONVERSATION_VALUE = 150;
    /**
     * <code>SUB_GENRE_CANTO_POP = 151;</code>
     */
    public static final int SUB_GENRE_CANTO_POP_VALUE = 151;
    /**
     * <code>SUB_GENRE_BEBOP = 152;</code>
     */
    public static final int SUB_GENRE_BEBOP_VALUE = 152;
    /**
     * <code>SUB_GENRE_ALT_METAL = 153;</code>
     */
    public static final int SUB_GENRE_ALT_METAL_VALUE = 153;
    /**
     * <code>SUB_GENRE_GAUCHO_MUSIC = 154;</code>
     */
    public static final int SUB_GENRE_GAUCHO_MUSIC_VALUE = 154;
    /**
     * <code>SUB_GENRE_CHRISTIAN_RAP = 155;</code>
     */
    public static final int SUB_GENRE_CHRISTIAN_RAP_VALUE = 155;
    /**
     * <code>SUB_GENRE_DEEP_HOUSE = 156;</code>
     */
    public static final int SUB_GENRE_DEEP_HOUSE_VALUE = 156;
    /**
     * <code>SUB_GENRE_BRIT_POP = 157;</code>
     */
    public static final int SUB_GENRE_BRIT_POP_VALUE = 157;
    /**
     * <code>SUB_GENRE_DIXIELAND = 158;</code>
     */
    public static final int SUB_GENRE_DIXIELAND_VALUE = 158;
    /**
     * <code>SUB_GENRE_CLASSICAL_CROSSOVER = 159;</code>
     */
    public static final int SUB_GENRE_CLASSICAL_CROSSOVER_VALUE = 159;
    /**
     * <code>SUB_GENRE_JEWISH_MUSIC = 160;</code>
     */
    public static final int SUB_GENRE_JEWISH_MUSIC_VALUE = 160;
    /**
     * <code>SUB_GENRE_EARLY20TH_CENTURY = 161;</code>
     */
    public static final int SUB_GENRE_EARLY20TH_CENTURY_VALUE = 161;
    /**
     * <code>SUB_GENRE_TWO_TONE = 162;</code>
     */
    public static final int SUB_GENRE_TWO_TONE_VALUE = 162;
    /**
     * <code>SUB_GENRE_AMERICAN_FOLK = 163;</code>
     */
    public static final int SUB_GENRE_AMERICAN_FOLK_VALUE = 163;
    /**
     * <code>SUB_GENRE_SERTANEJO = 164;</code>
     */
    public static final int SUB_GENRE_SERTANEJO_VALUE = 164;
    /**
     * <code>SUB_GENRE_N_D_W = 165;</code>
     */
    public static final int SUB_GENRE_N_D_W_VALUE = 165;
    /**
     * <code>SUB_GENRE_OI__BANG__ = 166;</code>
     */
    public static final int SUB_GENRE_OI__BANG___VALUE = 166;
    /**
     * <code>SUB_GENRE_ACID_TECHNO = 167;</code>
     */
    public static final int SUB_GENRE_ACID_TECHNO_VALUE = 167;
    /**
     * <code>SUB_GENRE_MODERN_POP = 168;</code>
     */
    public static final int SUB_GENRE_MODERN_POP_VALUE = 168;
    /**
     * <code>SUB_GENRE_IMPRESSIONISM = 169;</code>
     */
    public static final int SUB_GENRE_IMPRESSIONISM_VALUE = 169;
    /**
     * <code>SUB_GENRE_BLUEGRASS = 170;</code>
     */
    public static final int SUB_GENRE_BLUEGRASS_VALUE = 170;
    /**
     * <code>SUB_GENRE_SOUTHERN_GOSPEL = 171;</code>
     */
    public static final int SUB_GENRE_SOUTHERN_GOSPEL_VALUE = 171;
    /**
     * <code>SUB_GENRE_KRAUTROCK = 172;</code>
     */
    public static final int SUB_GENRE_KRAUTROCK_VALUE = 172;
    /**
     * <code>SUB_GENRE_SON = 173;</code>
     */
    public static final int SUB_GENRE_SON_VALUE = 173;
    /**
     * <code>SUB_GENRE_GYPSY_JAZZ = 174;</code>
     */
    public static final int SUB_GENRE_GYPSY_JAZZ_VALUE = 174;
    /**
     * <code>SUB_GENRE_TURKISH_CLASSICAL_MUSIC = 175;</code>
     */
    public static final int SUB_GENRE_TURKISH_CLASSICAL_MUSIC_VALUE = 175;
    /**
     * <code>SUB_GENRE_NEO_TRADITIONAL_COUNTRY = 176;</code>
     */
    public static final int SUB_GENRE_NEO_TRADITIONAL_COUNTRY_VALUE = 176;
    /**
     * <code>SUB_GENRE_BASSLINE = 177;</code>
     */
    public static final int SUB_GENRE_BASSLINE_VALUE = 177;
    /**
     * <code>SUB_GENRE_MEXICAN_MUSIC = 178;</code>
     */
    public static final int SUB_GENRE_MEXICAN_MUSIC_VALUE = 178;
    /**
     * <code>SUB_GENRE_SAMBA_ROCK = 179;</code>
     */
    public static final int SUB_GENRE_SAMBA_ROCK_VALUE = 179;
    /**
     * <code>SUB_GENRE_MINIMALISM = 180;</code>
     */
    public static final int SUB_GENRE_MINIMALISM_VALUE = 180;
    /**
     * <code>SUB_GENRE_KUDURO = 181;</code>
     */
    public static final int SUB_GENRE_KUDURO_VALUE = 181;
    /**
     * <code>SUB_GENRE_SKIT = 182;</code>
     */
    public static final int SUB_GENRE_SKIT_VALUE = 182;
    /**
     * <code>SUB_GENRE_DOWNTEMPO = 183;</code>
     */
    public static final int SUB_GENRE_DOWNTEMPO_VALUE = 183;
    /**
     * <code>SUB_GENRE_AFRICAN_POP = 184;</code>
     */
    public static final int SUB_GENRE_AFRICAN_POP_VALUE = 184;
    /**
     * <code>SUB_GENRE_GRINDCORE = 185;</code>
     */
    public static final int SUB_GENRE_GRINDCORE_VALUE = 185;
    /**
     * <code>SUB_GENRE_INDIE_POP = 186;</code>
     */
    public static final int SUB_GENRE_INDIE_POP_VALUE = 186;
    /**
     * <code>SUB_GENRE_NATIONALIST = 187;</code>
     */
    public static final int SUB_GENRE_NATIONALIST_VALUE = 187;
    /**
     * <code>SUB_GENRE_TEXAS_COUNTRY = 188;</code>
     */
    public static final int SUB_GENRE_TEXAS_COUNTRY_VALUE = 188;
    /**
     * <code>SUB_GENRE_DELTA_BLUES = 189;</code>
     */
    public static final int SUB_GENRE_DELTA_BLUES_VALUE = 189;
    /**
     * <code>SUB_GENRE_BACHATA = 190;</code>
     */
    public static final int SUB_GENRE_BACHATA_VALUE = 190;
    /**
     * <code>SUB_GENRE_FUNK_CARIOCA = 191;</code>
     */
    public static final int SUB_GENRE_FUNK_CARIOCA_VALUE = 191;
    /**
     * <code>SUB_GENRE_KOREAN_POP = 192;</code>
     */
    public static final int SUB_GENRE_KOREAN_POP_VALUE = 192;
    /**
     * <code>SUB_GENRE_FUTURE_GARAGE = 193;</code>
     */
    public static final int SUB_GENRE_FUTURE_GARAGE_VALUE = 193;
    /**
     * <code>SUB_GENRE_CLASSIC_FEMALE_BLUES = 194;</code>
     */
    public static final int SUB_GENRE_CLASSIC_FEMALE_BLUES_VALUE = 194;
    /**
     * <code>SUB_GENRE_EXPRESSIONISM = 195;</code>
     */
    public static final int SUB_GENRE_EXPRESSIONISM_VALUE = 195;
    /**
     * <code>SUB_GENRE_SHOEGAZE = 196;</code>
     */
    public static final int SUB_GENRE_SHOEGAZE_VALUE = 196;
    /**
     * <code>SUB_GENRE_ARGENTINIAN_MUSIC = 197;</code>
     */
    public static final int SUB_GENRE_ARGENTINIAN_MUSIC_VALUE = 197;
    /**
     * <code>SUB_GENRE_KLEZMER = 198;</code>
     */
    public static final int SUB_GENRE_KLEZMER_VALUE = 198;
    /**
     * <code>SUB_GENRE_INSTRUMENTAL_HIP_HOP = 199;</code>
     */
    public static final int SUB_GENRE_INSTRUMENTAL_HIP_HOP_VALUE = 199;
    /**
     * <code>SUB_GENRE_NEW_WAVE = 200;</code>
     */
    public static final int SUB_GENRE_NEW_WAVE_VALUE = 200;
    /**
     * <code>SUB_GENRE_BOSSA_NOVA = 201;</code>
     */
    public static final int SUB_GENRE_BOSSA_NOVA_VALUE = 201;
    /**
     * <code>SUB_GENRE_SCHRANZ = 202;</code>
     */
    public static final int SUB_GENRE_SCHRANZ_VALUE = 202;
    /**
     * <code>SUB_GENRE_NORTH_AMERICAN_FOLK = 203;</code>
     */
    public static final int SUB_GENRE_NORTH_AMERICAN_FOLK_VALUE = 203;
    /**
     * <code>SUB_GENRE_ORCHESTRAL_FUSION = 204;</code>
     */
    public static final int SUB_GENRE_ORCHESTRAL_FUSION_VALUE = 204;
    /**
     * <code>SUB_GENRE_DUBTRONICA = 205;</code>
     */
    public static final int SUB_GENRE_DUBTRONICA_VALUE = 205;
    /**
     * <code>SUB_GENRE_NEW_JACK_SWING = 206;</code>
     */
    public static final int SUB_GENRE_NEW_JACK_SWING_VALUE = 206;
    /**
     * <code>SUB_GENRE_SPECTRALISM = 207;</code>
     */
    public static final int SUB_GENRE_SPECTRALISM_VALUE = 207;
    /**
     * <code>SUB_GENRE_NEW_AGE = 208;</code>
     */
    public static final int SUB_GENRE_NEW_AGE_VALUE = 208;
    /**
     * <code>SUB_GENRE_SOUTHERN_SOUL = 209;</code>
     */
    public static final int SUB_GENRE_SOUTHERN_SOUL_VALUE = 209;
    /**
     * <code>SUB_GENRE_PRE_CLASSICAL = 210;</code>
     */
    public static final int SUB_GENRE_PRE_CLASSICAL_VALUE = 210;
    /**
     * <code>SUB_GENRE_TRIP_HOP = 211;</code>
     */
    public static final int SUB_GENRE_TRIP_HOP_VALUE = 211;
    /**
     * <code>SUB_GENRE_ROCKABILLY = 212;</code>
     */
    public static final int SUB_GENRE_ROCKABILLY_VALUE = 212;
    /**
     * <code>SUB_GENRE_DUB = 213;</code>
     */
    public static final int SUB_GENRE_DUB_VALUE = 213;
    /**
     * <code>SUB_GENRE_MODERN_JAZZ = 214;</code>
     */
    public static final int SUB_GENRE_MODERN_JAZZ_VALUE = 214;
    /**
     * <code>SUB_GENRE_HARD_ROCK = 215;</code>
     */
    public static final int SUB_GENRE_HARD_ROCK_VALUE = 215;
    /**
     * <code>SUB_GENRE_MODERN_R__APO__N__APO___B = 216;</code>
     */
    public static final int SUB_GENRE_MODERN_R__APO__N__APO___B_VALUE = 216;
    /**
     * <code>SUB_GENRE_BRITISH_FOLK = 217;</code>
     */
    public static final int SUB_GENRE_BRITISH_FOLK_VALUE = 217;
    /**
     * <code>SUB_GENRE_HARDCORE = 218;</code>
     */
    public static final int SUB_GENRE_HARDCORE_VALUE = 218;
    /**
     * <code>SUB_GENRE_BRITISH_DANCE_BAND = 219;</code>
     */
    public static final int SUB_GENRE_BRITISH_DANCE_BAND_VALUE = 219;
    /**
     * <code>SUB_GENRE_INDUSTRIAL_METAL = 220;</code>
     */
    public static final int SUB_GENRE_INDUSTRIAL_METAL_VALUE = 220;
    /**
     * <code>SUB_GENRE_CRUNK = 221;</code>
     */
    public static final int SUB_GENRE_CRUNK_VALUE = 221;
    /**
     * <code>SUB_GENRE_LATIN_JAZZ = 222;</code>
     */
    public static final int SUB_GENRE_LATIN_JAZZ_VALUE = 222;
    /**
     * <code>SUB_GENRE_CLASSIC_ROCK = 223;</code>
     */
    public static final int SUB_GENRE_CLASSIC_ROCK_VALUE = 223;
    /**
     * <code>SUB_GENRE_FUNK_METAL = 224;</code>
     */
    public static final int SUB_GENRE_FUNK_METAL_VALUE = 224;
    /**
     * <code>SUB_GENRE_PSYCHEDELIC_TRANCE = 225;</code>
     */
    public static final int SUB_GENRE_PSYCHEDELIC_TRANCE_VALUE = 225;
    /**
     * <code>SUB_GENRE_EXPERIMENTAL_HIP_HOP = 226;</code>
     */
    public static final int SUB_GENRE_EXPERIMENTAL_HIP_HOP_VALUE = 226;
    /**
     * <code>SUB_GENRE_BRAZILIAN_POP = 227;</code>
     */
    public static final int SUB_GENRE_BRAZILIAN_POP_VALUE = 227;
    /**
     * <code>SUB_GENRE_JAZZ_FUSION = 228;</code>
     */
    public static final int SUB_GENRE_JAZZ_FUSION_VALUE = 228;
    /**
     * <code>SUB_GENRE_HEARTLAND_ROCK = 229;</code>
     */
    public static final int SUB_GENRE_HEARTLAND_ROCK_VALUE = 229;
    /**
     * <code>SUB_GENRE_CANADIAN_FOLK = 230;</code>
     */
    public static final int SUB_GENRE_CANADIAN_FOLK_VALUE = 230;
    /**
     * <code>SUB_GENRE_EXPERIMENTAL_CLASSICAL = 231;</code>
     */
    public static final int SUB_GENRE_EXPERIMENTAL_CLASSICAL_VALUE = 231;
    /**
     * <code>SUB_GENRE_CONTEMPORARY_R__APO__N__APO___B = 232;</code>
     */
    public static final int SUB_GENRE_CONTEMPORARY_R__APO__N__APO___B_VALUE = 232;
    /**
     * <code>SUB_GENRE_COUNTRY_BLUES = 233;</code>
     */
    public static final int SUB_GENRE_COUNTRY_BLUES_VALUE = 233;
    /**
     * <code>SUB_GENRE_HIP_HOUSE = 234;</code>
     */
    public static final int SUB_GENRE_HIP_HOUSE_VALUE = 234;
    /**
     * <code>SUB_GENRE_CHICAGO_BLUES = 235;</code>
     */
    public static final int SUB_GENRE_CHICAGO_BLUES_VALUE = 235;
    /**
     * <code>SUB_GENRE_GARAGE_ROCK = 236;</code>
     */
    public static final int SUB_GENRE_GARAGE_ROCK_VALUE = 236;
    /**
     * <code>SUB_GENRE_MONOLOGUE = 237;</code>
     */
    public static final int SUB_GENRE_MONOLOGUE_VALUE = 237;
    /**
     * <code>SUB_GENRE_HINDUSTANI_CLASSICAL_MUSIC = 238;</code>
     */
    public static final int SUB_GENRE_HINDUSTANI_CLASSICAL_MUSIC_VALUE = 238;
    /**
     * <code>SUB_GENRE_BYZANTINE_CHANT = 239;</code>
     */
    public static final int SUB_GENRE_BYZANTINE_CHANT_VALUE = 239;
    /**
     * <code>SUB_GENRE_SPIRITUAL = 240;</code>
     */
    public static final int SUB_GENRE_SPIRITUAL_VALUE = 240;
    /**
     * <code>SUB_GENRE_AFRICAN_MUSIC = 241;</code>
     */
    public static final int SUB_GENRE_AFRICAN_MUSIC_VALUE = 241;
    /**
     * <code>SUB_GENRE_CARIBBEAN_MUSIC = 242;</code>
     */
    public static final int SUB_GENRE_CARIBBEAN_MUSIC_VALUE = 242;
    /**
     * <code>SUB_GENRE_REGIONAL_MEXICAN = 243;</code>
     */
    public static final int SUB_GENRE_REGIONAL_MEXICAN_VALUE = 243;
    /**
     * <code>SUB_GENRE_MIAMI_BASS = 244;</code>
     */
    public static final int SUB_GENRE_MIAMI_BASS_VALUE = 244;
    /**
     * <code>SUB_GENRE_PIL__OI__N = 245;</code>
     */
    public static final int SUB_GENRE_PIL__OI__N_VALUE = 245;
    /**
     * <code>SUB_GENRE_SWING = 246;</code>
     */
    public static final int SUB_GENRE_SWING_VALUE = 246;
    /**
     * <code>SUB_GENRE_BRAZILIAN = 247;</code>
     */
    public static final int SUB_GENRE_BRAZILIAN_VALUE = 247;
    /**
     * <code>SUB_GENRE_O_G_FUNK = 248;</code>
     */
    public static final int SUB_GENRE_O_G_FUNK_VALUE = 248;
    /**
     * <code>SUB_GENRE_USER_DEFINED = 249;</code>
     */
    public static final int SUB_GENRE_USER_DEFINED_VALUE = 249;
    /**
     * <code>SUB_GENRE_MODERN_BLUES = 250;</code>
     */
    public static final int SUB_GENRE_MODERN_BLUES_VALUE = 250;
    /**
     * <code>SUB_GENRE_GLITCH = 251;</code>
     */
    public static final int SUB_GENRE_GLITCH_VALUE = 251;
    /**
     * <code>SUB_GENRE_NEW_MEXICO_MUSIC = 252;</code>
     */
    public static final int SUB_GENRE_NEW_MEXICO_MUSIC_VALUE = 252;
    /**
     * <code>SUB_GENRE_PROGRESSIVE_METAL = 253;</code>
     */
    public static final int SUB_GENRE_PROGRESSIVE_METAL_VALUE = 253;
    /**
     * <code>SUB_GENRE_EARLY_BAROQUE = 254;</code>
     */
    public static final int SUB_GENRE_EARLY_BAROQUE_VALUE = 254;
    /**
     * <code>SUB_GENRE_EXPERIMENTAL_ELECTRONIC = 255;</code>
     */
    public static final int SUB_GENRE_EXPERIMENTAL_ELECTRONIC_VALUE = 255;
    /**
     * <code>SUB_GENRE_CLASSIC_R__APO__N__APO___B = 256;</code>
     */
    public static final int SUB_GENRE_CLASSIC_R__APO__N__APO___B_VALUE = 256;
    /**
     * <code>SUB_GENRE_MODAL_JAZZ = 257;</code>
     */
    public static final int SUB_GENRE_MODAL_JAZZ_VALUE = 257;
    /**
     * <code>SUB_GENRE_TRIBAL_HOUSE = 258;</code>
     */
    public static final int SUB_GENRE_TRIBAL_HOUSE_VALUE = 258;
    /**
     * <code>SUB_GENRE_GERMAN_POP = 259;</code>
     */
    public static final int SUB_GENRE_GERMAN_POP_VALUE = 259;
    /**
     * <code>SUB_GENRE_FRENCH_HOUSE = 260;</code>
     */
    public static final int SUB_GENRE_FRENCH_HOUSE_VALUE = 260;
    /**
     * <code>SUB_GENRE_ETHIOPIAN_JAZZ = 261;</code>
     */
    public static final int SUB_GENRE_ETHIOPIAN_JAZZ_VALUE = 261;
    /**
     * <code>SUB_GENRE_NEW_ORLEANS_R__APO__N__APO___B = 262;</code>
     */
    public static final int SUB_GENRE_NEW_ORLEANS_R__APO__N__APO___B_VALUE = 262;
    /**
     * <code>SUB_GENRE_SALSA = 263;</code>
     */
    public static final int SUB_GENRE_SALSA_VALUE = 263;
    /**
     * <code>SUB_GENRE_TURKISH_MUSIC = 264;</code>
     */
    public static final int SUB_GENRE_TURKISH_MUSIC_VALUE = 264;
    /**
     * <code>SUB_GENRE_SOUL = 265;</code>
     */
    public static final int SUB_GENRE_SOUL_VALUE = 265;
    /**
     * <code>SUB_GENRE_INDIE_ROCK = 266;</code>
     */
    public static final int SUB_GENRE_INDIE_ROCK_VALUE = 266;
    /**
     * <code>SUB_GENRE_ENGLISH_FOLK = 267;</code>
     */
    public static final int SUB_GENRE_ENGLISH_FOLK_VALUE = 267;
    /**
     * <code>SUB_GENRE_THIRD_WAVE_SKA = 268;</code>
     */
    public static final int SUB_GENRE_THIRD_WAVE_SKA_VALUE = 268;
    /**
     * <code>SUB_GENRE_JAMAICAN_MUSIC = 269;</code>
     */
    public static final int SUB_GENRE_JAMAICAN_MUSIC_VALUE = 269;
    /**
     * <code>SUB_GENRE_ITALO_DISCO = 270;</code>
     */
    public static final int SUB_GENRE_ITALO_DISCO_VALUE = 270;
    /**
     * <code>SUB_GENRE_CHICAGO_SOUL = 271;</code>
     */
    public static final int SUB_GENRE_CHICAGO_SOUL_VALUE = 271;
    /**
     * <code>SUB_GENRE_BLACK_METAL = 272;</code>
     */
    public static final int SUB_GENRE_BLACK_METAL_VALUE = 272;
    /**
     * <code>SUB_GENRE_PROGRESSIVE_HOUSE = 273;</code>
     */
    public static final int SUB_GENRE_PROGRESSIVE_HOUSE_VALUE = 273;
    /**
     * <code>SUB_GENRE_U_K_FUNKY = 274;</code>
     */
    public static final int SUB_GENRE_U_K_FUNKY_VALUE = 274;
    /**
     * <code>SUB_GENRE_LATIN_FREESTYLE = 275;</code>
     */
    public static final int SUB_GENRE_LATIN_FREESTYLE_VALUE = 275;
    /**
     * <code>SUB_GENRE_DANCEHALL = 276;</code>
     */
    public static final int SUB_GENRE_DANCEHALL_VALUE = 276;
    /**
     * <code>SUB_GENRE_TEJANO = 277;</code>
     */
    public static final int SUB_GENRE_TEJANO_VALUE = 277;
    /**
     * <code>SUB_GENRE_JUG_ENSEMBLE = 278;</code>
     */
    public static final int SUB_GENRE_JUG_ENSEMBLE_VALUE = 278;
    /**
     * <code>SUB_GENRE_CUECA = 279;</code>
     */
    public static final int SUB_GENRE_CUECA_VALUE = 279;
    /**
     * <code>SUB_GENRE_BREGA = 280;</code>
     */
    public static final int SUB_GENRE_BREGA_VALUE = 280;
    /**
     * <code>SUB_GENRE_ELECTRO_HOUSE = 281;</code>
     */
    public static final int SUB_GENRE_ELECTRO_HOUSE_VALUE = 281;
    /**
     * <code>SUB_GENRE_SCHLAGER = 282;</code>
     */
    public static final int SUB_GENRE_SCHLAGER_VALUE = 282;
    /**
     * <code>SUB_GENRE_HI_N_R_G = 283;</code>
     */
    public static final int SUB_GENRE_HI_N_R_G_VALUE = 283;
    /**
     * <code>SUB_GENRE_INDONESIAN_POP = 284;</code>
     */
    public static final int SUB_GENRE_INDONESIAN_POP_VALUE = 284;
    /**
     * <code>SUB_GENRE_BRAZILIAN_MUSIC = 285;</code>
     */
    public static final int SUB_GENRE_BRAZILIAN_MUSIC_VALUE = 285;
    /**
     * <code>SUB_GENRE_IRISH_FOLK = 286;</code>
     */
    public static final int SUB_GENRE_IRISH_FOLK_VALUE = 286;
    /**
     * <code>SUB_GENRE_NU_DISCO = 287;</code>
     */
    public static final int SUB_GENRE_NU_DISCO_VALUE = 287;
    /**
     * <code>SUB_GENRE_CHINESE_POP = 288;</code>
     */
    public static final int SUB_GENRE_CHINESE_POP_VALUE = 288;
    /**
     * <code>SUB_GENRE_RENAISSANCE = 289;</code>
     */
    public static final int SUB_GENRE_RENAISSANCE_VALUE = 289;
    /**
     * <code>SUB_GENRE_MINIMAL_HOUSE = 290;</code>
     */
    public static final int SUB_GENRE_MINIMAL_HOUSE_VALUE = 290;
    /**
     * <code>SUB_GENRE_MEMPHIS_SOUL = 291;</code>
     */
    public static final int SUB_GENRE_MEMPHIS_SOUL_VALUE = 291;
    /**
     * <code>SUB_GENRE_SCOTTISH_FOLK = 292;</code>
     */
    public static final int SUB_GENRE_SCOTTISH_FOLK_VALUE = 292;
    /**
     * <code>SUB_GENRE_NEW_ORLEANS_BLUES = 293;</code>
     */
    public static final int SUB_GENRE_NEW_ORLEANS_BLUES_VALUE = 293;
    /**
     * <code>SUB_GENRE_MINNEAPOLIS_FUNK = 294;</code>
     */
    public static final int SUB_GENRE_MINNEAPOLIS_FUNK_VALUE = 294;
    /**
     * <code>SUB_GENRE_GOTHIC_ROCK = 295;</code>
     */
    public static final int SUB_GENRE_GOTHIC_ROCK_VALUE = 295;
    /**
     * <code>SUB_GENRE_SYNTHWAVE = 296;</code>
     */
    public static final int SUB_GENRE_SYNTHWAVE_VALUE = 296;
    /**
     * <code>SUB_GENRE_GUARACHA = 297;</code>
     */
    public static final int SUB_GENRE_GUARACHA_VALUE = 297;
    /**
     * <code>SUB_GENRE_TRADITIONAL_ELECTRIC = 298;</code>
     */
    public static final int SUB_GENRE_TRADITIONAL_ELECTRIC_VALUE = 298;
    /**
     * <code>SUB_GENRE_COOL_JAZZ = 299;</code>
     */
    public static final int SUB_GENRE_COOL_JAZZ_VALUE = 299;
    /**
     * <code>SUB_GENRE_PUNK = 300;</code>
     */
    public static final int SUB_GENRE_PUNK_VALUE = 300;
    /**
     * <code>SUB_GENRE_FADO = 301;</code>
     */
    public static final int SUB_GENRE_FADO_VALUE = 301;
    /**
     * <code>SUB_GENRE_METAL = 302;</code>
     */
    public static final int SUB_GENRE_METAL_VALUE = 302;
    /**
     * <code>SUB_GENRE_WORK_SONGS = 303;</code>
     */
    public static final int SUB_GENRE_WORK_SONGS_VALUE = 303;
    /**
     * <code>SUB_GENRE_DOO_WOP = 304;</code>
     */
    public static final int SUB_GENRE_DOO_WOP_VALUE = 304;
    /**
     * <code>SUB_GENRE_20TH_CENTURY = 305;</code>
     */
    public static final int SUB_GENRE_20TH_CENTURY_VALUE = 305;
    /**
     * <code>SUB_GENRE_LATIN_HOUSE = 306;</code>
     */
    public static final int SUB_GENRE_LATIN_HOUSE_VALUE = 306;
    /**
     * <code>SUB_GENRE_SMOOTH_JAZZ = 307;</code>
     */
    public static final int SUB_GENRE_SMOOTH_JAZZ_VALUE = 307;
    /**
     * <code>SUB_GENRE_I_D_M = 308;</code>
     */
    public static final int SUB_GENRE_I_D_M_VALUE = 308;
    /**
     * <code>SUB_GENRE_SWAMP_BLUES = 309;</code>
     */
    public static final int SUB_GENRE_SWAMP_BLUES_VALUE = 309;
    /**
     * <code>SUB_GENRE_EARLY_ELECTRONIC = 310;</code>
     */
    public static final int SUB_GENRE_EARLY_ELECTRONIC_VALUE = 310;
    /**
     * <code>SUB_GENRE_WESTERN_SWING = 311;</code>
     */
    public static final int SUB_GENRE_WESTERN_SWING_VALUE = 311;
    /**
     * <code>SUB_GENRE_KWAITO = 312;</code>
     */
    public static final int SUB_GENRE_KWAITO_VALUE = 312;
    /**
     * <code>SUB_GENRE_ITALIAN_MUSIC = 313;</code>
     */
    public static final int SUB_GENRE_ITALIAN_MUSIC_VALUE = 313;
    /**
     * <code>SUB_GENRE_POP_ROCK = 314;</code>
     */
    public static final int SUB_GENRE_POP_ROCK_VALUE = 314;
    /**
     * <code>SUB_GENRE_POST_HARDCORE = 315;</code>
     */
    public static final int SUB_GENRE_POST_HARDCORE_VALUE = 315;
    /**
     * <code>SUB_GENRE_NOISE_ROCK = 316;</code>
     */
    public static final int SUB_GENRE_NOISE_ROCK_VALUE = 316;
    /**
     * <code>SUB_GENRE_PSYCHEDELIC_POP = 317;</code>
     */
    public static final int SUB_GENRE_PSYCHEDELIC_POP_VALUE = 317;
    /**
     * <code>SUB_GENRE_REPENTE = 318;</code>
     */
    public static final int SUB_GENRE_REPENTE_VALUE = 318;
    /**
     * <code>SUB_GENRE_PUERTO_RICAN_MUSIC = 319;</code>
     */
    public static final int SUB_GENRE_PUERTO_RICAN_MUSIC_VALUE = 319;
    /**
     * <code>SUB_GENRE_WEST_COAST_SOUL = 320;</code>
     */
    public static final int SUB_GENRE_WEST_COAST_SOUL_VALUE = 320;
    /**
     * <code>SUB_GENRE_INDONESIAN_MUSIC = 321;</code>
     */
    public static final int SUB_GENRE_INDONESIAN_MUSIC_VALUE = 321;
    /**
     * <code>SUB_GENRE_DIMOTIKO = 322;</code>
     */
    public static final int SUB_GENRE_DIMOTIKO_VALUE = 322;
    /**
     * <code>SUB_GENRE_DISCO = 323;</code>
     */
    public static final int SUB_GENRE_DISCO_VALUE = 323;
    /**
     * <code>SUB_GENRE_U_K_GARAGE = 324;</code>
     */
    public static final int SUB_GENRE_U_K_GARAGE_VALUE = 324;
    /**
     * <code>SUB_GENRE_GLAM_ROCK = 325;</code>
     */
    public static final int SUB_GENRE_GLAM_ROCK_VALUE = 325;
    /**
     * <code>SUB_GENRE_ALTERNATIVE_RAP = 326;</code>
     */
    public static final int SUB_GENRE_ALTERNATIVE_RAP_VALUE = 326;
    /**
     * <code>SUB_GENRE_POST_CLASSICAL = 327;</code>
     */
    public static final int SUB_GENRE_POST_CLASSICAL_VALUE = 327;
    /**
     * <code>SUB_GENRE_INDIETRONICA = 328;</code>
     */
    public static final int SUB_GENRE_INDIETRONICA_VALUE = 328;
    /**
     * <code>SUB_GENRE_CLASSIC_GOSPEL = 329;</code>
     */
    public static final int SUB_GENRE_CLASSIC_GOSPEL_VALUE = 329;
    /**
     * <code>SUB_GENRE_TRADITIONAL_JAZZ = 330;</code>
     */
    public static final int SUB_GENRE_TRADITIONAL_JAZZ_VALUE = 330;
    /**
     * <code>SUB_GENRE_MARACATU = 331;</code>
     */
    public static final int SUB_GENRE_MARACATU_VALUE = 331;
    /**
     * <code>SUB_GENRE_CORRIDOS = 332;</code>
     */
    public static final int SUB_GENRE_CORRIDOS_VALUE = 332;
    /**
     * <code>SUB_GENRE_CONTRADANZA = 333;</code>
     */
    public static final int SUB_GENRE_CONTRADANZA_VALUE = 333;
    /**
     * <code>SUB_GENRE_GRIME = 334;</code>
     */
    public static final int SUB_GENRE_GRIME_VALUE = 334;
    /**
     * <code>SUB_GENRE_BRITISH_BLUES = 335;</code>
     */
    public static final int SUB_GENRE_BRITISH_BLUES_VALUE = 335;
    /**
     * <code>SUB_GENRE_FUNK = 336;</code>
     */
    public static final int SUB_GENRE_FUNK_VALUE = 336;
    /**
     * <code>SUB_GENRE_INDIE_FOLK = 337;</code>
     */
    public static final int SUB_GENRE_INDIE_FOLK_VALUE = 337;
    /**
     * <code>SUB_GENRE_KIZOMBA = 338;</code>
     */
    public static final int SUB_GENRE_KIZOMBA_VALUE = 338;
    /**
     * <code>SUB_GENRE_DIGITAL_HARDCORE = 339;</code>
     */
    public static final int SUB_GENRE_DIGITAL_HARDCORE_VALUE = 339;
    /**
     * <code>SUB_GENRE_NEO_ROMANTIC = 340;</code>
     */
    public static final int SUB_GENRE_NEO_ROMANTIC_VALUE = 340;
    /**
     * <code>SUB_GENRE_TROPICALIA = 341;</code>
     */
    public static final int SUB_GENRE_TROPICALIA_VALUE = 341;
    /**
     * <code>SUB_GENRE_POP_RAP = 342;</code>
     */
    public static final int SUB_GENRE_POP_RAP_VALUE = 342;
    /**
     * <code>SUB_GENRE_COUNTRY_RAP = 343;</code>
     */
    public static final int SUB_GENRE_COUNTRY_RAP_VALUE = 343;
    /**
     * <code>SUB_GENRE_KAYOKYOKU = 344;</code>
     */
    public static final int SUB_GENRE_KAYOKYOKU_VALUE = 344;
    /**
     * <code>SUB_GENRE_WELSH_FOLK = 345;</code>
     */
    public static final int SUB_GENRE_WELSH_FOLK_VALUE = 345;
    /**
     * <code>SUB_GENRE_BALINESE_MUSIC = 346;</code>
     */
    public static final int SUB_GENRE_BALINESE_MUSIC_VALUE = 346;
    /**
     * <code>SUB_GENRE_ACOUSMATIC = 347;</code>
     */
    public static final int SUB_GENRE_ACOUSMATIC_VALUE = 347;
    /**
     * <code>SUB_GENRE_MINIMAL_TECHNO = 348;</code>
     */
    public static final int SUB_GENRE_MINIMAL_TECHNO_VALUE = 348;
    /**
     * <code>SUB_GENRE_AXE = 349;</code>
     */
    public static final int SUB_GENRE_AXE_VALUE = 349;
    /**
     * <code>SUB_GENRE_ACID_HOUSE = 350;</code>
     */
    public static final int SUB_GENRE_ACID_HOUSE_VALUE = 350;
    /**
     * <code>SUB_GENRE_AFOXE = 351;</code>
     */
    public static final int SUB_GENRE_AFOXE_VALUE = 351;
    /**
     * <code>SUB_GENRE_PSYCHOBILLY = 352;</code>
     */
    public static final int SUB_GENRE_PSYCHOBILLY_VALUE = 352;
    /**
     * <code>SUB_GENRE_ELECTRIC_FOLK = 353;</code>
     */
    public static final int SUB_GENRE_ELECTRIC_FOLK_VALUE = 353;
    /**
     * <code>SUB_GENRE_ARS_NOVA = 354;</code>
     */
    public static final int SUB_GENRE_ARS_NOVA_VALUE = 354;
    /**
     * <code>SUB_GENRE_CLASSICAL = 355;</code>
     */
    public static final int SUB_GENRE_CLASSICAL_VALUE = 355;
    /**
     * <code>SUB_GENRE_STONER_ROCK = 356;</code>
     */
    public static final int SUB_GENRE_STONER_ROCK_VALUE = 356;
    /**
     * <code>SUB_GENRE_TECH_HOUSE = 357;</code>
     */
    public static final int SUB_GENRE_TECH_HOUSE_VALUE = 357;
    /**
     * <code>SUB_GENRE_EMO_ROCK = 358;</code>
     */
    public static final int SUB_GENRE_EMO_ROCK_VALUE = 358;
    /**
     * <code>SUB_GENRE_M_P_B = 359;</code>
     */
    public static final int SUB_GENRE_M_P_B_VALUE = 359;
    /**
     * <code>SUB_GENRE_POST_BOP = 360;</code>
     */
    public static final int SUB_GENRE_POST_BOP_VALUE = 360;
    /**
     * <code>SUB_GENRE_WORLD_FUSION_JAZZ = 361;</code>
     */
    public static final int SUB_GENRE_WORLD_FUSION_JAZZ_VALUE = 361;
    /**
     * <code>SUB_GENRE_ROOTS = 362;</code>
     */
    public static final int SUB_GENRE_ROOTS_VALUE = 362;
    /**
     * <code>SUB_GENRE_FIRST_VIENNESE_SCHOOL = 363;</code>
     */
    public static final int SUB_GENRE_FIRST_VIENNESE_SCHOOL_VALUE = 363;
    /**
     * <code>SUB_GENRE_LATE_RENAISSANCE = 364;</code>
     */
    public static final int SUB_GENRE_LATE_RENAISSANCE_VALUE = 364;
    /**
     * <code>SUB_GENRE_JAZZ_BLUES = 365;</code>
     */
    public static final int SUB_GENRE_JAZZ_BLUES_VALUE = 365;
    /**
     * <code>SUB_GENRE_HARDCORE_BREAKBEAT = 366;</code>
     */
    public static final int SUB_GENRE_HARDCORE_BREAKBEAT_VALUE = 366;
    /**
     * <code>SUB_GENRE_SEA_SHANTIES = 367;</code>
     */
    public static final int SUB_GENRE_SEA_SHANTIES_VALUE = 367;
    /**
     * <code>SUB_GENRE_ROMANIAN_MUSIC = 368;</code>
     */
    public static final int SUB_GENRE_ROMANIAN_MUSIC_VALUE = 368;
    /**
     * <code>SUB_GENRE_JAZZ_FUNK = 369;</code>
     */
    public static final int SUB_GENRE_JAZZ_FUNK_VALUE = 369;
    /**
     * <code>SUB_GENRE_TRADITIONAL_POP = 370;</code>
     */
    public static final int SUB_GENRE_TRADITIONAL_POP_VALUE = 370;
    /**
     * <code>SUB_GENRE_POETRY = 371;</code>
     */
    public static final int SUB_GENRE_POETRY_VALUE = 371;
    /**
     * <code>SUB_GENRE_BAKERSFIELD_SOUND = 372;</code>
     */
    public static final int SUB_GENRE_BAKERSFIELD_SOUND_VALUE = 372;
    /**
     * <code>SUB_GENRE_FRENCH_POP = 373;</code>
     */
    public static final int SUB_GENRE_FRENCH_POP_VALUE = 373;
    /**
     * <code>SUB_GENRE_MODERNISM = 374;</code>
     */
    public static final int SUB_GENRE_MODERNISM_VALUE = 374;
    /**
     * <code>SUB_GENRE_ORGANUM = 375;</code>
     */
    public static final int SUB_GENRE_ORGANUM_VALUE = 375;
    /**
     * <code>SUB_GENRE_NO_WAVE = 376;</code>
     */
    public static final int SUB_GENRE_NO_WAVE_VALUE = 376;
    /**
     * <code>SUB_GENRE_GARAGE_HOUSE = 377;</code>
     */
    public static final int SUB_GENRE_GARAGE_HOUSE_VALUE = 377;
    /**
     * <code>SUB_GENRE_HOUSE = 378;</code>
     */
    public static final int SUB_GENRE_HOUSE_VALUE = 378;
    /**
     * <code>SUB_GENRE_SWAMP_ROCK = 379;</code>
     */
    public static final int SUB_GENRE_SWAMP_ROCK_VALUE = 379;
    /**
     * <code>SUB_GENRE_MAMBO = 380;</code>
     */
    public static final int SUB_GENRE_MAMBO_VALUE = 380;
    /**
     * <code>SUB_GENRE_PORTUGUESE_MUSIC = 381;</code>
     */
    public static final int SUB_GENRE_PORTUGUESE_MUSIC_VALUE = 381;
    /**
     * <code>SUB_GENRE_TONADA = 382;</code>
     */
    public static final int SUB_GENRE_TONADA_VALUE = 382;
    /**
     * <code>SUB_GENRE_MUSIQUE_CONCRETE = 383;</code>
     */
    public static final int SUB_GENRE_MUSIQUE_CONCRETE_VALUE = 383;
    /**
     * <code>SUB_GENRE_ACID_JAZZ = 384;</code>
     */
    public static final int SUB_GENRE_ACID_JAZZ_VALUE = 384;
    /**
     * <code>SUB_GENRE_POP_FUNK = 385;</code>
     */
    public static final int SUB_GENRE_POP_FUNK_VALUE = 385;
    /**
     * <code>SUB_GENRE_POST_GRUNGE = 386;</code>
     */
    public static final int SUB_GENRE_POST_GRUNGE_VALUE = 386;
    /**
     * <code>SUB_GENRE_HOKKIEN_POP = 387;</code>
     */
    public static final int SUB_GENRE_HOKKIEN_POP_VALUE = 387;
    /**
     * <code>SUB_GENRE_HILL_COUNTRY_BLUES = 388;</code>
     */
    public static final int SUB_GENRE_HILL_COUNTRY_BLUES_VALUE = 388;
    /**
     * <code>SUB_GENRE_BREAKBEAT = 389;</code>
     */
    public static final int SUB_GENRE_BREAKBEAT_VALUE = 389;
    /**
     * <code>SUB_GENRE_AFROBEAT = 390;</code>
     */
    public static final int SUB_GENRE_AFROBEAT_VALUE = 390;
    /**
     * <code>SUB_GENRE_GREEK_POP = 391;</code>
     */
    public static final int SUB_GENRE_GREEK_POP_VALUE = 391;
    /**
     * <code>SUB_GENRE_FREE_JAZZ = 392;</code>
     */
    public static final int SUB_GENRE_FREE_JAZZ_VALUE = 392;
    /**
     * <code>SUB_GENRE_NEO_SOUL = 393;</code>
     */
    public static final int SUB_GENRE_NEO_SOUL_VALUE = 393;
    /**
     * <code>SUB_GENRE_POST_MINIMALISM = 394;</code>
     */
    public static final int SUB_GENRE_POST_MINIMALISM_VALUE = 394;
    /**
     * <code>SUB_GENRE_E_B_M = 395;</code>
     */
    public static final int SUB_GENRE_E_B_M_VALUE = 395;
    /**
     * <code>SUB_GENRE_TELUGU = 396;</code>
     */
    public static final int SUB_GENRE_TELUGU_VALUE = 396;
    /**
     * <code>SUB_GENRE_DREAM_POP = 397;</code>
     */
    public static final int SUB_GENRE_DREAM_POP_VALUE = 397;
    /**
     * <code>SUB_GENRE_NU_METAL = 398;</code>
     */
    public static final int SUB_GENRE_NU_METAL_VALUE = 398;
    /**
     * <code>SUB_GENRE_DANZON = 399;</code>
     */
    public static final int SUB_GENRE_DANZON_VALUE = 399;
    /**
     * <code>SUB_GENRE_BANDA = 400;</code>
     */
    public static final int SUB_GENRE_BANDA_VALUE = 400;
    /**
     * <code>SUB_GENRE_METALCORE = 401;</code>
     */
    public static final int SUB_GENRE_METALCORE_VALUE = 401;
    /**
     * <code>SUB_GENRE_MATH_ROCK = 402;</code>
     */
    public static final int SUB_GENRE_MATH_ROCK_VALUE = 402;
    /**
     * <code>SUB_GENRE_GRUNGE = 403;</code>
     */
    public static final int SUB_GENRE_GRUNGE_VALUE = 403;
    /**
     * <code>SUB_GENRE_TRAP = 404;</code>
     */
    public static final int SUB_GENRE_TRAP_VALUE = 404;
    /**
     * <code>SUB_GENRE_ELECTROCLASH = 405;</code>
     */
    public static final int SUB_GENRE_ELECTROCLASH_VALUE = 405;
    /**
     * <code>SUB_GENRE_RIOT_GRRRL = 406;</code>
     */
    public static final int SUB_GENRE_RIOT_GRRRL_VALUE = 406;
    /**
     * <code>SUB_GENRE_RETRO_SOUL = 407;</code>
     */
    public static final int SUB_GENRE_RETRO_SOUL_VALUE = 407;
    /**
     * <code>SUB_GENRE_PALO = 408;</code>
     */
    public static final int SUB_GENRE_PALO_VALUE = 408;
    /**
     * <code>SUB_GENRE_CHICAGO_HOUSE = 409;</code>
     */
    public static final int SUB_GENRE_CHICAGO_HOUSE_VALUE = 409;
    /**
     * <code>SUB_GENRE_AFRO_ROCK = 410;</code>
     */
    public static final int SUB_GENRE_AFRO_ROCK_VALUE = 410;
    /**
     * <code>SUB_GENRE_FRENCH_MUSIC = 411;</code>
     */
    public static final int SUB_GENRE_FRENCH_MUSIC_VALUE = 411;
    /**
     * <code>SUB_GENRE_WEST_COAST_BLUES = 412;</code>
     */
    public static final int SUB_GENRE_WEST_COAST_BLUES_VALUE = 412;
    /**
     * <code>SUB_GENRE_SOUTHERN_ROCK = 413;</code>
     */
    public static final int SUB_GENRE_SOUTHERN_ROCK_VALUE = 413;
    /**
     * <code>SUB_GENRE_ARS_ANTIQUA = 414;</code>
     */
    public static final int SUB_GENRE_ARS_ANTIQUA_VALUE = 414;
    /**
     * <code>SUB_GENRE_LATE_ROMANTIC = 415;</code>
     */
    public static final int SUB_GENRE_LATE_ROMANTIC_VALUE = 415;
    /**
     * <code>SUB_GENRE_TRADITIONAL_R__APO__N__APO___B = 416;</code>
     */
    public static final int SUB_GENRE_TRADITIONAL_R__APO__N__APO___B_VALUE = 416;
    /**
     * <code>SUB_GENRE_AFRO_FUNK = 417;</code>
     */
    public static final int SUB_GENRE_AFRO_FUNK_VALUE = 417;
    /**
     * <code>SUB_GENRE_BROKEN_BEAT = 418;</code>
     */
    public static final int SUB_GENRE_BROKEN_BEAT_VALUE = 418;
    /**
     * <code>SUB_GENRE_HUPANGO = 419;</code>
     */
    public static final int SUB_GENRE_HUPANGO_VALUE = 419;
    /**
     * <code>SUB_GENRE_ROCKSTEADY = 420;</code>
     */
    public static final int SUB_GENRE_ROCKSTEADY_VALUE = 420;
    /**
     * <code>SUB_GENRE_21ST_CENTURY = 421;</code>
     */
    public static final int SUB_GENRE_21ST_CENTURY_VALUE = 421;
    /**
     * <code>SUB_GENRE_CHIMURENGA = 422;</code>
     */
    public static final int SUB_GENRE_CHIMURENGA_VALUE = 422;
    /**
     * <code>SUB_GENRE_CLASSIC_HIP_HOP = 423;</code>
     */
    public static final int SUB_GENRE_CLASSIC_HIP_HOP_VALUE = 423;
    /**
     * <code>SUB_GENRE_HAPPY_HARDCORE = 424;</code>
     */
    public static final int SUB_GENRE_HAPPY_HARDCORE_VALUE = 424;
    /**
     * <code>SUB_GENRE_CALYPSO = 425;</code>
     */
    public static final int SUB_GENRE_CALYPSO_VALUE = 425;
    /**
     * <code>SUB_GENRE_TEXAS_BLUES = 426;</code>
     */
    public static final int SUB_GENRE_TEXAS_BLUES_VALUE = 426;
    /**
     * <code>SUB_GENRE_POST_PUNK = 427;</code>
     */
    public static final int SUB_GENRE_POST_PUNK_VALUE = 427;
    /**
     * <code>SUB_GENRE_CONJUNTO = 428;</code>
     */
    public static final int SUB_GENRE_CONJUNTO_VALUE = 428;
    /**
     * <code>SUB_GENRE_DURANGUENSE = 429;</code>
     */
    public static final int SUB_GENRE_DURANGUENSE_VALUE = 429;
    /**
     * <code>SUB_GENRE_PAKISTANI_MUSIC = 430;</code>
     */
    public static final int SUB_GENRE_PAKISTANI_MUSIC_VALUE = 430;
    /**
     * <code>SUB_GENRE_EARLY_ROMANTIC = 431;</code>
     */
    public static final int SUB_GENRE_EARLY_ROMANTIC_VALUE = 431;
    /**
     * <code>SUB_GENRE_COMMENTARY = 432;</code>
     */
    public static final int SUB_GENRE_COMMENTARY_VALUE = 432;
    /**
     * <code>SUB_GENRE_DRUMSTEP = 433;</code>
     */
    public static final int SUB_GENRE_DRUMSTEP_VALUE = 433;
    /**
     * <code>SUB_GENRE_ELECTRO_GOTH = 434;</code>
     */
    public static final int SUB_GENRE_ELECTRO_GOTH_VALUE = 434;
    /**
     * <code>SUB_GENRE_GRUPERA = 435;</code>
     */
    public static final int SUB_GENRE_GRUPERA_VALUE = 435;
    /**
     * <code>SUB_GENRE_CHORO = 436;</code>
     */
    public static final int SUB_GENRE_CHORO_VALUE = 436;
    /**
     * <code>SUB_GENRE_GANGSTA_RAP = 437;</code>
     */
    public static final int SUB_GENRE_GANGSTA_RAP_VALUE = 437;
    /**
     * <code>SUB_GENRE_CONTEMPORARY = 438;</code>
     */
    public static final int SUB_GENRE_CONTEMPORARY_VALUE = 438;
    /**
     * <code>SUB_GENRE_LIGHT_MUSIC = 439;</code>
     */
    public static final int SUB_GENRE_LIGHT_MUSIC_VALUE = 439;
    /**
     * <code>SUB_GENRE_GREEK_MUSIC = 440;</code>
     */
    public static final int SUB_GENRE_GREEK_MUSIC_VALUE = 440;
    /**
     * <code>SUB_GENRE_MANDO_POP = 441;</code>
     */
    public static final int SUB_GENRE_MANDO_POP_VALUE = 441;
    /**
     * <code>SUB_GENRE_CHAMBER_POP = 442;</code>
     */
    public static final int SUB_GENRE_CHAMBER_POP_VALUE = 442;
    /**
     * <code>SUB_GENRE_DOOM_METAL = 443;</code>
     */
    public static final int SUB_GENRE_DOOM_METAL_VALUE = 443;
    /**
     * <code>SUB_GENRE_MERENGUE = 444;</code>
     */
    public static final int SUB_GENRE_MERENGUE_VALUE = 444;
    /**
     * <code>SUB_GENRE_PSYCHEDELIC_ROCK = 445;</code>
     */
    public static final int SUB_GENRE_PSYCHEDELIC_ROCK_VALUE = 445;
    /**
     * <code>SUB_GENRE_REGGAETON = 446;</code>
     */
    public static final int SUB_GENRE_REGGAETON_VALUE = 446;
    /**
     * <code>SUB_GENRE_P_FUNK = 447;</code>
     */
    public static final int SUB_GENRE_P_FUNK_VALUE = 447;
    /**
     * <code>SUB_GENRE_AMERICANA = 448;</code>
     */
    public static final int SUB_GENRE_AMERICANA_VALUE = 448;
    /**
     * <code>SUB_GENRE_CAPE_JAZZ = 449;</code>
     */
    public static final int SUB_GENRE_CAPE_JAZZ_VALUE = 449;
    /**
     * <code>SUB_GENRE_WESTCOAST_HIP_HOP = 450;</code>
     */
    public static final int SUB_GENRE_WESTCOAST_HIP_HOP_VALUE = 450;
    /**
     * <code>SUB_GENRE_G_FUNK = 451;</code>
     */
    public static final int SUB_GENRE_G_FUNK_VALUE = 451;
    /**
     * <code>SUB_GENRE_MUSIC_OF_THE_PHILIPPINES = 452;</code>
     */
    public static final int SUB_GENRE_MUSIC_OF_THE_PHILIPPINES_VALUE = 452;
    /**
     * <code>SUB_GENRE_JAZZ_ROCK = 453;</code>
     */
    public static final int SUB_GENRE_JAZZ_ROCK_VALUE = 453;
    /**
     * <code>SUB_GENRE_JAVANESE_MUSIC = 454;</code>
     */
    public static final int SUB_GENRE_JAVANESE_MUSIC_VALUE = 454;
    /**
     * <code>SUB_GENRE_MIDDLE_RENAISSANCE = 455;</code>
     */
    public static final int SUB_GENRE_MIDDLE_RENAISSANCE_VALUE = 455;
    /**
     * <code>SUB_GENRE_SOUTH_AMERICAN_MUSIC = 456;</code>
     */
    public static final int SUB_GENRE_SOUTH_AMERICAN_MUSIC_VALUE = 456;
    /**
     * <code>SUB_GENRE_ELECTRONIC_POP = 457;</code>
     */
    public static final int SUB_GENRE_ELECTRONIC_POP_VALUE = 457;
    /**
     * <code>SUB_GENRE_NEO_PSYCHEDELIA = 458;</code>
     */
    public static final int SUB_GENRE_NEO_PSYCHEDELIA_VALUE = 458;
    /**
     * <code>SUB_GENRE_ART_ROCK = 459;</code>
     */
    public static final int SUB_GENRE_ART_ROCK_VALUE = 459;
    /**
     * <code>SUB_GENRE_VOCAL_HOUSE = 460;</code>
     */
    public static final int SUB_GENRE_VOCAL_HOUSE_VALUE = 460;
    /**
     * <code>SUB_GENRE_PROTO_PUNK = 461;</code>
     */
    public static final int SUB_GENRE_PROTO_PUNK_VALUE = 461;
    /**
     * <code>SUB_GENRE_FILIPINO_POP = 462;</code>
     */
    public static final int SUB_GENRE_FILIPINO_POP_VALUE = 462;
    /**
     * <code>SUB_GENRE_MOTOWN_SOUND = 463;</code>
     */
    public static final int SUB_GENRE_MOTOWN_SOUND_VALUE = 463;
    /**
     * <code>SUB_GENRE_DRILL_N_BASS = 464;</code>
     */
    public static final int SUB_GENRE_DRILL_N_BASS_VALUE = 464;
    /**
     * <code>SUB_GENRE_FUTURISM = 465;</code>
     */
    public static final int SUB_GENRE_FUTURISM_VALUE = 465;
    /**
     * <code>SUB_GENRE_TECHNO = 466;</code>
     */
    public static final int SUB_GENRE_TECHNO_VALUE = 466;
    /**
     * <code>SUB_GENRE_RAGTIME = 467;</code>
     */
    public static final int SUB_GENRE_RAGTIME_VALUE = 467;
    /**
     * <code>SUB_GENRE_AVANT_GARDE_JAZZ = 468;</code>
     */
    public static final int SUB_GENRE_AVANT_GARDE_JAZZ_VALUE = 468;
    /**
     * <code>SUB_GENRE_STAND_UP_COMEDY = 469;</code>
     */
    public static final int SUB_GENRE_STAND_UP_COMEDY_VALUE = 469;
    /**
     * <code>SUB_GENRE_PIEDMONT_BLUES = 470;</code>
     */
    public static final int SUB_GENRE_PIEDMONT_BLUES_VALUE = 470;
    /**
     * <code>SUB_GENRE_HARDCORE_RAP = 471;</code>
     */
    public static final int SUB_GENRE_HARDCORE_RAP_VALUE = 471;
    /**
     * <code>SUB_GENRE_BRIT_ROCK = 472;</code>
     */
    public static final int SUB_GENRE_BRIT_ROCK_VALUE = 472;
    /**
     * <code>SUB_GENRE_MIDDLE_ROMANTIC = 473;</code>
     */
    public static final int SUB_GENRE_MIDDLE_ROMANTIC_VALUE = 473;
    /**
     * <code>SUB_GENRE_SPEED_GARAGE = 474;</code>
     */
    public static final int SUB_GENRE_SPEED_GARAGE_VALUE = 474;
    /**
     * <code>SUB_GENRE_CUBAN_MUSIC = 475;</code>
     */
    public static final int SUB_GENRE_CUBAN_MUSIC_VALUE = 475;
    /**
     * <code>SUB_GENRE_NORTH_AMERICAN_MUSIC = 476;</code>
     */
    public static final int SUB_GENRE_NORTH_AMERICAN_MUSIC_VALUE = 476;
    /**
     * <code>SUB_GENRE_DETROIT_TECHNO = 477;</code>
     */
    public static final int SUB_GENRE_DETROIT_TECHNO_VALUE = 477;
    /**
     * <code>SUB_GENRE_ELECTRO = 478;</code>
     */
    public static final int SUB_GENRE_ELECTRO_VALUE = 478;
    /**
     * <code>SUB_GENRE_SOCA = 479;</code>
     */
    public static final int SUB_GENRE_SOCA_VALUE = 479;
    /**
     * <code>SUB_GENRE_SPACE_ROCK = 480;</code>
     */
    public static final int SUB_GENRE_SPACE_ROCK_VALUE = 480;
    /**
     * <code>SUB_GENRE_ENKA = 481;</code>
     */
    public static final int SUB_GENRE_ENKA_VALUE = 481;
    /**
     * <code>SUB_GENRE_POP_PUNK = 482;</code>
     */
    public static final int SUB_GENRE_POP_PUNK_VALUE = 482;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SubGenre valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SubGenre forNumber(int value) {
      switch (value) {
        case 0: return SUB_GENRE_MIDDLE20TH_CENTURY;
        case 1: return SUB_GENRE_AFRICAN_JAZZ;
        case 2: return SUB_GENRE_HARD_BOP;
        case 3: return SUB_GENRE_NOUVELLE_CHANSON;
        case 4: return SUB_GENRE_URBAN_CONTEMPORARY_GOSPEL;
        case 5: return SUB_GENRE_CUMBIA;
        case 6: return SUB_GENRE_NEW_FLAMENCO;
        case 7: return SUB_GENRE_SALVES;
        case 8: return SUB_GENRE_DARK_WAVE;
        case 9: return SUB_GENRE_INTERVIEW;
        case 10: return SUB_GENRE_BARBERSHOP_MUSIC;
        case 11: return SUB_GENRE_BOOGIE;
        case 12: return SUB_GENRE_SURF;
        case 13: return SUB_GENRE_PROGRESSIVE_TRANCE;
        case 14: return SUB_GENRE_DEATH_METAL;
        case 15: return SUB_GENRE_MODERN_COUNTRY;
        case 16: return SUB_GENRE_MBALAX;
        case 17: return SUB_GENRE_EASTCOAST_HIP_HOP;
        case 18: return SUB_GENRE_2_STEP_GARAGE;
        case 19: return SUB_GENRE_POWER_POP;
        case 20: return SUB_GENRE_NORTENO;
        case 21: return SUB_GENRE_GO_GO;
        case 22: return SUB_GENRE_CELTIC;
        case 23: return SUB_GENRE_PIANO_BLUES;
        case 24: return SUB_GENRE_GOLDEN_AGE;
        case 25: return SUB_GENRE_MAKOSSA;
        case 26: return SUB_GENRE_MODERN_LAIKO;
        case 27: return SUB_GENRE_ACOUSTIC_CHICAGO_BLUES;
        case 28: return SUB_GENRE_JUNGLE;
        case 29: return SUB_GENRE_PUNJABI_MUSIC;
        case 30: return SUB_GENRE_PSYCHEDELIC_SOUL;
        case 31: return SUB_GENRE_TIBETAN_MUSIC;
        case 32: return SUB_GENRE_JUMP__MINUS___BLUES;
        case 33: return SUB_GENRE_GREGORIAN_CHANT;
        case 34: return SUB_GENRE_SCREAMO;
        case 35: return SUB_GENRE_CONSCIOUS_RAP;
        case 36: return SUB_GENRE_MIDDLE_BAROQUE;
        case 37: return SUB_GENRE_WORLDBEAT;
        case 38: return SUB_GENRE_DEEP_SOUL;
        case 39: return SUB_GENRE_DRUM_N_BASS;
        case 40: return SUB_GENRE_CARNATIC_MUSIC;
        case 41: return SUB_GENRE_MERSEYBEAT;
        case 42: return SUB_GENRE_QUIET_STORM;
        case 43: return SUB_GENRE_NASHVILLE_SOUND;
        case 44: return SUB_GENRE_BRITISH_INVASION;
        case 45: return SUB_GENRE_SPEED_METAL;
        case 46: return SUB_GENRE_AMERICAN_PRIMITIVE_GUITAR;
        case 47: return SUB_GENRE_OUTLAW_COUNTRY;
        case 48: return SUB_GENRE_ALTERNATIVE_COUNTRY;
        case 49: return SUB_GENRE_ALTERNATIVE_POP;
        case 50: return SUB_GENRE_DIRTY_RAP;
        case 51: return SUB_GENRE_INDIAN_MUSIC;
        case 52: return SUB_GENRE_INDIAN_POP;
        case 53: return SUB_GENRE_MEDIEVAL;
        case 54: return SUB_GENRE_DUBSTEP_U_S;
        case 55: return SUB_GENRE_THRASH_METAL;
        case 56: return SUB_GENRE_AMBIENT;
        case 57: return SUB_GENRE_OLD_TIME;
        case 58: return SUB_GENRE_ELECTRONICA__FS___ECLECTIC;
        case 59: return SUB_GENRE_DUBSTEP_U_K;
        case 60: return SUB_GENRE_MARIACHI;
        case 61: return SUB_GENRE_COLOMBIAN_MUSIC;
        case 62: return SUB_GENRE_MADCHESTER;
        case 63: return SUB_GENRE_SAMBA;
        case 64: return SUB_GENRE_FOLK_BAROQUE;
        case 65: return SUB_GENRE_RANCHERA;
        case 66: return SUB_GENRE_PHILLYSOUND;
        case 67: return SUB_GENRE_BOLLYWOOD;
        case 68: return SUB_GENRE_SYNTH_POP;
        case 69: return SUB_GENRE_IRISH_MUSIC;
        case 70: return SUB_GENRE_MODERN_CREATIVE;
        case 71: return SUB_GENRE_SOUTH_AMERICAN_ROCK;
        case 72: return SUB_GENRE_TWEE_POP;
        case 73: return SUB_GENRE_AMBROSIAN_CHANT;
        case 74: return SUB_GENRE_COUNTRY_ROCK;
        case 75: return SUB_GENRE_GOTHIC_METAL;
        case 76: return SUB_GENRE_HIPLIFE;
        case 77: return SUB_GENRE_SOFT_ROCK;
        case 78: return SUB_GENRE_PROGRESSIVE_ROCK;
        case 79: return SUB_GENRE_JAZZ_HOUSE;
        case 80: return SUB_GENRE_TRADITIONAL_COUNTRY;
        case 81: return SUB_GENRE_EXOTICA;
        case 82: return SUB_GENRE_SERIALISM;
        case 83: return SUB_GENRE_SWING_REVIVAL;
        case 84: return SUB_GENRE_PLAINSONG;
        case 85: return SUB_GENRE_NEAPOLITAN_SONG;
        case 86: return SUB_GENRE_CANADIAN_FIDDLING;
        case 87: return SUB_GENRE_EARLY_RENAISSANCE;
        case 88: return SUB_GENRE_BIKUTSI;
        case 89: return SUB_GENRE_POST_ROCK;
        case 90: return SUB_GENRE_NEO_CLASSICAL;
        case 91: return SUB_GENRE_HARDSTYLE;
        case 92: return SUB_GENRE_INDUSTRIAL;
        case 93: return SUB_GENRE_HIGHLIFE;
        case 94: return SUB_GENRE_HAIR_METAL;
        case 95: return SUB_GENRE_LATE20TH_CENTURY;
        case 96: return SUB_GENRE_FOLK_REVIVAL;
        case 97: return SUB_GENRE_COUNTRY_POP;
        case 98: return SUB_GENRE_POLKA;
        case 99: return SUB_GENRE_HONKY_TONK;
        case 100: return SUB_GENRE_TRADITIONAL_ACOUSTIC;
        case 101: return SUB_GENRE_BLUE_EYED_SOUL;
        case 102: return SUB_GENRE_ZYDECO;
        case 103: return SUB_GENRE_TANGO;
        case 104: return SUB_GENRE_BIG_BEAT;
        case 105: return SUB_GENRE_ALTERNATIVE_DANCE;
        case 106: return SUB_GENRE_NEW_ROMANTIC;
        case 107: return SUB_GENRE_NOISE_POP;
        case 108: return SUB_GENRE_SKA;
        case 109: return SUB_GENRE_NOISE_MUSIC;
        case 110: return SUB_GENRE_CAPOEIRA_MUSIC;
        case 111: return SUB_GENRE_FOLKTRONICA;
        case 112: return SUB_GENRE_UNDERGROUND;
        case 113: return SUB_GENRE_ROMANTIC;
        case 114: return SUB_GENRE_GABBA;
        case 115: return SUB_GENRE_CZECH_MUSIC;
        case 116: return SUB_GENRE_DOMINICAN_MUSIC;
        case 117: return SUB_GENRE_BOOGALOO;
        case 118: return SUB_GENRE_JOVEM_GUARDA;
        case 119: return SUB_GENRE_JAZZ_POP;
        case 120: return SUB_GENRE_CHILEAN_MUSIC;
        case 121: return SUB_GENRE_SOUL_JAZZ;
        case 122: return SUB_GENRE_HARDCORE_PUNK;
        case 123: return SUB_GENRE_AMBIENT_HOUSE;
        case 124: return SUB_GENRE_DUTCH_HOUSE;
        case 125: return SUB_GENRE_ALTERNATIVE_ROCK;
        case 126: return SUB_GENRE_FLAMENCO;
        case 127: return SUB_GENRE_ROCK_N_ROLL;
        case 128: return SUB_GENRE_MIDDLE_EASTERN_MUSIC;
        case 129: return SUB_GENRE_DETROIT_HOUSE;
        case 130: return SUB_GENRE_ELECTRIC_TEXAS_BLUES;
        case 131: return SUB_GENRE_BOOGIE_ROCK;
        case 132: return SUB_GENRE_MBAQANGA;
        case 133: return SUB_GENRE_TRANCE;
        case 134: return SUB_GENRE_CHA_CHA_CHA;
        case 135: return SUB_GENRE_SPANISH_MUSIC;
        case 136: return SUB_GENRE_ALTERNATIVE_R__APO__N__APO___B;
        case 137: return SUB_GENRE_EARLY_ROCK;
        case 138: return SUB_GENRE_HARD_TRANCE;
        case 139: return SUB_GENRE_ROOTS_REGGAE;
        case 140: return SUB_GENRE_CARIBBEAN_POP;
        case 141: return SUB_GENRE_LATE_BAROQUE;
        case 142: return SUB_GENRE_GERMAN_MUSIC;
        case 143: return SUB_GENRE_EURODANCE;
        case 144: return SUB_GENRE_JAPANESE_POP;
        case 145: return SUB_GENRE_BAROQUE;
        case 146: return SUB_GENRE_BOOGIE_WOOGIE;
        case 147: return SUB_GENRE_SOUTHERN_RAP;
        case 148: return SUB_GENRE_EXPERIMENTAL_ROCK;
        case 149: return SUB_GENRE_SOUKOUS;
        case 150: return SUB_GENRE_CONVERSATION;
        case 151: return SUB_GENRE_CANTO_POP;
        case 152: return SUB_GENRE_BEBOP;
        case 153: return SUB_GENRE_ALT_METAL;
        case 154: return SUB_GENRE_GAUCHO_MUSIC;
        case 155: return SUB_GENRE_CHRISTIAN_RAP;
        case 156: return SUB_GENRE_DEEP_HOUSE;
        case 157: return SUB_GENRE_BRIT_POP;
        case 158: return SUB_GENRE_DIXIELAND;
        case 159: return SUB_GENRE_CLASSICAL_CROSSOVER;
        case 160: return SUB_GENRE_JEWISH_MUSIC;
        case 161: return SUB_GENRE_EARLY20TH_CENTURY;
        case 162: return SUB_GENRE_TWO_TONE;
        case 163: return SUB_GENRE_AMERICAN_FOLK;
        case 164: return SUB_GENRE_SERTANEJO;
        case 165: return SUB_GENRE_N_D_W;
        case 166: return SUB_GENRE_OI__BANG__;
        case 167: return SUB_GENRE_ACID_TECHNO;
        case 168: return SUB_GENRE_MODERN_POP;
        case 169: return SUB_GENRE_IMPRESSIONISM;
        case 170: return SUB_GENRE_BLUEGRASS;
        case 171: return SUB_GENRE_SOUTHERN_GOSPEL;
        case 172: return SUB_GENRE_KRAUTROCK;
        case 173: return SUB_GENRE_SON;
        case 174: return SUB_GENRE_GYPSY_JAZZ;
        case 175: return SUB_GENRE_TURKISH_CLASSICAL_MUSIC;
        case 176: return SUB_GENRE_NEO_TRADITIONAL_COUNTRY;
        case 177: return SUB_GENRE_BASSLINE;
        case 178: return SUB_GENRE_MEXICAN_MUSIC;
        case 179: return SUB_GENRE_SAMBA_ROCK;
        case 180: return SUB_GENRE_MINIMALISM;
        case 181: return SUB_GENRE_KUDURO;
        case 182: return SUB_GENRE_SKIT;
        case 183: return SUB_GENRE_DOWNTEMPO;
        case 184: return SUB_GENRE_AFRICAN_POP;
        case 185: return SUB_GENRE_GRINDCORE;
        case 186: return SUB_GENRE_INDIE_POP;
        case 187: return SUB_GENRE_NATIONALIST;
        case 188: return SUB_GENRE_TEXAS_COUNTRY;
        case 189: return SUB_GENRE_DELTA_BLUES;
        case 190: return SUB_GENRE_BACHATA;
        case 191: return SUB_GENRE_FUNK_CARIOCA;
        case 192: return SUB_GENRE_KOREAN_POP;
        case 193: return SUB_GENRE_FUTURE_GARAGE;
        case 194: return SUB_GENRE_CLASSIC_FEMALE_BLUES;
        case 195: return SUB_GENRE_EXPRESSIONISM;
        case 196: return SUB_GENRE_SHOEGAZE;
        case 197: return SUB_GENRE_ARGENTINIAN_MUSIC;
        case 198: return SUB_GENRE_KLEZMER;
        case 199: return SUB_GENRE_INSTRUMENTAL_HIP_HOP;
        case 200: return SUB_GENRE_NEW_WAVE;
        case 201: return SUB_GENRE_BOSSA_NOVA;
        case 202: return SUB_GENRE_SCHRANZ;
        case 203: return SUB_GENRE_NORTH_AMERICAN_FOLK;
        case 204: return SUB_GENRE_ORCHESTRAL_FUSION;
        case 205: return SUB_GENRE_DUBTRONICA;
        case 206: return SUB_GENRE_NEW_JACK_SWING;
        case 207: return SUB_GENRE_SPECTRALISM;
        case 208: return SUB_GENRE_NEW_AGE;
        case 209: return SUB_GENRE_SOUTHERN_SOUL;
        case 210: return SUB_GENRE_PRE_CLASSICAL;
        case 211: return SUB_GENRE_TRIP_HOP;
        case 212: return SUB_GENRE_ROCKABILLY;
        case 213: return SUB_GENRE_DUB;
        case 214: return SUB_GENRE_MODERN_JAZZ;
        case 215: return SUB_GENRE_HARD_ROCK;
        case 216: return SUB_GENRE_MODERN_R__APO__N__APO___B;
        case 217: return SUB_GENRE_BRITISH_FOLK;
        case 218: return SUB_GENRE_HARDCORE;
        case 219: return SUB_GENRE_BRITISH_DANCE_BAND;
        case 220: return SUB_GENRE_INDUSTRIAL_METAL;
        case 221: return SUB_GENRE_CRUNK;
        case 222: return SUB_GENRE_LATIN_JAZZ;
        case 223: return SUB_GENRE_CLASSIC_ROCK;
        case 224: return SUB_GENRE_FUNK_METAL;
        case 225: return SUB_GENRE_PSYCHEDELIC_TRANCE;
        case 226: return SUB_GENRE_EXPERIMENTAL_HIP_HOP;
        case 227: return SUB_GENRE_BRAZILIAN_POP;
        case 228: return SUB_GENRE_JAZZ_FUSION;
        case 229: return SUB_GENRE_HEARTLAND_ROCK;
        case 230: return SUB_GENRE_CANADIAN_FOLK;
        case 231: return SUB_GENRE_EXPERIMENTAL_CLASSICAL;
        case 232: return SUB_GENRE_CONTEMPORARY_R__APO__N__APO___B;
        case 233: return SUB_GENRE_COUNTRY_BLUES;
        case 234: return SUB_GENRE_HIP_HOUSE;
        case 235: return SUB_GENRE_CHICAGO_BLUES;
        case 236: return SUB_GENRE_GARAGE_ROCK;
        case 237: return SUB_GENRE_MONOLOGUE;
        case 238: return SUB_GENRE_HINDUSTANI_CLASSICAL_MUSIC;
        case 239: return SUB_GENRE_BYZANTINE_CHANT;
        case 240: return SUB_GENRE_SPIRITUAL;
        case 241: return SUB_GENRE_AFRICAN_MUSIC;
        case 242: return SUB_GENRE_CARIBBEAN_MUSIC;
        case 243: return SUB_GENRE_REGIONAL_MEXICAN;
        case 244: return SUB_GENRE_MIAMI_BASS;
        case 245: return SUB_GENRE_PIL__OI__N;
        case 246: return SUB_GENRE_SWING;
        case 247: return SUB_GENRE_BRAZILIAN;
        case 248: return SUB_GENRE_O_G_FUNK;
        case 249: return SUB_GENRE_USER_DEFINED;
        case 250: return SUB_GENRE_MODERN_BLUES;
        case 251: return SUB_GENRE_GLITCH;
        case 252: return SUB_GENRE_NEW_MEXICO_MUSIC;
        case 253: return SUB_GENRE_PROGRESSIVE_METAL;
        case 254: return SUB_GENRE_EARLY_BAROQUE;
        case 255: return SUB_GENRE_EXPERIMENTAL_ELECTRONIC;
        case 256: return SUB_GENRE_CLASSIC_R__APO__N__APO___B;
        case 257: return SUB_GENRE_MODAL_JAZZ;
        case 258: return SUB_GENRE_TRIBAL_HOUSE;
        case 259: return SUB_GENRE_GERMAN_POP;
        case 260: return SUB_GENRE_FRENCH_HOUSE;
        case 261: return SUB_GENRE_ETHIOPIAN_JAZZ;
        case 262: return SUB_GENRE_NEW_ORLEANS_R__APO__N__APO___B;
        case 263: return SUB_GENRE_SALSA;
        case 264: return SUB_GENRE_TURKISH_MUSIC;
        case 265: return SUB_GENRE_SOUL;
        case 266: return SUB_GENRE_INDIE_ROCK;
        case 267: return SUB_GENRE_ENGLISH_FOLK;
        case 268: return SUB_GENRE_THIRD_WAVE_SKA;
        case 269: return SUB_GENRE_JAMAICAN_MUSIC;
        case 270: return SUB_GENRE_ITALO_DISCO;
        case 271: return SUB_GENRE_CHICAGO_SOUL;
        case 272: return SUB_GENRE_BLACK_METAL;
        case 273: return SUB_GENRE_PROGRESSIVE_HOUSE;
        case 274: return SUB_GENRE_U_K_FUNKY;
        case 275: return SUB_GENRE_LATIN_FREESTYLE;
        case 276: return SUB_GENRE_DANCEHALL;
        case 277: return SUB_GENRE_TEJANO;
        case 278: return SUB_GENRE_JUG_ENSEMBLE;
        case 279: return SUB_GENRE_CUECA;
        case 280: return SUB_GENRE_BREGA;
        case 281: return SUB_GENRE_ELECTRO_HOUSE;
        case 282: return SUB_GENRE_SCHLAGER;
        case 283: return SUB_GENRE_HI_N_R_G;
        case 284: return SUB_GENRE_INDONESIAN_POP;
        case 285: return SUB_GENRE_BRAZILIAN_MUSIC;
        case 286: return SUB_GENRE_IRISH_FOLK;
        case 287: return SUB_GENRE_NU_DISCO;
        case 288: return SUB_GENRE_CHINESE_POP;
        case 289: return SUB_GENRE_RENAISSANCE;
        case 290: return SUB_GENRE_MINIMAL_HOUSE;
        case 291: return SUB_GENRE_MEMPHIS_SOUL;
        case 292: return SUB_GENRE_SCOTTISH_FOLK;
        case 293: return SUB_GENRE_NEW_ORLEANS_BLUES;
        case 294: return SUB_GENRE_MINNEAPOLIS_FUNK;
        case 295: return SUB_GENRE_GOTHIC_ROCK;
        case 296: return SUB_GENRE_SYNTHWAVE;
        case 297: return SUB_GENRE_GUARACHA;
        case 298: return SUB_GENRE_TRADITIONAL_ELECTRIC;
        case 299: return SUB_GENRE_COOL_JAZZ;
        case 300: return SUB_GENRE_PUNK;
        case 301: return SUB_GENRE_FADO;
        case 302: return SUB_GENRE_METAL;
        case 303: return SUB_GENRE_WORK_SONGS;
        case 304: return SUB_GENRE_DOO_WOP;
        case 305: return SUB_GENRE_20TH_CENTURY;
        case 306: return SUB_GENRE_LATIN_HOUSE;
        case 307: return SUB_GENRE_SMOOTH_JAZZ;
        case 308: return SUB_GENRE_I_D_M;
        case 309: return SUB_GENRE_SWAMP_BLUES;
        case 310: return SUB_GENRE_EARLY_ELECTRONIC;
        case 311: return SUB_GENRE_WESTERN_SWING;
        case 312: return SUB_GENRE_KWAITO;
        case 313: return SUB_GENRE_ITALIAN_MUSIC;
        case 314: return SUB_GENRE_POP_ROCK;
        case 315: return SUB_GENRE_POST_HARDCORE;
        case 316: return SUB_GENRE_NOISE_ROCK;
        case 317: return SUB_GENRE_PSYCHEDELIC_POP;
        case 318: return SUB_GENRE_REPENTE;
        case 319: return SUB_GENRE_PUERTO_RICAN_MUSIC;
        case 320: return SUB_GENRE_WEST_COAST_SOUL;
        case 321: return SUB_GENRE_INDONESIAN_MUSIC;
        case 322: return SUB_GENRE_DIMOTIKO;
        case 323: return SUB_GENRE_DISCO;
        case 324: return SUB_GENRE_U_K_GARAGE;
        case 325: return SUB_GENRE_GLAM_ROCK;
        case 326: return SUB_GENRE_ALTERNATIVE_RAP;
        case 327: return SUB_GENRE_POST_CLASSICAL;
        case 328: return SUB_GENRE_INDIETRONICA;
        case 329: return SUB_GENRE_CLASSIC_GOSPEL;
        case 330: return SUB_GENRE_TRADITIONAL_JAZZ;
        case 331: return SUB_GENRE_MARACATU;
        case 332: return SUB_GENRE_CORRIDOS;
        case 333: return SUB_GENRE_CONTRADANZA;
        case 334: return SUB_GENRE_GRIME;
        case 335: return SUB_GENRE_BRITISH_BLUES;
        case 336: return SUB_GENRE_FUNK;
        case 337: return SUB_GENRE_INDIE_FOLK;
        case 338: return SUB_GENRE_KIZOMBA;
        case 339: return SUB_GENRE_DIGITAL_HARDCORE;
        case 340: return SUB_GENRE_NEO_ROMANTIC;
        case 341: return SUB_GENRE_TROPICALIA;
        case 342: return SUB_GENRE_POP_RAP;
        case 343: return SUB_GENRE_COUNTRY_RAP;
        case 344: return SUB_GENRE_KAYOKYOKU;
        case 345: return SUB_GENRE_WELSH_FOLK;
        case 346: return SUB_GENRE_BALINESE_MUSIC;
        case 347: return SUB_GENRE_ACOUSMATIC;
        case 348: return SUB_GENRE_MINIMAL_TECHNO;
        case 349: return SUB_GENRE_AXE;
        case 350: return SUB_GENRE_ACID_HOUSE;
        case 351: return SUB_GENRE_AFOXE;
        case 352: return SUB_GENRE_PSYCHOBILLY;
        case 353: return SUB_GENRE_ELECTRIC_FOLK;
        case 354: return SUB_GENRE_ARS_NOVA;
        case 355: return SUB_GENRE_CLASSICAL;
        case 356: return SUB_GENRE_STONER_ROCK;
        case 357: return SUB_GENRE_TECH_HOUSE;
        case 358: return SUB_GENRE_EMO_ROCK;
        case 359: return SUB_GENRE_M_P_B;
        case 360: return SUB_GENRE_POST_BOP;
        case 361: return SUB_GENRE_WORLD_FUSION_JAZZ;
        case 362: return SUB_GENRE_ROOTS;
        case 363: return SUB_GENRE_FIRST_VIENNESE_SCHOOL;
        case 364: return SUB_GENRE_LATE_RENAISSANCE;
        case 365: return SUB_GENRE_JAZZ_BLUES;
        case 366: return SUB_GENRE_HARDCORE_BREAKBEAT;
        case 367: return SUB_GENRE_SEA_SHANTIES;
        case 368: return SUB_GENRE_ROMANIAN_MUSIC;
        case 369: return SUB_GENRE_JAZZ_FUNK;
        case 370: return SUB_GENRE_TRADITIONAL_POP;
        case 371: return SUB_GENRE_POETRY;
        case 372: return SUB_GENRE_BAKERSFIELD_SOUND;
        case 373: return SUB_GENRE_FRENCH_POP;
        case 374: return SUB_GENRE_MODERNISM;
        case 375: return SUB_GENRE_ORGANUM;
        case 376: return SUB_GENRE_NO_WAVE;
        case 377: return SUB_GENRE_GARAGE_HOUSE;
        case 378: return SUB_GENRE_HOUSE;
        case 379: return SUB_GENRE_SWAMP_ROCK;
        case 380: return SUB_GENRE_MAMBO;
        case 381: return SUB_GENRE_PORTUGUESE_MUSIC;
        case 382: return SUB_GENRE_TONADA;
        case 383: return SUB_GENRE_MUSIQUE_CONCRETE;
        case 384: return SUB_GENRE_ACID_JAZZ;
        case 385: return SUB_GENRE_POP_FUNK;
        case 386: return SUB_GENRE_POST_GRUNGE;
        case 387: return SUB_GENRE_HOKKIEN_POP;
        case 388: return SUB_GENRE_HILL_COUNTRY_BLUES;
        case 389: return SUB_GENRE_BREAKBEAT;
        case 390: return SUB_GENRE_AFROBEAT;
        case 391: return SUB_GENRE_GREEK_POP;
        case 392: return SUB_GENRE_FREE_JAZZ;
        case 393: return SUB_GENRE_NEO_SOUL;
        case 394: return SUB_GENRE_POST_MINIMALISM;
        case 395: return SUB_GENRE_E_B_M;
        case 396: return SUB_GENRE_TELUGU;
        case 397: return SUB_GENRE_DREAM_POP;
        case 398: return SUB_GENRE_NU_METAL;
        case 399: return SUB_GENRE_DANZON;
        case 400: return SUB_GENRE_BANDA;
        case 401: return SUB_GENRE_METALCORE;
        case 402: return SUB_GENRE_MATH_ROCK;
        case 403: return SUB_GENRE_GRUNGE;
        case 404: return SUB_GENRE_TRAP;
        case 405: return SUB_GENRE_ELECTROCLASH;
        case 406: return SUB_GENRE_RIOT_GRRRL;
        case 407: return SUB_GENRE_RETRO_SOUL;
        case 408: return SUB_GENRE_PALO;
        case 409: return SUB_GENRE_CHICAGO_HOUSE;
        case 410: return SUB_GENRE_AFRO_ROCK;
        case 411: return SUB_GENRE_FRENCH_MUSIC;
        case 412: return SUB_GENRE_WEST_COAST_BLUES;
        case 413: return SUB_GENRE_SOUTHERN_ROCK;
        case 414: return SUB_GENRE_ARS_ANTIQUA;
        case 415: return SUB_GENRE_LATE_ROMANTIC;
        case 416: return SUB_GENRE_TRADITIONAL_R__APO__N__APO___B;
        case 417: return SUB_GENRE_AFRO_FUNK;
        case 418: return SUB_GENRE_BROKEN_BEAT;
        case 419: return SUB_GENRE_HUPANGO;
        case 420: return SUB_GENRE_ROCKSTEADY;
        case 421: return SUB_GENRE_21ST_CENTURY;
        case 422: return SUB_GENRE_CHIMURENGA;
        case 423: return SUB_GENRE_CLASSIC_HIP_HOP;
        case 424: return SUB_GENRE_HAPPY_HARDCORE;
        case 425: return SUB_GENRE_CALYPSO;
        case 426: return SUB_GENRE_TEXAS_BLUES;
        case 427: return SUB_GENRE_POST_PUNK;
        case 428: return SUB_GENRE_CONJUNTO;
        case 429: return SUB_GENRE_DURANGUENSE;
        case 430: return SUB_GENRE_PAKISTANI_MUSIC;
        case 431: return SUB_GENRE_EARLY_ROMANTIC;
        case 432: return SUB_GENRE_COMMENTARY;
        case 433: return SUB_GENRE_DRUMSTEP;
        case 434: return SUB_GENRE_ELECTRO_GOTH;
        case 435: return SUB_GENRE_GRUPERA;
        case 436: return SUB_GENRE_CHORO;
        case 437: return SUB_GENRE_GANGSTA_RAP;
        case 438: return SUB_GENRE_CONTEMPORARY;
        case 439: return SUB_GENRE_LIGHT_MUSIC;
        case 440: return SUB_GENRE_GREEK_MUSIC;
        case 441: return SUB_GENRE_MANDO_POP;
        case 442: return SUB_GENRE_CHAMBER_POP;
        case 443: return SUB_GENRE_DOOM_METAL;
        case 444: return SUB_GENRE_MERENGUE;
        case 445: return SUB_GENRE_PSYCHEDELIC_ROCK;
        case 446: return SUB_GENRE_REGGAETON;
        case 447: return SUB_GENRE_P_FUNK;
        case 448: return SUB_GENRE_AMERICANA;
        case 449: return SUB_GENRE_CAPE_JAZZ;
        case 450: return SUB_GENRE_WESTCOAST_HIP_HOP;
        case 451: return SUB_GENRE_G_FUNK;
        case 452: return SUB_GENRE_MUSIC_OF_THE_PHILIPPINES;
        case 453: return SUB_GENRE_JAZZ_ROCK;
        case 454: return SUB_GENRE_JAVANESE_MUSIC;
        case 455: return SUB_GENRE_MIDDLE_RENAISSANCE;
        case 456: return SUB_GENRE_SOUTH_AMERICAN_MUSIC;
        case 457: return SUB_GENRE_ELECTRONIC_POP;
        case 458: return SUB_GENRE_NEO_PSYCHEDELIA;
        case 459: return SUB_GENRE_ART_ROCK;
        case 460: return SUB_GENRE_VOCAL_HOUSE;
        case 461: return SUB_GENRE_PROTO_PUNK;
        case 462: return SUB_GENRE_FILIPINO_POP;
        case 463: return SUB_GENRE_MOTOWN_SOUND;
        case 464: return SUB_GENRE_DRILL_N_BASS;
        case 465: return SUB_GENRE_FUTURISM;
        case 466: return SUB_GENRE_TECHNO;
        case 467: return SUB_GENRE_RAGTIME;
        case 468: return SUB_GENRE_AVANT_GARDE_JAZZ;
        case 469: return SUB_GENRE_STAND_UP_COMEDY;
        case 470: return SUB_GENRE_PIEDMONT_BLUES;
        case 471: return SUB_GENRE_HARDCORE_RAP;
        case 472: return SUB_GENRE_BRIT_ROCK;
        case 473: return SUB_GENRE_MIDDLE_ROMANTIC;
        case 474: return SUB_GENRE_SPEED_GARAGE;
        case 475: return SUB_GENRE_CUBAN_MUSIC;
        case 476: return SUB_GENRE_NORTH_AMERICAN_MUSIC;
        case 477: return SUB_GENRE_DETROIT_TECHNO;
        case 478: return SUB_GENRE_ELECTRO;
        case 479: return SUB_GENRE_SOCA;
        case 480: return SUB_GENRE_SPACE_ROCK;
        case 481: return SUB_GENRE_ENKA;
        case 482: return SUB_GENRE_POP_PUNK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SubGenre>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SubGenre> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SubGenre>() {
            public SubGenre findValueByNumber(int number) {
              return SubGenre.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(166);
    }

    private static final SubGenre[] VALUES = values();

    public static SubGenre valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SubGenre(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SubGenre)
  }

  /**
   * Protobuf enum {@code avs.SubTitleType}
   */
  public enum SubTitleType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUB_TITLE_TYPE_VERSION = 0;</code>
     */
    SUB_TITLE_TYPE_VERSION(0),
    /**
     * <code>SUB_TITLE_TYPE_LOCATION = 1;</code>
     */
    SUB_TITLE_TYPE_LOCATION(1),
    ;

    /**
     * <code>SUB_TITLE_TYPE_VERSION = 0;</code>
     */
    public static final int SUB_TITLE_TYPE_VERSION_VALUE = 0;
    /**
     * <code>SUB_TITLE_TYPE_LOCATION = 1;</code>
     */
    public static final int SUB_TITLE_TYPE_LOCATION_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SubTitleType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SubTitleType forNumber(int value) {
      switch (value) {
        case 0: return SUB_TITLE_TYPE_VERSION;
        case 1: return SUB_TITLE_TYPE_LOCATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SubTitleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SubTitleType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SubTitleType>() {
            public SubTitleType findValueByNumber(int number) {
              return SubTitleType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(167);
    }

    private static final SubTitleType[] VALUES = values();

    public static SubTitleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SubTitleType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SubTitleType)
  }

  /**
   * Protobuf enum {@code avs.SummaryType}
   */
  public enum SummaryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUMMARY_TYPE_CONTRIBUTOR = 0;</code>
     */
    SUMMARY_TYPE_CONTRIBUTOR(0),
    /**
     * <code>SUMMARY_TYPE_RIGHTS_CONTROLLER = 1;</code>
     */
    SUMMARY_TYPE_RIGHTS_CONTROLLER(1),
    ;

    /**
     * <code>SUMMARY_TYPE_CONTRIBUTOR = 0;</code>
     */
    public static final int SUMMARY_TYPE_CONTRIBUTOR_VALUE = 0;
    /**
     * <code>SUMMARY_TYPE_RIGHTS_CONTROLLER = 1;</code>
     */
    public static final int SUMMARY_TYPE_RIGHTS_CONTROLLER_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SummaryType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SummaryType forNumber(int value) {
      switch (value) {
        case 0: return SUMMARY_TYPE_CONTRIBUTOR;
        case 1: return SUMMARY_TYPE_RIGHTS_CONTROLLER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SummaryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SummaryType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SummaryType>() {
            public SummaryType findValueByNumber(int number) {
              return SummaryType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(168);
    }

    private static final SummaryType[] VALUES = values();

    public static SummaryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SummaryType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SummaryType)
  }

  /**
   * Protobuf enum {@code avs.SupplyChainStatus}
   */
  public enum SupplyChainStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUPPLY_CHAIN_STATUS_ORDER_PLACED_FOR_RELEASE_DISTRIBUTOR = 0;</code>
     */
    SUPPLY_CHAIN_STATUS_ORDER_PLACED_FOR_RELEASE_DISTRIBUTOR(0),
    /**
     * <code>SUPPLY_CHAIN_STATUS_IN_DELIVERY_TO_RELEASE_DISTRIBUTOR = 1;</code>
     */
    SUPPLY_CHAIN_STATUS_IN_DELIVERY_TO_RELEASE_DISTRIBUTOR(1),
    /**
     * <code>SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_DISTRIBUTOR = 2;</code>
     */
    SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_DISTRIBUTOR(2),
    /**
     * <code>SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_CREATOR = 3;</code>
     */
    SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_CREATOR(3),
    /**
     * <code>SUPPLY_CHAIN_STATUS_RELEASE_MADE_AVAILABLE_TO_CONSUMERS = 4;</code>
     */
    SUPPLY_CHAIN_STATUS_RELEASE_MADE_AVAILABLE_TO_CONSUMERS(4),
    /**
     * <code>SUPPLY_CHAIN_STATUS_DELIVERED_TO_RELEASE_DISTRIBUTOR = 5;</code>
     */
    SUPPLY_CHAIN_STATUS_DELIVERED_TO_RELEASE_DISTRIBUTOR(5),
    /**
     * <code>SUPPLY_CHAIN_STATUS_RELEASE_RECEIVED_BY_RELEASE_DISTRIBUTOR = 6;</code>
     */
    SUPPLY_CHAIN_STATUS_RELEASE_RECEIVED_BY_RELEASE_DISTRIBUTOR(6),
    /**
     * <code>SUPPLY_CHAIN_STATUS_USER_DEFINED = 7;</code>
     */
    SUPPLY_CHAIN_STATUS_USER_DEFINED(7),
    /**
     * <code>SUPPLY_CHAIN_STATUS_RELEASE_STAGED_FOR_PUBLICATION = 8;</code>
     */
    SUPPLY_CHAIN_STATUS_RELEASE_STAGED_FOR_PUBLICATION(8),
    /**
     * <code>SUPPLY_CHAIN_STATUS_SUCCESSFULLY_INGESTED_BY_RELEASE_DISTRIBUTOR = 9;</code>
     */
    SUPPLY_CHAIN_STATUS_SUCCESSFULLY_INGESTED_BY_RELEASE_DISTRIBUTOR(9),
    /**
     * <code>SUPPLY_CHAIN_STATUS_IN_PREPARATION_FOR_DELIVERY_TO_RELEASE_DISTRIBUTOR = 10;</code>
     */
    SUPPLY_CHAIN_STATUS_IN_PREPARATION_FOR_DELIVERY_TO_RELEASE_DISTRIBUTOR(10),
    /**
     * <code>SUPPLY_CHAIN_STATUS_RELEASE_NOT_AVAILABLE = 11;</code>
     */
    SUPPLY_CHAIN_STATUS_RELEASE_NOT_AVAILABLE(11),
    ;

    /**
     * <code>SUPPLY_CHAIN_STATUS_ORDER_PLACED_FOR_RELEASE_DISTRIBUTOR = 0;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_ORDER_PLACED_FOR_RELEASE_DISTRIBUTOR_VALUE = 0;
    /**
     * <code>SUPPLY_CHAIN_STATUS_IN_DELIVERY_TO_RELEASE_DISTRIBUTOR = 1;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_IN_DELIVERY_TO_RELEASE_DISTRIBUTOR_VALUE = 1;
    /**
     * <code>SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_DISTRIBUTOR = 2;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_DISTRIBUTOR_VALUE = 2;
    /**
     * <code>SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_CREATOR = 3;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_CREATOR_VALUE = 3;
    /**
     * <code>SUPPLY_CHAIN_STATUS_RELEASE_MADE_AVAILABLE_TO_CONSUMERS = 4;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_RELEASE_MADE_AVAILABLE_TO_CONSUMERS_VALUE = 4;
    /**
     * <code>SUPPLY_CHAIN_STATUS_DELIVERED_TO_RELEASE_DISTRIBUTOR = 5;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_DELIVERED_TO_RELEASE_DISTRIBUTOR_VALUE = 5;
    /**
     * <code>SUPPLY_CHAIN_STATUS_RELEASE_RECEIVED_BY_RELEASE_DISTRIBUTOR = 6;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_RELEASE_RECEIVED_BY_RELEASE_DISTRIBUTOR_VALUE = 6;
    /**
     * <code>SUPPLY_CHAIN_STATUS_USER_DEFINED = 7;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_USER_DEFINED_VALUE = 7;
    /**
     * <code>SUPPLY_CHAIN_STATUS_RELEASE_STAGED_FOR_PUBLICATION = 8;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_RELEASE_STAGED_FOR_PUBLICATION_VALUE = 8;
    /**
     * <code>SUPPLY_CHAIN_STATUS_SUCCESSFULLY_INGESTED_BY_RELEASE_DISTRIBUTOR = 9;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_SUCCESSFULLY_INGESTED_BY_RELEASE_DISTRIBUTOR_VALUE = 9;
    /**
     * <code>SUPPLY_CHAIN_STATUS_IN_PREPARATION_FOR_DELIVERY_TO_RELEASE_DISTRIBUTOR = 10;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_IN_PREPARATION_FOR_DELIVERY_TO_RELEASE_DISTRIBUTOR_VALUE = 10;
    /**
     * <code>SUPPLY_CHAIN_STATUS_RELEASE_NOT_AVAILABLE = 11;</code>
     */
    public static final int SUPPLY_CHAIN_STATUS_RELEASE_NOT_AVAILABLE_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SupplyChainStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SupplyChainStatus forNumber(int value) {
      switch (value) {
        case 0: return SUPPLY_CHAIN_STATUS_ORDER_PLACED_FOR_RELEASE_DISTRIBUTOR;
        case 1: return SUPPLY_CHAIN_STATUS_IN_DELIVERY_TO_RELEASE_DISTRIBUTOR;
        case 2: return SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_DISTRIBUTOR;
        case 3: return SUPPLY_CHAIN_STATUS_PROCESSING_ERROR_AT_RELEASE_CREATOR;
        case 4: return SUPPLY_CHAIN_STATUS_RELEASE_MADE_AVAILABLE_TO_CONSUMERS;
        case 5: return SUPPLY_CHAIN_STATUS_DELIVERED_TO_RELEASE_DISTRIBUTOR;
        case 6: return SUPPLY_CHAIN_STATUS_RELEASE_RECEIVED_BY_RELEASE_DISTRIBUTOR;
        case 7: return SUPPLY_CHAIN_STATUS_USER_DEFINED;
        case 8: return SUPPLY_CHAIN_STATUS_RELEASE_STAGED_FOR_PUBLICATION;
        case 9: return SUPPLY_CHAIN_STATUS_SUCCESSFULLY_INGESTED_BY_RELEASE_DISTRIBUTOR;
        case 10: return SUPPLY_CHAIN_STATUS_IN_PREPARATION_FOR_DELIVERY_TO_RELEASE_DISTRIBUTOR;
        case 11: return SUPPLY_CHAIN_STATUS_RELEASE_NOT_AVAILABLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SupplyChainStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SupplyChainStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SupplyChainStatus>() {
            public SupplyChainStatus findValueByNumber(int number) {
              return SupplyChainStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(169);
    }

    private static final SupplyChainStatus[] VALUES = values();

    public static SupplyChainStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SupplyChainStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.SupplyChainStatus)
  }

  /**
   * Protobuf enum {@code avs.Tempo}
   */
  public enum Tempo
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TEMPO_ALLEGRO = 0;</code>
     */
    TEMPO_ALLEGRO(0),
    /**
     * <code>TEMPO_ANDANTINO = 1;</code>
     */
    TEMPO_ANDANTINO(1),
    /**
     * <code>TEMPO_ADAGIETTO = 2;</code>
     */
    TEMPO_ADAGIETTO(2),
    /**
     * <code>TEMPO_ANDANTE_MODERATO = 3;</code>
     */
    TEMPO_ANDANTE_MODERATO(3),
    /**
     * <code>TEMPO_MARCIA_MODERATO = 4;</code>
     */
    TEMPO_MARCIA_MODERATO(4),
    /**
     * <code>TEMPO_ADAGISSIMO = 5;</code>
     */
    TEMPO_ADAGISSIMO(5),
    /**
     * <code>TEMPO_LARGHISSIMO = 6;</code>
     */
    TEMPO_LARGHISSIMO(6),
    /**
     * <code>TEMPO_ALLEGRETTO = 7;</code>
     */
    TEMPO_ALLEGRETTO(7),
    /**
     * <code>TEMPO_ANDANTE = 8;</code>
     */
    TEMPO_ANDANTE(8),
    /**
     * <code>TEMPO_LENTO = 9;</code>
     */
    TEMPO_LENTO(9),
    /**
     * <code>TEMPO_ALLEGRO_MODERATO = 10;</code>
     */
    TEMPO_ALLEGRO_MODERATO(10),
    /**
     * <code>TEMPO_PRESTO = 11;</code>
     */
    TEMPO_PRESTO(11),
    /**
     * <code>TEMPO_ADAGIO = 12;</code>
     */
    TEMPO_ADAGIO(12),
    /**
     * <code>TEMPO_VIVACISSIMO = 13;</code>
     */
    TEMPO_VIVACISSIMO(13),
    /**
     * <code>TEMPO_GRAVE = 14;</code>
     */
    TEMPO_GRAVE(14),
    /**
     * <code>TEMPO_ALLEGRISSIMO = 15;</code>
     */
    TEMPO_ALLEGRISSIMO(15),
    /**
     * <code>TEMPO_LARGO = 16;</code>
     */
    TEMPO_LARGO(16),
    /**
     * <code>TEMPO_MODERATO = 17;</code>
     */
    TEMPO_MODERATO(17),
    /**
     * <code>TEMPO_PRESTISSIMO = 18;</code>
     */
    TEMPO_PRESTISSIMO(18),
    /**
     * <code>TEMPO_USER_DEFINED = 19;</code>
     */
    TEMPO_USER_DEFINED(19),
    /**
     * <code>TEMPO_LARGHETTO = 20;</code>
     */
    TEMPO_LARGHETTO(20),
    /**
     * <code>TEMPO_VIVACE = 21;</code>
     */
    TEMPO_VIVACE(21),
    ;

    /**
     * <code>TEMPO_ALLEGRO = 0;</code>
     */
    public static final int TEMPO_ALLEGRO_VALUE = 0;
    /**
     * <code>TEMPO_ANDANTINO = 1;</code>
     */
    public static final int TEMPO_ANDANTINO_VALUE = 1;
    /**
     * <code>TEMPO_ADAGIETTO = 2;</code>
     */
    public static final int TEMPO_ADAGIETTO_VALUE = 2;
    /**
     * <code>TEMPO_ANDANTE_MODERATO = 3;</code>
     */
    public static final int TEMPO_ANDANTE_MODERATO_VALUE = 3;
    /**
     * <code>TEMPO_MARCIA_MODERATO = 4;</code>
     */
    public static final int TEMPO_MARCIA_MODERATO_VALUE = 4;
    /**
     * <code>TEMPO_ADAGISSIMO = 5;</code>
     */
    public static final int TEMPO_ADAGISSIMO_VALUE = 5;
    /**
     * <code>TEMPO_LARGHISSIMO = 6;</code>
     */
    public static final int TEMPO_LARGHISSIMO_VALUE = 6;
    /**
     * <code>TEMPO_ALLEGRETTO = 7;</code>
     */
    public static final int TEMPO_ALLEGRETTO_VALUE = 7;
    /**
     * <code>TEMPO_ANDANTE = 8;</code>
     */
    public static final int TEMPO_ANDANTE_VALUE = 8;
    /**
     * <code>TEMPO_LENTO = 9;</code>
     */
    public static final int TEMPO_LENTO_VALUE = 9;
    /**
     * <code>TEMPO_ALLEGRO_MODERATO = 10;</code>
     */
    public static final int TEMPO_ALLEGRO_MODERATO_VALUE = 10;
    /**
     * <code>TEMPO_PRESTO = 11;</code>
     */
    public static final int TEMPO_PRESTO_VALUE = 11;
    /**
     * <code>TEMPO_ADAGIO = 12;</code>
     */
    public static final int TEMPO_ADAGIO_VALUE = 12;
    /**
     * <code>TEMPO_VIVACISSIMO = 13;</code>
     */
    public static final int TEMPO_VIVACISSIMO_VALUE = 13;
    /**
     * <code>TEMPO_GRAVE = 14;</code>
     */
    public static final int TEMPO_GRAVE_VALUE = 14;
    /**
     * <code>TEMPO_ALLEGRISSIMO = 15;</code>
     */
    public static final int TEMPO_ALLEGRISSIMO_VALUE = 15;
    /**
     * <code>TEMPO_LARGO = 16;</code>
     */
    public static final int TEMPO_LARGO_VALUE = 16;
    /**
     * <code>TEMPO_MODERATO = 17;</code>
     */
    public static final int TEMPO_MODERATO_VALUE = 17;
    /**
     * <code>TEMPO_PRESTISSIMO = 18;</code>
     */
    public static final int TEMPO_PRESTISSIMO_VALUE = 18;
    /**
     * <code>TEMPO_USER_DEFINED = 19;</code>
     */
    public static final int TEMPO_USER_DEFINED_VALUE = 19;
    /**
     * <code>TEMPO_LARGHETTO = 20;</code>
     */
    public static final int TEMPO_LARGHETTO_VALUE = 20;
    /**
     * <code>TEMPO_VIVACE = 21;</code>
     */
    public static final int TEMPO_VIVACE_VALUE = 21;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Tempo valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Tempo forNumber(int value) {
      switch (value) {
        case 0: return TEMPO_ALLEGRO;
        case 1: return TEMPO_ANDANTINO;
        case 2: return TEMPO_ADAGIETTO;
        case 3: return TEMPO_ANDANTE_MODERATO;
        case 4: return TEMPO_MARCIA_MODERATO;
        case 5: return TEMPO_ADAGISSIMO;
        case 6: return TEMPO_LARGHISSIMO;
        case 7: return TEMPO_ALLEGRETTO;
        case 8: return TEMPO_ANDANTE;
        case 9: return TEMPO_LENTO;
        case 10: return TEMPO_ALLEGRO_MODERATO;
        case 11: return TEMPO_PRESTO;
        case 12: return TEMPO_ADAGIO;
        case 13: return TEMPO_VIVACISSIMO;
        case 14: return TEMPO_GRAVE;
        case 15: return TEMPO_ALLEGRISSIMO;
        case 16: return TEMPO_LARGO;
        case 17: return TEMPO_MODERATO;
        case 18: return TEMPO_PRESTISSIMO;
        case 19: return TEMPO_USER_DEFINED;
        case 20: return TEMPO_LARGHETTO;
        case 21: return TEMPO_VIVACE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Tempo>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Tempo> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Tempo>() {
            public Tempo findValueByNumber(int number) {
              return Tempo.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(170);
    }

    private static final Tempo[] VALUES = values();

    public static Tempo valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Tempo(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Tempo)
  }

  /**
   * Protobuf enum {@code avs.TerritoryCodeType}
   */
  public enum TerritoryCodeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TERRITORY_CODE_TYPE_I_S_O = 0;</code>
     */
    TERRITORY_CODE_TYPE_I_S_O(0),
    /**
     * <code>TERRITORY_CODE_TYPE_T_I_S = 1;</code>
     */
    TERRITORY_CODE_TYPE_T_I_S(1),
    ;

    /**
     * <code>TERRITORY_CODE_TYPE_I_S_O = 0;</code>
     */
    public static final int TERRITORY_CODE_TYPE_I_S_O_VALUE = 0;
    /**
     * <code>TERRITORY_CODE_TYPE_T_I_S = 1;</code>
     */
    public static final int TERRITORY_CODE_TYPE_T_I_S_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TerritoryCodeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TerritoryCodeType forNumber(int value) {
      switch (value) {
        case 0: return TERRITORY_CODE_TYPE_I_S_O;
        case 1: return TERRITORY_CODE_TYPE_T_I_S;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TerritoryCodeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TerritoryCodeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TerritoryCodeType>() {
            public TerritoryCodeType findValueByNumber(int number) {
              return TerritoryCodeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(171);
    }

    private static final TerritoryCodeType[] VALUES = values();

    public static TerritoryCodeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TerritoryCodeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TerritoryCodeType)
  }

  /**
   * Protobuf enum {@code avs.TerritoryCodeTypeIncludingDeprecatedCodes}
   */
  public enum TerritoryCodeTypeIncludingDeprecatedCodes
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_I_S_O = 0;</code>
     */
    TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_I_S_O(0),
    /**
     * <code>TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_DEPRECATED_I_S_O = 1;</code>
     */
    TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_DEPRECATED_I_S_O(1),
    /**
     * <code>TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_T_I_S = 2;</code>
     */
    TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_T_I_S(2),
    ;

    /**
     * <code>TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_I_S_O = 0;</code>
     */
    public static final int TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_I_S_O_VALUE = 0;
    /**
     * <code>TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_DEPRECATED_I_S_O = 1;</code>
     */
    public static final int TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_DEPRECATED_I_S_O_VALUE = 1;
    /**
     * <code>TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_T_I_S = 2;</code>
     */
    public static final int TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_T_I_S_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TerritoryCodeTypeIncludingDeprecatedCodes valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TerritoryCodeTypeIncludingDeprecatedCodes forNumber(int value) {
      switch (value) {
        case 0: return TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_I_S_O;
        case 1: return TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_DEPRECATED_I_S_O;
        case 2: return TERRITORY_CODE_TYPE_INCLUDING_DEPRECATED_CODES_T_I_S;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TerritoryCodeTypeIncludingDeprecatedCodes>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TerritoryCodeTypeIncludingDeprecatedCodes> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TerritoryCodeTypeIncludingDeprecatedCodes>() {
            public TerritoryCodeTypeIncludingDeprecatedCodes findValueByNumber(int number) {
              return TerritoryCodeTypeIncludingDeprecatedCodes.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(172);
    }

    private static final TerritoryCodeTypeIncludingDeprecatedCodes[] VALUES = values();

    public static TerritoryCodeTypeIncludingDeprecatedCodes valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TerritoryCodeTypeIncludingDeprecatedCodes(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  }

  /**
   * Protobuf enum {@code avs.TextCodecType}
   */
  public enum TextCodecType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TEXT_CODEC_TYPE_U_T_F8_TEXT = 0;</code>
     */
    TEXT_CODEC_TYPE_U_T_F8_TEXT(0),
    /**
     * <code>TEXT_CODEC_TYPE_R_T_F = 1;</code>
     */
    TEXT_CODEC_TYPE_R_T_F(1),
    /**
     * <code>TEXT_CODEC_TYPE_WINDOWS_TEXT = 2;</code>
     */
    TEXT_CODEC_TYPE_WINDOWS_TEXT(2),
    /**
     * <code>TEXT_CODEC_TYPE_O_O_X_M_L = 3;</code>
     */
    TEXT_CODEC_TYPE_O_O_X_M_L(3),
    /**
     * <code>TEXT_CODEC_TYPE_ENHANCED_L_R_C = 4;</code>
     */
    TEXT_CODEC_TYPE_ENHANCED_L_R_C(4),
    /**
     * <code>TEXT_CODEC_TYPE_H_T_M_L = 5;</code>
     */
    TEXT_CODEC_TYPE_H_T_M_L(5),
    /**
     * <code>TEXT_CODEC_TYPE_A_S_C_I_I = 6;</code>
     */
    TEXT_CODEC_TYPE_A_S_C_I_I(6),
    /**
     * <code>TEXT_CODEC_TYPE_POST_SCRIPT = 7;</code>
     */
    TEXT_CODEC_TYPE_POST_SCRIPT(7),
    /**
     * <code>TEXT_CODEC_TYPE_E_B_U__MINUS___T_T = 8;</code>
     */
    TEXT_CODEC_TYPE_E_B_U__MINUS___T_T(8),
    /**
     * <code>TEXT_CODEC_TYPE_P_D_F = 9;</code>
     */
    TEXT_CODEC_TYPE_P_D_F(9),
    /**
     * <code>TEXT_CODEC_TYPE_MICROSOFT_WORD = 10;</code>
     */
    TEXT_CODEC_TYPE_MICROSOFT_WORD(10),
    /**
     * <code>TEXT_CODEC_TYPE_S_R_T = 11;</code>
     */
    TEXT_CODEC_TYPE_S_R_T(11),
    /**
     * <code>TEXT_CODEC_TYPE_UNKNOWN = 12;</code>
     */
    TEXT_CODEC_TYPE_UNKNOWN(12),
    /**
     * <code>TEXT_CODEC_TYPE_ASCII_OR_ISO8859N_TEXT = 13;</code>
     */
    TEXT_CODEC_TYPE_ASCII_OR_ISO8859N_TEXT(13),
    /**
     * <code>TEXT_CODEC_TYPE_X_M_L = 14;</code>
     */
    TEXT_CODEC_TYPE_X_M_L(14),
    /**
     * <code>TEXT_CODEC_TYPE_V_T_T = 15;</code>
     */
    TEXT_CODEC_TYPE_V_T_T(15),
    /**
     * <code>TEXT_CODEC_TYPE_E_P_U_B = 16;</code>
     */
    TEXT_CODEC_TYPE_E_P_U_B(16),
    /**
     * <code>TEXT_CODEC_TYPE_T_T_M_L = 17;</code>
     */
    TEXT_CODEC_TYPE_T_T_M_L(17),
    /**
     * <code>TEXT_CODEC_TYPE_OPEN_DOCUMENT_TEXT = 18;</code>
     */
    TEXT_CODEC_TYPE_OPEN_DOCUMENT_TEXT(18),
    /**
     * <code>TEXT_CODEC_TYPE_SIMPLE_L_R_C = 19;</code>
     */
    TEXT_CODEC_TYPE_SIMPLE_L_R_C(19),
    /**
     * <code>TEXT_CODEC_TYPE_X_H_T_M_L = 20;</code>
     */
    TEXT_CODEC_TYPE_X_H_T_M_L(20),
    /**
     * <code>TEXT_CODEC_TYPE_L_R_C = 21;</code>
     */
    TEXT_CODEC_TYPE_L_R_C(21),
    /**
     * <code>TEXT_CODEC_TYPE_USER_DEFINED = 22;</code>
     */
    TEXT_CODEC_TYPE_USER_DEFINED(22),
    ;

    /**
     * <code>TEXT_CODEC_TYPE_U_T_F8_TEXT = 0;</code>
     */
    public static final int TEXT_CODEC_TYPE_U_T_F8_TEXT_VALUE = 0;
    /**
     * <code>TEXT_CODEC_TYPE_R_T_F = 1;</code>
     */
    public static final int TEXT_CODEC_TYPE_R_T_F_VALUE = 1;
    /**
     * <code>TEXT_CODEC_TYPE_WINDOWS_TEXT = 2;</code>
     */
    public static final int TEXT_CODEC_TYPE_WINDOWS_TEXT_VALUE = 2;
    /**
     * <code>TEXT_CODEC_TYPE_O_O_X_M_L = 3;</code>
     */
    public static final int TEXT_CODEC_TYPE_O_O_X_M_L_VALUE = 3;
    /**
     * <code>TEXT_CODEC_TYPE_ENHANCED_L_R_C = 4;</code>
     */
    public static final int TEXT_CODEC_TYPE_ENHANCED_L_R_C_VALUE = 4;
    /**
     * <code>TEXT_CODEC_TYPE_H_T_M_L = 5;</code>
     */
    public static final int TEXT_CODEC_TYPE_H_T_M_L_VALUE = 5;
    /**
     * <code>TEXT_CODEC_TYPE_A_S_C_I_I = 6;</code>
     */
    public static final int TEXT_CODEC_TYPE_A_S_C_I_I_VALUE = 6;
    /**
     * <code>TEXT_CODEC_TYPE_POST_SCRIPT = 7;</code>
     */
    public static final int TEXT_CODEC_TYPE_POST_SCRIPT_VALUE = 7;
    /**
     * <code>TEXT_CODEC_TYPE_E_B_U__MINUS___T_T = 8;</code>
     */
    public static final int TEXT_CODEC_TYPE_E_B_U__MINUS___T_T_VALUE = 8;
    /**
     * <code>TEXT_CODEC_TYPE_P_D_F = 9;</code>
     */
    public static final int TEXT_CODEC_TYPE_P_D_F_VALUE = 9;
    /**
     * <code>TEXT_CODEC_TYPE_MICROSOFT_WORD = 10;</code>
     */
    public static final int TEXT_CODEC_TYPE_MICROSOFT_WORD_VALUE = 10;
    /**
     * <code>TEXT_CODEC_TYPE_S_R_T = 11;</code>
     */
    public static final int TEXT_CODEC_TYPE_S_R_T_VALUE = 11;
    /**
     * <code>TEXT_CODEC_TYPE_UNKNOWN = 12;</code>
     */
    public static final int TEXT_CODEC_TYPE_UNKNOWN_VALUE = 12;
    /**
     * <code>TEXT_CODEC_TYPE_ASCII_OR_ISO8859N_TEXT = 13;</code>
     */
    public static final int TEXT_CODEC_TYPE_ASCII_OR_ISO8859N_TEXT_VALUE = 13;
    /**
     * <code>TEXT_CODEC_TYPE_X_M_L = 14;</code>
     */
    public static final int TEXT_CODEC_TYPE_X_M_L_VALUE = 14;
    /**
     * <code>TEXT_CODEC_TYPE_V_T_T = 15;</code>
     */
    public static final int TEXT_CODEC_TYPE_V_T_T_VALUE = 15;
    /**
     * <code>TEXT_CODEC_TYPE_E_P_U_B = 16;</code>
     */
    public static final int TEXT_CODEC_TYPE_E_P_U_B_VALUE = 16;
    /**
     * <code>TEXT_CODEC_TYPE_T_T_M_L = 17;</code>
     */
    public static final int TEXT_CODEC_TYPE_T_T_M_L_VALUE = 17;
    /**
     * <code>TEXT_CODEC_TYPE_OPEN_DOCUMENT_TEXT = 18;</code>
     */
    public static final int TEXT_CODEC_TYPE_OPEN_DOCUMENT_TEXT_VALUE = 18;
    /**
     * <code>TEXT_CODEC_TYPE_SIMPLE_L_R_C = 19;</code>
     */
    public static final int TEXT_CODEC_TYPE_SIMPLE_L_R_C_VALUE = 19;
    /**
     * <code>TEXT_CODEC_TYPE_X_H_T_M_L = 20;</code>
     */
    public static final int TEXT_CODEC_TYPE_X_H_T_M_L_VALUE = 20;
    /**
     * <code>TEXT_CODEC_TYPE_L_R_C = 21;</code>
     */
    public static final int TEXT_CODEC_TYPE_L_R_C_VALUE = 21;
    /**
     * <code>TEXT_CODEC_TYPE_USER_DEFINED = 22;</code>
     */
    public static final int TEXT_CODEC_TYPE_USER_DEFINED_VALUE = 22;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TextCodecType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TextCodecType forNumber(int value) {
      switch (value) {
        case 0: return TEXT_CODEC_TYPE_U_T_F8_TEXT;
        case 1: return TEXT_CODEC_TYPE_R_T_F;
        case 2: return TEXT_CODEC_TYPE_WINDOWS_TEXT;
        case 3: return TEXT_CODEC_TYPE_O_O_X_M_L;
        case 4: return TEXT_CODEC_TYPE_ENHANCED_L_R_C;
        case 5: return TEXT_CODEC_TYPE_H_T_M_L;
        case 6: return TEXT_CODEC_TYPE_A_S_C_I_I;
        case 7: return TEXT_CODEC_TYPE_POST_SCRIPT;
        case 8: return TEXT_CODEC_TYPE_E_B_U__MINUS___T_T;
        case 9: return TEXT_CODEC_TYPE_P_D_F;
        case 10: return TEXT_CODEC_TYPE_MICROSOFT_WORD;
        case 11: return TEXT_CODEC_TYPE_S_R_T;
        case 12: return TEXT_CODEC_TYPE_UNKNOWN;
        case 13: return TEXT_CODEC_TYPE_ASCII_OR_ISO8859N_TEXT;
        case 14: return TEXT_CODEC_TYPE_X_M_L;
        case 15: return TEXT_CODEC_TYPE_V_T_T;
        case 16: return TEXT_CODEC_TYPE_E_P_U_B;
        case 17: return TEXT_CODEC_TYPE_T_T_M_L;
        case 18: return TEXT_CODEC_TYPE_OPEN_DOCUMENT_TEXT;
        case 19: return TEXT_CODEC_TYPE_SIMPLE_L_R_C;
        case 20: return TEXT_CODEC_TYPE_X_H_T_M_L;
        case 21: return TEXT_CODEC_TYPE_L_R_C;
        case 22: return TEXT_CODEC_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TextCodecType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TextCodecType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TextCodecType>() {
            public TextCodecType findValueByNumber(int number) {
              return TextCodecType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(173);
    }

    private static final TextCodecType[] VALUES = values();

    public static TextCodecType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TextCodecType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TextCodecType)
  }

  /**
   * Protobuf enum {@code avs.TextType}
   */
  public enum TextType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TEXT_TYPE_LYRIC_TEXT = 0;</code>
     */
    TEXT_TYPE_LYRIC_TEXT(0),
    /**
     * <code>TEXT_TYPE_E_BOOK = 1;</code>
     */
    TEXT_TYPE_E_BOOK(1),
    /**
     * <code>TEXT_TYPE_NON_INTERACTIVE_BOOKLET = 2;</code>
     */
    TEXT_TYPE_NON_INTERACTIVE_BOOKLET(2),
    /**
     * <code>TEXT_TYPE_TEXT_DOCUMENT = 3;</code>
     */
    TEXT_TYPE_TEXT_DOCUMENT(3),
    /**
     * <code>TEXT_TYPE_UNKNOWN = 4;</code>
     */
    TEXT_TYPE_UNKNOWN(4),
    /**
     * <code>TEXT_TYPE_USER_DEFINED = 5;</code>
     */
    TEXT_TYPE_USER_DEFINED(5),
    /**
     * <code>TEXT_TYPE_CAPTION = 6;</code>
     */
    TEXT_TYPE_CAPTION(6),
    /**
     * <code>TEXT_TYPE_LINER_NOTES = 7;</code>
     */
    TEXT_TYPE_LINER_NOTES(7),
    ;

    /**
     * <code>TEXT_TYPE_LYRIC_TEXT = 0;</code>
     */
    public static final int TEXT_TYPE_LYRIC_TEXT_VALUE = 0;
    /**
     * <code>TEXT_TYPE_E_BOOK = 1;</code>
     */
    public static final int TEXT_TYPE_E_BOOK_VALUE = 1;
    /**
     * <code>TEXT_TYPE_NON_INTERACTIVE_BOOKLET = 2;</code>
     */
    public static final int TEXT_TYPE_NON_INTERACTIVE_BOOKLET_VALUE = 2;
    /**
     * <code>TEXT_TYPE_TEXT_DOCUMENT = 3;</code>
     */
    public static final int TEXT_TYPE_TEXT_DOCUMENT_VALUE = 3;
    /**
     * <code>TEXT_TYPE_UNKNOWN = 4;</code>
     */
    public static final int TEXT_TYPE_UNKNOWN_VALUE = 4;
    /**
     * <code>TEXT_TYPE_USER_DEFINED = 5;</code>
     */
    public static final int TEXT_TYPE_USER_DEFINED_VALUE = 5;
    /**
     * <code>TEXT_TYPE_CAPTION = 6;</code>
     */
    public static final int TEXT_TYPE_CAPTION_VALUE = 6;
    /**
     * <code>TEXT_TYPE_LINER_NOTES = 7;</code>
     */
    public static final int TEXT_TYPE_LINER_NOTES_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TextType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TextType forNumber(int value) {
      switch (value) {
        case 0: return TEXT_TYPE_LYRIC_TEXT;
        case 1: return TEXT_TYPE_E_BOOK;
        case 2: return TEXT_TYPE_NON_INTERACTIVE_BOOKLET;
        case 3: return TEXT_TYPE_TEXT_DOCUMENT;
        case 4: return TEXT_TYPE_UNKNOWN;
        case 5: return TEXT_TYPE_USER_DEFINED;
        case 6: return TEXT_TYPE_CAPTION;
        case 7: return TEXT_TYPE_LINER_NOTES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TextType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TextType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TextType>() {
            public TextType findValueByNumber(int number) {
              return TextType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(174);
    }

    private static final TextType[] VALUES = values();

    public static TextType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TextType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TextType)
  }

  /**
   * Protobuf enum {@code avs.TextType_ATOM}
   */
  public enum TextType_ATOM
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TEXT_TYPE__A_T_O_M_HTML = 0;</code>
     */
    TEXT_TYPE__A_T_O_M_HTML(0),
    /**
     * <code>TEXT_TYPE__A_T_O_M_TEXT = 1;</code>
     */
    TEXT_TYPE__A_T_O_M_TEXT(1),
    /**
     * <code>TEXT_TYPE__A_T_O_M_XHTML = 2;</code>
     */
    TEXT_TYPE__A_T_O_M_XHTML(2),
    ;

    /**
     * <code>TEXT_TYPE__A_T_O_M_HTML = 0;</code>
     */
    public static final int TEXT_TYPE__A_T_O_M_HTML_VALUE = 0;
    /**
     * <code>TEXT_TYPE__A_T_O_M_TEXT = 1;</code>
     */
    public static final int TEXT_TYPE__A_T_O_M_TEXT_VALUE = 1;
    /**
     * <code>TEXT_TYPE__A_T_O_M_XHTML = 2;</code>
     */
    public static final int TEXT_TYPE__A_T_O_M_XHTML_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TextType_ATOM valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TextType_ATOM forNumber(int value) {
      switch (value) {
        case 0: return TEXT_TYPE__A_T_O_M_HTML;
        case 1: return TEXT_TYPE__A_T_O_M_TEXT;
        case 2: return TEXT_TYPE__A_T_O_M_XHTML;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TextType_ATOM>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TextType_ATOM> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TextType_ATOM>() {
            public TextType_ATOM findValueByNumber(int number) {
              return TextType_ATOM.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(175);
    }

    private static final TextType_ATOM[] VALUES = values();

    public static TextType_ATOM valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TextType_ATOM(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TextType_ATOM)
  }

  /**
   * Protobuf enum {@code avs.Theme}
   */
  public enum Theme
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>THEME_WATER = 0;</code>
     */
    THEME_WATER(0),
    /**
     * <code>THEME_RESCUE = 1;</code>
     */
    THEME_RESCUE(1),
    /**
     * <code>THEME_RAT = 2;</code>
     */
    THEME_RAT(2),
    /**
     * <code>THEME_CRAVE = 3;</code>
     */
    THEME_CRAVE(3),
    /**
     * <code>THEME_MEMORY = 4;</code>
     */
    THEME_MEMORY(4),
    /**
     * <code>THEME_WEST_VIRGINIA = 5;</code>
     */
    THEME_WEST_VIRGINIA(5),
    /**
     * <code>THEME_CAPE_VERDE = 6;</code>
     */
    THEME_CAPE_VERDE(6),
    /**
     * <code>THEME_ENGLAND = 7;</code>
     */
    THEME_ENGLAND(7),
    /**
     * <code>THEME_REPEAT = 8;</code>
     */
    THEME_REPEAT(8),
    /**
     * <code>THEME_GENDER = 9;</code>
     */
    THEME_GENDER(9),
    /**
     * <code>THEME_STRING = 10;</code>
     */
    THEME_STRING(10),
    /**
     * <code>THEME_FREEDOM = 11;</code>
     */
    THEME_FREEDOM(11),
    /**
     * <code>THEME_MILE = 12;</code>
     */
    THEME_MILE(12),
    /**
     * <code>THEME_SURF = 13;</code>
     */
    THEME_SURF(13),
    /**
     * <code>THEME_EVERYTHING = 14;</code>
     */
    THEME_EVERYTHING(14),
    /**
     * <code>THEME_PAST = 15;</code>
     */
    THEME_PAST(15),
    /**
     * <code>THEME_MENTAL_ILLNESS = 16;</code>
     */
    THEME_MENTAL_ILLNESS(16),
    /**
     * <code>THEME_STREET = 17;</code>
     */
    THEME_STREET(17),
    /**
     * <code>THEME_BREAKUP = 18;</code>
     */
    THEME_BREAKUP(18),
    /**
     * <code>THEME_CZECHOSLOVAKIA = 19;</code>
     */
    THEME_CZECHOSLOVAKIA(19),
    /**
     * <code>THEME_JULY = 20;</code>
     */
    THEME_JULY(20),
    /**
     * <code>THEME_KARMA = 21;</code>
     */
    THEME_KARMA(21),
    /**
     * <code>THEME_WEEKEND = 22;</code>
     */
    THEME_WEEKEND(22),
    /**
     * <code>THEME_JESUS_CHRIST = 23;</code>
     */
    THEME_JESUS_CHRIST(23),
    /**
     * <code>THEME_SMALL = 24;</code>
     */
    THEME_SMALL(24),
    /**
     * <code>THEME_HIGHWAY = 25;</code>
     */
    THEME_HIGHWAY(25),
    /**
     * <code>THEME_SEYCHELLES = 26;</code>
     */
    THEME_SEYCHELLES(26),
    /**
     * <code>THEME_NASHVILLE = 27;</code>
     */
    THEME_NASHVILLE(27),
    /**
     * <code>THEME_PATRIOTISM = 28;</code>
     */
    THEME_PATRIOTISM(28),
    /**
     * <code>THEME_PARK = 29;</code>
     */
    THEME_PARK(29),
    /**
     * <code>THEME_PROMISE = 30;</code>
     */
    THEME_PROMISE(30),
    /**
     * <code>THEME_VIDEO_GAME = 31;</code>
     */
    THEME_VIDEO_GAME(31),
    /**
     * <code>THEME_GAME = 32;</code>
     */
    THEME_GAME(32),
    /**
     * <code>THEME_EXCELLENCE = 33;</code>
     */
    THEME_EXCELLENCE(33),
    /**
     * <code>THEME_FINLAND = 34;</code>
     */
    THEME_FINLAND(34),
    /**
     * <code>THEME_EAST = 35;</code>
     */
    THEME_EAST(35),
    /**
     * <code>THEME_LAW_ENFORCEMENT = 36;</code>
     */
    THEME_LAW_ENFORCEMENT(36),
    /**
     * <code>THEME_BUILDING = 37;</code>
     */
    THEME_BUILDING(37),
    /**
     * <code>THEME_JUNE = 38;</code>
     */
    THEME_JUNE(38),
    /**
     * <code>THEME_BREATHE = 39;</code>
     */
    THEME_BREATHE(39),
    /**
     * <code>THEME_INCH = 40;</code>
     */
    THEME_INCH(40),
    /**
     * <code>THEME_AMBITION = 41;</code>
     */
    THEME_AMBITION(41),
    /**
     * <code>THEME_LIBYA = 42;</code>
     */
    THEME_LIBYA(42),
    /**
     * <code>THEME_SCANDINAVIA = 43;</code>
     */
    THEME_SCANDINAVIA(43),
    /**
     * <code>THEME_PROTEST = 44;</code>
     */
    THEME_PROTEST(44),
    /**
     * <code>THEME_SINGLE_PARENT = 45;</code>
     */
    THEME_SINGLE_PARENT(45),
    /**
     * <code>THEME_MIND = 46;</code>
     */
    THEME_MIND(46),
    /**
     * <code>THEME_MINE = 47;</code>
     */
    THEME_MINE(47),
    /**
     * <code>THEME_LIECHTENSTEIN = 48;</code>
     */
    THEME_LIECHTENSTEIN(48),
    /**
     * <code>THEME_BREAKDOWN = 49;</code>
     */
    THEME_BREAKDOWN(49),
    /**
     * <code>THEME_BOYS = 50;</code>
     */
    THEME_BOYS(50),
    /**
     * <code>THEME_JORDAN = 51;</code>
     */
    THEME_JORDAN(51),
    /**
     * <code>THEME_GOD = 52;</code>
     */
    THEME_GOD(52),
    /**
     * <code>THEME_FOOD = 53;</code>
     */
    THEME_FOOD(53),
    /**
     * <code>THEME_NEVADA = 54;</code>
     */
    THEME_NEVADA(54),
    /**
     * <code>THEME_BELLS = 55;</code>
     */
    THEME_BELLS(55),
    /**
     * <code>THEME_HAPPINESS = 56;</code>
     */
    THEME_HAPPINESS(56),
    /**
     * <code>THEME_CRASH = 57;</code>
     */
    THEME_CRASH(57),
    /**
     * <code>THEME_CAROLINAS = 58;</code>
     */
    THEME_CAROLINAS(58),
    /**
     * <code>THEME_BELLY = 59;</code>
     */
    THEME_BELLY(59),
    /**
     * <code>THEME_INDEPENDENCE = 60;</code>
     */
    THEME_INDEPENDENCE(60),
    /**
     * <code>THEME_JUMP = 61;</code>
     */
    THEME_JUMP(61),
    /**
     * <code>THEME_MICHIGAN = 62;</code>
     */
    THEME_MICHIGAN(62),
    /**
     * <code>THEME_COMPETITIVE = 63;</code>
     */
    THEME_COMPETITIVE(63),
    /**
     * <code>THEME_RED = 64;</code>
     */
    THEME_RED(64),
    /**
     * <code>THEME_ADORATION = 65;</code>
     */
    THEME_ADORATION(65),
    /**
     * <code>THEME_DJIBOUTI = 66;</code>
     */
    THEME_DJIBOUTI(66),
    /**
     * <code>THEME_CUBA = 67;</code>
     */
    THEME_CUBA(67),
    /**
     * <code>THEME_PERSEVERE = 68;</code>
     */
    THEME_PERSEVERE(68),
    /**
     * <code>THEME_PAD = 69;</code>
     */
    THEME_PAD(69),
    /**
     * <code>THEME_HORSE_RACING = 70;</code>
     */
    THEME_HORSE_RACING(70),
    /**
     * <code>THEME_SNOWMAN = 71;</code>
     */
    THEME_SNOWMAN(71),
    /**
     * <code>THEME_WEST_INDIES = 72;</code>
     */
    THEME_WEST_INDIES(72),
    /**
     * <code>THEME_KISS = 73;</code>
     */
    THEME_KISS(73),
    /**
     * <code>THEME_NUCLEAR_WAR = 74;</code>
     */
    THEME_NUCLEAR_WAR(74),
    /**
     * <code>THEME_EXCITED = 75;</code>
     */
    THEME_EXCITED(75),
    /**
     * <code>THEME_CYPRUS = 76;</code>
     */
    THEME_CYPRUS(76),
    /**
     * <code>THEME_START = 77;</code>
     */
    THEME_START(77),
    /**
     * <code>THEME_PAW = 78;</code>
     */
    THEME_PAW(78),
    /**
     * <code>THEME_CEMETARY = 79;</code>
     */
    THEME_CEMETARY(79),
    /**
     * <code>THEME_BRAG = 80;</code>
     */
    THEME_BRAG(80),
    /**
     * <code>THEME_BEATS = 81;</code>
     */
    THEME_BEATS(81),
    /**
     * <code>THEME_MUSIC_BUSINESS = 82;</code>
     */
    THEME_MUSIC_BUSINESS(82),
    /**
     * <code>THEME_ARMENIA = 83;</code>
     */
    THEME_ARMENIA(83),
    /**
     * <code>THEME_DESPERATE = 84;</code>
     */
    THEME_DESPERATE(84),
    /**
     * <code>THEME_WINTER = 85;</code>
     */
    THEME_WINTER(85),
    /**
     * <code>THEME_TOKYO = 86;</code>
     */
    THEME_TOKYO(86),
    /**
     * <code>THEME_BROTHER = 87;</code>
     */
    THEME_BROTHER(87),
    /**
     * <code>THEME_LIGHT = 88;</code>
     */
    THEME_LIGHT(88),
    /**
     * <code>THEME_BRAZIL = 89;</code>
     */
    THEME_BRAZIL(89),
    /**
     * <code>THEME_CAMERA = 90;</code>
     */
    THEME_CAMERA(90),
    /**
     * <code>THEME_ECUADOR = 91;</code>
     */
    THEME_ECUADOR(91),
    /**
     * <code>THEME_EYES = 92;</code>
     */
    THEME_EYES(92),
    /**
     * <code>THEME_BOXING = 93;</code>
     */
    THEME_BOXING(93),
    /**
     * <code>THEME_FOOL = 94;</code>
     */
    THEME_FOOL(94),
    /**
     * <code>THEME_ESWATINI = 95;</code>
     */
    THEME_ESWATINI(95),
    /**
     * <code>THEME_IMMORTALITY = 96;</code>
     */
    THEME_IMMORTALITY(96),
    /**
     * <code>THEME_END = 97;</code>
     */
    THEME_END(97),
    /**
     * <code>THEME_UNIQUE = 98;</code>
     */
    THEME_UNIQUE(98),
    /**
     * <code>THEME_BROKEN_HOME = 99;</code>
     */
    THEME_BROKEN_HOME(99),
    /**
     * <code>THEME_PHILOSOPHY = 100;</code>
     */
    THEME_PHILOSOPHY(100),
    /**
     * <code>THEME_COMPLIMENTS = 101;</code>
     */
    THEME_COMPLIMENTS(101),
    /**
     * <code>THEME_BRIDGE = 102;</code>
     */
    THEME_BRIDGE(102),
    /**
     * <code>THEME_WORRY = 103;</code>
     */
    THEME_WORRY(103),
    /**
     * <code>THEME_ABOVE = 104;</code>
     */
    THEME_ABOVE(104),
    /**
     * <code>THEME_COSMETIC = 105;</code>
     */
    THEME_COSMETIC(105),
    /**
     * <code>THEME_VERMONT = 106;</code>
     */
    THEME_VERMONT(106),
    /**
     * <code>THEME_HAITI = 107;</code>
     */
    THEME_HAITI(107),
    /**
     * <code>THEME_HOLE = 108;</code>
     */
    THEME_HOLE(108),
    /**
     * <code>THEME_AFGHANISTAN = 109;</code>
     */
    THEME_AFGHANISTAN(109),
    /**
     * <code>THEME_BIRD = 110;</code>
     */
    THEME_BIRD(110),
    /**
     * <code>THEME_ALABAMA = 111;</code>
     */
    THEME_ALABAMA(111),
    /**
     * <code>THEME_ONE_NIGHT_STAND = 112;</code>
     */
    THEME_ONE_NIGHT_STAND(112),
    /**
     * <code>THEME_REPTILE = 113;</code>
     */
    THEME_REPTILE(113),
    /**
     * <code>THEME_COMING_HOME = 114;</code>
     */
    THEME_COMING_HOME(114),
    /**
     * <code>THEME_MOUTH = 115;</code>
     */
    THEME_MOUTH(115),
    /**
     * <code>THEME_COLORADO = 116;</code>
     */
    THEME_COLORADO(116),
    /**
     * <code>THEME_OPPORTUNITY = 117;</code>
     */
    THEME_OPPORTUNITY(117),
    /**
     * <code>THEME_WOMEN_TALKING_TO_MEN = 118;</code>
     */
    THEME_WOMEN_TALKING_TO_MEN(118),
    /**
     * <code>THEME_PRESENT = 119;</code>
     */
    THEME_PRESENT(119),
    /**
     * <code>THEME_HOME = 120;</code>
     */
    THEME_HOME(120),
    /**
     * <code>THEME_NOVEMBER = 121;</code>
     */
    THEME_NOVEMBER(121),
    /**
     * <code>THEME_ACTIVITIES = 122;</code>
     */
    THEME_ACTIVITIES(122),
    /**
     * <code>THEME_ESCAPE = 123;</code>
     */
    THEME_ESCAPE(123),
    /**
     * <code>THEME_INSECURE = 124;</code>
     */
    THEME_INSECURE(124),
    /**
     * <code>THEME_YOUNG = 125;</code>
     */
    THEME_YOUNG(125),
    /**
     * <code>THEME_DOWN = 126;</code>
     */
    THEME_DOWN(126),
    /**
     * <code>THEME_LOST_THAT_LOVING_FEELING = 127;</code>
     */
    THEME_LOST_THAT_LOVING_FEELING(127),
    /**
     * <code>THEME_RETURN = 128;</code>
     */
    THEME_RETURN(128),
    /**
     * <code>THEME_HORROR = 129;</code>
     */
    THEME_HORROR(129),
    /**
     * <code>THEME_PEOPLE = 130;</code>
     */
    THEME_PEOPLE(130),
    /**
     * <code>THEME_BABY = 131;</code>
     */
    THEME_BABY(131),
    /**
     * <code>THEME_TALL = 132;</code>
     */
    THEME_TALL(132),
    /**
     * <code>THEME_MINNESOTA = 133;</code>
     */
    THEME_MINNESOTA(133),
    /**
     * <code>THEME_ROMANTIC = 134;</code>
     */
    THEME_ROMANTIC(134),
    /**
     * <code>THEME_MEN_TALKING_TO_WOMEN = 135;</code>
     */
    THEME_MEN_TALKING_TO_WOMEN(135),
    /**
     * <code>THEME_REJECTION = 136;</code>
     */
    THEME_REJECTION(136),
    /**
     * <code>THEME_CANDLE = 137;</code>
     */
    THEME_CANDLE(137),
    /**
     * <code>THEME_WHITE = 138;</code>
     */
    THEME_WHITE(138),
    /**
     * <code>THEME_FEMINISM = 139;</code>
     */
    THEME_FEMINISM(139),
    /**
     * <code>THEME_MOUSE = 140;</code>
     */
    THEME_MOUSE(140),
    /**
     * <code>THEME_ASIA = 141;</code>
     */
    THEME_ASIA(141),
    /**
     * <code>THEME_GASOLINE = 142;</code>
     */
    THEME_GASOLINE(142),
    /**
     * <code>THEME_CLUB = 143;</code>
     */
    THEME_CLUB(143),
    /**
     * <code>THEME_COOK_ISLANDS = 144;</code>
     */
    THEME_COOK_ISLANDS(144),
    /**
     * <code>THEME_CONTEMPT = 145;</code>
     */
    THEME_CONTEMPT(145),
    /**
     * <code>THEME_SPIDER = 146;</code>
     */
    THEME_SPIDER(146),
    /**
     * <code>THEME_INSULT = 147;</code>
     */
    THEME_INSULT(147),
    /**
     * <code>THEME_CALMNESS = 148;</code>
     */
    THEME_CALMNESS(148),
    /**
     * <code>THEME_WAITER = 149;</code>
     */
    THEME_WAITER(149),
    /**
     * <code>THEME_BRAIN = 150;</code>
     */
    THEME_BRAIN(150),
    /**
     * <code>THEME_BENIN = 151;</code>
     */
    THEME_BENIN(151),
    /**
     * <code>THEME_AUNT = 152;</code>
     */
    THEME_AUNT(152),
    /**
     * <code>THEME_DOLPHIN = 153;</code>
     */
    THEME_DOLPHIN(153),
    /**
     * <code>THEME_GO = 154;</code>
     */
    THEME_GO(154),
    /**
     * <code>THEME_ACCUSE = 155;</code>
     */
    THEME_ACCUSE(155),
    /**
     * <code>THEME_LIGHTHOUSE = 156;</code>
     */
    THEME_LIGHTHOUSE(156),
    /**
     * <code>THEME_PERFECTION = 157;</code>
     */
    THEME_PERFECTION(157),
    /**
     * <code>THEME_TIBET = 158;</code>
     */
    THEME_TIBET(158),
    /**
     * <code>THEME_SKATEBOARD = 159;</code>
     */
    THEME_SKATEBOARD(159),
    /**
     * <code>THEME_OPTIMISM = 160;</code>
     */
    THEME_OPTIMISM(160),
    /**
     * <code>THEME_GRENADA = 161;</code>
     */
    THEME_GRENADA(161),
    /**
     * <code>THEME_MONGOLIA = 162;</code>
     */
    THEME_MONGOLIA(162),
    /**
     * <code>THEME_MORALITY = 163;</code>
     */
    THEME_MORALITY(163),
    /**
     * <code>THEME_MOROCCO = 164;</code>
     */
    THEME_MOROCCO(164),
    /**
     * <code>THEME_SRI_LANKA = 165;</code>
     */
    THEME_SRI_LANKA(165),
    /**
     * <code>THEME_SLEAZY = 166;</code>
     */
    THEME_SLEAZY(166),
    /**
     * <code>THEME_BACK = 167;</code>
     */
    THEME_BACK(167),
    /**
     * <code>THEME_SOLOMON_ISLANDS = 168;</code>
     */
    THEME_SOLOMON_ISLANDS(168),
    /**
     * <code>THEME_SHELTER = 169;</code>
     */
    THEME_SHELTER(169),
    /**
     * <code>THEME_EXCUSE = 170;</code>
     */
    THEME_EXCUSE(170),
    /**
     * <code>THEME_GUN = 171;</code>
     */
    THEME_GUN(171),
    /**
     * <code>THEME_FRENCH_GUIANA = 172;</code>
     */
    THEME_FRENCH_GUIANA(172),
    /**
     * <code>THEME_MONTANA = 173;</code>
     */
    THEME_MONTANA(173),
    /**
     * <code>THEME_VIOLENCE = 174;</code>
     */
    THEME_VIOLENCE(174),
    /**
     * <code>THEME_KENTUCKY = 175;</code>
     */
    THEME_KENTUCKY(175),
    /**
     * <code>THEME_GHANA = 176;</code>
     */
    THEME_GHANA(176),
    /**
     * <code>THEME_AIR = 177;</code>
     */
    THEME_AIR(177),
    /**
     * <code>THEME_NOT_COMMITTED = 178;</code>
     */
    THEME_NOT_COMMITTED(178),
    /**
     * <code>THEME_DEEP = 179;</code>
     */
    THEME_DEEP(179),
    /**
     * <code>THEME_POLITICAL_STATE = 180;</code>
     */
    THEME_POLITICAL_STATE(180),
    /**
     * <code>THEME_VOLCANO = 181;</code>
     */
    THEME_VOLCANO(181),
    /**
     * <code>THEME_MALDIVES = 182;</code>
     */
    THEME_MALDIVES(182),
    /**
     * <code>THEME_OLYMPICS = 183;</code>
     */
    THEME_OLYMPICS(183),
    /**
     * <code>THEME_BICYCLES = 184;</code>
     */
    THEME_BICYCLES(184),
    /**
     * <code>THEME_MEDICAL = 185;</code>
     */
    THEME_MEDICAL(185),
    /**
     * <code>THEME_TRAPPED = 186;</code>
     */
    THEME_TRAPPED(186),
    /**
     * <code>THEME_VIRGINIA = 187;</code>
     */
    THEME_VIRGINIA(187),
    /**
     * <code>THEME_TOY = 188;</code>
     */
    THEME_TOY(188),
    /**
     * <code>THEME_HIDE = 189;</code>
     */
    THEME_HIDE(189),
    /**
     * <code>THEME_JUSTICE = 190;</code>
     */
    THEME_JUSTICE(190),
    /**
     * <code>THEME_DARKNESS = 191;</code>
     */
    THEME_DARKNESS(191),
    /**
     * <code>THEME_FIJI = 192;</code>
     */
    THEME_FIJI(192),
    /**
     * <code>THEME_GUINEA = 193;</code>
     */
    THEME_GUINEA(193),
    /**
     * <code>THEME_IGNORANCE = 194;</code>
     */
    THEME_IGNORANCE(194),
    /**
     * <code>THEME_HIGHEST = 195;</code>
     */
    THEME_HIGHEST(195),
    /**
     * <code>THEME_DIRECTION = 196;</code>
     */
    THEME_DIRECTION(196),
    /**
     * <code>THEME_STORYBOOK_CHARACTER = 197;</code>
     */
    THEME_STORYBOOK_CHARACTER(197),
    /**
     * <code>THEME_MOSCOW = 198;</code>
     */
    THEME_MOSCOW(198),
    /**
     * <code>THEME_STYLE = 199;</code>
     */
    THEME_STYLE(199),
    /**
     * <code>THEME_COMPASSION = 200;</code>
     */
    THEME_COMPASSION(200),
    /**
     * <code>THEME_DENVER = 201;</code>
     */
    THEME_DENVER(201),
    /**
     * <code>THEME_NIGERIA = 202;</code>
     */
    THEME_NIGERIA(202),
    /**
     * <code>THEME_EUROPEAN_CONTINENT = 203;</code>
     */
    THEME_EUROPEAN_CONTINENT(203),
    /**
     * <code>THEME_FOWL = 204;</code>
     */
    THEME_FOWL(204),
    /**
     * <code>THEME_BELIEVE = 205;</code>
     */
    THEME_BELIEVE(205),
    /**
     * <code>THEME_CHEERLEADER = 206;</code>
     */
    THEME_CHEERLEADER(206),
    /**
     * <code>THEME_LIVING = 207;</code>
     */
    THEME_LIVING(207),
    /**
     * <code>THEME_RHYTHM = 208;</code>
     */
    THEME_RHYTHM(208),
    /**
     * <code>THEME_COW = 209;</code>
     */
    THEME_COW(209),
    /**
     * <code>THEME_SMART = 210;</code>
     */
    THEME_SMART(210),
    /**
     * <code>THEME_SAMOA = 211;</code>
     */
    THEME_SAMOA(211),
    /**
     * <code>THEME_PIG = 212;</code>
     */
    THEME_PIG(212),
    /**
     * <code>THEME_LOCK = 213;</code>
     */
    THEME_LOCK(213),
    /**
     * <code>THEME_FORTUNE_TELLER = 214;</code>
     */
    THEME_FORTUNE_TELLER(214),
    /**
     * <code>THEME_WRONG = 215;</code>
     */
    THEME_WRONG(215),
    /**
     * <code>THEME_AMUSEMENT_PARKS_AND_RIDES = 216;</code>
     */
    THEME_AMUSEMENT_PARKS_AND_RIDES(216),
    /**
     * <code>THEME_WEDDING = 217;</code>
     */
    THEME_WEDDING(217),
    /**
     * <code>THEME_GESTURES = 218;</code>
     */
    THEME_GESTURES(218),
    /**
     * <code>THEME_LAST_NIGHT = 219;</code>
     */
    THEME_LAST_NIGHT(219),
    /**
     * <code>THEME_HOPE = 220;</code>
     */
    THEME_HOPE(220),
    /**
     * <code>THEME_ESTONIA = 221;</code>
     */
    THEME_ESTONIA(221),
    /**
     * <code>THEME_ALL = 222;</code>
     */
    THEME_ALL(222),
    /**
     * <code>THEME_HORN = 223;</code>
     */
    THEME_HORN(223),
    /**
     * <code>THEME_NEW = 224;</code>
     */
    THEME_NEW(224),
    /**
     * <code>THEME_THOUSAND = 225;</code>
     */
    THEME_THOUSAND(225),
    /**
     * <code>THEME_ENLIGHTENMENT = 226;</code>
     */
    THEME_ENLIGHTENMENT(226),
    /**
     * <code>THEME_BENELUX = 227;</code>
     */
    THEME_BENELUX(227),
    /**
     * <code>THEME_SURPRISE_PARTY = 228;</code>
     */
    THEME_SURPRISE_PARTY(228),
    /**
     * <code>THEME_SHINE = 229;</code>
     */
    THEME_SHINE(229),
    /**
     * <code>THEME_IVORY_COAST = 230;</code>
     */
    THEME_IVORY_COAST(230),
    /**
     * <code>THEME_PHYSICAL_PAIN = 231;</code>
     */
    THEME_PHYSICAL_PAIN(231),
    /**
     * <code>THEME_MAMMAL = 232;</code>
     */
    THEME_MAMMAL(232),
    /**
     * <code>THEME_MOTIVATION = 233;</code>
     */
    THEME_MOTIVATION(233),
    /**
     * <code>THEME_EDUCATION = 234;</code>
     */
    THEME_EDUCATION(234),
    /**
     * <code>THEME_DRAFT_RESISTANCE = 235;</code>
     */
    THEME_DRAFT_RESISTANCE(235),
    /**
     * <code>THEME_TRY = 236;</code>
     */
    THEME_TRY(236),
    /**
     * <code>THEME_DIZZY = 237;</code>
     */
    THEME_DIZZY(237),
    /**
     * <code>THEME_INVISIBLE = 238;</code>
     */
    THEME_INVISIBLE(238),
    /**
     * <code>THEME_TONGA = 239;</code>
     */
    THEME_TONGA(239),
    /**
     * <code>THEME_PLAYER = 240;</code>
     */
    THEME_PLAYER(240),
    /**
     * <code>THEME_VACATION = 241;</code>
     */
    THEME_VACATION(241),
    /**
     * <code>THEME_SANTA_FE = 242;</code>
     */
    THEME_SANTA_FE(242),
    /**
     * <code>THEME_LONELY = 243;</code>
     */
    THEME_LONELY(243),
    /**
     * <code>THEME_APRIL = 244;</code>
     */
    THEME_APRIL(244),
    /**
     * <code>THEME_EMBARRASSED = 245;</code>
     */
    THEME_EMBARRASSED(245),
    /**
     * <code>THEME_TROUBLE = 246;</code>
     */
    THEME_TROUBLE(246),
    /**
     * <code>THEME_PIANO = 247;</code>
     */
    THEME_PIANO(247),
    /**
     * <code>THEME_SUNDAY = 248;</code>
     */
    THEME_SUNDAY(248),
    /**
     * <code>THEME_ME = 249;</code>
     */
    THEME_ME(249),
    /**
     * <code>THEME_DEATH = 250;</code>
     */
    THEME_DEATH(250),
    /**
     * <code>THEME_SKIN = 251;</code>
     */
    THEME_SKIN(251),
    /**
     * <code>THEME_SOUTH_SUDAN = 252;</code>
     */
    THEME_SOUTH_SUDAN(252),
    /**
     * <code>THEME_SUPERIORITY = 253;</code>
     */
    THEME_SUPERIORITY(253),
    /**
     * <code>THEME_GET_LOST = 254;</code>
     */
    THEME_GET_LOST(254),
    /**
     * <code>THEME_TRUCKS = 255;</code>
     */
    THEME_TRUCKS(255),
    /**
     * <code>THEME_BUTTERFLY = 256;</code>
     */
    THEME_BUTTERFLY(256),
    /**
     * <code>THEME_DAYTIME = 257;</code>
     */
    THEME_DAYTIME(257),
    /**
     * <code>THEME_TEMPTATION = 258;</code>
     */
    THEME_TEMPTATION(258),
    /**
     * <code>THEME_FLIRT = 259;</code>
     */
    THEME_FLIRT(259),
    /**
     * <code>THEME_CRY = 260;</code>
     */
    THEME_CRY(260),
    /**
     * <code>THEME_MALTA = 261;</code>
     */
    THEME_MALTA(261),
    /**
     * <code>THEME_LAS_VEGAS = 262;</code>
     */
    THEME_LAS_VEGAS(262),
    /**
     * <code>THEME_PHONE = 263;</code>
     */
    THEME_PHONE(263),
    /**
     * <code>THEME_IRELAND = 264;</code>
     */
    THEME_IRELAND(264),
    /**
     * <code>THEME_BEDROOM = 265;</code>
     */
    THEME_BEDROOM(265),
    /**
     * <code>THEME_UNDERSTANDING = 266;</code>
     */
    THEME_UNDERSTANDING(266),
    /**
     * <code>THEME_SKATE = 267;</code>
     */
    THEME_SKATE(267),
    /**
     * <code>THEME_SAFETY = 268;</code>
     */
    THEME_SAFETY(268),
    /**
     * <code>THEME_SYNTHESIZER = 269;</code>
     */
    THEME_SYNTHESIZER(269),
    /**
     * <code>THEME_FRANCE = 270;</code>
     */
    THEME_FRANCE(270),
    /**
     * <code>THEME_WOMENS_NAMES = 271;</code>
     */
    THEME_WOMENS_NAMES(271),
    /**
     * <code>THEME_NORTH_AMERICA = 272;</code>
     */
    THEME_NORTH_AMERICA(272),
    /**
     * <code>THEME_VOODOO = 273;</code>
     */
    THEME_VOODOO(273),
    /**
     * <code>THEME_COMIC = 274;</code>
     */
    THEME_COMIC(274),
    /**
     * <code>THEME_HANDS = 275;</code>
     */
    THEME_HANDS(275),
    /**
     * <code>THEME_HIGH = 276;</code>
     */
    THEME_HIGH(276),
    /**
     * <code>THEME_ORPHAN = 277;</code>
     */
    THEME_ORPHAN(277),
    /**
     * <code>THEME_FEEL = 278;</code>
     */
    THEME_FEEL(278),
    /**
     * <code>THEME_SENSUALITY = 279;</code>
     */
    THEME_SENSUALITY(279),
    /**
     * <code>THEME_FAITH = 280;</code>
     */
    THEME_FAITH(280),
    /**
     * <code>THEME_STRESS = 281;</code>
     */
    THEME_STRESS(281),
    /**
     * <code>THEME_FEET = 282;</code>
     */
    THEME_FEET(282),
    /**
     * <code>THEME_FORGIVE = 283;</code>
     */
    THEME_FORGIVE(283),
    /**
     * <code>THEME_ANIMALS = 284;</code>
     */
    THEME_ANIMALS(284),
    /**
     * <code>THEME_WHALE = 285;</code>
     */
    THEME_WHALE(285),
    /**
     * <code>THEME_MAIL = 286;</code>
     */
    THEME_MAIL(286),
    /**
     * <code>THEME_NICARAGUA = 287;</code>
     */
    THEME_NICARAGUA(287),
    /**
     * <code>THEME_NORTH_MACEDONIA = 288;</code>
     */
    THEME_NORTH_MACEDONIA(288),
    /**
     * <code>THEME_DISAPPOINTMENT = 289;</code>
     */
    THEME_DISAPPOINTMENT(289),
    /**
     * <code>THEME_FIND = 290;</code>
     */
    THEME_FIND(290),
    /**
     * <code>THEME_SHEEP = 291;</code>
     */
    THEME_SHEEP(291),
    /**
     * <code>THEME_MEXICO = 292;</code>
     */
    THEME_MEXICO(292),
    /**
     * <code>THEME_DESERT = 293;</code>
     */
    THEME_DESERT(293),
    /**
     * <code>THEME_HANDSOME = 294;</code>
     */
    THEME_HANDSOME(294),
    /**
     * <code>THEME_HOUSTON = 295;</code>
     */
    THEME_HOUSTON(295),
    /**
     * <code>THEME_REGRET = 296;</code>
     */
    THEME_REGRET(296),
    /**
     * <code>THEME_RAP_GAME = 297;</code>
     */
    THEME_RAP_GAME(297),
    /**
     * <code>THEME_BALI = 298;</code>
     */
    THEME_BALI(298),
    /**
     * <code>THEME_INDIANA = 299;</code>
     */
    THEME_INDIANA(299),
    /**
     * <code>THEME_WALES = 300;</code>
     */
    THEME_WALES(300),
    /**
     * <code>THEME_CINCINNATI = 301;</code>
     */
    THEME_CINCINNATI(301),
    /**
     * <code>THEME_BURDEN = 302;</code>
     */
    THEME_BURDEN(302),
    /**
     * <code>THEME_HILLBILLY = 303;</code>
     */
    THEME_HILLBILLY(303),
    /**
     * <code>THEME_MULTIPLE_BODY_PARTS = 304;</code>
     */
    THEME_MULTIPLE_BODY_PARTS(304),
    /**
     * <code>THEME_BAHAMAS = 305;</code>
     */
    THEME_BAHAMAS(305),
    /**
     * <code>THEME_FRENCH_CARIBBEAN = 306;</code>
     */
    THEME_FRENCH_CARIBBEAN(306),
    /**
     * <code>THEME_FOLLOW = 307;</code>
     */
    THEME_FOLLOW(307),
    /**
     * <code>THEME_UNFAIR = 308;</code>
     */
    THEME_UNFAIR(308),
    /**
     * <code>THEME_MALI = 309;</code>
     */
    THEME_MALI(309),
    /**
     * <code>THEME_PANAMA = 310;</code>
     */
    THEME_PANAMA(310),
    /**
     * <code>THEME_ACTOR = 311;</code>
     */
    THEME_ACTOR(311),
    /**
     * <code>THEME_SWEET = 312;</code>
     */
    THEME_SWEET(312),
    /**
     * <code>THEME_TAXI = 313;</code>
     */
    THEME_TAXI(313),
    /**
     * <code>THEME_MAGICIAN = 314;</code>
     */
    THEME_MAGICIAN(314),
    /**
     * <code>THEME_BEST = 315;</code>
     */
    THEME_BEST(315),
    /**
     * <code>THEME_THEM = 316;</code>
     */
    THEME_THEM(316),
    /**
     * <code>THEME_USER_DEFINED = 317;</code>
     */
    THEME_USER_DEFINED(317),
    /**
     * <code>THEME_DONT_GO = 318;</code>
     */
    THEME_DONT_GO(318),
    /**
     * <code>THEME_HEAD = 319;</code>
     */
    THEME_HEAD(319),
    /**
     * <code>THEME_CANT_RESIST = 320;</code>
     */
    THEME_CANT_RESIST(320),
    /**
     * <code>THEME_SHAKE = 321;</code>
     */
    THEME_SHAKE(321),
    /**
     * <code>THEME_AFRICA = 322;</code>
     */
    THEME_AFRICA(322),
    /**
     * <code>THEME_SPRING = 323;</code>
     */
    THEME_SPRING(323),
    /**
     * <code>THEME_COWBOY_AND_COWGIRL = 324;</code>
     */
    THEME_COWBOY_AND_COWGIRL(324),
    /**
     * <code>THEME_ISLE_OF_MAN = 325;</code>
     */
    THEME_ISLE_OF_MAN(325),
    /**
     * <code>THEME_PROBLEMS = 326;</code>
     */
    THEME_PROBLEMS(326),
    /**
     * <code>THEME_WE_SHOULD_BE_TOGETHER = 327;</code>
     */
    THEME_WE_SHOULD_BE_TOGETHER(327),
    /**
     * <code>THEME_NAMIBIA = 328;</code>
     */
    THEME_NAMIBIA(328),
    /**
     * <code>THEME_KEYS = 329;</code>
     */
    THEME_KEYS(329),
    /**
     * <code>THEME_CHARITY = 330;</code>
     */
    THEME_CHARITY(330),
    /**
     * <code>THEME_NEW_ZEALAND = 331;</code>
     */
    THEME_NEW_ZEALAND(331),
    /**
     * <code>THEME_SLAVERY = 332;</code>
     */
    THEME_SLAVERY(332),
    /**
     * <code>THEME_ART = 333;</code>
     */
    THEME_ART(333),
    /**
     * <code>THEME_WATERFALL = 334;</code>
     */
    THEME_WATERFALL(334),
    /**
     * <code>THEME_CIRCUS = 335;</code>
     */
    THEME_CIRCUS(335),
    /**
     * <code>THEME_SAINT_KITTS_AND_NEVIS = 336;</code>
     */
    THEME_SAINT_KITTS_AND_NEVIS(336),
    /**
     * <code>THEME_MADAGASCAR = 337;</code>
     */
    THEME_MADAGASCAR(337),
    /**
     * <code>THEME_POSSIBILITY = 338;</code>
     */
    THEME_POSSIBILITY(338),
    /**
     * <code>THEME_BOARDWALK = 339;</code>
     */
    THEME_BOARDWALK(339),
    /**
     * <code>THEME_ASHES = 340;</code>
     */
    THEME_ASHES(340),
    /**
     * <code>THEME_WASHINGTON = 341;</code>
     */
    THEME_WASHINGTON(341),
    /**
     * <code>THEME_UNION = 342;</code>
     */
    THEME_UNION(342),
    /**
     * <code>THEME_SWEDEN = 343;</code>
     */
    THEME_SWEDEN(343),
    /**
     * <code>THEME_ROYALTY = 344;</code>
     */
    THEME_ROYALTY(344),
    /**
     * <code>THEME_FINGERS = 345;</code>
     */
    THEME_FINGERS(345),
    /**
     * <code>THEME_STAR = 346;</code>
     */
    THEME_STAR(346),
    /**
     * <code>THEME_MALAWI = 347;</code>
     */
    THEME_MALAWI(347),
    /**
     * <code>THEME_SHOULDER = 348;</code>
     */
    THEME_SHOULDER(348),
    /**
     * <code>THEME_ANDORRA = 349;</code>
     */
    THEME_ANDORRA(349),
    /**
     * <code>THEME_VALENTINE = 350;</code>
     */
    THEME_VALENTINE(350),
    /**
     * <code>THEME_POLAND = 351;</code>
     */
    THEME_POLAND(351),
    /**
     * <code>THEME_FISH = 352;</code>
     */
    THEME_FISH(352),
    /**
     * <code>THEME_IN_TROUBLE = 353;</code>
     */
    THEME_IN_TROUBLE(353),
    /**
     * <code>THEME_WOLF = 354;</code>
     */
    THEME_WOLF(354),
    /**
     * <code>THEME_FACE = 355;</code>
     */
    THEME_FACE(355),
    /**
     * <code>THEME_ANGST = 356;</code>
     */
    THEME_ANGST(356),
    /**
     * <code>THEME_DALLAS = 357;</code>
     */
    THEME_DALLAS(357),
    /**
     * <code>THEME_HAVANA = 358;</code>
     */
    THEME_HAVANA(358),
    /**
     * <code>THEME_TUNISIA = 359;</code>
     */
    THEME_TUNISIA(359),
    /**
     * <code>THEME_WISCONSIN = 360;</code>
     */
    THEME_WISCONSIN(360),
    /**
     * <code>THEME_NATURE = 361;</code>
     */
    THEME_NATURE(361),
    /**
     * <code>THEME_WINDOW = 362;</code>
     */
    THEME_WINDOW(362),
    /**
     * <code>THEME_MOTION = 363;</code>
     */
    THEME_MOTION(363),
    /**
     * <code>THEME_COSTA_RICA = 364;</code>
     */
    THEME_COSTA_RICA(364),
    /**
     * <code>THEME_AFFECTION = 365;</code>
     */
    THEME_AFFECTION(365),
    /**
     * <code>THEME_CONNECTION = 366;</code>
     */
    THEME_CONNECTION(366),
    /**
     * <code>THEME_RELIGION = 367;</code>
     */
    THEME_RELIGION(367),
    /**
     * <code>THEME_SEDUCED = 368;</code>
     */
    THEME_SEDUCED(368),
    /**
     * <code>THEME_RUN = 369;</code>
     */
    THEME_RUN(369),
    /**
     * <code>THEME_PHARMACEUTICAL = 370;</code>
     */
    THEME_PHARMACEUTICAL(370),
    /**
     * <code>THEME_EUROPEAN_UNION = 371;</code>
     */
    THEME_EUROPEAN_UNION(371),
    /**
     * <code>THEME_TUVALU = 372;</code>
     */
    THEME_TUVALU(372),
    /**
     * <code>THEME_TRAGEDY = 373;</code>
     */
    THEME_TRAGEDY(373),
    /**
     * <code>THEME_SHOULD_HAVE_SAID = 374;</code>
     */
    THEME_SHOULD_HAVE_SAID(374),
    /**
     * <code>THEME_BIRMINGHAM = 375;</code>
     */
    THEME_BIRMINGHAM(375),
    /**
     * <code>THEME_CIVIL_RIGHTS = 376;</code>
     */
    THEME_CIVIL_RIGHTS(376),
    /**
     * <code>THEME_FEVER = 377;</code>
     */
    THEME_FEVER(377),
    /**
     * <code>THEME_PRETTY = 378;</code>
     */
    THEME_PRETTY(378),
    /**
     * <code>THEME_SUPERHERO = 379;</code>
     */
    THEME_SUPERHERO(379),
    /**
     * <code>THEME_RESTAURANT = 380;</code>
     */
    THEME_RESTAURANT(380),
    /**
     * <code>THEME_SLEEP = 381;</code>
     */
    THEME_SLEEP(381),
    /**
     * <code>THEME_CHOOSE = 382;</code>
     */
    THEME_CHOOSE(382),
    /**
     * <code>THEME_MUSIC = 383;</code>
     */
    THEME_MUSIC(383),
    /**
     * <code>THEME_FIRE = 384;</code>
     */
    THEME_FIRE(384),
    /**
     * <code>THEME_CENTRAL_AMERICA = 385;</code>
     */
    THEME_CENTRAL_AMERICA(385),
    /**
     * <code>THEME_HEALING = 386;</code>
     */
    THEME_HEALING(386),
    /**
     * <code>THEME_LEARN = 387;</code>
     */
    THEME_LEARN(387),
    /**
     * <code>THEME_HAT = 388;</code>
     */
    THEME_HAT(388),
    /**
     * <code>THEME_VILLAIN = 389;</code>
     */
    THEME_VILLAIN(389),
    /**
     * <code>THEME_WOMEN_TALKING_TO_WOMEN = 390;</code>
     */
    THEME_WOMEN_TALKING_TO_WOMEN(390),
    /**
     * <code>THEME_GRATITUDE = 391;</code>
     */
    THEME_GRATITUDE(391),
    /**
     * <code>THEME_TONGUE = 392;</code>
     */
    THEME_TONGUE(392),
    /**
     * <code>THEME_DETROIT = 393;</code>
     */
    THEME_DETROIT(393),
    /**
     * <code>THEME_ANYTHING = 394;</code>
     */
    THEME_ANYTHING(394),
    /**
     * <code>THEME_MORNING = 395;</code>
     */
    THEME_MORNING(395),
    /**
     * <code>THEME_SING = 396;</code>
     */
    THEME_SING(396),
    /**
     * <code>THEME_ALCOHOL = 397;</code>
     */
    THEME_ALCOHOL(397),
    /**
     * <code>THEME_PARADE = 398;</code>
     */
    THEME_PARADE(398),
    /**
     * <code>THEME_IN_FRONT = 399;</code>
     */
    THEME_IN_FRONT(399),
    /**
     * <code>THEME_BEACH = 400;</code>
     */
    THEME_BEACH(400),
    /**
     * <code>THEME_CONTAINER = 401;</code>
     */
    THEME_CONTAINER(401),
    /**
     * <code>THEME_CONFIDENCE = 402;</code>
     */
    THEME_CONFIDENCE(402),
    /**
     * <code>THEME_NOSTALGIA = 403;</code>
     */
    THEME_NOSTALGIA(403),
    /**
     * <code>THEME_POLYNESIA = 404;</code>
     */
    THEME_POLYNESIA(404),
    /**
     * <code>THEME_SEARCH = 405;</code>
     */
    THEME_SEARCH(405),
    /**
     * <code>THEME_STUBBORN = 406;</code>
     */
    THEME_STUBBORN(406),
    /**
     * <code>THEME_DRIVE = 407;</code>
     */
    THEME_DRIVE(407),
    /**
     * <code>THEME_OUTDOOR = 408;</code>
     */
    THEME_OUTDOOR(408),
    /**
     * <code>THEME_ALGERIA = 409;</code>
     */
    THEME_ALGERIA(409),
    /**
     * <code>THEME_LOOK = 410;</code>
     */
    THEME_LOOK(410),
    /**
     * <code>THEME_SLOVENIA = 411;</code>
     */
    THEME_SLOVENIA(411),
    /**
     * <code>THEME_BEVERAGE = 412;</code>
     */
    THEME_BEVERAGE(412),
    /**
     * <code>THEME_TRUTH = 413;</code>
     */
    THEME_TRUTH(413),
    /**
     * <code>THEME_THIN = 414;</code>
     */
    THEME_THIN(414),
    /**
     * <code>THEME_COLOMBIA = 415;</code>
     */
    THEME_COLOMBIA(415),
    /**
     * <code>THEME_HEAVEN = 416;</code>
     */
    THEME_HEAVEN(416),
    /**
     * <code>THEME_GAS_STATION = 417;</code>
     */
    THEME_GAS_STATION(417),
    /**
     * <code>THEME_CLOTHING = 418;</code>
     */
    THEME_CLOTHING(418),
    /**
     * <code>THEME_MOLDOVA = 419;</code>
     */
    THEME_MOLDOVA(419),
    /**
     * <code>THEME_FREE = 420;</code>
     */
    THEME_FREE(420),
    /**
     * <code>THEME_PENNSYLVANIA = 421;</code>
     */
    THEME_PENNSYLVANIA(421),
    /**
     * <code>THEME_GANGSTA_LIFE = 422;</code>
     */
    THEME_GANGSTA_LIFE(422),
    /**
     * <code>THEME_TEXAS = 423;</code>
     */
    THEME_TEXAS(423),
    /**
     * <code>THEME_JEALOUS = 424;</code>
     */
    THEME_JEALOUS(424),
    /**
     * <code>THEME_NEW_MEXICO = 425;</code>
     */
    THEME_NEW_MEXICO(425),
    /**
     * <code>THEME_NOW = 426;</code>
     */
    THEME_NOW(426),
    /**
     * <code>THEME_HONDURAS = 427;</code>
     */
    THEME_HONDURAS(427),
    /**
     * <code>THEME_UP = 428;</code>
     */
    THEME_UP(428),
    /**
     * <code>THEME_NAURU = 429;</code>
     */
    THEME_NAURU(429),
    /**
     * <code>THEME_US = 430;</code>
     */
    THEME_US(430),
    /**
     * <code>THEME_BEAUTY = 431;</code>
     */
    THEME_BEAUTY(431),
    /**
     * <code>THEME_BROWN = 432;</code>
     */
    THEME_BROWN(432),
    /**
     * <code>THEME_GAMBLING = 433;</code>
     */
    THEME_GAMBLING(433),
    /**
     * <code>THEME_CHRISTMAS = 434;</code>
     */
    THEME_CHRISTMAS(434),
    /**
     * <code>THEME_GREED = 435;</code>
     */
    THEME_GREED(435),
    /**
     * <code>THEME_SEPTEMBER = 436;</code>
     */
    THEME_SEPTEMBER(436),
    /**
     * <code>THEME_CRITICIZE = 437;</code>
     */
    THEME_CRITICIZE(437),
    /**
     * <code>THEME_PARENT = 438;</code>
     */
    THEME_PARENT(438),
    /**
     * <code>THEME_FASCISM = 439;</code>
     */
    THEME_FASCISM(439),
    /**
     * <code>THEME_HIPS = 440;</code>
     */
    THEME_HIPS(440),
    /**
     * <code>THEME_SHOW_BIZ = 441;</code>
     */
    THEME_SHOW_BIZ(441),
    /**
     * <code>THEME_FORBIDDEN = 442;</code>
     */
    THEME_FORBIDDEN(442),
    /**
     * <code>THEME_LEAVE = 443;</code>
     */
    THEME_LEAVE(443),
    /**
     * <code>THEME_WAR = 444;</code>
     */
    THEME_WAR(444),
    /**
     * <code>THEME_SPECIFIC_TIME = 445;</code>
     */
    THEME_SPECIFIC_TIME(445),
    /**
     * <code>THEME_BASKETBALL = 446;</code>
     */
    THEME_BASKETBALL(446),
    /**
     * <code>THEME_FISHING = 447;</code>
     */
    THEME_FISHING(447),
    /**
     * <code>THEME_SITUATION = 448;</code>
     */
    THEME_SITUATION(448),
    /**
     * <code>THEME_NEW_HAMPSHIRE = 449;</code>
     */
    THEME_NEW_HAMPSHIRE(449),
    /**
     * <code>THEME_PRODUCT_AND_BRAND = 450;</code>
     */
    THEME_PRODUCT_AND_BRAND(450),
    /**
     * <code>THEME_NETHERLANDS = 451;</code>
     */
    THEME_NETHERLANDS(451),
    /**
     * <code>THEME_EARTHQUAKE = 452;</code>
     */
    THEME_EARTHQUAKE(452),
    /**
     * <code>THEME_MOUNTAIN = 453;</code>
     */
    THEME_MOUNTAIN(453),
    /**
     * <code>THEME_BACK_TOGETHER = 454;</code>
     */
    THEME_BACK_TOGETHER(454),
    /**
     * <code>THEME_QUALITY = 455;</code>
     */
    THEME_QUALITY(455),
    /**
     * <code>THEME_ALASKA = 456;</code>
     */
    THEME_ALASKA(456),
    /**
     * <code>THEME_SHOPPING = 457;</code>
     */
    THEME_SHOPPING(457),
    /**
     * <code>THEME_TUESDAY = 458;</code>
     */
    THEME_TUESDAY(458),
    /**
     * <code>THEME_BLAME = 459;</code>
     */
    THEME_BLAME(459),
    /**
     * <code>THEME_PUERTO_RICO = 460;</code>
     */
    THEME_PUERTO_RICO(460),
    /**
     * <code>THEME_BASS = 461;</code>
     */
    THEME_BASS(461),
    /**
     * <code>THEME_OBSESSION = 462;</code>
     */
    THEME_OBSESSION(462),
    /**
     * <code>THEME_BHUTAN = 463;</code>
     */
    THEME_BHUTAN(463),
    /**
     * <code>THEME_TRUST = 464;</code>
     */
    THEME_TRUST(464),
    /**
     * <code>THEME_MIAMI = 465;</code>
     */
    THEME_MIAMI(465),
    /**
     * <code>THEME_CONTINENT = 466;</code>
     */
    THEME_CONTINENT(466),
    /**
     * <code>THEME_ADDICTION = 467;</code>
     */
    THEME_ADDICTION(467),
    /**
     * <code>THEME_LIGHTNING = 468;</code>
     */
    THEME_LIGHTNING(468),
    /**
     * <code>THEME_FAR = 469;</code>
     */
    THEME_FAR(469),
    /**
     * <code>THEME_FAT = 470;</code>
     */
    THEME_FAT(470),
    /**
     * <code>THEME_ZIMBABWE = 471;</code>
     */
    THEME_ZIMBABWE(471),
    /**
     * <code>THEME_GREEN = 472;</code>
     */
    THEME_GREEN(472),
    /**
     * <code>THEME_MONTENEGRO = 473;</code>
     */
    THEME_MONTENEGRO(473),
    /**
     * <code>THEME_BARS = 474;</code>
     */
    THEME_BARS(474),
    /**
     * <code>THEME_PRAYER = 475;</code>
     */
    THEME_PRAYER(475),
    /**
     * <code>THEME_MISTAKES = 476;</code>
     */
    THEME_MISTAKES(476),
    /**
     * <code>THEME_BIRTH_CONTROL = 477;</code>
     */
    THEME_BIRTH_CONTROL(477),
    /**
     * <code>THEME_SUPPORT = 478;</code>
     */
    THEME_SUPPORT(478),
    /**
     * <code>THEME_BEHIND = 479;</code>
     */
    THEME_BEHIND(479),
    /**
     * <code>THEME_CENTRAL_AFRICAN_REPUBLIC = 480;</code>
     */
    THEME_CENTRAL_AFRICAN_REPUBLIC(480),
    /**
     * <code>THEME_SEGREGATION = 481;</code>
     */
    THEME_SEGREGATION(481),
    /**
     * <code>THEME_SHARK = 482;</code>
     */
    THEME_SHARK(482),
    /**
     * <code>THEME_CELEBRATION = 483;</code>
     */
    THEME_CELEBRATION(483),
    /**
     * <code>THEME_FURNITURE = 484;</code>
     */
    THEME_FURNITURE(484),
    /**
     * <code>THEME_UTAH = 485;</code>
     */
    THEME_UTAH(485),
    /**
     * <code>THEME_BLESS = 486;</code>
     */
    THEME_BLESS(486),
    /**
     * <code>THEME_GOODNIGHT = 487;</code>
     */
    THEME_GOODNIGHT(487),
    /**
     * <code>THEME_GREECE = 488;</code>
     */
    THEME_GREECE(488),
    /**
     * <code>THEME_PRIVACY = 489;</code>
     */
    THEME_PRIVACY(489),
    /**
     * <code>THEME_SHOUTING = 490;</code>
     */
    THEME_SHOUTING(490),
    /**
     * <code>THEME_SOUTH_AFRICA = 491;</code>
     */
    THEME_SOUTH_AFRICA(491),
    /**
     * <code>THEME_WIFE = 492;</code>
     */
    THEME_WIFE(492),
    /**
     * <code>THEME_SPECIAL = 493;</code>
     */
    THEME_SPECIAL(493),
    /**
     * <code>THEME_WORK = 494;</code>
     */
    THEME_WORK(494),
    /**
     * <code>THEME_COMPUTER = 495;</code>
     */
    THEME_COMPUTER(495),
    /**
     * <code>THEME_GUYANA = 496;</code>
     */
    THEME_GUYANA(496),
    /**
     * <code>THEME_PLANET = 497;</code>
     */
    THEME_PLANET(497),
    /**
     * <code>THEME_NEW_DAY = 498;</code>
     */
    THEME_NEW_DAY(498),
    /**
     * <code>THEME_FAILURE = 499;</code>
     */
    THEME_FAILURE(499),
    /**
     * <code>THEME_WOMEN = 500;</code>
     */
    THEME_WOMEN(500),
    /**
     * <code>THEME_UNCLE = 501;</code>
     */
    THEME_UNCLE(501),
    /**
     * <code>THEME_AFTERNOON = 502;</code>
     */
    THEME_AFTERNOON(502),
    /**
     * <code>THEME_COLD = 503;</code>
     */
    THEME_COLD(503),
    /**
     * <code>THEME_SAVANNAH = 504;</code>
     */
    THEME_SAVANNAH(504),
    /**
     * <code>THEME_UKRAINE = 505;</code>
     */
    THEME_UKRAINE(505),
    /**
     * <code>THEME_MEN_TALKING_TO_MEN = 506;</code>
     */
    THEME_MEN_TALKING_TO_MEN(506),
    /**
     * <code>THEME_HOUSE = 507;</code>
     */
    THEME_HOUSE(507),
    /**
     * <code>THEME_LIES = 508;</code>
     */
    THEME_LIES(508),
    /**
     * <code>THEME_GOOD_LIFE = 509;</code>
     */
    THEME_GOOD_LIFE(509),
    /**
     * <code>THEME_TOBACCO = 510;</code>
     */
    THEME_TOBACCO(510),
    /**
     * <code>THEME_LOW = 511;</code>
     */
    THEME_LOW(511),
    /**
     * <code>THEME_IDEA = 512;</code>
     */
    THEME_IDEA(512),
    /**
     * <code>THEME_BEGINNING = 513;</code>
     */
    THEME_BEGINNING(513),
    /**
     * <code>THEME_CONNECTICUT = 514;</code>
     */
    THEME_CONNECTICUT(514),
    /**
     * <code>THEME_CRIME = 515;</code>
     */
    THEME_CRIME(515),
    /**
     * <code>THEME_COUNTRY = 516;</code>
     */
    THEME_COUNTRY(516),
    /**
     * <code>THEME_BERMUDA = 517;</code>
     */
    THEME_BERMUDA(517),
    /**
     * <code>THEME_ALWAYS = 518;</code>
     */
    THEME_ALWAYS(518),
    /**
     * <code>THEME_JAMAICA = 519;</code>
     */
    THEME_JAMAICA(519),
    /**
     * <code>THEME_TURKMENISTAN = 520;</code>
     */
    THEME_TURKMENISTAN(520),
    /**
     * <code>THEME_WRITE = 521;</code>
     */
    THEME_WRITE(521),
    /**
     * <code>THEME_DEFEATED = 522;</code>
     */
    THEME_DEFEATED(522),
    /**
     * <code>THEME_HELP = 523;</code>
     */
    THEME_HELP(523),
    /**
     * <code>THEME_COUPLE = 524;</code>
     */
    THEME_COUPLE(524),
    /**
     * <code>THEME_COOL = 525;</code>
     */
    THEME_COOL(525),
    /**
     * <code>THEME_THAILAND = 526;</code>
     */
    THEME_THAILAND(526),
    /**
     * <code>THEME_LECTURING = 527;</code>
     */
    THEME_LECTURING(527),
    /**
     * <code>THEME_FRAGILE = 528;</code>
     */
    THEME_FRAGILE(528),
    /**
     * <code>THEME_FAKE = 529;</code>
     */
    THEME_FAKE(529),
    /**
     * <code>THEME_AMSTERDAM = 530;</code>
     */
    THEME_AMSTERDAM(530),
    /**
     * <code>THEME_SAUDI_ARABIA = 531;</code>
     */
    THEME_SAUDI_ARABIA(531),
    /**
     * <code>THEME_MONSTER = 532;</code>
     */
    THEME_MONSTER(532),
    /**
     * <code>THEME_NEW_YORK_CITY = 533;</code>
     */
    THEME_NEW_YORK_CITY(533),
    /**
     * <code>THEME_WITCH = 534;</code>
     */
    THEME_WITCH(534),
    /**
     * <code>THEME_KUWAIT = 535;</code>
     */
    THEME_KUWAIT(535),
    /**
     * <code>THEME_BURKINA_FASO = 536;</code>
     */
    THEME_BURKINA_FASO(536),
    /**
     * <code>THEME_CROATIA = 537;</code>
     */
    THEME_CROATIA(537),
    /**
     * <code>THEME_LOST = 538;</code>
     */
    THEME_LOST(538),
    /**
     * <code>THEME_GUITAR = 539;</code>
     */
    THEME_GUITAR(539),
    /**
     * <code>THEME_MOVIE = 540;</code>
     */
    THEME_MOVIE(540),
    /**
     * <code>THEME_HIPPIE = 541;</code>
     */
    THEME_HIPPIE(541),
    /**
     * <code>THEME_FAIR = 542;</code>
     */
    THEME_FAIR(542),
    /**
     * <code>THEME_EL_SALVADOR = 543;</code>
     */
    THEME_EL_SALVADOR(543),
    /**
     * <code>THEME_ROAD = 544;</code>
     */
    THEME_ROAD(544),
    /**
     * <code>THEME_LOSS = 545;</code>
     */
    THEME_LOSS(545),
    /**
     * <code>THEME_SEARCHING_FOR = 546;</code>
     */
    THEME_SEARCHING_FOR(546),
    /**
     * <code>THEME_RHODE_ISLAND = 547;</code>
     */
    THEME_RHODE_ISLAND(547),
    /**
     * <code>THEME_FOUND = 548;</code>
     */
    THEME_FOUND(548),
    /**
     * <code>THEME_PREGNANCY = 549;</code>
     */
    THEME_PREGNANCY(549),
    /**
     * <code>THEME_SILENCE = 550;</code>
     */
    THEME_SILENCE(550),
    /**
     * <code>THEME_FEELINGS = 551;</code>
     */
    THEME_FEELINGS(551),
    /**
     * <code>THEME_CAPITAL_PUNISHMENT = 552;</code>
     */
    THEME_CAPITAL_PUNISHMENT(552),
    /**
     * <code>THEME_FAMILY = 553;</code>
     */
    THEME_FAMILY(553),
    /**
     * <code>THEME_HALLOWEEN = 554;</code>
     */
    THEME_HALLOWEEN(554),
    /**
     * <code>THEME_NONE = 555;</code>
     */
    THEME_NONE(555),
    /**
     * <code>THEME_DAY = 556;</code>
     */
    THEME_DAY(556),
    /**
     * <code>THEME_HELL = 557;</code>
     */
    THEME_HELL(557),
    /**
     * <code>THEME_BEAUTIFUL = 558;</code>
     */
    THEME_BEAUTIFUL(558),
    /**
     * <code>THEME_FALLING_IN = 559;</code>
     */
    THEME_FALLING_IN(559),
    /**
     * <code>THEME_UNFAITHFUL = 560;</code>
     */
    THEME_UNFAITHFUL(560),
    /**
     * <code>THEME_BEING_IN = 561;</code>
     */
    THEME_BEING_IN(561),
    /**
     * <code>THEME_DRINK = 562;</code>
     */
    THEME_DRINK(562),
    /**
     * <code>THEME_KNOWLEDGE = 563;</code>
     */
    THEME_KNOWLEDGE(563),
    /**
     * <code>THEME_SPORT = 564;</code>
     */
    THEME_SPORT(564),
    /**
     * <code>THEME_FAME = 565;</code>
     */
    THEME_FAME(565),
    /**
     * <code>THEME_AUSTRIA = 566;</code>
     */
    THEME_AUSTRIA(566),
    /**
     * <code>THEME_EXERCISE = 567;</code>
     */
    THEME_EXERCISE(567),
    /**
     * <code>THEME_TECHNOLOGY = 568;</code>
     */
    THEME_TECHNOLOGY(568),
    /**
     * <code>THEME_MONACO = 569;</code>
     */
    THEME_MONACO(569),
    /**
     * <code>THEME_INNOCENCE = 570;</code>
     */
    THEME_INNOCENCE(570),
    /**
     * <code>THEME_UGLY = 571;</code>
     */
    THEME_UGLY(571),
    /**
     * <code>THEME_CANDY = 572;</code>
     */
    THEME_CANDY(572),
    /**
     * <code>THEME_MEMPHIS = 573;</code>
     */
    THEME_MEMPHIS(573),
    /**
     * <code>THEME_HOSPITAL = 574;</code>
     */
    THEME_HOSPITAL(574),
    /**
     * <code>THEME_BELIEF = 575;</code>
     */
    THEME_BELIEF(575),
    /**
     * <code>THEME_KANSAS_CITY = 576;</code>
     */
    THEME_KANSAS_CITY(576),
    /**
     * <code>THEME_ROCK = 577;</code>
     */
    THEME_ROCK(577),
    /**
     * <code>THEME_AUTUMN = 578;</code>
     */
    THEME_AUTUMN(578),
    /**
     * <code>THEME_NOON = 579;</code>
     */
    THEME_NOON(579),
    /**
     * <code>THEME_YESTERDAY = 580;</code>
     */
    THEME_YESTERDAY(580),
    /**
     * <code>THEME_DAUGHTER = 581;</code>
     */
    THEME_DAUGHTER(581),
    /**
     * <code>THEME_SOUTH_AMERICA = 582;</code>
     */
    THEME_SOUTH_AMERICA(582),
    /**
     * <code>THEME_YOUTH = 583;</code>
     */
    THEME_YOUTH(583),
    /**
     * <code>THEME_PERCUSSION = 584;</code>
     */
    THEME_PERCUSSION(584),
    /**
     * <code>THEME_MANIPULATE = 585;</code>
     */
    THEME_MANIPULATE(585),
    /**
     * <code>THEME_MEDELL__II__N = 586;</code>
     */
    THEME_MEDELL__II__N(586),
    /**
     * <code>THEME_SIERRA_LEONE = 587;</code>
     */
    THEME_SIERRA_LEONE(587),
    /**
     * <code>THEME_ALBANIA = 588;</code>
     */
    THEME_ALBANIA(588),
    /**
     * <code>THEME_AUGUST = 589;</code>
     */
    THEME_AUGUST(589),
    /**
     * <code>THEME_UNITY = 590;</code>
     */
    THEME_UNITY(590),
    /**
     * <code>THEME_PACIFIC_ISLANDS = 591;</code>
     */
    THEME_PACIFIC_ISLANDS(591),
    /**
     * <code>THEME_LOVE = 592;</code>
     */
    THEME_LOVE(592),
    /**
     * <code>THEME_ENLISTMENT = 593;</code>
     */
    THEME_ENLISTMENT(593),
    /**
     * <code>THEME_SAD = 594;</code>
     */
    THEME_SAD(594),
    /**
     * <code>THEME_THEATRE = 595;</code>
     */
    THEME_THEATRE(595),
    /**
     * <code>THEME_FALL = 596;</code>
     */
    THEME_FALL(596),
    /**
     * <code>THEME_MARSHALL_ISLANDS = 597;</code>
     */
    THEME_MARSHALL_ISLANDS(597),
    /**
     * <code>THEME_ETHIOPIA = 598;</code>
     */
    THEME_ETHIOPIA(598),
    /**
     * <code>THEME_TEMPERATURE = 599;</code>
     */
    THEME_TEMPERATURE(599),
    /**
     * <code>THEME_WILD = 600;</code>
     */
    THEME_WILD(600),
    /**
     * <code>THEME_MENS_NAMES = 601;</code>
     */
    THEME_MENS_NAMES(601),
    /**
     * <code>THEME_LOSING_YOU = 602;</code>
     */
    THEME_LOSING_YOU(602),
    /**
     * <code>THEME_FORGET = 603;</code>
     */
    THEME_FORGET(603),
    /**
     * <code>THEME_POWER_AND_CONTROL = 604;</code>
     */
    THEME_POWER_AND_CONTROL(604),
    /**
     * <code>THEME_EARTH = 605;</code>
     */
    THEME_EARTH(605),
    /**
     * <code>THEME_WASTEFUL = 606;</code>
     */
    THEME_WASTEFUL(606),
    /**
     * <code>THEME_TOGETHERNESS = 607;</code>
     */
    THEME_TOGETHERNESS(607),
    /**
     * <code>THEME_THREATEN = 608;</code>
     */
    THEME_THREATEN(608),
    /**
     * <code>THEME_PAKISTAN = 609;</code>
     */
    THEME_PAKISTAN(609),
    /**
     * <code>THEME_DINOSAUR = 610;</code>
     */
    THEME_DINOSAUR(610),
    /**
     * <code>THEME_ATLANTA = 611;</code>
     */
    THEME_ATLANTA(611),
    /**
     * <code>THEME_GAMBIA = 612;</code>
     */
    THEME_GAMBIA(612),
    /**
     * <code>THEME_QATAR = 613;</code>
     */
    THEME_QATAR(613),
    /**
     * <code>THEME_CROCODILE = 614;</code>
     */
    THEME_CROCODILE(614),
    /**
     * <code>THEME_DANGER = 615;</code>
     */
    THEME_DANGER(615),
    /**
     * <code>THEME_SERBIA = 616;</code>
     */
    THEME_SERBIA(616),
    /**
     * <code>THEME_DRUG = 617;</code>
     */
    THEME_DRUG(617),
    /**
     * <code>THEME_JUKEBOX = 618;</code>
     */
    THEME_JUKEBOX(618),
    /**
     * <code>THEME_FLOWER = 619;</code>
     */
    THEME_FLOWER(619),
    /**
     * <code>THEME_ZODIAC = 620;</code>
     */
    THEME_ZODIAC(620),
    /**
     * <code>THEME_BAD = 621;</code>
     */
    THEME_BAD(621),
    /**
     * <code>THEME_FROG = 622;</code>
     */
    THEME_FROG(622),
    /**
     * <code>THEME_SHAME = 623;</code>
     */
    THEME_SHAME(623),
    /**
     * <code>THEME_RWANDA = 624;</code>
     */
    THEME_RWANDA(624),
    /**
     * <code>THEME_ETERNITY = 625;</code>
     */
    THEME_ETERNITY(625),
    /**
     * <code>THEME_SPIRIT = 626;</code>
     */
    THEME_SPIRIT(626),
    /**
     * <code>THEME_DATE = 627;</code>
     */
    THEME_DATE(627),
    /**
     * <code>THEME_BANGLADESH = 628;</code>
     */
    THEME_BANGLADESH(628),
    /**
     * <code>THEME_TODAY = 629;</code>
     */
    THEME_TODAY(629),
    /**
     * <code>THEME_BARBADOS = 630;</code>
     */
    THEME_BARBADOS(630),
    /**
     * <code>THEME_FIX = 631;</code>
     */
    THEME_FIX(631),
    /**
     * <code>THEME_DONT_LEAVE_ME = 632;</code>
     */
    THEME_DONT_LEAVE_ME(632),
    /**
     * <code>THEME_DENMARK = 633;</code>
     */
    THEME_DENMARK(633),
    /**
     * <code>THEME_POLITICS = 634;</code>
     */
    THEME_POLITICS(634),
    /**
     * <code>THEME_BAY = 635;</code>
     */
    THEME_BAY(635),
    /**
     * <code>THEME_FIGHT = 636;</code>
     */
    THEME_FIGHT(636),
    /**
     * <code>THEME_GRANDPARENT = 637;</code>
     */
    THEME_GRANDPARENT(637),
    /**
     * <code>THEME_YOU = 638;</code>
     */
    THEME_YOU(638),
    /**
     * <code>THEME_INTEGRITY = 639;</code>
     */
    THEME_INTEGRITY(639),
    /**
     * <code>THEME_EUROPEAN_ECONOMIC_AREA = 640;</code>
     */
    THEME_EUROPEAN_ECONOMIC_AREA(640),
    /**
     * <code>THEME_HEART = 641;</code>
     */
    THEME_HEART(641),
    /**
     * <code>THEME_STORM = 642;</code>
     */
    THEME_STORM(642),
    /**
     * <code>THEME_WIND = 643;</code>
     */
    THEME_WIND(643),
    /**
     * <code>THEME_LEFT = 644;</code>
     */
    THEME_LEFT(644),
    /**
     * <code>THEME_SOCIAL_OUTCAST = 645;</code>
     */
    THEME_SOCIAL_OUTCAST(645),
    /**
     * <code>THEME_CAMBODIA = 646;</code>
     */
    THEME_CAMBODIA(646),
    /**
     * <code>THEME_STOP = 647;</code>
     */
    THEME_STOP(647),
    /**
     * <code>THEME_IDEAL = 648;</code>
     */
    THEME_IDEAL(648),
    /**
     * <code>THEME_SIZE = 649;</code>
     */
    THEME_SIZE(649),
    /**
     * <code>THEME_SWAMP = 650;</code>
     */
    THEME_SWAMP(650),
    /**
     * <code>THEME_JEWELRY = 651;</code>
     */
    THEME_JEWELRY(651),
    /**
     * <code>THEME_BLACK = 652;</code>
     */
    THEME_BLACK(652),
    /**
     * <code>THEME_PONY = 653;</code>
     */
    THEME_PONY(653),
    /**
     * <code>THEME_PARAGUAY = 654;</code>
     */
    THEME_PARAGUAY(654),
    /**
     * <code>THEME_BALKANS = 655;</code>
     */
    THEME_BALKANS(655),
    /**
     * <code>THEME_SUCCESS = 656;</code>
     */
    THEME_SUCCESS(656),
    /**
     * <code>THEME_WEAPON = 657;</code>
     */
    THEME_WEAPON(657),
    /**
     * <code>THEME_SYRIA = 658;</code>
     */
    THEME_SYRIA(658),
    /**
     * <code>THEME_IDEAS = 659;</code>
     */
    THEME_IDEAS(659),
    /**
     * <code>THEME_DREAM = 660;</code>
     */
    THEME_DREAM(660),
    /**
     * <code>THEME_GROW_OLDER = 661;</code>
     */
    THEME_GROW_OLDER(661),
    /**
     * <code>THEME_CARD_GAME = 662;</code>
     */
    THEME_CARD_GAME(662),
    /**
     * <code>THEME_DAWN = 663;</code>
     */
    THEME_DAWN(663),
    /**
     * <code>THEME_RANCH = 664;</code>
     */
    THEME_RANCH(664),
    /**
     * <code>THEME_LION = 665;</code>
     */
    THEME_LION(665),
    /**
     * <code>THEME_CALL_OUT = 666;</code>
     */
    THEME_CALL_OUT(666),
    /**
     * <code>THEME_HAIR = 667;</code>
     */
    THEME_HAIR(667),
    /**
     * <code>THEME_ANGER = 668;</code>
     */
    THEME_ANGER(668),
    /**
     * <code>THEME_FRENCH_POLYNESIA = 669;</code>
     */
    THEME_FRENCH_POLYNESIA(669),
    /**
     * <code>THEME_VATICAN = 670;</code>
     */
    THEME_VATICAN(670),
    /**
     * <code>THEME_RODEO = 671;</code>
     */
    THEME_RODEO(671),
    /**
     * <code>THEME_ANGEL = 672;</code>
     */
    THEME_ANGEL(672),
    /**
     * <code>THEME_ANNIVERSARY = 673;</code>
     */
    THEME_ANNIVERSARY(673),
    /**
     * <code>THEME_WOODWIND = 674;</code>
     */
    THEME_WOODWIND(674),
    /**
     * <code>THEME_METHOD = 675;</code>
     */
    THEME_METHOD(675),
    /**
     * <code>THEME_CALIFORNIA = 676;</code>
     */
    THEME_CALIFORNIA(676),
    /**
     * <code>THEME_HOT = 677;</code>
     */
    THEME_HOT(677),
    /**
     * <code>THEME_BAHRAIN = 678;</code>
     */
    THEME_BAHRAIN(678),
    /**
     * <code>THEME_SEA = 679;</code>
     */
    THEME_SEA(679),
    /**
     * <code>THEME_CHASE = 680;</code>
     */
    THEME_CHASE(680),
    /**
     * <code>THEME_HOLLYWOOD = 681;</code>
     */
    THEME_HOLLYWOOD(681),
    /**
     * <code>THEME_AMBIVALENT = 682;</code>
     */
    THEME_AMBIVALENT(682),
    /**
     * <code>THEME_HONESTY = 683;</code>
     */
    THEME_HONESTY(683),
    /**
     * <code>THEME_MISSISSIPPI = 684;</code>
     */
    THEME_MISSISSIPPI(684),
    /**
     * <code>THEME_DEVIL = 685;</code>
     */
    THEME_DEVIL(685),
    /**
     * <code>THEME_SAIL = 686;</code>
     */
    THEME_SAIL(686),
    /**
     * <code>THEME_COMOROS = 687;</code>
     */
    THEME_COMOROS(687),
    /**
     * <code>THEME_HERO = 688;</code>
     */
    THEME_HERO(688),
    /**
     * <code>THEME_CITY_LIFE = 689;</code>
     */
    THEME_CITY_LIFE(689),
    /**
     * <code>THEME_POLITICAL = 690;</code>
     */
    THEME_POLITICAL(690),
    /**
     * <code>THEME_CANT_GET_OVER = 691;</code>
     */
    THEME_CANT_GET_OVER(691),
    /**
     * <code>THEME_STRING_AND_ROPE = 692;</code>
     */
    THEME_STRING_AND_ROPE(692),
    /**
     * <code>THEME_FABRIC = 693;</code>
     */
    THEME_FABRIC(693),
    /**
     * <code>THEME_MARYLAND = 694;</code>
     */
    THEME_MARYLAND(694),
    /**
     * <code>THEME_WEEK = 695;</code>
     */
    THEME_WEEK(695),
    /**
     * <code>THEME_HOLDING_ON = 696;</code>
     */
    THEME_HOLDING_ON(696),
    /**
     * <code>THEME_ADOLESCENCE = 697;</code>
     */
    THEME_ADOLESCENCE(697),
    /**
     * <code>THEME_ERITREA = 698;</code>
     */
    THEME_ERITREA(698),
    /**
     * <code>THEME_LIPS = 699;</code>
     */
    THEME_LIPS(699),
    /**
     * <code>THEME_OKLAHOMA = 700;</code>
     */
    THEME_OKLAHOMA(700),
    /**
     * <code>THEME_CONFUSED = 701;</code>
     */
    THEME_CONFUSED(701),
    /**
     * <code>THEME_ARKANSAS = 702;</code>
     */
    THEME_ARKANSAS(702),
    /**
     * <code>THEME_TIGER = 703;</code>
     */
    THEME_TIGER(703),
    /**
     * <code>THEME_REUNITE = 704;</code>
     */
    THEME_REUNITE(704),
    /**
     * <code>THEME_FLY = 705;</code>
     */
    THEME_FLY(705),
    /**
     * <code>THEME_OCTOBER = 706;</code>
     */
    THEME_OCTOBER(706),
    /**
     * <code>THEME_SOBER = 707;</code>
     */
    THEME_SOBER(707),
    /**
     * <code>THEME_STRANGE = 708;</code>
     */
    THEME_STRANGE(708),
    /**
     * <code>THEME_OCEAN = 709;</code>
     */
    THEME_OCEAN(709),
    /**
     * <code>THEME_NEW_YORK = 710;</code>
     */
    THEME_NEW_YORK(710),
    /**
     * <code>THEME_BOUNCE = 711;</code>
     */
    THEME_BOUNCE(711),
    /**
     * <code>THEME_NECK = 712;</code>
     */
    THEME_NECK(712),
    /**
     * <code>THEME_BULGARIA = 713;</code>
     */
    THEME_BULGARIA(713),
    /**
     * <code>THEME_SEASON = 714;</code>
     */
    THEME_SEASON(714),
    /**
     * <code>THEME_FAST = 715;</code>
     */
    THEME_FAST(715),
    /**
     * <code>THEME_LEGS = 716;</code>
     */
    THEME_LEGS(716),
    /**
     * <code>THEME_BEG = 717;</code>
     */
    THEME_BEG(717),
    /**
     * <code>THEME_BLUE = 718;</code>
     */
    THEME_BLUE(718),
    /**
     * <code>THEME_REPUBLIC_OF_THE_CONGO = 719;</code>
     */
    THEME_REPUBLIC_OF_THE_CONGO(719),
    /**
     * <code>THEME_COURAGE = 720;</code>
     */
    THEME_COURAGE(720),
    /**
     * <code>THEME_NEAR = 721;</code>
     */
    THEME_NEAR(721),
    /**
     * <code>THEME_KENYA = 722;</code>
     */
    THEME_KENYA(722),
    /**
     * <code>THEME_TELEVISION = 723;</code>
     */
    THEME_TELEVISION(723),
    /**
     * <code>THEME_THURSDAY = 724;</code>
     */
    THEME_THURSDAY(724),
    /**
     * <code>THEME_HOLIDAY = 725;</code>
     */
    THEME_HOLIDAY(725),
    /**
     * <code>THEME_MOTORCYCLES = 726;</code>
     */
    THEME_MOTORCYCLES(726),
    /**
     * <code>THEME_BALLERINA = 727;</code>
     */
    THEME_BALLERINA(727),
    /**
     * <code>THEME_FARM = 728;</code>
     */
    THEME_FARM(728),
    /**
     * <code>THEME_INDIVIDUALITY = 729;</code>
     */
    THEME_INDIVIDUALITY(729),
    /**
     * <code>THEME_DANCE = 730;</code>
     */
    THEME_DANCE(730),
    /**
     * <code>THEME_DRIFT = 731;</code>
     */
    THEME_DRIFT(731),
    /**
     * <code>THEME_ISRAEL = 732;</code>
     */
    THEME_ISRAEL(732),
    /**
     * <code>THEME_BETRAY = 733;</code>
     */
    THEME_BETRAY(733),
    /**
     * <code>THEME_FATHER = 734;</code>
     */
    THEME_FATHER(734),
    /**
     * <code>THEME_PLACE = 735;</code>
     */
    THEME_PLACE(735),
    /**
     * <code>THEME_TAJIKISTAN = 736;</code>
     */
    THEME_TAJIKISTAN(736),
    /**
     * <code>THEME_REVOLUTION = 737;</code>
     */
    THEME_REVOLUTION(737),
    /**
     * <code>THEME_ASTRONAUT = 738;</code>
     */
    THEME_ASTRONAUT(738),
    /**
     * <code>THEME_REVOLVE = 739;</code>
     */
    THEME_REVOLVE(739),
    /**
     * <code>THEME_MONDAY = 740;</code>
     */
    THEME_MONDAY(740),
    /**
     * <code>THEME_WYOMING = 741;</code>
     */
    THEME_WYOMING(741),
    /**
     * <code>THEME_IDENTITY_CRISIS = 742;</code>
     */
    THEME_IDENTITY_CRISIS(742),
    /**
     * <code>THEME_TATTOO = 743;</code>
     */
    THEME_TATTOO(743),
    /**
     * <code>THEME_MALAYSIA = 744;</code>
     */
    THEME_MALAYSIA(744),
    /**
     * <code>THEME_BODY_LANGUAGE = 745;</code>
     */
    THEME_BODY_LANGUAGE(745),
    /**
     * <code>THEME_NEED = 746;</code>
     */
    THEME_NEED(746),
    /**
     * <code>THEME_PLATONIC = 747;</code>
     */
    THEME_PLATONIC(747),
    /**
     * <code>THEME_ROME = 748;</code>
     */
    THEME_ROME(748),
    /**
     * <code>THEME_HELLO = 749;</code>
     */
    THEME_HELLO(749),
    /**
     * <code>THEME_EUROPEAN_ECONOMIC_COMMUNITY = 750;</code>
     */
    THEME_EUROPEAN_ECONOMIC_COMMUNITY(750),
    /**
     * <code>THEME_FRIDAY = 751;</code>
     */
    THEME_FRIDAY(751),
    /**
     * <code>THEME_ENEMY = 752;</code>
     */
    THEME_ENEMY(752),
    /**
     * <code>THEME_BIRTHDAY_PARTY = 753;</code>
     */
    THEME_BIRTHDAY_PARTY(753),
    /**
     * <code>THEME_HONEYMOON = 754;</code>
     */
    THEME_HONEYMOON(754),
    /**
     * <code>THEME_INSIGHT = 755;</code>
     */
    THEME_INSIGHT(755),
    /**
     * <code>THEME_NORTH = 756;</code>
     */
    THEME_NORTH(756),
    /**
     * <code>THEME_TEACH = 757;</code>
     */
    THEME_TEACH(757),
    /**
     * <code>THEME_DEFEAT = 758;</code>
     */
    THEME_DEFEAT(758),
    /**
     * <code>THEME_LOVELY = 759;</code>
     */
    THEME_LOVELY(759),
    /**
     * <code>THEME_DATING = 760;</code>
     */
    THEME_DATING(760),
    /**
     * <code>THEME_PROPHECY = 761;</code>
     */
    THEME_PROPHECY(761),
    /**
     * <code>THEME_SAME = 762;</code>
     */
    THEME_SAME(762),
    /**
     * <code>THEME_GOLD = 763;</code>
     */
    THEME_GOLD(763),
    /**
     * <code>THEME_WIZARDRY = 764;</code>
     */
    THEME_WIZARDRY(764),
    /**
     * <code>THEME_TALKING = 765;</code>
     */
    THEME_TALKING(765),
    /**
     * <code>THEME_GOLF = 766;</code>
     */
    THEME_GOLF(766),
    /**
     * <code>THEME_ATTITUDE = 767;</code>
     */
    THEME_ATTITUDE(767),
    /**
     * <code>THEME_SHY = 768;</code>
     */
    THEME_SHY(768),
    /**
     * <code>THEME_GYPSY = 769;</code>
     */
    THEME_GYPSY(769),
    /**
     * <code>THEME_COLOR = 770;</code>
     */
    THEME_COLOR(770),
    /**
     * <code>THEME_HUNDRED = 771;</code>
     */
    THEME_HUNDRED(771),
    /**
     * <code>THEME_SPACED_OUT = 772;</code>
     */
    THEME_SPACED_OUT(772),
    /**
     * <code>THEME_FATE = 773;</code>
     */
    THEME_FATE(773),
    /**
     * <code>THEME_FOX = 774;</code>
     */
    THEME_FOX(774),
    /**
     * <code>THEME_EMPOWERED = 775;</code>
     */
    THEME_EMPOWERED(775),
    /**
     * <code>THEME_BATTLE_OF_THE_SEXES = 776;</code>
     */
    THEME_BATTLE_OF_THE_SEXES(776),
    /**
     * <code>THEME_SILVER = 777;</code>
     */
    THEME_SILVER(777),
    /**
     * <code>THEME_ANTI_DRUG = 778;</code>
     */
    THEME_ANTI_DRUG(778),
    /**
     * <code>THEME_ELEPHANT = 779;</code>
     */
    THEME_ELEPHANT(779),
    /**
     * <code>THEME_STICK = 780;</code>
     */
    THEME_STICK(780),
    /**
     * <code>THEME_OBJECTS = 781;</code>
     */
    THEME_OBJECTS(781),
    /**
     * <code>THEME_ITALY = 782;</code>
     */
    THEME_ITALY(782),
    /**
     * <code>THEME_SIN = 783;</code>
     */
    THEME_SIN(783),
    /**
     * <code>THEME_TURN = 784;</code>
     */
    THEME_TURN(784),
    /**
     * <code>THEME_COMMITMENT = 785;</code>
     */
    THEME_COMMITMENT(785),
    /**
     * <code>THEME_LOYALTY = 786;</code>
     */
    THEME_LOYALTY(786),
    /**
     * <code>THEME_MARDI_GRAS = 787;</code>
     */
    THEME_MARDI_GRAS(787),
    /**
     * <code>THEME_SIT = 788;</code>
     */
    THEME_SIT(788),
    /**
     * <code>THEME_MEASUREMENT = 789;</code>
     */
    THEME_MEASUREMENT(789),
    /**
     * <code>THEME_HARBOR = 790;</code>
     */
    THEME_HARBOR(790),
    /**
     * <code>THEME_TRADITION = 791;</code>
     */
    THEME_TRADITION(791),
    /**
     * <code>THEME_SCOTLAND = 792;</code>
     */
    THEME_SCOTLAND(792),
    /**
     * <code>THEME_BLONDE = 793;</code>
     */
    THEME_BLONDE(793),
    /**
     * <code>THEME_PORPOISE = 794;</code>
     */
    THEME_PORPOISE(794),
    /**
     * <code>THEME_MONEY = 795;</code>
     */
    THEME_MONEY(795),
    /**
     * <code>THEME_SAINT_VINCENT_AND_THE_GRENADINES = 796;</code>
     */
    THEME_SAINT_VINCENT_AND_THE_GRENADINES(796),
    /**
     * <code>THEME_SCHOOL = 797;</code>
     */
    THEME_SCHOOL(797),
    /**
     * <code>THEME_NUMBER = 798;</code>
     */
    THEME_NUMBER(798),
    /**
     * <code>THEME_RAINBOW = 799;</code>
     */
    THEME_RAINBOW(799),
    /**
     * <code>THEME_CHILDREN = 800;</code>
     */
    THEME_CHILDREN(800),
    /**
     * <code>THEME_MILLION = 801;</code>
     */
    THEME_MILLION(801),
    /**
     * <code>THEME_KYRGYZSTAN = 802;</code>
     */
    THEME_KYRGYZSTAN(802),
    /**
     * <code>THEME_BIG = 803;</code>
     */
    THEME_BIG(803),
    /**
     * <code>THEME_SPEED = 804;</code>
     */
    THEME_SPEED(804),
    /**
     * <code>THEME_GARDEN = 805;</code>
     */
    THEME_GARDEN(805),
    /**
     * <code>THEME_TOGO = 806;</code>
     */
    THEME_TOGO(806),
    /**
     * <code>THEME_TAROT = 807;</code>
     */
    THEME_TAROT(807),
    /**
     * <code>THEME_UZBEKISTAN = 808;</code>
     */
    THEME_UZBEKISTAN(808),
    /**
     * <code>THEME_UNIVERSE = 809;</code>
     */
    THEME_UNIVERSE(809),
    /**
     * <code>THEME_NEW_YEAR = 810;</code>
     */
    THEME_NEW_YEAR(810),
    /**
     * <code>THEME_FOOTBALL = 811;</code>
     */
    THEME_FOOTBALL(811),
    /**
     * <code>THEME_WISH = 812;</code>
     */
    THEME_WISH(812),
    /**
     * <code>THEME_BOSNIA_AND_HERZEGOVINA = 813;</code>
     */
    THEME_BOSNIA_AND_HERZEGOVINA(813),
    /**
     * <code>THEME_SKI = 814;</code>
     */
    THEME_SKI(814),
    /**
     * <code>THEME_COUNTRY_LIFE = 815;</code>
     */
    THEME_COUNTRY_LIFE(815),
    /**
     * <code>THEME_SAN_ANTONIO = 816;</code>
     */
    THEME_SAN_ANTONIO(816),
    /**
     * <code>THEME_INSOMNIA = 817;</code>
     */
    THEME_INSOMNIA(817),
    /**
     * <code>THEME_PURPLE = 818;</code>
     */
    THEME_PURPLE(818),
    /**
     * <code>THEME_PIRATE = 819;</code>
     */
    THEME_PIRATE(819),
    /**
     * <code>THEME_OHIO = 820;</code>
     */
    THEME_OHIO(820),
    /**
     * <code>THEME_GOOD = 821;</code>
     */
    THEME_GOOD(821),
    /**
     * <code>THEME_MIDNIGHT = 822;</code>
     */
    THEME_MIDNIGHT(822),
    /**
     * <code>THEME_NIGHTINGALE = 823;</code>
     */
    THEME_NIGHTINGALE(823),
    /**
     * <code>THEME_DOMINICA = 824;</code>
     */
    THEME_DOMINICA(824),
    /**
     * <code>THEME_SKY = 825;</code>
     */
    THEME_SKY(825),
    /**
     * <code>THEME_FAREWELL = 826;</code>
     */
    THEME_FAREWELL(826),
    /**
     * <code>THEME_LASTING = 827;</code>
     */
    THEME_LASTING(827),
    /**
     * <code>THEME_RESPECT = 828;</code>
     */
    THEME_RESPECT(828),
    /**
     * <code>THEME_SUDAN = 829;</code>
     */
    THEME_SUDAN(829),
    /**
     * <code>THEME_WIND_CHIMES = 830;</code>
     */
    THEME_WIND_CHIMES(830),
    /**
     * <code>THEME_PORTUGAL = 831;</code>
     */
    THEME_PORTUGAL(831),
    /**
     * <code>THEME_PRESIDENT = 832;</code>
     */
    THEME_PRESIDENT(832),
    /**
     * <code>THEME_LATVIA = 833;</code>
     */
    THEME_LATVIA(833),
    /**
     * <code>THEME_DECEMBER = 834;</code>
     */
    THEME_DECEMBER(834),
    /**
     * <code>THEME_COMPLAIN = 835;</code>
     */
    THEME_COMPLAIN(835),
    /**
     * <code>THEME_ESPIONAGE = 836;</code>
     */
    THEME_ESPIONAGE(836),
    /**
     * <code>THEME_DIFFICULT = 837;</code>
     */
    THEME_DIFFICULT(837),
    /**
     * <code>THEME_CELEBRITY = 838;</code>
     */
    THEME_CELEBRITY(838),
    /**
     * <code>THEME_GUATEMALA = 839;</code>
     */
    THEME_GUATEMALA(839),
    /**
     * <code>THEME_CRUCIFIXION = 840;</code>
     */
    THEME_CRUCIFIXION(840),
    /**
     * <code>THEME_DOG = 841;</code>
     */
    THEME_DOG(841),
    /**
     * <code>THEME_DISTANCE = 842;</code>
     */
    THEME_DISTANCE(842),
    /**
     * <code>THEME_HUMAN = 843;</code>
     */
    THEME_HUMAN(843),
    /**
     * <code>THEME_TANZANIA = 844;</code>
     */
    THEME_TANZANIA(844),
    /**
     * <code>THEME_DELAWARE = 845;</code>
     */
    THEME_DELAWARE(845),
    /**
     * <code>THEME_FLORIDA = 846;</code>
     */
    THEME_FLORIDA(846),
    /**
     * <code>THEME_ISLAND = 847;</code>
     */
    THEME_ISLAND(847),
    /**
     * <code>THEME_TOMORROW = 848;</code>
     */
    THEME_TOMORROW(848),
    /**
     * <code>THEME_GIRLS = 849;</code>
     */
    THEME_GIRLS(849),
    /**
     * <code>THEME_INDIA = 850;</code>
     */
    THEME_INDIA(850),
    /**
     * <code>THEME_ATTRACTIVE = 851;</code>
     */
    THEME_ATTRACTIVE(851),
    /**
     * <code>THEME_READY = 852;</code>
     */
    THEME_READY(852),
    /**
     * <code>THEME_CANADA = 853;</code>
     */
    THEME_CANADA(853),
    /**
     * <code>THEME_TRAIL = 854;</code>
     */
    THEME_TRAIL(854),
    /**
     * <code>THEME_BASEBALL = 855;</code>
     */
    THEME_BASEBALL(855),
    /**
     * <code>THEME_YELLOW = 856;</code>
     */
    THEME_YELLOW(856),
    /**
     * <code>THEME_UNITED_KINGDOM = 857;</code>
     */
    THEME_UNITED_KINGDOM(857),
    /**
     * <code>THEME_MUSICAL_INSTRUMENT = 858;</code>
     */
    THEME_MUSICAL_INSTRUMENT(858),
    /**
     * <code>THEME_TAIWAN = 859;</code>
     */
    THEME_TAIWAN(859),
    /**
     * <code>THEME_DAYDREAM = 860;</code>
     */
    THEME_DAYDREAM(860),
    /**
     * <code>THEME_DANCE_PARTY = 861;</code>
     */
    THEME_DANCE_PARTY(861),
    /**
     * <code>THEME_RIDE = 862;</code>
     */
    THEME_RIDE(862),
    /**
     * <code>THEME_GERMANY = 863;</code>
     */
    THEME_GERMANY(863),
    /**
     * <code>THEME_MAY = 864;</code>
     */
    THEME_MAY(864),
    /**
     * <code>THEME_BATHROOM = 865;</code>
     */
    THEME_BATHROOM(865),
    /**
     * <code>THEME_RABBIT = 866;</code>
     */
    THEME_RABBIT(866),
    /**
     * <code>THEME_RIGHT = 867;</code>
     */
    THEME_RIGHT(867),
    /**
     * <code>THEME_SOMALIA = 868;</code>
     */
    THEME_SOMALIA(868),
    /**
     * <code>THEME_CONVERSATION = 869;</code>
     */
    THEME_CONVERSATION(869),
    /**
     * <code>THEME_KIRIBATI = 870;</code>
     */
    THEME_KIRIBATI(870),
    /**
     * <code>THEME_VIETNAM = 871;</code>
     */
    THEME_VIETNAM(871),
    /**
     * <code>THEME_GENTLE = 872;</code>
     */
    THEME_GENTLE(872),
    /**
     * <code>THEME_RIVER = 873;</code>
     */
    THEME_RIVER(873),
    /**
     * <code>THEME_MIDDLE_EAST = 874;</code>
     */
    THEME_MIDDLE_EAST(874),
    /**
     * <code>THEME_FUN = 875;</code>
     */
    THEME_FUN(875),
    /**
     * <code>THEME_ALIEN = 876;</code>
     */
    THEME_ALIEN(876),
    /**
     * <code>THEME_FUR = 877;</code>
     */
    THEME_FUR(877),
    /**
     * <code>THEME_MULE = 878;</code>
     */
    THEME_MULE(878),
    /**
     * <code>THEME_GOVERNMENT = 879;</code>
     */
    THEME_GOVERNMENT(879),
    /**
     * <code>THEME_TIMOR__MINUS___LESTE = 880;</code>
     */
    THEME_TIMOR__MINUS___LESTE(880),
    /**
     * <code>THEME_HATE = 881;</code>
     */
    THEME_HATE(881),
    /**
     * <code>THEME_SOUTH = 882;</code>
     */
    THEME_SOUTH(882),
    /**
     * <code>THEME_TOOLS = 883;</code>
     */
    THEME_TOOLS(883),
    /**
     * <code>THEME_TONIGHT = 884;</code>
     */
    THEME_TONIGHT(884),
    /**
     * <code>THEME_MOBILE = 885;</code>
     */
    THEME_MOBILE(885),
    /**
     * <code>THEME_SWITZERLAND = 886;</code>
     */
    THEME_SWITZERLAND(886),
    /**
     * <code>THEME_OPPRESSION = 887;</code>
     */
    THEME_OPPRESSION(887),
    /**
     * <code>THEME_SPAIN = 888;</code>
     */
    THEME_SPAIN(888),
    /**
     * <code>THEME_SON = 889;</code>
     */
    THEME_SON(889),
    /**
     * <code>THEME_THREE_KINGS = 890;</code>
     */
    THEME_THREE_KINGS(890),
    /**
     * <code>THEME_REFLECT = 891;</code>
     */
    THEME_REFLECT(891),
    /**
     * <code>THEME_CLIMB = 892;</code>
     */
    THEME_CLIMB(892),
    /**
     * <code>THEME_PALAU = 893;</code>
     */
    THEME_PALAU(893),
    /**
     * <code>THEME_RACISM = 894;</code>
     */
    THEME_RACISM(894),
    /**
     * <code>THEME_CRUSH = 895;</code>
     */
    THEME_CRUSH(895),
    /**
     * <code>THEME_SPECIFIC_AGE = 896;</code>
     */
    THEME_SPECIFIC_AGE(896),
    /**
     * <code>THEME_CHURCH = 897;</code>
     */
    THEME_CHURCH(897),
    /**
     * <code>THEME_SNOW = 898;</code>
     */
    THEME_SNOW(898),
    /**
     * <code>THEME_SYMPATHY = 899;</code>
     */
    THEME_SYMPATHY(899),
    /**
     * <code>THEME_DUBLIN = 900;</code>
     */
    THEME_DUBLIN(900),
    /**
     * <code>THEME_LAKE = 901;</code>
     */
    THEME_LAKE(901),
    /**
     * <code>THEME_SMOKE = 902;</code>
     */
    THEME_SMOKE(902),
    /**
     * <code>THEME_GROW_UP = 903;</code>
     */
    THEME_GROW_UP(903),
    /**
     * <code>THEME_BRUNETTE = 904;</code>
     */
    THEME_BRUNETTE(904),
    /**
     * <code>THEME_COAST = 905;</code>
     */
    THEME_COAST(905),
    /**
     * <code>THEME_PATIENCE = 906;</code>
     */
    THEME_PATIENCE(906),
    /**
     * <code>THEME_MOZAMBIQUE = 907;</code>
     */
    THEME_MOZAMBIQUE(907),
    /**
     * <code>THEME_EVIL = 908;</code>
     */
    THEME_EVIL(908),
    /**
     * <code>THEME_BUILD = 909;</code>
     */
    THEME_BUILD(909),
    /**
     * <code>THEME_REAL = 910;</code>
     */
    THEME_REAL(910),
    /**
     * <code>THEME_NOT_MY_TYPE = 911;</code>
     */
    THEME_NOT_MY_TYPE(911),
    /**
     * <code>THEME_LESOTHO = 912;</code>
     */
    THEME_LESOTHO(912),
    /**
     * <code>THEME_SAN_FRANCISCO = 913;</code>
     */
    THEME_SAN_FRANCISCO(913),
    /**
     * <code>THEME_BERLIN = 914;</code>
     */
    THEME_BERLIN(914),
    /**
     * <code>THEME_EUROPE = 915;</code>
     */
    THEME_EUROPE(915),
    /**
     * <code>THEME_TEETH = 916;</code>
     */
    THEME_TEETH(916),
    /**
     * <code>THEME_ARMS = 917;</code>
     */
    THEME_ARMS(917),
    /**
     * <code>THEME_DISCOVERY = 918;</code>
     */
    THEME_DISCOVERY(918),
    /**
     * <code>THEME_CITY = 919;</code>
     */
    THEME_CITY(919),
    /**
     * <code>THEME_MAURITIUS = 920;</code>
     */
    THEME_MAURITIUS(920),
    /**
     * <code>THEME_TULSA = 921;</code>
     */
    THEME_TULSA(921),
    /**
     * <code>THEME_PINK = 922;</code>
     */
    THEME_PINK(922),
    /**
     * <code>THEME_SANTA_CLAUS = 923;</code>
     */
    THEME_SANTA_CLAUS(923),
    /**
     * <code>THEME_MEN = 924;</code>
     */
    THEME_MEN(924),
    /**
     * <code>THEME_WEDNESDAY = 925;</code>
     */
    THEME_WEDNESDAY(925),
    /**
     * <code>THEME_FANTASY = 926;</code>
     */
    THEME_FANTASY(926),
    /**
     * <code>THEME_LAUGHTER = 927;</code>
     */
    THEME_LAUGHTER(927),
    /**
     * <code>THEME_HEALTH_AND_WELLNESS = 928;</code>
     */
    THEME_HEALTH_AND_WELLNESS(928),
    /**
     * <code>THEME_SAVE = 929;</code>
     */
    THEME_SAVE(929),
    /**
     * <code>THEME_MARRIED_LIFE = 930;</code>
     */
    THEME_MARRIED_LIFE(930),
    /**
     * <code>THEME_ADVICE = 931;</code>
     */
    THEME_ADVICE(931),
    /**
     * <code>THEME_MOURNING = 932;</code>
     */
    THEME_MOURNING(932),
    /**
     * <code>THEME_WAIT = 933;</code>
     */
    THEME_WAIT(933),
    /**
     * <code>THEME_HEROISM = 934;</code>
     */
    THEME_HEROISM(934),
    /**
     * <code>THEME_PLAY_MUSIC = 935;</code>
     */
    THEME_PLAY_MUSIC(935),
    /**
     * <code>THEME_HOTEL = 936;</code>
     */
    THEME_HOTEL(936),
    /**
     * <code>THEME_CLOWN = 937;</code>
     */
    THEME_CLOWN(937),
    /**
     * <code>THEME_WALK = 938;</code>
     */
    THEME_WALK(938),
    /**
     * <code>THEME_WALL = 939;</code>
     */
    THEME_WALL(939),
    /**
     * <code>THEME_DESPAIR = 940;</code>
     */
    THEME_DESPAIR(940),
    /**
     * <code>THEME_MAINE = 941;</code>
     */
    THEME_MAINE(941),
    /**
     * <code>THEME_TENNESSEE = 942;</code>
     */
    THEME_TENNESSEE(942),
    /**
     * <code>THEME_AT_FIRST_SIGHT = 943;</code>
     */
    THEME_AT_FIRST_SIGHT(943),
    /**
     * <code>THEME_CLEAN = 944;</code>
     */
    THEME_CLEAN(944),
    /**
     * <code>THEME_INFORMATION = 945;</code>
     */
    THEME_INFORMATION(945),
    /**
     * <code>THEME_ENGAGEMENT = 946;</code>
     */
    THEME_ENGAGEMENT(946),
    /**
     * <code>THEME_PRIDE = 947;</code>
     */
    THEME_PRIDE(947),
    /**
     * <code>THEME_UNBELIEVABLE = 948;</code>
     */
    THEME_UNBELIEVABLE(948),
    /**
     * <code>THEME_ROAD_ACCIDENT = 949;</code>
     */
    THEME_ROAD_ACCIDENT(949),
    /**
     * <code>THEME_CREATE = 950;</code>
     */
    THEME_CREATE(950),
    /**
     * <code>THEME_VIENNA = 951;</code>
     */
    THEME_VIENNA(951),
    /**
     * <code>THEME_TERRIBLE = 952;</code>
     */
    THEME_TERRIBLE(952),
    /**
     * <code>THEME_SISTER = 953;</code>
     */
    THEME_SISTER(953),
    /**
     * <code>THEME_WINNING = 954;</code>
     */
    THEME_WINNING(954),
    /**
     * <code>THEME_LITHUANIA = 955;</code>
     */
    THEME_LITHUANIA(955),
    /**
     * <code>THEME_BODY = 956;</code>
     */
    THEME_BODY(956),
    /**
     * <code>THEME_MISSING_YOU = 957;</code>
     */
    THEME_MISSING_YOU(957),
    /**
     * <code>THEME_HIGHLAND = 958;</code>
     */
    THEME_HIGHLAND(958),
    /**
     * <code>THEME_REAR = 959;</code>
     */
    THEME_REAR(959),
    /**
     * <code>THEME_SNAKE = 960;</code>
     */
    THEME_SNAKE(960),
    /**
     * <code>THEME_WEST = 961;</code>
     */
    THEME_WEST(961),
    /**
     * <code>THEME_MAGIC = 962;</code>
     */
    THEME_MAGIC(962),
    /**
     * <code>THEME_STEAL = 963;</code>
     */
    THEME_STEAL(963),
    /**
     * <code>THEME_TRINIDAD_AND_TOBAGO = 964;</code>
     */
    THEME_TRINIDAD_AND_TOBAGO(964),
    /**
     * <code>THEME_AFRAID = 965;</code>
     */
    THEME_AFRAID(965),
    /**
     * <code>THEME_OPINIONS = 966;</code>
     */
    THEME_OPINIONS(966),
    /**
     * <code>THEME_NORWAY = 967;</code>
     */
    THEME_NORWAY(967),
    /**
     * <code>THEME_MACAO = 968;</code>
     */
    THEME_MACAO(968),
    /**
     * <code>THEME_POISON = 969;</code>
     */
    THEME_POISON(969),
    /**
     * <code>THEME_FOREST = 970;</code>
     */
    THEME_FOREST(970),
    /**
     * <code>THEME_PAPER = 971;</code>
     */
    THEME_PAPER(971),
    /**
     * <code>THEME_UGANDA = 972;</code>
     */
    THEME_UGANDA(972),
    /**
     * <code>THEME_SURINAME = 973;</code>
     */
    THEME_SURINAME(973),
    /**
     * <code>THEME_EMERGENCY = 974;</code>
     */
    THEME_EMERGENCY(974),
    /**
     * <code>THEME_ALONE = 975;</code>
     */
    THEME_ALONE(975),
    /**
     * <code>THEME_VOICE = 976;</code>
     */
    THEME_VOICE(976),
    /**
     * <code>THEME_PARIS = 977;</code>
     */
    THEME_PARIS(977),
    /**
     * <code>THEME_ASSURANCE = 978;</code>
     */
    THEME_ASSURANCE(978),
    /**
     * <code>THEME_GEEK = 979;</code>
     */
    THEME_GEEK(979),
    /**
     * <code>THEME_BUSY = 980;</code>
     */
    THEME_BUSY(980),
    /**
     * <code>THEME_SLOW = 981;</code>
     */
    THEME_SLOW(981),
    /**
     * <code>THEME_ELVIS = 982;</code>
     */
    THEME_ELVIS(982),
    /**
     * <code>THEME_ANTIGUA_AND_BARBUDA = 983;</code>
     */
    THEME_ANTIGUA_AND_BARBUDA(983),
    /**
     * <code>THEME_OLD = 984;</code>
     */
    THEME_OLD(984),
    /**
     * <code>THEME_KAZAKHSTAN = 985;</code>
     */
    THEME_KAZAKHSTAN(985),
    /**
     * <code>THEME_HISTORY = 986;</code>
     */
    THEME_HISTORY(986),
    /**
     * <code>THEME_BLOOD = 987;</code>
     */
    THEME_BLOOD(987),
    /**
     * <code>THEME_SAINT_LUCIA = 988;</code>
     */
    THEME_SAINT_LUCIA(988),
    /**
     * <code>THEME_SATURDAY = 989;</code>
     */
    THEME_SATURDAY(989),
    /**
     * <code>THEME_REBELLION = 990;</code>
     */
    THEME_REBELLION(990),
    /**
     * <code>THEME_MONTH = 991;</code>
     */
    THEME_MONTH(991),
    /**
     * <code>THEME_SUFFRAGE = 992;</code>
     */
    THEME_SUFFRAGE(992),
    /**
     * <code>THEME_REMEMBER = 993;</code>
     */
    THEME_REMEMBER(993),
    /**
     * <code>THEME_HILLS = 994;</code>
     */
    THEME_HILLS(994),
    /**
     * <code>THEME_CAR_RACING = 995;</code>
     */
    THEME_CAR_RACING(995),
    /**
     * <code>THEME_SURVIVE = 996;</code>
     */
    THEME_SURVIVE(996),
    /**
     * <code>THEME_REDHEAD = 997;</code>
     */
    THEME_REDHEAD(997),
    /**
     * <code>THEME_EAGLE = 998;</code>
     */
    THEME_EAGLE(998),
    /**
     * <code>THEME_LAOS = 999;</code>
     */
    THEME_LAOS(999),
    /**
     * <code>THEME_JANUARY = 1000;</code>
     */
    THEME_JANUARY(1000),
    /**
     * <code>THEME_CLIFF = 1001;</code>
     */
    THEME_CLIFF(1001),
    /**
     * <code>THEME_ARGENTINA = 1002;</code>
     */
    THEME_ARGENTINA(1002),
    /**
     * <code>THEME_UNITED_ARAB_EMIRATES = 1003;</code>
     */
    THEME_UNITED_ARAB_EMIRATES(1003),
    /**
     * <code>THEME_BELIZE = 1004;</code>
     */
    THEME_BELIZE(1004),
    /**
     * <code>THEME_BRITAIN = 1005;</code>
     */
    THEME_BRITAIN(1005),
    /**
     * <code>THEME_ZAMBIA = 1006;</code>
     */
    THEME_ZAMBIA(1006),
    /**
     * <code>THEME_SMILE = 1007;</code>
     */
    THEME_SMILE(1007),
    /**
     * <code>THEME_MURDER = 1008;</code>
     */
    THEME_MURDER(1008),
    /**
     * <code>THEME_SUN = 1009;</code>
     */
    THEME_SUN(1009),
    /**
     * <code>THEME_BRITISH_ISLES = 1010;</code>
     */
    THEME_BRITISH_ISLES(1010),
    /**
     * <code>THEME_SMALL_TOWN_LIFE = 1011;</code>
     */
    THEME_SMALL_TOWN_LIFE(1011),
    /**
     * <code>THEME_TORN = 1012;</code>
     */
    THEME_TORN(1012),
    /**
     * <code>THEME_GUINEA__MINUS___BISSAU = 1013;</code>
     */
    THEME_GUINEA__MINUS___BISSAU(1013),
    /**
     * <code>THEME_ADDICTED_TO = 1014;</code>
     */
    THEME_ADDICTED_TO(1014),
    /**
     * <code>THEME_ILLINOIS = 1015;</code>
     */
    THEME_ILLINOIS(1015),
    /**
     * <code>THEME_LONDON = 1016;</code>
     */
    THEME_LONDON(1016),
    /**
     * <code>THEME_CLOSE = 1017;</code>
     */
    THEME_CLOSE(1017),
    /**
     * <code>THEME_GEORGIA = 1018;</code>
     */
    THEME_GEORGIA(1018),
    /**
     * <code>THEME_MISBEHAVIOR = 1019;</code>
     */
    THEME_MISBEHAVIOR(1019),
    /**
     * <code>THEME_IDAHO = 1020;</code>
     */
    THEME_IDAHO(1020),
    /**
     * <code>THEME_YEMEN = 1021;</code>
     */
    THEME_YEMEN(1021),
    /**
     * <code>THEME_TRAINS = 1022;</code>
     */
    THEME_TRAINS(1022),
    /**
     * <code>THEME_INSPIRATION = 1023;</code>
     */
    THEME_INSPIRATION(1023),
    /**
     * <code>THEME_LEADER = 1024;</code>
     */
    THEME_LEADER(1024),
    /**
     * <code>THEME_MONKEY = 1025;</code>
     */
    THEME_MONKEY(1025),
    /**
     * <code>THEME_SINGLE_PERSON = 1026;</code>
     */
    THEME_SINGLE_PERSON(1026),
    /**
     * <code>THEME_MAKING_LOVE = 1027;</code>
     */
    THEME_MAKING_LOVE(1027),
    /**
     * <code>THEME_MARCH = 1028;</code>
     */
    THEME_MARCH(1028),
    /**
     * <code>THEME_PREJUDICE = 1029;</code>
     */
    THEME_PREJUDICE(1029),
    /**
     * <code>THEME_DETERMINATION = 1030;</code>
     */
    THEME_DETERMINATION(1030),
    /**
     * <code>THEME_SUICIDE = 1031;</code>
     */
    THEME_SUICIDE(1031),
    /**
     * <code>THEME_ELEMENTS = 1032;</code>
     */
    THEME_ELEMENTS(1032),
    /**
     * <code>THEME_STALKER = 1033;</code>
     */
    THEME_STALKER(1033),
    /**
     * <code>THEME_SIMPLE = 1034;</code>
     */
    THEME_SIMPLE(1034),
    /**
     * <code>THEME_GREAT_BRITAIN = 1035;</code>
     */
    THEME_GREAT_BRITAIN(1035),
    /**
     * <code>THEME_PARTY = 1036;</code>
     */
    THEME_PARTY(1036),
    /**
     * <code>THEME_BUG = 1037;</code>
     */
    THEME_BUG(1037),
    /**
     * <code>THEME_LISTENING = 1038;</code>
     */
    THEME_LISTENING(1038),
    /**
     * <code>THEME_SWAGGER = 1039;</code>
     */
    THEME_SWAGGER(1039),
    /**
     * <code>THEME_MISSOURI = 1040;</code>
     */
    THEME_MISSOURI(1040),
    /**
     * <code>THEME_QUESTION = 1041;</code>
     */
    THEME_QUESTION(1041),
    /**
     * <code>THEME_UTOPIA = 1042;</code>
     */
    THEME_UTOPIA(1042),
    /**
     * <code>THEME_NIGHTMARE = 1043;</code>
     */
    THEME_NIGHTMARE(1043),
    /**
     * <code>THEME_VEGETABLE = 1044;</code>
     */
    THEME_VEGETABLE(1044),
    /**
     * <code>THEME_COMMUNICATION = 1045;</code>
     */
    THEME_COMMUNICATION(1045),
    /**
     * <code>THEME_MILITARY = 1046;</code>
     */
    THEME_MILITARY(1046),
    /**
     * <code>THEME_BUS = 1047;</code>
     */
    THEME_BUS(1047),
    /**
     * <code>THEME_JAVA = 1048;</code>
     */
    THEME_JAVA(1048),
    /**
     * <code>THEME_PROTECT = 1049;</code>
     */
    THEME_PROTECT(1049),
    /**
     * <code>THEME_COUSIN = 1050;</code>
     */
    THEME_COUSIN(1050),
    /**
     * <code>THEME_HAWAII = 1051;</code>
     */
    THEME_HAWAII(1051),
    /**
     * <code>THEME_EVERYDAY = 1052;</code>
     */
    THEME_EVERYDAY(1052),
    /**
     * <code>THEME_CAREFREE = 1053;</code>
     */
    THEME_CAREFREE(1053),
    /**
     * <code>THEME_BRUNEI = 1054;</code>
     */
    THEME_BRUNEI(1054),
    /**
     * <code>THEME_LEBANON = 1055;</code>
     */
    THEME_LEBANON(1055),
    /**
     * <code>THEME_DIVORCE = 1056;</code>
     */
    THEME_DIVORCE(1056),
    /**
     * <code>THEME_AZERBAIJAN = 1057;</code>
     */
    THEME_AZERBAIJAN(1057),
    /**
     * <code>THEME_BALTIMORE = 1058;</code>
     */
    THEME_BALTIMORE(1058),
    /**
     * <code>THEME_MAURITANIA = 1059;</code>
     */
    THEME_MAURITANIA(1059),
    /**
     * <code>THEME_GHOST = 1060;</code>
     */
    THEME_GHOST(1060),
    /**
     * <code>THEME_WORDS = 1061;</code>
     */
    THEME_WORDS(1061),
    /**
     * <code>THEME_COMFORT = 1062;</code>
     */
    THEME_COMFORT(1062),
    /**
     * <code>THEME_CONSISTENT = 1063;</code>
     */
    THEME_CONSISTENT(1063),
    /**
     * <code>THEME_ANXIOUS = 1064;</code>
     */
    THEME_ANXIOUS(1064),
    /**
     * <code>THEME_EVENT = 1065;</code>
     */
    THEME_EVENT(1065),
    /**
     * <code>THEME_SUNRISE = 1066;</code>
     */
    THEME_SUNRISE(1066),
    /**
     * <code>THEME_RESILIENT = 1067;</code>
     */
    THEME_RESILIENT(1067),
    /**
     * <code>THEME_SHIP = 1068;</code>
     */
    THEME_SHIP(1068),
    /**
     * <code>THEME_AUSTRALIA = 1069;</code>
     */
    THEME_AUSTRALIA(1069),
    /**
     * <code>THEME_PHILADELPHIA = 1070;</code>
     */
    THEME_PHILADELPHIA(1070),
    /**
     * <code>THEME_RIO_DE_JANEIRO = 1071;</code>
     */
    THEME_RIO_DE_JANEIRO(1071),
    /**
     * <code>THEME_UNITED_STATES = 1072;</code>
     */
    THEME_UNITED_STATES(1072),
    /**
     * <code>THEME_UNREQUITED = 1073;</code>
     */
    THEME_UNREQUITED(1073),
    /**
     * <code>THEME_WHISTLE = 1074;</code>
     */
    THEME_WHISTLE(1074),
    /**
     * <code>THEME_MYANMAR = 1075;</code>
     */
    THEME_MYANMAR(1075),
    /**
     * <code>THEME_CAMEROON = 1076;</code>
     */
    THEME_CAMEROON(1076),
    /**
     * <code>THEME_REVENGE = 1077;</code>
     */
    THEME_REVENGE(1077),
    /**
     * <code>THEME_LAW_AND_ORDER = 1078;</code>
     */
    THEME_LAW_AND_ORDER(1078),
    /**
     * <code>THEME_STRONG = 1079;</code>
     */
    THEME_STRONG(1079),
    /**
     * <code>THEME_ICELAND = 1080;</code>
     */
    THEME_ICELAND(1080),
    /**
     * <code>THEME_OMAN = 1081;</code>
     */
    THEME_OMAN(1081),
    /**
     * <code>THEME_SWIM = 1082;</code>
     */
    THEME_SWIM(1082),
    /**
     * <code>THEME_SOUNDS = 1083;</code>
     */
    THEME_SOUNDS(1083),
    /**
     * <code>THEME_GABON = 1084;</code>
     */
    THEME_GABON(1084),
    /**
     * <code>THEME_YUGOSLAVIA = 1085;</code>
     */
    THEME_YUGOSLAVIA(1085),
    /**
     * <code>THEME_LUXEMBOURG = 1086;</code>
     */
    THEME_LUXEMBOURG(1086),
    /**
     * <code>THEME_DRUMS = 1087;</code>
     */
    THEME_DRUMS(1087),
    /**
     * <code>THEME_ARMAGEDDON = 1088;</code>
     */
    THEME_ARMAGEDDON(1088),
    /**
     * <code>THEME_POVERTY = 1089;</code>
     */
    THEME_POVERTY(1089),
    /**
     * <code>THEME_CONSCIOUSNESS = 1090;</code>
     */
    THEME_CONSCIOUSNESS(1090),
    /**
     * <code>THEME_GEOGRAPHIC_LOCATION = 1091;</code>
     */
    THEME_GEOGRAPHIC_LOCATION(1091),
    /**
     * <code>THEME_KANSAS = 1092;</code>
     */
    THEME_KANSAS(1092),
    /**
     * <code>THEME_LUCKY = 1093;</code>
     */
    THEME_LUCKY(1093),
    /**
     * <code>THEME_HEARTACHE = 1094;</code>
     */
    THEME_HEARTACHE(1094),
    /**
     * <code>THEME_PLEASE = 1095;</code>
     */
    THEME_PLEASE(1095),
    /**
     * <code>THEME_MIRACLE = 1096;</code>
     */
    THEME_MIRACLE(1096),
    /**
     * <code>THEME_IOWA = 1097;</code>
     */
    THEME_IOWA(1097),
    /**
     * <code>THEME_VANUATU = 1098;</code>
     */
    THEME_VANUATU(1098),
    /**
     * <code>THEME_ALLIGATOR = 1099;</code>
     */
    THEME_ALLIGATOR(1099),
    /**
     * <code>THEME_FAMILY_MEMBER = 1100;</code>
     */
    THEME_FAMILY_MEMBER(1100),
    /**
     * <code>THEME_CONFLICT = 1101;</code>
     */
    THEME_CONFLICT(1101),
    /**
     * <code>THEME_NORTH_KOREA = 1102;</code>
     */
    THEME_NORTH_KOREA(1102),
    /**
     * <code>THEME_GENERAL = 1103;</code>
     */
    THEME_GENERAL(1103),
    /**
     * <code>THEME_LOS_ANGELES = 1104;</code>
     */
    THEME_LOS_ANGELES(1104),
    /**
     * <code>THEME_SOUTH_DAKOTA = 1105;</code>
     */
    THEME_SOUTH_DAKOTA(1105),
    /**
     * <code>THEME_OUTLAW = 1106;</code>
     */
    THEME_OUTLAW(1106),
    /**
     * <code>THEME_PANIC = 1107;</code>
     */
    THEME_PANIC(1107),
    /**
     * <code>THEME_ACTION = 1108;</code>
     */
    THEME_ACTION(1108),
    /**
     * <code>THEME_BURUNDI = 1109;</code>
     */
    THEME_BURUNDI(1109),
    /**
     * <code>THEME_RELAX = 1110;</code>
     */
    THEME_RELAX(1110),
    /**
     * <code>THEME_SINGAPORE = 1111;</code>
     */
    THEME_SINGAPORE(1111),
    /**
     * <code>THEME_TRANSPORTATION = 1112;</code>
     */
    THEME_TRANSPORTATION(1112),
    /**
     * <code>THEME_CELL_PHONE = 1113;</code>
     */
    THEME_CELL_PHONE(1113),
    /**
     * <code>THEME_RISK = 1114;</code>
     */
    THEME_RISK(1114),
    /**
     * <code>THEME_FAMILY_LIFE = 1115;</code>
     */
    THEME_FAMILY_LIFE(1115),
    /**
     * <code>THEME_TIME = 1116;</code>
     */
    THEME_TIME(1116),
    /**
     * <code>THEME_STUPID = 1117;</code>
     */
    THEME_STUPID(1117),
    /**
     * <code>THEME_ABORTION = 1118;</code>
     */
    THEME_ABORTION(1118),
    /**
     * <code>THEME_NEBRASKA = 1119;</code>
     */
    THEME_NEBRASKA(1119),
    /**
     * <code>THEME_RUSSIA = 1120;</code>
     */
    THEME_RUSSIA(1120),
    /**
     * <code>THEME_WHISPER = 1121;</code>
     */
    THEME_WHISPER(1121),
    /**
     * <code>THEME_BORED = 1122;</code>
     */
    THEME_BORED(1122),
    /**
     * <code>THEME_EMPTY = 1123;</code>
     */
    THEME_EMPTY(1123),
    /**
     * <code>THEME_PAIN = 1124;</code>
     */
    THEME_PAIN(1124),
    /**
     * <code>THEME_CHOICES = 1125;</code>
     */
    THEME_CHOICES(1125),
    /**
     * <code>THEME_AMMUNITION = 1126;</code>
     */
    THEME_AMMUNITION(1126),
    /**
     * <code>THEME_CHINA = 1127;</code>
     */
    THEME_CHINA(1127),
    /**
     * <code>THEME_NEWS = 1128;</code>
     */
    THEME_NEWS(1128),
    /**
     * <code>THEME_PEACE = 1129;</code>
     */
    THEME_PEACE(1129),
    /**
     * <code>THEME_EASTERN_EUROPE = 1130;</code>
     */
    THEME_EASTERN_EUROPE(1130),
    /**
     * <code>THEME_GREY = 1131;</code>
     */
    THEME_GREY(1131),
    /**
     * <code>THEME_DEMOCRATIC_REPUBLIC_OF_THE_CONGO = 1132;</code>
     */
    THEME_DEMOCRATIC_REPUBLIC_OF_THE_CONGO(1132),
    /**
     * <code>THEME_LATE = 1133;</code>
     */
    THEME_LATE(1133),
    /**
     * <code>THEME_ROMANIA = 1134;</code>
     */
    THEME_ROMANIA(1134),
    /**
     * <code>THEME_DESIRE = 1135;</code>
     */
    THEME_DESIRE(1135),
    /**
     * <code>THEME_ASTROLOGY = 1136;</code>
     */
    THEME_ASTROLOGY(1136),
    /**
     * <code>THEME_PHILIPPINES = 1137;</code>
     */
    THEME_PHILIPPINES(1137),
    /**
     * <code>THEME_NEW_ORLEANS = 1138;</code>
     */
    THEME_NEW_ORLEANS(1138),
    /**
     * <code>THEME_BURNING = 1139;</code>
     */
    THEME_BURNING(1139),
    /**
     * <code>THEME_HUSBAND = 1140;</code>
     */
    THEME_HUSBAND(1140),
    /**
     * <code>THEME_POSSESSED = 1141;</code>
     */
    THEME_POSSESSED(1141),
    /**
     * <code>THEME_TRAVEL = 1142;</code>
     */
    THEME_TRAVEL(1142),
    /**
     * <code>THEME_MISPLACE = 1143;</code>
     */
    THEME_MISPLACE(1143),
    /**
     * <code>THEME_SIGNS = 1144;</code>
     */
    THEME_SIGNS(1144),
    /**
     * <code>THEME_WESTERN_SAHARA = 1145;</code>
     */
    THEME_WESTERN_SAHARA(1145),
    /**
     * <code>THEME_WONDERFUL = 1146;</code>
     */
    THEME_WONDERFUL(1146),
    /**
     * <code>THEME_INTENTION = 1147;</code>
     */
    THEME_INTENTION(1147),
    /**
     * <code>THEME_SOUTH_EAST_ASIA = 1148;</code>
     */
    THEME_SOUTH_EAST_ASIA(1148),
    /**
     * <code>THEME_ROBOT = 1149;</code>
     */
    THEME_ROBOT(1149),
    /**
     * <code>THEME_QUESTIONING = 1150;</code>
     */
    THEME_QUESTIONING(1150),
    /**
     * <code>THEME_INDONESIA = 1151;</code>
     */
    THEME_INDONESIA(1151),
    /**
     * <code>THEME_LOCATION = 1152;</code>
     */
    THEME_LOCATION(1152),
    /**
     * <code>THEME_DISSATISFACTION = 1153;</code>
     */
    THEME_DISSATISFACTION(1153),
    /**
     * <code>THEME_ANGOLA = 1154;</code>
     */
    THEME_ANGOLA(1154),
    /**
     * <code>THEME_SECRETS = 1155;</code>
     */
    THEME_SECRETS(1155),
    /**
     * <code>THEME_MOON = 1156;</code>
     */
    THEME_MOON(1156),
    /**
     * <code>THEME_AWARENESS = 1157;</code>
     */
    THEME_AWARENESS(1157),
    /**
     * <code>THEME_SATISFACTION = 1158;</code>
     */
    THEME_SATISFACTION(1158),
    /**
     * <code>THEME_PRAIRIE = 1159;</code>
     */
    THEME_PRAIRIE(1159),
    /**
     * <code>THEME_INTOXICATED = 1160;</code>
     */
    THEME_INTOXICATED(1160),
    /**
     * <code>THEME_CRUEL = 1161;</code>
     */
    THEME_CRUEL(1161),
    /**
     * <code>THEME_MOVING_ON = 1162;</code>
     */
    THEME_MOVING_ON(1162),
    /**
     * <code>THEME_ORANGE = 1163;</code>
     */
    THEME_ORANGE(1163),
    /**
     * <code>THEME_INFATUATED = 1164;</code>
     */
    THEME_INFATUATED(1164),
    /**
     * <code>THEME_FRUITS = 1165;</code>
     */
    THEME_FRUITS(1165),
    /**
     * <code>THEME_GIVE = 1166;</code>
     */
    THEME_GIVE(1166),
    /**
     * <code>THEME_SUBSTANCES = 1167;</code>
     */
    THEME_SUBSTANCES(1167),
    /**
     * <code>THEME_IRAN = 1168;</code>
     */
    THEME_IRAN(1168),
    /**
     * <code>THEME_BOOK = 1169;</code>
     */
    THEME_BOOK(1169),
    /**
     * <code>THEME_ST__DOT___LOUIS = 1170;</code>
     */
    THEME_ST__DOT___LOUIS(1170),
    /**
     * <code>THEME_CZECH_REPUBLIC = 1171;</code>
     */
    THEME_CZECH_REPUBLIC(1171),
    /**
     * <code>THEME_IRAQ = 1172;</code>
     */
    THEME_IRAQ(1172),
    /**
     * <code>THEME_IDENTITY = 1173;</code>
     */
    THEME_IDENTITY(1173),
    /**
     * <code>THEME_CHILE = 1174;</code>
     */
    THEME_CHILE(1174),
    /**
     * <code>THEME_EQUATORIAL_GUINEA = 1175;</code>
     */
    THEME_EQUATORIAL_GUINEA(1175),
    /**
     * <code>THEME_TRUMPET = 1176;</code>
     */
    THEME_TRUMPET(1176),
    /**
     * <code>THEME_ARIZONA = 1177;</code>
     */
    THEME_ARIZONA(1177),
    /**
     * <code>THEME_NEPAL = 1178;</code>
     */
    THEME_NEPAL(1178),
    /**
     * <code>THEME_BOSTON = 1179;</code>
     */
    THEME_BOSTON(1179),
    /**
     * <code>THEME_CARS = 1180;</code>
     */
    THEME_CARS(1180),
    /**
     * <code>THEME_WORKING_CLASS = 1181;</code>
     */
    THEME_WORKING_CLASS(1181),
    /**
     * <code>THEME_KNEES = 1182;</code>
     */
    THEME_KNEES(1182),
    /**
     * <code>THEME_FLOOR_AND_CEILING = 1183;</code>
     */
    THEME_FLOOR_AND_CEILING(1183),
    /**
     * <code>THEME_SOLITUDE = 1184;</code>
     */
    THEME_SOLITUDE(1184),
    /**
     * <code>THEME_TAKE_ME_BACK = 1185;</code>
     */
    THEME_TAKE_ME_BACK(1185),
    /**
     * <code>THEME_ECSTATIC = 1186;</code>
     */
    THEME_ECSTATIC(1186),
    /**
     * <code>THEME_SHOE = 1187;</code>
     */
    THEME_SHOE(1187),
    /**
     * <code>THEME_MENTALITY = 1188;</code>
     */
    THEME_MENTALITY(1188),
    /**
     * <code>THEME_NORTH_DAKOTA = 1189;</code>
     */
    THEME_NORTH_DAKOTA(1189),
    /**
     * <code>THEME_TURKEY = 1190;</code>
     */
    THEME_TURKEY(1190),
    /**
     * <code>THEME_BELGIUM = 1191;</code>
     */
    THEME_BELGIUM(1191),
    /**
     * <code>THEME_VALLEY = 1192;</code>
     */
    THEME_VALLEY(1192),
    /**
     * <code>THEME_SHOOT = 1193;</code>
     */
    THEME_SHOOT(1193),
    /**
     * <code>THEME_PERU = 1194;</code>
     */
    THEME_PERU(1194),
    /**
     * <code>THEME_SAO_TOME_AND_PRINCIPE = 1195;</code>
     */
    THEME_SAO_TOME_AND_PRINCIPE(1195),
    /**
     * <code>THEME_EXPLORE = 1196;</code>
     */
    THEME_EXPLORE(1196),
    /**
     * <code>THEME_SCREAM = 1197;</code>
     */
    THEME_SCREAM(1197),
    /**
     * <code>THEME_CHAD = 1198;</code>
     */
    THEME_CHAD(1198),
    /**
     * <code>THEME_BIRTH = 1199;</code>
     */
    THEME_BIRTH(1199),
    /**
     * <code>THEME_CHALLENGE = 1200;</code>
     */
    THEME_CHALLENGE(1200),
    /**
     * <code>THEME_PRISON = 1201;</code>
     */
    THEME_PRISON(1201),
    /**
     * <code>THEME_NON_ROMANTIC = 1202;</code>
     */
    THEME_NON_ROMANTIC(1202),
    /**
     * <code>THEME_BUDDHA = 1203;</code>
     */
    THEME_BUDDHA(1203),
    /**
     * <code>THEME_MOTHER = 1204;</code>
     */
    THEME_MOTHER(1204),
    /**
     * <code>THEME_MASSACHUSETTS = 1205;</code>
     */
    THEME_MASSACHUSETTS(1205),
    /**
     * <code>THEME_MYSTERY = 1206;</code>
     */
    THEME_MYSTERY(1206),
    /**
     * <code>THEME_DOMESTIC_VIOLENCE = 1207;</code>
     */
    THEME_DOMESTIC_VIOLENCE(1207),
    /**
     * <code>THEME_URUGUAY = 1208;</code>
     */
    THEME_URUGUAY(1208),
    /**
     * <code>THEME_FASHION = 1209;</code>
     */
    THEME_FASHION(1209),
    /**
     * <code>THEME_RADIO = 1210;</code>
     */
    THEME_RADIO(1210),
    /**
     * <code>THEME_DOCTOR = 1211;</code>
     */
    THEME_DOCTOR(1211),
    /**
     * <code>THEME_GENOCIDE = 1212;</code>
     */
    THEME_GENOCIDE(1212),
    /**
     * <code>THEME_STAND = 1213;</code>
     */
    THEME_STAND(1213),
    /**
     * <code>THEME_LIBERIA = 1214;</code>
     */
    THEME_LIBERIA(1214),
    /**
     * <code>THEME_VENEZUELA = 1215;</code>
     */
    THEME_VENEZUELA(1215),
    /**
     * <code>THEME_LOUISIANA = 1216;</code>
     */
    THEME_LOUISIANA(1216),
    /**
     * <code>THEME_SOUTH_KOREA = 1217;</code>
     */
    THEME_SOUTH_KOREA(1217),
    /**
     * <code>THEME_BODY_PARTS = 1218;</code>
     */
    THEME_BODY_PARTS(1218),
    /**
     * <code>THEME_PHOTOGRAPH = 1219;</code>
     */
    THEME_PHOTOGRAPH(1219),
    /**
     * <code>THEME_GETTING_OVER = 1220;</code>
     */
    THEME_GETTING_OVER(1220),
    /**
     * <code>THEME_GEOGRAPHY = 1221;</code>
     */
    THEME_GEOGRAPHY(1221),
    /**
     * <code>THEME_DISEASE = 1222;</code>
     */
    THEME_DISEASE(1222),
    /**
     * <code>THEME_NIGHT = 1223;</code>
     */
    THEME_NIGHT(1223),
    /**
     * <code>THEME_SUMMER = 1224;</code>
     */
    THEME_SUMMER(1224),
    /**
     * <code>THEME_WORLD = 1225;</code>
     */
    THEME_WORLD(1225),
    /**
     * <code>THEME_RECOVERY = 1226;</code>
     */
    THEME_RECOVERY(1226),
    /**
     * <code>THEME_US_AGAINST_THE_WORLD = 1227;</code>
     */
    THEME_US_AGAINST_THE_WORLD(1227),
    /**
     * <code>THEME_FAITH_IN_DOUBT = 1228;</code>
     */
    THEME_FAITH_IN_DOUBT(1228),
    /**
     * <code>THEME_WISDOM = 1229;</code>
     */
    THEME_WISDOM(1229),
    /**
     * <code>THEME_RAIN = 1230;</code>
     */
    THEME_RAIN(1230),
    /**
     * <code>THEME_BOSS = 1231;</code>
     */
    THEME_BOSS(1231),
    /**
     * <code>THEME_CRAZY = 1232;</code>
     */
    THEME_CRAZY(1232),
    /**
     * <code>THEME_HORSE = 1233;</code>
     */
    THEME_HORSE(1233),
    /**
     * <code>THEME_TREE = 1234;</code>
     */
    THEME_TREE(1234),
    /**
     * <code>THEME_EQUALITY = 1235;</code>
     */
    THEME_EQUALITY(1235),
    /**
     * <code>THEME_ADOPTION = 1236;</code>
     */
    THEME_ADOPTION(1236),
    /**
     * <code>THEME_CARNIVAL = 1237;</code>
     */
    THEME_CARNIVAL(1237),
    /**
     * <code>THEME_PAPUA_NEW_GUINEA = 1238;</code>
     */
    THEME_PAPUA_NEW_GUINEA(1238),
    /**
     * <code>THEME_HUNGARY = 1239;</code>
     */
    THEME_HUNGARY(1239),
    /**
     * <code>THEME_JAPAN = 1240;</code>
     */
    THEME_JAPAN(1240),
    /**
     * <code>THEME_ROMANCE = 1241;</code>
     */
    THEME_ROMANCE(1241),
    /**
     * <code>THEME_SALT_LAKE_CITY = 1242;</code>
     */
    THEME_SALT_LAKE_CITY(1242),
    /**
     * <code>THEME_BELARUS = 1243;</code>
     */
    THEME_BELARUS(1243),
    /**
     * <code>THEME_LAZY = 1244;</code>
     */
    THEME_LAZY(1244),
    /**
     * <code>THEME_NUCLEAR_ENERGY = 1245;</code>
     */
    THEME_NUCLEAR_ENERGY(1245),
    /**
     * <code>THEME_SENEGAL = 1246;</code>
     */
    THEME_SENEGAL(1246),
    /**
     * <code>THEME_CAT = 1247;</code>
     */
    THEME_CAT(1247),
    /**
     * <code>THEME_ENVIRONMENT = 1248;</code>
     */
    THEME_ENVIRONMENT(1248),
    /**
     * <code>THEME_ZOO = 1249;</code>
     */
    THEME_ZOO(1249),
    /**
     * <code>THEME_TEXT_MESSAGE = 1250;</code>
     */
    THEME_TEXT_MESSAGE(1250),
    /**
     * <code>THEME_FAVORITE = 1251;</code>
     */
    THEME_FAVORITE(1251),
    /**
     * <code>THEME_BELOW = 1252;</code>
     */
    THEME_BELOW(1252),
    /**
     * <code>THEME_GARBAGE = 1253;</code>
     */
    THEME_GARBAGE(1253),
    /**
     * <code>THEME_OREGON = 1254;</code>
     */
    THEME_OREGON(1254),
    /**
     * <code>THEME_MEAN = 1255;</code>
     */
    THEME_MEAN(1255),
    /**
     * <code>THEME_AIRPLANES = 1256;</code>
     */
    THEME_AIRPLANES(1256),
    /**
     * <code>THEME_DOMINICAN_REPUBLIC = 1257;</code>
     */
    THEME_DOMINICAN_REPUBLIC(1257),
    /**
     * <code>THEME_KANGAROO = 1258;</code>
     */
    THEME_KANGAROO(1258),
    /**
     * <code>THEME_STEP_PARENT = 1259;</code>
     */
    THEME_STEP_PARENT(1259),
    /**
     * <code>THEME_LONGING = 1260;</code>
     */
    THEME_LONGING(1260),
    /**
     * <code>THEME_BRASS = 1261;</code>
     */
    THEME_BRASS(1261),
    /**
     * <code>THEME_EGYPT = 1262;</code>
     */
    THEME_EGYPT(1262),
    /**
     * <code>THEME_SUNSHINE = 1263;</code>
     */
    THEME_SUNSHINE(1263),
    /**
     * <code>THEME_BEAR = 1264;</code>
     */
    THEME_BEAR(1264),
    /**
     * <code>THEME_BOLIVIA = 1265;</code>
     */
    THEME_BOLIVIA(1265),
    /**
     * <code>THEME_SAN_MARINO = 1266;</code>
     */
    THEME_SAN_MARINO(1266),
    /**
     * <code>THEME_OCEANIA = 1267;</code>
     */
    THEME_OCEANIA(1267),
    /**
     * <code>THEME_FRIENDSHIP = 1268;</code>
     */
    THEME_FRIENDSHIP(1268),
    /**
     * <code>THEME_NEW_JERSEY = 1269;</code>
     */
    THEME_NEW_JERSEY(1269),
    /**
     * <code>THEME_FLOOD = 1270;</code>
     */
    THEME_FLOOD(1270),
    /**
     * <code>THEME_MOVE = 1271;</code>
     */
    THEME_MOVE(1271),
    /**
     * <code>THEME_SLOVAKIA = 1272;</code>
     */
    THEME_SLOVAKIA(1272),
    /**
     * <code>THEME_MERCY = 1273;</code>
     */
    THEME_MERCY(1273),
    /**
     * <code>THEME_INSECT = 1274;</code>
     */
    THEME_INSECT(1274),
    /**
     * <code>THEME_EARS = 1275;</code>
     */
    THEME_EARS(1275),
    /**
     * <code>THEME_FEBRUARY = 1276;</code>
     */
    THEME_FEBRUARY(1276),
    /**
     * <code>THEME_APOLOGIZE = 1277;</code>
     */
    THEME_APOLOGIZE(1277),
    /**
     * <code>THEME_U_F_O = 1278;</code>
     */
    THEME_U_F_O(1278),
    /**
     * <code>THEME_HOLLAND = 1279;</code>
     */
    THEME_HOLLAND(1279),
    /**
     * <code>THEME_TIME_OF_DAY = 1280;</code>
     */
    THEME_TIME_OF_DAY(1280),
    /**
     * <code>THEME_REHAB = 1281;</code>
     */
    THEME_REHAB(1281),
    /**
     * <code>THEME_CHICAGO = 1282;</code>
     */
    THEME_CHICAGO(1282),
    /**
     * <code>THEME_NIGER = 1283;</code>
     */
    THEME_NIGER(1283),
    /**
     * <code>THEME_BALTIC_STATES = 1284;</code>
     */
    THEME_BALTIC_STATES(1284),
    /**
     * <code>THEME_CHANGE = 1285;</code>
     */
    THEME_CHANGE(1285),
    /**
     * <code>THEME_EGO = 1286;</code>
     */
    THEME_EGO(1286),
    /**
     * <code>THEME_DOOR = 1287;</code>
     */
    THEME_DOOR(1287),
    /**
     * <code>THEME_NERVOUS = 1288;</code>
     */
    THEME_NERVOUS(1288),
    /**
     * <code>THEME_HONG_KONG = 1289;</code>
     */
    THEME_HONG_KONG(1289),
    /**
     * <code>THEME_CASINO = 1290;</code>
     */
    THEME_CASINO(1290),
    /**
     * <code>THEME_GOSSIP = 1291;</code>
     */
    THEME_GOSSIP(1291),
    /**
     * <code>THEME_TELL = 1292;</code>
     */
    THEME_TELL(1292),
    /**
     * <code>THEME_BOTSWANA = 1293;</code>
     */
    THEME_BOTSWANA(1293),
    /**
     * <code>THEME_FUTURE = 1294;</code>
     */
    THEME_FUTURE(1294),
    /**
     * <code>THEME_WELCOME = 1295;</code>
     */
    THEME_WELCOME(1295),
    /**
     * <code>THEME_MICRONESIA = 1296;</code>
     */
    THEME_MICRONESIA(1296),
    /**
     * <code>THEME_REDEMPTION = 1297;</code>
     */
    THEME_REDEMPTION(1297),
    /**
     * <code>THEME_GUILT = 1298;</code>
     */
    THEME_GUILT(1298),
    /**
     * <code>THEME_SUPERNATURAL = 1299;</code>
     */
    THEME_SUPERNATURAL(1299),
    ;

    /**
     * <code>THEME_WATER = 0;</code>
     */
    public static final int THEME_WATER_VALUE = 0;
    /**
     * <code>THEME_RESCUE = 1;</code>
     */
    public static final int THEME_RESCUE_VALUE = 1;
    /**
     * <code>THEME_RAT = 2;</code>
     */
    public static final int THEME_RAT_VALUE = 2;
    /**
     * <code>THEME_CRAVE = 3;</code>
     */
    public static final int THEME_CRAVE_VALUE = 3;
    /**
     * <code>THEME_MEMORY = 4;</code>
     */
    public static final int THEME_MEMORY_VALUE = 4;
    /**
     * <code>THEME_WEST_VIRGINIA = 5;</code>
     */
    public static final int THEME_WEST_VIRGINIA_VALUE = 5;
    /**
     * <code>THEME_CAPE_VERDE = 6;</code>
     */
    public static final int THEME_CAPE_VERDE_VALUE = 6;
    /**
     * <code>THEME_ENGLAND = 7;</code>
     */
    public static final int THEME_ENGLAND_VALUE = 7;
    /**
     * <code>THEME_REPEAT = 8;</code>
     */
    public static final int THEME_REPEAT_VALUE = 8;
    /**
     * <code>THEME_GENDER = 9;</code>
     */
    public static final int THEME_GENDER_VALUE = 9;
    /**
     * <code>THEME_STRING = 10;</code>
     */
    public static final int THEME_STRING_VALUE = 10;
    /**
     * <code>THEME_FREEDOM = 11;</code>
     */
    public static final int THEME_FREEDOM_VALUE = 11;
    /**
     * <code>THEME_MILE = 12;</code>
     */
    public static final int THEME_MILE_VALUE = 12;
    /**
     * <code>THEME_SURF = 13;</code>
     */
    public static final int THEME_SURF_VALUE = 13;
    /**
     * <code>THEME_EVERYTHING = 14;</code>
     */
    public static final int THEME_EVERYTHING_VALUE = 14;
    /**
     * <code>THEME_PAST = 15;</code>
     */
    public static final int THEME_PAST_VALUE = 15;
    /**
     * <code>THEME_MENTAL_ILLNESS = 16;</code>
     */
    public static final int THEME_MENTAL_ILLNESS_VALUE = 16;
    /**
     * <code>THEME_STREET = 17;</code>
     */
    public static final int THEME_STREET_VALUE = 17;
    /**
     * <code>THEME_BREAKUP = 18;</code>
     */
    public static final int THEME_BREAKUP_VALUE = 18;
    /**
     * <code>THEME_CZECHOSLOVAKIA = 19;</code>
     */
    public static final int THEME_CZECHOSLOVAKIA_VALUE = 19;
    /**
     * <code>THEME_JULY = 20;</code>
     */
    public static final int THEME_JULY_VALUE = 20;
    /**
     * <code>THEME_KARMA = 21;</code>
     */
    public static final int THEME_KARMA_VALUE = 21;
    /**
     * <code>THEME_WEEKEND = 22;</code>
     */
    public static final int THEME_WEEKEND_VALUE = 22;
    /**
     * <code>THEME_JESUS_CHRIST = 23;</code>
     */
    public static final int THEME_JESUS_CHRIST_VALUE = 23;
    /**
     * <code>THEME_SMALL = 24;</code>
     */
    public static final int THEME_SMALL_VALUE = 24;
    /**
     * <code>THEME_HIGHWAY = 25;</code>
     */
    public static final int THEME_HIGHWAY_VALUE = 25;
    /**
     * <code>THEME_SEYCHELLES = 26;</code>
     */
    public static final int THEME_SEYCHELLES_VALUE = 26;
    /**
     * <code>THEME_NASHVILLE = 27;</code>
     */
    public static final int THEME_NASHVILLE_VALUE = 27;
    /**
     * <code>THEME_PATRIOTISM = 28;</code>
     */
    public static final int THEME_PATRIOTISM_VALUE = 28;
    /**
     * <code>THEME_PARK = 29;</code>
     */
    public static final int THEME_PARK_VALUE = 29;
    /**
     * <code>THEME_PROMISE = 30;</code>
     */
    public static final int THEME_PROMISE_VALUE = 30;
    /**
     * <code>THEME_VIDEO_GAME = 31;</code>
     */
    public static final int THEME_VIDEO_GAME_VALUE = 31;
    /**
     * <code>THEME_GAME = 32;</code>
     */
    public static final int THEME_GAME_VALUE = 32;
    /**
     * <code>THEME_EXCELLENCE = 33;</code>
     */
    public static final int THEME_EXCELLENCE_VALUE = 33;
    /**
     * <code>THEME_FINLAND = 34;</code>
     */
    public static final int THEME_FINLAND_VALUE = 34;
    /**
     * <code>THEME_EAST = 35;</code>
     */
    public static final int THEME_EAST_VALUE = 35;
    /**
     * <code>THEME_LAW_ENFORCEMENT = 36;</code>
     */
    public static final int THEME_LAW_ENFORCEMENT_VALUE = 36;
    /**
     * <code>THEME_BUILDING = 37;</code>
     */
    public static final int THEME_BUILDING_VALUE = 37;
    /**
     * <code>THEME_JUNE = 38;</code>
     */
    public static final int THEME_JUNE_VALUE = 38;
    /**
     * <code>THEME_BREATHE = 39;</code>
     */
    public static final int THEME_BREATHE_VALUE = 39;
    /**
     * <code>THEME_INCH = 40;</code>
     */
    public static final int THEME_INCH_VALUE = 40;
    /**
     * <code>THEME_AMBITION = 41;</code>
     */
    public static final int THEME_AMBITION_VALUE = 41;
    /**
     * <code>THEME_LIBYA = 42;</code>
     */
    public static final int THEME_LIBYA_VALUE = 42;
    /**
     * <code>THEME_SCANDINAVIA = 43;</code>
     */
    public static final int THEME_SCANDINAVIA_VALUE = 43;
    /**
     * <code>THEME_PROTEST = 44;</code>
     */
    public static final int THEME_PROTEST_VALUE = 44;
    /**
     * <code>THEME_SINGLE_PARENT = 45;</code>
     */
    public static final int THEME_SINGLE_PARENT_VALUE = 45;
    /**
     * <code>THEME_MIND = 46;</code>
     */
    public static final int THEME_MIND_VALUE = 46;
    /**
     * <code>THEME_MINE = 47;</code>
     */
    public static final int THEME_MINE_VALUE = 47;
    /**
     * <code>THEME_LIECHTENSTEIN = 48;</code>
     */
    public static final int THEME_LIECHTENSTEIN_VALUE = 48;
    /**
     * <code>THEME_BREAKDOWN = 49;</code>
     */
    public static final int THEME_BREAKDOWN_VALUE = 49;
    /**
     * <code>THEME_BOYS = 50;</code>
     */
    public static final int THEME_BOYS_VALUE = 50;
    /**
     * <code>THEME_JORDAN = 51;</code>
     */
    public static final int THEME_JORDAN_VALUE = 51;
    /**
     * <code>THEME_GOD = 52;</code>
     */
    public static final int THEME_GOD_VALUE = 52;
    /**
     * <code>THEME_FOOD = 53;</code>
     */
    public static final int THEME_FOOD_VALUE = 53;
    /**
     * <code>THEME_NEVADA = 54;</code>
     */
    public static final int THEME_NEVADA_VALUE = 54;
    /**
     * <code>THEME_BELLS = 55;</code>
     */
    public static final int THEME_BELLS_VALUE = 55;
    /**
     * <code>THEME_HAPPINESS = 56;</code>
     */
    public static final int THEME_HAPPINESS_VALUE = 56;
    /**
     * <code>THEME_CRASH = 57;</code>
     */
    public static final int THEME_CRASH_VALUE = 57;
    /**
     * <code>THEME_CAROLINAS = 58;</code>
     */
    public static final int THEME_CAROLINAS_VALUE = 58;
    /**
     * <code>THEME_BELLY = 59;</code>
     */
    public static final int THEME_BELLY_VALUE = 59;
    /**
     * <code>THEME_INDEPENDENCE = 60;</code>
     */
    public static final int THEME_INDEPENDENCE_VALUE = 60;
    /**
     * <code>THEME_JUMP = 61;</code>
     */
    public static final int THEME_JUMP_VALUE = 61;
    /**
     * <code>THEME_MICHIGAN = 62;</code>
     */
    public static final int THEME_MICHIGAN_VALUE = 62;
    /**
     * <code>THEME_COMPETITIVE = 63;</code>
     */
    public static final int THEME_COMPETITIVE_VALUE = 63;
    /**
     * <code>THEME_RED = 64;</code>
     */
    public static final int THEME_RED_VALUE = 64;
    /**
     * <code>THEME_ADORATION = 65;</code>
     */
    public static final int THEME_ADORATION_VALUE = 65;
    /**
     * <code>THEME_DJIBOUTI = 66;</code>
     */
    public static final int THEME_DJIBOUTI_VALUE = 66;
    /**
     * <code>THEME_CUBA = 67;</code>
     */
    public static final int THEME_CUBA_VALUE = 67;
    /**
     * <code>THEME_PERSEVERE = 68;</code>
     */
    public static final int THEME_PERSEVERE_VALUE = 68;
    /**
     * <code>THEME_PAD = 69;</code>
     */
    public static final int THEME_PAD_VALUE = 69;
    /**
     * <code>THEME_HORSE_RACING = 70;</code>
     */
    public static final int THEME_HORSE_RACING_VALUE = 70;
    /**
     * <code>THEME_SNOWMAN = 71;</code>
     */
    public static final int THEME_SNOWMAN_VALUE = 71;
    /**
     * <code>THEME_WEST_INDIES = 72;</code>
     */
    public static final int THEME_WEST_INDIES_VALUE = 72;
    /**
     * <code>THEME_KISS = 73;</code>
     */
    public static final int THEME_KISS_VALUE = 73;
    /**
     * <code>THEME_NUCLEAR_WAR = 74;</code>
     */
    public static final int THEME_NUCLEAR_WAR_VALUE = 74;
    /**
     * <code>THEME_EXCITED = 75;</code>
     */
    public static final int THEME_EXCITED_VALUE = 75;
    /**
     * <code>THEME_CYPRUS = 76;</code>
     */
    public static final int THEME_CYPRUS_VALUE = 76;
    /**
     * <code>THEME_START = 77;</code>
     */
    public static final int THEME_START_VALUE = 77;
    /**
     * <code>THEME_PAW = 78;</code>
     */
    public static final int THEME_PAW_VALUE = 78;
    /**
     * <code>THEME_CEMETARY = 79;</code>
     */
    public static final int THEME_CEMETARY_VALUE = 79;
    /**
     * <code>THEME_BRAG = 80;</code>
     */
    public static final int THEME_BRAG_VALUE = 80;
    /**
     * <code>THEME_BEATS = 81;</code>
     */
    public static final int THEME_BEATS_VALUE = 81;
    /**
     * <code>THEME_MUSIC_BUSINESS = 82;</code>
     */
    public static final int THEME_MUSIC_BUSINESS_VALUE = 82;
    /**
     * <code>THEME_ARMENIA = 83;</code>
     */
    public static final int THEME_ARMENIA_VALUE = 83;
    /**
     * <code>THEME_DESPERATE = 84;</code>
     */
    public static final int THEME_DESPERATE_VALUE = 84;
    /**
     * <code>THEME_WINTER = 85;</code>
     */
    public static final int THEME_WINTER_VALUE = 85;
    /**
     * <code>THEME_TOKYO = 86;</code>
     */
    public static final int THEME_TOKYO_VALUE = 86;
    /**
     * <code>THEME_BROTHER = 87;</code>
     */
    public static final int THEME_BROTHER_VALUE = 87;
    /**
     * <code>THEME_LIGHT = 88;</code>
     */
    public static final int THEME_LIGHT_VALUE = 88;
    /**
     * <code>THEME_BRAZIL = 89;</code>
     */
    public static final int THEME_BRAZIL_VALUE = 89;
    /**
     * <code>THEME_CAMERA = 90;</code>
     */
    public static final int THEME_CAMERA_VALUE = 90;
    /**
     * <code>THEME_ECUADOR = 91;</code>
     */
    public static final int THEME_ECUADOR_VALUE = 91;
    /**
     * <code>THEME_EYES = 92;</code>
     */
    public static final int THEME_EYES_VALUE = 92;
    /**
     * <code>THEME_BOXING = 93;</code>
     */
    public static final int THEME_BOXING_VALUE = 93;
    /**
     * <code>THEME_FOOL = 94;</code>
     */
    public static final int THEME_FOOL_VALUE = 94;
    /**
     * <code>THEME_ESWATINI = 95;</code>
     */
    public static final int THEME_ESWATINI_VALUE = 95;
    /**
     * <code>THEME_IMMORTALITY = 96;</code>
     */
    public static final int THEME_IMMORTALITY_VALUE = 96;
    /**
     * <code>THEME_END = 97;</code>
     */
    public static final int THEME_END_VALUE = 97;
    /**
     * <code>THEME_UNIQUE = 98;</code>
     */
    public static final int THEME_UNIQUE_VALUE = 98;
    /**
     * <code>THEME_BROKEN_HOME = 99;</code>
     */
    public static final int THEME_BROKEN_HOME_VALUE = 99;
    /**
     * <code>THEME_PHILOSOPHY = 100;</code>
     */
    public static final int THEME_PHILOSOPHY_VALUE = 100;
    /**
     * <code>THEME_COMPLIMENTS = 101;</code>
     */
    public static final int THEME_COMPLIMENTS_VALUE = 101;
    /**
     * <code>THEME_BRIDGE = 102;</code>
     */
    public static final int THEME_BRIDGE_VALUE = 102;
    /**
     * <code>THEME_WORRY = 103;</code>
     */
    public static final int THEME_WORRY_VALUE = 103;
    /**
     * <code>THEME_ABOVE = 104;</code>
     */
    public static final int THEME_ABOVE_VALUE = 104;
    /**
     * <code>THEME_COSMETIC = 105;</code>
     */
    public static final int THEME_COSMETIC_VALUE = 105;
    /**
     * <code>THEME_VERMONT = 106;</code>
     */
    public static final int THEME_VERMONT_VALUE = 106;
    /**
     * <code>THEME_HAITI = 107;</code>
     */
    public static final int THEME_HAITI_VALUE = 107;
    /**
     * <code>THEME_HOLE = 108;</code>
     */
    public static final int THEME_HOLE_VALUE = 108;
    /**
     * <code>THEME_AFGHANISTAN = 109;</code>
     */
    public static final int THEME_AFGHANISTAN_VALUE = 109;
    /**
     * <code>THEME_BIRD = 110;</code>
     */
    public static final int THEME_BIRD_VALUE = 110;
    /**
     * <code>THEME_ALABAMA = 111;</code>
     */
    public static final int THEME_ALABAMA_VALUE = 111;
    /**
     * <code>THEME_ONE_NIGHT_STAND = 112;</code>
     */
    public static final int THEME_ONE_NIGHT_STAND_VALUE = 112;
    /**
     * <code>THEME_REPTILE = 113;</code>
     */
    public static final int THEME_REPTILE_VALUE = 113;
    /**
     * <code>THEME_COMING_HOME = 114;</code>
     */
    public static final int THEME_COMING_HOME_VALUE = 114;
    /**
     * <code>THEME_MOUTH = 115;</code>
     */
    public static final int THEME_MOUTH_VALUE = 115;
    /**
     * <code>THEME_COLORADO = 116;</code>
     */
    public static final int THEME_COLORADO_VALUE = 116;
    /**
     * <code>THEME_OPPORTUNITY = 117;</code>
     */
    public static final int THEME_OPPORTUNITY_VALUE = 117;
    /**
     * <code>THEME_WOMEN_TALKING_TO_MEN = 118;</code>
     */
    public static final int THEME_WOMEN_TALKING_TO_MEN_VALUE = 118;
    /**
     * <code>THEME_PRESENT = 119;</code>
     */
    public static final int THEME_PRESENT_VALUE = 119;
    /**
     * <code>THEME_HOME = 120;</code>
     */
    public static final int THEME_HOME_VALUE = 120;
    /**
     * <code>THEME_NOVEMBER = 121;</code>
     */
    public static final int THEME_NOVEMBER_VALUE = 121;
    /**
     * <code>THEME_ACTIVITIES = 122;</code>
     */
    public static final int THEME_ACTIVITIES_VALUE = 122;
    /**
     * <code>THEME_ESCAPE = 123;</code>
     */
    public static final int THEME_ESCAPE_VALUE = 123;
    /**
     * <code>THEME_INSECURE = 124;</code>
     */
    public static final int THEME_INSECURE_VALUE = 124;
    /**
     * <code>THEME_YOUNG = 125;</code>
     */
    public static final int THEME_YOUNG_VALUE = 125;
    /**
     * <code>THEME_DOWN = 126;</code>
     */
    public static final int THEME_DOWN_VALUE = 126;
    /**
     * <code>THEME_LOST_THAT_LOVING_FEELING = 127;</code>
     */
    public static final int THEME_LOST_THAT_LOVING_FEELING_VALUE = 127;
    /**
     * <code>THEME_RETURN = 128;</code>
     */
    public static final int THEME_RETURN_VALUE = 128;
    /**
     * <code>THEME_HORROR = 129;</code>
     */
    public static final int THEME_HORROR_VALUE = 129;
    /**
     * <code>THEME_PEOPLE = 130;</code>
     */
    public static final int THEME_PEOPLE_VALUE = 130;
    /**
     * <code>THEME_BABY = 131;</code>
     */
    public static final int THEME_BABY_VALUE = 131;
    /**
     * <code>THEME_TALL = 132;</code>
     */
    public static final int THEME_TALL_VALUE = 132;
    /**
     * <code>THEME_MINNESOTA = 133;</code>
     */
    public static final int THEME_MINNESOTA_VALUE = 133;
    /**
     * <code>THEME_ROMANTIC = 134;</code>
     */
    public static final int THEME_ROMANTIC_VALUE = 134;
    /**
     * <code>THEME_MEN_TALKING_TO_WOMEN = 135;</code>
     */
    public static final int THEME_MEN_TALKING_TO_WOMEN_VALUE = 135;
    /**
     * <code>THEME_REJECTION = 136;</code>
     */
    public static final int THEME_REJECTION_VALUE = 136;
    /**
     * <code>THEME_CANDLE = 137;</code>
     */
    public static final int THEME_CANDLE_VALUE = 137;
    /**
     * <code>THEME_WHITE = 138;</code>
     */
    public static final int THEME_WHITE_VALUE = 138;
    /**
     * <code>THEME_FEMINISM = 139;</code>
     */
    public static final int THEME_FEMINISM_VALUE = 139;
    /**
     * <code>THEME_MOUSE = 140;</code>
     */
    public static final int THEME_MOUSE_VALUE = 140;
    /**
     * <code>THEME_ASIA = 141;</code>
     */
    public static final int THEME_ASIA_VALUE = 141;
    /**
     * <code>THEME_GASOLINE = 142;</code>
     */
    public static final int THEME_GASOLINE_VALUE = 142;
    /**
     * <code>THEME_CLUB = 143;</code>
     */
    public static final int THEME_CLUB_VALUE = 143;
    /**
     * <code>THEME_COOK_ISLANDS = 144;</code>
     */
    public static final int THEME_COOK_ISLANDS_VALUE = 144;
    /**
     * <code>THEME_CONTEMPT = 145;</code>
     */
    public static final int THEME_CONTEMPT_VALUE = 145;
    /**
     * <code>THEME_SPIDER = 146;</code>
     */
    public static final int THEME_SPIDER_VALUE = 146;
    /**
     * <code>THEME_INSULT = 147;</code>
     */
    public static final int THEME_INSULT_VALUE = 147;
    /**
     * <code>THEME_CALMNESS = 148;</code>
     */
    public static final int THEME_CALMNESS_VALUE = 148;
    /**
     * <code>THEME_WAITER = 149;</code>
     */
    public static final int THEME_WAITER_VALUE = 149;
    /**
     * <code>THEME_BRAIN = 150;</code>
     */
    public static final int THEME_BRAIN_VALUE = 150;
    /**
     * <code>THEME_BENIN = 151;</code>
     */
    public static final int THEME_BENIN_VALUE = 151;
    /**
     * <code>THEME_AUNT = 152;</code>
     */
    public static final int THEME_AUNT_VALUE = 152;
    /**
     * <code>THEME_DOLPHIN = 153;</code>
     */
    public static final int THEME_DOLPHIN_VALUE = 153;
    /**
     * <code>THEME_GO = 154;</code>
     */
    public static final int THEME_GO_VALUE = 154;
    /**
     * <code>THEME_ACCUSE = 155;</code>
     */
    public static final int THEME_ACCUSE_VALUE = 155;
    /**
     * <code>THEME_LIGHTHOUSE = 156;</code>
     */
    public static final int THEME_LIGHTHOUSE_VALUE = 156;
    /**
     * <code>THEME_PERFECTION = 157;</code>
     */
    public static final int THEME_PERFECTION_VALUE = 157;
    /**
     * <code>THEME_TIBET = 158;</code>
     */
    public static final int THEME_TIBET_VALUE = 158;
    /**
     * <code>THEME_SKATEBOARD = 159;</code>
     */
    public static final int THEME_SKATEBOARD_VALUE = 159;
    /**
     * <code>THEME_OPTIMISM = 160;</code>
     */
    public static final int THEME_OPTIMISM_VALUE = 160;
    /**
     * <code>THEME_GRENADA = 161;</code>
     */
    public static final int THEME_GRENADA_VALUE = 161;
    /**
     * <code>THEME_MONGOLIA = 162;</code>
     */
    public static final int THEME_MONGOLIA_VALUE = 162;
    /**
     * <code>THEME_MORALITY = 163;</code>
     */
    public static final int THEME_MORALITY_VALUE = 163;
    /**
     * <code>THEME_MOROCCO = 164;</code>
     */
    public static final int THEME_MOROCCO_VALUE = 164;
    /**
     * <code>THEME_SRI_LANKA = 165;</code>
     */
    public static final int THEME_SRI_LANKA_VALUE = 165;
    /**
     * <code>THEME_SLEAZY = 166;</code>
     */
    public static final int THEME_SLEAZY_VALUE = 166;
    /**
     * <code>THEME_BACK = 167;</code>
     */
    public static final int THEME_BACK_VALUE = 167;
    /**
     * <code>THEME_SOLOMON_ISLANDS = 168;</code>
     */
    public static final int THEME_SOLOMON_ISLANDS_VALUE = 168;
    /**
     * <code>THEME_SHELTER = 169;</code>
     */
    public static final int THEME_SHELTER_VALUE = 169;
    /**
     * <code>THEME_EXCUSE = 170;</code>
     */
    public static final int THEME_EXCUSE_VALUE = 170;
    /**
     * <code>THEME_GUN = 171;</code>
     */
    public static final int THEME_GUN_VALUE = 171;
    /**
     * <code>THEME_FRENCH_GUIANA = 172;</code>
     */
    public static final int THEME_FRENCH_GUIANA_VALUE = 172;
    /**
     * <code>THEME_MONTANA = 173;</code>
     */
    public static final int THEME_MONTANA_VALUE = 173;
    /**
     * <code>THEME_VIOLENCE = 174;</code>
     */
    public static final int THEME_VIOLENCE_VALUE = 174;
    /**
     * <code>THEME_KENTUCKY = 175;</code>
     */
    public static final int THEME_KENTUCKY_VALUE = 175;
    /**
     * <code>THEME_GHANA = 176;</code>
     */
    public static final int THEME_GHANA_VALUE = 176;
    /**
     * <code>THEME_AIR = 177;</code>
     */
    public static final int THEME_AIR_VALUE = 177;
    /**
     * <code>THEME_NOT_COMMITTED = 178;</code>
     */
    public static final int THEME_NOT_COMMITTED_VALUE = 178;
    /**
     * <code>THEME_DEEP = 179;</code>
     */
    public static final int THEME_DEEP_VALUE = 179;
    /**
     * <code>THEME_POLITICAL_STATE = 180;</code>
     */
    public static final int THEME_POLITICAL_STATE_VALUE = 180;
    /**
     * <code>THEME_VOLCANO = 181;</code>
     */
    public static final int THEME_VOLCANO_VALUE = 181;
    /**
     * <code>THEME_MALDIVES = 182;</code>
     */
    public static final int THEME_MALDIVES_VALUE = 182;
    /**
     * <code>THEME_OLYMPICS = 183;</code>
     */
    public static final int THEME_OLYMPICS_VALUE = 183;
    /**
     * <code>THEME_BICYCLES = 184;</code>
     */
    public static final int THEME_BICYCLES_VALUE = 184;
    /**
     * <code>THEME_MEDICAL = 185;</code>
     */
    public static final int THEME_MEDICAL_VALUE = 185;
    /**
     * <code>THEME_TRAPPED = 186;</code>
     */
    public static final int THEME_TRAPPED_VALUE = 186;
    /**
     * <code>THEME_VIRGINIA = 187;</code>
     */
    public static final int THEME_VIRGINIA_VALUE = 187;
    /**
     * <code>THEME_TOY = 188;</code>
     */
    public static final int THEME_TOY_VALUE = 188;
    /**
     * <code>THEME_HIDE = 189;</code>
     */
    public static final int THEME_HIDE_VALUE = 189;
    /**
     * <code>THEME_JUSTICE = 190;</code>
     */
    public static final int THEME_JUSTICE_VALUE = 190;
    /**
     * <code>THEME_DARKNESS = 191;</code>
     */
    public static final int THEME_DARKNESS_VALUE = 191;
    /**
     * <code>THEME_FIJI = 192;</code>
     */
    public static final int THEME_FIJI_VALUE = 192;
    /**
     * <code>THEME_GUINEA = 193;</code>
     */
    public static final int THEME_GUINEA_VALUE = 193;
    /**
     * <code>THEME_IGNORANCE = 194;</code>
     */
    public static final int THEME_IGNORANCE_VALUE = 194;
    /**
     * <code>THEME_HIGHEST = 195;</code>
     */
    public static final int THEME_HIGHEST_VALUE = 195;
    /**
     * <code>THEME_DIRECTION = 196;</code>
     */
    public static final int THEME_DIRECTION_VALUE = 196;
    /**
     * <code>THEME_STORYBOOK_CHARACTER = 197;</code>
     */
    public static final int THEME_STORYBOOK_CHARACTER_VALUE = 197;
    /**
     * <code>THEME_MOSCOW = 198;</code>
     */
    public static final int THEME_MOSCOW_VALUE = 198;
    /**
     * <code>THEME_STYLE = 199;</code>
     */
    public static final int THEME_STYLE_VALUE = 199;
    /**
     * <code>THEME_COMPASSION = 200;</code>
     */
    public static final int THEME_COMPASSION_VALUE = 200;
    /**
     * <code>THEME_DENVER = 201;</code>
     */
    public static final int THEME_DENVER_VALUE = 201;
    /**
     * <code>THEME_NIGERIA = 202;</code>
     */
    public static final int THEME_NIGERIA_VALUE = 202;
    /**
     * <code>THEME_EUROPEAN_CONTINENT = 203;</code>
     */
    public static final int THEME_EUROPEAN_CONTINENT_VALUE = 203;
    /**
     * <code>THEME_FOWL = 204;</code>
     */
    public static final int THEME_FOWL_VALUE = 204;
    /**
     * <code>THEME_BELIEVE = 205;</code>
     */
    public static final int THEME_BELIEVE_VALUE = 205;
    /**
     * <code>THEME_CHEERLEADER = 206;</code>
     */
    public static final int THEME_CHEERLEADER_VALUE = 206;
    /**
     * <code>THEME_LIVING = 207;</code>
     */
    public static final int THEME_LIVING_VALUE = 207;
    /**
     * <code>THEME_RHYTHM = 208;</code>
     */
    public static final int THEME_RHYTHM_VALUE = 208;
    /**
     * <code>THEME_COW = 209;</code>
     */
    public static final int THEME_COW_VALUE = 209;
    /**
     * <code>THEME_SMART = 210;</code>
     */
    public static final int THEME_SMART_VALUE = 210;
    /**
     * <code>THEME_SAMOA = 211;</code>
     */
    public static final int THEME_SAMOA_VALUE = 211;
    /**
     * <code>THEME_PIG = 212;</code>
     */
    public static final int THEME_PIG_VALUE = 212;
    /**
     * <code>THEME_LOCK = 213;</code>
     */
    public static final int THEME_LOCK_VALUE = 213;
    /**
     * <code>THEME_FORTUNE_TELLER = 214;</code>
     */
    public static final int THEME_FORTUNE_TELLER_VALUE = 214;
    /**
     * <code>THEME_WRONG = 215;</code>
     */
    public static final int THEME_WRONG_VALUE = 215;
    /**
     * <code>THEME_AMUSEMENT_PARKS_AND_RIDES = 216;</code>
     */
    public static final int THEME_AMUSEMENT_PARKS_AND_RIDES_VALUE = 216;
    /**
     * <code>THEME_WEDDING = 217;</code>
     */
    public static final int THEME_WEDDING_VALUE = 217;
    /**
     * <code>THEME_GESTURES = 218;</code>
     */
    public static final int THEME_GESTURES_VALUE = 218;
    /**
     * <code>THEME_LAST_NIGHT = 219;</code>
     */
    public static final int THEME_LAST_NIGHT_VALUE = 219;
    /**
     * <code>THEME_HOPE = 220;</code>
     */
    public static final int THEME_HOPE_VALUE = 220;
    /**
     * <code>THEME_ESTONIA = 221;</code>
     */
    public static final int THEME_ESTONIA_VALUE = 221;
    /**
     * <code>THEME_ALL = 222;</code>
     */
    public static final int THEME_ALL_VALUE = 222;
    /**
     * <code>THEME_HORN = 223;</code>
     */
    public static final int THEME_HORN_VALUE = 223;
    /**
     * <code>THEME_NEW = 224;</code>
     */
    public static final int THEME_NEW_VALUE = 224;
    /**
     * <code>THEME_THOUSAND = 225;</code>
     */
    public static final int THEME_THOUSAND_VALUE = 225;
    /**
     * <code>THEME_ENLIGHTENMENT = 226;</code>
     */
    public static final int THEME_ENLIGHTENMENT_VALUE = 226;
    /**
     * <code>THEME_BENELUX = 227;</code>
     */
    public static final int THEME_BENELUX_VALUE = 227;
    /**
     * <code>THEME_SURPRISE_PARTY = 228;</code>
     */
    public static final int THEME_SURPRISE_PARTY_VALUE = 228;
    /**
     * <code>THEME_SHINE = 229;</code>
     */
    public static final int THEME_SHINE_VALUE = 229;
    /**
     * <code>THEME_IVORY_COAST = 230;</code>
     */
    public static final int THEME_IVORY_COAST_VALUE = 230;
    /**
     * <code>THEME_PHYSICAL_PAIN = 231;</code>
     */
    public static final int THEME_PHYSICAL_PAIN_VALUE = 231;
    /**
     * <code>THEME_MAMMAL = 232;</code>
     */
    public static final int THEME_MAMMAL_VALUE = 232;
    /**
     * <code>THEME_MOTIVATION = 233;</code>
     */
    public static final int THEME_MOTIVATION_VALUE = 233;
    /**
     * <code>THEME_EDUCATION = 234;</code>
     */
    public static final int THEME_EDUCATION_VALUE = 234;
    /**
     * <code>THEME_DRAFT_RESISTANCE = 235;</code>
     */
    public static final int THEME_DRAFT_RESISTANCE_VALUE = 235;
    /**
     * <code>THEME_TRY = 236;</code>
     */
    public static final int THEME_TRY_VALUE = 236;
    /**
     * <code>THEME_DIZZY = 237;</code>
     */
    public static final int THEME_DIZZY_VALUE = 237;
    /**
     * <code>THEME_INVISIBLE = 238;</code>
     */
    public static final int THEME_INVISIBLE_VALUE = 238;
    /**
     * <code>THEME_TONGA = 239;</code>
     */
    public static final int THEME_TONGA_VALUE = 239;
    /**
     * <code>THEME_PLAYER = 240;</code>
     */
    public static final int THEME_PLAYER_VALUE = 240;
    /**
     * <code>THEME_VACATION = 241;</code>
     */
    public static final int THEME_VACATION_VALUE = 241;
    /**
     * <code>THEME_SANTA_FE = 242;</code>
     */
    public static final int THEME_SANTA_FE_VALUE = 242;
    /**
     * <code>THEME_LONELY = 243;</code>
     */
    public static final int THEME_LONELY_VALUE = 243;
    /**
     * <code>THEME_APRIL = 244;</code>
     */
    public static final int THEME_APRIL_VALUE = 244;
    /**
     * <code>THEME_EMBARRASSED = 245;</code>
     */
    public static final int THEME_EMBARRASSED_VALUE = 245;
    /**
     * <code>THEME_TROUBLE = 246;</code>
     */
    public static final int THEME_TROUBLE_VALUE = 246;
    /**
     * <code>THEME_PIANO = 247;</code>
     */
    public static final int THEME_PIANO_VALUE = 247;
    /**
     * <code>THEME_SUNDAY = 248;</code>
     */
    public static final int THEME_SUNDAY_VALUE = 248;
    /**
     * <code>THEME_ME = 249;</code>
     */
    public static final int THEME_ME_VALUE = 249;
    /**
     * <code>THEME_DEATH = 250;</code>
     */
    public static final int THEME_DEATH_VALUE = 250;
    /**
     * <code>THEME_SKIN = 251;</code>
     */
    public static final int THEME_SKIN_VALUE = 251;
    /**
     * <code>THEME_SOUTH_SUDAN = 252;</code>
     */
    public static final int THEME_SOUTH_SUDAN_VALUE = 252;
    /**
     * <code>THEME_SUPERIORITY = 253;</code>
     */
    public static final int THEME_SUPERIORITY_VALUE = 253;
    /**
     * <code>THEME_GET_LOST = 254;</code>
     */
    public static final int THEME_GET_LOST_VALUE = 254;
    /**
     * <code>THEME_TRUCKS = 255;</code>
     */
    public static final int THEME_TRUCKS_VALUE = 255;
    /**
     * <code>THEME_BUTTERFLY = 256;</code>
     */
    public static final int THEME_BUTTERFLY_VALUE = 256;
    /**
     * <code>THEME_DAYTIME = 257;</code>
     */
    public static final int THEME_DAYTIME_VALUE = 257;
    /**
     * <code>THEME_TEMPTATION = 258;</code>
     */
    public static final int THEME_TEMPTATION_VALUE = 258;
    /**
     * <code>THEME_FLIRT = 259;</code>
     */
    public static final int THEME_FLIRT_VALUE = 259;
    /**
     * <code>THEME_CRY = 260;</code>
     */
    public static final int THEME_CRY_VALUE = 260;
    /**
     * <code>THEME_MALTA = 261;</code>
     */
    public static final int THEME_MALTA_VALUE = 261;
    /**
     * <code>THEME_LAS_VEGAS = 262;</code>
     */
    public static final int THEME_LAS_VEGAS_VALUE = 262;
    /**
     * <code>THEME_PHONE = 263;</code>
     */
    public static final int THEME_PHONE_VALUE = 263;
    /**
     * <code>THEME_IRELAND = 264;</code>
     */
    public static final int THEME_IRELAND_VALUE = 264;
    /**
     * <code>THEME_BEDROOM = 265;</code>
     */
    public static final int THEME_BEDROOM_VALUE = 265;
    /**
     * <code>THEME_UNDERSTANDING = 266;</code>
     */
    public static final int THEME_UNDERSTANDING_VALUE = 266;
    /**
     * <code>THEME_SKATE = 267;</code>
     */
    public static final int THEME_SKATE_VALUE = 267;
    /**
     * <code>THEME_SAFETY = 268;</code>
     */
    public static final int THEME_SAFETY_VALUE = 268;
    /**
     * <code>THEME_SYNTHESIZER = 269;</code>
     */
    public static final int THEME_SYNTHESIZER_VALUE = 269;
    /**
     * <code>THEME_FRANCE = 270;</code>
     */
    public static final int THEME_FRANCE_VALUE = 270;
    /**
     * <code>THEME_WOMENS_NAMES = 271;</code>
     */
    public static final int THEME_WOMENS_NAMES_VALUE = 271;
    /**
     * <code>THEME_NORTH_AMERICA = 272;</code>
     */
    public static final int THEME_NORTH_AMERICA_VALUE = 272;
    /**
     * <code>THEME_VOODOO = 273;</code>
     */
    public static final int THEME_VOODOO_VALUE = 273;
    /**
     * <code>THEME_COMIC = 274;</code>
     */
    public static final int THEME_COMIC_VALUE = 274;
    /**
     * <code>THEME_HANDS = 275;</code>
     */
    public static final int THEME_HANDS_VALUE = 275;
    /**
     * <code>THEME_HIGH = 276;</code>
     */
    public static final int THEME_HIGH_VALUE = 276;
    /**
     * <code>THEME_ORPHAN = 277;</code>
     */
    public static final int THEME_ORPHAN_VALUE = 277;
    /**
     * <code>THEME_FEEL = 278;</code>
     */
    public static final int THEME_FEEL_VALUE = 278;
    /**
     * <code>THEME_SENSUALITY = 279;</code>
     */
    public static final int THEME_SENSUALITY_VALUE = 279;
    /**
     * <code>THEME_FAITH = 280;</code>
     */
    public static final int THEME_FAITH_VALUE = 280;
    /**
     * <code>THEME_STRESS = 281;</code>
     */
    public static final int THEME_STRESS_VALUE = 281;
    /**
     * <code>THEME_FEET = 282;</code>
     */
    public static final int THEME_FEET_VALUE = 282;
    /**
     * <code>THEME_FORGIVE = 283;</code>
     */
    public static final int THEME_FORGIVE_VALUE = 283;
    /**
     * <code>THEME_ANIMALS = 284;</code>
     */
    public static final int THEME_ANIMALS_VALUE = 284;
    /**
     * <code>THEME_WHALE = 285;</code>
     */
    public static final int THEME_WHALE_VALUE = 285;
    /**
     * <code>THEME_MAIL = 286;</code>
     */
    public static final int THEME_MAIL_VALUE = 286;
    /**
     * <code>THEME_NICARAGUA = 287;</code>
     */
    public static final int THEME_NICARAGUA_VALUE = 287;
    /**
     * <code>THEME_NORTH_MACEDONIA = 288;</code>
     */
    public static final int THEME_NORTH_MACEDONIA_VALUE = 288;
    /**
     * <code>THEME_DISAPPOINTMENT = 289;</code>
     */
    public static final int THEME_DISAPPOINTMENT_VALUE = 289;
    /**
     * <code>THEME_FIND = 290;</code>
     */
    public static final int THEME_FIND_VALUE = 290;
    /**
     * <code>THEME_SHEEP = 291;</code>
     */
    public static final int THEME_SHEEP_VALUE = 291;
    /**
     * <code>THEME_MEXICO = 292;</code>
     */
    public static final int THEME_MEXICO_VALUE = 292;
    /**
     * <code>THEME_DESERT = 293;</code>
     */
    public static final int THEME_DESERT_VALUE = 293;
    /**
     * <code>THEME_HANDSOME = 294;</code>
     */
    public static final int THEME_HANDSOME_VALUE = 294;
    /**
     * <code>THEME_HOUSTON = 295;</code>
     */
    public static final int THEME_HOUSTON_VALUE = 295;
    /**
     * <code>THEME_REGRET = 296;</code>
     */
    public static final int THEME_REGRET_VALUE = 296;
    /**
     * <code>THEME_RAP_GAME = 297;</code>
     */
    public static final int THEME_RAP_GAME_VALUE = 297;
    /**
     * <code>THEME_BALI = 298;</code>
     */
    public static final int THEME_BALI_VALUE = 298;
    /**
     * <code>THEME_INDIANA = 299;</code>
     */
    public static final int THEME_INDIANA_VALUE = 299;
    /**
     * <code>THEME_WALES = 300;</code>
     */
    public static final int THEME_WALES_VALUE = 300;
    /**
     * <code>THEME_CINCINNATI = 301;</code>
     */
    public static final int THEME_CINCINNATI_VALUE = 301;
    /**
     * <code>THEME_BURDEN = 302;</code>
     */
    public static final int THEME_BURDEN_VALUE = 302;
    /**
     * <code>THEME_HILLBILLY = 303;</code>
     */
    public static final int THEME_HILLBILLY_VALUE = 303;
    /**
     * <code>THEME_MULTIPLE_BODY_PARTS = 304;</code>
     */
    public static final int THEME_MULTIPLE_BODY_PARTS_VALUE = 304;
    /**
     * <code>THEME_BAHAMAS = 305;</code>
     */
    public static final int THEME_BAHAMAS_VALUE = 305;
    /**
     * <code>THEME_FRENCH_CARIBBEAN = 306;</code>
     */
    public static final int THEME_FRENCH_CARIBBEAN_VALUE = 306;
    /**
     * <code>THEME_FOLLOW = 307;</code>
     */
    public static final int THEME_FOLLOW_VALUE = 307;
    /**
     * <code>THEME_UNFAIR = 308;</code>
     */
    public static final int THEME_UNFAIR_VALUE = 308;
    /**
     * <code>THEME_MALI = 309;</code>
     */
    public static final int THEME_MALI_VALUE = 309;
    /**
     * <code>THEME_PANAMA = 310;</code>
     */
    public static final int THEME_PANAMA_VALUE = 310;
    /**
     * <code>THEME_ACTOR = 311;</code>
     */
    public static final int THEME_ACTOR_VALUE = 311;
    /**
     * <code>THEME_SWEET = 312;</code>
     */
    public static final int THEME_SWEET_VALUE = 312;
    /**
     * <code>THEME_TAXI = 313;</code>
     */
    public static final int THEME_TAXI_VALUE = 313;
    /**
     * <code>THEME_MAGICIAN = 314;</code>
     */
    public static final int THEME_MAGICIAN_VALUE = 314;
    /**
     * <code>THEME_BEST = 315;</code>
     */
    public static final int THEME_BEST_VALUE = 315;
    /**
     * <code>THEME_THEM = 316;</code>
     */
    public static final int THEME_THEM_VALUE = 316;
    /**
     * <code>THEME_USER_DEFINED = 317;</code>
     */
    public static final int THEME_USER_DEFINED_VALUE = 317;
    /**
     * <code>THEME_DONT_GO = 318;</code>
     */
    public static final int THEME_DONT_GO_VALUE = 318;
    /**
     * <code>THEME_HEAD = 319;</code>
     */
    public static final int THEME_HEAD_VALUE = 319;
    /**
     * <code>THEME_CANT_RESIST = 320;</code>
     */
    public static final int THEME_CANT_RESIST_VALUE = 320;
    /**
     * <code>THEME_SHAKE = 321;</code>
     */
    public static final int THEME_SHAKE_VALUE = 321;
    /**
     * <code>THEME_AFRICA = 322;</code>
     */
    public static final int THEME_AFRICA_VALUE = 322;
    /**
     * <code>THEME_SPRING = 323;</code>
     */
    public static final int THEME_SPRING_VALUE = 323;
    /**
     * <code>THEME_COWBOY_AND_COWGIRL = 324;</code>
     */
    public static final int THEME_COWBOY_AND_COWGIRL_VALUE = 324;
    /**
     * <code>THEME_ISLE_OF_MAN = 325;</code>
     */
    public static final int THEME_ISLE_OF_MAN_VALUE = 325;
    /**
     * <code>THEME_PROBLEMS = 326;</code>
     */
    public static final int THEME_PROBLEMS_VALUE = 326;
    /**
     * <code>THEME_WE_SHOULD_BE_TOGETHER = 327;</code>
     */
    public static final int THEME_WE_SHOULD_BE_TOGETHER_VALUE = 327;
    /**
     * <code>THEME_NAMIBIA = 328;</code>
     */
    public static final int THEME_NAMIBIA_VALUE = 328;
    /**
     * <code>THEME_KEYS = 329;</code>
     */
    public static final int THEME_KEYS_VALUE = 329;
    /**
     * <code>THEME_CHARITY = 330;</code>
     */
    public static final int THEME_CHARITY_VALUE = 330;
    /**
     * <code>THEME_NEW_ZEALAND = 331;</code>
     */
    public static final int THEME_NEW_ZEALAND_VALUE = 331;
    /**
     * <code>THEME_SLAVERY = 332;</code>
     */
    public static final int THEME_SLAVERY_VALUE = 332;
    /**
     * <code>THEME_ART = 333;</code>
     */
    public static final int THEME_ART_VALUE = 333;
    /**
     * <code>THEME_WATERFALL = 334;</code>
     */
    public static final int THEME_WATERFALL_VALUE = 334;
    /**
     * <code>THEME_CIRCUS = 335;</code>
     */
    public static final int THEME_CIRCUS_VALUE = 335;
    /**
     * <code>THEME_SAINT_KITTS_AND_NEVIS = 336;</code>
     */
    public static final int THEME_SAINT_KITTS_AND_NEVIS_VALUE = 336;
    /**
     * <code>THEME_MADAGASCAR = 337;</code>
     */
    public static final int THEME_MADAGASCAR_VALUE = 337;
    /**
     * <code>THEME_POSSIBILITY = 338;</code>
     */
    public static final int THEME_POSSIBILITY_VALUE = 338;
    /**
     * <code>THEME_BOARDWALK = 339;</code>
     */
    public static final int THEME_BOARDWALK_VALUE = 339;
    /**
     * <code>THEME_ASHES = 340;</code>
     */
    public static final int THEME_ASHES_VALUE = 340;
    /**
     * <code>THEME_WASHINGTON = 341;</code>
     */
    public static final int THEME_WASHINGTON_VALUE = 341;
    /**
     * <code>THEME_UNION = 342;</code>
     */
    public static final int THEME_UNION_VALUE = 342;
    /**
     * <code>THEME_SWEDEN = 343;</code>
     */
    public static final int THEME_SWEDEN_VALUE = 343;
    /**
     * <code>THEME_ROYALTY = 344;</code>
     */
    public static final int THEME_ROYALTY_VALUE = 344;
    /**
     * <code>THEME_FINGERS = 345;</code>
     */
    public static final int THEME_FINGERS_VALUE = 345;
    /**
     * <code>THEME_STAR = 346;</code>
     */
    public static final int THEME_STAR_VALUE = 346;
    /**
     * <code>THEME_MALAWI = 347;</code>
     */
    public static final int THEME_MALAWI_VALUE = 347;
    /**
     * <code>THEME_SHOULDER = 348;</code>
     */
    public static final int THEME_SHOULDER_VALUE = 348;
    /**
     * <code>THEME_ANDORRA = 349;</code>
     */
    public static final int THEME_ANDORRA_VALUE = 349;
    /**
     * <code>THEME_VALENTINE = 350;</code>
     */
    public static final int THEME_VALENTINE_VALUE = 350;
    /**
     * <code>THEME_POLAND = 351;</code>
     */
    public static final int THEME_POLAND_VALUE = 351;
    /**
     * <code>THEME_FISH = 352;</code>
     */
    public static final int THEME_FISH_VALUE = 352;
    /**
     * <code>THEME_IN_TROUBLE = 353;</code>
     */
    public static final int THEME_IN_TROUBLE_VALUE = 353;
    /**
     * <code>THEME_WOLF = 354;</code>
     */
    public static final int THEME_WOLF_VALUE = 354;
    /**
     * <code>THEME_FACE = 355;</code>
     */
    public static final int THEME_FACE_VALUE = 355;
    /**
     * <code>THEME_ANGST = 356;</code>
     */
    public static final int THEME_ANGST_VALUE = 356;
    /**
     * <code>THEME_DALLAS = 357;</code>
     */
    public static final int THEME_DALLAS_VALUE = 357;
    /**
     * <code>THEME_HAVANA = 358;</code>
     */
    public static final int THEME_HAVANA_VALUE = 358;
    /**
     * <code>THEME_TUNISIA = 359;</code>
     */
    public static final int THEME_TUNISIA_VALUE = 359;
    /**
     * <code>THEME_WISCONSIN = 360;</code>
     */
    public static final int THEME_WISCONSIN_VALUE = 360;
    /**
     * <code>THEME_NATURE = 361;</code>
     */
    public static final int THEME_NATURE_VALUE = 361;
    /**
     * <code>THEME_WINDOW = 362;</code>
     */
    public static final int THEME_WINDOW_VALUE = 362;
    /**
     * <code>THEME_MOTION = 363;</code>
     */
    public static final int THEME_MOTION_VALUE = 363;
    /**
     * <code>THEME_COSTA_RICA = 364;</code>
     */
    public static final int THEME_COSTA_RICA_VALUE = 364;
    /**
     * <code>THEME_AFFECTION = 365;</code>
     */
    public static final int THEME_AFFECTION_VALUE = 365;
    /**
     * <code>THEME_CONNECTION = 366;</code>
     */
    public static final int THEME_CONNECTION_VALUE = 366;
    /**
     * <code>THEME_RELIGION = 367;</code>
     */
    public static final int THEME_RELIGION_VALUE = 367;
    /**
     * <code>THEME_SEDUCED = 368;</code>
     */
    public static final int THEME_SEDUCED_VALUE = 368;
    /**
     * <code>THEME_RUN = 369;</code>
     */
    public static final int THEME_RUN_VALUE = 369;
    /**
     * <code>THEME_PHARMACEUTICAL = 370;</code>
     */
    public static final int THEME_PHARMACEUTICAL_VALUE = 370;
    /**
     * <code>THEME_EUROPEAN_UNION = 371;</code>
     */
    public static final int THEME_EUROPEAN_UNION_VALUE = 371;
    /**
     * <code>THEME_TUVALU = 372;</code>
     */
    public static final int THEME_TUVALU_VALUE = 372;
    /**
     * <code>THEME_TRAGEDY = 373;</code>
     */
    public static final int THEME_TRAGEDY_VALUE = 373;
    /**
     * <code>THEME_SHOULD_HAVE_SAID = 374;</code>
     */
    public static final int THEME_SHOULD_HAVE_SAID_VALUE = 374;
    /**
     * <code>THEME_BIRMINGHAM = 375;</code>
     */
    public static final int THEME_BIRMINGHAM_VALUE = 375;
    /**
     * <code>THEME_CIVIL_RIGHTS = 376;</code>
     */
    public static final int THEME_CIVIL_RIGHTS_VALUE = 376;
    /**
     * <code>THEME_FEVER = 377;</code>
     */
    public static final int THEME_FEVER_VALUE = 377;
    /**
     * <code>THEME_PRETTY = 378;</code>
     */
    public static final int THEME_PRETTY_VALUE = 378;
    /**
     * <code>THEME_SUPERHERO = 379;</code>
     */
    public static final int THEME_SUPERHERO_VALUE = 379;
    /**
     * <code>THEME_RESTAURANT = 380;</code>
     */
    public static final int THEME_RESTAURANT_VALUE = 380;
    /**
     * <code>THEME_SLEEP = 381;</code>
     */
    public static final int THEME_SLEEP_VALUE = 381;
    /**
     * <code>THEME_CHOOSE = 382;</code>
     */
    public static final int THEME_CHOOSE_VALUE = 382;
    /**
     * <code>THEME_MUSIC = 383;</code>
     */
    public static final int THEME_MUSIC_VALUE = 383;
    /**
     * <code>THEME_FIRE = 384;</code>
     */
    public static final int THEME_FIRE_VALUE = 384;
    /**
     * <code>THEME_CENTRAL_AMERICA = 385;</code>
     */
    public static final int THEME_CENTRAL_AMERICA_VALUE = 385;
    /**
     * <code>THEME_HEALING = 386;</code>
     */
    public static final int THEME_HEALING_VALUE = 386;
    /**
     * <code>THEME_LEARN = 387;</code>
     */
    public static final int THEME_LEARN_VALUE = 387;
    /**
     * <code>THEME_HAT = 388;</code>
     */
    public static final int THEME_HAT_VALUE = 388;
    /**
     * <code>THEME_VILLAIN = 389;</code>
     */
    public static final int THEME_VILLAIN_VALUE = 389;
    /**
     * <code>THEME_WOMEN_TALKING_TO_WOMEN = 390;</code>
     */
    public static final int THEME_WOMEN_TALKING_TO_WOMEN_VALUE = 390;
    /**
     * <code>THEME_GRATITUDE = 391;</code>
     */
    public static final int THEME_GRATITUDE_VALUE = 391;
    /**
     * <code>THEME_TONGUE = 392;</code>
     */
    public static final int THEME_TONGUE_VALUE = 392;
    /**
     * <code>THEME_DETROIT = 393;</code>
     */
    public static final int THEME_DETROIT_VALUE = 393;
    /**
     * <code>THEME_ANYTHING = 394;</code>
     */
    public static final int THEME_ANYTHING_VALUE = 394;
    /**
     * <code>THEME_MORNING = 395;</code>
     */
    public static final int THEME_MORNING_VALUE = 395;
    /**
     * <code>THEME_SING = 396;</code>
     */
    public static final int THEME_SING_VALUE = 396;
    /**
     * <code>THEME_ALCOHOL = 397;</code>
     */
    public static final int THEME_ALCOHOL_VALUE = 397;
    /**
     * <code>THEME_PARADE = 398;</code>
     */
    public static final int THEME_PARADE_VALUE = 398;
    /**
     * <code>THEME_IN_FRONT = 399;</code>
     */
    public static final int THEME_IN_FRONT_VALUE = 399;
    /**
     * <code>THEME_BEACH = 400;</code>
     */
    public static final int THEME_BEACH_VALUE = 400;
    /**
     * <code>THEME_CONTAINER = 401;</code>
     */
    public static final int THEME_CONTAINER_VALUE = 401;
    /**
     * <code>THEME_CONFIDENCE = 402;</code>
     */
    public static final int THEME_CONFIDENCE_VALUE = 402;
    /**
     * <code>THEME_NOSTALGIA = 403;</code>
     */
    public static final int THEME_NOSTALGIA_VALUE = 403;
    /**
     * <code>THEME_POLYNESIA = 404;</code>
     */
    public static final int THEME_POLYNESIA_VALUE = 404;
    /**
     * <code>THEME_SEARCH = 405;</code>
     */
    public static final int THEME_SEARCH_VALUE = 405;
    /**
     * <code>THEME_STUBBORN = 406;</code>
     */
    public static final int THEME_STUBBORN_VALUE = 406;
    /**
     * <code>THEME_DRIVE = 407;</code>
     */
    public static final int THEME_DRIVE_VALUE = 407;
    /**
     * <code>THEME_OUTDOOR = 408;</code>
     */
    public static final int THEME_OUTDOOR_VALUE = 408;
    /**
     * <code>THEME_ALGERIA = 409;</code>
     */
    public static final int THEME_ALGERIA_VALUE = 409;
    /**
     * <code>THEME_LOOK = 410;</code>
     */
    public static final int THEME_LOOK_VALUE = 410;
    /**
     * <code>THEME_SLOVENIA = 411;</code>
     */
    public static final int THEME_SLOVENIA_VALUE = 411;
    /**
     * <code>THEME_BEVERAGE = 412;</code>
     */
    public static final int THEME_BEVERAGE_VALUE = 412;
    /**
     * <code>THEME_TRUTH = 413;</code>
     */
    public static final int THEME_TRUTH_VALUE = 413;
    /**
     * <code>THEME_THIN = 414;</code>
     */
    public static final int THEME_THIN_VALUE = 414;
    /**
     * <code>THEME_COLOMBIA = 415;</code>
     */
    public static final int THEME_COLOMBIA_VALUE = 415;
    /**
     * <code>THEME_HEAVEN = 416;</code>
     */
    public static final int THEME_HEAVEN_VALUE = 416;
    /**
     * <code>THEME_GAS_STATION = 417;</code>
     */
    public static final int THEME_GAS_STATION_VALUE = 417;
    /**
     * <code>THEME_CLOTHING = 418;</code>
     */
    public static final int THEME_CLOTHING_VALUE = 418;
    /**
     * <code>THEME_MOLDOVA = 419;</code>
     */
    public static final int THEME_MOLDOVA_VALUE = 419;
    /**
     * <code>THEME_FREE = 420;</code>
     */
    public static final int THEME_FREE_VALUE = 420;
    /**
     * <code>THEME_PENNSYLVANIA = 421;</code>
     */
    public static final int THEME_PENNSYLVANIA_VALUE = 421;
    /**
     * <code>THEME_GANGSTA_LIFE = 422;</code>
     */
    public static final int THEME_GANGSTA_LIFE_VALUE = 422;
    /**
     * <code>THEME_TEXAS = 423;</code>
     */
    public static final int THEME_TEXAS_VALUE = 423;
    /**
     * <code>THEME_JEALOUS = 424;</code>
     */
    public static final int THEME_JEALOUS_VALUE = 424;
    /**
     * <code>THEME_NEW_MEXICO = 425;</code>
     */
    public static final int THEME_NEW_MEXICO_VALUE = 425;
    /**
     * <code>THEME_NOW = 426;</code>
     */
    public static final int THEME_NOW_VALUE = 426;
    /**
     * <code>THEME_HONDURAS = 427;</code>
     */
    public static final int THEME_HONDURAS_VALUE = 427;
    /**
     * <code>THEME_UP = 428;</code>
     */
    public static final int THEME_UP_VALUE = 428;
    /**
     * <code>THEME_NAURU = 429;</code>
     */
    public static final int THEME_NAURU_VALUE = 429;
    /**
     * <code>THEME_US = 430;</code>
     */
    public static final int THEME_US_VALUE = 430;
    /**
     * <code>THEME_BEAUTY = 431;</code>
     */
    public static final int THEME_BEAUTY_VALUE = 431;
    /**
     * <code>THEME_BROWN = 432;</code>
     */
    public static final int THEME_BROWN_VALUE = 432;
    /**
     * <code>THEME_GAMBLING = 433;</code>
     */
    public static final int THEME_GAMBLING_VALUE = 433;
    /**
     * <code>THEME_CHRISTMAS = 434;</code>
     */
    public static final int THEME_CHRISTMAS_VALUE = 434;
    /**
     * <code>THEME_GREED = 435;</code>
     */
    public static final int THEME_GREED_VALUE = 435;
    /**
     * <code>THEME_SEPTEMBER = 436;</code>
     */
    public static final int THEME_SEPTEMBER_VALUE = 436;
    /**
     * <code>THEME_CRITICIZE = 437;</code>
     */
    public static final int THEME_CRITICIZE_VALUE = 437;
    /**
     * <code>THEME_PARENT = 438;</code>
     */
    public static final int THEME_PARENT_VALUE = 438;
    /**
     * <code>THEME_FASCISM = 439;</code>
     */
    public static final int THEME_FASCISM_VALUE = 439;
    /**
     * <code>THEME_HIPS = 440;</code>
     */
    public static final int THEME_HIPS_VALUE = 440;
    /**
     * <code>THEME_SHOW_BIZ = 441;</code>
     */
    public static final int THEME_SHOW_BIZ_VALUE = 441;
    /**
     * <code>THEME_FORBIDDEN = 442;</code>
     */
    public static final int THEME_FORBIDDEN_VALUE = 442;
    /**
     * <code>THEME_LEAVE = 443;</code>
     */
    public static final int THEME_LEAVE_VALUE = 443;
    /**
     * <code>THEME_WAR = 444;</code>
     */
    public static final int THEME_WAR_VALUE = 444;
    /**
     * <code>THEME_SPECIFIC_TIME = 445;</code>
     */
    public static final int THEME_SPECIFIC_TIME_VALUE = 445;
    /**
     * <code>THEME_BASKETBALL = 446;</code>
     */
    public static final int THEME_BASKETBALL_VALUE = 446;
    /**
     * <code>THEME_FISHING = 447;</code>
     */
    public static final int THEME_FISHING_VALUE = 447;
    /**
     * <code>THEME_SITUATION = 448;</code>
     */
    public static final int THEME_SITUATION_VALUE = 448;
    /**
     * <code>THEME_NEW_HAMPSHIRE = 449;</code>
     */
    public static final int THEME_NEW_HAMPSHIRE_VALUE = 449;
    /**
     * <code>THEME_PRODUCT_AND_BRAND = 450;</code>
     */
    public static final int THEME_PRODUCT_AND_BRAND_VALUE = 450;
    /**
     * <code>THEME_NETHERLANDS = 451;</code>
     */
    public static final int THEME_NETHERLANDS_VALUE = 451;
    /**
     * <code>THEME_EARTHQUAKE = 452;</code>
     */
    public static final int THEME_EARTHQUAKE_VALUE = 452;
    /**
     * <code>THEME_MOUNTAIN = 453;</code>
     */
    public static final int THEME_MOUNTAIN_VALUE = 453;
    /**
     * <code>THEME_BACK_TOGETHER = 454;</code>
     */
    public static final int THEME_BACK_TOGETHER_VALUE = 454;
    /**
     * <code>THEME_QUALITY = 455;</code>
     */
    public static final int THEME_QUALITY_VALUE = 455;
    /**
     * <code>THEME_ALASKA = 456;</code>
     */
    public static final int THEME_ALASKA_VALUE = 456;
    /**
     * <code>THEME_SHOPPING = 457;</code>
     */
    public static final int THEME_SHOPPING_VALUE = 457;
    /**
     * <code>THEME_TUESDAY = 458;</code>
     */
    public static final int THEME_TUESDAY_VALUE = 458;
    /**
     * <code>THEME_BLAME = 459;</code>
     */
    public static final int THEME_BLAME_VALUE = 459;
    /**
     * <code>THEME_PUERTO_RICO = 460;</code>
     */
    public static final int THEME_PUERTO_RICO_VALUE = 460;
    /**
     * <code>THEME_BASS = 461;</code>
     */
    public static final int THEME_BASS_VALUE = 461;
    /**
     * <code>THEME_OBSESSION = 462;</code>
     */
    public static final int THEME_OBSESSION_VALUE = 462;
    /**
     * <code>THEME_BHUTAN = 463;</code>
     */
    public static final int THEME_BHUTAN_VALUE = 463;
    /**
     * <code>THEME_TRUST = 464;</code>
     */
    public static final int THEME_TRUST_VALUE = 464;
    /**
     * <code>THEME_MIAMI = 465;</code>
     */
    public static final int THEME_MIAMI_VALUE = 465;
    /**
     * <code>THEME_CONTINENT = 466;</code>
     */
    public static final int THEME_CONTINENT_VALUE = 466;
    /**
     * <code>THEME_ADDICTION = 467;</code>
     */
    public static final int THEME_ADDICTION_VALUE = 467;
    /**
     * <code>THEME_LIGHTNING = 468;</code>
     */
    public static final int THEME_LIGHTNING_VALUE = 468;
    /**
     * <code>THEME_FAR = 469;</code>
     */
    public static final int THEME_FAR_VALUE = 469;
    /**
     * <code>THEME_FAT = 470;</code>
     */
    public static final int THEME_FAT_VALUE = 470;
    /**
     * <code>THEME_ZIMBABWE = 471;</code>
     */
    public static final int THEME_ZIMBABWE_VALUE = 471;
    /**
     * <code>THEME_GREEN = 472;</code>
     */
    public static final int THEME_GREEN_VALUE = 472;
    /**
     * <code>THEME_MONTENEGRO = 473;</code>
     */
    public static final int THEME_MONTENEGRO_VALUE = 473;
    /**
     * <code>THEME_BARS = 474;</code>
     */
    public static final int THEME_BARS_VALUE = 474;
    /**
     * <code>THEME_PRAYER = 475;</code>
     */
    public static final int THEME_PRAYER_VALUE = 475;
    /**
     * <code>THEME_MISTAKES = 476;</code>
     */
    public static final int THEME_MISTAKES_VALUE = 476;
    /**
     * <code>THEME_BIRTH_CONTROL = 477;</code>
     */
    public static final int THEME_BIRTH_CONTROL_VALUE = 477;
    /**
     * <code>THEME_SUPPORT = 478;</code>
     */
    public static final int THEME_SUPPORT_VALUE = 478;
    /**
     * <code>THEME_BEHIND = 479;</code>
     */
    public static final int THEME_BEHIND_VALUE = 479;
    /**
     * <code>THEME_CENTRAL_AFRICAN_REPUBLIC = 480;</code>
     */
    public static final int THEME_CENTRAL_AFRICAN_REPUBLIC_VALUE = 480;
    /**
     * <code>THEME_SEGREGATION = 481;</code>
     */
    public static final int THEME_SEGREGATION_VALUE = 481;
    /**
     * <code>THEME_SHARK = 482;</code>
     */
    public static final int THEME_SHARK_VALUE = 482;
    /**
     * <code>THEME_CELEBRATION = 483;</code>
     */
    public static final int THEME_CELEBRATION_VALUE = 483;
    /**
     * <code>THEME_FURNITURE = 484;</code>
     */
    public static final int THEME_FURNITURE_VALUE = 484;
    /**
     * <code>THEME_UTAH = 485;</code>
     */
    public static final int THEME_UTAH_VALUE = 485;
    /**
     * <code>THEME_BLESS = 486;</code>
     */
    public static final int THEME_BLESS_VALUE = 486;
    /**
     * <code>THEME_GOODNIGHT = 487;</code>
     */
    public static final int THEME_GOODNIGHT_VALUE = 487;
    /**
     * <code>THEME_GREECE = 488;</code>
     */
    public static final int THEME_GREECE_VALUE = 488;
    /**
     * <code>THEME_PRIVACY = 489;</code>
     */
    public static final int THEME_PRIVACY_VALUE = 489;
    /**
     * <code>THEME_SHOUTING = 490;</code>
     */
    public static final int THEME_SHOUTING_VALUE = 490;
    /**
     * <code>THEME_SOUTH_AFRICA = 491;</code>
     */
    public static final int THEME_SOUTH_AFRICA_VALUE = 491;
    /**
     * <code>THEME_WIFE = 492;</code>
     */
    public static final int THEME_WIFE_VALUE = 492;
    /**
     * <code>THEME_SPECIAL = 493;</code>
     */
    public static final int THEME_SPECIAL_VALUE = 493;
    /**
     * <code>THEME_WORK = 494;</code>
     */
    public static final int THEME_WORK_VALUE = 494;
    /**
     * <code>THEME_COMPUTER = 495;</code>
     */
    public static final int THEME_COMPUTER_VALUE = 495;
    /**
     * <code>THEME_GUYANA = 496;</code>
     */
    public static final int THEME_GUYANA_VALUE = 496;
    /**
     * <code>THEME_PLANET = 497;</code>
     */
    public static final int THEME_PLANET_VALUE = 497;
    /**
     * <code>THEME_NEW_DAY = 498;</code>
     */
    public static final int THEME_NEW_DAY_VALUE = 498;
    /**
     * <code>THEME_FAILURE = 499;</code>
     */
    public static final int THEME_FAILURE_VALUE = 499;
    /**
     * <code>THEME_WOMEN = 500;</code>
     */
    public static final int THEME_WOMEN_VALUE = 500;
    /**
     * <code>THEME_UNCLE = 501;</code>
     */
    public static final int THEME_UNCLE_VALUE = 501;
    /**
     * <code>THEME_AFTERNOON = 502;</code>
     */
    public static final int THEME_AFTERNOON_VALUE = 502;
    /**
     * <code>THEME_COLD = 503;</code>
     */
    public static final int THEME_COLD_VALUE = 503;
    /**
     * <code>THEME_SAVANNAH = 504;</code>
     */
    public static final int THEME_SAVANNAH_VALUE = 504;
    /**
     * <code>THEME_UKRAINE = 505;</code>
     */
    public static final int THEME_UKRAINE_VALUE = 505;
    /**
     * <code>THEME_MEN_TALKING_TO_MEN = 506;</code>
     */
    public static final int THEME_MEN_TALKING_TO_MEN_VALUE = 506;
    /**
     * <code>THEME_HOUSE = 507;</code>
     */
    public static final int THEME_HOUSE_VALUE = 507;
    /**
     * <code>THEME_LIES = 508;</code>
     */
    public static final int THEME_LIES_VALUE = 508;
    /**
     * <code>THEME_GOOD_LIFE = 509;</code>
     */
    public static final int THEME_GOOD_LIFE_VALUE = 509;
    /**
     * <code>THEME_TOBACCO = 510;</code>
     */
    public static final int THEME_TOBACCO_VALUE = 510;
    /**
     * <code>THEME_LOW = 511;</code>
     */
    public static final int THEME_LOW_VALUE = 511;
    /**
     * <code>THEME_IDEA = 512;</code>
     */
    public static final int THEME_IDEA_VALUE = 512;
    /**
     * <code>THEME_BEGINNING = 513;</code>
     */
    public static final int THEME_BEGINNING_VALUE = 513;
    /**
     * <code>THEME_CONNECTICUT = 514;</code>
     */
    public static final int THEME_CONNECTICUT_VALUE = 514;
    /**
     * <code>THEME_CRIME = 515;</code>
     */
    public static final int THEME_CRIME_VALUE = 515;
    /**
     * <code>THEME_COUNTRY = 516;</code>
     */
    public static final int THEME_COUNTRY_VALUE = 516;
    /**
     * <code>THEME_BERMUDA = 517;</code>
     */
    public static final int THEME_BERMUDA_VALUE = 517;
    /**
     * <code>THEME_ALWAYS = 518;</code>
     */
    public static final int THEME_ALWAYS_VALUE = 518;
    /**
     * <code>THEME_JAMAICA = 519;</code>
     */
    public static final int THEME_JAMAICA_VALUE = 519;
    /**
     * <code>THEME_TURKMENISTAN = 520;</code>
     */
    public static final int THEME_TURKMENISTAN_VALUE = 520;
    /**
     * <code>THEME_WRITE = 521;</code>
     */
    public static final int THEME_WRITE_VALUE = 521;
    /**
     * <code>THEME_DEFEATED = 522;</code>
     */
    public static final int THEME_DEFEATED_VALUE = 522;
    /**
     * <code>THEME_HELP = 523;</code>
     */
    public static final int THEME_HELP_VALUE = 523;
    /**
     * <code>THEME_COUPLE = 524;</code>
     */
    public static final int THEME_COUPLE_VALUE = 524;
    /**
     * <code>THEME_COOL = 525;</code>
     */
    public static final int THEME_COOL_VALUE = 525;
    /**
     * <code>THEME_THAILAND = 526;</code>
     */
    public static final int THEME_THAILAND_VALUE = 526;
    /**
     * <code>THEME_LECTURING = 527;</code>
     */
    public static final int THEME_LECTURING_VALUE = 527;
    /**
     * <code>THEME_FRAGILE = 528;</code>
     */
    public static final int THEME_FRAGILE_VALUE = 528;
    /**
     * <code>THEME_FAKE = 529;</code>
     */
    public static final int THEME_FAKE_VALUE = 529;
    /**
     * <code>THEME_AMSTERDAM = 530;</code>
     */
    public static final int THEME_AMSTERDAM_VALUE = 530;
    /**
     * <code>THEME_SAUDI_ARABIA = 531;</code>
     */
    public static final int THEME_SAUDI_ARABIA_VALUE = 531;
    /**
     * <code>THEME_MONSTER = 532;</code>
     */
    public static final int THEME_MONSTER_VALUE = 532;
    /**
     * <code>THEME_NEW_YORK_CITY = 533;</code>
     */
    public static final int THEME_NEW_YORK_CITY_VALUE = 533;
    /**
     * <code>THEME_WITCH = 534;</code>
     */
    public static final int THEME_WITCH_VALUE = 534;
    /**
     * <code>THEME_KUWAIT = 535;</code>
     */
    public static final int THEME_KUWAIT_VALUE = 535;
    /**
     * <code>THEME_BURKINA_FASO = 536;</code>
     */
    public static final int THEME_BURKINA_FASO_VALUE = 536;
    /**
     * <code>THEME_CROATIA = 537;</code>
     */
    public static final int THEME_CROATIA_VALUE = 537;
    /**
     * <code>THEME_LOST = 538;</code>
     */
    public static final int THEME_LOST_VALUE = 538;
    /**
     * <code>THEME_GUITAR = 539;</code>
     */
    public static final int THEME_GUITAR_VALUE = 539;
    /**
     * <code>THEME_MOVIE = 540;</code>
     */
    public static final int THEME_MOVIE_VALUE = 540;
    /**
     * <code>THEME_HIPPIE = 541;</code>
     */
    public static final int THEME_HIPPIE_VALUE = 541;
    /**
     * <code>THEME_FAIR = 542;</code>
     */
    public static final int THEME_FAIR_VALUE = 542;
    /**
     * <code>THEME_EL_SALVADOR = 543;</code>
     */
    public static final int THEME_EL_SALVADOR_VALUE = 543;
    /**
     * <code>THEME_ROAD = 544;</code>
     */
    public static final int THEME_ROAD_VALUE = 544;
    /**
     * <code>THEME_LOSS = 545;</code>
     */
    public static final int THEME_LOSS_VALUE = 545;
    /**
     * <code>THEME_SEARCHING_FOR = 546;</code>
     */
    public static final int THEME_SEARCHING_FOR_VALUE = 546;
    /**
     * <code>THEME_RHODE_ISLAND = 547;</code>
     */
    public static final int THEME_RHODE_ISLAND_VALUE = 547;
    /**
     * <code>THEME_FOUND = 548;</code>
     */
    public static final int THEME_FOUND_VALUE = 548;
    /**
     * <code>THEME_PREGNANCY = 549;</code>
     */
    public static final int THEME_PREGNANCY_VALUE = 549;
    /**
     * <code>THEME_SILENCE = 550;</code>
     */
    public static final int THEME_SILENCE_VALUE = 550;
    /**
     * <code>THEME_FEELINGS = 551;</code>
     */
    public static final int THEME_FEELINGS_VALUE = 551;
    /**
     * <code>THEME_CAPITAL_PUNISHMENT = 552;</code>
     */
    public static final int THEME_CAPITAL_PUNISHMENT_VALUE = 552;
    /**
     * <code>THEME_FAMILY = 553;</code>
     */
    public static final int THEME_FAMILY_VALUE = 553;
    /**
     * <code>THEME_HALLOWEEN = 554;</code>
     */
    public static final int THEME_HALLOWEEN_VALUE = 554;
    /**
     * <code>THEME_NONE = 555;</code>
     */
    public static final int THEME_NONE_VALUE = 555;
    /**
     * <code>THEME_DAY = 556;</code>
     */
    public static final int THEME_DAY_VALUE = 556;
    /**
     * <code>THEME_HELL = 557;</code>
     */
    public static final int THEME_HELL_VALUE = 557;
    /**
     * <code>THEME_BEAUTIFUL = 558;</code>
     */
    public static final int THEME_BEAUTIFUL_VALUE = 558;
    /**
     * <code>THEME_FALLING_IN = 559;</code>
     */
    public static final int THEME_FALLING_IN_VALUE = 559;
    /**
     * <code>THEME_UNFAITHFUL = 560;</code>
     */
    public static final int THEME_UNFAITHFUL_VALUE = 560;
    /**
     * <code>THEME_BEING_IN = 561;</code>
     */
    public static final int THEME_BEING_IN_VALUE = 561;
    /**
     * <code>THEME_DRINK = 562;</code>
     */
    public static final int THEME_DRINK_VALUE = 562;
    /**
     * <code>THEME_KNOWLEDGE = 563;</code>
     */
    public static final int THEME_KNOWLEDGE_VALUE = 563;
    /**
     * <code>THEME_SPORT = 564;</code>
     */
    public static final int THEME_SPORT_VALUE = 564;
    /**
     * <code>THEME_FAME = 565;</code>
     */
    public static final int THEME_FAME_VALUE = 565;
    /**
     * <code>THEME_AUSTRIA = 566;</code>
     */
    public static final int THEME_AUSTRIA_VALUE = 566;
    /**
     * <code>THEME_EXERCISE = 567;</code>
     */
    public static final int THEME_EXERCISE_VALUE = 567;
    /**
     * <code>THEME_TECHNOLOGY = 568;</code>
     */
    public static final int THEME_TECHNOLOGY_VALUE = 568;
    /**
     * <code>THEME_MONACO = 569;</code>
     */
    public static final int THEME_MONACO_VALUE = 569;
    /**
     * <code>THEME_INNOCENCE = 570;</code>
     */
    public static final int THEME_INNOCENCE_VALUE = 570;
    /**
     * <code>THEME_UGLY = 571;</code>
     */
    public static final int THEME_UGLY_VALUE = 571;
    /**
     * <code>THEME_CANDY = 572;</code>
     */
    public static final int THEME_CANDY_VALUE = 572;
    /**
     * <code>THEME_MEMPHIS = 573;</code>
     */
    public static final int THEME_MEMPHIS_VALUE = 573;
    /**
     * <code>THEME_HOSPITAL = 574;</code>
     */
    public static final int THEME_HOSPITAL_VALUE = 574;
    /**
     * <code>THEME_BELIEF = 575;</code>
     */
    public static final int THEME_BELIEF_VALUE = 575;
    /**
     * <code>THEME_KANSAS_CITY = 576;</code>
     */
    public static final int THEME_KANSAS_CITY_VALUE = 576;
    /**
     * <code>THEME_ROCK = 577;</code>
     */
    public static final int THEME_ROCK_VALUE = 577;
    /**
     * <code>THEME_AUTUMN = 578;</code>
     */
    public static final int THEME_AUTUMN_VALUE = 578;
    /**
     * <code>THEME_NOON = 579;</code>
     */
    public static final int THEME_NOON_VALUE = 579;
    /**
     * <code>THEME_YESTERDAY = 580;</code>
     */
    public static final int THEME_YESTERDAY_VALUE = 580;
    /**
     * <code>THEME_DAUGHTER = 581;</code>
     */
    public static final int THEME_DAUGHTER_VALUE = 581;
    /**
     * <code>THEME_SOUTH_AMERICA = 582;</code>
     */
    public static final int THEME_SOUTH_AMERICA_VALUE = 582;
    /**
     * <code>THEME_YOUTH = 583;</code>
     */
    public static final int THEME_YOUTH_VALUE = 583;
    /**
     * <code>THEME_PERCUSSION = 584;</code>
     */
    public static final int THEME_PERCUSSION_VALUE = 584;
    /**
     * <code>THEME_MANIPULATE = 585;</code>
     */
    public static final int THEME_MANIPULATE_VALUE = 585;
    /**
     * <code>THEME_MEDELL__II__N = 586;</code>
     */
    public static final int THEME_MEDELL__II__N_VALUE = 586;
    /**
     * <code>THEME_SIERRA_LEONE = 587;</code>
     */
    public static final int THEME_SIERRA_LEONE_VALUE = 587;
    /**
     * <code>THEME_ALBANIA = 588;</code>
     */
    public static final int THEME_ALBANIA_VALUE = 588;
    /**
     * <code>THEME_AUGUST = 589;</code>
     */
    public static final int THEME_AUGUST_VALUE = 589;
    /**
     * <code>THEME_UNITY = 590;</code>
     */
    public static final int THEME_UNITY_VALUE = 590;
    /**
     * <code>THEME_PACIFIC_ISLANDS = 591;</code>
     */
    public static final int THEME_PACIFIC_ISLANDS_VALUE = 591;
    /**
     * <code>THEME_LOVE = 592;</code>
     */
    public static final int THEME_LOVE_VALUE = 592;
    /**
     * <code>THEME_ENLISTMENT = 593;</code>
     */
    public static final int THEME_ENLISTMENT_VALUE = 593;
    /**
     * <code>THEME_SAD = 594;</code>
     */
    public static final int THEME_SAD_VALUE = 594;
    /**
     * <code>THEME_THEATRE = 595;</code>
     */
    public static final int THEME_THEATRE_VALUE = 595;
    /**
     * <code>THEME_FALL = 596;</code>
     */
    public static final int THEME_FALL_VALUE = 596;
    /**
     * <code>THEME_MARSHALL_ISLANDS = 597;</code>
     */
    public static final int THEME_MARSHALL_ISLANDS_VALUE = 597;
    /**
     * <code>THEME_ETHIOPIA = 598;</code>
     */
    public static final int THEME_ETHIOPIA_VALUE = 598;
    /**
     * <code>THEME_TEMPERATURE = 599;</code>
     */
    public static final int THEME_TEMPERATURE_VALUE = 599;
    /**
     * <code>THEME_WILD = 600;</code>
     */
    public static final int THEME_WILD_VALUE = 600;
    /**
     * <code>THEME_MENS_NAMES = 601;</code>
     */
    public static final int THEME_MENS_NAMES_VALUE = 601;
    /**
     * <code>THEME_LOSING_YOU = 602;</code>
     */
    public static final int THEME_LOSING_YOU_VALUE = 602;
    /**
     * <code>THEME_FORGET = 603;</code>
     */
    public static final int THEME_FORGET_VALUE = 603;
    /**
     * <code>THEME_POWER_AND_CONTROL = 604;</code>
     */
    public static final int THEME_POWER_AND_CONTROL_VALUE = 604;
    /**
     * <code>THEME_EARTH = 605;</code>
     */
    public static final int THEME_EARTH_VALUE = 605;
    /**
     * <code>THEME_WASTEFUL = 606;</code>
     */
    public static final int THEME_WASTEFUL_VALUE = 606;
    /**
     * <code>THEME_TOGETHERNESS = 607;</code>
     */
    public static final int THEME_TOGETHERNESS_VALUE = 607;
    /**
     * <code>THEME_THREATEN = 608;</code>
     */
    public static final int THEME_THREATEN_VALUE = 608;
    /**
     * <code>THEME_PAKISTAN = 609;</code>
     */
    public static final int THEME_PAKISTAN_VALUE = 609;
    /**
     * <code>THEME_DINOSAUR = 610;</code>
     */
    public static final int THEME_DINOSAUR_VALUE = 610;
    /**
     * <code>THEME_ATLANTA = 611;</code>
     */
    public static final int THEME_ATLANTA_VALUE = 611;
    /**
     * <code>THEME_GAMBIA = 612;</code>
     */
    public static final int THEME_GAMBIA_VALUE = 612;
    /**
     * <code>THEME_QATAR = 613;</code>
     */
    public static final int THEME_QATAR_VALUE = 613;
    /**
     * <code>THEME_CROCODILE = 614;</code>
     */
    public static final int THEME_CROCODILE_VALUE = 614;
    /**
     * <code>THEME_DANGER = 615;</code>
     */
    public static final int THEME_DANGER_VALUE = 615;
    /**
     * <code>THEME_SERBIA = 616;</code>
     */
    public static final int THEME_SERBIA_VALUE = 616;
    /**
     * <code>THEME_DRUG = 617;</code>
     */
    public static final int THEME_DRUG_VALUE = 617;
    /**
     * <code>THEME_JUKEBOX = 618;</code>
     */
    public static final int THEME_JUKEBOX_VALUE = 618;
    /**
     * <code>THEME_FLOWER = 619;</code>
     */
    public static final int THEME_FLOWER_VALUE = 619;
    /**
     * <code>THEME_ZODIAC = 620;</code>
     */
    public static final int THEME_ZODIAC_VALUE = 620;
    /**
     * <code>THEME_BAD = 621;</code>
     */
    public static final int THEME_BAD_VALUE = 621;
    /**
     * <code>THEME_FROG = 622;</code>
     */
    public static final int THEME_FROG_VALUE = 622;
    /**
     * <code>THEME_SHAME = 623;</code>
     */
    public static final int THEME_SHAME_VALUE = 623;
    /**
     * <code>THEME_RWANDA = 624;</code>
     */
    public static final int THEME_RWANDA_VALUE = 624;
    /**
     * <code>THEME_ETERNITY = 625;</code>
     */
    public static final int THEME_ETERNITY_VALUE = 625;
    /**
     * <code>THEME_SPIRIT = 626;</code>
     */
    public static final int THEME_SPIRIT_VALUE = 626;
    /**
     * <code>THEME_DATE = 627;</code>
     */
    public static final int THEME_DATE_VALUE = 627;
    /**
     * <code>THEME_BANGLADESH = 628;</code>
     */
    public static final int THEME_BANGLADESH_VALUE = 628;
    /**
     * <code>THEME_TODAY = 629;</code>
     */
    public static final int THEME_TODAY_VALUE = 629;
    /**
     * <code>THEME_BARBADOS = 630;</code>
     */
    public static final int THEME_BARBADOS_VALUE = 630;
    /**
     * <code>THEME_FIX = 631;</code>
     */
    public static final int THEME_FIX_VALUE = 631;
    /**
     * <code>THEME_DONT_LEAVE_ME = 632;</code>
     */
    public static final int THEME_DONT_LEAVE_ME_VALUE = 632;
    /**
     * <code>THEME_DENMARK = 633;</code>
     */
    public static final int THEME_DENMARK_VALUE = 633;
    /**
     * <code>THEME_POLITICS = 634;</code>
     */
    public static final int THEME_POLITICS_VALUE = 634;
    /**
     * <code>THEME_BAY = 635;</code>
     */
    public static final int THEME_BAY_VALUE = 635;
    /**
     * <code>THEME_FIGHT = 636;</code>
     */
    public static final int THEME_FIGHT_VALUE = 636;
    /**
     * <code>THEME_GRANDPARENT = 637;</code>
     */
    public static final int THEME_GRANDPARENT_VALUE = 637;
    /**
     * <code>THEME_YOU = 638;</code>
     */
    public static final int THEME_YOU_VALUE = 638;
    /**
     * <code>THEME_INTEGRITY = 639;</code>
     */
    public static final int THEME_INTEGRITY_VALUE = 639;
    /**
     * <code>THEME_EUROPEAN_ECONOMIC_AREA = 640;</code>
     */
    public static final int THEME_EUROPEAN_ECONOMIC_AREA_VALUE = 640;
    /**
     * <code>THEME_HEART = 641;</code>
     */
    public static final int THEME_HEART_VALUE = 641;
    /**
     * <code>THEME_STORM = 642;</code>
     */
    public static final int THEME_STORM_VALUE = 642;
    /**
     * <code>THEME_WIND = 643;</code>
     */
    public static final int THEME_WIND_VALUE = 643;
    /**
     * <code>THEME_LEFT = 644;</code>
     */
    public static final int THEME_LEFT_VALUE = 644;
    /**
     * <code>THEME_SOCIAL_OUTCAST = 645;</code>
     */
    public static final int THEME_SOCIAL_OUTCAST_VALUE = 645;
    /**
     * <code>THEME_CAMBODIA = 646;</code>
     */
    public static final int THEME_CAMBODIA_VALUE = 646;
    /**
     * <code>THEME_STOP = 647;</code>
     */
    public static final int THEME_STOP_VALUE = 647;
    /**
     * <code>THEME_IDEAL = 648;</code>
     */
    public static final int THEME_IDEAL_VALUE = 648;
    /**
     * <code>THEME_SIZE = 649;</code>
     */
    public static final int THEME_SIZE_VALUE = 649;
    /**
     * <code>THEME_SWAMP = 650;</code>
     */
    public static final int THEME_SWAMP_VALUE = 650;
    /**
     * <code>THEME_JEWELRY = 651;</code>
     */
    public static final int THEME_JEWELRY_VALUE = 651;
    /**
     * <code>THEME_BLACK = 652;</code>
     */
    public static final int THEME_BLACK_VALUE = 652;
    /**
     * <code>THEME_PONY = 653;</code>
     */
    public static final int THEME_PONY_VALUE = 653;
    /**
     * <code>THEME_PARAGUAY = 654;</code>
     */
    public static final int THEME_PARAGUAY_VALUE = 654;
    /**
     * <code>THEME_BALKANS = 655;</code>
     */
    public static final int THEME_BALKANS_VALUE = 655;
    /**
     * <code>THEME_SUCCESS = 656;</code>
     */
    public static final int THEME_SUCCESS_VALUE = 656;
    /**
     * <code>THEME_WEAPON = 657;</code>
     */
    public static final int THEME_WEAPON_VALUE = 657;
    /**
     * <code>THEME_SYRIA = 658;</code>
     */
    public static final int THEME_SYRIA_VALUE = 658;
    /**
     * <code>THEME_IDEAS = 659;</code>
     */
    public static final int THEME_IDEAS_VALUE = 659;
    /**
     * <code>THEME_DREAM = 660;</code>
     */
    public static final int THEME_DREAM_VALUE = 660;
    /**
     * <code>THEME_GROW_OLDER = 661;</code>
     */
    public static final int THEME_GROW_OLDER_VALUE = 661;
    /**
     * <code>THEME_CARD_GAME = 662;</code>
     */
    public static final int THEME_CARD_GAME_VALUE = 662;
    /**
     * <code>THEME_DAWN = 663;</code>
     */
    public static final int THEME_DAWN_VALUE = 663;
    /**
     * <code>THEME_RANCH = 664;</code>
     */
    public static final int THEME_RANCH_VALUE = 664;
    /**
     * <code>THEME_LION = 665;</code>
     */
    public static final int THEME_LION_VALUE = 665;
    /**
     * <code>THEME_CALL_OUT = 666;</code>
     */
    public static final int THEME_CALL_OUT_VALUE = 666;
    /**
     * <code>THEME_HAIR = 667;</code>
     */
    public static final int THEME_HAIR_VALUE = 667;
    /**
     * <code>THEME_ANGER = 668;</code>
     */
    public static final int THEME_ANGER_VALUE = 668;
    /**
     * <code>THEME_FRENCH_POLYNESIA = 669;</code>
     */
    public static final int THEME_FRENCH_POLYNESIA_VALUE = 669;
    /**
     * <code>THEME_VATICAN = 670;</code>
     */
    public static final int THEME_VATICAN_VALUE = 670;
    /**
     * <code>THEME_RODEO = 671;</code>
     */
    public static final int THEME_RODEO_VALUE = 671;
    /**
     * <code>THEME_ANGEL = 672;</code>
     */
    public static final int THEME_ANGEL_VALUE = 672;
    /**
     * <code>THEME_ANNIVERSARY = 673;</code>
     */
    public static final int THEME_ANNIVERSARY_VALUE = 673;
    /**
     * <code>THEME_WOODWIND = 674;</code>
     */
    public static final int THEME_WOODWIND_VALUE = 674;
    /**
     * <code>THEME_METHOD = 675;</code>
     */
    public static final int THEME_METHOD_VALUE = 675;
    /**
     * <code>THEME_CALIFORNIA = 676;</code>
     */
    public static final int THEME_CALIFORNIA_VALUE = 676;
    /**
     * <code>THEME_HOT = 677;</code>
     */
    public static final int THEME_HOT_VALUE = 677;
    /**
     * <code>THEME_BAHRAIN = 678;</code>
     */
    public static final int THEME_BAHRAIN_VALUE = 678;
    /**
     * <code>THEME_SEA = 679;</code>
     */
    public static final int THEME_SEA_VALUE = 679;
    /**
     * <code>THEME_CHASE = 680;</code>
     */
    public static final int THEME_CHASE_VALUE = 680;
    /**
     * <code>THEME_HOLLYWOOD = 681;</code>
     */
    public static final int THEME_HOLLYWOOD_VALUE = 681;
    /**
     * <code>THEME_AMBIVALENT = 682;</code>
     */
    public static final int THEME_AMBIVALENT_VALUE = 682;
    /**
     * <code>THEME_HONESTY = 683;</code>
     */
    public static final int THEME_HONESTY_VALUE = 683;
    /**
     * <code>THEME_MISSISSIPPI = 684;</code>
     */
    public static final int THEME_MISSISSIPPI_VALUE = 684;
    /**
     * <code>THEME_DEVIL = 685;</code>
     */
    public static final int THEME_DEVIL_VALUE = 685;
    /**
     * <code>THEME_SAIL = 686;</code>
     */
    public static final int THEME_SAIL_VALUE = 686;
    /**
     * <code>THEME_COMOROS = 687;</code>
     */
    public static final int THEME_COMOROS_VALUE = 687;
    /**
     * <code>THEME_HERO = 688;</code>
     */
    public static final int THEME_HERO_VALUE = 688;
    /**
     * <code>THEME_CITY_LIFE = 689;</code>
     */
    public static final int THEME_CITY_LIFE_VALUE = 689;
    /**
     * <code>THEME_POLITICAL = 690;</code>
     */
    public static final int THEME_POLITICAL_VALUE = 690;
    /**
     * <code>THEME_CANT_GET_OVER = 691;</code>
     */
    public static final int THEME_CANT_GET_OVER_VALUE = 691;
    /**
     * <code>THEME_STRING_AND_ROPE = 692;</code>
     */
    public static final int THEME_STRING_AND_ROPE_VALUE = 692;
    /**
     * <code>THEME_FABRIC = 693;</code>
     */
    public static final int THEME_FABRIC_VALUE = 693;
    /**
     * <code>THEME_MARYLAND = 694;</code>
     */
    public static final int THEME_MARYLAND_VALUE = 694;
    /**
     * <code>THEME_WEEK = 695;</code>
     */
    public static final int THEME_WEEK_VALUE = 695;
    /**
     * <code>THEME_HOLDING_ON = 696;</code>
     */
    public static final int THEME_HOLDING_ON_VALUE = 696;
    /**
     * <code>THEME_ADOLESCENCE = 697;</code>
     */
    public static final int THEME_ADOLESCENCE_VALUE = 697;
    /**
     * <code>THEME_ERITREA = 698;</code>
     */
    public static final int THEME_ERITREA_VALUE = 698;
    /**
     * <code>THEME_LIPS = 699;</code>
     */
    public static final int THEME_LIPS_VALUE = 699;
    /**
     * <code>THEME_OKLAHOMA = 700;</code>
     */
    public static final int THEME_OKLAHOMA_VALUE = 700;
    /**
     * <code>THEME_CONFUSED = 701;</code>
     */
    public static final int THEME_CONFUSED_VALUE = 701;
    /**
     * <code>THEME_ARKANSAS = 702;</code>
     */
    public static final int THEME_ARKANSAS_VALUE = 702;
    /**
     * <code>THEME_TIGER = 703;</code>
     */
    public static final int THEME_TIGER_VALUE = 703;
    /**
     * <code>THEME_REUNITE = 704;</code>
     */
    public static final int THEME_REUNITE_VALUE = 704;
    /**
     * <code>THEME_FLY = 705;</code>
     */
    public static final int THEME_FLY_VALUE = 705;
    /**
     * <code>THEME_OCTOBER = 706;</code>
     */
    public static final int THEME_OCTOBER_VALUE = 706;
    /**
     * <code>THEME_SOBER = 707;</code>
     */
    public static final int THEME_SOBER_VALUE = 707;
    /**
     * <code>THEME_STRANGE = 708;</code>
     */
    public static final int THEME_STRANGE_VALUE = 708;
    /**
     * <code>THEME_OCEAN = 709;</code>
     */
    public static final int THEME_OCEAN_VALUE = 709;
    /**
     * <code>THEME_NEW_YORK = 710;</code>
     */
    public static final int THEME_NEW_YORK_VALUE = 710;
    /**
     * <code>THEME_BOUNCE = 711;</code>
     */
    public static final int THEME_BOUNCE_VALUE = 711;
    /**
     * <code>THEME_NECK = 712;</code>
     */
    public static final int THEME_NECK_VALUE = 712;
    /**
     * <code>THEME_BULGARIA = 713;</code>
     */
    public static final int THEME_BULGARIA_VALUE = 713;
    /**
     * <code>THEME_SEASON = 714;</code>
     */
    public static final int THEME_SEASON_VALUE = 714;
    /**
     * <code>THEME_FAST = 715;</code>
     */
    public static final int THEME_FAST_VALUE = 715;
    /**
     * <code>THEME_LEGS = 716;</code>
     */
    public static final int THEME_LEGS_VALUE = 716;
    /**
     * <code>THEME_BEG = 717;</code>
     */
    public static final int THEME_BEG_VALUE = 717;
    /**
     * <code>THEME_BLUE = 718;</code>
     */
    public static final int THEME_BLUE_VALUE = 718;
    /**
     * <code>THEME_REPUBLIC_OF_THE_CONGO = 719;</code>
     */
    public static final int THEME_REPUBLIC_OF_THE_CONGO_VALUE = 719;
    /**
     * <code>THEME_COURAGE = 720;</code>
     */
    public static final int THEME_COURAGE_VALUE = 720;
    /**
     * <code>THEME_NEAR = 721;</code>
     */
    public static final int THEME_NEAR_VALUE = 721;
    /**
     * <code>THEME_KENYA = 722;</code>
     */
    public static final int THEME_KENYA_VALUE = 722;
    /**
     * <code>THEME_TELEVISION = 723;</code>
     */
    public static final int THEME_TELEVISION_VALUE = 723;
    /**
     * <code>THEME_THURSDAY = 724;</code>
     */
    public static final int THEME_THURSDAY_VALUE = 724;
    /**
     * <code>THEME_HOLIDAY = 725;</code>
     */
    public static final int THEME_HOLIDAY_VALUE = 725;
    /**
     * <code>THEME_MOTORCYCLES = 726;</code>
     */
    public static final int THEME_MOTORCYCLES_VALUE = 726;
    /**
     * <code>THEME_BALLERINA = 727;</code>
     */
    public static final int THEME_BALLERINA_VALUE = 727;
    /**
     * <code>THEME_FARM = 728;</code>
     */
    public static final int THEME_FARM_VALUE = 728;
    /**
     * <code>THEME_INDIVIDUALITY = 729;</code>
     */
    public static final int THEME_INDIVIDUALITY_VALUE = 729;
    /**
     * <code>THEME_DANCE = 730;</code>
     */
    public static final int THEME_DANCE_VALUE = 730;
    /**
     * <code>THEME_DRIFT = 731;</code>
     */
    public static final int THEME_DRIFT_VALUE = 731;
    /**
     * <code>THEME_ISRAEL = 732;</code>
     */
    public static final int THEME_ISRAEL_VALUE = 732;
    /**
     * <code>THEME_BETRAY = 733;</code>
     */
    public static final int THEME_BETRAY_VALUE = 733;
    /**
     * <code>THEME_FATHER = 734;</code>
     */
    public static final int THEME_FATHER_VALUE = 734;
    /**
     * <code>THEME_PLACE = 735;</code>
     */
    public static final int THEME_PLACE_VALUE = 735;
    /**
     * <code>THEME_TAJIKISTAN = 736;</code>
     */
    public static final int THEME_TAJIKISTAN_VALUE = 736;
    /**
     * <code>THEME_REVOLUTION = 737;</code>
     */
    public static final int THEME_REVOLUTION_VALUE = 737;
    /**
     * <code>THEME_ASTRONAUT = 738;</code>
     */
    public static final int THEME_ASTRONAUT_VALUE = 738;
    /**
     * <code>THEME_REVOLVE = 739;</code>
     */
    public static final int THEME_REVOLVE_VALUE = 739;
    /**
     * <code>THEME_MONDAY = 740;</code>
     */
    public static final int THEME_MONDAY_VALUE = 740;
    /**
     * <code>THEME_WYOMING = 741;</code>
     */
    public static final int THEME_WYOMING_VALUE = 741;
    /**
     * <code>THEME_IDENTITY_CRISIS = 742;</code>
     */
    public static final int THEME_IDENTITY_CRISIS_VALUE = 742;
    /**
     * <code>THEME_TATTOO = 743;</code>
     */
    public static final int THEME_TATTOO_VALUE = 743;
    /**
     * <code>THEME_MALAYSIA = 744;</code>
     */
    public static final int THEME_MALAYSIA_VALUE = 744;
    /**
     * <code>THEME_BODY_LANGUAGE = 745;</code>
     */
    public static final int THEME_BODY_LANGUAGE_VALUE = 745;
    /**
     * <code>THEME_NEED = 746;</code>
     */
    public static final int THEME_NEED_VALUE = 746;
    /**
     * <code>THEME_PLATONIC = 747;</code>
     */
    public static final int THEME_PLATONIC_VALUE = 747;
    /**
     * <code>THEME_ROME = 748;</code>
     */
    public static final int THEME_ROME_VALUE = 748;
    /**
     * <code>THEME_HELLO = 749;</code>
     */
    public static final int THEME_HELLO_VALUE = 749;
    /**
     * <code>THEME_EUROPEAN_ECONOMIC_COMMUNITY = 750;</code>
     */
    public static final int THEME_EUROPEAN_ECONOMIC_COMMUNITY_VALUE = 750;
    /**
     * <code>THEME_FRIDAY = 751;</code>
     */
    public static final int THEME_FRIDAY_VALUE = 751;
    /**
     * <code>THEME_ENEMY = 752;</code>
     */
    public static final int THEME_ENEMY_VALUE = 752;
    /**
     * <code>THEME_BIRTHDAY_PARTY = 753;</code>
     */
    public static final int THEME_BIRTHDAY_PARTY_VALUE = 753;
    /**
     * <code>THEME_HONEYMOON = 754;</code>
     */
    public static final int THEME_HONEYMOON_VALUE = 754;
    /**
     * <code>THEME_INSIGHT = 755;</code>
     */
    public static final int THEME_INSIGHT_VALUE = 755;
    /**
     * <code>THEME_NORTH = 756;</code>
     */
    public static final int THEME_NORTH_VALUE = 756;
    /**
     * <code>THEME_TEACH = 757;</code>
     */
    public static final int THEME_TEACH_VALUE = 757;
    /**
     * <code>THEME_DEFEAT = 758;</code>
     */
    public static final int THEME_DEFEAT_VALUE = 758;
    /**
     * <code>THEME_LOVELY = 759;</code>
     */
    public static final int THEME_LOVELY_VALUE = 759;
    /**
     * <code>THEME_DATING = 760;</code>
     */
    public static final int THEME_DATING_VALUE = 760;
    /**
     * <code>THEME_PROPHECY = 761;</code>
     */
    public static final int THEME_PROPHECY_VALUE = 761;
    /**
     * <code>THEME_SAME = 762;</code>
     */
    public static final int THEME_SAME_VALUE = 762;
    /**
     * <code>THEME_GOLD = 763;</code>
     */
    public static final int THEME_GOLD_VALUE = 763;
    /**
     * <code>THEME_WIZARDRY = 764;</code>
     */
    public static final int THEME_WIZARDRY_VALUE = 764;
    /**
     * <code>THEME_TALKING = 765;</code>
     */
    public static final int THEME_TALKING_VALUE = 765;
    /**
     * <code>THEME_GOLF = 766;</code>
     */
    public static final int THEME_GOLF_VALUE = 766;
    /**
     * <code>THEME_ATTITUDE = 767;</code>
     */
    public static final int THEME_ATTITUDE_VALUE = 767;
    /**
     * <code>THEME_SHY = 768;</code>
     */
    public static final int THEME_SHY_VALUE = 768;
    /**
     * <code>THEME_GYPSY = 769;</code>
     */
    public static final int THEME_GYPSY_VALUE = 769;
    /**
     * <code>THEME_COLOR = 770;</code>
     */
    public static final int THEME_COLOR_VALUE = 770;
    /**
     * <code>THEME_HUNDRED = 771;</code>
     */
    public static final int THEME_HUNDRED_VALUE = 771;
    /**
     * <code>THEME_SPACED_OUT = 772;</code>
     */
    public static final int THEME_SPACED_OUT_VALUE = 772;
    /**
     * <code>THEME_FATE = 773;</code>
     */
    public static final int THEME_FATE_VALUE = 773;
    /**
     * <code>THEME_FOX = 774;</code>
     */
    public static final int THEME_FOX_VALUE = 774;
    /**
     * <code>THEME_EMPOWERED = 775;</code>
     */
    public static final int THEME_EMPOWERED_VALUE = 775;
    /**
     * <code>THEME_BATTLE_OF_THE_SEXES = 776;</code>
     */
    public static final int THEME_BATTLE_OF_THE_SEXES_VALUE = 776;
    /**
     * <code>THEME_SILVER = 777;</code>
     */
    public static final int THEME_SILVER_VALUE = 777;
    /**
     * <code>THEME_ANTI_DRUG = 778;</code>
     */
    public static final int THEME_ANTI_DRUG_VALUE = 778;
    /**
     * <code>THEME_ELEPHANT = 779;</code>
     */
    public static final int THEME_ELEPHANT_VALUE = 779;
    /**
     * <code>THEME_STICK = 780;</code>
     */
    public static final int THEME_STICK_VALUE = 780;
    /**
     * <code>THEME_OBJECTS = 781;</code>
     */
    public static final int THEME_OBJECTS_VALUE = 781;
    /**
     * <code>THEME_ITALY = 782;</code>
     */
    public static final int THEME_ITALY_VALUE = 782;
    /**
     * <code>THEME_SIN = 783;</code>
     */
    public static final int THEME_SIN_VALUE = 783;
    /**
     * <code>THEME_TURN = 784;</code>
     */
    public static final int THEME_TURN_VALUE = 784;
    /**
     * <code>THEME_COMMITMENT = 785;</code>
     */
    public static final int THEME_COMMITMENT_VALUE = 785;
    /**
     * <code>THEME_LOYALTY = 786;</code>
     */
    public static final int THEME_LOYALTY_VALUE = 786;
    /**
     * <code>THEME_MARDI_GRAS = 787;</code>
     */
    public static final int THEME_MARDI_GRAS_VALUE = 787;
    /**
     * <code>THEME_SIT = 788;</code>
     */
    public static final int THEME_SIT_VALUE = 788;
    /**
     * <code>THEME_MEASUREMENT = 789;</code>
     */
    public static final int THEME_MEASUREMENT_VALUE = 789;
    /**
     * <code>THEME_HARBOR = 790;</code>
     */
    public static final int THEME_HARBOR_VALUE = 790;
    /**
     * <code>THEME_TRADITION = 791;</code>
     */
    public static final int THEME_TRADITION_VALUE = 791;
    /**
     * <code>THEME_SCOTLAND = 792;</code>
     */
    public static final int THEME_SCOTLAND_VALUE = 792;
    /**
     * <code>THEME_BLONDE = 793;</code>
     */
    public static final int THEME_BLONDE_VALUE = 793;
    /**
     * <code>THEME_PORPOISE = 794;</code>
     */
    public static final int THEME_PORPOISE_VALUE = 794;
    /**
     * <code>THEME_MONEY = 795;</code>
     */
    public static final int THEME_MONEY_VALUE = 795;
    /**
     * <code>THEME_SAINT_VINCENT_AND_THE_GRENADINES = 796;</code>
     */
    public static final int THEME_SAINT_VINCENT_AND_THE_GRENADINES_VALUE = 796;
    /**
     * <code>THEME_SCHOOL = 797;</code>
     */
    public static final int THEME_SCHOOL_VALUE = 797;
    /**
     * <code>THEME_NUMBER = 798;</code>
     */
    public static final int THEME_NUMBER_VALUE = 798;
    /**
     * <code>THEME_RAINBOW = 799;</code>
     */
    public static final int THEME_RAINBOW_VALUE = 799;
    /**
     * <code>THEME_CHILDREN = 800;</code>
     */
    public static final int THEME_CHILDREN_VALUE = 800;
    /**
     * <code>THEME_MILLION = 801;</code>
     */
    public static final int THEME_MILLION_VALUE = 801;
    /**
     * <code>THEME_KYRGYZSTAN = 802;</code>
     */
    public static final int THEME_KYRGYZSTAN_VALUE = 802;
    /**
     * <code>THEME_BIG = 803;</code>
     */
    public static final int THEME_BIG_VALUE = 803;
    /**
     * <code>THEME_SPEED = 804;</code>
     */
    public static final int THEME_SPEED_VALUE = 804;
    /**
     * <code>THEME_GARDEN = 805;</code>
     */
    public static final int THEME_GARDEN_VALUE = 805;
    /**
     * <code>THEME_TOGO = 806;</code>
     */
    public static final int THEME_TOGO_VALUE = 806;
    /**
     * <code>THEME_TAROT = 807;</code>
     */
    public static final int THEME_TAROT_VALUE = 807;
    /**
     * <code>THEME_UZBEKISTAN = 808;</code>
     */
    public static final int THEME_UZBEKISTAN_VALUE = 808;
    /**
     * <code>THEME_UNIVERSE = 809;</code>
     */
    public static final int THEME_UNIVERSE_VALUE = 809;
    /**
     * <code>THEME_NEW_YEAR = 810;</code>
     */
    public static final int THEME_NEW_YEAR_VALUE = 810;
    /**
     * <code>THEME_FOOTBALL = 811;</code>
     */
    public static final int THEME_FOOTBALL_VALUE = 811;
    /**
     * <code>THEME_WISH = 812;</code>
     */
    public static final int THEME_WISH_VALUE = 812;
    /**
     * <code>THEME_BOSNIA_AND_HERZEGOVINA = 813;</code>
     */
    public static final int THEME_BOSNIA_AND_HERZEGOVINA_VALUE = 813;
    /**
     * <code>THEME_SKI = 814;</code>
     */
    public static final int THEME_SKI_VALUE = 814;
    /**
     * <code>THEME_COUNTRY_LIFE = 815;</code>
     */
    public static final int THEME_COUNTRY_LIFE_VALUE = 815;
    /**
     * <code>THEME_SAN_ANTONIO = 816;</code>
     */
    public static final int THEME_SAN_ANTONIO_VALUE = 816;
    /**
     * <code>THEME_INSOMNIA = 817;</code>
     */
    public static final int THEME_INSOMNIA_VALUE = 817;
    /**
     * <code>THEME_PURPLE = 818;</code>
     */
    public static final int THEME_PURPLE_VALUE = 818;
    /**
     * <code>THEME_PIRATE = 819;</code>
     */
    public static final int THEME_PIRATE_VALUE = 819;
    /**
     * <code>THEME_OHIO = 820;</code>
     */
    public static final int THEME_OHIO_VALUE = 820;
    /**
     * <code>THEME_GOOD = 821;</code>
     */
    public static final int THEME_GOOD_VALUE = 821;
    /**
     * <code>THEME_MIDNIGHT = 822;</code>
     */
    public static final int THEME_MIDNIGHT_VALUE = 822;
    /**
     * <code>THEME_NIGHTINGALE = 823;</code>
     */
    public static final int THEME_NIGHTINGALE_VALUE = 823;
    /**
     * <code>THEME_DOMINICA = 824;</code>
     */
    public static final int THEME_DOMINICA_VALUE = 824;
    /**
     * <code>THEME_SKY = 825;</code>
     */
    public static final int THEME_SKY_VALUE = 825;
    /**
     * <code>THEME_FAREWELL = 826;</code>
     */
    public static final int THEME_FAREWELL_VALUE = 826;
    /**
     * <code>THEME_LASTING = 827;</code>
     */
    public static final int THEME_LASTING_VALUE = 827;
    /**
     * <code>THEME_RESPECT = 828;</code>
     */
    public static final int THEME_RESPECT_VALUE = 828;
    /**
     * <code>THEME_SUDAN = 829;</code>
     */
    public static final int THEME_SUDAN_VALUE = 829;
    /**
     * <code>THEME_WIND_CHIMES = 830;</code>
     */
    public static final int THEME_WIND_CHIMES_VALUE = 830;
    /**
     * <code>THEME_PORTUGAL = 831;</code>
     */
    public static final int THEME_PORTUGAL_VALUE = 831;
    /**
     * <code>THEME_PRESIDENT = 832;</code>
     */
    public static final int THEME_PRESIDENT_VALUE = 832;
    /**
     * <code>THEME_LATVIA = 833;</code>
     */
    public static final int THEME_LATVIA_VALUE = 833;
    /**
     * <code>THEME_DECEMBER = 834;</code>
     */
    public static final int THEME_DECEMBER_VALUE = 834;
    /**
     * <code>THEME_COMPLAIN = 835;</code>
     */
    public static final int THEME_COMPLAIN_VALUE = 835;
    /**
     * <code>THEME_ESPIONAGE = 836;</code>
     */
    public static final int THEME_ESPIONAGE_VALUE = 836;
    /**
     * <code>THEME_DIFFICULT = 837;</code>
     */
    public static final int THEME_DIFFICULT_VALUE = 837;
    /**
     * <code>THEME_CELEBRITY = 838;</code>
     */
    public static final int THEME_CELEBRITY_VALUE = 838;
    /**
     * <code>THEME_GUATEMALA = 839;</code>
     */
    public static final int THEME_GUATEMALA_VALUE = 839;
    /**
     * <code>THEME_CRUCIFIXION = 840;</code>
     */
    public static final int THEME_CRUCIFIXION_VALUE = 840;
    /**
     * <code>THEME_DOG = 841;</code>
     */
    public static final int THEME_DOG_VALUE = 841;
    /**
     * <code>THEME_DISTANCE = 842;</code>
     */
    public static final int THEME_DISTANCE_VALUE = 842;
    /**
     * <code>THEME_HUMAN = 843;</code>
     */
    public static final int THEME_HUMAN_VALUE = 843;
    /**
     * <code>THEME_TANZANIA = 844;</code>
     */
    public static final int THEME_TANZANIA_VALUE = 844;
    /**
     * <code>THEME_DELAWARE = 845;</code>
     */
    public static final int THEME_DELAWARE_VALUE = 845;
    /**
     * <code>THEME_FLORIDA = 846;</code>
     */
    public static final int THEME_FLORIDA_VALUE = 846;
    /**
     * <code>THEME_ISLAND = 847;</code>
     */
    public static final int THEME_ISLAND_VALUE = 847;
    /**
     * <code>THEME_TOMORROW = 848;</code>
     */
    public static final int THEME_TOMORROW_VALUE = 848;
    /**
     * <code>THEME_GIRLS = 849;</code>
     */
    public static final int THEME_GIRLS_VALUE = 849;
    /**
     * <code>THEME_INDIA = 850;</code>
     */
    public static final int THEME_INDIA_VALUE = 850;
    /**
     * <code>THEME_ATTRACTIVE = 851;</code>
     */
    public static final int THEME_ATTRACTIVE_VALUE = 851;
    /**
     * <code>THEME_READY = 852;</code>
     */
    public static final int THEME_READY_VALUE = 852;
    /**
     * <code>THEME_CANADA = 853;</code>
     */
    public static final int THEME_CANADA_VALUE = 853;
    /**
     * <code>THEME_TRAIL = 854;</code>
     */
    public static final int THEME_TRAIL_VALUE = 854;
    /**
     * <code>THEME_BASEBALL = 855;</code>
     */
    public static final int THEME_BASEBALL_VALUE = 855;
    /**
     * <code>THEME_YELLOW = 856;</code>
     */
    public static final int THEME_YELLOW_VALUE = 856;
    /**
     * <code>THEME_UNITED_KINGDOM = 857;</code>
     */
    public static final int THEME_UNITED_KINGDOM_VALUE = 857;
    /**
     * <code>THEME_MUSICAL_INSTRUMENT = 858;</code>
     */
    public static final int THEME_MUSICAL_INSTRUMENT_VALUE = 858;
    /**
     * <code>THEME_TAIWAN = 859;</code>
     */
    public static final int THEME_TAIWAN_VALUE = 859;
    /**
     * <code>THEME_DAYDREAM = 860;</code>
     */
    public static final int THEME_DAYDREAM_VALUE = 860;
    /**
     * <code>THEME_DANCE_PARTY = 861;</code>
     */
    public static final int THEME_DANCE_PARTY_VALUE = 861;
    /**
     * <code>THEME_RIDE = 862;</code>
     */
    public static final int THEME_RIDE_VALUE = 862;
    /**
     * <code>THEME_GERMANY = 863;</code>
     */
    public static final int THEME_GERMANY_VALUE = 863;
    /**
     * <code>THEME_MAY = 864;</code>
     */
    public static final int THEME_MAY_VALUE = 864;
    /**
     * <code>THEME_BATHROOM = 865;</code>
     */
    public static final int THEME_BATHROOM_VALUE = 865;
    /**
     * <code>THEME_RABBIT = 866;</code>
     */
    public static final int THEME_RABBIT_VALUE = 866;
    /**
     * <code>THEME_RIGHT = 867;</code>
     */
    public static final int THEME_RIGHT_VALUE = 867;
    /**
     * <code>THEME_SOMALIA = 868;</code>
     */
    public static final int THEME_SOMALIA_VALUE = 868;
    /**
     * <code>THEME_CONVERSATION = 869;</code>
     */
    public static final int THEME_CONVERSATION_VALUE = 869;
    /**
     * <code>THEME_KIRIBATI = 870;</code>
     */
    public static final int THEME_KIRIBATI_VALUE = 870;
    /**
     * <code>THEME_VIETNAM = 871;</code>
     */
    public static final int THEME_VIETNAM_VALUE = 871;
    /**
     * <code>THEME_GENTLE = 872;</code>
     */
    public static final int THEME_GENTLE_VALUE = 872;
    /**
     * <code>THEME_RIVER = 873;</code>
     */
    public static final int THEME_RIVER_VALUE = 873;
    /**
     * <code>THEME_MIDDLE_EAST = 874;</code>
     */
    public static final int THEME_MIDDLE_EAST_VALUE = 874;
    /**
     * <code>THEME_FUN = 875;</code>
     */
    public static final int THEME_FUN_VALUE = 875;
    /**
     * <code>THEME_ALIEN = 876;</code>
     */
    public static final int THEME_ALIEN_VALUE = 876;
    /**
     * <code>THEME_FUR = 877;</code>
     */
    public static final int THEME_FUR_VALUE = 877;
    /**
     * <code>THEME_MULE = 878;</code>
     */
    public static final int THEME_MULE_VALUE = 878;
    /**
     * <code>THEME_GOVERNMENT = 879;</code>
     */
    public static final int THEME_GOVERNMENT_VALUE = 879;
    /**
     * <code>THEME_TIMOR__MINUS___LESTE = 880;</code>
     */
    public static final int THEME_TIMOR__MINUS___LESTE_VALUE = 880;
    /**
     * <code>THEME_HATE = 881;</code>
     */
    public static final int THEME_HATE_VALUE = 881;
    /**
     * <code>THEME_SOUTH = 882;</code>
     */
    public static final int THEME_SOUTH_VALUE = 882;
    /**
     * <code>THEME_TOOLS = 883;</code>
     */
    public static final int THEME_TOOLS_VALUE = 883;
    /**
     * <code>THEME_TONIGHT = 884;</code>
     */
    public static final int THEME_TONIGHT_VALUE = 884;
    /**
     * <code>THEME_MOBILE = 885;</code>
     */
    public static final int THEME_MOBILE_VALUE = 885;
    /**
     * <code>THEME_SWITZERLAND = 886;</code>
     */
    public static final int THEME_SWITZERLAND_VALUE = 886;
    /**
     * <code>THEME_OPPRESSION = 887;</code>
     */
    public static final int THEME_OPPRESSION_VALUE = 887;
    /**
     * <code>THEME_SPAIN = 888;</code>
     */
    public static final int THEME_SPAIN_VALUE = 888;
    /**
     * <code>THEME_SON = 889;</code>
     */
    public static final int THEME_SON_VALUE = 889;
    /**
     * <code>THEME_THREE_KINGS = 890;</code>
     */
    public static final int THEME_THREE_KINGS_VALUE = 890;
    /**
     * <code>THEME_REFLECT = 891;</code>
     */
    public static final int THEME_REFLECT_VALUE = 891;
    /**
     * <code>THEME_CLIMB = 892;</code>
     */
    public static final int THEME_CLIMB_VALUE = 892;
    /**
     * <code>THEME_PALAU = 893;</code>
     */
    public static final int THEME_PALAU_VALUE = 893;
    /**
     * <code>THEME_RACISM = 894;</code>
     */
    public static final int THEME_RACISM_VALUE = 894;
    /**
     * <code>THEME_CRUSH = 895;</code>
     */
    public static final int THEME_CRUSH_VALUE = 895;
    /**
     * <code>THEME_SPECIFIC_AGE = 896;</code>
     */
    public static final int THEME_SPECIFIC_AGE_VALUE = 896;
    /**
     * <code>THEME_CHURCH = 897;</code>
     */
    public static final int THEME_CHURCH_VALUE = 897;
    /**
     * <code>THEME_SNOW = 898;</code>
     */
    public static final int THEME_SNOW_VALUE = 898;
    /**
     * <code>THEME_SYMPATHY = 899;</code>
     */
    public static final int THEME_SYMPATHY_VALUE = 899;
    /**
     * <code>THEME_DUBLIN = 900;</code>
     */
    public static final int THEME_DUBLIN_VALUE = 900;
    /**
     * <code>THEME_LAKE = 901;</code>
     */
    public static final int THEME_LAKE_VALUE = 901;
    /**
     * <code>THEME_SMOKE = 902;</code>
     */
    public static final int THEME_SMOKE_VALUE = 902;
    /**
     * <code>THEME_GROW_UP = 903;</code>
     */
    public static final int THEME_GROW_UP_VALUE = 903;
    /**
     * <code>THEME_BRUNETTE = 904;</code>
     */
    public static final int THEME_BRUNETTE_VALUE = 904;
    /**
     * <code>THEME_COAST = 905;</code>
     */
    public static final int THEME_COAST_VALUE = 905;
    /**
     * <code>THEME_PATIENCE = 906;</code>
     */
    public static final int THEME_PATIENCE_VALUE = 906;
    /**
     * <code>THEME_MOZAMBIQUE = 907;</code>
     */
    public static final int THEME_MOZAMBIQUE_VALUE = 907;
    /**
     * <code>THEME_EVIL = 908;</code>
     */
    public static final int THEME_EVIL_VALUE = 908;
    /**
     * <code>THEME_BUILD = 909;</code>
     */
    public static final int THEME_BUILD_VALUE = 909;
    /**
     * <code>THEME_REAL = 910;</code>
     */
    public static final int THEME_REAL_VALUE = 910;
    /**
     * <code>THEME_NOT_MY_TYPE = 911;</code>
     */
    public static final int THEME_NOT_MY_TYPE_VALUE = 911;
    /**
     * <code>THEME_LESOTHO = 912;</code>
     */
    public static final int THEME_LESOTHO_VALUE = 912;
    /**
     * <code>THEME_SAN_FRANCISCO = 913;</code>
     */
    public static final int THEME_SAN_FRANCISCO_VALUE = 913;
    /**
     * <code>THEME_BERLIN = 914;</code>
     */
    public static final int THEME_BERLIN_VALUE = 914;
    /**
     * <code>THEME_EUROPE = 915;</code>
     */
    public static final int THEME_EUROPE_VALUE = 915;
    /**
     * <code>THEME_TEETH = 916;</code>
     */
    public static final int THEME_TEETH_VALUE = 916;
    /**
     * <code>THEME_ARMS = 917;</code>
     */
    public static final int THEME_ARMS_VALUE = 917;
    /**
     * <code>THEME_DISCOVERY = 918;</code>
     */
    public static final int THEME_DISCOVERY_VALUE = 918;
    /**
     * <code>THEME_CITY = 919;</code>
     */
    public static final int THEME_CITY_VALUE = 919;
    /**
     * <code>THEME_MAURITIUS = 920;</code>
     */
    public static final int THEME_MAURITIUS_VALUE = 920;
    /**
     * <code>THEME_TULSA = 921;</code>
     */
    public static final int THEME_TULSA_VALUE = 921;
    /**
     * <code>THEME_PINK = 922;</code>
     */
    public static final int THEME_PINK_VALUE = 922;
    /**
     * <code>THEME_SANTA_CLAUS = 923;</code>
     */
    public static final int THEME_SANTA_CLAUS_VALUE = 923;
    /**
     * <code>THEME_MEN = 924;</code>
     */
    public static final int THEME_MEN_VALUE = 924;
    /**
     * <code>THEME_WEDNESDAY = 925;</code>
     */
    public static final int THEME_WEDNESDAY_VALUE = 925;
    /**
     * <code>THEME_FANTASY = 926;</code>
     */
    public static final int THEME_FANTASY_VALUE = 926;
    /**
     * <code>THEME_LAUGHTER = 927;</code>
     */
    public static final int THEME_LAUGHTER_VALUE = 927;
    /**
     * <code>THEME_HEALTH_AND_WELLNESS = 928;</code>
     */
    public static final int THEME_HEALTH_AND_WELLNESS_VALUE = 928;
    /**
     * <code>THEME_SAVE = 929;</code>
     */
    public static final int THEME_SAVE_VALUE = 929;
    /**
     * <code>THEME_MARRIED_LIFE = 930;</code>
     */
    public static final int THEME_MARRIED_LIFE_VALUE = 930;
    /**
     * <code>THEME_ADVICE = 931;</code>
     */
    public static final int THEME_ADVICE_VALUE = 931;
    /**
     * <code>THEME_MOURNING = 932;</code>
     */
    public static final int THEME_MOURNING_VALUE = 932;
    /**
     * <code>THEME_WAIT = 933;</code>
     */
    public static final int THEME_WAIT_VALUE = 933;
    /**
     * <code>THEME_HEROISM = 934;</code>
     */
    public static final int THEME_HEROISM_VALUE = 934;
    /**
     * <code>THEME_PLAY_MUSIC = 935;</code>
     */
    public static final int THEME_PLAY_MUSIC_VALUE = 935;
    /**
     * <code>THEME_HOTEL = 936;</code>
     */
    public static final int THEME_HOTEL_VALUE = 936;
    /**
     * <code>THEME_CLOWN = 937;</code>
     */
    public static final int THEME_CLOWN_VALUE = 937;
    /**
     * <code>THEME_WALK = 938;</code>
     */
    public static final int THEME_WALK_VALUE = 938;
    /**
     * <code>THEME_WALL = 939;</code>
     */
    public static final int THEME_WALL_VALUE = 939;
    /**
     * <code>THEME_DESPAIR = 940;</code>
     */
    public static final int THEME_DESPAIR_VALUE = 940;
    /**
     * <code>THEME_MAINE = 941;</code>
     */
    public static final int THEME_MAINE_VALUE = 941;
    /**
     * <code>THEME_TENNESSEE = 942;</code>
     */
    public static final int THEME_TENNESSEE_VALUE = 942;
    /**
     * <code>THEME_AT_FIRST_SIGHT = 943;</code>
     */
    public static final int THEME_AT_FIRST_SIGHT_VALUE = 943;
    /**
     * <code>THEME_CLEAN = 944;</code>
     */
    public static final int THEME_CLEAN_VALUE = 944;
    /**
     * <code>THEME_INFORMATION = 945;</code>
     */
    public static final int THEME_INFORMATION_VALUE = 945;
    /**
     * <code>THEME_ENGAGEMENT = 946;</code>
     */
    public static final int THEME_ENGAGEMENT_VALUE = 946;
    /**
     * <code>THEME_PRIDE = 947;</code>
     */
    public static final int THEME_PRIDE_VALUE = 947;
    /**
     * <code>THEME_UNBELIEVABLE = 948;</code>
     */
    public static final int THEME_UNBELIEVABLE_VALUE = 948;
    /**
     * <code>THEME_ROAD_ACCIDENT = 949;</code>
     */
    public static final int THEME_ROAD_ACCIDENT_VALUE = 949;
    /**
     * <code>THEME_CREATE = 950;</code>
     */
    public static final int THEME_CREATE_VALUE = 950;
    /**
     * <code>THEME_VIENNA = 951;</code>
     */
    public static final int THEME_VIENNA_VALUE = 951;
    /**
     * <code>THEME_TERRIBLE = 952;</code>
     */
    public static final int THEME_TERRIBLE_VALUE = 952;
    /**
     * <code>THEME_SISTER = 953;</code>
     */
    public static final int THEME_SISTER_VALUE = 953;
    /**
     * <code>THEME_WINNING = 954;</code>
     */
    public static final int THEME_WINNING_VALUE = 954;
    /**
     * <code>THEME_LITHUANIA = 955;</code>
     */
    public static final int THEME_LITHUANIA_VALUE = 955;
    /**
     * <code>THEME_BODY = 956;</code>
     */
    public static final int THEME_BODY_VALUE = 956;
    /**
     * <code>THEME_MISSING_YOU = 957;</code>
     */
    public static final int THEME_MISSING_YOU_VALUE = 957;
    /**
     * <code>THEME_HIGHLAND = 958;</code>
     */
    public static final int THEME_HIGHLAND_VALUE = 958;
    /**
     * <code>THEME_REAR = 959;</code>
     */
    public static final int THEME_REAR_VALUE = 959;
    /**
     * <code>THEME_SNAKE = 960;</code>
     */
    public static final int THEME_SNAKE_VALUE = 960;
    /**
     * <code>THEME_WEST = 961;</code>
     */
    public static final int THEME_WEST_VALUE = 961;
    /**
     * <code>THEME_MAGIC = 962;</code>
     */
    public static final int THEME_MAGIC_VALUE = 962;
    /**
     * <code>THEME_STEAL = 963;</code>
     */
    public static final int THEME_STEAL_VALUE = 963;
    /**
     * <code>THEME_TRINIDAD_AND_TOBAGO = 964;</code>
     */
    public static final int THEME_TRINIDAD_AND_TOBAGO_VALUE = 964;
    /**
     * <code>THEME_AFRAID = 965;</code>
     */
    public static final int THEME_AFRAID_VALUE = 965;
    /**
     * <code>THEME_OPINIONS = 966;</code>
     */
    public static final int THEME_OPINIONS_VALUE = 966;
    /**
     * <code>THEME_NORWAY = 967;</code>
     */
    public static final int THEME_NORWAY_VALUE = 967;
    /**
     * <code>THEME_MACAO = 968;</code>
     */
    public static final int THEME_MACAO_VALUE = 968;
    /**
     * <code>THEME_POISON = 969;</code>
     */
    public static final int THEME_POISON_VALUE = 969;
    /**
     * <code>THEME_FOREST = 970;</code>
     */
    public static final int THEME_FOREST_VALUE = 970;
    /**
     * <code>THEME_PAPER = 971;</code>
     */
    public static final int THEME_PAPER_VALUE = 971;
    /**
     * <code>THEME_UGANDA = 972;</code>
     */
    public static final int THEME_UGANDA_VALUE = 972;
    /**
     * <code>THEME_SURINAME = 973;</code>
     */
    public static final int THEME_SURINAME_VALUE = 973;
    /**
     * <code>THEME_EMERGENCY = 974;</code>
     */
    public static final int THEME_EMERGENCY_VALUE = 974;
    /**
     * <code>THEME_ALONE = 975;</code>
     */
    public static final int THEME_ALONE_VALUE = 975;
    /**
     * <code>THEME_VOICE = 976;</code>
     */
    public static final int THEME_VOICE_VALUE = 976;
    /**
     * <code>THEME_PARIS = 977;</code>
     */
    public static final int THEME_PARIS_VALUE = 977;
    /**
     * <code>THEME_ASSURANCE = 978;</code>
     */
    public static final int THEME_ASSURANCE_VALUE = 978;
    /**
     * <code>THEME_GEEK = 979;</code>
     */
    public static final int THEME_GEEK_VALUE = 979;
    /**
     * <code>THEME_BUSY = 980;</code>
     */
    public static final int THEME_BUSY_VALUE = 980;
    /**
     * <code>THEME_SLOW = 981;</code>
     */
    public static final int THEME_SLOW_VALUE = 981;
    /**
     * <code>THEME_ELVIS = 982;</code>
     */
    public static final int THEME_ELVIS_VALUE = 982;
    /**
     * <code>THEME_ANTIGUA_AND_BARBUDA = 983;</code>
     */
    public static final int THEME_ANTIGUA_AND_BARBUDA_VALUE = 983;
    /**
     * <code>THEME_OLD = 984;</code>
     */
    public static final int THEME_OLD_VALUE = 984;
    /**
     * <code>THEME_KAZAKHSTAN = 985;</code>
     */
    public static final int THEME_KAZAKHSTAN_VALUE = 985;
    /**
     * <code>THEME_HISTORY = 986;</code>
     */
    public static final int THEME_HISTORY_VALUE = 986;
    /**
     * <code>THEME_BLOOD = 987;</code>
     */
    public static final int THEME_BLOOD_VALUE = 987;
    /**
     * <code>THEME_SAINT_LUCIA = 988;</code>
     */
    public static final int THEME_SAINT_LUCIA_VALUE = 988;
    /**
     * <code>THEME_SATURDAY = 989;</code>
     */
    public static final int THEME_SATURDAY_VALUE = 989;
    /**
     * <code>THEME_REBELLION = 990;</code>
     */
    public static final int THEME_REBELLION_VALUE = 990;
    /**
     * <code>THEME_MONTH = 991;</code>
     */
    public static final int THEME_MONTH_VALUE = 991;
    /**
     * <code>THEME_SUFFRAGE = 992;</code>
     */
    public static final int THEME_SUFFRAGE_VALUE = 992;
    /**
     * <code>THEME_REMEMBER = 993;</code>
     */
    public static final int THEME_REMEMBER_VALUE = 993;
    /**
     * <code>THEME_HILLS = 994;</code>
     */
    public static final int THEME_HILLS_VALUE = 994;
    /**
     * <code>THEME_CAR_RACING = 995;</code>
     */
    public static final int THEME_CAR_RACING_VALUE = 995;
    /**
     * <code>THEME_SURVIVE = 996;</code>
     */
    public static final int THEME_SURVIVE_VALUE = 996;
    /**
     * <code>THEME_REDHEAD = 997;</code>
     */
    public static final int THEME_REDHEAD_VALUE = 997;
    /**
     * <code>THEME_EAGLE = 998;</code>
     */
    public static final int THEME_EAGLE_VALUE = 998;
    /**
     * <code>THEME_LAOS = 999;</code>
     */
    public static final int THEME_LAOS_VALUE = 999;
    /**
     * <code>THEME_JANUARY = 1000;</code>
     */
    public static final int THEME_JANUARY_VALUE = 1000;
    /**
     * <code>THEME_CLIFF = 1001;</code>
     */
    public static final int THEME_CLIFF_VALUE = 1001;
    /**
     * <code>THEME_ARGENTINA = 1002;</code>
     */
    public static final int THEME_ARGENTINA_VALUE = 1002;
    /**
     * <code>THEME_UNITED_ARAB_EMIRATES = 1003;</code>
     */
    public static final int THEME_UNITED_ARAB_EMIRATES_VALUE = 1003;
    /**
     * <code>THEME_BELIZE = 1004;</code>
     */
    public static final int THEME_BELIZE_VALUE = 1004;
    /**
     * <code>THEME_BRITAIN = 1005;</code>
     */
    public static final int THEME_BRITAIN_VALUE = 1005;
    /**
     * <code>THEME_ZAMBIA = 1006;</code>
     */
    public static final int THEME_ZAMBIA_VALUE = 1006;
    /**
     * <code>THEME_SMILE = 1007;</code>
     */
    public static final int THEME_SMILE_VALUE = 1007;
    /**
     * <code>THEME_MURDER = 1008;</code>
     */
    public static final int THEME_MURDER_VALUE = 1008;
    /**
     * <code>THEME_SUN = 1009;</code>
     */
    public static final int THEME_SUN_VALUE = 1009;
    /**
     * <code>THEME_BRITISH_ISLES = 1010;</code>
     */
    public static final int THEME_BRITISH_ISLES_VALUE = 1010;
    /**
     * <code>THEME_SMALL_TOWN_LIFE = 1011;</code>
     */
    public static final int THEME_SMALL_TOWN_LIFE_VALUE = 1011;
    /**
     * <code>THEME_TORN = 1012;</code>
     */
    public static final int THEME_TORN_VALUE = 1012;
    /**
     * <code>THEME_GUINEA__MINUS___BISSAU = 1013;</code>
     */
    public static final int THEME_GUINEA__MINUS___BISSAU_VALUE = 1013;
    /**
     * <code>THEME_ADDICTED_TO = 1014;</code>
     */
    public static final int THEME_ADDICTED_TO_VALUE = 1014;
    /**
     * <code>THEME_ILLINOIS = 1015;</code>
     */
    public static final int THEME_ILLINOIS_VALUE = 1015;
    /**
     * <code>THEME_LONDON = 1016;</code>
     */
    public static final int THEME_LONDON_VALUE = 1016;
    /**
     * <code>THEME_CLOSE = 1017;</code>
     */
    public static final int THEME_CLOSE_VALUE = 1017;
    /**
     * <code>THEME_GEORGIA = 1018;</code>
     */
    public static final int THEME_GEORGIA_VALUE = 1018;
    /**
     * <code>THEME_MISBEHAVIOR = 1019;</code>
     */
    public static final int THEME_MISBEHAVIOR_VALUE = 1019;
    /**
     * <code>THEME_IDAHO = 1020;</code>
     */
    public static final int THEME_IDAHO_VALUE = 1020;
    /**
     * <code>THEME_YEMEN = 1021;</code>
     */
    public static final int THEME_YEMEN_VALUE = 1021;
    /**
     * <code>THEME_TRAINS = 1022;</code>
     */
    public static final int THEME_TRAINS_VALUE = 1022;
    /**
     * <code>THEME_INSPIRATION = 1023;</code>
     */
    public static final int THEME_INSPIRATION_VALUE = 1023;
    /**
     * <code>THEME_LEADER = 1024;</code>
     */
    public static final int THEME_LEADER_VALUE = 1024;
    /**
     * <code>THEME_MONKEY = 1025;</code>
     */
    public static final int THEME_MONKEY_VALUE = 1025;
    /**
     * <code>THEME_SINGLE_PERSON = 1026;</code>
     */
    public static final int THEME_SINGLE_PERSON_VALUE = 1026;
    /**
     * <code>THEME_MAKING_LOVE = 1027;</code>
     */
    public static final int THEME_MAKING_LOVE_VALUE = 1027;
    /**
     * <code>THEME_MARCH = 1028;</code>
     */
    public static final int THEME_MARCH_VALUE = 1028;
    /**
     * <code>THEME_PREJUDICE = 1029;</code>
     */
    public static final int THEME_PREJUDICE_VALUE = 1029;
    /**
     * <code>THEME_DETERMINATION = 1030;</code>
     */
    public static final int THEME_DETERMINATION_VALUE = 1030;
    /**
     * <code>THEME_SUICIDE = 1031;</code>
     */
    public static final int THEME_SUICIDE_VALUE = 1031;
    /**
     * <code>THEME_ELEMENTS = 1032;</code>
     */
    public static final int THEME_ELEMENTS_VALUE = 1032;
    /**
     * <code>THEME_STALKER = 1033;</code>
     */
    public static final int THEME_STALKER_VALUE = 1033;
    /**
     * <code>THEME_SIMPLE = 1034;</code>
     */
    public static final int THEME_SIMPLE_VALUE = 1034;
    /**
     * <code>THEME_GREAT_BRITAIN = 1035;</code>
     */
    public static final int THEME_GREAT_BRITAIN_VALUE = 1035;
    /**
     * <code>THEME_PARTY = 1036;</code>
     */
    public static final int THEME_PARTY_VALUE = 1036;
    /**
     * <code>THEME_BUG = 1037;</code>
     */
    public static final int THEME_BUG_VALUE = 1037;
    /**
     * <code>THEME_LISTENING = 1038;</code>
     */
    public static final int THEME_LISTENING_VALUE = 1038;
    /**
     * <code>THEME_SWAGGER = 1039;</code>
     */
    public static final int THEME_SWAGGER_VALUE = 1039;
    /**
     * <code>THEME_MISSOURI = 1040;</code>
     */
    public static final int THEME_MISSOURI_VALUE = 1040;
    /**
     * <code>THEME_QUESTION = 1041;</code>
     */
    public static final int THEME_QUESTION_VALUE = 1041;
    /**
     * <code>THEME_UTOPIA = 1042;</code>
     */
    public static final int THEME_UTOPIA_VALUE = 1042;
    /**
     * <code>THEME_NIGHTMARE = 1043;</code>
     */
    public static final int THEME_NIGHTMARE_VALUE = 1043;
    /**
     * <code>THEME_VEGETABLE = 1044;</code>
     */
    public static final int THEME_VEGETABLE_VALUE = 1044;
    /**
     * <code>THEME_COMMUNICATION = 1045;</code>
     */
    public static final int THEME_COMMUNICATION_VALUE = 1045;
    /**
     * <code>THEME_MILITARY = 1046;</code>
     */
    public static final int THEME_MILITARY_VALUE = 1046;
    /**
     * <code>THEME_BUS = 1047;</code>
     */
    public static final int THEME_BUS_VALUE = 1047;
    /**
     * <code>THEME_JAVA = 1048;</code>
     */
    public static final int THEME_JAVA_VALUE = 1048;
    /**
     * <code>THEME_PROTECT = 1049;</code>
     */
    public static final int THEME_PROTECT_VALUE = 1049;
    /**
     * <code>THEME_COUSIN = 1050;</code>
     */
    public static final int THEME_COUSIN_VALUE = 1050;
    /**
     * <code>THEME_HAWAII = 1051;</code>
     */
    public static final int THEME_HAWAII_VALUE = 1051;
    /**
     * <code>THEME_EVERYDAY = 1052;</code>
     */
    public static final int THEME_EVERYDAY_VALUE = 1052;
    /**
     * <code>THEME_CAREFREE = 1053;</code>
     */
    public static final int THEME_CAREFREE_VALUE = 1053;
    /**
     * <code>THEME_BRUNEI = 1054;</code>
     */
    public static final int THEME_BRUNEI_VALUE = 1054;
    /**
     * <code>THEME_LEBANON = 1055;</code>
     */
    public static final int THEME_LEBANON_VALUE = 1055;
    /**
     * <code>THEME_DIVORCE = 1056;</code>
     */
    public static final int THEME_DIVORCE_VALUE = 1056;
    /**
     * <code>THEME_AZERBAIJAN = 1057;</code>
     */
    public static final int THEME_AZERBAIJAN_VALUE = 1057;
    /**
     * <code>THEME_BALTIMORE = 1058;</code>
     */
    public static final int THEME_BALTIMORE_VALUE = 1058;
    /**
     * <code>THEME_MAURITANIA = 1059;</code>
     */
    public static final int THEME_MAURITANIA_VALUE = 1059;
    /**
     * <code>THEME_GHOST = 1060;</code>
     */
    public static final int THEME_GHOST_VALUE = 1060;
    /**
     * <code>THEME_WORDS = 1061;</code>
     */
    public static final int THEME_WORDS_VALUE = 1061;
    /**
     * <code>THEME_COMFORT = 1062;</code>
     */
    public static final int THEME_COMFORT_VALUE = 1062;
    /**
     * <code>THEME_CONSISTENT = 1063;</code>
     */
    public static final int THEME_CONSISTENT_VALUE = 1063;
    /**
     * <code>THEME_ANXIOUS = 1064;</code>
     */
    public static final int THEME_ANXIOUS_VALUE = 1064;
    /**
     * <code>THEME_EVENT = 1065;</code>
     */
    public static final int THEME_EVENT_VALUE = 1065;
    /**
     * <code>THEME_SUNRISE = 1066;</code>
     */
    public static final int THEME_SUNRISE_VALUE = 1066;
    /**
     * <code>THEME_RESILIENT = 1067;</code>
     */
    public static final int THEME_RESILIENT_VALUE = 1067;
    /**
     * <code>THEME_SHIP = 1068;</code>
     */
    public static final int THEME_SHIP_VALUE = 1068;
    /**
     * <code>THEME_AUSTRALIA = 1069;</code>
     */
    public static final int THEME_AUSTRALIA_VALUE = 1069;
    /**
     * <code>THEME_PHILADELPHIA = 1070;</code>
     */
    public static final int THEME_PHILADELPHIA_VALUE = 1070;
    /**
     * <code>THEME_RIO_DE_JANEIRO = 1071;</code>
     */
    public static final int THEME_RIO_DE_JANEIRO_VALUE = 1071;
    /**
     * <code>THEME_UNITED_STATES = 1072;</code>
     */
    public static final int THEME_UNITED_STATES_VALUE = 1072;
    /**
     * <code>THEME_UNREQUITED = 1073;</code>
     */
    public static final int THEME_UNREQUITED_VALUE = 1073;
    /**
     * <code>THEME_WHISTLE = 1074;</code>
     */
    public static final int THEME_WHISTLE_VALUE = 1074;
    /**
     * <code>THEME_MYANMAR = 1075;</code>
     */
    public static final int THEME_MYANMAR_VALUE = 1075;
    /**
     * <code>THEME_CAMEROON = 1076;</code>
     */
    public static final int THEME_CAMEROON_VALUE = 1076;
    /**
     * <code>THEME_REVENGE = 1077;</code>
     */
    public static final int THEME_REVENGE_VALUE = 1077;
    /**
     * <code>THEME_LAW_AND_ORDER = 1078;</code>
     */
    public static final int THEME_LAW_AND_ORDER_VALUE = 1078;
    /**
     * <code>THEME_STRONG = 1079;</code>
     */
    public static final int THEME_STRONG_VALUE = 1079;
    /**
     * <code>THEME_ICELAND = 1080;</code>
     */
    public static final int THEME_ICELAND_VALUE = 1080;
    /**
     * <code>THEME_OMAN = 1081;</code>
     */
    public static final int THEME_OMAN_VALUE = 1081;
    /**
     * <code>THEME_SWIM = 1082;</code>
     */
    public static final int THEME_SWIM_VALUE = 1082;
    /**
     * <code>THEME_SOUNDS = 1083;</code>
     */
    public static final int THEME_SOUNDS_VALUE = 1083;
    /**
     * <code>THEME_GABON = 1084;</code>
     */
    public static final int THEME_GABON_VALUE = 1084;
    /**
     * <code>THEME_YUGOSLAVIA = 1085;</code>
     */
    public static final int THEME_YUGOSLAVIA_VALUE = 1085;
    /**
     * <code>THEME_LUXEMBOURG = 1086;</code>
     */
    public static final int THEME_LUXEMBOURG_VALUE = 1086;
    /**
     * <code>THEME_DRUMS = 1087;</code>
     */
    public static final int THEME_DRUMS_VALUE = 1087;
    /**
     * <code>THEME_ARMAGEDDON = 1088;</code>
     */
    public static final int THEME_ARMAGEDDON_VALUE = 1088;
    /**
     * <code>THEME_POVERTY = 1089;</code>
     */
    public static final int THEME_POVERTY_VALUE = 1089;
    /**
     * <code>THEME_CONSCIOUSNESS = 1090;</code>
     */
    public static final int THEME_CONSCIOUSNESS_VALUE = 1090;
    /**
     * <code>THEME_GEOGRAPHIC_LOCATION = 1091;</code>
     */
    public static final int THEME_GEOGRAPHIC_LOCATION_VALUE = 1091;
    /**
     * <code>THEME_KANSAS = 1092;</code>
     */
    public static final int THEME_KANSAS_VALUE = 1092;
    /**
     * <code>THEME_LUCKY = 1093;</code>
     */
    public static final int THEME_LUCKY_VALUE = 1093;
    /**
     * <code>THEME_HEARTACHE = 1094;</code>
     */
    public static final int THEME_HEARTACHE_VALUE = 1094;
    /**
     * <code>THEME_PLEASE = 1095;</code>
     */
    public static final int THEME_PLEASE_VALUE = 1095;
    /**
     * <code>THEME_MIRACLE = 1096;</code>
     */
    public static final int THEME_MIRACLE_VALUE = 1096;
    /**
     * <code>THEME_IOWA = 1097;</code>
     */
    public static final int THEME_IOWA_VALUE = 1097;
    /**
     * <code>THEME_VANUATU = 1098;</code>
     */
    public static final int THEME_VANUATU_VALUE = 1098;
    /**
     * <code>THEME_ALLIGATOR = 1099;</code>
     */
    public static final int THEME_ALLIGATOR_VALUE = 1099;
    /**
     * <code>THEME_FAMILY_MEMBER = 1100;</code>
     */
    public static final int THEME_FAMILY_MEMBER_VALUE = 1100;
    /**
     * <code>THEME_CONFLICT = 1101;</code>
     */
    public static final int THEME_CONFLICT_VALUE = 1101;
    /**
     * <code>THEME_NORTH_KOREA = 1102;</code>
     */
    public static final int THEME_NORTH_KOREA_VALUE = 1102;
    /**
     * <code>THEME_GENERAL = 1103;</code>
     */
    public static final int THEME_GENERAL_VALUE = 1103;
    /**
     * <code>THEME_LOS_ANGELES = 1104;</code>
     */
    public static final int THEME_LOS_ANGELES_VALUE = 1104;
    /**
     * <code>THEME_SOUTH_DAKOTA = 1105;</code>
     */
    public static final int THEME_SOUTH_DAKOTA_VALUE = 1105;
    /**
     * <code>THEME_OUTLAW = 1106;</code>
     */
    public static final int THEME_OUTLAW_VALUE = 1106;
    /**
     * <code>THEME_PANIC = 1107;</code>
     */
    public static final int THEME_PANIC_VALUE = 1107;
    /**
     * <code>THEME_ACTION = 1108;</code>
     */
    public static final int THEME_ACTION_VALUE = 1108;
    /**
     * <code>THEME_BURUNDI = 1109;</code>
     */
    public static final int THEME_BURUNDI_VALUE = 1109;
    /**
     * <code>THEME_RELAX = 1110;</code>
     */
    public static final int THEME_RELAX_VALUE = 1110;
    /**
     * <code>THEME_SINGAPORE = 1111;</code>
     */
    public static final int THEME_SINGAPORE_VALUE = 1111;
    /**
     * <code>THEME_TRANSPORTATION = 1112;</code>
     */
    public static final int THEME_TRANSPORTATION_VALUE = 1112;
    /**
     * <code>THEME_CELL_PHONE = 1113;</code>
     */
    public static final int THEME_CELL_PHONE_VALUE = 1113;
    /**
     * <code>THEME_RISK = 1114;</code>
     */
    public static final int THEME_RISK_VALUE = 1114;
    /**
     * <code>THEME_FAMILY_LIFE = 1115;</code>
     */
    public static final int THEME_FAMILY_LIFE_VALUE = 1115;
    /**
     * <code>THEME_TIME = 1116;</code>
     */
    public static final int THEME_TIME_VALUE = 1116;
    /**
     * <code>THEME_STUPID = 1117;</code>
     */
    public static final int THEME_STUPID_VALUE = 1117;
    /**
     * <code>THEME_ABORTION = 1118;</code>
     */
    public static final int THEME_ABORTION_VALUE = 1118;
    /**
     * <code>THEME_NEBRASKA = 1119;</code>
     */
    public static final int THEME_NEBRASKA_VALUE = 1119;
    /**
     * <code>THEME_RUSSIA = 1120;</code>
     */
    public static final int THEME_RUSSIA_VALUE = 1120;
    /**
     * <code>THEME_WHISPER = 1121;</code>
     */
    public static final int THEME_WHISPER_VALUE = 1121;
    /**
     * <code>THEME_BORED = 1122;</code>
     */
    public static final int THEME_BORED_VALUE = 1122;
    /**
     * <code>THEME_EMPTY = 1123;</code>
     */
    public static final int THEME_EMPTY_VALUE = 1123;
    /**
     * <code>THEME_PAIN = 1124;</code>
     */
    public static final int THEME_PAIN_VALUE = 1124;
    /**
     * <code>THEME_CHOICES = 1125;</code>
     */
    public static final int THEME_CHOICES_VALUE = 1125;
    /**
     * <code>THEME_AMMUNITION = 1126;</code>
     */
    public static final int THEME_AMMUNITION_VALUE = 1126;
    /**
     * <code>THEME_CHINA = 1127;</code>
     */
    public static final int THEME_CHINA_VALUE = 1127;
    /**
     * <code>THEME_NEWS = 1128;</code>
     */
    public static final int THEME_NEWS_VALUE = 1128;
    /**
     * <code>THEME_PEACE = 1129;</code>
     */
    public static final int THEME_PEACE_VALUE = 1129;
    /**
     * <code>THEME_EASTERN_EUROPE = 1130;</code>
     */
    public static final int THEME_EASTERN_EUROPE_VALUE = 1130;
    /**
     * <code>THEME_GREY = 1131;</code>
     */
    public static final int THEME_GREY_VALUE = 1131;
    /**
     * <code>THEME_DEMOCRATIC_REPUBLIC_OF_THE_CONGO = 1132;</code>
     */
    public static final int THEME_DEMOCRATIC_REPUBLIC_OF_THE_CONGO_VALUE = 1132;
    /**
     * <code>THEME_LATE = 1133;</code>
     */
    public static final int THEME_LATE_VALUE = 1133;
    /**
     * <code>THEME_ROMANIA = 1134;</code>
     */
    public static final int THEME_ROMANIA_VALUE = 1134;
    /**
     * <code>THEME_DESIRE = 1135;</code>
     */
    public static final int THEME_DESIRE_VALUE = 1135;
    /**
     * <code>THEME_ASTROLOGY = 1136;</code>
     */
    public static final int THEME_ASTROLOGY_VALUE = 1136;
    /**
     * <code>THEME_PHILIPPINES = 1137;</code>
     */
    public static final int THEME_PHILIPPINES_VALUE = 1137;
    /**
     * <code>THEME_NEW_ORLEANS = 1138;</code>
     */
    public static final int THEME_NEW_ORLEANS_VALUE = 1138;
    /**
     * <code>THEME_BURNING = 1139;</code>
     */
    public static final int THEME_BURNING_VALUE = 1139;
    /**
     * <code>THEME_HUSBAND = 1140;</code>
     */
    public static final int THEME_HUSBAND_VALUE = 1140;
    /**
     * <code>THEME_POSSESSED = 1141;</code>
     */
    public static final int THEME_POSSESSED_VALUE = 1141;
    /**
     * <code>THEME_TRAVEL = 1142;</code>
     */
    public static final int THEME_TRAVEL_VALUE = 1142;
    /**
     * <code>THEME_MISPLACE = 1143;</code>
     */
    public static final int THEME_MISPLACE_VALUE = 1143;
    /**
     * <code>THEME_SIGNS = 1144;</code>
     */
    public static final int THEME_SIGNS_VALUE = 1144;
    /**
     * <code>THEME_WESTERN_SAHARA = 1145;</code>
     */
    public static final int THEME_WESTERN_SAHARA_VALUE = 1145;
    /**
     * <code>THEME_WONDERFUL = 1146;</code>
     */
    public static final int THEME_WONDERFUL_VALUE = 1146;
    /**
     * <code>THEME_INTENTION = 1147;</code>
     */
    public static final int THEME_INTENTION_VALUE = 1147;
    /**
     * <code>THEME_SOUTH_EAST_ASIA = 1148;</code>
     */
    public static final int THEME_SOUTH_EAST_ASIA_VALUE = 1148;
    /**
     * <code>THEME_ROBOT = 1149;</code>
     */
    public static final int THEME_ROBOT_VALUE = 1149;
    /**
     * <code>THEME_QUESTIONING = 1150;</code>
     */
    public static final int THEME_QUESTIONING_VALUE = 1150;
    /**
     * <code>THEME_INDONESIA = 1151;</code>
     */
    public static final int THEME_INDONESIA_VALUE = 1151;
    /**
     * <code>THEME_LOCATION = 1152;</code>
     */
    public static final int THEME_LOCATION_VALUE = 1152;
    /**
     * <code>THEME_DISSATISFACTION = 1153;</code>
     */
    public static final int THEME_DISSATISFACTION_VALUE = 1153;
    /**
     * <code>THEME_ANGOLA = 1154;</code>
     */
    public static final int THEME_ANGOLA_VALUE = 1154;
    /**
     * <code>THEME_SECRETS = 1155;</code>
     */
    public static final int THEME_SECRETS_VALUE = 1155;
    /**
     * <code>THEME_MOON = 1156;</code>
     */
    public static final int THEME_MOON_VALUE = 1156;
    /**
     * <code>THEME_AWARENESS = 1157;</code>
     */
    public static final int THEME_AWARENESS_VALUE = 1157;
    /**
     * <code>THEME_SATISFACTION = 1158;</code>
     */
    public static final int THEME_SATISFACTION_VALUE = 1158;
    /**
     * <code>THEME_PRAIRIE = 1159;</code>
     */
    public static final int THEME_PRAIRIE_VALUE = 1159;
    /**
     * <code>THEME_INTOXICATED = 1160;</code>
     */
    public static final int THEME_INTOXICATED_VALUE = 1160;
    /**
     * <code>THEME_CRUEL = 1161;</code>
     */
    public static final int THEME_CRUEL_VALUE = 1161;
    /**
     * <code>THEME_MOVING_ON = 1162;</code>
     */
    public static final int THEME_MOVING_ON_VALUE = 1162;
    /**
     * <code>THEME_ORANGE = 1163;</code>
     */
    public static final int THEME_ORANGE_VALUE = 1163;
    /**
     * <code>THEME_INFATUATED = 1164;</code>
     */
    public static final int THEME_INFATUATED_VALUE = 1164;
    /**
     * <code>THEME_FRUITS = 1165;</code>
     */
    public static final int THEME_FRUITS_VALUE = 1165;
    /**
     * <code>THEME_GIVE = 1166;</code>
     */
    public static final int THEME_GIVE_VALUE = 1166;
    /**
     * <code>THEME_SUBSTANCES = 1167;</code>
     */
    public static final int THEME_SUBSTANCES_VALUE = 1167;
    /**
     * <code>THEME_IRAN = 1168;</code>
     */
    public static final int THEME_IRAN_VALUE = 1168;
    /**
     * <code>THEME_BOOK = 1169;</code>
     */
    public static final int THEME_BOOK_VALUE = 1169;
    /**
     * <code>THEME_ST__DOT___LOUIS = 1170;</code>
     */
    public static final int THEME_ST__DOT___LOUIS_VALUE = 1170;
    /**
     * <code>THEME_CZECH_REPUBLIC = 1171;</code>
     */
    public static final int THEME_CZECH_REPUBLIC_VALUE = 1171;
    /**
     * <code>THEME_IRAQ = 1172;</code>
     */
    public static final int THEME_IRAQ_VALUE = 1172;
    /**
     * <code>THEME_IDENTITY = 1173;</code>
     */
    public static final int THEME_IDENTITY_VALUE = 1173;
    /**
     * <code>THEME_CHILE = 1174;</code>
     */
    public static final int THEME_CHILE_VALUE = 1174;
    /**
     * <code>THEME_EQUATORIAL_GUINEA = 1175;</code>
     */
    public static final int THEME_EQUATORIAL_GUINEA_VALUE = 1175;
    /**
     * <code>THEME_TRUMPET = 1176;</code>
     */
    public static final int THEME_TRUMPET_VALUE = 1176;
    /**
     * <code>THEME_ARIZONA = 1177;</code>
     */
    public static final int THEME_ARIZONA_VALUE = 1177;
    /**
     * <code>THEME_NEPAL = 1178;</code>
     */
    public static final int THEME_NEPAL_VALUE = 1178;
    /**
     * <code>THEME_BOSTON = 1179;</code>
     */
    public static final int THEME_BOSTON_VALUE = 1179;
    /**
     * <code>THEME_CARS = 1180;</code>
     */
    public static final int THEME_CARS_VALUE = 1180;
    /**
     * <code>THEME_WORKING_CLASS = 1181;</code>
     */
    public static final int THEME_WORKING_CLASS_VALUE = 1181;
    /**
     * <code>THEME_KNEES = 1182;</code>
     */
    public static final int THEME_KNEES_VALUE = 1182;
    /**
     * <code>THEME_FLOOR_AND_CEILING = 1183;</code>
     */
    public static final int THEME_FLOOR_AND_CEILING_VALUE = 1183;
    /**
     * <code>THEME_SOLITUDE = 1184;</code>
     */
    public static final int THEME_SOLITUDE_VALUE = 1184;
    /**
     * <code>THEME_TAKE_ME_BACK = 1185;</code>
     */
    public static final int THEME_TAKE_ME_BACK_VALUE = 1185;
    /**
     * <code>THEME_ECSTATIC = 1186;</code>
     */
    public static final int THEME_ECSTATIC_VALUE = 1186;
    /**
     * <code>THEME_SHOE = 1187;</code>
     */
    public static final int THEME_SHOE_VALUE = 1187;
    /**
     * <code>THEME_MENTALITY = 1188;</code>
     */
    public static final int THEME_MENTALITY_VALUE = 1188;
    /**
     * <code>THEME_NORTH_DAKOTA = 1189;</code>
     */
    public static final int THEME_NORTH_DAKOTA_VALUE = 1189;
    /**
     * <code>THEME_TURKEY = 1190;</code>
     */
    public static final int THEME_TURKEY_VALUE = 1190;
    /**
     * <code>THEME_BELGIUM = 1191;</code>
     */
    public static final int THEME_BELGIUM_VALUE = 1191;
    /**
     * <code>THEME_VALLEY = 1192;</code>
     */
    public static final int THEME_VALLEY_VALUE = 1192;
    /**
     * <code>THEME_SHOOT = 1193;</code>
     */
    public static final int THEME_SHOOT_VALUE = 1193;
    /**
     * <code>THEME_PERU = 1194;</code>
     */
    public static final int THEME_PERU_VALUE = 1194;
    /**
     * <code>THEME_SAO_TOME_AND_PRINCIPE = 1195;</code>
     */
    public static final int THEME_SAO_TOME_AND_PRINCIPE_VALUE = 1195;
    /**
     * <code>THEME_EXPLORE = 1196;</code>
     */
    public static final int THEME_EXPLORE_VALUE = 1196;
    /**
     * <code>THEME_SCREAM = 1197;</code>
     */
    public static final int THEME_SCREAM_VALUE = 1197;
    /**
     * <code>THEME_CHAD = 1198;</code>
     */
    public static final int THEME_CHAD_VALUE = 1198;
    /**
     * <code>THEME_BIRTH = 1199;</code>
     */
    public static final int THEME_BIRTH_VALUE = 1199;
    /**
     * <code>THEME_CHALLENGE = 1200;</code>
     */
    public static final int THEME_CHALLENGE_VALUE = 1200;
    /**
     * <code>THEME_PRISON = 1201;</code>
     */
    public static final int THEME_PRISON_VALUE = 1201;
    /**
     * <code>THEME_NON_ROMANTIC = 1202;</code>
     */
    public static final int THEME_NON_ROMANTIC_VALUE = 1202;
    /**
     * <code>THEME_BUDDHA = 1203;</code>
     */
    public static final int THEME_BUDDHA_VALUE = 1203;
    /**
     * <code>THEME_MOTHER = 1204;</code>
     */
    public static final int THEME_MOTHER_VALUE = 1204;
    /**
     * <code>THEME_MASSACHUSETTS = 1205;</code>
     */
    public static final int THEME_MASSACHUSETTS_VALUE = 1205;
    /**
     * <code>THEME_MYSTERY = 1206;</code>
     */
    public static final int THEME_MYSTERY_VALUE = 1206;
    /**
     * <code>THEME_DOMESTIC_VIOLENCE = 1207;</code>
     */
    public static final int THEME_DOMESTIC_VIOLENCE_VALUE = 1207;
    /**
     * <code>THEME_URUGUAY = 1208;</code>
     */
    public static final int THEME_URUGUAY_VALUE = 1208;
    /**
     * <code>THEME_FASHION = 1209;</code>
     */
    public static final int THEME_FASHION_VALUE = 1209;
    /**
     * <code>THEME_RADIO = 1210;</code>
     */
    public static final int THEME_RADIO_VALUE = 1210;
    /**
     * <code>THEME_DOCTOR = 1211;</code>
     */
    public static final int THEME_DOCTOR_VALUE = 1211;
    /**
     * <code>THEME_GENOCIDE = 1212;</code>
     */
    public static final int THEME_GENOCIDE_VALUE = 1212;
    /**
     * <code>THEME_STAND = 1213;</code>
     */
    public static final int THEME_STAND_VALUE = 1213;
    /**
     * <code>THEME_LIBERIA = 1214;</code>
     */
    public static final int THEME_LIBERIA_VALUE = 1214;
    /**
     * <code>THEME_VENEZUELA = 1215;</code>
     */
    public static final int THEME_VENEZUELA_VALUE = 1215;
    /**
     * <code>THEME_LOUISIANA = 1216;</code>
     */
    public static final int THEME_LOUISIANA_VALUE = 1216;
    /**
     * <code>THEME_SOUTH_KOREA = 1217;</code>
     */
    public static final int THEME_SOUTH_KOREA_VALUE = 1217;
    /**
     * <code>THEME_BODY_PARTS = 1218;</code>
     */
    public static final int THEME_BODY_PARTS_VALUE = 1218;
    /**
     * <code>THEME_PHOTOGRAPH = 1219;</code>
     */
    public static final int THEME_PHOTOGRAPH_VALUE = 1219;
    /**
     * <code>THEME_GETTING_OVER = 1220;</code>
     */
    public static final int THEME_GETTING_OVER_VALUE = 1220;
    /**
     * <code>THEME_GEOGRAPHY = 1221;</code>
     */
    public static final int THEME_GEOGRAPHY_VALUE = 1221;
    /**
     * <code>THEME_DISEASE = 1222;</code>
     */
    public static final int THEME_DISEASE_VALUE = 1222;
    /**
     * <code>THEME_NIGHT = 1223;</code>
     */
    public static final int THEME_NIGHT_VALUE = 1223;
    /**
     * <code>THEME_SUMMER = 1224;</code>
     */
    public static final int THEME_SUMMER_VALUE = 1224;
    /**
     * <code>THEME_WORLD = 1225;</code>
     */
    public static final int THEME_WORLD_VALUE = 1225;
    /**
     * <code>THEME_RECOVERY = 1226;</code>
     */
    public static final int THEME_RECOVERY_VALUE = 1226;
    /**
     * <code>THEME_US_AGAINST_THE_WORLD = 1227;</code>
     */
    public static final int THEME_US_AGAINST_THE_WORLD_VALUE = 1227;
    /**
     * <code>THEME_FAITH_IN_DOUBT = 1228;</code>
     */
    public static final int THEME_FAITH_IN_DOUBT_VALUE = 1228;
    /**
     * <code>THEME_WISDOM = 1229;</code>
     */
    public static final int THEME_WISDOM_VALUE = 1229;
    /**
     * <code>THEME_RAIN = 1230;</code>
     */
    public static final int THEME_RAIN_VALUE = 1230;
    /**
     * <code>THEME_BOSS = 1231;</code>
     */
    public static final int THEME_BOSS_VALUE = 1231;
    /**
     * <code>THEME_CRAZY = 1232;</code>
     */
    public static final int THEME_CRAZY_VALUE = 1232;
    /**
     * <code>THEME_HORSE = 1233;</code>
     */
    public static final int THEME_HORSE_VALUE = 1233;
    /**
     * <code>THEME_TREE = 1234;</code>
     */
    public static final int THEME_TREE_VALUE = 1234;
    /**
     * <code>THEME_EQUALITY = 1235;</code>
     */
    public static final int THEME_EQUALITY_VALUE = 1235;
    /**
     * <code>THEME_ADOPTION = 1236;</code>
     */
    public static final int THEME_ADOPTION_VALUE = 1236;
    /**
     * <code>THEME_CARNIVAL = 1237;</code>
     */
    public static final int THEME_CARNIVAL_VALUE = 1237;
    /**
     * <code>THEME_PAPUA_NEW_GUINEA = 1238;</code>
     */
    public static final int THEME_PAPUA_NEW_GUINEA_VALUE = 1238;
    /**
     * <code>THEME_HUNGARY = 1239;</code>
     */
    public static final int THEME_HUNGARY_VALUE = 1239;
    /**
     * <code>THEME_JAPAN = 1240;</code>
     */
    public static final int THEME_JAPAN_VALUE = 1240;
    /**
     * <code>THEME_ROMANCE = 1241;</code>
     */
    public static final int THEME_ROMANCE_VALUE = 1241;
    /**
     * <code>THEME_SALT_LAKE_CITY = 1242;</code>
     */
    public static final int THEME_SALT_LAKE_CITY_VALUE = 1242;
    /**
     * <code>THEME_BELARUS = 1243;</code>
     */
    public static final int THEME_BELARUS_VALUE = 1243;
    /**
     * <code>THEME_LAZY = 1244;</code>
     */
    public static final int THEME_LAZY_VALUE = 1244;
    /**
     * <code>THEME_NUCLEAR_ENERGY = 1245;</code>
     */
    public static final int THEME_NUCLEAR_ENERGY_VALUE = 1245;
    /**
     * <code>THEME_SENEGAL = 1246;</code>
     */
    public static final int THEME_SENEGAL_VALUE = 1246;
    /**
     * <code>THEME_CAT = 1247;</code>
     */
    public static final int THEME_CAT_VALUE = 1247;
    /**
     * <code>THEME_ENVIRONMENT = 1248;</code>
     */
    public static final int THEME_ENVIRONMENT_VALUE = 1248;
    /**
     * <code>THEME_ZOO = 1249;</code>
     */
    public static final int THEME_ZOO_VALUE = 1249;
    /**
     * <code>THEME_TEXT_MESSAGE = 1250;</code>
     */
    public static final int THEME_TEXT_MESSAGE_VALUE = 1250;
    /**
     * <code>THEME_FAVORITE = 1251;</code>
     */
    public static final int THEME_FAVORITE_VALUE = 1251;
    /**
     * <code>THEME_BELOW = 1252;</code>
     */
    public static final int THEME_BELOW_VALUE = 1252;
    /**
     * <code>THEME_GARBAGE = 1253;</code>
     */
    public static final int THEME_GARBAGE_VALUE = 1253;
    /**
     * <code>THEME_OREGON = 1254;</code>
     */
    public static final int THEME_OREGON_VALUE = 1254;
    /**
     * <code>THEME_MEAN = 1255;</code>
     */
    public static final int THEME_MEAN_VALUE = 1255;
    /**
     * <code>THEME_AIRPLANES = 1256;</code>
     */
    public static final int THEME_AIRPLANES_VALUE = 1256;
    /**
     * <code>THEME_DOMINICAN_REPUBLIC = 1257;</code>
     */
    public static final int THEME_DOMINICAN_REPUBLIC_VALUE = 1257;
    /**
     * <code>THEME_KANGAROO = 1258;</code>
     */
    public static final int THEME_KANGAROO_VALUE = 1258;
    /**
     * <code>THEME_STEP_PARENT = 1259;</code>
     */
    public static final int THEME_STEP_PARENT_VALUE = 1259;
    /**
     * <code>THEME_LONGING = 1260;</code>
     */
    public static final int THEME_LONGING_VALUE = 1260;
    /**
     * <code>THEME_BRASS = 1261;</code>
     */
    public static final int THEME_BRASS_VALUE = 1261;
    /**
     * <code>THEME_EGYPT = 1262;</code>
     */
    public static final int THEME_EGYPT_VALUE = 1262;
    /**
     * <code>THEME_SUNSHINE = 1263;</code>
     */
    public static final int THEME_SUNSHINE_VALUE = 1263;
    /**
     * <code>THEME_BEAR = 1264;</code>
     */
    public static final int THEME_BEAR_VALUE = 1264;
    /**
     * <code>THEME_BOLIVIA = 1265;</code>
     */
    public static final int THEME_BOLIVIA_VALUE = 1265;
    /**
     * <code>THEME_SAN_MARINO = 1266;</code>
     */
    public static final int THEME_SAN_MARINO_VALUE = 1266;
    /**
     * <code>THEME_OCEANIA = 1267;</code>
     */
    public static final int THEME_OCEANIA_VALUE = 1267;
    /**
     * <code>THEME_FRIENDSHIP = 1268;</code>
     */
    public static final int THEME_FRIENDSHIP_VALUE = 1268;
    /**
     * <code>THEME_NEW_JERSEY = 1269;</code>
     */
    public static final int THEME_NEW_JERSEY_VALUE = 1269;
    /**
     * <code>THEME_FLOOD = 1270;</code>
     */
    public static final int THEME_FLOOD_VALUE = 1270;
    /**
     * <code>THEME_MOVE = 1271;</code>
     */
    public static final int THEME_MOVE_VALUE = 1271;
    /**
     * <code>THEME_SLOVAKIA = 1272;</code>
     */
    public static final int THEME_SLOVAKIA_VALUE = 1272;
    /**
     * <code>THEME_MERCY = 1273;</code>
     */
    public static final int THEME_MERCY_VALUE = 1273;
    /**
     * <code>THEME_INSECT = 1274;</code>
     */
    public static final int THEME_INSECT_VALUE = 1274;
    /**
     * <code>THEME_EARS = 1275;</code>
     */
    public static final int THEME_EARS_VALUE = 1275;
    /**
     * <code>THEME_FEBRUARY = 1276;</code>
     */
    public static final int THEME_FEBRUARY_VALUE = 1276;
    /**
     * <code>THEME_APOLOGIZE = 1277;</code>
     */
    public static final int THEME_APOLOGIZE_VALUE = 1277;
    /**
     * <code>THEME_U_F_O = 1278;</code>
     */
    public static final int THEME_U_F_O_VALUE = 1278;
    /**
     * <code>THEME_HOLLAND = 1279;</code>
     */
    public static final int THEME_HOLLAND_VALUE = 1279;
    /**
     * <code>THEME_TIME_OF_DAY = 1280;</code>
     */
    public static final int THEME_TIME_OF_DAY_VALUE = 1280;
    /**
     * <code>THEME_REHAB = 1281;</code>
     */
    public static final int THEME_REHAB_VALUE = 1281;
    /**
     * <code>THEME_CHICAGO = 1282;</code>
     */
    public static final int THEME_CHICAGO_VALUE = 1282;
    /**
     * <code>THEME_NIGER = 1283;</code>
     */
    public static final int THEME_NIGER_VALUE = 1283;
    /**
     * <code>THEME_BALTIC_STATES = 1284;</code>
     */
    public static final int THEME_BALTIC_STATES_VALUE = 1284;
    /**
     * <code>THEME_CHANGE = 1285;</code>
     */
    public static final int THEME_CHANGE_VALUE = 1285;
    /**
     * <code>THEME_EGO = 1286;</code>
     */
    public static final int THEME_EGO_VALUE = 1286;
    /**
     * <code>THEME_DOOR = 1287;</code>
     */
    public static final int THEME_DOOR_VALUE = 1287;
    /**
     * <code>THEME_NERVOUS = 1288;</code>
     */
    public static final int THEME_NERVOUS_VALUE = 1288;
    /**
     * <code>THEME_HONG_KONG = 1289;</code>
     */
    public static final int THEME_HONG_KONG_VALUE = 1289;
    /**
     * <code>THEME_CASINO = 1290;</code>
     */
    public static final int THEME_CASINO_VALUE = 1290;
    /**
     * <code>THEME_GOSSIP = 1291;</code>
     */
    public static final int THEME_GOSSIP_VALUE = 1291;
    /**
     * <code>THEME_TELL = 1292;</code>
     */
    public static final int THEME_TELL_VALUE = 1292;
    /**
     * <code>THEME_BOTSWANA = 1293;</code>
     */
    public static final int THEME_BOTSWANA_VALUE = 1293;
    /**
     * <code>THEME_FUTURE = 1294;</code>
     */
    public static final int THEME_FUTURE_VALUE = 1294;
    /**
     * <code>THEME_WELCOME = 1295;</code>
     */
    public static final int THEME_WELCOME_VALUE = 1295;
    /**
     * <code>THEME_MICRONESIA = 1296;</code>
     */
    public static final int THEME_MICRONESIA_VALUE = 1296;
    /**
     * <code>THEME_REDEMPTION = 1297;</code>
     */
    public static final int THEME_REDEMPTION_VALUE = 1297;
    /**
     * <code>THEME_GUILT = 1298;</code>
     */
    public static final int THEME_GUILT_VALUE = 1298;
    /**
     * <code>THEME_SUPERNATURAL = 1299;</code>
     */
    public static final int THEME_SUPERNATURAL_VALUE = 1299;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Theme valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Theme forNumber(int value) {
      switch (value) {
        case 0: return THEME_WATER;
        case 1: return THEME_RESCUE;
        case 2: return THEME_RAT;
        case 3: return THEME_CRAVE;
        case 4: return THEME_MEMORY;
        case 5: return THEME_WEST_VIRGINIA;
        case 6: return THEME_CAPE_VERDE;
        case 7: return THEME_ENGLAND;
        case 8: return THEME_REPEAT;
        case 9: return THEME_GENDER;
        case 10: return THEME_STRING;
        case 11: return THEME_FREEDOM;
        case 12: return THEME_MILE;
        case 13: return THEME_SURF;
        case 14: return THEME_EVERYTHING;
        case 15: return THEME_PAST;
        case 16: return THEME_MENTAL_ILLNESS;
        case 17: return THEME_STREET;
        case 18: return THEME_BREAKUP;
        case 19: return THEME_CZECHOSLOVAKIA;
        case 20: return THEME_JULY;
        case 21: return THEME_KARMA;
        case 22: return THEME_WEEKEND;
        case 23: return THEME_JESUS_CHRIST;
        case 24: return THEME_SMALL;
        case 25: return THEME_HIGHWAY;
        case 26: return THEME_SEYCHELLES;
        case 27: return THEME_NASHVILLE;
        case 28: return THEME_PATRIOTISM;
        case 29: return THEME_PARK;
        case 30: return THEME_PROMISE;
        case 31: return THEME_VIDEO_GAME;
        case 32: return THEME_GAME;
        case 33: return THEME_EXCELLENCE;
        case 34: return THEME_FINLAND;
        case 35: return THEME_EAST;
        case 36: return THEME_LAW_ENFORCEMENT;
        case 37: return THEME_BUILDING;
        case 38: return THEME_JUNE;
        case 39: return THEME_BREATHE;
        case 40: return THEME_INCH;
        case 41: return THEME_AMBITION;
        case 42: return THEME_LIBYA;
        case 43: return THEME_SCANDINAVIA;
        case 44: return THEME_PROTEST;
        case 45: return THEME_SINGLE_PARENT;
        case 46: return THEME_MIND;
        case 47: return THEME_MINE;
        case 48: return THEME_LIECHTENSTEIN;
        case 49: return THEME_BREAKDOWN;
        case 50: return THEME_BOYS;
        case 51: return THEME_JORDAN;
        case 52: return THEME_GOD;
        case 53: return THEME_FOOD;
        case 54: return THEME_NEVADA;
        case 55: return THEME_BELLS;
        case 56: return THEME_HAPPINESS;
        case 57: return THEME_CRASH;
        case 58: return THEME_CAROLINAS;
        case 59: return THEME_BELLY;
        case 60: return THEME_INDEPENDENCE;
        case 61: return THEME_JUMP;
        case 62: return THEME_MICHIGAN;
        case 63: return THEME_COMPETITIVE;
        case 64: return THEME_RED;
        case 65: return THEME_ADORATION;
        case 66: return THEME_DJIBOUTI;
        case 67: return THEME_CUBA;
        case 68: return THEME_PERSEVERE;
        case 69: return THEME_PAD;
        case 70: return THEME_HORSE_RACING;
        case 71: return THEME_SNOWMAN;
        case 72: return THEME_WEST_INDIES;
        case 73: return THEME_KISS;
        case 74: return THEME_NUCLEAR_WAR;
        case 75: return THEME_EXCITED;
        case 76: return THEME_CYPRUS;
        case 77: return THEME_START;
        case 78: return THEME_PAW;
        case 79: return THEME_CEMETARY;
        case 80: return THEME_BRAG;
        case 81: return THEME_BEATS;
        case 82: return THEME_MUSIC_BUSINESS;
        case 83: return THEME_ARMENIA;
        case 84: return THEME_DESPERATE;
        case 85: return THEME_WINTER;
        case 86: return THEME_TOKYO;
        case 87: return THEME_BROTHER;
        case 88: return THEME_LIGHT;
        case 89: return THEME_BRAZIL;
        case 90: return THEME_CAMERA;
        case 91: return THEME_ECUADOR;
        case 92: return THEME_EYES;
        case 93: return THEME_BOXING;
        case 94: return THEME_FOOL;
        case 95: return THEME_ESWATINI;
        case 96: return THEME_IMMORTALITY;
        case 97: return THEME_END;
        case 98: return THEME_UNIQUE;
        case 99: return THEME_BROKEN_HOME;
        case 100: return THEME_PHILOSOPHY;
        case 101: return THEME_COMPLIMENTS;
        case 102: return THEME_BRIDGE;
        case 103: return THEME_WORRY;
        case 104: return THEME_ABOVE;
        case 105: return THEME_COSMETIC;
        case 106: return THEME_VERMONT;
        case 107: return THEME_HAITI;
        case 108: return THEME_HOLE;
        case 109: return THEME_AFGHANISTAN;
        case 110: return THEME_BIRD;
        case 111: return THEME_ALABAMA;
        case 112: return THEME_ONE_NIGHT_STAND;
        case 113: return THEME_REPTILE;
        case 114: return THEME_COMING_HOME;
        case 115: return THEME_MOUTH;
        case 116: return THEME_COLORADO;
        case 117: return THEME_OPPORTUNITY;
        case 118: return THEME_WOMEN_TALKING_TO_MEN;
        case 119: return THEME_PRESENT;
        case 120: return THEME_HOME;
        case 121: return THEME_NOVEMBER;
        case 122: return THEME_ACTIVITIES;
        case 123: return THEME_ESCAPE;
        case 124: return THEME_INSECURE;
        case 125: return THEME_YOUNG;
        case 126: return THEME_DOWN;
        case 127: return THEME_LOST_THAT_LOVING_FEELING;
        case 128: return THEME_RETURN;
        case 129: return THEME_HORROR;
        case 130: return THEME_PEOPLE;
        case 131: return THEME_BABY;
        case 132: return THEME_TALL;
        case 133: return THEME_MINNESOTA;
        case 134: return THEME_ROMANTIC;
        case 135: return THEME_MEN_TALKING_TO_WOMEN;
        case 136: return THEME_REJECTION;
        case 137: return THEME_CANDLE;
        case 138: return THEME_WHITE;
        case 139: return THEME_FEMINISM;
        case 140: return THEME_MOUSE;
        case 141: return THEME_ASIA;
        case 142: return THEME_GASOLINE;
        case 143: return THEME_CLUB;
        case 144: return THEME_COOK_ISLANDS;
        case 145: return THEME_CONTEMPT;
        case 146: return THEME_SPIDER;
        case 147: return THEME_INSULT;
        case 148: return THEME_CALMNESS;
        case 149: return THEME_WAITER;
        case 150: return THEME_BRAIN;
        case 151: return THEME_BENIN;
        case 152: return THEME_AUNT;
        case 153: return THEME_DOLPHIN;
        case 154: return THEME_GO;
        case 155: return THEME_ACCUSE;
        case 156: return THEME_LIGHTHOUSE;
        case 157: return THEME_PERFECTION;
        case 158: return THEME_TIBET;
        case 159: return THEME_SKATEBOARD;
        case 160: return THEME_OPTIMISM;
        case 161: return THEME_GRENADA;
        case 162: return THEME_MONGOLIA;
        case 163: return THEME_MORALITY;
        case 164: return THEME_MOROCCO;
        case 165: return THEME_SRI_LANKA;
        case 166: return THEME_SLEAZY;
        case 167: return THEME_BACK;
        case 168: return THEME_SOLOMON_ISLANDS;
        case 169: return THEME_SHELTER;
        case 170: return THEME_EXCUSE;
        case 171: return THEME_GUN;
        case 172: return THEME_FRENCH_GUIANA;
        case 173: return THEME_MONTANA;
        case 174: return THEME_VIOLENCE;
        case 175: return THEME_KENTUCKY;
        case 176: return THEME_GHANA;
        case 177: return THEME_AIR;
        case 178: return THEME_NOT_COMMITTED;
        case 179: return THEME_DEEP;
        case 180: return THEME_POLITICAL_STATE;
        case 181: return THEME_VOLCANO;
        case 182: return THEME_MALDIVES;
        case 183: return THEME_OLYMPICS;
        case 184: return THEME_BICYCLES;
        case 185: return THEME_MEDICAL;
        case 186: return THEME_TRAPPED;
        case 187: return THEME_VIRGINIA;
        case 188: return THEME_TOY;
        case 189: return THEME_HIDE;
        case 190: return THEME_JUSTICE;
        case 191: return THEME_DARKNESS;
        case 192: return THEME_FIJI;
        case 193: return THEME_GUINEA;
        case 194: return THEME_IGNORANCE;
        case 195: return THEME_HIGHEST;
        case 196: return THEME_DIRECTION;
        case 197: return THEME_STORYBOOK_CHARACTER;
        case 198: return THEME_MOSCOW;
        case 199: return THEME_STYLE;
        case 200: return THEME_COMPASSION;
        case 201: return THEME_DENVER;
        case 202: return THEME_NIGERIA;
        case 203: return THEME_EUROPEAN_CONTINENT;
        case 204: return THEME_FOWL;
        case 205: return THEME_BELIEVE;
        case 206: return THEME_CHEERLEADER;
        case 207: return THEME_LIVING;
        case 208: return THEME_RHYTHM;
        case 209: return THEME_COW;
        case 210: return THEME_SMART;
        case 211: return THEME_SAMOA;
        case 212: return THEME_PIG;
        case 213: return THEME_LOCK;
        case 214: return THEME_FORTUNE_TELLER;
        case 215: return THEME_WRONG;
        case 216: return THEME_AMUSEMENT_PARKS_AND_RIDES;
        case 217: return THEME_WEDDING;
        case 218: return THEME_GESTURES;
        case 219: return THEME_LAST_NIGHT;
        case 220: return THEME_HOPE;
        case 221: return THEME_ESTONIA;
        case 222: return THEME_ALL;
        case 223: return THEME_HORN;
        case 224: return THEME_NEW;
        case 225: return THEME_THOUSAND;
        case 226: return THEME_ENLIGHTENMENT;
        case 227: return THEME_BENELUX;
        case 228: return THEME_SURPRISE_PARTY;
        case 229: return THEME_SHINE;
        case 230: return THEME_IVORY_COAST;
        case 231: return THEME_PHYSICAL_PAIN;
        case 232: return THEME_MAMMAL;
        case 233: return THEME_MOTIVATION;
        case 234: return THEME_EDUCATION;
        case 235: return THEME_DRAFT_RESISTANCE;
        case 236: return THEME_TRY;
        case 237: return THEME_DIZZY;
        case 238: return THEME_INVISIBLE;
        case 239: return THEME_TONGA;
        case 240: return THEME_PLAYER;
        case 241: return THEME_VACATION;
        case 242: return THEME_SANTA_FE;
        case 243: return THEME_LONELY;
        case 244: return THEME_APRIL;
        case 245: return THEME_EMBARRASSED;
        case 246: return THEME_TROUBLE;
        case 247: return THEME_PIANO;
        case 248: return THEME_SUNDAY;
        case 249: return THEME_ME;
        case 250: return THEME_DEATH;
        case 251: return THEME_SKIN;
        case 252: return THEME_SOUTH_SUDAN;
        case 253: return THEME_SUPERIORITY;
        case 254: return THEME_GET_LOST;
        case 255: return THEME_TRUCKS;
        case 256: return THEME_BUTTERFLY;
        case 257: return THEME_DAYTIME;
        case 258: return THEME_TEMPTATION;
        case 259: return THEME_FLIRT;
        case 260: return THEME_CRY;
        case 261: return THEME_MALTA;
        case 262: return THEME_LAS_VEGAS;
        case 263: return THEME_PHONE;
        case 264: return THEME_IRELAND;
        case 265: return THEME_BEDROOM;
        case 266: return THEME_UNDERSTANDING;
        case 267: return THEME_SKATE;
        case 268: return THEME_SAFETY;
        case 269: return THEME_SYNTHESIZER;
        case 270: return THEME_FRANCE;
        case 271: return THEME_WOMENS_NAMES;
        case 272: return THEME_NORTH_AMERICA;
        case 273: return THEME_VOODOO;
        case 274: return THEME_COMIC;
        case 275: return THEME_HANDS;
        case 276: return THEME_HIGH;
        case 277: return THEME_ORPHAN;
        case 278: return THEME_FEEL;
        case 279: return THEME_SENSUALITY;
        case 280: return THEME_FAITH;
        case 281: return THEME_STRESS;
        case 282: return THEME_FEET;
        case 283: return THEME_FORGIVE;
        case 284: return THEME_ANIMALS;
        case 285: return THEME_WHALE;
        case 286: return THEME_MAIL;
        case 287: return THEME_NICARAGUA;
        case 288: return THEME_NORTH_MACEDONIA;
        case 289: return THEME_DISAPPOINTMENT;
        case 290: return THEME_FIND;
        case 291: return THEME_SHEEP;
        case 292: return THEME_MEXICO;
        case 293: return THEME_DESERT;
        case 294: return THEME_HANDSOME;
        case 295: return THEME_HOUSTON;
        case 296: return THEME_REGRET;
        case 297: return THEME_RAP_GAME;
        case 298: return THEME_BALI;
        case 299: return THEME_INDIANA;
        case 300: return THEME_WALES;
        case 301: return THEME_CINCINNATI;
        case 302: return THEME_BURDEN;
        case 303: return THEME_HILLBILLY;
        case 304: return THEME_MULTIPLE_BODY_PARTS;
        case 305: return THEME_BAHAMAS;
        case 306: return THEME_FRENCH_CARIBBEAN;
        case 307: return THEME_FOLLOW;
        case 308: return THEME_UNFAIR;
        case 309: return THEME_MALI;
        case 310: return THEME_PANAMA;
        case 311: return THEME_ACTOR;
        case 312: return THEME_SWEET;
        case 313: return THEME_TAXI;
        case 314: return THEME_MAGICIAN;
        case 315: return THEME_BEST;
        case 316: return THEME_THEM;
        case 317: return THEME_USER_DEFINED;
        case 318: return THEME_DONT_GO;
        case 319: return THEME_HEAD;
        case 320: return THEME_CANT_RESIST;
        case 321: return THEME_SHAKE;
        case 322: return THEME_AFRICA;
        case 323: return THEME_SPRING;
        case 324: return THEME_COWBOY_AND_COWGIRL;
        case 325: return THEME_ISLE_OF_MAN;
        case 326: return THEME_PROBLEMS;
        case 327: return THEME_WE_SHOULD_BE_TOGETHER;
        case 328: return THEME_NAMIBIA;
        case 329: return THEME_KEYS;
        case 330: return THEME_CHARITY;
        case 331: return THEME_NEW_ZEALAND;
        case 332: return THEME_SLAVERY;
        case 333: return THEME_ART;
        case 334: return THEME_WATERFALL;
        case 335: return THEME_CIRCUS;
        case 336: return THEME_SAINT_KITTS_AND_NEVIS;
        case 337: return THEME_MADAGASCAR;
        case 338: return THEME_POSSIBILITY;
        case 339: return THEME_BOARDWALK;
        case 340: return THEME_ASHES;
        case 341: return THEME_WASHINGTON;
        case 342: return THEME_UNION;
        case 343: return THEME_SWEDEN;
        case 344: return THEME_ROYALTY;
        case 345: return THEME_FINGERS;
        case 346: return THEME_STAR;
        case 347: return THEME_MALAWI;
        case 348: return THEME_SHOULDER;
        case 349: return THEME_ANDORRA;
        case 350: return THEME_VALENTINE;
        case 351: return THEME_POLAND;
        case 352: return THEME_FISH;
        case 353: return THEME_IN_TROUBLE;
        case 354: return THEME_WOLF;
        case 355: return THEME_FACE;
        case 356: return THEME_ANGST;
        case 357: return THEME_DALLAS;
        case 358: return THEME_HAVANA;
        case 359: return THEME_TUNISIA;
        case 360: return THEME_WISCONSIN;
        case 361: return THEME_NATURE;
        case 362: return THEME_WINDOW;
        case 363: return THEME_MOTION;
        case 364: return THEME_COSTA_RICA;
        case 365: return THEME_AFFECTION;
        case 366: return THEME_CONNECTION;
        case 367: return THEME_RELIGION;
        case 368: return THEME_SEDUCED;
        case 369: return THEME_RUN;
        case 370: return THEME_PHARMACEUTICAL;
        case 371: return THEME_EUROPEAN_UNION;
        case 372: return THEME_TUVALU;
        case 373: return THEME_TRAGEDY;
        case 374: return THEME_SHOULD_HAVE_SAID;
        case 375: return THEME_BIRMINGHAM;
        case 376: return THEME_CIVIL_RIGHTS;
        case 377: return THEME_FEVER;
        case 378: return THEME_PRETTY;
        case 379: return THEME_SUPERHERO;
        case 380: return THEME_RESTAURANT;
        case 381: return THEME_SLEEP;
        case 382: return THEME_CHOOSE;
        case 383: return THEME_MUSIC;
        case 384: return THEME_FIRE;
        case 385: return THEME_CENTRAL_AMERICA;
        case 386: return THEME_HEALING;
        case 387: return THEME_LEARN;
        case 388: return THEME_HAT;
        case 389: return THEME_VILLAIN;
        case 390: return THEME_WOMEN_TALKING_TO_WOMEN;
        case 391: return THEME_GRATITUDE;
        case 392: return THEME_TONGUE;
        case 393: return THEME_DETROIT;
        case 394: return THEME_ANYTHING;
        case 395: return THEME_MORNING;
        case 396: return THEME_SING;
        case 397: return THEME_ALCOHOL;
        case 398: return THEME_PARADE;
        case 399: return THEME_IN_FRONT;
        case 400: return THEME_BEACH;
        case 401: return THEME_CONTAINER;
        case 402: return THEME_CONFIDENCE;
        case 403: return THEME_NOSTALGIA;
        case 404: return THEME_POLYNESIA;
        case 405: return THEME_SEARCH;
        case 406: return THEME_STUBBORN;
        case 407: return THEME_DRIVE;
        case 408: return THEME_OUTDOOR;
        case 409: return THEME_ALGERIA;
        case 410: return THEME_LOOK;
        case 411: return THEME_SLOVENIA;
        case 412: return THEME_BEVERAGE;
        case 413: return THEME_TRUTH;
        case 414: return THEME_THIN;
        case 415: return THEME_COLOMBIA;
        case 416: return THEME_HEAVEN;
        case 417: return THEME_GAS_STATION;
        case 418: return THEME_CLOTHING;
        case 419: return THEME_MOLDOVA;
        case 420: return THEME_FREE;
        case 421: return THEME_PENNSYLVANIA;
        case 422: return THEME_GANGSTA_LIFE;
        case 423: return THEME_TEXAS;
        case 424: return THEME_JEALOUS;
        case 425: return THEME_NEW_MEXICO;
        case 426: return THEME_NOW;
        case 427: return THEME_HONDURAS;
        case 428: return THEME_UP;
        case 429: return THEME_NAURU;
        case 430: return THEME_US;
        case 431: return THEME_BEAUTY;
        case 432: return THEME_BROWN;
        case 433: return THEME_GAMBLING;
        case 434: return THEME_CHRISTMAS;
        case 435: return THEME_GREED;
        case 436: return THEME_SEPTEMBER;
        case 437: return THEME_CRITICIZE;
        case 438: return THEME_PARENT;
        case 439: return THEME_FASCISM;
        case 440: return THEME_HIPS;
        case 441: return THEME_SHOW_BIZ;
        case 442: return THEME_FORBIDDEN;
        case 443: return THEME_LEAVE;
        case 444: return THEME_WAR;
        case 445: return THEME_SPECIFIC_TIME;
        case 446: return THEME_BASKETBALL;
        case 447: return THEME_FISHING;
        case 448: return THEME_SITUATION;
        case 449: return THEME_NEW_HAMPSHIRE;
        case 450: return THEME_PRODUCT_AND_BRAND;
        case 451: return THEME_NETHERLANDS;
        case 452: return THEME_EARTHQUAKE;
        case 453: return THEME_MOUNTAIN;
        case 454: return THEME_BACK_TOGETHER;
        case 455: return THEME_QUALITY;
        case 456: return THEME_ALASKA;
        case 457: return THEME_SHOPPING;
        case 458: return THEME_TUESDAY;
        case 459: return THEME_BLAME;
        case 460: return THEME_PUERTO_RICO;
        case 461: return THEME_BASS;
        case 462: return THEME_OBSESSION;
        case 463: return THEME_BHUTAN;
        case 464: return THEME_TRUST;
        case 465: return THEME_MIAMI;
        case 466: return THEME_CONTINENT;
        case 467: return THEME_ADDICTION;
        case 468: return THEME_LIGHTNING;
        case 469: return THEME_FAR;
        case 470: return THEME_FAT;
        case 471: return THEME_ZIMBABWE;
        case 472: return THEME_GREEN;
        case 473: return THEME_MONTENEGRO;
        case 474: return THEME_BARS;
        case 475: return THEME_PRAYER;
        case 476: return THEME_MISTAKES;
        case 477: return THEME_BIRTH_CONTROL;
        case 478: return THEME_SUPPORT;
        case 479: return THEME_BEHIND;
        case 480: return THEME_CENTRAL_AFRICAN_REPUBLIC;
        case 481: return THEME_SEGREGATION;
        case 482: return THEME_SHARK;
        case 483: return THEME_CELEBRATION;
        case 484: return THEME_FURNITURE;
        case 485: return THEME_UTAH;
        case 486: return THEME_BLESS;
        case 487: return THEME_GOODNIGHT;
        case 488: return THEME_GREECE;
        case 489: return THEME_PRIVACY;
        case 490: return THEME_SHOUTING;
        case 491: return THEME_SOUTH_AFRICA;
        case 492: return THEME_WIFE;
        case 493: return THEME_SPECIAL;
        case 494: return THEME_WORK;
        case 495: return THEME_COMPUTER;
        case 496: return THEME_GUYANA;
        case 497: return THEME_PLANET;
        case 498: return THEME_NEW_DAY;
        case 499: return THEME_FAILURE;
        case 500: return THEME_WOMEN;
        case 501: return THEME_UNCLE;
        case 502: return THEME_AFTERNOON;
        case 503: return THEME_COLD;
        case 504: return THEME_SAVANNAH;
        case 505: return THEME_UKRAINE;
        case 506: return THEME_MEN_TALKING_TO_MEN;
        case 507: return THEME_HOUSE;
        case 508: return THEME_LIES;
        case 509: return THEME_GOOD_LIFE;
        case 510: return THEME_TOBACCO;
        case 511: return THEME_LOW;
        case 512: return THEME_IDEA;
        case 513: return THEME_BEGINNING;
        case 514: return THEME_CONNECTICUT;
        case 515: return THEME_CRIME;
        case 516: return THEME_COUNTRY;
        case 517: return THEME_BERMUDA;
        case 518: return THEME_ALWAYS;
        case 519: return THEME_JAMAICA;
        case 520: return THEME_TURKMENISTAN;
        case 521: return THEME_WRITE;
        case 522: return THEME_DEFEATED;
        case 523: return THEME_HELP;
        case 524: return THEME_COUPLE;
        case 525: return THEME_COOL;
        case 526: return THEME_THAILAND;
        case 527: return THEME_LECTURING;
        case 528: return THEME_FRAGILE;
        case 529: return THEME_FAKE;
        case 530: return THEME_AMSTERDAM;
        case 531: return THEME_SAUDI_ARABIA;
        case 532: return THEME_MONSTER;
        case 533: return THEME_NEW_YORK_CITY;
        case 534: return THEME_WITCH;
        case 535: return THEME_KUWAIT;
        case 536: return THEME_BURKINA_FASO;
        case 537: return THEME_CROATIA;
        case 538: return THEME_LOST;
        case 539: return THEME_GUITAR;
        case 540: return THEME_MOVIE;
        case 541: return THEME_HIPPIE;
        case 542: return THEME_FAIR;
        case 543: return THEME_EL_SALVADOR;
        case 544: return THEME_ROAD;
        case 545: return THEME_LOSS;
        case 546: return THEME_SEARCHING_FOR;
        case 547: return THEME_RHODE_ISLAND;
        case 548: return THEME_FOUND;
        case 549: return THEME_PREGNANCY;
        case 550: return THEME_SILENCE;
        case 551: return THEME_FEELINGS;
        case 552: return THEME_CAPITAL_PUNISHMENT;
        case 553: return THEME_FAMILY;
        case 554: return THEME_HALLOWEEN;
        case 555: return THEME_NONE;
        case 556: return THEME_DAY;
        case 557: return THEME_HELL;
        case 558: return THEME_BEAUTIFUL;
        case 559: return THEME_FALLING_IN;
        case 560: return THEME_UNFAITHFUL;
        case 561: return THEME_BEING_IN;
        case 562: return THEME_DRINK;
        case 563: return THEME_KNOWLEDGE;
        case 564: return THEME_SPORT;
        case 565: return THEME_FAME;
        case 566: return THEME_AUSTRIA;
        case 567: return THEME_EXERCISE;
        case 568: return THEME_TECHNOLOGY;
        case 569: return THEME_MONACO;
        case 570: return THEME_INNOCENCE;
        case 571: return THEME_UGLY;
        case 572: return THEME_CANDY;
        case 573: return THEME_MEMPHIS;
        case 574: return THEME_HOSPITAL;
        case 575: return THEME_BELIEF;
        case 576: return THEME_KANSAS_CITY;
        case 577: return THEME_ROCK;
        case 578: return THEME_AUTUMN;
        case 579: return THEME_NOON;
        case 580: return THEME_YESTERDAY;
        case 581: return THEME_DAUGHTER;
        case 582: return THEME_SOUTH_AMERICA;
        case 583: return THEME_YOUTH;
        case 584: return THEME_PERCUSSION;
        case 585: return THEME_MANIPULATE;
        case 586: return THEME_MEDELL__II__N;
        case 587: return THEME_SIERRA_LEONE;
        case 588: return THEME_ALBANIA;
        case 589: return THEME_AUGUST;
        case 590: return THEME_UNITY;
        case 591: return THEME_PACIFIC_ISLANDS;
        case 592: return THEME_LOVE;
        case 593: return THEME_ENLISTMENT;
        case 594: return THEME_SAD;
        case 595: return THEME_THEATRE;
        case 596: return THEME_FALL;
        case 597: return THEME_MARSHALL_ISLANDS;
        case 598: return THEME_ETHIOPIA;
        case 599: return THEME_TEMPERATURE;
        case 600: return THEME_WILD;
        case 601: return THEME_MENS_NAMES;
        case 602: return THEME_LOSING_YOU;
        case 603: return THEME_FORGET;
        case 604: return THEME_POWER_AND_CONTROL;
        case 605: return THEME_EARTH;
        case 606: return THEME_WASTEFUL;
        case 607: return THEME_TOGETHERNESS;
        case 608: return THEME_THREATEN;
        case 609: return THEME_PAKISTAN;
        case 610: return THEME_DINOSAUR;
        case 611: return THEME_ATLANTA;
        case 612: return THEME_GAMBIA;
        case 613: return THEME_QATAR;
        case 614: return THEME_CROCODILE;
        case 615: return THEME_DANGER;
        case 616: return THEME_SERBIA;
        case 617: return THEME_DRUG;
        case 618: return THEME_JUKEBOX;
        case 619: return THEME_FLOWER;
        case 620: return THEME_ZODIAC;
        case 621: return THEME_BAD;
        case 622: return THEME_FROG;
        case 623: return THEME_SHAME;
        case 624: return THEME_RWANDA;
        case 625: return THEME_ETERNITY;
        case 626: return THEME_SPIRIT;
        case 627: return THEME_DATE;
        case 628: return THEME_BANGLADESH;
        case 629: return THEME_TODAY;
        case 630: return THEME_BARBADOS;
        case 631: return THEME_FIX;
        case 632: return THEME_DONT_LEAVE_ME;
        case 633: return THEME_DENMARK;
        case 634: return THEME_POLITICS;
        case 635: return THEME_BAY;
        case 636: return THEME_FIGHT;
        case 637: return THEME_GRANDPARENT;
        case 638: return THEME_YOU;
        case 639: return THEME_INTEGRITY;
        case 640: return THEME_EUROPEAN_ECONOMIC_AREA;
        case 641: return THEME_HEART;
        case 642: return THEME_STORM;
        case 643: return THEME_WIND;
        case 644: return THEME_LEFT;
        case 645: return THEME_SOCIAL_OUTCAST;
        case 646: return THEME_CAMBODIA;
        case 647: return THEME_STOP;
        case 648: return THEME_IDEAL;
        case 649: return THEME_SIZE;
        case 650: return THEME_SWAMP;
        case 651: return THEME_JEWELRY;
        case 652: return THEME_BLACK;
        case 653: return THEME_PONY;
        case 654: return THEME_PARAGUAY;
        case 655: return THEME_BALKANS;
        case 656: return THEME_SUCCESS;
        case 657: return THEME_WEAPON;
        case 658: return THEME_SYRIA;
        case 659: return THEME_IDEAS;
        case 660: return THEME_DREAM;
        case 661: return THEME_GROW_OLDER;
        case 662: return THEME_CARD_GAME;
        case 663: return THEME_DAWN;
        case 664: return THEME_RANCH;
        case 665: return THEME_LION;
        case 666: return THEME_CALL_OUT;
        case 667: return THEME_HAIR;
        case 668: return THEME_ANGER;
        case 669: return THEME_FRENCH_POLYNESIA;
        case 670: return THEME_VATICAN;
        case 671: return THEME_RODEO;
        case 672: return THEME_ANGEL;
        case 673: return THEME_ANNIVERSARY;
        case 674: return THEME_WOODWIND;
        case 675: return THEME_METHOD;
        case 676: return THEME_CALIFORNIA;
        case 677: return THEME_HOT;
        case 678: return THEME_BAHRAIN;
        case 679: return THEME_SEA;
        case 680: return THEME_CHASE;
        case 681: return THEME_HOLLYWOOD;
        case 682: return THEME_AMBIVALENT;
        case 683: return THEME_HONESTY;
        case 684: return THEME_MISSISSIPPI;
        case 685: return THEME_DEVIL;
        case 686: return THEME_SAIL;
        case 687: return THEME_COMOROS;
        case 688: return THEME_HERO;
        case 689: return THEME_CITY_LIFE;
        case 690: return THEME_POLITICAL;
        case 691: return THEME_CANT_GET_OVER;
        case 692: return THEME_STRING_AND_ROPE;
        case 693: return THEME_FABRIC;
        case 694: return THEME_MARYLAND;
        case 695: return THEME_WEEK;
        case 696: return THEME_HOLDING_ON;
        case 697: return THEME_ADOLESCENCE;
        case 698: return THEME_ERITREA;
        case 699: return THEME_LIPS;
        case 700: return THEME_OKLAHOMA;
        case 701: return THEME_CONFUSED;
        case 702: return THEME_ARKANSAS;
        case 703: return THEME_TIGER;
        case 704: return THEME_REUNITE;
        case 705: return THEME_FLY;
        case 706: return THEME_OCTOBER;
        case 707: return THEME_SOBER;
        case 708: return THEME_STRANGE;
        case 709: return THEME_OCEAN;
        case 710: return THEME_NEW_YORK;
        case 711: return THEME_BOUNCE;
        case 712: return THEME_NECK;
        case 713: return THEME_BULGARIA;
        case 714: return THEME_SEASON;
        case 715: return THEME_FAST;
        case 716: return THEME_LEGS;
        case 717: return THEME_BEG;
        case 718: return THEME_BLUE;
        case 719: return THEME_REPUBLIC_OF_THE_CONGO;
        case 720: return THEME_COURAGE;
        case 721: return THEME_NEAR;
        case 722: return THEME_KENYA;
        case 723: return THEME_TELEVISION;
        case 724: return THEME_THURSDAY;
        case 725: return THEME_HOLIDAY;
        case 726: return THEME_MOTORCYCLES;
        case 727: return THEME_BALLERINA;
        case 728: return THEME_FARM;
        case 729: return THEME_INDIVIDUALITY;
        case 730: return THEME_DANCE;
        case 731: return THEME_DRIFT;
        case 732: return THEME_ISRAEL;
        case 733: return THEME_BETRAY;
        case 734: return THEME_FATHER;
        case 735: return THEME_PLACE;
        case 736: return THEME_TAJIKISTAN;
        case 737: return THEME_REVOLUTION;
        case 738: return THEME_ASTRONAUT;
        case 739: return THEME_REVOLVE;
        case 740: return THEME_MONDAY;
        case 741: return THEME_WYOMING;
        case 742: return THEME_IDENTITY_CRISIS;
        case 743: return THEME_TATTOO;
        case 744: return THEME_MALAYSIA;
        case 745: return THEME_BODY_LANGUAGE;
        case 746: return THEME_NEED;
        case 747: return THEME_PLATONIC;
        case 748: return THEME_ROME;
        case 749: return THEME_HELLO;
        case 750: return THEME_EUROPEAN_ECONOMIC_COMMUNITY;
        case 751: return THEME_FRIDAY;
        case 752: return THEME_ENEMY;
        case 753: return THEME_BIRTHDAY_PARTY;
        case 754: return THEME_HONEYMOON;
        case 755: return THEME_INSIGHT;
        case 756: return THEME_NORTH;
        case 757: return THEME_TEACH;
        case 758: return THEME_DEFEAT;
        case 759: return THEME_LOVELY;
        case 760: return THEME_DATING;
        case 761: return THEME_PROPHECY;
        case 762: return THEME_SAME;
        case 763: return THEME_GOLD;
        case 764: return THEME_WIZARDRY;
        case 765: return THEME_TALKING;
        case 766: return THEME_GOLF;
        case 767: return THEME_ATTITUDE;
        case 768: return THEME_SHY;
        case 769: return THEME_GYPSY;
        case 770: return THEME_COLOR;
        case 771: return THEME_HUNDRED;
        case 772: return THEME_SPACED_OUT;
        case 773: return THEME_FATE;
        case 774: return THEME_FOX;
        case 775: return THEME_EMPOWERED;
        case 776: return THEME_BATTLE_OF_THE_SEXES;
        case 777: return THEME_SILVER;
        case 778: return THEME_ANTI_DRUG;
        case 779: return THEME_ELEPHANT;
        case 780: return THEME_STICK;
        case 781: return THEME_OBJECTS;
        case 782: return THEME_ITALY;
        case 783: return THEME_SIN;
        case 784: return THEME_TURN;
        case 785: return THEME_COMMITMENT;
        case 786: return THEME_LOYALTY;
        case 787: return THEME_MARDI_GRAS;
        case 788: return THEME_SIT;
        case 789: return THEME_MEASUREMENT;
        case 790: return THEME_HARBOR;
        case 791: return THEME_TRADITION;
        case 792: return THEME_SCOTLAND;
        case 793: return THEME_BLONDE;
        case 794: return THEME_PORPOISE;
        case 795: return THEME_MONEY;
        case 796: return THEME_SAINT_VINCENT_AND_THE_GRENADINES;
        case 797: return THEME_SCHOOL;
        case 798: return THEME_NUMBER;
        case 799: return THEME_RAINBOW;
        case 800: return THEME_CHILDREN;
        case 801: return THEME_MILLION;
        case 802: return THEME_KYRGYZSTAN;
        case 803: return THEME_BIG;
        case 804: return THEME_SPEED;
        case 805: return THEME_GARDEN;
        case 806: return THEME_TOGO;
        case 807: return THEME_TAROT;
        case 808: return THEME_UZBEKISTAN;
        case 809: return THEME_UNIVERSE;
        case 810: return THEME_NEW_YEAR;
        case 811: return THEME_FOOTBALL;
        case 812: return THEME_WISH;
        case 813: return THEME_BOSNIA_AND_HERZEGOVINA;
        case 814: return THEME_SKI;
        case 815: return THEME_COUNTRY_LIFE;
        case 816: return THEME_SAN_ANTONIO;
        case 817: return THEME_INSOMNIA;
        case 818: return THEME_PURPLE;
        case 819: return THEME_PIRATE;
        case 820: return THEME_OHIO;
        case 821: return THEME_GOOD;
        case 822: return THEME_MIDNIGHT;
        case 823: return THEME_NIGHTINGALE;
        case 824: return THEME_DOMINICA;
        case 825: return THEME_SKY;
        case 826: return THEME_FAREWELL;
        case 827: return THEME_LASTING;
        case 828: return THEME_RESPECT;
        case 829: return THEME_SUDAN;
        case 830: return THEME_WIND_CHIMES;
        case 831: return THEME_PORTUGAL;
        case 832: return THEME_PRESIDENT;
        case 833: return THEME_LATVIA;
        case 834: return THEME_DECEMBER;
        case 835: return THEME_COMPLAIN;
        case 836: return THEME_ESPIONAGE;
        case 837: return THEME_DIFFICULT;
        case 838: return THEME_CELEBRITY;
        case 839: return THEME_GUATEMALA;
        case 840: return THEME_CRUCIFIXION;
        case 841: return THEME_DOG;
        case 842: return THEME_DISTANCE;
        case 843: return THEME_HUMAN;
        case 844: return THEME_TANZANIA;
        case 845: return THEME_DELAWARE;
        case 846: return THEME_FLORIDA;
        case 847: return THEME_ISLAND;
        case 848: return THEME_TOMORROW;
        case 849: return THEME_GIRLS;
        case 850: return THEME_INDIA;
        case 851: return THEME_ATTRACTIVE;
        case 852: return THEME_READY;
        case 853: return THEME_CANADA;
        case 854: return THEME_TRAIL;
        case 855: return THEME_BASEBALL;
        case 856: return THEME_YELLOW;
        case 857: return THEME_UNITED_KINGDOM;
        case 858: return THEME_MUSICAL_INSTRUMENT;
        case 859: return THEME_TAIWAN;
        case 860: return THEME_DAYDREAM;
        case 861: return THEME_DANCE_PARTY;
        case 862: return THEME_RIDE;
        case 863: return THEME_GERMANY;
        case 864: return THEME_MAY;
        case 865: return THEME_BATHROOM;
        case 866: return THEME_RABBIT;
        case 867: return THEME_RIGHT;
        case 868: return THEME_SOMALIA;
        case 869: return THEME_CONVERSATION;
        case 870: return THEME_KIRIBATI;
        case 871: return THEME_VIETNAM;
        case 872: return THEME_GENTLE;
        case 873: return THEME_RIVER;
        case 874: return THEME_MIDDLE_EAST;
        case 875: return THEME_FUN;
        case 876: return THEME_ALIEN;
        case 877: return THEME_FUR;
        case 878: return THEME_MULE;
        case 879: return THEME_GOVERNMENT;
        case 880: return THEME_TIMOR__MINUS___LESTE;
        case 881: return THEME_HATE;
        case 882: return THEME_SOUTH;
        case 883: return THEME_TOOLS;
        case 884: return THEME_TONIGHT;
        case 885: return THEME_MOBILE;
        case 886: return THEME_SWITZERLAND;
        case 887: return THEME_OPPRESSION;
        case 888: return THEME_SPAIN;
        case 889: return THEME_SON;
        case 890: return THEME_THREE_KINGS;
        case 891: return THEME_REFLECT;
        case 892: return THEME_CLIMB;
        case 893: return THEME_PALAU;
        case 894: return THEME_RACISM;
        case 895: return THEME_CRUSH;
        case 896: return THEME_SPECIFIC_AGE;
        case 897: return THEME_CHURCH;
        case 898: return THEME_SNOW;
        case 899: return THEME_SYMPATHY;
        case 900: return THEME_DUBLIN;
        case 901: return THEME_LAKE;
        case 902: return THEME_SMOKE;
        case 903: return THEME_GROW_UP;
        case 904: return THEME_BRUNETTE;
        case 905: return THEME_COAST;
        case 906: return THEME_PATIENCE;
        case 907: return THEME_MOZAMBIQUE;
        case 908: return THEME_EVIL;
        case 909: return THEME_BUILD;
        case 910: return THEME_REAL;
        case 911: return THEME_NOT_MY_TYPE;
        case 912: return THEME_LESOTHO;
        case 913: return THEME_SAN_FRANCISCO;
        case 914: return THEME_BERLIN;
        case 915: return THEME_EUROPE;
        case 916: return THEME_TEETH;
        case 917: return THEME_ARMS;
        case 918: return THEME_DISCOVERY;
        case 919: return THEME_CITY;
        case 920: return THEME_MAURITIUS;
        case 921: return THEME_TULSA;
        case 922: return THEME_PINK;
        case 923: return THEME_SANTA_CLAUS;
        case 924: return THEME_MEN;
        case 925: return THEME_WEDNESDAY;
        case 926: return THEME_FANTASY;
        case 927: return THEME_LAUGHTER;
        case 928: return THEME_HEALTH_AND_WELLNESS;
        case 929: return THEME_SAVE;
        case 930: return THEME_MARRIED_LIFE;
        case 931: return THEME_ADVICE;
        case 932: return THEME_MOURNING;
        case 933: return THEME_WAIT;
        case 934: return THEME_HEROISM;
        case 935: return THEME_PLAY_MUSIC;
        case 936: return THEME_HOTEL;
        case 937: return THEME_CLOWN;
        case 938: return THEME_WALK;
        case 939: return THEME_WALL;
        case 940: return THEME_DESPAIR;
        case 941: return THEME_MAINE;
        case 942: return THEME_TENNESSEE;
        case 943: return THEME_AT_FIRST_SIGHT;
        case 944: return THEME_CLEAN;
        case 945: return THEME_INFORMATION;
        case 946: return THEME_ENGAGEMENT;
        case 947: return THEME_PRIDE;
        case 948: return THEME_UNBELIEVABLE;
        case 949: return THEME_ROAD_ACCIDENT;
        case 950: return THEME_CREATE;
        case 951: return THEME_VIENNA;
        case 952: return THEME_TERRIBLE;
        case 953: return THEME_SISTER;
        case 954: return THEME_WINNING;
        case 955: return THEME_LITHUANIA;
        case 956: return THEME_BODY;
        case 957: return THEME_MISSING_YOU;
        case 958: return THEME_HIGHLAND;
        case 959: return THEME_REAR;
        case 960: return THEME_SNAKE;
        case 961: return THEME_WEST;
        case 962: return THEME_MAGIC;
        case 963: return THEME_STEAL;
        case 964: return THEME_TRINIDAD_AND_TOBAGO;
        case 965: return THEME_AFRAID;
        case 966: return THEME_OPINIONS;
        case 967: return THEME_NORWAY;
        case 968: return THEME_MACAO;
        case 969: return THEME_POISON;
        case 970: return THEME_FOREST;
        case 971: return THEME_PAPER;
        case 972: return THEME_UGANDA;
        case 973: return THEME_SURINAME;
        case 974: return THEME_EMERGENCY;
        case 975: return THEME_ALONE;
        case 976: return THEME_VOICE;
        case 977: return THEME_PARIS;
        case 978: return THEME_ASSURANCE;
        case 979: return THEME_GEEK;
        case 980: return THEME_BUSY;
        case 981: return THEME_SLOW;
        case 982: return THEME_ELVIS;
        case 983: return THEME_ANTIGUA_AND_BARBUDA;
        case 984: return THEME_OLD;
        case 985: return THEME_KAZAKHSTAN;
        case 986: return THEME_HISTORY;
        case 987: return THEME_BLOOD;
        case 988: return THEME_SAINT_LUCIA;
        case 989: return THEME_SATURDAY;
        case 990: return THEME_REBELLION;
        case 991: return THEME_MONTH;
        case 992: return THEME_SUFFRAGE;
        case 993: return THEME_REMEMBER;
        case 994: return THEME_HILLS;
        case 995: return THEME_CAR_RACING;
        case 996: return THEME_SURVIVE;
        case 997: return THEME_REDHEAD;
        case 998: return THEME_EAGLE;
        case 999: return THEME_LAOS;
        case 1000: return THEME_JANUARY;
        case 1001: return THEME_CLIFF;
        case 1002: return THEME_ARGENTINA;
        case 1003: return THEME_UNITED_ARAB_EMIRATES;
        case 1004: return THEME_BELIZE;
        case 1005: return THEME_BRITAIN;
        case 1006: return THEME_ZAMBIA;
        case 1007: return THEME_SMILE;
        case 1008: return THEME_MURDER;
        case 1009: return THEME_SUN;
        case 1010: return THEME_BRITISH_ISLES;
        case 1011: return THEME_SMALL_TOWN_LIFE;
        case 1012: return THEME_TORN;
        case 1013: return THEME_GUINEA__MINUS___BISSAU;
        case 1014: return THEME_ADDICTED_TO;
        case 1015: return THEME_ILLINOIS;
        case 1016: return THEME_LONDON;
        case 1017: return THEME_CLOSE;
        case 1018: return THEME_GEORGIA;
        case 1019: return THEME_MISBEHAVIOR;
        case 1020: return THEME_IDAHO;
        case 1021: return THEME_YEMEN;
        case 1022: return THEME_TRAINS;
        case 1023: return THEME_INSPIRATION;
        case 1024: return THEME_LEADER;
        case 1025: return THEME_MONKEY;
        case 1026: return THEME_SINGLE_PERSON;
        case 1027: return THEME_MAKING_LOVE;
        case 1028: return THEME_MARCH;
        case 1029: return THEME_PREJUDICE;
        case 1030: return THEME_DETERMINATION;
        case 1031: return THEME_SUICIDE;
        case 1032: return THEME_ELEMENTS;
        case 1033: return THEME_STALKER;
        case 1034: return THEME_SIMPLE;
        case 1035: return THEME_GREAT_BRITAIN;
        case 1036: return THEME_PARTY;
        case 1037: return THEME_BUG;
        case 1038: return THEME_LISTENING;
        case 1039: return THEME_SWAGGER;
        case 1040: return THEME_MISSOURI;
        case 1041: return THEME_QUESTION;
        case 1042: return THEME_UTOPIA;
        case 1043: return THEME_NIGHTMARE;
        case 1044: return THEME_VEGETABLE;
        case 1045: return THEME_COMMUNICATION;
        case 1046: return THEME_MILITARY;
        case 1047: return THEME_BUS;
        case 1048: return THEME_JAVA;
        case 1049: return THEME_PROTECT;
        case 1050: return THEME_COUSIN;
        case 1051: return THEME_HAWAII;
        case 1052: return THEME_EVERYDAY;
        case 1053: return THEME_CAREFREE;
        case 1054: return THEME_BRUNEI;
        case 1055: return THEME_LEBANON;
        case 1056: return THEME_DIVORCE;
        case 1057: return THEME_AZERBAIJAN;
        case 1058: return THEME_BALTIMORE;
        case 1059: return THEME_MAURITANIA;
        case 1060: return THEME_GHOST;
        case 1061: return THEME_WORDS;
        case 1062: return THEME_COMFORT;
        case 1063: return THEME_CONSISTENT;
        case 1064: return THEME_ANXIOUS;
        case 1065: return THEME_EVENT;
        case 1066: return THEME_SUNRISE;
        case 1067: return THEME_RESILIENT;
        case 1068: return THEME_SHIP;
        case 1069: return THEME_AUSTRALIA;
        case 1070: return THEME_PHILADELPHIA;
        case 1071: return THEME_RIO_DE_JANEIRO;
        case 1072: return THEME_UNITED_STATES;
        case 1073: return THEME_UNREQUITED;
        case 1074: return THEME_WHISTLE;
        case 1075: return THEME_MYANMAR;
        case 1076: return THEME_CAMEROON;
        case 1077: return THEME_REVENGE;
        case 1078: return THEME_LAW_AND_ORDER;
        case 1079: return THEME_STRONG;
        case 1080: return THEME_ICELAND;
        case 1081: return THEME_OMAN;
        case 1082: return THEME_SWIM;
        case 1083: return THEME_SOUNDS;
        case 1084: return THEME_GABON;
        case 1085: return THEME_YUGOSLAVIA;
        case 1086: return THEME_LUXEMBOURG;
        case 1087: return THEME_DRUMS;
        case 1088: return THEME_ARMAGEDDON;
        case 1089: return THEME_POVERTY;
        case 1090: return THEME_CONSCIOUSNESS;
        case 1091: return THEME_GEOGRAPHIC_LOCATION;
        case 1092: return THEME_KANSAS;
        case 1093: return THEME_LUCKY;
        case 1094: return THEME_HEARTACHE;
        case 1095: return THEME_PLEASE;
        case 1096: return THEME_MIRACLE;
        case 1097: return THEME_IOWA;
        case 1098: return THEME_VANUATU;
        case 1099: return THEME_ALLIGATOR;
        case 1100: return THEME_FAMILY_MEMBER;
        case 1101: return THEME_CONFLICT;
        case 1102: return THEME_NORTH_KOREA;
        case 1103: return THEME_GENERAL;
        case 1104: return THEME_LOS_ANGELES;
        case 1105: return THEME_SOUTH_DAKOTA;
        case 1106: return THEME_OUTLAW;
        case 1107: return THEME_PANIC;
        case 1108: return THEME_ACTION;
        case 1109: return THEME_BURUNDI;
        case 1110: return THEME_RELAX;
        case 1111: return THEME_SINGAPORE;
        case 1112: return THEME_TRANSPORTATION;
        case 1113: return THEME_CELL_PHONE;
        case 1114: return THEME_RISK;
        case 1115: return THEME_FAMILY_LIFE;
        case 1116: return THEME_TIME;
        case 1117: return THEME_STUPID;
        case 1118: return THEME_ABORTION;
        case 1119: return THEME_NEBRASKA;
        case 1120: return THEME_RUSSIA;
        case 1121: return THEME_WHISPER;
        case 1122: return THEME_BORED;
        case 1123: return THEME_EMPTY;
        case 1124: return THEME_PAIN;
        case 1125: return THEME_CHOICES;
        case 1126: return THEME_AMMUNITION;
        case 1127: return THEME_CHINA;
        case 1128: return THEME_NEWS;
        case 1129: return THEME_PEACE;
        case 1130: return THEME_EASTERN_EUROPE;
        case 1131: return THEME_GREY;
        case 1132: return THEME_DEMOCRATIC_REPUBLIC_OF_THE_CONGO;
        case 1133: return THEME_LATE;
        case 1134: return THEME_ROMANIA;
        case 1135: return THEME_DESIRE;
        case 1136: return THEME_ASTROLOGY;
        case 1137: return THEME_PHILIPPINES;
        case 1138: return THEME_NEW_ORLEANS;
        case 1139: return THEME_BURNING;
        case 1140: return THEME_HUSBAND;
        case 1141: return THEME_POSSESSED;
        case 1142: return THEME_TRAVEL;
        case 1143: return THEME_MISPLACE;
        case 1144: return THEME_SIGNS;
        case 1145: return THEME_WESTERN_SAHARA;
        case 1146: return THEME_WONDERFUL;
        case 1147: return THEME_INTENTION;
        case 1148: return THEME_SOUTH_EAST_ASIA;
        case 1149: return THEME_ROBOT;
        case 1150: return THEME_QUESTIONING;
        case 1151: return THEME_INDONESIA;
        case 1152: return THEME_LOCATION;
        case 1153: return THEME_DISSATISFACTION;
        case 1154: return THEME_ANGOLA;
        case 1155: return THEME_SECRETS;
        case 1156: return THEME_MOON;
        case 1157: return THEME_AWARENESS;
        case 1158: return THEME_SATISFACTION;
        case 1159: return THEME_PRAIRIE;
        case 1160: return THEME_INTOXICATED;
        case 1161: return THEME_CRUEL;
        case 1162: return THEME_MOVING_ON;
        case 1163: return THEME_ORANGE;
        case 1164: return THEME_INFATUATED;
        case 1165: return THEME_FRUITS;
        case 1166: return THEME_GIVE;
        case 1167: return THEME_SUBSTANCES;
        case 1168: return THEME_IRAN;
        case 1169: return THEME_BOOK;
        case 1170: return THEME_ST__DOT___LOUIS;
        case 1171: return THEME_CZECH_REPUBLIC;
        case 1172: return THEME_IRAQ;
        case 1173: return THEME_IDENTITY;
        case 1174: return THEME_CHILE;
        case 1175: return THEME_EQUATORIAL_GUINEA;
        case 1176: return THEME_TRUMPET;
        case 1177: return THEME_ARIZONA;
        case 1178: return THEME_NEPAL;
        case 1179: return THEME_BOSTON;
        case 1180: return THEME_CARS;
        case 1181: return THEME_WORKING_CLASS;
        case 1182: return THEME_KNEES;
        case 1183: return THEME_FLOOR_AND_CEILING;
        case 1184: return THEME_SOLITUDE;
        case 1185: return THEME_TAKE_ME_BACK;
        case 1186: return THEME_ECSTATIC;
        case 1187: return THEME_SHOE;
        case 1188: return THEME_MENTALITY;
        case 1189: return THEME_NORTH_DAKOTA;
        case 1190: return THEME_TURKEY;
        case 1191: return THEME_BELGIUM;
        case 1192: return THEME_VALLEY;
        case 1193: return THEME_SHOOT;
        case 1194: return THEME_PERU;
        case 1195: return THEME_SAO_TOME_AND_PRINCIPE;
        case 1196: return THEME_EXPLORE;
        case 1197: return THEME_SCREAM;
        case 1198: return THEME_CHAD;
        case 1199: return THEME_BIRTH;
        case 1200: return THEME_CHALLENGE;
        case 1201: return THEME_PRISON;
        case 1202: return THEME_NON_ROMANTIC;
        case 1203: return THEME_BUDDHA;
        case 1204: return THEME_MOTHER;
        case 1205: return THEME_MASSACHUSETTS;
        case 1206: return THEME_MYSTERY;
        case 1207: return THEME_DOMESTIC_VIOLENCE;
        case 1208: return THEME_URUGUAY;
        case 1209: return THEME_FASHION;
        case 1210: return THEME_RADIO;
        case 1211: return THEME_DOCTOR;
        case 1212: return THEME_GENOCIDE;
        case 1213: return THEME_STAND;
        case 1214: return THEME_LIBERIA;
        case 1215: return THEME_VENEZUELA;
        case 1216: return THEME_LOUISIANA;
        case 1217: return THEME_SOUTH_KOREA;
        case 1218: return THEME_BODY_PARTS;
        case 1219: return THEME_PHOTOGRAPH;
        case 1220: return THEME_GETTING_OVER;
        case 1221: return THEME_GEOGRAPHY;
        case 1222: return THEME_DISEASE;
        case 1223: return THEME_NIGHT;
        case 1224: return THEME_SUMMER;
        case 1225: return THEME_WORLD;
        case 1226: return THEME_RECOVERY;
        case 1227: return THEME_US_AGAINST_THE_WORLD;
        case 1228: return THEME_FAITH_IN_DOUBT;
        case 1229: return THEME_WISDOM;
        case 1230: return THEME_RAIN;
        case 1231: return THEME_BOSS;
        case 1232: return THEME_CRAZY;
        case 1233: return THEME_HORSE;
        case 1234: return THEME_TREE;
        case 1235: return THEME_EQUALITY;
        case 1236: return THEME_ADOPTION;
        case 1237: return THEME_CARNIVAL;
        case 1238: return THEME_PAPUA_NEW_GUINEA;
        case 1239: return THEME_HUNGARY;
        case 1240: return THEME_JAPAN;
        case 1241: return THEME_ROMANCE;
        case 1242: return THEME_SALT_LAKE_CITY;
        case 1243: return THEME_BELARUS;
        case 1244: return THEME_LAZY;
        case 1245: return THEME_NUCLEAR_ENERGY;
        case 1246: return THEME_SENEGAL;
        case 1247: return THEME_CAT;
        case 1248: return THEME_ENVIRONMENT;
        case 1249: return THEME_ZOO;
        case 1250: return THEME_TEXT_MESSAGE;
        case 1251: return THEME_FAVORITE;
        case 1252: return THEME_BELOW;
        case 1253: return THEME_GARBAGE;
        case 1254: return THEME_OREGON;
        case 1255: return THEME_MEAN;
        case 1256: return THEME_AIRPLANES;
        case 1257: return THEME_DOMINICAN_REPUBLIC;
        case 1258: return THEME_KANGAROO;
        case 1259: return THEME_STEP_PARENT;
        case 1260: return THEME_LONGING;
        case 1261: return THEME_BRASS;
        case 1262: return THEME_EGYPT;
        case 1263: return THEME_SUNSHINE;
        case 1264: return THEME_BEAR;
        case 1265: return THEME_BOLIVIA;
        case 1266: return THEME_SAN_MARINO;
        case 1267: return THEME_OCEANIA;
        case 1268: return THEME_FRIENDSHIP;
        case 1269: return THEME_NEW_JERSEY;
        case 1270: return THEME_FLOOD;
        case 1271: return THEME_MOVE;
        case 1272: return THEME_SLOVAKIA;
        case 1273: return THEME_MERCY;
        case 1274: return THEME_INSECT;
        case 1275: return THEME_EARS;
        case 1276: return THEME_FEBRUARY;
        case 1277: return THEME_APOLOGIZE;
        case 1278: return THEME_U_F_O;
        case 1279: return THEME_HOLLAND;
        case 1280: return THEME_TIME_OF_DAY;
        case 1281: return THEME_REHAB;
        case 1282: return THEME_CHICAGO;
        case 1283: return THEME_NIGER;
        case 1284: return THEME_BALTIC_STATES;
        case 1285: return THEME_CHANGE;
        case 1286: return THEME_EGO;
        case 1287: return THEME_DOOR;
        case 1288: return THEME_NERVOUS;
        case 1289: return THEME_HONG_KONG;
        case 1290: return THEME_CASINO;
        case 1291: return THEME_GOSSIP;
        case 1292: return THEME_TELL;
        case 1293: return THEME_BOTSWANA;
        case 1294: return THEME_FUTURE;
        case 1295: return THEME_WELCOME;
        case 1296: return THEME_MICRONESIA;
        case 1297: return THEME_REDEMPTION;
        case 1298: return THEME_GUILT;
        case 1299: return THEME_SUPERNATURAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Theme>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Theme> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Theme>() {
            public Theme findValueByNumber(int number) {
              return Theme.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(176);
    }

    private static final Theme[] VALUES = values();

    public static Theme valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Theme(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.Theme)
  }

  /**
   * Protobuf enum {@code avs.ThemeType}
   */
  public enum ThemeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>THEME_TYPE_CLOSING_THEME = 0;</code>
     */
    THEME_TYPE_CLOSING_THEME(0),
    /**
     * <code>THEME_TYPE_MAIN_THEME = 1;</code>
     */
    THEME_TYPE_MAIN_THEME(1),
    /**
     * <code>THEME_TYPE_TITLE_THEME = 2;</code>
     */
    THEME_TYPE_TITLE_THEME(2),
    /**
     * <code>THEME_TYPE_USER_DEFINED = 3;</code>
     */
    THEME_TYPE_USER_DEFINED(3),
    /**
     * <code>THEME_TYPE_OPENING_THEME = 4;</code>
     */
    THEME_TYPE_OPENING_THEME(4),
    /**
     * <code>THEME_TYPE_SEGMENT_THEME = 5;</code>
     */
    THEME_TYPE_SEGMENT_THEME(5),
    ;

    /**
     * <code>THEME_TYPE_CLOSING_THEME = 0;</code>
     */
    public static final int THEME_TYPE_CLOSING_THEME_VALUE = 0;
    /**
     * <code>THEME_TYPE_MAIN_THEME = 1;</code>
     */
    public static final int THEME_TYPE_MAIN_THEME_VALUE = 1;
    /**
     * <code>THEME_TYPE_TITLE_THEME = 2;</code>
     */
    public static final int THEME_TYPE_TITLE_THEME_VALUE = 2;
    /**
     * <code>THEME_TYPE_USER_DEFINED = 3;</code>
     */
    public static final int THEME_TYPE_USER_DEFINED_VALUE = 3;
    /**
     * <code>THEME_TYPE_OPENING_THEME = 4;</code>
     */
    public static final int THEME_TYPE_OPENING_THEME_VALUE = 4;
    /**
     * <code>THEME_TYPE_SEGMENT_THEME = 5;</code>
     */
    public static final int THEME_TYPE_SEGMENT_THEME_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ThemeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ThemeType forNumber(int value) {
      switch (value) {
        case 0: return THEME_TYPE_CLOSING_THEME;
        case 1: return THEME_TYPE_MAIN_THEME;
        case 2: return THEME_TYPE_TITLE_THEME;
        case 3: return THEME_TYPE_USER_DEFINED;
        case 4: return THEME_TYPE_OPENING_THEME;
        case 5: return THEME_TYPE_SEGMENT_THEME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ThemeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ThemeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ThemeType>() {
            public ThemeType findValueByNumber(int number) {
              return ThemeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(177);
    }

    private static final ThemeType[] VALUES = values();

    public static ThemeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ThemeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.ThemeType)
  }

  /**
   * Protobuf enum {@code avs.TimecodeType}
   */
  public enum TimecodeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TIMECODE_TYPE_S_M_P_T_E = 0;</code>
     */
    TIMECODE_TYPE_S_M_P_T_E(0),
    /**
     * <code>TIMECODE_TYPE_M_I_D_I = 1;</code>
     */
    TIMECODE_TYPE_M_I_D_I(1),
    /**
     * <code>TIMECODE_TYPE_V_I_T_C = 2;</code>
     */
    TIMECODE_TYPE_V_I_T_C(2),
    /**
     * <code>TIMECODE_TYPE_F_S_K = 3;</code>
     */
    TIMECODE_TYPE_F_S_K(3),
    ;

    /**
     * <code>TIMECODE_TYPE_S_M_P_T_E = 0;</code>
     */
    public static final int TIMECODE_TYPE_S_M_P_T_E_VALUE = 0;
    /**
     * <code>TIMECODE_TYPE_M_I_D_I = 1;</code>
     */
    public static final int TIMECODE_TYPE_M_I_D_I_VALUE = 1;
    /**
     * <code>TIMECODE_TYPE_V_I_T_C = 2;</code>
     */
    public static final int TIMECODE_TYPE_V_I_T_C_VALUE = 2;
    /**
     * <code>TIMECODE_TYPE_F_S_K = 3;</code>
     */
    public static final int TIMECODE_TYPE_F_S_K_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TimecodeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TimecodeType forNumber(int value) {
      switch (value) {
        case 0: return TIMECODE_TYPE_S_M_P_T_E;
        case 1: return TIMECODE_TYPE_M_I_D_I;
        case 2: return TIMECODE_TYPE_V_I_T_C;
        case 3: return TIMECODE_TYPE_F_S_K;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TimecodeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TimecodeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TimecodeType>() {
            public TimecodeType findValueByNumber(int number) {
              return TimecodeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(178);
    }

    private static final TimecodeType[] VALUES = values();

    public static TimecodeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TimecodeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TimecodeType)
  }

  /**
   * Protobuf enum {@code avs.TisTerritoryCode}
   */
  public enum TisTerritoryCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TIS_TERRITORY_CODE_470 = 0;</code>
     */
    TIS_TERRITORY_CODE_470(0),
    /**
     * <code>TIS_TERRITORY_CODE_591 = 1;</code>
     */
    TIS_TERRITORY_CODE_591(1),
    /**
     * <code>TIS_TERRITORY_CODE_230 = 2;</code>
     */
    TIS_TERRITORY_CODE_230(2),
    /**
     * <code>TIS_TERRITORY_CODE_231 = 3;</code>
     */
    TIS_TERRITORY_CODE_231(3),
    /**
     * <code>TIS_TERRITORY_CODE_352 = 4;</code>
     */
    TIS_TERRITORY_CODE_352(4),
    /**
     * <code>TIS_TERRITORY_CODE_232 = 5;</code>
     */
    TIS_TERRITORY_CODE_232(5),
    /**
     * <code>TIS_TERRITORY_CODE_112 = 6;</code>
     */
    TIS_TERRITORY_CODE_112(6),
    /**
     * <code>TIS_TERRITORY_CODE_233 = 7;</code>
     */
    TIS_TERRITORY_CODE_233(7),
    /**
     * <code>TIS_TERRITORY_CODE_356 = 8;</code>
     */
    TIS_TERRITORY_CODE_356(8),
    /**
     * <code>TIS_TERRITORY_CODE_598 = 9;</code>
     */
    TIS_TERRITORY_CODE_598(9),
    /**
     * <code>TIS_TERRITORY_CODE_478 = 10;</code>
     */
    TIS_TERRITORY_CODE_478(10),
    /**
     * <code>TIS_TERRITORY_CODE_116 = 11;</code>
     */
    TIS_TERRITORY_CODE_116(11),
    /**
     * <code>TIS_TERRITORY_CODE_12 = 12;</code>
     */
    TIS_TERRITORY_CODE_12(12),
    /**
     * <code>TIS_TERRITORY_CODE_480 = 13;</code>
     */
    TIS_TERRITORY_CODE_480(13),
    /**
     * <code>TIS_TERRITORY_CODE_360 = 14;</code>
     */
    TIS_TERRITORY_CODE_360(14),
    /**
     * <code>TIS_TERRITORY_CODE_120 = 15;</code>
     */
    TIS_TERRITORY_CODE_120(15),
    /**
     * <code>TIS_TERRITORY_CODE_242 = 16;</code>
     */
    TIS_TERRITORY_CODE_242(16),
    /**
     * <code>TIS_TERRITORY_CODE_484 = 17;</code>
     */
    TIS_TERRITORY_CODE_484(17),
    /**
     * <code>TIS_TERRITORY_CODE_364 = 18;</code>
     */
    TIS_TERRITORY_CODE_364(18),
    /**
     * <code>TIS_TERRITORY_CODE_124 = 19;</code>
     */
    TIS_TERRITORY_CODE_124(19),
    /**
     * <code>TIS_TERRITORY_CODE_4 = 20;</code>
     */
    TIS_TERRITORY_CODE_4(20),
    /**
     * <code>TIS_TERRITORY_CODE_246 = 21;</code>
     */
    TIS_TERRITORY_CODE_246(21),
    /**
     * <code>TIS_TERRITORY_CODE_368 = 22;</code>
     */
    TIS_TERRITORY_CODE_368(22),
    /**
     * <code>TIS_TERRITORY_CODE_8 = 23;</code>
     */
    TIS_TERRITORY_CODE_8(23),
    /**
     * <code>TIS_TERRITORY_CODE_800 = 24;</code>
     */
    TIS_TERRITORY_CODE_800(24),
    /**
     * <code>TIS_TERRITORY_CODE_804 = 25;</code>
     */
    TIS_TERRITORY_CODE_804(25),
    /**
     * <code>TIS_TERRITORY_CODE_20 = 26;</code>
     */
    TIS_TERRITORY_CODE_20(26),
    /**
     * <code>TIS_TERRITORY_CODE_807 = 27;</code>
     */
    TIS_TERRITORY_CODE_807(27),
    /**
     * <code>TIS_TERRITORY_CODE_24 = 28;</code>
     */
    TIS_TERRITORY_CODE_24(28),
    /**
     * <code>TIS_TERRITORY_CODE_28 = 29;</code>
     */
    TIS_TERRITORY_CODE_28(29),
    /**
     * <code>TIS_TERRITORY_CODE_250 = 30;</code>
     */
    TIS_TERRITORY_CODE_250(30),
    /**
     * <code>TIS_TERRITORY_CODE_492 = 31;</code>
     */
    TIS_TERRITORY_CODE_492(31),
    /**
     * <code>TIS_TERRITORY_CODE_372 = 32;</code>
     */
    TIS_TERRITORY_CODE_372(32),
    /**
     * <code>TIS_TERRITORY_CODE_132 = 33;</code>
     */
    TIS_TERRITORY_CODE_132(33),
    /**
     * <code>TIS_TERRITORY_CODE_496 = 34;</code>
     */
    TIS_TERRITORY_CODE_496(34),
    /**
     * <code>TIS_TERRITORY_CODE_376 = 35;</code>
     */
    TIS_TERRITORY_CODE_376(35),
    /**
     * <code>TIS_TERRITORY_CODE_498 = 36;</code>
     */
    TIS_TERRITORY_CODE_498(36),
    /**
     * <code>TIS_TERRITORY_CODE_499 = 37;</code>
     */
    TIS_TERRITORY_CODE_499(37),
    /**
     * <code>TIS_TERRITORY_CODE_258 = 38;</code>
     */
    TIS_TERRITORY_CODE_258(38),
    /**
     * <code>TIS_TERRITORY_CODE_810 = 39;</code>
     */
    TIS_TERRITORY_CODE_810(39),
    /**
     * <code>TIS_TERRITORY_CODE_31 = 40;</code>
     */
    TIS_TERRITORY_CODE_31(40),
    /**
     * <code>TIS_TERRITORY_CODE_32 = 41;</code>
     */
    TIS_TERRITORY_CODE_32(41),
    /**
     * <code>TIS_TERRITORY_CODE_818 = 42;</code>
     */
    TIS_TERRITORY_CODE_818(42),
    /**
     * <code>TIS_TERRITORY_CODE_36 = 43;</code>
     */
    TIS_TERRITORY_CODE_36(43),
    /**
     * <code>TIS_TERRITORY_CODE_2100 = 44;</code>
     */
    TIS_TERRITORY_CODE_2100(44),
    /**
     * <code>TIS_TERRITORY_CODE_380 = 45;</code>
     */
    TIS_TERRITORY_CODE_380(45),
    /**
     * <code>TIS_TERRITORY_CODE_140 = 46;</code>
     */
    TIS_TERRITORY_CODE_140(46),
    /**
     * <code>TIS_TERRITORY_CODE_262 = 47;</code>
     */
    TIS_TERRITORY_CODE_262(47),
    /**
     * <code>TIS_TERRITORY_CODE_384 = 48;</code>
     */
    TIS_TERRITORY_CODE_384(48),
    /**
     * <code>TIS_TERRITORY_CODE_144 = 49;</code>
     */
    TIS_TERRITORY_CODE_144(49),
    /**
     * <code>TIS_TERRITORY_CODE_266 = 50;</code>
     */
    TIS_TERRITORY_CODE_266(50),
    /**
     * <code>TIS_TERRITORY_CODE_388 = 51;</code>
     */
    TIS_TERRITORY_CODE_388(51),
    /**
     * <code>TIS_TERRITORY_CODE_268 = 52;</code>
     */
    TIS_TERRITORY_CODE_268(52),
    /**
     * <code>TIS_TERRITORY_CODE_148 = 53;</code>
     */
    TIS_TERRITORY_CODE_148(53),
    /**
     * <code>TIS_TERRITORY_CODE_702 = 54;</code>
     */
    TIS_TERRITORY_CODE_702(54),
    /**
     * <code>TIS_TERRITORY_CODE_703 = 55;</code>
     */
    TIS_TERRITORY_CODE_703(55),
    /**
     * <code>TIS_TERRITORY_CODE_704 = 56;</code>
     */
    TIS_TERRITORY_CODE_704(56),
    /**
     * <code>TIS_TERRITORY_CODE_40 = 57;</code>
     */
    TIS_TERRITORY_CODE_40(57),
    /**
     * <code>TIS_TERRITORY_CODE_705 = 58;</code>
     */
    TIS_TERRITORY_CODE_705(58),
    /**
     * <code>TIS_TERRITORY_CODE_826 = 59;</code>
     */
    TIS_TERRITORY_CODE_826(59),
    /**
     * <code>TIS_TERRITORY_CODE_706 = 60;</code>
     */
    TIS_TERRITORY_CODE_706(60),
    /**
     * <code>TIS_TERRITORY_CODE_44 = 61;</code>
     */
    TIS_TERRITORY_CODE_44(61),
    /**
     * <code>TIS_TERRITORY_CODE_48 = 62;</code>
     */
    TIS_TERRITORY_CODE_48(62),
    /**
     * <code>TIS_TERRITORY_CODE_2111 = 63;</code>
     */
    TIS_TERRITORY_CODE_2111(63),
    /**
     * <code>TIS_TERRITORY_CODE_2110 = 64;</code>
     */
    TIS_TERRITORY_CODE_2110(64),
    /**
     * <code>TIS_TERRITORY_CODE_270 = 65;</code>
     */
    TIS_TERRITORY_CODE_270(65),
    /**
     * <code>TIS_TERRITORY_CODE_392 = 66;</code>
     */
    TIS_TERRITORY_CODE_392(66),
    /**
     * <code>TIS_TERRITORY_CODE_152 = 67;</code>
     */
    TIS_TERRITORY_CODE_152(67),
    /**
     * <code>TIS_TERRITORY_CODE_2108 = 68;</code>
     */
    TIS_TERRITORY_CODE_2108(68),
    /**
     * <code>TIS_TERRITORY_CODE_276 = 69;</code>
     */
    TIS_TERRITORY_CODE_276(69),
    /**
     * <code>TIS_TERRITORY_CODE_2107 = 70;</code>
     */
    TIS_TERRITORY_CODE_2107(70),
    /**
     * <code>TIS_TERRITORY_CODE_156 = 71;</code>
     */
    TIS_TERRITORY_CODE_156(71),
    /**
     * <code>TIS_TERRITORY_CODE_398 = 72;</code>
     */
    TIS_TERRITORY_CODE_398(72),
    /**
     * <code>TIS_TERRITORY_CODE_2106 = 73;</code>
     */
    TIS_TERRITORY_CODE_2106(73),
    /**
     * <code>TIS_TERRITORY_CODE_278 = 74;</code>
     */
    TIS_TERRITORY_CODE_278(74),
    /**
     * <code>TIS_TERRITORY_CODE_2105 = 75;</code>
     */
    TIS_TERRITORY_CODE_2105(75),
    /**
     * <code>TIS_TERRITORY_CODE_158 = 76;</code>
     */
    TIS_TERRITORY_CODE_158(76),
    /**
     * <code>TIS_TERRITORY_CODE_2104 = 77;</code>
     */
    TIS_TERRITORY_CODE_2104(77),
    /**
     * <code>TIS_TERRITORY_CODE_2103 = 78;</code>
     */
    TIS_TERRITORY_CODE_2103(78),
    /**
     * <code>TIS_TERRITORY_CODE_710 = 79;</code>
     */
    TIS_TERRITORY_CODE_710(79),
    /**
     * <code>TIS_TERRITORY_CODE_2102 = 80;</code>
     */
    TIS_TERRITORY_CODE_2102(80),
    /**
     * <code>TIS_TERRITORY_CODE_2101 = 81;</code>
     */
    TIS_TERRITORY_CODE_2101(81),
    /**
     * <code>TIS_TERRITORY_CODE_834 = 82;</code>
     */
    TIS_TERRITORY_CODE_834(82),
    /**
     * <code>TIS_TERRITORY_CODE_50 = 83;</code>
     */
    TIS_TERRITORY_CODE_50(83),
    /**
     * <code>TIS_TERRITORY_CODE_51 = 84;</code>
     */
    TIS_TERRITORY_CODE_51(84),
    /**
     * <code>TIS_TERRITORY_CODE_716 = 85;</code>
     */
    TIS_TERRITORY_CODE_716(85),
    /**
     * <code>TIS_TERRITORY_CODE_52 = 86;</code>
     */
    TIS_TERRITORY_CODE_52(86),
    /**
     * <code>TIS_TERRITORY_CODE_2109 = 87;</code>
     */
    TIS_TERRITORY_CODE_2109(87),
    /**
     * <code>TIS_TERRITORY_CODE_56 = 88;</code>
     */
    TIS_TERRITORY_CODE_56(88),
    /**
     * <code>TIS_TERRITORY_CODE_2122 = 89;</code>
     */
    TIS_TERRITORY_CODE_2122(89),
    /**
     * <code>TIS_TERRITORY_CODE_2121 = 90;</code>
     */
    TIS_TERRITORY_CODE_2121(90),
    /**
     * <code>TIS_TERRITORY_CODE_280 = 91;</code>
     */
    TIS_TERRITORY_CODE_280(91),
    /**
     * <code>TIS_TERRITORY_CODE_2120 = 92;</code>
     */
    TIS_TERRITORY_CODE_2120(92),
    /**
     * <code>TIS_TERRITORY_CODE_2119 = 93;</code>
     */
    TIS_TERRITORY_CODE_2119(93),
    /**
     * <code>TIS_TERRITORY_CODE_2118 = 94;</code>
     */
    TIS_TERRITORY_CODE_2118(94),
    /**
     * <code>TIS_TERRITORY_CODE_288 = 95;</code>
     */
    TIS_TERRITORY_CODE_288(95),
    /**
     * <code>TIS_TERRITORY_CODE_2117 = 96;</code>
     */
    TIS_TERRITORY_CODE_2117(96),
    /**
     * <code>TIS_TERRITORY_CODE_2116 = 97;</code>
     */
    TIS_TERRITORY_CODE_2116(97),
    /**
     * <code>TIS_TERRITORY_CODE_840 = 98;</code>
     */
    TIS_TERRITORY_CODE_840(98),
    /**
     * <code>TIS_TERRITORY_CODE_2115 = 99;</code>
     */
    TIS_TERRITORY_CODE_2115(99),
    /**
     * <code>TIS_TERRITORY_CODE_720 = 100;</code>
     */
    TIS_TERRITORY_CODE_720(100),
    /**
     * <code>TIS_TERRITORY_CODE_2114 = 101;</code>
     */
    TIS_TERRITORY_CODE_2114(101),
    /**
     * <code>TIS_TERRITORY_CODE_600 = 102;</code>
     */
    TIS_TERRITORY_CODE_600(102),
    /**
     * <code>TIS_TERRITORY_CODE_2113 = 103;</code>
     */
    TIS_TERRITORY_CODE_2113(103),
    /**
     * <code>TIS_TERRITORY_CODE_2112 = 104;</code>
     */
    TIS_TERRITORY_CODE_2112(104),
    /**
     * <code>TIS_TERRITORY_CODE_724 = 105;</code>
     */
    TIS_TERRITORY_CODE_724(105),
    /**
     * <code>TIS_TERRITORY_CODE_604 = 106;</code>
     */
    TIS_TERRITORY_CODE_604(106),
    /**
     * <code>TIS_TERRITORY_CODE_728 = 107;</code>
     */
    TIS_TERRITORY_CODE_728(107),
    /**
     * <code>TIS_TERRITORY_CODE_64 = 108;</code>
     */
    TIS_TERRITORY_CODE_64(108),
    /**
     * <code>TIS_TERRITORY_CODE_608 = 109;</code>
     */
    TIS_TERRITORY_CODE_608(109),
    /**
     * <code>TIS_TERRITORY_CODE_729 = 110;</code>
     */
    TIS_TERRITORY_CODE_729(110),
    /**
     * <code>TIS_TERRITORY_CODE_68 = 111;</code>
     */
    TIS_TERRITORY_CODE_68(111),
    /**
     * <code>TIS_TERRITORY_CODE_2133 = 112;</code>
     */
    TIS_TERRITORY_CODE_2133(112),
    /**
     * <code>TIS_TERRITORY_CODE_2132 = 113;</code>
     */
    TIS_TERRITORY_CODE_2132(113),
    /**
     * <code>TIS_TERRITORY_CODE_170 = 114;</code>
     */
    TIS_TERRITORY_CODE_170(114),
    /**
     * <code>TIS_TERRITORY_CODE_2131 = 115;</code>
     */
    TIS_TERRITORY_CODE_2131(115),
    /**
     * <code>TIS_TERRITORY_CODE_2130 = 116;</code>
     */
    TIS_TERRITORY_CODE_2130(116),
    /**
     * <code>TIS_TERRITORY_CODE_174 = 117;</code>
     */
    TIS_TERRITORY_CODE_174(117),
    /**
     * <code>TIS_TERRITORY_CODE_296 = 118;</code>
     */
    TIS_TERRITORY_CODE_296(118),
    /**
     * <code>TIS_TERRITORY_CODE_2129 = 119;</code>
     */
    TIS_TERRITORY_CODE_2129(119),
    /**
     * <code>TIS_TERRITORY_CODE_178 = 120;</code>
     */
    TIS_TERRITORY_CODE_178(120),
    /**
     * <code>TIS_TERRITORY_CODE_2128 = 121;</code>
     */
    TIS_TERRITORY_CODE_2128(121),
    /**
     * <code>TIS_TERRITORY_CODE_2127 = 122;</code>
     */
    TIS_TERRITORY_CODE_2127(122),
    /**
     * <code>TIS_TERRITORY_CODE_2126 = 123;</code>
     */
    TIS_TERRITORY_CODE_2126(123),
    /**
     * <code>TIS_TERRITORY_CODE_2125 = 124;</code>
     */
    TIS_TERRITORY_CODE_2125(124),
    /**
     * <code>TIS_TERRITORY_CODE_732 = 125;</code>
     */
    TIS_TERRITORY_CODE_732(125),
    /**
     * <code>TIS_TERRITORY_CODE_2124 = 126;</code>
     */
    TIS_TERRITORY_CODE_2124(126),
    /**
     * <code>TIS_TERRITORY_CODE_854 = 127;</code>
     */
    TIS_TERRITORY_CODE_854(127),
    /**
     * <code>TIS_TERRITORY_CODE_2123 = 128;</code>
     */
    TIS_TERRITORY_CODE_2123(128),
    /**
     * <code>TIS_TERRITORY_CODE_70 = 129;</code>
     */
    TIS_TERRITORY_CODE_70(129),
    /**
     * <code>TIS_TERRITORY_CODE_736 = 130;</code>
     */
    TIS_TERRITORY_CODE_736(130),
    /**
     * <code>TIS_TERRITORY_CODE_72 = 131;</code>
     */
    TIS_TERRITORY_CODE_72(131),
    /**
     * <code>TIS_TERRITORY_CODE_616 = 132;</code>
     */
    TIS_TERRITORY_CODE_616(132),
    /**
     * <code>TIS_TERRITORY_CODE_858 = 133;</code>
     */
    TIS_TERRITORY_CODE_858(133),
    /**
     * <code>TIS_TERRITORY_CODE_76 = 134;</code>
     */
    TIS_TERRITORY_CODE_76(134),
    /**
     * <code>TIS_TERRITORY_CODE_180 = 135;</code>
     */
    TIS_TERRITORY_CODE_180(135),
    /**
     * <code>TIS_TERRITORY_CODE_188 = 136;</code>
     */
    TIS_TERRITORY_CODE_188(136),
    /**
     * <code>TIS_TERRITORY_CODE_860 = 137;</code>
     */
    TIS_TERRITORY_CODE_860(137),
    /**
     * <code>TIS_TERRITORY_CODE_740 = 138;</code>
     */
    TIS_TERRITORY_CODE_740(138),
    /**
     * <code>TIS_TERRITORY_CODE_620 = 139;</code>
     */
    TIS_TERRITORY_CODE_620(139),
    /**
     * <code>TIS_TERRITORY_CODE_862 = 140;</code>
     */
    TIS_TERRITORY_CODE_862(140),
    /**
     * <code>TIS_TERRITORY_CODE_2136 = 141;</code>
     */
    TIS_TERRITORY_CODE_2136(141),
    /**
     * <code>TIS_TERRITORY_CODE_2134 = 142;</code>
     */
    TIS_TERRITORY_CODE_2134(142),
    /**
     * <code>TIS_TERRITORY_CODE_624 = 143;</code>
     */
    TIS_TERRITORY_CODE_624(143),
    /**
     * <code>TIS_TERRITORY_CODE_504 = 144;</code>
     */
    TIS_TERRITORY_CODE_504(144),
    /**
     * <code>TIS_TERRITORY_CODE_626 = 145;</code>
     */
    TIS_TERRITORY_CODE_626(145),
    /**
     * <code>TIS_TERRITORY_CODE_748 = 146;</code>
     */
    TIS_TERRITORY_CODE_748(146),
    /**
     * <code>TIS_TERRITORY_CODE_84 = 147;</code>
     */
    TIS_TERRITORY_CODE_84(147),
    /**
     * <code>TIS_TERRITORY_CODE_508 = 148;</code>
     */
    TIS_TERRITORY_CODE_508(148),
    /**
     * <code>TIS_TERRITORY_CODE_191 = 149;</code>
     */
    TIS_TERRITORY_CODE_191(149),
    /**
     * <code>TIS_TERRITORY_CODE_192 = 150;</code>
     */
    TIS_TERRITORY_CODE_192(150),
    /**
     * <code>TIS_TERRITORY_CODE_196 = 151;</code>
     */
    TIS_TERRITORY_CODE_196(151),
    /**
     * <code>TIS_TERRITORY_CODE_630 = 152;</code>
     */
    TIS_TERRITORY_CODE_630(152),
    /**
     * <code>TIS_TERRITORY_CODE_752 = 153;</code>
     */
    TIS_TERRITORY_CODE_752(153),
    /**
     * <code>TIS_TERRITORY_CODE_512 = 154;</code>
     */
    TIS_TERRITORY_CODE_512(154),
    /**
     * <code>TIS_TERRITORY_CODE_90 = 155;</code>
     */
    TIS_TERRITORY_CODE_90(155),
    /**
     * <code>TIS_TERRITORY_CODE_634 = 156;</code>
     */
    TIS_TERRITORY_CODE_634(156),
    /**
     * <code>TIS_TERRITORY_CODE_756 = 157;</code>
     */
    TIS_TERRITORY_CODE_756(157),
    /**
     * <code>TIS_TERRITORY_CODE_516 = 158;</code>
     */
    TIS_TERRITORY_CODE_516(158),
    /**
     * <code>TIS_TERRITORY_CODE_96 = 159;</code>
     */
    TIS_TERRITORY_CODE_96(159),
    /**
     * <code>TIS_TERRITORY_CODE_760 = 160;</code>
     */
    TIS_TERRITORY_CODE_760(160),
    /**
     * <code>TIS_TERRITORY_CODE_882 = 161;</code>
     */
    TIS_TERRITORY_CODE_882(161),
    /**
     * <code>TIS_TERRITORY_CODE_520 = 162;</code>
     */
    TIS_TERRITORY_CODE_520(162),
    /**
     * <code>TIS_TERRITORY_CODE_762 = 163;</code>
     */
    TIS_TERRITORY_CODE_762(163),
    /**
     * <code>TIS_TERRITORY_CODE_400 = 164;</code>
     */
    TIS_TERRITORY_CODE_400(164),
    /**
     * <code>TIS_TERRITORY_CODE_642 = 165;</code>
     */
    TIS_TERRITORY_CODE_642(165),
    /**
     * <code>TIS_TERRITORY_CODE_643 = 166;</code>
     */
    TIS_TERRITORY_CODE_643(166),
    /**
     * <code>TIS_TERRITORY_CODE_764 = 167;</code>
     */
    TIS_TERRITORY_CODE_764(167),
    /**
     * <code>TIS_TERRITORY_CODE_886 = 168;</code>
     */
    TIS_TERRITORY_CODE_886(168),
    /**
     * <code>TIS_TERRITORY_CODE_524 = 169;</code>
     */
    TIS_TERRITORY_CODE_524(169),
    /**
     * <code>TIS_TERRITORY_CODE_887 = 170;</code>
     */
    TIS_TERRITORY_CODE_887(170),
    /**
     * <code>TIS_TERRITORY_CODE_404 = 171;</code>
     */
    TIS_TERRITORY_CODE_404(171),
    /**
     * <code>TIS_TERRITORY_CODE_646 = 172;</code>
     */
    TIS_TERRITORY_CODE_646(172),
    /**
     * <code>TIS_TERRITORY_CODE_768 = 173;</code>
     */
    TIS_TERRITORY_CODE_768(173),
    /**
     * <code>TIS_TERRITORY_CODE_528 = 174;</code>
     */
    TIS_TERRITORY_CODE_528(174),
    /**
     * <code>TIS_TERRITORY_CODE_408 = 175;</code>
     */
    TIS_TERRITORY_CODE_408(175),
    /**
     * <code>TIS_TERRITORY_CODE_890 = 176;</code>
     */
    TIS_TERRITORY_CODE_890(176),
    /**
     * <code>TIS_TERRITORY_CODE_891 = 177;</code>
     */
    TIS_TERRITORY_CODE_891(177),
    /**
     * <code>TIS_TERRITORY_CODE_410 = 178;</code>
     */
    TIS_TERRITORY_CODE_410(178),
    /**
     * <code>TIS_TERRITORY_CODE_894 = 179;</code>
     */
    TIS_TERRITORY_CODE_894(179),
    /**
     * <code>TIS_TERRITORY_CODE_776 = 180;</code>
     */
    TIS_TERRITORY_CODE_776(180),
    /**
     * <code>TIS_TERRITORY_CODE_414 = 181;</code>
     */
    TIS_TERRITORY_CODE_414(181),
    /**
     * <code>TIS_TERRITORY_CODE_417 = 182;</code>
     */
    TIS_TERRITORY_CODE_417(182),
    /**
     * <code>TIS_TERRITORY_CODE_659 = 183;</code>
     */
    TIS_TERRITORY_CODE_659(183),
    /**
     * <code>TIS_TERRITORY_CODE_418 = 184;</code>
     */
    TIS_TERRITORY_CODE_418(184),
    /**
     * <code>TIS_TERRITORY_CODE_780 = 185;</code>
     */
    TIS_TERRITORY_CODE_780(185),
    /**
     * <code>TIS_TERRITORY_CODE_540 = 186;</code>
     */
    TIS_TERRITORY_CODE_540(186),
    /**
     * <code>TIS_TERRITORY_CODE_662 = 187;</code>
     */
    TIS_TERRITORY_CODE_662(187),
    /**
     * <code>TIS_TERRITORY_CODE_300 = 188;</code>
     */
    TIS_TERRITORY_CODE_300(188),
    /**
     * <code>TIS_TERRITORY_CODE_784 = 189;</code>
     */
    TIS_TERRITORY_CODE_784(189),
    /**
     * <code>TIS_TERRITORY_CODE_422 = 190;</code>
     */
    TIS_TERRITORY_CODE_422(190),
    /**
     * <code>TIS_TERRITORY_CODE_788 = 191;</code>
     */
    TIS_TERRITORY_CODE_788(191),
    /**
     * <code>TIS_TERRITORY_CODE_426 = 192;</code>
     */
    TIS_TERRITORY_CODE_426(192),
    /**
     * <code>TIS_TERRITORY_CODE_548 = 193;</code>
     */
    TIS_TERRITORY_CODE_548(193),
    /**
     * <code>TIS_TERRITORY_CODE_428 = 194;</code>
     */
    TIS_TERRITORY_CODE_428(194),
    /**
     * <code>TIS_TERRITORY_CODE_308 = 195;</code>
     */
    TIS_TERRITORY_CODE_308(195),
    /**
     * <code>TIS_TERRITORY_CODE_670 = 196;</code>
     */
    TIS_TERRITORY_CODE_670(196),
    /**
     * <code>TIS_TERRITORY_CODE_792 = 197;</code>
     */
    TIS_TERRITORY_CODE_792(197),
    /**
     * <code>TIS_TERRITORY_CODE_430 = 198;</code>
     */
    TIS_TERRITORY_CODE_430(198),
    /**
     * <code>TIS_TERRITORY_CODE_674 = 199;</code>
     */
    TIS_TERRITORY_CODE_674(199),
    /**
     * <code>TIS_TERRITORY_CODE_795 = 200;</code>
     */
    TIS_TERRITORY_CODE_795(200),
    /**
     * <code>TIS_TERRITORY_CODE_554 = 201;</code>
     */
    TIS_TERRITORY_CODE_554(201),
    /**
     * <code>TIS_TERRITORY_CODE_434 = 202;</code>
     */
    TIS_TERRITORY_CODE_434(202),
    /**
     * <code>TIS_TERRITORY_CODE_798 = 203;</code>
     */
    TIS_TERRITORY_CODE_798(203),
    /**
     * <code>TIS_TERRITORY_CODE_678 = 204;</code>
     */
    TIS_TERRITORY_CODE_678(204),
    /**
     * <code>TIS_TERRITORY_CODE_558 = 205;</code>
     */
    TIS_TERRITORY_CODE_558(205),
    /**
     * <code>TIS_TERRITORY_CODE_438 = 206;</code>
     */
    TIS_TERRITORY_CODE_438(206),
    /**
     * <code>TIS_TERRITORY_CODE_440 = 207;</code>
     */
    TIS_TERRITORY_CODE_440(207),
    /**
     * <code>TIS_TERRITORY_CODE_682 = 208;</code>
     */
    TIS_TERRITORY_CODE_682(208),
    /**
     * <code>TIS_TERRITORY_CODE_320 = 209;</code>
     */
    TIS_TERRITORY_CODE_320(209),
    /**
     * <code>TIS_TERRITORY_CODE_562 = 210;</code>
     */
    TIS_TERRITORY_CODE_562(210),
    /**
     * <code>TIS_TERRITORY_CODE_200 = 211;</code>
     */
    TIS_TERRITORY_CODE_200(211),
    /**
     * <code>TIS_TERRITORY_CODE_442 = 212;</code>
     */
    TIS_TERRITORY_CODE_442(212),
    /**
     * <code>TIS_TERRITORY_CODE_686 = 213;</code>
     */
    TIS_TERRITORY_CODE_686(213),
    /**
     * <code>TIS_TERRITORY_CODE_203 = 214;</code>
     */
    TIS_TERRITORY_CODE_203(214),
    /**
     * <code>TIS_TERRITORY_CODE_324 = 215;</code>
     */
    TIS_TERRITORY_CODE_324(215),
    /**
     * <code>TIS_TERRITORY_CODE_566 = 216;</code>
     */
    TIS_TERRITORY_CODE_566(216),
    /**
     * <code>TIS_TERRITORY_CODE_204 = 217;</code>
     */
    TIS_TERRITORY_CODE_204(217),
    /**
     * <code>TIS_TERRITORY_CODE_688 = 218;</code>
     */
    TIS_TERRITORY_CODE_688(218),
    /**
     * <code>TIS_TERRITORY_CODE_328 = 219;</code>
     */
    TIS_TERRITORY_CODE_328(219),
    /**
     * <code>TIS_TERRITORY_CODE_208 = 220;</code>
     */
    TIS_TERRITORY_CODE_208(220),
    /**
     * <code>TIS_TERRITORY_CODE_690 = 221;</code>
     */
    TIS_TERRITORY_CODE_690(221),
    /**
     * <code>TIS_TERRITORY_CODE_450 = 222;</code>
     */
    TIS_TERRITORY_CODE_450(222),
    /**
     * <code>TIS_TERRITORY_CODE_694 = 223;</code>
     */
    TIS_TERRITORY_CODE_694(223),
    /**
     * <code>TIS_TERRITORY_CODE_332 = 224;</code>
     */
    TIS_TERRITORY_CODE_332(224),
    /**
     * <code>TIS_TERRITORY_CODE_212 = 225;</code>
     */
    TIS_TERRITORY_CODE_212(225),
    /**
     * <code>TIS_TERRITORY_CODE_454 = 226;</code>
     */
    TIS_TERRITORY_CODE_454(226),
    /**
     * <code>TIS_TERRITORY_CODE_214 = 227;</code>
     */
    TIS_TERRITORY_CODE_214(227),
    /**
     * <code>TIS_TERRITORY_CODE_336 = 228;</code>
     */
    TIS_TERRITORY_CODE_336(228),
    /**
     * <code>TIS_TERRITORY_CODE_578 = 229;</code>
     */
    TIS_TERRITORY_CODE_578(229),
    /**
     * <code>TIS_TERRITORY_CODE_458 = 230;</code>
     */
    TIS_TERRITORY_CODE_458(230),
    /**
     * <code>TIS_TERRITORY_CODE_218 = 231;</code>
     */
    TIS_TERRITORY_CODE_218(231),
    /**
     * <code>TIS_TERRITORY_CODE_340 = 232;</code>
     */
    TIS_TERRITORY_CODE_340(232),
    /**
     * <code>TIS_TERRITORY_CODE_462 = 233;</code>
     */
    TIS_TERRITORY_CODE_462(233),
    /**
     * <code>TIS_TERRITORY_CODE_583 = 234;</code>
     */
    TIS_TERRITORY_CODE_583(234),
    /**
     * <code>TIS_TERRITORY_CODE_100 = 235;</code>
     */
    TIS_TERRITORY_CODE_100(235),
    /**
     * <code>TIS_TERRITORY_CODE_584 = 236;</code>
     */
    TIS_TERRITORY_CODE_584(236),
    /**
     * <code>TIS_TERRITORY_CODE_222 = 237;</code>
     */
    TIS_TERRITORY_CODE_222(237),
    /**
     * <code>TIS_TERRITORY_CODE_585 = 238;</code>
     */
    TIS_TERRITORY_CODE_585(238),
    /**
     * <code>TIS_TERRITORY_CODE_344 = 239;</code>
     */
    TIS_TERRITORY_CODE_344(239),
    /**
     * <code>TIS_TERRITORY_CODE_586 = 240;</code>
     */
    TIS_TERRITORY_CODE_586(240),
    /**
     * <code>TIS_TERRITORY_CODE_466 = 241;</code>
     */
    TIS_TERRITORY_CODE_466(241),
    /**
     * <code>TIS_TERRITORY_CODE_104 = 242;</code>
     */
    TIS_TERRITORY_CODE_104(242),
    /**
     * <code>TIS_TERRITORY_CODE_226 = 243;</code>
     */
    TIS_TERRITORY_CODE_226(243),
    /**
     * <code>TIS_TERRITORY_CODE_348 = 244;</code>
     */
    TIS_TERRITORY_CODE_348(244),
    /**
     * <code>TIS_TERRITORY_CODE_108 = 245;</code>
     */
    TIS_TERRITORY_CODE_108(245),
    ;

    /**
     * <code>TIS_TERRITORY_CODE_470 = 0;</code>
     */
    public static final int TIS_TERRITORY_CODE_470_VALUE = 0;
    /**
     * <code>TIS_TERRITORY_CODE_591 = 1;</code>
     */
    public static final int TIS_TERRITORY_CODE_591_VALUE = 1;
    /**
     * <code>TIS_TERRITORY_CODE_230 = 2;</code>
     */
    public static final int TIS_TERRITORY_CODE_230_VALUE = 2;
    /**
     * <code>TIS_TERRITORY_CODE_231 = 3;</code>
     */
    public static final int TIS_TERRITORY_CODE_231_VALUE = 3;
    /**
     * <code>TIS_TERRITORY_CODE_352 = 4;</code>
     */
    public static final int TIS_TERRITORY_CODE_352_VALUE = 4;
    /**
     * <code>TIS_TERRITORY_CODE_232 = 5;</code>
     */
    public static final int TIS_TERRITORY_CODE_232_VALUE = 5;
    /**
     * <code>TIS_TERRITORY_CODE_112 = 6;</code>
     */
    public static final int TIS_TERRITORY_CODE_112_VALUE = 6;
    /**
     * <code>TIS_TERRITORY_CODE_233 = 7;</code>
     */
    public static final int TIS_TERRITORY_CODE_233_VALUE = 7;
    /**
     * <code>TIS_TERRITORY_CODE_356 = 8;</code>
     */
    public static final int TIS_TERRITORY_CODE_356_VALUE = 8;
    /**
     * <code>TIS_TERRITORY_CODE_598 = 9;</code>
     */
    public static final int TIS_TERRITORY_CODE_598_VALUE = 9;
    /**
     * <code>TIS_TERRITORY_CODE_478 = 10;</code>
     */
    public static final int TIS_TERRITORY_CODE_478_VALUE = 10;
    /**
     * <code>TIS_TERRITORY_CODE_116 = 11;</code>
     */
    public static final int TIS_TERRITORY_CODE_116_VALUE = 11;
    /**
     * <code>TIS_TERRITORY_CODE_12 = 12;</code>
     */
    public static final int TIS_TERRITORY_CODE_12_VALUE = 12;
    /**
     * <code>TIS_TERRITORY_CODE_480 = 13;</code>
     */
    public static final int TIS_TERRITORY_CODE_480_VALUE = 13;
    /**
     * <code>TIS_TERRITORY_CODE_360 = 14;</code>
     */
    public static final int TIS_TERRITORY_CODE_360_VALUE = 14;
    /**
     * <code>TIS_TERRITORY_CODE_120 = 15;</code>
     */
    public static final int TIS_TERRITORY_CODE_120_VALUE = 15;
    /**
     * <code>TIS_TERRITORY_CODE_242 = 16;</code>
     */
    public static final int TIS_TERRITORY_CODE_242_VALUE = 16;
    /**
     * <code>TIS_TERRITORY_CODE_484 = 17;</code>
     */
    public static final int TIS_TERRITORY_CODE_484_VALUE = 17;
    /**
     * <code>TIS_TERRITORY_CODE_364 = 18;</code>
     */
    public static final int TIS_TERRITORY_CODE_364_VALUE = 18;
    /**
     * <code>TIS_TERRITORY_CODE_124 = 19;</code>
     */
    public static final int TIS_TERRITORY_CODE_124_VALUE = 19;
    /**
     * <code>TIS_TERRITORY_CODE_4 = 20;</code>
     */
    public static final int TIS_TERRITORY_CODE_4_VALUE = 20;
    /**
     * <code>TIS_TERRITORY_CODE_246 = 21;</code>
     */
    public static final int TIS_TERRITORY_CODE_246_VALUE = 21;
    /**
     * <code>TIS_TERRITORY_CODE_368 = 22;</code>
     */
    public static final int TIS_TERRITORY_CODE_368_VALUE = 22;
    /**
     * <code>TIS_TERRITORY_CODE_8 = 23;</code>
     */
    public static final int TIS_TERRITORY_CODE_8_VALUE = 23;
    /**
     * <code>TIS_TERRITORY_CODE_800 = 24;</code>
     */
    public static final int TIS_TERRITORY_CODE_800_VALUE = 24;
    /**
     * <code>TIS_TERRITORY_CODE_804 = 25;</code>
     */
    public static final int TIS_TERRITORY_CODE_804_VALUE = 25;
    /**
     * <code>TIS_TERRITORY_CODE_20 = 26;</code>
     */
    public static final int TIS_TERRITORY_CODE_20_VALUE = 26;
    /**
     * <code>TIS_TERRITORY_CODE_807 = 27;</code>
     */
    public static final int TIS_TERRITORY_CODE_807_VALUE = 27;
    /**
     * <code>TIS_TERRITORY_CODE_24 = 28;</code>
     */
    public static final int TIS_TERRITORY_CODE_24_VALUE = 28;
    /**
     * <code>TIS_TERRITORY_CODE_28 = 29;</code>
     */
    public static final int TIS_TERRITORY_CODE_28_VALUE = 29;
    /**
     * <code>TIS_TERRITORY_CODE_250 = 30;</code>
     */
    public static final int TIS_TERRITORY_CODE_250_VALUE = 30;
    /**
     * <code>TIS_TERRITORY_CODE_492 = 31;</code>
     */
    public static final int TIS_TERRITORY_CODE_492_VALUE = 31;
    /**
     * <code>TIS_TERRITORY_CODE_372 = 32;</code>
     */
    public static final int TIS_TERRITORY_CODE_372_VALUE = 32;
    /**
     * <code>TIS_TERRITORY_CODE_132 = 33;</code>
     */
    public static final int TIS_TERRITORY_CODE_132_VALUE = 33;
    /**
     * <code>TIS_TERRITORY_CODE_496 = 34;</code>
     */
    public static final int TIS_TERRITORY_CODE_496_VALUE = 34;
    /**
     * <code>TIS_TERRITORY_CODE_376 = 35;</code>
     */
    public static final int TIS_TERRITORY_CODE_376_VALUE = 35;
    /**
     * <code>TIS_TERRITORY_CODE_498 = 36;</code>
     */
    public static final int TIS_TERRITORY_CODE_498_VALUE = 36;
    /**
     * <code>TIS_TERRITORY_CODE_499 = 37;</code>
     */
    public static final int TIS_TERRITORY_CODE_499_VALUE = 37;
    /**
     * <code>TIS_TERRITORY_CODE_258 = 38;</code>
     */
    public static final int TIS_TERRITORY_CODE_258_VALUE = 38;
    /**
     * <code>TIS_TERRITORY_CODE_810 = 39;</code>
     */
    public static final int TIS_TERRITORY_CODE_810_VALUE = 39;
    /**
     * <code>TIS_TERRITORY_CODE_31 = 40;</code>
     */
    public static final int TIS_TERRITORY_CODE_31_VALUE = 40;
    /**
     * <code>TIS_TERRITORY_CODE_32 = 41;</code>
     */
    public static final int TIS_TERRITORY_CODE_32_VALUE = 41;
    /**
     * <code>TIS_TERRITORY_CODE_818 = 42;</code>
     */
    public static final int TIS_TERRITORY_CODE_818_VALUE = 42;
    /**
     * <code>TIS_TERRITORY_CODE_36 = 43;</code>
     */
    public static final int TIS_TERRITORY_CODE_36_VALUE = 43;
    /**
     * <code>TIS_TERRITORY_CODE_2100 = 44;</code>
     */
    public static final int TIS_TERRITORY_CODE_2100_VALUE = 44;
    /**
     * <code>TIS_TERRITORY_CODE_380 = 45;</code>
     */
    public static final int TIS_TERRITORY_CODE_380_VALUE = 45;
    /**
     * <code>TIS_TERRITORY_CODE_140 = 46;</code>
     */
    public static final int TIS_TERRITORY_CODE_140_VALUE = 46;
    /**
     * <code>TIS_TERRITORY_CODE_262 = 47;</code>
     */
    public static final int TIS_TERRITORY_CODE_262_VALUE = 47;
    /**
     * <code>TIS_TERRITORY_CODE_384 = 48;</code>
     */
    public static final int TIS_TERRITORY_CODE_384_VALUE = 48;
    /**
     * <code>TIS_TERRITORY_CODE_144 = 49;</code>
     */
    public static final int TIS_TERRITORY_CODE_144_VALUE = 49;
    /**
     * <code>TIS_TERRITORY_CODE_266 = 50;</code>
     */
    public static final int TIS_TERRITORY_CODE_266_VALUE = 50;
    /**
     * <code>TIS_TERRITORY_CODE_388 = 51;</code>
     */
    public static final int TIS_TERRITORY_CODE_388_VALUE = 51;
    /**
     * <code>TIS_TERRITORY_CODE_268 = 52;</code>
     */
    public static final int TIS_TERRITORY_CODE_268_VALUE = 52;
    /**
     * <code>TIS_TERRITORY_CODE_148 = 53;</code>
     */
    public static final int TIS_TERRITORY_CODE_148_VALUE = 53;
    /**
     * <code>TIS_TERRITORY_CODE_702 = 54;</code>
     */
    public static final int TIS_TERRITORY_CODE_702_VALUE = 54;
    /**
     * <code>TIS_TERRITORY_CODE_703 = 55;</code>
     */
    public static final int TIS_TERRITORY_CODE_703_VALUE = 55;
    /**
     * <code>TIS_TERRITORY_CODE_704 = 56;</code>
     */
    public static final int TIS_TERRITORY_CODE_704_VALUE = 56;
    /**
     * <code>TIS_TERRITORY_CODE_40 = 57;</code>
     */
    public static final int TIS_TERRITORY_CODE_40_VALUE = 57;
    /**
     * <code>TIS_TERRITORY_CODE_705 = 58;</code>
     */
    public static final int TIS_TERRITORY_CODE_705_VALUE = 58;
    /**
     * <code>TIS_TERRITORY_CODE_826 = 59;</code>
     */
    public static final int TIS_TERRITORY_CODE_826_VALUE = 59;
    /**
     * <code>TIS_TERRITORY_CODE_706 = 60;</code>
     */
    public static final int TIS_TERRITORY_CODE_706_VALUE = 60;
    /**
     * <code>TIS_TERRITORY_CODE_44 = 61;</code>
     */
    public static final int TIS_TERRITORY_CODE_44_VALUE = 61;
    /**
     * <code>TIS_TERRITORY_CODE_48 = 62;</code>
     */
    public static final int TIS_TERRITORY_CODE_48_VALUE = 62;
    /**
     * <code>TIS_TERRITORY_CODE_2111 = 63;</code>
     */
    public static final int TIS_TERRITORY_CODE_2111_VALUE = 63;
    /**
     * <code>TIS_TERRITORY_CODE_2110 = 64;</code>
     */
    public static final int TIS_TERRITORY_CODE_2110_VALUE = 64;
    /**
     * <code>TIS_TERRITORY_CODE_270 = 65;</code>
     */
    public static final int TIS_TERRITORY_CODE_270_VALUE = 65;
    /**
     * <code>TIS_TERRITORY_CODE_392 = 66;</code>
     */
    public static final int TIS_TERRITORY_CODE_392_VALUE = 66;
    /**
     * <code>TIS_TERRITORY_CODE_152 = 67;</code>
     */
    public static final int TIS_TERRITORY_CODE_152_VALUE = 67;
    /**
     * <code>TIS_TERRITORY_CODE_2108 = 68;</code>
     */
    public static final int TIS_TERRITORY_CODE_2108_VALUE = 68;
    /**
     * <code>TIS_TERRITORY_CODE_276 = 69;</code>
     */
    public static final int TIS_TERRITORY_CODE_276_VALUE = 69;
    /**
     * <code>TIS_TERRITORY_CODE_2107 = 70;</code>
     */
    public static final int TIS_TERRITORY_CODE_2107_VALUE = 70;
    /**
     * <code>TIS_TERRITORY_CODE_156 = 71;</code>
     */
    public static final int TIS_TERRITORY_CODE_156_VALUE = 71;
    /**
     * <code>TIS_TERRITORY_CODE_398 = 72;</code>
     */
    public static final int TIS_TERRITORY_CODE_398_VALUE = 72;
    /**
     * <code>TIS_TERRITORY_CODE_2106 = 73;</code>
     */
    public static final int TIS_TERRITORY_CODE_2106_VALUE = 73;
    /**
     * <code>TIS_TERRITORY_CODE_278 = 74;</code>
     */
    public static final int TIS_TERRITORY_CODE_278_VALUE = 74;
    /**
     * <code>TIS_TERRITORY_CODE_2105 = 75;</code>
     */
    public static final int TIS_TERRITORY_CODE_2105_VALUE = 75;
    /**
     * <code>TIS_TERRITORY_CODE_158 = 76;</code>
     */
    public static final int TIS_TERRITORY_CODE_158_VALUE = 76;
    /**
     * <code>TIS_TERRITORY_CODE_2104 = 77;</code>
     */
    public static final int TIS_TERRITORY_CODE_2104_VALUE = 77;
    /**
     * <code>TIS_TERRITORY_CODE_2103 = 78;</code>
     */
    public static final int TIS_TERRITORY_CODE_2103_VALUE = 78;
    /**
     * <code>TIS_TERRITORY_CODE_710 = 79;</code>
     */
    public static final int TIS_TERRITORY_CODE_710_VALUE = 79;
    /**
     * <code>TIS_TERRITORY_CODE_2102 = 80;</code>
     */
    public static final int TIS_TERRITORY_CODE_2102_VALUE = 80;
    /**
     * <code>TIS_TERRITORY_CODE_2101 = 81;</code>
     */
    public static final int TIS_TERRITORY_CODE_2101_VALUE = 81;
    /**
     * <code>TIS_TERRITORY_CODE_834 = 82;</code>
     */
    public static final int TIS_TERRITORY_CODE_834_VALUE = 82;
    /**
     * <code>TIS_TERRITORY_CODE_50 = 83;</code>
     */
    public static final int TIS_TERRITORY_CODE_50_VALUE = 83;
    /**
     * <code>TIS_TERRITORY_CODE_51 = 84;</code>
     */
    public static final int TIS_TERRITORY_CODE_51_VALUE = 84;
    /**
     * <code>TIS_TERRITORY_CODE_716 = 85;</code>
     */
    public static final int TIS_TERRITORY_CODE_716_VALUE = 85;
    /**
     * <code>TIS_TERRITORY_CODE_52 = 86;</code>
     */
    public static final int TIS_TERRITORY_CODE_52_VALUE = 86;
    /**
     * <code>TIS_TERRITORY_CODE_2109 = 87;</code>
     */
    public static final int TIS_TERRITORY_CODE_2109_VALUE = 87;
    /**
     * <code>TIS_TERRITORY_CODE_56 = 88;</code>
     */
    public static final int TIS_TERRITORY_CODE_56_VALUE = 88;
    /**
     * <code>TIS_TERRITORY_CODE_2122 = 89;</code>
     */
    public static final int TIS_TERRITORY_CODE_2122_VALUE = 89;
    /**
     * <code>TIS_TERRITORY_CODE_2121 = 90;</code>
     */
    public static final int TIS_TERRITORY_CODE_2121_VALUE = 90;
    /**
     * <code>TIS_TERRITORY_CODE_280 = 91;</code>
     */
    public static final int TIS_TERRITORY_CODE_280_VALUE = 91;
    /**
     * <code>TIS_TERRITORY_CODE_2120 = 92;</code>
     */
    public static final int TIS_TERRITORY_CODE_2120_VALUE = 92;
    /**
     * <code>TIS_TERRITORY_CODE_2119 = 93;</code>
     */
    public static final int TIS_TERRITORY_CODE_2119_VALUE = 93;
    /**
     * <code>TIS_TERRITORY_CODE_2118 = 94;</code>
     */
    public static final int TIS_TERRITORY_CODE_2118_VALUE = 94;
    /**
     * <code>TIS_TERRITORY_CODE_288 = 95;</code>
     */
    public static final int TIS_TERRITORY_CODE_288_VALUE = 95;
    /**
     * <code>TIS_TERRITORY_CODE_2117 = 96;</code>
     */
    public static final int TIS_TERRITORY_CODE_2117_VALUE = 96;
    /**
     * <code>TIS_TERRITORY_CODE_2116 = 97;</code>
     */
    public static final int TIS_TERRITORY_CODE_2116_VALUE = 97;
    /**
     * <code>TIS_TERRITORY_CODE_840 = 98;</code>
     */
    public static final int TIS_TERRITORY_CODE_840_VALUE = 98;
    /**
     * <code>TIS_TERRITORY_CODE_2115 = 99;</code>
     */
    public static final int TIS_TERRITORY_CODE_2115_VALUE = 99;
    /**
     * <code>TIS_TERRITORY_CODE_720 = 100;</code>
     */
    public static final int TIS_TERRITORY_CODE_720_VALUE = 100;
    /**
     * <code>TIS_TERRITORY_CODE_2114 = 101;</code>
     */
    public static final int TIS_TERRITORY_CODE_2114_VALUE = 101;
    /**
     * <code>TIS_TERRITORY_CODE_600 = 102;</code>
     */
    public static final int TIS_TERRITORY_CODE_600_VALUE = 102;
    /**
     * <code>TIS_TERRITORY_CODE_2113 = 103;</code>
     */
    public static final int TIS_TERRITORY_CODE_2113_VALUE = 103;
    /**
     * <code>TIS_TERRITORY_CODE_2112 = 104;</code>
     */
    public static final int TIS_TERRITORY_CODE_2112_VALUE = 104;
    /**
     * <code>TIS_TERRITORY_CODE_724 = 105;</code>
     */
    public static final int TIS_TERRITORY_CODE_724_VALUE = 105;
    /**
     * <code>TIS_TERRITORY_CODE_604 = 106;</code>
     */
    public static final int TIS_TERRITORY_CODE_604_VALUE = 106;
    /**
     * <code>TIS_TERRITORY_CODE_728 = 107;</code>
     */
    public static final int TIS_TERRITORY_CODE_728_VALUE = 107;
    /**
     * <code>TIS_TERRITORY_CODE_64 = 108;</code>
     */
    public static final int TIS_TERRITORY_CODE_64_VALUE = 108;
    /**
     * <code>TIS_TERRITORY_CODE_608 = 109;</code>
     */
    public static final int TIS_TERRITORY_CODE_608_VALUE = 109;
    /**
     * <code>TIS_TERRITORY_CODE_729 = 110;</code>
     */
    public static final int TIS_TERRITORY_CODE_729_VALUE = 110;
    /**
     * <code>TIS_TERRITORY_CODE_68 = 111;</code>
     */
    public static final int TIS_TERRITORY_CODE_68_VALUE = 111;
    /**
     * <code>TIS_TERRITORY_CODE_2133 = 112;</code>
     */
    public static final int TIS_TERRITORY_CODE_2133_VALUE = 112;
    /**
     * <code>TIS_TERRITORY_CODE_2132 = 113;</code>
     */
    public static final int TIS_TERRITORY_CODE_2132_VALUE = 113;
    /**
     * <code>TIS_TERRITORY_CODE_170 = 114;</code>
     */
    public static final int TIS_TERRITORY_CODE_170_VALUE = 114;
    /**
     * <code>TIS_TERRITORY_CODE_2131 = 115;</code>
     */
    public static final int TIS_TERRITORY_CODE_2131_VALUE = 115;
    /**
     * <code>TIS_TERRITORY_CODE_2130 = 116;</code>
     */
    public static final int TIS_TERRITORY_CODE_2130_VALUE = 116;
    /**
     * <code>TIS_TERRITORY_CODE_174 = 117;</code>
     */
    public static final int TIS_TERRITORY_CODE_174_VALUE = 117;
    /**
     * <code>TIS_TERRITORY_CODE_296 = 118;</code>
     */
    public static final int TIS_TERRITORY_CODE_296_VALUE = 118;
    /**
     * <code>TIS_TERRITORY_CODE_2129 = 119;</code>
     */
    public static final int TIS_TERRITORY_CODE_2129_VALUE = 119;
    /**
     * <code>TIS_TERRITORY_CODE_178 = 120;</code>
     */
    public static final int TIS_TERRITORY_CODE_178_VALUE = 120;
    /**
     * <code>TIS_TERRITORY_CODE_2128 = 121;</code>
     */
    public static final int TIS_TERRITORY_CODE_2128_VALUE = 121;
    /**
     * <code>TIS_TERRITORY_CODE_2127 = 122;</code>
     */
    public static final int TIS_TERRITORY_CODE_2127_VALUE = 122;
    /**
     * <code>TIS_TERRITORY_CODE_2126 = 123;</code>
     */
    public static final int TIS_TERRITORY_CODE_2126_VALUE = 123;
    /**
     * <code>TIS_TERRITORY_CODE_2125 = 124;</code>
     */
    public static final int TIS_TERRITORY_CODE_2125_VALUE = 124;
    /**
     * <code>TIS_TERRITORY_CODE_732 = 125;</code>
     */
    public static final int TIS_TERRITORY_CODE_732_VALUE = 125;
    /**
     * <code>TIS_TERRITORY_CODE_2124 = 126;</code>
     */
    public static final int TIS_TERRITORY_CODE_2124_VALUE = 126;
    /**
     * <code>TIS_TERRITORY_CODE_854 = 127;</code>
     */
    public static final int TIS_TERRITORY_CODE_854_VALUE = 127;
    /**
     * <code>TIS_TERRITORY_CODE_2123 = 128;</code>
     */
    public static final int TIS_TERRITORY_CODE_2123_VALUE = 128;
    /**
     * <code>TIS_TERRITORY_CODE_70 = 129;</code>
     */
    public static final int TIS_TERRITORY_CODE_70_VALUE = 129;
    /**
     * <code>TIS_TERRITORY_CODE_736 = 130;</code>
     */
    public static final int TIS_TERRITORY_CODE_736_VALUE = 130;
    /**
     * <code>TIS_TERRITORY_CODE_72 = 131;</code>
     */
    public static final int TIS_TERRITORY_CODE_72_VALUE = 131;
    /**
     * <code>TIS_TERRITORY_CODE_616 = 132;</code>
     */
    public static final int TIS_TERRITORY_CODE_616_VALUE = 132;
    /**
     * <code>TIS_TERRITORY_CODE_858 = 133;</code>
     */
    public static final int TIS_TERRITORY_CODE_858_VALUE = 133;
    /**
     * <code>TIS_TERRITORY_CODE_76 = 134;</code>
     */
    public static final int TIS_TERRITORY_CODE_76_VALUE = 134;
    /**
     * <code>TIS_TERRITORY_CODE_180 = 135;</code>
     */
    public static final int TIS_TERRITORY_CODE_180_VALUE = 135;
    /**
     * <code>TIS_TERRITORY_CODE_188 = 136;</code>
     */
    public static final int TIS_TERRITORY_CODE_188_VALUE = 136;
    /**
     * <code>TIS_TERRITORY_CODE_860 = 137;</code>
     */
    public static final int TIS_TERRITORY_CODE_860_VALUE = 137;
    /**
     * <code>TIS_TERRITORY_CODE_740 = 138;</code>
     */
    public static final int TIS_TERRITORY_CODE_740_VALUE = 138;
    /**
     * <code>TIS_TERRITORY_CODE_620 = 139;</code>
     */
    public static final int TIS_TERRITORY_CODE_620_VALUE = 139;
    /**
     * <code>TIS_TERRITORY_CODE_862 = 140;</code>
     */
    public static final int TIS_TERRITORY_CODE_862_VALUE = 140;
    /**
     * <code>TIS_TERRITORY_CODE_2136 = 141;</code>
     */
    public static final int TIS_TERRITORY_CODE_2136_VALUE = 141;
    /**
     * <code>TIS_TERRITORY_CODE_2134 = 142;</code>
     */
    public static final int TIS_TERRITORY_CODE_2134_VALUE = 142;
    /**
     * <code>TIS_TERRITORY_CODE_624 = 143;</code>
     */
    public static final int TIS_TERRITORY_CODE_624_VALUE = 143;
    /**
     * <code>TIS_TERRITORY_CODE_504 = 144;</code>
     */
    public static final int TIS_TERRITORY_CODE_504_VALUE = 144;
    /**
     * <code>TIS_TERRITORY_CODE_626 = 145;</code>
     */
    public static final int TIS_TERRITORY_CODE_626_VALUE = 145;
    /**
     * <code>TIS_TERRITORY_CODE_748 = 146;</code>
     */
    public static final int TIS_TERRITORY_CODE_748_VALUE = 146;
    /**
     * <code>TIS_TERRITORY_CODE_84 = 147;</code>
     */
    public static final int TIS_TERRITORY_CODE_84_VALUE = 147;
    /**
     * <code>TIS_TERRITORY_CODE_508 = 148;</code>
     */
    public static final int TIS_TERRITORY_CODE_508_VALUE = 148;
    /**
     * <code>TIS_TERRITORY_CODE_191 = 149;</code>
     */
    public static final int TIS_TERRITORY_CODE_191_VALUE = 149;
    /**
     * <code>TIS_TERRITORY_CODE_192 = 150;</code>
     */
    public static final int TIS_TERRITORY_CODE_192_VALUE = 150;
    /**
     * <code>TIS_TERRITORY_CODE_196 = 151;</code>
     */
    public static final int TIS_TERRITORY_CODE_196_VALUE = 151;
    /**
     * <code>TIS_TERRITORY_CODE_630 = 152;</code>
     */
    public static final int TIS_TERRITORY_CODE_630_VALUE = 152;
    /**
     * <code>TIS_TERRITORY_CODE_752 = 153;</code>
     */
    public static final int TIS_TERRITORY_CODE_752_VALUE = 153;
    /**
     * <code>TIS_TERRITORY_CODE_512 = 154;</code>
     */
    public static final int TIS_TERRITORY_CODE_512_VALUE = 154;
    /**
     * <code>TIS_TERRITORY_CODE_90 = 155;</code>
     */
    public static final int TIS_TERRITORY_CODE_90_VALUE = 155;
    /**
     * <code>TIS_TERRITORY_CODE_634 = 156;</code>
     */
    public static final int TIS_TERRITORY_CODE_634_VALUE = 156;
    /**
     * <code>TIS_TERRITORY_CODE_756 = 157;</code>
     */
    public static final int TIS_TERRITORY_CODE_756_VALUE = 157;
    /**
     * <code>TIS_TERRITORY_CODE_516 = 158;</code>
     */
    public static final int TIS_TERRITORY_CODE_516_VALUE = 158;
    /**
     * <code>TIS_TERRITORY_CODE_96 = 159;</code>
     */
    public static final int TIS_TERRITORY_CODE_96_VALUE = 159;
    /**
     * <code>TIS_TERRITORY_CODE_760 = 160;</code>
     */
    public static final int TIS_TERRITORY_CODE_760_VALUE = 160;
    /**
     * <code>TIS_TERRITORY_CODE_882 = 161;</code>
     */
    public static final int TIS_TERRITORY_CODE_882_VALUE = 161;
    /**
     * <code>TIS_TERRITORY_CODE_520 = 162;</code>
     */
    public static final int TIS_TERRITORY_CODE_520_VALUE = 162;
    /**
     * <code>TIS_TERRITORY_CODE_762 = 163;</code>
     */
    public static final int TIS_TERRITORY_CODE_762_VALUE = 163;
    /**
     * <code>TIS_TERRITORY_CODE_400 = 164;</code>
     */
    public static final int TIS_TERRITORY_CODE_400_VALUE = 164;
    /**
     * <code>TIS_TERRITORY_CODE_642 = 165;</code>
     */
    public static final int TIS_TERRITORY_CODE_642_VALUE = 165;
    /**
     * <code>TIS_TERRITORY_CODE_643 = 166;</code>
     */
    public static final int TIS_TERRITORY_CODE_643_VALUE = 166;
    /**
     * <code>TIS_TERRITORY_CODE_764 = 167;</code>
     */
    public static final int TIS_TERRITORY_CODE_764_VALUE = 167;
    /**
     * <code>TIS_TERRITORY_CODE_886 = 168;</code>
     */
    public static final int TIS_TERRITORY_CODE_886_VALUE = 168;
    /**
     * <code>TIS_TERRITORY_CODE_524 = 169;</code>
     */
    public static final int TIS_TERRITORY_CODE_524_VALUE = 169;
    /**
     * <code>TIS_TERRITORY_CODE_887 = 170;</code>
     */
    public static final int TIS_TERRITORY_CODE_887_VALUE = 170;
    /**
     * <code>TIS_TERRITORY_CODE_404 = 171;</code>
     */
    public static final int TIS_TERRITORY_CODE_404_VALUE = 171;
    /**
     * <code>TIS_TERRITORY_CODE_646 = 172;</code>
     */
    public static final int TIS_TERRITORY_CODE_646_VALUE = 172;
    /**
     * <code>TIS_TERRITORY_CODE_768 = 173;</code>
     */
    public static final int TIS_TERRITORY_CODE_768_VALUE = 173;
    /**
     * <code>TIS_TERRITORY_CODE_528 = 174;</code>
     */
    public static final int TIS_TERRITORY_CODE_528_VALUE = 174;
    /**
     * <code>TIS_TERRITORY_CODE_408 = 175;</code>
     */
    public static final int TIS_TERRITORY_CODE_408_VALUE = 175;
    /**
     * <code>TIS_TERRITORY_CODE_890 = 176;</code>
     */
    public static final int TIS_TERRITORY_CODE_890_VALUE = 176;
    /**
     * <code>TIS_TERRITORY_CODE_891 = 177;</code>
     */
    public static final int TIS_TERRITORY_CODE_891_VALUE = 177;
    /**
     * <code>TIS_TERRITORY_CODE_410 = 178;</code>
     */
    public static final int TIS_TERRITORY_CODE_410_VALUE = 178;
    /**
     * <code>TIS_TERRITORY_CODE_894 = 179;</code>
     */
    public static final int TIS_TERRITORY_CODE_894_VALUE = 179;
    /**
     * <code>TIS_TERRITORY_CODE_776 = 180;</code>
     */
    public static final int TIS_TERRITORY_CODE_776_VALUE = 180;
    /**
     * <code>TIS_TERRITORY_CODE_414 = 181;</code>
     */
    public static final int TIS_TERRITORY_CODE_414_VALUE = 181;
    /**
     * <code>TIS_TERRITORY_CODE_417 = 182;</code>
     */
    public static final int TIS_TERRITORY_CODE_417_VALUE = 182;
    /**
     * <code>TIS_TERRITORY_CODE_659 = 183;</code>
     */
    public static final int TIS_TERRITORY_CODE_659_VALUE = 183;
    /**
     * <code>TIS_TERRITORY_CODE_418 = 184;</code>
     */
    public static final int TIS_TERRITORY_CODE_418_VALUE = 184;
    /**
     * <code>TIS_TERRITORY_CODE_780 = 185;</code>
     */
    public static final int TIS_TERRITORY_CODE_780_VALUE = 185;
    /**
     * <code>TIS_TERRITORY_CODE_540 = 186;</code>
     */
    public static final int TIS_TERRITORY_CODE_540_VALUE = 186;
    /**
     * <code>TIS_TERRITORY_CODE_662 = 187;</code>
     */
    public static final int TIS_TERRITORY_CODE_662_VALUE = 187;
    /**
     * <code>TIS_TERRITORY_CODE_300 = 188;</code>
     */
    public static final int TIS_TERRITORY_CODE_300_VALUE = 188;
    /**
     * <code>TIS_TERRITORY_CODE_784 = 189;</code>
     */
    public static final int TIS_TERRITORY_CODE_784_VALUE = 189;
    /**
     * <code>TIS_TERRITORY_CODE_422 = 190;</code>
     */
    public static final int TIS_TERRITORY_CODE_422_VALUE = 190;
    /**
     * <code>TIS_TERRITORY_CODE_788 = 191;</code>
     */
    public static final int TIS_TERRITORY_CODE_788_VALUE = 191;
    /**
     * <code>TIS_TERRITORY_CODE_426 = 192;</code>
     */
    public static final int TIS_TERRITORY_CODE_426_VALUE = 192;
    /**
     * <code>TIS_TERRITORY_CODE_548 = 193;</code>
     */
    public static final int TIS_TERRITORY_CODE_548_VALUE = 193;
    /**
     * <code>TIS_TERRITORY_CODE_428 = 194;</code>
     */
    public static final int TIS_TERRITORY_CODE_428_VALUE = 194;
    /**
     * <code>TIS_TERRITORY_CODE_308 = 195;</code>
     */
    public static final int TIS_TERRITORY_CODE_308_VALUE = 195;
    /**
     * <code>TIS_TERRITORY_CODE_670 = 196;</code>
     */
    public static final int TIS_TERRITORY_CODE_670_VALUE = 196;
    /**
     * <code>TIS_TERRITORY_CODE_792 = 197;</code>
     */
    public static final int TIS_TERRITORY_CODE_792_VALUE = 197;
    /**
     * <code>TIS_TERRITORY_CODE_430 = 198;</code>
     */
    public static final int TIS_TERRITORY_CODE_430_VALUE = 198;
    /**
     * <code>TIS_TERRITORY_CODE_674 = 199;</code>
     */
    public static final int TIS_TERRITORY_CODE_674_VALUE = 199;
    /**
     * <code>TIS_TERRITORY_CODE_795 = 200;</code>
     */
    public static final int TIS_TERRITORY_CODE_795_VALUE = 200;
    /**
     * <code>TIS_TERRITORY_CODE_554 = 201;</code>
     */
    public static final int TIS_TERRITORY_CODE_554_VALUE = 201;
    /**
     * <code>TIS_TERRITORY_CODE_434 = 202;</code>
     */
    public static final int TIS_TERRITORY_CODE_434_VALUE = 202;
    /**
     * <code>TIS_TERRITORY_CODE_798 = 203;</code>
     */
    public static final int TIS_TERRITORY_CODE_798_VALUE = 203;
    /**
     * <code>TIS_TERRITORY_CODE_678 = 204;</code>
     */
    public static final int TIS_TERRITORY_CODE_678_VALUE = 204;
    /**
     * <code>TIS_TERRITORY_CODE_558 = 205;</code>
     */
    public static final int TIS_TERRITORY_CODE_558_VALUE = 205;
    /**
     * <code>TIS_TERRITORY_CODE_438 = 206;</code>
     */
    public static final int TIS_TERRITORY_CODE_438_VALUE = 206;
    /**
     * <code>TIS_TERRITORY_CODE_440 = 207;</code>
     */
    public static final int TIS_TERRITORY_CODE_440_VALUE = 207;
    /**
     * <code>TIS_TERRITORY_CODE_682 = 208;</code>
     */
    public static final int TIS_TERRITORY_CODE_682_VALUE = 208;
    /**
     * <code>TIS_TERRITORY_CODE_320 = 209;</code>
     */
    public static final int TIS_TERRITORY_CODE_320_VALUE = 209;
    /**
     * <code>TIS_TERRITORY_CODE_562 = 210;</code>
     */
    public static final int TIS_TERRITORY_CODE_562_VALUE = 210;
    /**
     * <code>TIS_TERRITORY_CODE_200 = 211;</code>
     */
    public static final int TIS_TERRITORY_CODE_200_VALUE = 211;
    /**
     * <code>TIS_TERRITORY_CODE_442 = 212;</code>
     */
    public static final int TIS_TERRITORY_CODE_442_VALUE = 212;
    /**
     * <code>TIS_TERRITORY_CODE_686 = 213;</code>
     */
    public static final int TIS_TERRITORY_CODE_686_VALUE = 213;
    /**
     * <code>TIS_TERRITORY_CODE_203 = 214;</code>
     */
    public static final int TIS_TERRITORY_CODE_203_VALUE = 214;
    /**
     * <code>TIS_TERRITORY_CODE_324 = 215;</code>
     */
    public static final int TIS_TERRITORY_CODE_324_VALUE = 215;
    /**
     * <code>TIS_TERRITORY_CODE_566 = 216;</code>
     */
    public static final int TIS_TERRITORY_CODE_566_VALUE = 216;
    /**
     * <code>TIS_TERRITORY_CODE_204 = 217;</code>
     */
    public static final int TIS_TERRITORY_CODE_204_VALUE = 217;
    /**
     * <code>TIS_TERRITORY_CODE_688 = 218;</code>
     */
    public static final int TIS_TERRITORY_CODE_688_VALUE = 218;
    /**
     * <code>TIS_TERRITORY_CODE_328 = 219;</code>
     */
    public static final int TIS_TERRITORY_CODE_328_VALUE = 219;
    /**
     * <code>TIS_TERRITORY_CODE_208 = 220;</code>
     */
    public static final int TIS_TERRITORY_CODE_208_VALUE = 220;
    /**
     * <code>TIS_TERRITORY_CODE_690 = 221;</code>
     */
    public static final int TIS_TERRITORY_CODE_690_VALUE = 221;
    /**
     * <code>TIS_TERRITORY_CODE_450 = 222;</code>
     */
    public static final int TIS_TERRITORY_CODE_450_VALUE = 222;
    /**
     * <code>TIS_TERRITORY_CODE_694 = 223;</code>
     */
    public static final int TIS_TERRITORY_CODE_694_VALUE = 223;
    /**
     * <code>TIS_TERRITORY_CODE_332 = 224;</code>
     */
    public static final int TIS_TERRITORY_CODE_332_VALUE = 224;
    /**
     * <code>TIS_TERRITORY_CODE_212 = 225;</code>
     */
    public static final int TIS_TERRITORY_CODE_212_VALUE = 225;
    /**
     * <code>TIS_TERRITORY_CODE_454 = 226;</code>
     */
    public static final int TIS_TERRITORY_CODE_454_VALUE = 226;
    /**
     * <code>TIS_TERRITORY_CODE_214 = 227;</code>
     */
    public static final int TIS_TERRITORY_CODE_214_VALUE = 227;
    /**
     * <code>TIS_TERRITORY_CODE_336 = 228;</code>
     */
    public static final int TIS_TERRITORY_CODE_336_VALUE = 228;
    /**
     * <code>TIS_TERRITORY_CODE_578 = 229;</code>
     */
    public static final int TIS_TERRITORY_CODE_578_VALUE = 229;
    /**
     * <code>TIS_TERRITORY_CODE_458 = 230;</code>
     */
    public static final int TIS_TERRITORY_CODE_458_VALUE = 230;
    /**
     * <code>TIS_TERRITORY_CODE_218 = 231;</code>
     */
    public static final int TIS_TERRITORY_CODE_218_VALUE = 231;
    /**
     * <code>TIS_TERRITORY_CODE_340 = 232;</code>
     */
    public static final int TIS_TERRITORY_CODE_340_VALUE = 232;
    /**
     * <code>TIS_TERRITORY_CODE_462 = 233;</code>
     */
    public static final int TIS_TERRITORY_CODE_462_VALUE = 233;
    /**
     * <code>TIS_TERRITORY_CODE_583 = 234;</code>
     */
    public static final int TIS_TERRITORY_CODE_583_VALUE = 234;
    /**
     * <code>TIS_TERRITORY_CODE_100 = 235;</code>
     */
    public static final int TIS_TERRITORY_CODE_100_VALUE = 235;
    /**
     * <code>TIS_TERRITORY_CODE_584 = 236;</code>
     */
    public static final int TIS_TERRITORY_CODE_584_VALUE = 236;
    /**
     * <code>TIS_TERRITORY_CODE_222 = 237;</code>
     */
    public static final int TIS_TERRITORY_CODE_222_VALUE = 237;
    /**
     * <code>TIS_TERRITORY_CODE_585 = 238;</code>
     */
    public static final int TIS_TERRITORY_CODE_585_VALUE = 238;
    /**
     * <code>TIS_TERRITORY_CODE_344 = 239;</code>
     */
    public static final int TIS_TERRITORY_CODE_344_VALUE = 239;
    /**
     * <code>TIS_TERRITORY_CODE_586 = 240;</code>
     */
    public static final int TIS_TERRITORY_CODE_586_VALUE = 240;
    /**
     * <code>TIS_TERRITORY_CODE_466 = 241;</code>
     */
    public static final int TIS_TERRITORY_CODE_466_VALUE = 241;
    /**
     * <code>TIS_TERRITORY_CODE_104 = 242;</code>
     */
    public static final int TIS_TERRITORY_CODE_104_VALUE = 242;
    /**
     * <code>TIS_TERRITORY_CODE_226 = 243;</code>
     */
    public static final int TIS_TERRITORY_CODE_226_VALUE = 243;
    /**
     * <code>TIS_TERRITORY_CODE_348 = 244;</code>
     */
    public static final int TIS_TERRITORY_CODE_348_VALUE = 244;
    /**
     * <code>TIS_TERRITORY_CODE_108 = 245;</code>
     */
    public static final int TIS_TERRITORY_CODE_108_VALUE = 245;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TisTerritoryCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TisTerritoryCode forNumber(int value) {
      switch (value) {
        case 0: return TIS_TERRITORY_CODE_470;
        case 1: return TIS_TERRITORY_CODE_591;
        case 2: return TIS_TERRITORY_CODE_230;
        case 3: return TIS_TERRITORY_CODE_231;
        case 4: return TIS_TERRITORY_CODE_352;
        case 5: return TIS_TERRITORY_CODE_232;
        case 6: return TIS_TERRITORY_CODE_112;
        case 7: return TIS_TERRITORY_CODE_233;
        case 8: return TIS_TERRITORY_CODE_356;
        case 9: return TIS_TERRITORY_CODE_598;
        case 10: return TIS_TERRITORY_CODE_478;
        case 11: return TIS_TERRITORY_CODE_116;
        case 12: return TIS_TERRITORY_CODE_12;
        case 13: return TIS_TERRITORY_CODE_480;
        case 14: return TIS_TERRITORY_CODE_360;
        case 15: return TIS_TERRITORY_CODE_120;
        case 16: return TIS_TERRITORY_CODE_242;
        case 17: return TIS_TERRITORY_CODE_484;
        case 18: return TIS_TERRITORY_CODE_364;
        case 19: return TIS_TERRITORY_CODE_124;
        case 20: return TIS_TERRITORY_CODE_4;
        case 21: return TIS_TERRITORY_CODE_246;
        case 22: return TIS_TERRITORY_CODE_368;
        case 23: return TIS_TERRITORY_CODE_8;
        case 24: return TIS_TERRITORY_CODE_800;
        case 25: return TIS_TERRITORY_CODE_804;
        case 26: return TIS_TERRITORY_CODE_20;
        case 27: return TIS_TERRITORY_CODE_807;
        case 28: return TIS_TERRITORY_CODE_24;
        case 29: return TIS_TERRITORY_CODE_28;
        case 30: return TIS_TERRITORY_CODE_250;
        case 31: return TIS_TERRITORY_CODE_492;
        case 32: return TIS_TERRITORY_CODE_372;
        case 33: return TIS_TERRITORY_CODE_132;
        case 34: return TIS_TERRITORY_CODE_496;
        case 35: return TIS_TERRITORY_CODE_376;
        case 36: return TIS_TERRITORY_CODE_498;
        case 37: return TIS_TERRITORY_CODE_499;
        case 38: return TIS_TERRITORY_CODE_258;
        case 39: return TIS_TERRITORY_CODE_810;
        case 40: return TIS_TERRITORY_CODE_31;
        case 41: return TIS_TERRITORY_CODE_32;
        case 42: return TIS_TERRITORY_CODE_818;
        case 43: return TIS_TERRITORY_CODE_36;
        case 44: return TIS_TERRITORY_CODE_2100;
        case 45: return TIS_TERRITORY_CODE_380;
        case 46: return TIS_TERRITORY_CODE_140;
        case 47: return TIS_TERRITORY_CODE_262;
        case 48: return TIS_TERRITORY_CODE_384;
        case 49: return TIS_TERRITORY_CODE_144;
        case 50: return TIS_TERRITORY_CODE_266;
        case 51: return TIS_TERRITORY_CODE_388;
        case 52: return TIS_TERRITORY_CODE_268;
        case 53: return TIS_TERRITORY_CODE_148;
        case 54: return TIS_TERRITORY_CODE_702;
        case 55: return TIS_TERRITORY_CODE_703;
        case 56: return TIS_TERRITORY_CODE_704;
        case 57: return TIS_TERRITORY_CODE_40;
        case 58: return TIS_TERRITORY_CODE_705;
        case 59: return TIS_TERRITORY_CODE_826;
        case 60: return TIS_TERRITORY_CODE_706;
        case 61: return TIS_TERRITORY_CODE_44;
        case 62: return TIS_TERRITORY_CODE_48;
        case 63: return TIS_TERRITORY_CODE_2111;
        case 64: return TIS_TERRITORY_CODE_2110;
        case 65: return TIS_TERRITORY_CODE_270;
        case 66: return TIS_TERRITORY_CODE_392;
        case 67: return TIS_TERRITORY_CODE_152;
        case 68: return TIS_TERRITORY_CODE_2108;
        case 69: return TIS_TERRITORY_CODE_276;
        case 70: return TIS_TERRITORY_CODE_2107;
        case 71: return TIS_TERRITORY_CODE_156;
        case 72: return TIS_TERRITORY_CODE_398;
        case 73: return TIS_TERRITORY_CODE_2106;
        case 74: return TIS_TERRITORY_CODE_278;
        case 75: return TIS_TERRITORY_CODE_2105;
        case 76: return TIS_TERRITORY_CODE_158;
        case 77: return TIS_TERRITORY_CODE_2104;
        case 78: return TIS_TERRITORY_CODE_2103;
        case 79: return TIS_TERRITORY_CODE_710;
        case 80: return TIS_TERRITORY_CODE_2102;
        case 81: return TIS_TERRITORY_CODE_2101;
        case 82: return TIS_TERRITORY_CODE_834;
        case 83: return TIS_TERRITORY_CODE_50;
        case 84: return TIS_TERRITORY_CODE_51;
        case 85: return TIS_TERRITORY_CODE_716;
        case 86: return TIS_TERRITORY_CODE_52;
        case 87: return TIS_TERRITORY_CODE_2109;
        case 88: return TIS_TERRITORY_CODE_56;
        case 89: return TIS_TERRITORY_CODE_2122;
        case 90: return TIS_TERRITORY_CODE_2121;
        case 91: return TIS_TERRITORY_CODE_280;
        case 92: return TIS_TERRITORY_CODE_2120;
        case 93: return TIS_TERRITORY_CODE_2119;
        case 94: return TIS_TERRITORY_CODE_2118;
        case 95: return TIS_TERRITORY_CODE_288;
        case 96: return TIS_TERRITORY_CODE_2117;
        case 97: return TIS_TERRITORY_CODE_2116;
        case 98: return TIS_TERRITORY_CODE_840;
        case 99: return TIS_TERRITORY_CODE_2115;
        case 100: return TIS_TERRITORY_CODE_720;
        case 101: return TIS_TERRITORY_CODE_2114;
        case 102: return TIS_TERRITORY_CODE_600;
        case 103: return TIS_TERRITORY_CODE_2113;
        case 104: return TIS_TERRITORY_CODE_2112;
        case 105: return TIS_TERRITORY_CODE_724;
        case 106: return TIS_TERRITORY_CODE_604;
        case 107: return TIS_TERRITORY_CODE_728;
        case 108: return TIS_TERRITORY_CODE_64;
        case 109: return TIS_TERRITORY_CODE_608;
        case 110: return TIS_TERRITORY_CODE_729;
        case 111: return TIS_TERRITORY_CODE_68;
        case 112: return TIS_TERRITORY_CODE_2133;
        case 113: return TIS_TERRITORY_CODE_2132;
        case 114: return TIS_TERRITORY_CODE_170;
        case 115: return TIS_TERRITORY_CODE_2131;
        case 116: return TIS_TERRITORY_CODE_2130;
        case 117: return TIS_TERRITORY_CODE_174;
        case 118: return TIS_TERRITORY_CODE_296;
        case 119: return TIS_TERRITORY_CODE_2129;
        case 120: return TIS_TERRITORY_CODE_178;
        case 121: return TIS_TERRITORY_CODE_2128;
        case 122: return TIS_TERRITORY_CODE_2127;
        case 123: return TIS_TERRITORY_CODE_2126;
        case 124: return TIS_TERRITORY_CODE_2125;
        case 125: return TIS_TERRITORY_CODE_732;
        case 126: return TIS_TERRITORY_CODE_2124;
        case 127: return TIS_TERRITORY_CODE_854;
        case 128: return TIS_TERRITORY_CODE_2123;
        case 129: return TIS_TERRITORY_CODE_70;
        case 130: return TIS_TERRITORY_CODE_736;
        case 131: return TIS_TERRITORY_CODE_72;
        case 132: return TIS_TERRITORY_CODE_616;
        case 133: return TIS_TERRITORY_CODE_858;
        case 134: return TIS_TERRITORY_CODE_76;
        case 135: return TIS_TERRITORY_CODE_180;
        case 136: return TIS_TERRITORY_CODE_188;
        case 137: return TIS_TERRITORY_CODE_860;
        case 138: return TIS_TERRITORY_CODE_740;
        case 139: return TIS_TERRITORY_CODE_620;
        case 140: return TIS_TERRITORY_CODE_862;
        case 141: return TIS_TERRITORY_CODE_2136;
        case 142: return TIS_TERRITORY_CODE_2134;
        case 143: return TIS_TERRITORY_CODE_624;
        case 144: return TIS_TERRITORY_CODE_504;
        case 145: return TIS_TERRITORY_CODE_626;
        case 146: return TIS_TERRITORY_CODE_748;
        case 147: return TIS_TERRITORY_CODE_84;
        case 148: return TIS_TERRITORY_CODE_508;
        case 149: return TIS_TERRITORY_CODE_191;
        case 150: return TIS_TERRITORY_CODE_192;
        case 151: return TIS_TERRITORY_CODE_196;
        case 152: return TIS_TERRITORY_CODE_630;
        case 153: return TIS_TERRITORY_CODE_752;
        case 154: return TIS_TERRITORY_CODE_512;
        case 155: return TIS_TERRITORY_CODE_90;
        case 156: return TIS_TERRITORY_CODE_634;
        case 157: return TIS_TERRITORY_CODE_756;
        case 158: return TIS_TERRITORY_CODE_516;
        case 159: return TIS_TERRITORY_CODE_96;
        case 160: return TIS_TERRITORY_CODE_760;
        case 161: return TIS_TERRITORY_CODE_882;
        case 162: return TIS_TERRITORY_CODE_520;
        case 163: return TIS_TERRITORY_CODE_762;
        case 164: return TIS_TERRITORY_CODE_400;
        case 165: return TIS_TERRITORY_CODE_642;
        case 166: return TIS_TERRITORY_CODE_643;
        case 167: return TIS_TERRITORY_CODE_764;
        case 168: return TIS_TERRITORY_CODE_886;
        case 169: return TIS_TERRITORY_CODE_524;
        case 170: return TIS_TERRITORY_CODE_887;
        case 171: return TIS_TERRITORY_CODE_404;
        case 172: return TIS_TERRITORY_CODE_646;
        case 173: return TIS_TERRITORY_CODE_768;
        case 174: return TIS_TERRITORY_CODE_528;
        case 175: return TIS_TERRITORY_CODE_408;
        case 176: return TIS_TERRITORY_CODE_890;
        case 177: return TIS_TERRITORY_CODE_891;
        case 178: return TIS_TERRITORY_CODE_410;
        case 179: return TIS_TERRITORY_CODE_894;
        case 180: return TIS_TERRITORY_CODE_776;
        case 181: return TIS_TERRITORY_CODE_414;
        case 182: return TIS_TERRITORY_CODE_417;
        case 183: return TIS_TERRITORY_CODE_659;
        case 184: return TIS_TERRITORY_CODE_418;
        case 185: return TIS_TERRITORY_CODE_780;
        case 186: return TIS_TERRITORY_CODE_540;
        case 187: return TIS_TERRITORY_CODE_662;
        case 188: return TIS_TERRITORY_CODE_300;
        case 189: return TIS_TERRITORY_CODE_784;
        case 190: return TIS_TERRITORY_CODE_422;
        case 191: return TIS_TERRITORY_CODE_788;
        case 192: return TIS_TERRITORY_CODE_426;
        case 193: return TIS_TERRITORY_CODE_548;
        case 194: return TIS_TERRITORY_CODE_428;
        case 195: return TIS_TERRITORY_CODE_308;
        case 196: return TIS_TERRITORY_CODE_670;
        case 197: return TIS_TERRITORY_CODE_792;
        case 198: return TIS_TERRITORY_CODE_430;
        case 199: return TIS_TERRITORY_CODE_674;
        case 200: return TIS_TERRITORY_CODE_795;
        case 201: return TIS_TERRITORY_CODE_554;
        case 202: return TIS_TERRITORY_CODE_434;
        case 203: return TIS_TERRITORY_CODE_798;
        case 204: return TIS_TERRITORY_CODE_678;
        case 205: return TIS_TERRITORY_CODE_558;
        case 206: return TIS_TERRITORY_CODE_438;
        case 207: return TIS_TERRITORY_CODE_440;
        case 208: return TIS_TERRITORY_CODE_682;
        case 209: return TIS_TERRITORY_CODE_320;
        case 210: return TIS_TERRITORY_CODE_562;
        case 211: return TIS_TERRITORY_CODE_200;
        case 212: return TIS_TERRITORY_CODE_442;
        case 213: return TIS_TERRITORY_CODE_686;
        case 214: return TIS_TERRITORY_CODE_203;
        case 215: return TIS_TERRITORY_CODE_324;
        case 216: return TIS_TERRITORY_CODE_566;
        case 217: return TIS_TERRITORY_CODE_204;
        case 218: return TIS_TERRITORY_CODE_688;
        case 219: return TIS_TERRITORY_CODE_328;
        case 220: return TIS_TERRITORY_CODE_208;
        case 221: return TIS_TERRITORY_CODE_690;
        case 222: return TIS_TERRITORY_CODE_450;
        case 223: return TIS_TERRITORY_CODE_694;
        case 224: return TIS_TERRITORY_CODE_332;
        case 225: return TIS_TERRITORY_CODE_212;
        case 226: return TIS_TERRITORY_CODE_454;
        case 227: return TIS_TERRITORY_CODE_214;
        case 228: return TIS_TERRITORY_CODE_336;
        case 229: return TIS_TERRITORY_CODE_578;
        case 230: return TIS_TERRITORY_CODE_458;
        case 231: return TIS_TERRITORY_CODE_218;
        case 232: return TIS_TERRITORY_CODE_340;
        case 233: return TIS_TERRITORY_CODE_462;
        case 234: return TIS_TERRITORY_CODE_583;
        case 235: return TIS_TERRITORY_CODE_100;
        case 236: return TIS_TERRITORY_CODE_584;
        case 237: return TIS_TERRITORY_CODE_222;
        case 238: return TIS_TERRITORY_CODE_585;
        case 239: return TIS_TERRITORY_CODE_344;
        case 240: return TIS_TERRITORY_CODE_586;
        case 241: return TIS_TERRITORY_CODE_466;
        case 242: return TIS_TERRITORY_CODE_104;
        case 243: return TIS_TERRITORY_CODE_226;
        case 244: return TIS_TERRITORY_CODE_348;
        case 245: return TIS_TERRITORY_CODE_108;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TisTerritoryCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TisTerritoryCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TisTerritoryCode>() {
            public TisTerritoryCode findValueByNumber(int number) {
              return TisTerritoryCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(179);
    }

    private static final TisTerritoryCode[] VALUES = values();

    public static TisTerritoryCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TisTerritoryCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TisTerritoryCode)
  }

  /**
   * Protobuf enum {@code avs.TitleType}
   */
  public enum TitleType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TITLE_TYPE_SORTING_TITLE = 0;</code>
     */
    TITLE_TYPE_SORTING_TITLE(0),
    /**
     * <code>TITLE_TYPE_DISPLAY_TITLE = 1;</code>
     */
    TITLE_TYPE_DISPLAY_TITLE(1),
    /**
     * <code>TITLE_TYPE_TITLE_WITHOUT_PUNCTUATION = 2;</code>
     */
    TITLE_TYPE_TITLE_WITHOUT_PUNCTUATION(2),
    /**
     * <code>TITLE_TYPE_INCORRECT_TITLE = 3;</code>
     */
    TITLE_TYPE_INCORRECT_TITLE(3),
    /**
     * <code>TITLE_TYPE_ALTERNATIVE_TITLE = 4;</code>
     */
    TITLE_TYPE_ALTERNATIVE_TITLE(4),
    /**
     * <code>TITLE_TYPE_FIRST_LINE_OF_TEXT = 5;</code>
     */
    TITLE_TYPE_FIRST_LINE_OF_TEXT(5),
    /**
     * <code>TITLE_TYPE_GROUPING_TITLE = 6;</code>
     */
    TITLE_TYPE_GROUPING_TITLE(6),
    /**
     * <code>TITLE_TYPE_ABBREVIATED_DISPLAY_TITLE = 7;</code>
     */
    TITLE_TYPE_ABBREVIATED_DISPLAY_TITLE(7),
    /**
     * <code>TITLE_TYPE_TRANSLATED_TITLE = 8;</code>
     */
    TITLE_TYPE_TRANSLATED_TITLE(8),
    /**
     * <code>TITLE_TYPE_UNKNOWN = 9;</code>
     */
    TITLE_TYPE_UNKNOWN(9),
    /**
     * <code>TITLE_TYPE_SEARCH_TITLE = 10;</code>
     */
    TITLE_TYPE_SEARCH_TITLE(10),
    /**
     * <code>TITLE_TYPE_ORIGINAL_TITLE = 11;</code>
     */
    TITLE_TYPE_ORIGINAL_TITLE(11),
    /**
     * <code>TITLE_TYPE_MISSPELLED_TITLE = 12;</code>
     */
    TITLE_TYPE_MISSPELLED_TITLE(12),
    /**
     * <code>TITLE_TYPE_FORMAL_TITLE = 13;</code>
     */
    TITLE_TYPE_FORMAL_TITLE(13),
    /**
     * <code>TITLE_TYPE_TITLE_AS_PART = 14;</code>
     */
    TITLE_TYPE_TITLE_AS_PART(14),
    /**
     * <code>TITLE_TYPE_USER_DEFINED = 15;</code>
     */
    TITLE_TYPE_USER_DEFINED(15),
    ;

    /**
     * <code>TITLE_TYPE_SORTING_TITLE = 0;</code>
     */
    public static final int TITLE_TYPE_SORTING_TITLE_VALUE = 0;
    /**
     * <code>TITLE_TYPE_DISPLAY_TITLE = 1;</code>
     */
    public static final int TITLE_TYPE_DISPLAY_TITLE_VALUE = 1;
    /**
     * <code>TITLE_TYPE_TITLE_WITHOUT_PUNCTUATION = 2;</code>
     */
    public static final int TITLE_TYPE_TITLE_WITHOUT_PUNCTUATION_VALUE = 2;
    /**
     * <code>TITLE_TYPE_INCORRECT_TITLE = 3;</code>
     */
    public static final int TITLE_TYPE_INCORRECT_TITLE_VALUE = 3;
    /**
     * <code>TITLE_TYPE_ALTERNATIVE_TITLE = 4;</code>
     */
    public static final int TITLE_TYPE_ALTERNATIVE_TITLE_VALUE = 4;
    /**
     * <code>TITLE_TYPE_FIRST_LINE_OF_TEXT = 5;</code>
     */
    public static final int TITLE_TYPE_FIRST_LINE_OF_TEXT_VALUE = 5;
    /**
     * <code>TITLE_TYPE_GROUPING_TITLE = 6;</code>
     */
    public static final int TITLE_TYPE_GROUPING_TITLE_VALUE = 6;
    /**
     * <code>TITLE_TYPE_ABBREVIATED_DISPLAY_TITLE = 7;</code>
     */
    public static final int TITLE_TYPE_ABBREVIATED_DISPLAY_TITLE_VALUE = 7;
    /**
     * <code>TITLE_TYPE_TRANSLATED_TITLE = 8;</code>
     */
    public static final int TITLE_TYPE_TRANSLATED_TITLE_VALUE = 8;
    /**
     * <code>TITLE_TYPE_UNKNOWN = 9;</code>
     */
    public static final int TITLE_TYPE_UNKNOWN_VALUE = 9;
    /**
     * <code>TITLE_TYPE_SEARCH_TITLE = 10;</code>
     */
    public static final int TITLE_TYPE_SEARCH_TITLE_VALUE = 10;
    /**
     * <code>TITLE_TYPE_ORIGINAL_TITLE = 11;</code>
     */
    public static final int TITLE_TYPE_ORIGINAL_TITLE_VALUE = 11;
    /**
     * <code>TITLE_TYPE_MISSPELLED_TITLE = 12;</code>
     */
    public static final int TITLE_TYPE_MISSPELLED_TITLE_VALUE = 12;
    /**
     * <code>TITLE_TYPE_FORMAL_TITLE = 13;</code>
     */
    public static final int TITLE_TYPE_FORMAL_TITLE_VALUE = 13;
    /**
     * <code>TITLE_TYPE_TITLE_AS_PART = 14;</code>
     */
    public static final int TITLE_TYPE_TITLE_AS_PART_VALUE = 14;
    /**
     * <code>TITLE_TYPE_USER_DEFINED = 15;</code>
     */
    public static final int TITLE_TYPE_USER_DEFINED_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TitleType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TitleType forNumber(int value) {
      switch (value) {
        case 0: return TITLE_TYPE_SORTING_TITLE;
        case 1: return TITLE_TYPE_DISPLAY_TITLE;
        case 2: return TITLE_TYPE_TITLE_WITHOUT_PUNCTUATION;
        case 3: return TITLE_TYPE_INCORRECT_TITLE;
        case 4: return TITLE_TYPE_ALTERNATIVE_TITLE;
        case 5: return TITLE_TYPE_FIRST_LINE_OF_TEXT;
        case 6: return TITLE_TYPE_GROUPING_TITLE;
        case 7: return TITLE_TYPE_ABBREVIATED_DISPLAY_TITLE;
        case 8: return TITLE_TYPE_TRANSLATED_TITLE;
        case 9: return TITLE_TYPE_UNKNOWN;
        case 10: return TITLE_TYPE_SEARCH_TITLE;
        case 11: return TITLE_TYPE_ORIGINAL_TITLE;
        case 12: return TITLE_TYPE_MISSPELLED_TITLE;
        case 13: return TITLE_TYPE_FORMAL_TITLE;
        case 14: return TITLE_TYPE_TITLE_AS_PART;
        case 15: return TITLE_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TitleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TitleType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TitleType>() {
            public TitleType findValueByNumber(int number) {
              return TitleType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(180);
    }

    private static final TitleType[] VALUES = values();

    public static TitleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TitleType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TitleType)
  }

  /**
   * Protobuf enum {@code avs.TransferCategory}
   */
  public enum TransferCategory
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRANSFER_CATEGORY_CARTRIDGE = 0;</code>
     */
    TRANSFER_CATEGORY_CARTRIDGE(0),
    /**
     * <code>TRANSFER_CATEGORY_NUMBER_OF_SIDES = 1;</code>
     */
    TRANSFER_CATEGORY_NUMBER_OF_SIDES(1),
    /**
     * <code>TRANSFER_CATEGORY_CONVERSION_REFERENCE_LEVEL = 2;</code>
     */
    TRANSFER_CATEGORY_CONVERSION_REFERENCE_LEVEL(2),
    /**
     * <code>TRANSFER_CATEGORY_ALIGNMENT_TONES = 3;</code>
     */
    TRANSFER_CATEGORY_ALIGNMENT_TONES(3),
    /**
     * <code>TRANSFER_CATEGORY_BIT_DEPTH = 4;</code>
     */
    TRANSFER_CATEGORY_BIT_DEPTH(4),
    /**
     * <code>TRANSFER_CATEGORY_SIDE1_CONDITION = 5;</code>
     */
    TRANSFER_CATEGORY_SIDE1_CONDITION(5),
    /**
     * <code>TRANSFER_CATEGORY_STYLUS = 6;</code>
     */
    TRANSFER_CATEGORY_STYLUS(6),
    /**
     * <code>TRANSFER_CATEGORY_TAPE_COOL_HOURS = 7;</code>
     */
    TRANSFER_CATEGORY_TAPE_COOL_HOURS(7),
    /**
     * <code>TRANSFER_CATEGORY_NUMBER_OF_TRACKS = 8;</code>
     */
    TRANSFER_CATEGORY_NUMBER_OF_TRACKS(8),
    /**
     * <code>TRANSFER_CATEGORY_TAPE_BAKED_DATE = 9;</code>
     */
    TRANSFER_CATEGORY_TAPE_BAKED_DATE(9),
    /**
     * <code>TRANSFER_CATEGORY_STYLUS_SIZE = 10;</code>
     */
    TRANSFER_CATEGORY_STYLUS_SIZE(10),
    /**
     * <code>TRANSFER_CATEGORY_TRANSFER_SOFTWARE = 11;</code>
     */
    TRANSFER_CATEGORY_TRANSFER_SOFTWARE(11),
    /**
     * <code>TRANSFER_CATEGORY_REFERENCE_CLOCK = 12;</code>
     */
    TRANSFER_CATEGORY_REFERENCE_CLOCK(12),
    /**
     * <code>TRANSFER_CATEGORY_SPEED = 13;</code>
     */
    TRANSFER_CATEGORY_SPEED(13),
    /**
     * <code>TRANSFER_CATEGORY_EMPHASIS = 14;</code>
     */
    TRANSFER_CATEGORY_EMPHASIS(14),
    /**
     * <code>TRANSFER_CATEGORY_TRACK_CONFIGURATION = 15;</code>
     */
    TRANSFER_CATEGORY_TRACK_CONFIGURATION(15),
    /**
     * <code>TRANSFER_CATEGORY_ANALOG_TO_DIGITAL_CONVERTER = 16;</code>
     */
    TRANSFER_CATEGORY_ANALOG_TO_DIGITAL_CONVERTER(16),
    /**
     * <code>TRANSFER_CATEGORY_MATERIAL_CONDITION = 17;</code>
     */
    TRANSFER_CATEGORY_MATERIAL_CONDITION(17),
    /**
     * <code>TRANSFER_CATEGORY_SAMPLING_RATE = 18;</code>
     */
    TRANSFER_CATEGORY_SAMPLING_RATE(18),
    /**
     * <code>TRANSFER_CATEGORY_CLOCK_SOURCE = 19;</code>
     */
    TRANSFER_CATEGORY_CLOCK_SOURCE(19),
    /**
     * <code>TRANSFER_CATEGORY_NOISE_REDUCTION = 20;</code>
     */
    TRANSFER_CATEGORY_NOISE_REDUCTION(20),
    /**
     * <code>TRANSFER_CATEGORY_TAPE_BAKED_EQUIPMENT = 21;</code>
     */
    TRANSFER_CATEGORY_TAPE_BAKED_EQUIPMENT(21),
    /**
     * <code>TRANSFER_CATEGORY_PHONO_PREAMP = 22;</code>
     */
    TRANSFER_CATEGORY_PHONO_PREAMP(22),
    /**
     * <code>TRANSFER_CATEGORY_SMPTE_FRAME_RATE = 23;</code>
     */
    TRANSFER_CATEGORY_SMPTE_FRAME_RATE(23),
    /**
     * <code>TRANSFER_CATEGORY_STORAGE = 24;</code>
     */
    TRANSFER_CATEGORY_STORAGE(24),
    /**
     * <code>TRANSFER_CATEGORY_TAPE_BAKED_TEMPERATURE = 25;</code>
     */
    TRANSFER_CATEGORY_TAPE_BAKED_TEMPERATURE(25),
    /**
     * <code>TRANSFER_CATEGORY_SIDE2_CONDITION = 26;</code>
     */
    TRANSFER_CATEGORY_SIDE2_CONDITION(26),
    /**
     * <code>TRANSFER_CATEGORY_TAPE_BAKED_HOURS = 27;</code>
     */
    TRANSFER_CATEGORY_TAPE_BAKED_HOURS(27),
    /**
     * <code>TRANSFER_CATEGORY_TONEARM = 28;</code>
     */
    TRANSFER_CATEGORY_TONEARM(28),
    /**
     * <code>TRANSFER_CATEGORY_NUMBER_OF_CHANNELS = 29;</code>
     */
    TRANSFER_CATEGORY_NUMBER_OF_CHANNELS(29),
    /**
     * <code>TRANSFER_CATEGORY_MIC_PREAMP = 30;</code>
     */
    TRANSFER_CATEGORY_MIC_PREAMP(30),
    /**
     * <code>TRANSFER_CATEGORY_REFERENCE_TONES = 31;</code>
     */
    TRANSFER_CATEGORY_REFERENCE_TONES(31),
    /**
     * <code>TRANSFER_CATEGORY_SOURCE_MACHINE = 32;</code>
     */
    TRANSFER_CATEGORY_SOURCE_MACHINE(32),
    ;

    /**
     * <code>TRANSFER_CATEGORY_CARTRIDGE = 0;</code>
     */
    public static final int TRANSFER_CATEGORY_CARTRIDGE_VALUE = 0;
    /**
     * <code>TRANSFER_CATEGORY_NUMBER_OF_SIDES = 1;</code>
     */
    public static final int TRANSFER_CATEGORY_NUMBER_OF_SIDES_VALUE = 1;
    /**
     * <code>TRANSFER_CATEGORY_CONVERSION_REFERENCE_LEVEL = 2;</code>
     */
    public static final int TRANSFER_CATEGORY_CONVERSION_REFERENCE_LEVEL_VALUE = 2;
    /**
     * <code>TRANSFER_CATEGORY_ALIGNMENT_TONES = 3;</code>
     */
    public static final int TRANSFER_CATEGORY_ALIGNMENT_TONES_VALUE = 3;
    /**
     * <code>TRANSFER_CATEGORY_BIT_DEPTH = 4;</code>
     */
    public static final int TRANSFER_CATEGORY_BIT_DEPTH_VALUE = 4;
    /**
     * <code>TRANSFER_CATEGORY_SIDE1_CONDITION = 5;</code>
     */
    public static final int TRANSFER_CATEGORY_SIDE1_CONDITION_VALUE = 5;
    /**
     * <code>TRANSFER_CATEGORY_STYLUS = 6;</code>
     */
    public static final int TRANSFER_CATEGORY_STYLUS_VALUE = 6;
    /**
     * <code>TRANSFER_CATEGORY_TAPE_COOL_HOURS = 7;</code>
     */
    public static final int TRANSFER_CATEGORY_TAPE_COOL_HOURS_VALUE = 7;
    /**
     * <code>TRANSFER_CATEGORY_NUMBER_OF_TRACKS = 8;</code>
     */
    public static final int TRANSFER_CATEGORY_NUMBER_OF_TRACKS_VALUE = 8;
    /**
     * <code>TRANSFER_CATEGORY_TAPE_BAKED_DATE = 9;</code>
     */
    public static final int TRANSFER_CATEGORY_TAPE_BAKED_DATE_VALUE = 9;
    /**
     * <code>TRANSFER_CATEGORY_STYLUS_SIZE = 10;</code>
     */
    public static final int TRANSFER_CATEGORY_STYLUS_SIZE_VALUE = 10;
    /**
     * <code>TRANSFER_CATEGORY_TRANSFER_SOFTWARE = 11;</code>
     */
    public static final int TRANSFER_CATEGORY_TRANSFER_SOFTWARE_VALUE = 11;
    /**
     * <code>TRANSFER_CATEGORY_REFERENCE_CLOCK = 12;</code>
     */
    public static final int TRANSFER_CATEGORY_REFERENCE_CLOCK_VALUE = 12;
    /**
     * <code>TRANSFER_CATEGORY_SPEED = 13;</code>
     */
    public static final int TRANSFER_CATEGORY_SPEED_VALUE = 13;
    /**
     * <code>TRANSFER_CATEGORY_EMPHASIS = 14;</code>
     */
    public static final int TRANSFER_CATEGORY_EMPHASIS_VALUE = 14;
    /**
     * <code>TRANSFER_CATEGORY_TRACK_CONFIGURATION = 15;</code>
     */
    public static final int TRANSFER_CATEGORY_TRACK_CONFIGURATION_VALUE = 15;
    /**
     * <code>TRANSFER_CATEGORY_ANALOG_TO_DIGITAL_CONVERTER = 16;</code>
     */
    public static final int TRANSFER_CATEGORY_ANALOG_TO_DIGITAL_CONVERTER_VALUE = 16;
    /**
     * <code>TRANSFER_CATEGORY_MATERIAL_CONDITION = 17;</code>
     */
    public static final int TRANSFER_CATEGORY_MATERIAL_CONDITION_VALUE = 17;
    /**
     * <code>TRANSFER_CATEGORY_SAMPLING_RATE = 18;</code>
     */
    public static final int TRANSFER_CATEGORY_SAMPLING_RATE_VALUE = 18;
    /**
     * <code>TRANSFER_CATEGORY_CLOCK_SOURCE = 19;</code>
     */
    public static final int TRANSFER_CATEGORY_CLOCK_SOURCE_VALUE = 19;
    /**
     * <code>TRANSFER_CATEGORY_NOISE_REDUCTION = 20;</code>
     */
    public static final int TRANSFER_CATEGORY_NOISE_REDUCTION_VALUE = 20;
    /**
     * <code>TRANSFER_CATEGORY_TAPE_BAKED_EQUIPMENT = 21;</code>
     */
    public static final int TRANSFER_CATEGORY_TAPE_BAKED_EQUIPMENT_VALUE = 21;
    /**
     * <code>TRANSFER_CATEGORY_PHONO_PREAMP = 22;</code>
     */
    public static final int TRANSFER_CATEGORY_PHONO_PREAMP_VALUE = 22;
    /**
     * <code>TRANSFER_CATEGORY_SMPTE_FRAME_RATE = 23;</code>
     */
    public static final int TRANSFER_CATEGORY_SMPTE_FRAME_RATE_VALUE = 23;
    /**
     * <code>TRANSFER_CATEGORY_STORAGE = 24;</code>
     */
    public static final int TRANSFER_CATEGORY_STORAGE_VALUE = 24;
    /**
     * <code>TRANSFER_CATEGORY_TAPE_BAKED_TEMPERATURE = 25;</code>
     */
    public static final int TRANSFER_CATEGORY_TAPE_BAKED_TEMPERATURE_VALUE = 25;
    /**
     * <code>TRANSFER_CATEGORY_SIDE2_CONDITION = 26;</code>
     */
    public static final int TRANSFER_CATEGORY_SIDE2_CONDITION_VALUE = 26;
    /**
     * <code>TRANSFER_CATEGORY_TAPE_BAKED_HOURS = 27;</code>
     */
    public static final int TRANSFER_CATEGORY_TAPE_BAKED_HOURS_VALUE = 27;
    /**
     * <code>TRANSFER_CATEGORY_TONEARM = 28;</code>
     */
    public static final int TRANSFER_CATEGORY_TONEARM_VALUE = 28;
    /**
     * <code>TRANSFER_CATEGORY_NUMBER_OF_CHANNELS = 29;</code>
     */
    public static final int TRANSFER_CATEGORY_NUMBER_OF_CHANNELS_VALUE = 29;
    /**
     * <code>TRANSFER_CATEGORY_MIC_PREAMP = 30;</code>
     */
    public static final int TRANSFER_CATEGORY_MIC_PREAMP_VALUE = 30;
    /**
     * <code>TRANSFER_CATEGORY_REFERENCE_TONES = 31;</code>
     */
    public static final int TRANSFER_CATEGORY_REFERENCE_TONES_VALUE = 31;
    /**
     * <code>TRANSFER_CATEGORY_SOURCE_MACHINE = 32;</code>
     */
    public static final int TRANSFER_CATEGORY_SOURCE_MACHINE_VALUE = 32;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TransferCategory valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TransferCategory forNumber(int value) {
      switch (value) {
        case 0: return TRANSFER_CATEGORY_CARTRIDGE;
        case 1: return TRANSFER_CATEGORY_NUMBER_OF_SIDES;
        case 2: return TRANSFER_CATEGORY_CONVERSION_REFERENCE_LEVEL;
        case 3: return TRANSFER_CATEGORY_ALIGNMENT_TONES;
        case 4: return TRANSFER_CATEGORY_BIT_DEPTH;
        case 5: return TRANSFER_CATEGORY_SIDE1_CONDITION;
        case 6: return TRANSFER_CATEGORY_STYLUS;
        case 7: return TRANSFER_CATEGORY_TAPE_COOL_HOURS;
        case 8: return TRANSFER_CATEGORY_NUMBER_OF_TRACKS;
        case 9: return TRANSFER_CATEGORY_TAPE_BAKED_DATE;
        case 10: return TRANSFER_CATEGORY_STYLUS_SIZE;
        case 11: return TRANSFER_CATEGORY_TRANSFER_SOFTWARE;
        case 12: return TRANSFER_CATEGORY_REFERENCE_CLOCK;
        case 13: return TRANSFER_CATEGORY_SPEED;
        case 14: return TRANSFER_CATEGORY_EMPHASIS;
        case 15: return TRANSFER_CATEGORY_TRACK_CONFIGURATION;
        case 16: return TRANSFER_CATEGORY_ANALOG_TO_DIGITAL_CONVERTER;
        case 17: return TRANSFER_CATEGORY_MATERIAL_CONDITION;
        case 18: return TRANSFER_CATEGORY_SAMPLING_RATE;
        case 19: return TRANSFER_CATEGORY_CLOCK_SOURCE;
        case 20: return TRANSFER_CATEGORY_NOISE_REDUCTION;
        case 21: return TRANSFER_CATEGORY_TAPE_BAKED_EQUIPMENT;
        case 22: return TRANSFER_CATEGORY_PHONO_PREAMP;
        case 23: return TRANSFER_CATEGORY_SMPTE_FRAME_RATE;
        case 24: return TRANSFER_CATEGORY_STORAGE;
        case 25: return TRANSFER_CATEGORY_TAPE_BAKED_TEMPERATURE;
        case 26: return TRANSFER_CATEGORY_SIDE2_CONDITION;
        case 27: return TRANSFER_CATEGORY_TAPE_BAKED_HOURS;
        case 28: return TRANSFER_CATEGORY_TONEARM;
        case 29: return TRANSFER_CATEGORY_NUMBER_OF_CHANNELS;
        case 30: return TRANSFER_CATEGORY_MIC_PREAMP;
        case 31: return TRANSFER_CATEGORY_REFERENCE_TONES;
        case 32: return TRANSFER_CATEGORY_SOURCE_MACHINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TransferCategory>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TransferCategory> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TransferCategory>() {
            public TransferCategory findValueByNumber(int number) {
              return TransferCategory.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(181);
    }

    private static final TransferCategory[] VALUES = values();

    public static TransferCategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TransferCategory(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TransferCategory)
  }

  /**
   * Protobuf enum {@code avs.TransferType}
   */
  public enum TransferType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRANSFER_TYPE_DIGITAL_COPY = 0;</code>
     */
    TRANSFER_TYPE_DIGITAL_COPY(0),
    /**
     * <code>TRANSFER_TYPE_ANALOG_TO_DIGITAL = 1;</code>
     */
    TRANSFER_TYPE_ANALOG_TO_DIGITAL(1),
    /**
     * <code>TRANSFER_TYPE_DIGITAL_TO_ANALOG = 2;</code>
     */
    TRANSFER_TYPE_DIGITAL_TO_ANALOG(2),
    /**
     * <code>TRANSFER_TYPE_DIGITAL_TO_DIGITAL = 3;</code>
     */
    TRANSFER_TYPE_DIGITAL_TO_DIGITAL(3),
    /**
     * <code>TRANSFER_TYPE_ANALOG_TO_ANALOG = 4;</code>
     */
    TRANSFER_TYPE_ANALOG_TO_ANALOG(4),
    ;

    /**
     * <code>TRANSFER_TYPE_DIGITAL_COPY = 0;</code>
     */
    public static final int TRANSFER_TYPE_DIGITAL_COPY_VALUE = 0;
    /**
     * <code>TRANSFER_TYPE_ANALOG_TO_DIGITAL = 1;</code>
     */
    public static final int TRANSFER_TYPE_ANALOG_TO_DIGITAL_VALUE = 1;
    /**
     * <code>TRANSFER_TYPE_DIGITAL_TO_ANALOG = 2;</code>
     */
    public static final int TRANSFER_TYPE_DIGITAL_TO_ANALOG_VALUE = 2;
    /**
     * <code>TRANSFER_TYPE_DIGITAL_TO_DIGITAL = 3;</code>
     */
    public static final int TRANSFER_TYPE_DIGITAL_TO_DIGITAL_VALUE = 3;
    /**
     * <code>TRANSFER_TYPE_ANALOG_TO_ANALOG = 4;</code>
     */
    public static final int TRANSFER_TYPE_ANALOG_TO_ANALOG_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TransferType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TransferType forNumber(int value) {
      switch (value) {
        case 0: return TRANSFER_TYPE_DIGITAL_COPY;
        case 1: return TRANSFER_TYPE_ANALOG_TO_DIGITAL;
        case 2: return TRANSFER_TYPE_DIGITAL_TO_ANALOG;
        case 3: return TRANSFER_TYPE_DIGITAL_TO_DIGITAL;
        case 4: return TRANSFER_TYPE_ANALOG_TO_ANALOG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TransferType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TransferType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TransferType>() {
            public TransferType findValueByNumber(int number) {
              return TransferType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(182);
    }

    private static final TransferType[] VALUES = values();

    public static TransferType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TransferType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.TransferType)
  }

  /**
   * Protobuf enum {@code avs.UnitOfBitRate}
   */
  public enum UnitOfBitRate
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_OF_BIT_RATE_BPS = 0;</code>
     */
    UNIT_OF_BIT_RATE_BPS(0),
    /**
     * <code>UNIT_OF_BIT_RATE_KBPS = 1;</code>
     */
    UNIT_OF_BIT_RATE_KBPS(1),
    /**
     * <code>UNIT_OF_BIT_RATE_MBPS = 2;</code>
     */
    UNIT_OF_BIT_RATE_MBPS(2),
    /**
     * <code>UNIT_OF_BIT_RATE_GBPS = 3;</code>
     */
    UNIT_OF_BIT_RATE_GBPS(3),
    ;

    /**
     * <code>UNIT_OF_BIT_RATE_BPS = 0;</code>
     */
    public static final int UNIT_OF_BIT_RATE_BPS_VALUE = 0;
    /**
     * <code>UNIT_OF_BIT_RATE_KBPS = 1;</code>
     */
    public static final int UNIT_OF_BIT_RATE_KBPS_VALUE = 1;
    /**
     * <code>UNIT_OF_BIT_RATE_MBPS = 2;</code>
     */
    public static final int UNIT_OF_BIT_RATE_MBPS_VALUE = 2;
    /**
     * <code>UNIT_OF_BIT_RATE_GBPS = 3;</code>
     */
    public static final int UNIT_OF_BIT_RATE_GBPS_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitOfBitRate valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UnitOfBitRate forNumber(int value) {
      switch (value) {
        case 0: return UNIT_OF_BIT_RATE_BPS;
        case 1: return UNIT_OF_BIT_RATE_KBPS;
        case 2: return UNIT_OF_BIT_RATE_MBPS;
        case 3: return UNIT_OF_BIT_RATE_GBPS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfBitRate>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitOfBitRate> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfBitRate>() {
            public UnitOfBitRate findValueByNumber(int number) {
              return UnitOfBitRate.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(183);
    }

    private static final UnitOfBitRate[] VALUES = values();

    public static UnitOfBitRate valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UnitOfBitRate(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UnitOfBitRate)
  }

  /**
   * Protobuf enum {@code avs.UnitOfConditionValue}
   */
  public enum UnitOfConditionValue
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_OF_CONDITION_VALUE_MILLISECOND = 0;</code>
     */
    UNIT_OF_CONDITION_VALUE_MILLISECOND(0),
    /**
     * <code>UNIT_OF_CONDITION_VALUE_MINUTE = 1;</code>
     */
    UNIT_OF_CONDITION_VALUE_MINUTE(1),
    /**
     * <code>UNIT_OF_CONDITION_VALUE_SECOND = 2;</code>
     */
    UNIT_OF_CONDITION_VALUE_SECOND(2),
    /**
     * <code>UNIT_OF_CONDITION_VALUE_PERCENT = 3;</code>
     */
    UNIT_OF_CONDITION_VALUE_PERCENT(3),
    /**
     * <code>UNIT_OF_CONDITION_VALUE_PIXEL = 4;</code>
     */
    UNIT_OF_CONDITION_VALUE_PIXEL(4),
    ;

    /**
     * <code>UNIT_OF_CONDITION_VALUE_MILLISECOND = 0;</code>
     */
    public static final int UNIT_OF_CONDITION_VALUE_MILLISECOND_VALUE = 0;
    /**
     * <code>UNIT_OF_CONDITION_VALUE_MINUTE = 1;</code>
     */
    public static final int UNIT_OF_CONDITION_VALUE_MINUTE_VALUE = 1;
    /**
     * <code>UNIT_OF_CONDITION_VALUE_SECOND = 2;</code>
     */
    public static final int UNIT_OF_CONDITION_VALUE_SECOND_VALUE = 2;
    /**
     * <code>UNIT_OF_CONDITION_VALUE_PERCENT = 3;</code>
     */
    public static final int UNIT_OF_CONDITION_VALUE_PERCENT_VALUE = 3;
    /**
     * <code>UNIT_OF_CONDITION_VALUE_PIXEL = 4;</code>
     */
    public static final int UNIT_OF_CONDITION_VALUE_PIXEL_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitOfConditionValue valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UnitOfConditionValue forNumber(int value) {
      switch (value) {
        case 0: return UNIT_OF_CONDITION_VALUE_MILLISECOND;
        case 1: return UNIT_OF_CONDITION_VALUE_MINUTE;
        case 2: return UNIT_OF_CONDITION_VALUE_SECOND;
        case 3: return UNIT_OF_CONDITION_VALUE_PERCENT;
        case 4: return UNIT_OF_CONDITION_VALUE_PIXEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfConditionValue>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitOfConditionValue> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfConditionValue>() {
            public UnitOfConditionValue findValueByNumber(int number) {
              return UnitOfConditionValue.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(184);
    }

    private static final UnitOfConditionValue[] VALUES = values();

    public static UnitOfConditionValue valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UnitOfConditionValue(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UnitOfConditionValue)
  }

  /**
   * Protobuf enum {@code avs.UnitOfCuePoints}
   */
  public enum UnitOfCuePoints
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_OF_CUE_POINTS_MILLISECOND = 0;</code>
     */
    UNIT_OF_CUE_POINTS_MILLISECOND(0),
    /**
     * <code>UNIT_OF_CUE_POINTS_SECOND = 1;</code>
     */
    UNIT_OF_CUE_POINTS_SECOND(1),
    ;

    /**
     * <code>UNIT_OF_CUE_POINTS_MILLISECOND = 0;</code>
     */
    public static final int UNIT_OF_CUE_POINTS_MILLISECOND_VALUE = 0;
    /**
     * <code>UNIT_OF_CUE_POINTS_SECOND = 1;</code>
     */
    public static final int UNIT_OF_CUE_POINTS_SECOND_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitOfCuePoints valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UnitOfCuePoints forNumber(int value) {
      switch (value) {
        case 0: return UNIT_OF_CUE_POINTS_MILLISECOND;
        case 1: return UNIT_OF_CUE_POINTS_SECOND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfCuePoints>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitOfCuePoints> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfCuePoints>() {
            public UnitOfCuePoints findValueByNumber(int number) {
              return UnitOfCuePoints.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(185);
    }

    private static final UnitOfCuePoints[] VALUES = values();

    public static UnitOfCuePoints valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UnitOfCuePoints(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UnitOfCuePoints)
  }

  /**
   * Protobuf enum {@code avs.UnitOfDuration}
   */
  public enum UnitOfDuration
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_OF_DURATION_MONTH = 0;</code>
     */
    UNIT_OF_DURATION_MONTH(0),
    /**
     * <code>UNIT_OF_DURATION_USER_DEFINED = 1;</code>
     */
    UNIT_OF_DURATION_USER_DEFINED(1),
    /**
     * <code>UNIT_OF_DURATION_DAY = 2;</code>
     */
    UNIT_OF_DURATION_DAY(2),
    /**
     * <code>UNIT_OF_DURATION_WEEK = 3;</code>
     */
    UNIT_OF_DURATION_WEEK(3),
    ;

    /**
     * <code>UNIT_OF_DURATION_MONTH = 0;</code>
     */
    public static final int UNIT_OF_DURATION_MONTH_VALUE = 0;
    /**
     * <code>UNIT_OF_DURATION_USER_DEFINED = 1;</code>
     */
    public static final int UNIT_OF_DURATION_USER_DEFINED_VALUE = 1;
    /**
     * <code>UNIT_OF_DURATION_DAY = 2;</code>
     */
    public static final int UNIT_OF_DURATION_DAY_VALUE = 2;
    /**
     * <code>UNIT_OF_DURATION_WEEK = 3;</code>
     */
    public static final int UNIT_OF_DURATION_WEEK_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitOfDuration valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UnitOfDuration forNumber(int value) {
      switch (value) {
        case 0: return UNIT_OF_DURATION_MONTH;
        case 1: return UNIT_OF_DURATION_USER_DEFINED;
        case 2: return UNIT_OF_DURATION_DAY;
        case 3: return UNIT_OF_DURATION_WEEK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfDuration>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitOfDuration> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfDuration>() {
            public UnitOfDuration findValueByNumber(int number) {
              return UnitOfDuration.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(186);
    }

    private static final UnitOfDuration[] VALUES = values();

    public static UnitOfDuration valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UnitOfDuration(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UnitOfDuration)
  }

  /**
   * Protobuf enum {@code avs.UnitOfExtent}
   */
  public enum UnitOfExtent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_OF_EXTENT_MM = 0;</code>
     */
    UNIT_OF_EXTENT_MM(0),
    /**
     * <code>UNIT_OF_EXTENT_PERCENT_OF_SCREEN = 1;</code>
     */
    UNIT_OF_EXTENT_PERCENT_OF_SCREEN(1),
    /**
     * <code>UNIT_OF_EXTENT_INCH = 2;</code>
     */
    UNIT_OF_EXTENT_INCH(2),
    /**
     * <code>UNIT_OF_EXTENT_CM = 3;</code>
     */
    UNIT_OF_EXTENT_CM(3),
    /**
     * <code>UNIT_OF_EXTENT_PIXEL = 4;</code>
     */
    UNIT_OF_EXTENT_PIXEL(4),
    ;

    /**
     * <code>UNIT_OF_EXTENT_MM = 0;</code>
     */
    public static final int UNIT_OF_EXTENT_MM_VALUE = 0;
    /**
     * <code>UNIT_OF_EXTENT_PERCENT_OF_SCREEN = 1;</code>
     */
    public static final int UNIT_OF_EXTENT_PERCENT_OF_SCREEN_VALUE = 1;
    /**
     * <code>UNIT_OF_EXTENT_INCH = 2;</code>
     */
    public static final int UNIT_OF_EXTENT_INCH_VALUE = 2;
    /**
     * <code>UNIT_OF_EXTENT_CM = 3;</code>
     */
    public static final int UNIT_OF_EXTENT_CM_VALUE = 3;
    /**
     * <code>UNIT_OF_EXTENT_PIXEL = 4;</code>
     */
    public static final int UNIT_OF_EXTENT_PIXEL_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitOfExtent valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UnitOfExtent forNumber(int value) {
      switch (value) {
        case 0: return UNIT_OF_EXTENT_MM;
        case 1: return UNIT_OF_EXTENT_PERCENT_OF_SCREEN;
        case 2: return UNIT_OF_EXTENT_INCH;
        case 3: return UNIT_OF_EXTENT_CM;
        case 4: return UNIT_OF_EXTENT_PIXEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfExtent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitOfExtent> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfExtent>() {
            public UnitOfExtent findValueByNumber(int number) {
              return UnitOfExtent.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(187);
    }

    private static final UnitOfExtent[] VALUES = values();

    public static UnitOfExtent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UnitOfExtent(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UnitOfExtent)
  }

  /**
   * Protobuf enum {@code avs.UnitOfFrameRate}
   */
  public enum UnitOfFrameRate
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_OF_FRAME_RATE_HZ__FRB__NON__MINUS__INTERLACED__BRB__ = 0;</code>
     */
    UNIT_OF_FRAME_RATE_HZ__FRB__NON__MINUS__INTERLACED__BRB__(0),
    /**
     * <code>UNIT_OF_FRAME_RATE_HZ__FRB__INTERLACED__BRB__ = 1;</code>
     */
    UNIT_OF_FRAME_RATE_HZ__FRB__INTERLACED__BRB__(1),
    ;

    /**
     * <code>UNIT_OF_FRAME_RATE_HZ__FRB__NON__MINUS__INTERLACED__BRB__ = 0;</code>
     */
    public static final int UNIT_OF_FRAME_RATE_HZ__FRB__NON__MINUS__INTERLACED__BRB___VALUE = 0;
    /**
     * <code>UNIT_OF_FRAME_RATE_HZ__FRB__INTERLACED__BRB__ = 1;</code>
     */
    public static final int UNIT_OF_FRAME_RATE_HZ__FRB__INTERLACED__BRB___VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitOfFrameRate valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UnitOfFrameRate forNumber(int value) {
      switch (value) {
        case 0: return UNIT_OF_FRAME_RATE_HZ__FRB__NON__MINUS__INTERLACED__BRB__;
        case 1: return UNIT_OF_FRAME_RATE_HZ__FRB__INTERLACED__BRB__;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfFrameRate>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitOfFrameRate> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfFrameRate>() {
            public UnitOfFrameRate findValueByNumber(int number) {
              return UnitOfFrameRate.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(188);
    }

    private static final UnitOfFrameRate[] VALUES = values();

    public static UnitOfFrameRate valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UnitOfFrameRate(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UnitOfFrameRate)
  }

  /**
   * Protobuf enum {@code avs.UnitOfFrequency}
   */
  public enum UnitOfFrequency
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_OF_FREQUENCY_HZ = 0;</code>
     */
    UNIT_OF_FREQUENCY_HZ(0),
    /**
     * <code>UNIT_OF_FREQUENCY_G_HZ = 1;</code>
     */
    UNIT_OF_FREQUENCY_G_HZ(1),
    /**
     * <code>UNIT_OF_FREQUENCY_K_HZ = 2;</code>
     */
    UNIT_OF_FREQUENCY_K_HZ(2),
    /**
     * <code>UNIT_OF_FREQUENCY_M_HZ = 3;</code>
     */
    UNIT_OF_FREQUENCY_M_HZ(3),
    ;

    /**
     * <code>UNIT_OF_FREQUENCY_HZ = 0;</code>
     */
    public static final int UNIT_OF_FREQUENCY_HZ_VALUE = 0;
    /**
     * <code>UNIT_OF_FREQUENCY_G_HZ = 1;</code>
     */
    public static final int UNIT_OF_FREQUENCY_G_HZ_VALUE = 1;
    /**
     * <code>UNIT_OF_FREQUENCY_K_HZ = 2;</code>
     */
    public static final int UNIT_OF_FREQUENCY_K_HZ_VALUE = 2;
    /**
     * <code>UNIT_OF_FREQUENCY_M_HZ = 3;</code>
     */
    public static final int UNIT_OF_FREQUENCY_M_HZ_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitOfFrequency valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UnitOfFrequency forNumber(int value) {
      switch (value) {
        case 0: return UNIT_OF_FREQUENCY_HZ;
        case 1: return UNIT_OF_FREQUENCY_G_HZ;
        case 2: return UNIT_OF_FREQUENCY_K_HZ;
        case 3: return UNIT_OF_FREQUENCY_M_HZ;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfFrequency>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitOfFrequency> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfFrequency>() {
            public UnitOfFrequency findValueByNumber(int number) {
              return UnitOfFrequency.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(189);
    }

    private static final UnitOfFrequency[] VALUES = values();

    public static UnitOfFrequency valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UnitOfFrequency(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UnitOfFrequency)
  }

  /**
   * Protobuf enum {@code avs.UnitTypeForRevenueAllocation}
   */
  public enum UnitTypeForRevenueAllocation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIT_TYPE_FOR_REVENUE_ALLOCATION_PLAY = 0;</code>
     */
    UNIT_TYPE_FOR_REVENUE_ALLOCATION_PLAY(0),
    /**
     * <code>UNIT_TYPE_FOR_REVENUE_ALLOCATION_SECOND = 1;</code>
     */
    UNIT_TYPE_FOR_REVENUE_ALLOCATION_SECOND(1),
    /**
     * <code>UNIT_TYPE_FOR_REVENUE_ALLOCATION_PERFORMANCE = 2;</code>
     */
    UNIT_TYPE_FOR_REVENUE_ALLOCATION_PERFORMANCE(2),
    ;

    /**
     * <code>UNIT_TYPE_FOR_REVENUE_ALLOCATION_PLAY = 0;</code>
     */
    public static final int UNIT_TYPE_FOR_REVENUE_ALLOCATION_PLAY_VALUE = 0;
    /**
     * <code>UNIT_TYPE_FOR_REVENUE_ALLOCATION_SECOND = 1;</code>
     */
    public static final int UNIT_TYPE_FOR_REVENUE_ALLOCATION_SECOND_VALUE = 1;
    /**
     * <code>UNIT_TYPE_FOR_REVENUE_ALLOCATION_PERFORMANCE = 2;</code>
     */
    public static final int UNIT_TYPE_FOR_REVENUE_ALLOCATION_PERFORMANCE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitTypeForRevenueAllocation valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UnitTypeForRevenueAllocation forNumber(int value) {
      switch (value) {
        case 0: return UNIT_TYPE_FOR_REVENUE_ALLOCATION_PLAY;
        case 1: return UNIT_TYPE_FOR_REVENUE_ALLOCATION_SECOND;
        case 2: return UNIT_TYPE_FOR_REVENUE_ALLOCATION_PERFORMANCE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitTypeForRevenueAllocation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitTypeForRevenueAllocation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitTypeForRevenueAllocation>() {
            public UnitTypeForRevenueAllocation findValueByNumber(int number) {
              return UnitTypeForRevenueAllocation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(190);
    }

    private static final UnitTypeForRevenueAllocation[] VALUES = values();

    public static UnitTypeForRevenueAllocation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UnitTypeForRevenueAllocation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UnitTypeForRevenueAllocation)
  }

  /**
   * Protobuf enum {@code avs.UseType}
   */
  public enum UseType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USE_TYPE_DUB_FOR_RADIO = 0;</code>
     */
    USE_TYPE_DUB_FOR_RADIO(0),
    /**
     * <code>USE_TYPE_PERFORM = 1;</code>
     */
    USE_TYPE_PERFORM(1),
    /**
     * <code>USE_TYPE_KIOSK_DOWNLOAD = 2;</code>
     */
    USE_TYPE_KIOSK_DOWNLOAD(2),
    /**
     * <code>USE_TYPE_USE_AS_SCREENSAVER = 3;</code>
     */
    USE_TYPE_USE_AS_SCREENSAVER(3),
    /**
     * <code>USE_TYPE_ON_DEMAND_STREAM = 4;</code>
     */
    USE_TYPE_ON_DEMAND_STREAM(4),
    /**
     * <code>USE_TYPE_USE_AS_KARAOKE = 5;</code>
     */
    USE_TYPE_USE_AS_KARAOKE(5),
    /**
     * <code>USE_TYPE_USE_FOR_IDENTIFICATION = 6;</code>
     */
    USE_TYPE_USE_FOR_IDENTIFICATION(6),
    /**
     * <code>USE_TYPE_AS_PER_CONTRACT = 7;</code>
     */
    USE_TYPE_AS_PER_CONTRACT(7),
    /**
     * <code>USE_TYPE_PRINT = 8;</code>
     */
    USE_TYPE_PRINT(8),
    /**
     * <code>USE_TYPE_PERFORM_AS_MUSIC_ON_HOLD = 9;</code>
     */
    USE_TYPE_PERFORM_AS_MUSIC_ON_HOLD(9),
    /**
     * <code>USE_TYPE_PLAY_IN_PUBLIC = 10;</code>
     */
    USE_TYPE_PLAY_IN_PUBLIC(10),
    /**
     * <code>USE_TYPE_UNKNOWN = 11;</code>
     */
    USE_TYPE_UNKNOWN(11),
    /**
     * <code>USE_TYPE_DUB_FOR_ADVERTISEMENT = 12;</code>
     */
    USE_TYPE_DUB_FOR_ADVERTISEMENT(12),
    /**
     * <code>USE_TYPE_SIMULCAST = 13;</code>
     */
    USE_TYPE_SIMULCAST(13),
    /**
     * <code>USE_TYPE_USE_AS_ALERT_TONE = 14;</code>
     */
    USE_TYPE_USE_AS_ALERT_TONE(14),
    /**
     * <code>USE_TYPE_STREAM = 15;</code>
     */
    USE_TYPE_STREAM(15),
    /**
     * <code>USE_TYPE_USER_DEFINED = 16;</code>
     */
    USE_TYPE_USER_DEFINED(16),
    /**
     * <code>USE_TYPE_PRIVATE_COPY = 17;</code>
     */
    USE_TYPE_PRIVATE_COPY(17),
    /**
     * <code>USE_TYPE_EXTRACT_FOR_INTERNET = 18;</code>
     */
    USE_TYPE_EXTRACT_FOR_INTERNET(18),
    /**
     * <code>USE_TYPE_USE_AS_RINGBACK_TONE = 19;</code>
     */
    USE_TYPE_USE_AS_RINGBACK_TONE(19),
    /**
     * <code>USE_TYPE_USE_AS_RINGBACK_TUNE = 20;</code>
     */
    USE_TYPE_USE_AS_RINGBACK_TUNE(20),
    /**
     * <code>USE_TYPE_USE_AS_RINGTONE = 21;</code>
     */
    USE_TYPE_USE_AS_RINGTONE(21),
    /**
     * <code>USE_TYPE_CONTENT_INFLUENCED_STREAM = 22;</code>
     */
    USE_TYPE_CONTENT_INFLUENCED_STREAM(22),
    /**
     * <code>USE_TYPE_PERFORM_IN_PUBLIC = 23;</code>
     */
    USE_TYPE_PERFORM_IN_PUBLIC(23),
    /**
     * <code>USE_TYPE_PERMANENT_DOWNLOAD = 24;</code>
     */
    USE_TYPE_PERMANENT_DOWNLOAD(24),
    /**
     * <code>USE_TYPE_DUB_FOR_MUSIC_ON_HOLD = 25;</code>
     */
    USE_TYPE_DUB_FOR_MUSIC_ON_HOLD(25),
    /**
     * <code>USE_TYPE_CABLE = 26;</code>
     */
    USE_TYPE_CABLE(26),
    /**
     * <code>USE_TYPE_TETHERED_DOWNLOAD = 27;</code>
     */
    USE_TYPE_TETHERED_DOWNLOAD(27),
    /**
     * <code>USE_TYPE_USE_AS_VOICE_MAIL = 28;</code>
     */
    USE_TYPE_USE_AS_VOICE_MAIL(28),
    /**
     * <code>USE_TYPE_USE_IN_MOBILE_PHONE_MESSAGING = 29;</code>
     */
    USE_TYPE_USE_IN_MOBILE_PHONE_MESSAGING(29),
    /**
     * <code>USE_TYPE_USER_MAKE_AVAILABLE_LABEL_PROVIDED = 30;</code>
     */
    USE_TYPE_USER_MAKE_AVAILABLE_LABEL_PROVIDED(30),
    /**
     * <code>USE_TYPE_USER_MAKE_AVAILABLE_USER_PROVIDED = 31;</code>
     */
    USE_TYPE_USER_MAKE_AVAILABLE_USER_PROVIDED(31),
    /**
     * <code>USE_TYPE_DUB = 32;</code>
     */
    USE_TYPE_DUB(32),
    /**
     * <code>USE_TYPE_USE_AS_RINGTUNE = 33;</code>
     */
    USE_TYPE_USE_AS_RINGTUNE(33),
    /**
     * <code>USE_TYPE_BROADCAST = 34;</code>
     */
    USE_TYPE_BROADCAST(34),
    /**
     * <code>USE_TYPE_DUB_FOR_LIVE_PERFORMANCE = 35;</code>
     */
    USE_TYPE_DUB_FOR_LIVE_PERFORMANCE(35),
    /**
     * <code>USE_TYPE_WEBCAST = 36;</code>
     */
    USE_TYPE_WEBCAST(36),
    /**
     * <code>USE_TYPE_DOWNLOAD = 37;</code>
     */
    USE_TYPE_DOWNLOAD(37),
    /**
     * <code>USE_TYPE_NON_INTERACTIVE_STREAM = 38;</code>
     */
    USE_TYPE_NON_INTERACTIVE_STREAM(38),
    /**
     * <code>USE_TYPE_USE_IN_PHONE_LISTENING = 39;</code>
     */
    USE_TYPE_USE_IN_PHONE_LISTENING(39),
    /**
     * <code>USE_TYPE_USE = 40;</code>
     */
    USE_TYPE_USE(40),
    /**
     * <code>USE_TYPE_PLAYBACK = 41;</code>
     */
    USE_TYPE_PLAYBACK(41),
    /**
     * <code>USE_TYPE_DUB_FOR_T_V = 42;</code>
     */
    USE_TYPE_DUB_FOR_T_V(42),
    /**
     * <code>USE_TYPE_PERFORM_IN_LIVE_PERFORMANCE = 43;</code>
     */
    USE_TYPE_PERFORM_IN_LIVE_PERFORMANCE(43),
    /**
     * <code>USE_TYPE_PODCAST = 44;</code>
     */
    USE_TYPE_PODCAST(44),
    /**
     * <code>USE_TYPE_TIME_INFLUENCED_STREAM = 45;</code>
     */
    USE_TYPE_TIME_INFLUENCED_STREAM(45),
    /**
     * <code>USE_TYPE_CONDITIONAL_DOWNLOAD = 46;</code>
     */
    USE_TYPE_CONDITIONAL_DOWNLOAD(46),
    /**
     * <code>USE_TYPE_DUB_FOR_MOVIES = 47;</code>
     */
    USE_TYPE_DUB_FOR_MOVIES(47),
    /**
     * <code>USE_TYPE_DUB_FOR_PUBLIC_PERFORMANCE = 48;</code>
     */
    USE_TYPE_DUB_FOR_PUBLIC_PERFORMANCE(48),
    /**
     * <code>USE_TYPE_USE_AS_WALLPAPER = 49;</code>
     */
    USE_TYPE_USE_AS_WALLPAPER(49),
    /**
     * <code>USE_TYPE_USE_AS_DEVICE = 50;</code>
     */
    USE_TYPE_USE_AS_DEVICE(50),
    /**
     * <code>USE_TYPE_NARROWCAST = 51;</code>
     */
    USE_TYPE_NARROWCAST(51),
    /**
     * <code>USE_TYPE_PURCHASE_AS_PHYSICAL_PRODUCT = 52;</code>
     */
    USE_TYPE_PURCHASE_AS_PHYSICAL_PRODUCT(52),
    /**
     * <code>USE_TYPE_DISPLAY = 53;</code>
     */
    USE_TYPE_DISPLAY(53),
    /**
     * <code>USE_TYPE_RENT = 54;</code>
     */
    USE_TYPE_RENT(54),
    ;

    /**
     * <code>USE_TYPE_DUB_FOR_RADIO = 0;</code>
     */
    public static final int USE_TYPE_DUB_FOR_RADIO_VALUE = 0;
    /**
     * <code>USE_TYPE_PERFORM = 1;</code>
     */
    public static final int USE_TYPE_PERFORM_VALUE = 1;
    /**
     * <code>USE_TYPE_KIOSK_DOWNLOAD = 2;</code>
     */
    public static final int USE_TYPE_KIOSK_DOWNLOAD_VALUE = 2;
    /**
     * <code>USE_TYPE_USE_AS_SCREENSAVER = 3;</code>
     */
    public static final int USE_TYPE_USE_AS_SCREENSAVER_VALUE = 3;
    /**
     * <code>USE_TYPE_ON_DEMAND_STREAM = 4;</code>
     */
    public static final int USE_TYPE_ON_DEMAND_STREAM_VALUE = 4;
    /**
     * <code>USE_TYPE_USE_AS_KARAOKE = 5;</code>
     */
    public static final int USE_TYPE_USE_AS_KARAOKE_VALUE = 5;
    /**
     * <code>USE_TYPE_USE_FOR_IDENTIFICATION = 6;</code>
     */
    public static final int USE_TYPE_USE_FOR_IDENTIFICATION_VALUE = 6;
    /**
     * <code>USE_TYPE_AS_PER_CONTRACT = 7;</code>
     */
    public static final int USE_TYPE_AS_PER_CONTRACT_VALUE = 7;
    /**
     * <code>USE_TYPE_PRINT = 8;</code>
     */
    public static final int USE_TYPE_PRINT_VALUE = 8;
    /**
     * <code>USE_TYPE_PERFORM_AS_MUSIC_ON_HOLD = 9;</code>
     */
    public static final int USE_TYPE_PERFORM_AS_MUSIC_ON_HOLD_VALUE = 9;
    /**
     * <code>USE_TYPE_PLAY_IN_PUBLIC = 10;</code>
     */
    public static final int USE_TYPE_PLAY_IN_PUBLIC_VALUE = 10;
    /**
     * <code>USE_TYPE_UNKNOWN = 11;</code>
     */
    public static final int USE_TYPE_UNKNOWN_VALUE = 11;
    /**
     * <code>USE_TYPE_DUB_FOR_ADVERTISEMENT = 12;</code>
     */
    public static final int USE_TYPE_DUB_FOR_ADVERTISEMENT_VALUE = 12;
    /**
     * <code>USE_TYPE_SIMULCAST = 13;</code>
     */
    public static final int USE_TYPE_SIMULCAST_VALUE = 13;
    /**
     * <code>USE_TYPE_USE_AS_ALERT_TONE = 14;</code>
     */
    public static final int USE_TYPE_USE_AS_ALERT_TONE_VALUE = 14;
    /**
     * <code>USE_TYPE_STREAM = 15;</code>
     */
    public static final int USE_TYPE_STREAM_VALUE = 15;
    /**
     * <code>USE_TYPE_USER_DEFINED = 16;</code>
     */
    public static final int USE_TYPE_USER_DEFINED_VALUE = 16;
    /**
     * <code>USE_TYPE_PRIVATE_COPY = 17;</code>
     */
    public static final int USE_TYPE_PRIVATE_COPY_VALUE = 17;
    /**
     * <code>USE_TYPE_EXTRACT_FOR_INTERNET = 18;</code>
     */
    public static final int USE_TYPE_EXTRACT_FOR_INTERNET_VALUE = 18;
    /**
     * <code>USE_TYPE_USE_AS_RINGBACK_TONE = 19;</code>
     */
    public static final int USE_TYPE_USE_AS_RINGBACK_TONE_VALUE = 19;
    /**
     * <code>USE_TYPE_USE_AS_RINGBACK_TUNE = 20;</code>
     */
    public static final int USE_TYPE_USE_AS_RINGBACK_TUNE_VALUE = 20;
    /**
     * <code>USE_TYPE_USE_AS_RINGTONE = 21;</code>
     */
    public static final int USE_TYPE_USE_AS_RINGTONE_VALUE = 21;
    /**
     * <code>USE_TYPE_CONTENT_INFLUENCED_STREAM = 22;</code>
     */
    public static final int USE_TYPE_CONTENT_INFLUENCED_STREAM_VALUE = 22;
    /**
     * <code>USE_TYPE_PERFORM_IN_PUBLIC = 23;</code>
     */
    public static final int USE_TYPE_PERFORM_IN_PUBLIC_VALUE = 23;
    /**
     * <code>USE_TYPE_PERMANENT_DOWNLOAD = 24;</code>
     */
    public static final int USE_TYPE_PERMANENT_DOWNLOAD_VALUE = 24;
    /**
     * <code>USE_TYPE_DUB_FOR_MUSIC_ON_HOLD = 25;</code>
     */
    public static final int USE_TYPE_DUB_FOR_MUSIC_ON_HOLD_VALUE = 25;
    /**
     * <code>USE_TYPE_CABLE = 26;</code>
     */
    public static final int USE_TYPE_CABLE_VALUE = 26;
    /**
     * <code>USE_TYPE_TETHERED_DOWNLOAD = 27;</code>
     */
    public static final int USE_TYPE_TETHERED_DOWNLOAD_VALUE = 27;
    /**
     * <code>USE_TYPE_USE_AS_VOICE_MAIL = 28;</code>
     */
    public static final int USE_TYPE_USE_AS_VOICE_MAIL_VALUE = 28;
    /**
     * <code>USE_TYPE_USE_IN_MOBILE_PHONE_MESSAGING = 29;</code>
     */
    public static final int USE_TYPE_USE_IN_MOBILE_PHONE_MESSAGING_VALUE = 29;
    /**
     * <code>USE_TYPE_USER_MAKE_AVAILABLE_LABEL_PROVIDED = 30;</code>
     */
    public static final int USE_TYPE_USER_MAKE_AVAILABLE_LABEL_PROVIDED_VALUE = 30;
    /**
     * <code>USE_TYPE_USER_MAKE_AVAILABLE_USER_PROVIDED = 31;</code>
     */
    public static final int USE_TYPE_USER_MAKE_AVAILABLE_USER_PROVIDED_VALUE = 31;
    /**
     * <code>USE_TYPE_DUB = 32;</code>
     */
    public static final int USE_TYPE_DUB_VALUE = 32;
    /**
     * <code>USE_TYPE_USE_AS_RINGTUNE = 33;</code>
     */
    public static final int USE_TYPE_USE_AS_RINGTUNE_VALUE = 33;
    /**
     * <code>USE_TYPE_BROADCAST = 34;</code>
     */
    public static final int USE_TYPE_BROADCAST_VALUE = 34;
    /**
     * <code>USE_TYPE_DUB_FOR_LIVE_PERFORMANCE = 35;</code>
     */
    public static final int USE_TYPE_DUB_FOR_LIVE_PERFORMANCE_VALUE = 35;
    /**
     * <code>USE_TYPE_WEBCAST = 36;</code>
     */
    public static final int USE_TYPE_WEBCAST_VALUE = 36;
    /**
     * <code>USE_TYPE_DOWNLOAD = 37;</code>
     */
    public static final int USE_TYPE_DOWNLOAD_VALUE = 37;
    /**
     * <code>USE_TYPE_NON_INTERACTIVE_STREAM = 38;</code>
     */
    public static final int USE_TYPE_NON_INTERACTIVE_STREAM_VALUE = 38;
    /**
     * <code>USE_TYPE_USE_IN_PHONE_LISTENING = 39;</code>
     */
    public static final int USE_TYPE_USE_IN_PHONE_LISTENING_VALUE = 39;
    /**
     * <code>USE_TYPE_USE = 40;</code>
     */
    public static final int USE_TYPE_USE_VALUE = 40;
    /**
     * <code>USE_TYPE_PLAYBACK = 41;</code>
     */
    public static final int USE_TYPE_PLAYBACK_VALUE = 41;
    /**
     * <code>USE_TYPE_DUB_FOR_T_V = 42;</code>
     */
    public static final int USE_TYPE_DUB_FOR_T_V_VALUE = 42;
    /**
     * <code>USE_TYPE_PERFORM_IN_LIVE_PERFORMANCE = 43;</code>
     */
    public static final int USE_TYPE_PERFORM_IN_LIVE_PERFORMANCE_VALUE = 43;
    /**
     * <code>USE_TYPE_PODCAST = 44;</code>
     */
    public static final int USE_TYPE_PODCAST_VALUE = 44;
    /**
     * <code>USE_TYPE_TIME_INFLUENCED_STREAM = 45;</code>
     */
    public static final int USE_TYPE_TIME_INFLUENCED_STREAM_VALUE = 45;
    /**
     * <code>USE_TYPE_CONDITIONAL_DOWNLOAD = 46;</code>
     */
    public static final int USE_TYPE_CONDITIONAL_DOWNLOAD_VALUE = 46;
    /**
     * <code>USE_TYPE_DUB_FOR_MOVIES = 47;</code>
     */
    public static final int USE_TYPE_DUB_FOR_MOVIES_VALUE = 47;
    /**
     * <code>USE_TYPE_DUB_FOR_PUBLIC_PERFORMANCE = 48;</code>
     */
    public static final int USE_TYPE_DUB_FOR_PUBLIC_PERFORMANCE_VALUE = 48;
    /**
     * <code>USE_TYPE_USE_AS_WALLPAPER = 49;</code>
     */
    public static final int USE_TYPE_USE_AS_WALLPAPER_VALUE = 49;
    /**
     * <code>USE_TYPE_USE_AS_DEVICE = 50;</code>
     */
    public static final int USE_TYPE_USE_AS_DEVICE_VALUE = 50;
    /**
     * <code>USE_TYPE_NARROWCAST = 51;</code>
     */
    public static final int USE_TYPE_NARROWCAST_VALUE = 51;
    /**
     * <code>USE_TYPE_PURCHASE_AS_PHYSICAL_PRODUCT = 52;</code>
     */
    public static final int USE_TYPE_PURCHASE_AS_PHYSICAL_PRODUCT_VALUE = 52;
    /**
     * <code>USE_TYPE_DISPLAY = 53;</code>
     */
    public static final int USE_TYPE_DISPLAY_VALUE = 53;
    /**
     * <code>USE_TYPE_RENT = 54;</code>
     */
    public static final int USE_TYPE_RENT_VALUE = 54;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UseType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UseType forNumber(int value) {
      switch (value) {
        case 0: return USE_TYPE_DUB_FOR_RADIO;
        case 1: return USE_TYPE_PERFORM;
        case 2: return USE_TYPE_KIOSK_DOWNLOAD;
        case 3: return USE_TYPE_USE_AS_SCREENSAVER;
        case 4: return USE_TYPE_ON_DEMAND_STREAM;
        case 5: return USE_TYPE_USE_AS_KARAOKE;
        case 6: return USE_TYPE_USE_FOR_IDENTIFICATION;
        case 7: return USE_TYPE_AS_PER_CONTRACT;
        case 8: return USE_TYPE_PRINT;
        case 9: return USE_TYPE_PERFORM_AS_MUSIC_ON_HOLD;
        case 10: return USE_TYPE_PLAY_IN_PUBLIC;
        case 11: return USE_TYPE_UNKNOWN;
        case 12: return USE_TYPE_DUB_FOR_ADVERTISEMENT;
        case 13: return USE_TYPE_SIMULCAST;
        case 14: return USE_TYPE_USE_AS_ALERT_TONE;
        case 15: return USE_TYPE_STREAM;
        case 16: return USE_TYPE_USER_DEFINED;
        case 17: return USE_TYPE_PRIVATE_COPY;
        case 18: return USE_TYPE_EXTRACT_FOR_INTERNET;
        case 19: return USE_TYPE_USE_AS_RINGBACK_TONE;
        case 20: return USE_TYPE_USE_AS_RINGBACK_TUNE;
        case 21: return USE_TYPE_USE_AS_RINGTONE;
        case 22: return USE_TYPE_CONTENT_INFLUENCED_STREAM;
        case 23: return USE_TYPE_PERFORM_IN_PUBLIC;
        case 24: return USE_TYPE_PERMANENT_DOWNLOAD;
        case 25: return USE_TYPE_DUB_FOR_MUSIC_ON_HOLD;
        case 26: return USE_TYPE_CABLE;
        case 27: return USE_TYPE_TETHERED_DOWNLOAD;
        case 28: return USE_TYPE_USE_AS_VOICE_MAIL;
        case 29: return USE_TYPE_USE_IN_MOBILE_PHONE_MESSAGING;
        case 30: return USE_TYPE_USER_MAKE_AVAILABLE_LABEL_PROVIDED;
        case 31: return USE_TYPE_USER_MAKE_AVAILABLE_USER_PROVIDED;
        case 32: return USE_TYPE_DUB;
        case 33: return USE_TYPE_USE_AS_RINGTUNE;
        case 34: return USE_TYPE_BROADCAST;
        case 35: return USE_TYPE_DUB_FOR_LIVE_PERFORMANCE;
        case 36: return USE_TYPE_WEBCAST;
        case 37: return USE_TYPE_DOWNLOAD;
        case 38: return USE_TYPE_NON_INTERACTIVE_STREAM;
        case 39: return USE_TYPE_USE_IN_PHONE_LISTENING;
        case 40: return USE_TYPE_USE;
        case 41: return USE_TYPE_PLAYBACK;
        case 42: return USE_TYPE_DUB_FOR_T_V;
        case 43: return USE_TYPE_PERFORM_IN_LIVE_PERFORMANCE;
        case 44: return USE_TYPE_PODCAST;
        case 45: return USE_TYPE_TIME_INFLUENCED_STREAM;
        case 46: return USE_TYPE_CONDITIONAL_DOWNLOAD;
        case 47: return USE_TYPE_DUB_FOR_MOVIES;
        case 48: return USE_TYPE_DUB_FOR_PUBLIC_PERFORMANCE;
        case 49: return USE_TYPE_USE_AS_WALLPAPER;
        case 50: return USE_TYPE_USE_AS_DEVICE;
        case 51: return USE_TYPE_NARROWCAST;
        case 52: return USE_TYPE_PURCHASE_AS_PHYSICAL_PRODUCT;
        case 53: return USE_TYPE_DISPLAY;
        case 54: return USE_TYPE_RENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UseType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UseType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UseType>() {
            public UseType findValueByNumber(int number) {
              return UseType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(191);
    }

    private static final UseType[] VALUES = values();

    public static UseType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UseType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UseType)
  }

  /**
   * Protobuf enum {@code avs.UseType_ERN}
   */
  public enum UseType_ERN
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_RADIO = 0;</code>
     */
    USE_TYPE__E_R_N_DUB_FOR_RADIO(0),
    /**
     * <code>USE_TYPE__E_R_N_PERFORM = 1;</code>
     */
    USE_TYPE__E_R_N_PERFORM(1),
    /**
     * <code>USE_TYPE__E_R_N_KIOSK_DOWNLOAD = 2;</code>
     */
    USE_TYPE__E_R_N_KIOSK_DOWNLOAD(2),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_SCREENSAVER = 3;</code>
     */
    USE_TYPE__E_R_N_USE_AS_SCREENSAVER(3),
    /**
     * <code>USE_TYPE__E_R_N_ON_DEMAND_STREAM = 4;</code>
     */
    USE_TYPE__E_R_N_ON_DEMAND_STREAM(4),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_KARAOKE = 5;</code>
     */
    USE_TYPE__E_R_N_USE_AS_KARAOKE(5),
    /**
     * <code>USE_TYPE__E_R_N_USE_FOR_IDENTIFICATION = 6;</code>
     */
    USE_TYPE__E_R_N_USE_FOR_IDENTIFICATION(6),
    /**
     * <code>USE_TYPE__E_R_N_PRINT = 7;</code>
     */
    USE_TYPE__E_R_N_PRINT(7),
    /**
     * <code>USE_TYPE__E_R_N_PERFORM_AS_MUSIC_ON_HOLD = 8;</code>
     */
    USE_TYPE__E_R_N_PERFORM_AS_MUSIC_ON_HOLD(8),
    /**
     * <code>USE_TYPE__E_R_N_PLAY_IN_PUBLIC = 9;</code>
     */
    USE_TYPE__E_R_N_PLAY_IN_PUBLIC(9),
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_ADVERTISEMENT = 10;</code>
     */
    USE_TYPE__E_R_N_DUB_FOR_ADVERTISEMENT(10),
    /**
     * <code>USE_TYPE__E_R_N_SIMULCAST = 11;</code>
     */
    USE_TYPE__E_R_N_SIMULCAST(11),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_ALERT_TONE = 12;</code>
     */
    USE_TYPE__E_R_N_USE_AS_ALERT_TONE(12),
    /**
     * <code>USE_TYPE__E_R_N_STREAM = 13;</code>
     */
    USE_TYPE__E_R_N_STREAM(13),
    /**
     * <code>USE_TYPE__E_R_N_USER_DEFINED = 14;</code>
     */
    USE_TYPE__E_R_N_USER_DEFINED(14),
    /**
     * <code>USE_TYPE__E_R_N_PRIVATE_COPY = 15;</code>
     */
    USE_TYPE__E_R_N_PRIVATE_COPY(15),
    /**
     * <code>USE_TYPE__E_R_N_EXTRACT_FOR_INTERNET = 16;</code>
     */
    USE_TYPE__E_R_N_EXTRACT_FOR_INTERNET(16),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_RINGBACK_TONE = 17;</code>
     */
    USE_TYPE__E_R_N_USE_AS_RINGBACK_TONE(17),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_RINGBACK_TUNE = 18;</code>
     */
    USE_TYPE__E_R_N_USE_AS_RINGBACK_TUNE(18),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_RINGTONE = 19;</code>
     */
    USE_TYPE__E_R_N_USE_AS_RINGTONE(19),
    /**
     * <code>USE_TYPE__E_R_N_CONTENT_INFLUENCED_STREAM = 20;</code>
     */
    USE_TYPE__E_R_N_CONTENT_INFLUENCED_STREAM(20),
    /**
     * <code>USE_TYPE__E_R_N_PERFORM_IN_PUBLIC = 21;</code>
     */
    USE_TYPE__E_R_N_PERFORM_IN_PUBLIC(21),
    /**
     * <code>USE_TYPE__E_R_N_PERMANENT_DOWNLOAD = 22;</code>
     */
    USE_TYPE__E_R_N_PERMANENT_DOWNLOAD(22),
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_MUSIC_ON_HOLD = 23;</code>
     */
    USE_TYPE__E_R_N_DUB_FOR_MUSIC_ON_HOLD(23),
    /**
     * <code>USE_TYPE__E_R_N_CABLE = 24;</code>
     */
    USE_TYPE__E_R_N_CABLE(24),
    /**
     * <code>USE_TYPE__E_R_N_TETHERED_DOWNLOAD = 25;</code>
     */
    USE_TYPE__E_R_N_TETHERED_DOWNLOAD(25),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_VOICE_MAIL = 26;</code>
     */
    USE_TYPE__E_R_N_USE_AS_VOICE_MAIL(26),
    /**
     * <code>USE_TYPE__E_R_N_USE_IN_MOBILE_PHONE_MESSAGING = 27;</code>
     */
    USE_TYPE__E_R_N_USE_IN_MOBILE_PHONE_MESSAGING(27),
    /**
     * <code>USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_LABEL_PROVIDED = 28;</code>
     */
    USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_LABEL_PROVIDED(28),
    /**
     * <code>USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_USER_PROVIDED = 29;</code>
     */
    USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_USER_PROVIDED(29),
    /**
     * <code>USE_TYPE__E_R_N_DUB = 30;</code>
     */
    USE_TYPE__E_R_N_DUB(30),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_RINGTUNE = 31;</code>
     */
    USE_TYPE__E_R_N_USE_AS_RINGTUNE(31),
    /**
     * <code>USE_TYPE__E_R_N_BROADCAST = 32;</code>
     */
    USE_TYPE__E_R_N_BROADCAST(32),
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_LIVE_PERFORMANCE = 33;</code>
     */
    USE_TYPE__E_R_N_DUB_FOR_LIVE_PERFORMANCE(33),
    /**
     * <code>USE_TYPE__E_R_N_WEBCAST = 34;</code>
     */
    USE_TYPE__E_R_N_WEBCAST(34),
    /**
     * <code>USE_TYPE__E_R_N_DOWNLOAD = 35;</code>
     */
    USE_TYPE__E_R_N_DOWNLOAD(35),
    /**
     * <code>USE_TYPE__E_R_N_NON_INTERACTIVE_STREAM = 36;</code>
     */
    USE_TYPE__E_R_N_NON_INTERACTIVE_STREAM(36),
    /**
     * <code>USE_TYPE__E_R_N_USE_IN_PHONE_LISTENING = 37;</code>
     */
    USE_TYPE__E_R_N_USE_IN_PHONE_LISTENING(37),
    /**
     * <code>USE_TYPE__E_R_N_USE = 38;</code>
     */
    USE_TYPE__E_R_N_USE(38),
    /**
     * <code>USE_TYPE__E_R_N_PLAYBACK = 39;</code>
     */
    USE_TYPE__E_R_N_PLAYBACK(39),
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_T_V = 40;</code>
     */
    USE_TYPE__E_R_N_DUB_FOR_T_V(40),
    /**
     * <code>USE_TYPE__E_R_N_PERFORM_IN_LIVE_PERFORMANCE = 41;</code>
     */
    USE_TYPE__E_R_N_PERFORM_IN_LIVE_PERFORMANCE(41),
    /**
     * <code>USE_TYPE__E_R_N_PODCAST = 42;</code>
     */
    USE_TYPE__E_R_N_PODCAST(42),
    /**
     * <code>USE_TYPE__E_R_N_TIME_INFLUENCED_STREAM = 43;</code>
     */
    USE_TYPE__E_R_N_TIME_INFLUENCED_STREAM(43),
    /**
     * <code>USE_TYPE__E_R_N_CONDITIONAL_DOWNLOAD = 44;</code>
     */
    USE_TYPE__E_R_N_CONDITIONAL_DOWNLOAD(44),
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_MOVIES = 45;</code>
     */
    USE_TYPE__E_R_N_DUB_FOR_MOVIES(45),
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_PUBLIC_PERFORMANCE = 46;</code>
     */
    USE_TYPE__E_R_N_DUB_FOR_PUBLIC_PERFORMANCE(46),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_WALLPAPER = 47;</code>
     */
    USE_TYPE__E_R_N_USE_AS_WALLPAPER(47),
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_DEVICE = 48;</code>
     */
    USE_TYPE__E_R_N_USE_AS_DEVICE(48),
    /**
     * <code>USE_TYPE__E_R_N_NARROWCAST = 49;</code>
     */
    USE_TYPE__E_R_N_NARROWCAST(49),
    /**
     * <code>USE_TYPE__E_R_N_PURCHASE_AS_PHYSICAL_PRODUCT = 50;</code>
     */
    USE_TYPE__E_R_N_PURCHASE_AS_PHYSICAL_PRODUCT(50),
    /**
     * <code>USE_TYPE__E_R_N_DISPLAY = 51;</code>
     */
    USE_TYPE__E_R_N_DISPLAY(51),
    /**
     * <code>USE_TYPE__E_R_N_RENT = 52;</code>
     */
    USE_TYPE__E_R_N_RENT(52),
    ;

    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_RADIO = 0;</code>
     */
    public static final int USE_TYPE__E_R_N_DUB_FOR_RADIO_VALUE = 0;
    /**
     * <code>USE_TYPE__E_R_N_PERFORM = 1;</code>
     */
    public static final int USE_TYPE__E_R_N_PERFORM_VALUE = 1;
    /**
     * <code>USE_TYPE__E_R_N_KIOSK_DOWNLOAD = 2;</code>
     */
    public static final int USE_TYPE__E_R_N_KIOSK_DOWNLOAD_VALUE = 2;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_SCREENSAVER = 3;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_SCREENSAVER_VALUE = 3;
    /**
     * <code>USE_TYPE__E_R_N_ON_DEMAND_STREAM = 4;</code>
     */
    public static final int USE_TYPE__E_R_N_ON_DEMAND_STREAM_VALUE = 4;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_KARAOKE = 5;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_KARAOKE_VALUE = 5;
    /**
     * <code>USE_TYPE__E_R_N_USE_FOR_IDENTIFICATION = 6;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_FOR_IDENTIFICATION_VALUE = 6;
    /**
     * <code>USE_TYPE__E_R_N_PRINT = 7;</code>
     */
    public static final int USE_TYPE__E_R_N_PRINT_VALUE = 7;
    /**
     * <code>USE_TYPE__E_R_N_PERFORM_AS_MUSIC_ON_HOLD = 8;</code>
     */
    public static final int USE_TYPE__E_R_N_PERFORM_AS_MUSIC_ON_HOLD_VALUE = 8;
    /**
     * <code>USE_TYPE__E_R_N_PLAY_IN_PUBLIC = 9;</code>
     */
    public static final int USE_TYPE__E_R_N_PLAY_IN_PUBLIC_VALUE = 9;
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_ADVERTISEMENT = 10;</code>
     */
    public static final int USE_TYPE__E_R_N_DUB_FOR_ADVERTISEMENT_VALUE = 10;
    /**
     * <code>USE_TYPE__E_R_N_SIMULCAST = 11;</code>
     */
    public static final int USE_TYPE__E_R_N_SIMULCAST_VALUE = 11;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_ALERT_TONE = 12;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_ALERT_TONE_VALUE = 12;
    /**
     * <code>USE_TYPE__E_R_N_STREAM = 13;</code>
     */
    public static final int USE_TYPE__E_R_N_STREAM_VALUE = 13;
    /**
     * <code>USE_TYPE__E_R_N_USER_DEFINED = 14;</code>
     */
    public static final int USE_TYPE__E_R_N_USER_DEFINED_VALUE = 14;
    /**
     * <code>USE_TYPE__E_R_N_PRIVATE_COPY = 15;</code>
     */
    public static final int USE_TYPE__E_R_N_PRIVATE_COPY_VALUE = 15;
    /**
     * <code>USE_TYPE__E_R_N_EXTRACT_FOR_INTERNET = 16;</code>
     */
    public static final int USE_TYPE__E_R_N_EXTRACT_FOR_INTERNET_VALUE = 16;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_RINGBACK_TONE = 17;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_RINGBACK_TONE_VALUE = 17;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_RINGBACK_TUNE = 18;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_RINGBACK_TUNE_VALUE = 18;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_RINGTONE = 19;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_RINGTONE_VALUE = 19;
    /**
     * <code>USE_TYPE__E_R_N_CONTENT_INFLUENCED_STREAM = 20;</code>
     */
    public static final int USE_TYPE__E_R_N_CONTENT_INFLUENCED_STREAM_VALUE = 20;
    /**
     * <code>USE_TYPE__E_R_N_PERFORM_IN_PUBLIC = 21;</code>
     */
    public static final int USE_TYPE__E_R_N_PERFORM_IN_PUBLIC_VALUE = 21;
    /**
     * <code>USE_TYPE__E_R_N_PERMANENT_DOWNLOAD = 22;</code>
     */
    public static final int USE_TYPE__E_R_N_PERMANENT_DOWNLOAD_VALUE = 22;
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_MUSIC_ON_HOLD = 23;</code>
     */
    public static final int USE_TYPE__E_R_N_DUB_FOR_MUSIC_ON_HOLD_VALUE = 23;
    /**
     * <code>USE_TYPE__E_R_N_CABLE = 24;</code>
     */
    public static final int USE_TYPE__E_R_N_CABLE_VALUE = 24;
    /**
     * <code>USE_TYPE__E_R_N_TETHERED_DOWNLOAD = 25;</code>
     */
    public static final int USE_TYPE__E_R_N_TETHERED_DOWNLOAD_VALUE = 25;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_VOICE_MAIL = 26;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_VOICE_MAIL_VALUE = 26;
    /**
     * <code>USE_TYPE__E_R_N_USE_IN_MOBILE_PHONE_MESSAGING = 27;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_IN_MOBILE_PHONE_MESSAGING_VALUE = 27;
    /**
     * <code>USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_LABEL_PROVIDED = 28;</code>
     */
    public static final int USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_LABEL_PROVIDED_VALUE = 28;
    /**
     * <code>USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_USER_PROVIDED = 29;</code>
     */
    public static final int USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_USER_PROVIDED_VALUE = 29;
    /**
     * <code>USE_TYPE__E_R_N_DUB = 30;</code>
     */
    public static final int USE_TYPE__E_R_N_DUB_VALUE = 30;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_RINGTUNE = 31;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_RINGTUNE_VALUE = 31;
    /**
     * <code>USE_TYPE__E_R_N_BROADCAST = 32;</code>
     */
    public static final int USE_TYPE__E_R_N_BROADCAST_VALUE = 32;
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_LIVE_PERFORMANCE = 33;</code>
     */
    public static final int USE_TYPE__E_R_N_DUB_FOR_LIVE_PERFORMANCE_VALUE = 33;
    /**
     * <code>USE_TYPE__E_R_N_WEBCAST = 34;</code>
     */
    public static final int USE_TYPE__E_R_N_WEBCAST_VALUE = 34;
    /**
     * <code>USE_TYPE__E_R_N_DOWNLOAD = 35;</code>
     */
    public static final int USE_TYPE__E_R_N_DOWNLOAD_VALUE = 35;
    /**
     * <code>USE_TYPE__E_R_N_NON_INTERACTIVE_STREAM = 36;</code>
     */
    public static final int USE_TYPE__E_R_N_NON_INTERACTIVE_STREAM_VALUE = 36;
    /**
     * <code>USE_TYPE__E_R_N_USE_IN_PHONE_LISTENING = 37;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_IN_PHONE_LISTENING_VALUE = 37;
    /**
     * <code>USE_TYPE__E_R_N_USE = 38;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_VALUE = 38;
    /**
     * <code>USE_TYPE__E_R_N_PLAYBACK = 39;</code>
     */
    public static final int USE_TYPE__E_R_N_PLAYBACK_VALUE = 39;
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_T_V = 40;</code>
     */
    public static final int USE_TYPE__E_R_N_DUB_FOR_T_V_VALUE = 40;
    /**
     * <code>USE_TYPE__E_R_N_PERFORM_IN_LIVE_PERFORMANCE = 41;</code>
     */
    public static final int USE_TYPE__E_R_N_PERFORM_IN_LIVE_PERFORMANCE_VALUE = 41;
    /**
     * <code>USE_TYPE__E_R_N_PODCAST = 42;</code>
     */
    public static final int USE_TYPE__E_R_N_PODCAST_VALUE = 42;
    /**
     * <code>USE_TYPE__E_R_N_TIME_INFLUENCED_STREAM = 43;</code>
     */
    public static final int USE_TYPE__E_R_N_TIME_INFLUENCED_STREAM_VALUE = 43;
    /**
     * <code>USE_TYPE__E_R_N_CONDITIONAL_DOWNLOAD = 44;</code>
     */
    public static final int USE_TYPE__E_R_N_CONDITIONAL_DOWNLOAD_VALUE = 44;
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_MOVIES = 45;</code>
     */
    public static final int USE_TYPE__E_R_N_DUB_FOR_MOVIES_VALUE = 45;
    /**
     * <code>USE_TYPE__E_R_N_DUB_FOR_PUBLIC_PERFORMANCE = 46;</code>
     */
    public static final int USE_TYPE__E_R_N_DUB_FOR_PUBLIC_PERFORMANCE_VALUE = 46;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_WALLPAPER = 47;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_WALLPAPER_VALUE = 47;
    /**
     * <code>USE_TYPE__E_R_N_USE_AS_DEVICE = 48;</code>
     */
    public static final int USE_TYPE__E_R_N_USE_AS_DEVICE_VALUE = 48;
    /**
     * <code>USE_TYPE__E_R_N_NARROWCAST = 49;</code>
     */
    public static final int USE_TYPE__E_R_N_NARROWCAST_VALUE = 49;
    /**
     * <code>USE_TYPE__E_R_N_PURCHASE_AS_PHYSICAL_PRODUCT = 50;</code>
     */
    public static final int USE_TYPE__E_R_N_PURCHASE_AS_PHYSICAL_PRODUCT_VALUE = 50;
    /**
     * <code>USE_TYPE__E_R_N_DISPLAY = 51;</code>
     */
    public static final int USE_TYPE__E_R_N_DISPLAY_VALUE = 51;
    /**
     * <code>USE_TYPE__E_R_N_RENT = 52;</code>
     */
    public static final int USE_TYPE__E_R_N_RENT_VALUE = 52;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UseType_ERN valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UseType_ERN forNumber(int value) {
      switch (value) {
        case 0: return USE_TYPE__E_R_N_DUB_FOR_RADIO;
        case 1: return USE_TYPE__E_R_N_PERFORM;
        case 2: return USE_TYPE__E_R_N_KIOSK_DOWNLOAD;
        case 3: return USE_TYPE__E_R_N_USE_AS_SCREENSAVER;
        case 4: return USE_TYPE__E_R_N_ON_DEMAND_STREAM;
        case 5: return USE_TYPE__E_R_N_USE_AS_KARAOKE;
        case 6: return USE_TYPE__E_R_N_USE_FOR_IDENTIFICATION;
        case 7: return USE_TYPE__E_R_N_PRINT;
        case 8: return USE_TYPE__E_R_N_PERFORM_AS_MUSIC_ON_HOLD;
        case 9: return USE_TYPE__E_R_N_PLAY_IN_PUBLIC;
        case 10: return USE_TYPE__E_R_N_DUB_FOR_ADVERTISEMENT;
        case 11: return USE_TYPE__E_R_N_SIMULCAST;
        case 12: return USE_TYPE__E_R_N_USE_AS_ALERT_TONE;
        case 13: return USE_TYPE__E_R_N_STREAM;
        case 14: return USE_TYPE__E_R_N_USER_DEFINED;
        case 15: return USE_TYPE__E_R_N_PRIVATE_COPY;
        case 16: return USE_TYPE__E_R_N_EXTRACT_FOR_INTERNET;
        case 17: return USE_TYPE__E_R_N_USE_AS_RINGBACK_TONE;
        case 18: return USE_TYPE__E_R_N_USE_AS_RINGBACK_TUNE;
        case 19: return USE_TYPE__E_R_N_USE_AS_RINGTONE;
        case 20: return USE_TYPE__E_R_N_CONTENT_INFLUENCED_STREAM;
        case 21: return USE_TYPE__E_R_N_PERFORM_IN_PUBLIC;
        case 22: return USE_TYPE__E_R_N_PERMANENT_DOWNLOAD;
        case 23: return USE_TYPE__E_R_N_DUB_FOR_MUSIC_ON_HOLD;
        case 24: return USE_TYPE__E_R_N_CABLE;
        case 25: return USE_TYPE__E_R_N_TETHERED_DOWNLOAD;
        case 26: return USE_TYPE__E_R_N_USE_AS_VOICE_MAIL;
        case 27: return USE_TYPE__E_R_N_USE_IN_MOBILE_PHONE_MESSAGING;
        case 28: return USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_LABEL_PROVIDED;
        case 29: return USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_USER_PROVIDED;
        case 30: return USE_TYPE__E_R_N_DUB;
        case 31: return USE_TYPE__E_R_N_USE_AS_RINGTUNE;
        case 32: return USE_TYPE__E_R_N_BROADCAST;
        case 33: return USE_TYPE__E_R_N_DUB_FOR_LIVE_PERFORMANCE;
        case 34: return USE_TYPE__E_R_N_WEBCAST;
        case 35: return USE_TYPE__E_R_N_DOWNLOAD;
        case 36: return USE_TYPE__E_R_N_NON_INTERACTIVE_STREAM;
        case 37: return USE_TYPE__E_R_N_USE_IN_PHONE_LISTENING;
        case 38: return USE_TYPE__E_R_N_USE;
        case 39: return USE_TYPE__E_R_N_PLAYBACK;
        case 40: return USE_TYPE__E_R_N_DUB_FOR_T_V;
        case 41: return USE_TYPE__E_R_N_PERFORM_IN_LIVE_PERFORMANCE;
        case 42: return USE_TYPE__E_R_N_PODCAST;
        case 43: return USE_TYPE__E_R_N_TIME_INFLUENCED_STREAM;
        case 44: return USE_TYPE__E_R_N_CONDITIONAL_DOWNLOAD;
        case 45: return USE_TYPE__E_R_N_DUB_FOR_MOVIES;
        case 46: return USE_TYPE__E_R_N_DUB_FOR_PUBLIC_PERFORMANCE;
        case 47: return USE_TYPE__E_R_N_USE_AS_WALLPAPER;
        case 48: return USE_TYPE__E_R_N_USE_AS_DEVICE;
        case 49: return USE_TYPE__E_R_N_NARROWCAST;
        case 50: return USE_TYPE__E_R_N_PURCHASE_AS_PHYSICAL_PRODUCT;
        case 51: return USE_TYPE__E_R_N_DISPLAY;
        case 52: return USE_TYPE__E_R_N_RENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UseType_ERN>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UseType_ERN> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UseType_ERN>() {
            public UseType_ERN findValueByNumber(int number) {
              return UseType_ERN.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(192);
    }

    private static final UseType_ERN[] VALUES = values();

    public static UseType_ERN valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UseType_ERN(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UseType_ERN)
  }

  /**
   * Protobuf enum {@code avs.UseType_MWNL}
   */
  public enum UseType_MWNL
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USE_TYPE__M_W_N_L_PERMANENT_DOWNLOAD = 0;</code>
     */
    USE_TYPE__M_W_N_L_PERMANENT_DOWNLOAD(0),
    /**
     * <code>USE_TYPE__M_W_N_L_USE_AS_RINGTONE = 1;</code>
     */
    USE_TYPE__M_W_N_L_USE_AS_RINGTONE(1),
    /**
     * <code>USE_TYPE__M_W_N_L_PURCHASE_AS_PHYSICAL_PRODUCT = 2;</code>
     */
    USE_TYPE__M_W_N_L_PURCHASE_AS_PHYSICAL_PRODUCT(2),
    /**
     * <code>USE_TYPE__M_W_N_L_ON_DEMAND_STREAM = 3;</code>
     */
    USE_TYPE__M_W_N_L_ON_DEMAND_STREAM(3),
    ;

    /**
     * <code>USE_TYPE__M_W_N_L_PERMANENT_DOWNLOAD = 0;</code>
     */
    public static final int USE_TYPE__M_W_N_L_PERMANENT_DOWNLOAD_VALUE = 0;
    /**
     * <code>USE_TYPE__M_W_N_L_USE_AS_RINGTONE = 1;</code>
     */
    public static final int USE_TYPE__M_W_N_L_USE_AS_RINGTONE_VALUE = 1;
    /**
     * <code>USE_TYPE__M_W_N_L_PURCHASE_AS_PHYSICAL_PRODUCT = 2;</code>
     */
    public static final int USE_TYPE__M_W_N_L_PURCHASE_AS_PHYSICAL_PRODUCT_VALUE = 2;
    /**
     * <code>USE_TYPE__M_W_N_L_ON_DEMAND_STREAM = 3;</code>
     */
    public static final int USE_TYPE__M_W_N_L_ON_DEMAND_STREAM_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UseType_MWNL valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UseType_MWNL forNumber(int value) {
      switch (value) {
        case 0: return USE_TYPE__M_W_N_L_PERMANENT_DOWNLOAD;
        case 1: return USE_TYPE__M_W_N_L_USE_AS_RINGTONE;
        case 2: return USE_TYPE__M_W_N_L_PURCHASE_AS_PHYSICAL_PRODUCT;
        case 3: return USE_TYPE__M_W_N_L_ON_DEMAND_STREAM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UseType_MWNL>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UseType_MWNL> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UseType_MWNL>() {
            public UseType_MWNL findValueByNumber(int number) {
              return UseType_MWNL.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(193);
    }

    private static final UseType_MWNL[] VALUES = values();

    public static UseType_MWNL valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UseType_MWNL(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UseType_MWNL)
  }

  /**
   * Protobuf enum {@code avs.UseType_RDR}
   */
  public enum UseType_RDR
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USE_TYPE__R_D_R_ALL = 0;</code>
     */
    USE_TYPE__R_D_R_ALL(0),
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_RADIO = 1;</code>
     */
    USE_TYPE__R_D_R_DUB_FOR_RADIO(1),
    /**
     * <code>USE_TYPE__R_D_R_PERFORM = 2;</code>
     */
    USE_TYPE__R_D_R_PERFORM(2),
    /**
     * <code>USE_TYPE__R_D_R_KIOSK_DOWNLOAD = 3;</code>
     */
    USE_TYPE__R_D_R_KIOSK_DOWNLOAD(3),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_SCREENSAVER = 4;</code>
     */
    USE_TYPE__R_D_R_USE_AS_SCREENSAVER(4),
    /**
     * <code>USE_TYPE__R_D_R_ON_DEMAND_STREAM = 5;</code>
     */
    USE_TYPE__R_D_R_ON_DEMAND_STREAM(5),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_KARAOKE = 6;</code>
     */
    USE_TYPE__R_D_R_USE_AS_KARAOKE(6),
    /**
     * <code>USE_TYPE__R_D_R_USE_FOR_IDENTIFICATION = 7;</code>
     */
    USE_TYPE__R_D_R_USE_FOR_IDENTIFICATION(7),
    /**
     * <code>USE_TYPE__R_D_R_AS_PER_CONTRACT = 8;</code>
     */
    USE_TYPE__R_D_R_AS_PER_CONTRACT(8),
    /**
     * <code>USE_TYPE__R_D_R_PRINT = 9;</code>
     */
    USE_TYPE__R_D_R_PRINT(9),
    /**
     * <code>USE_TYPE__R_D_R_PERFORM_AS_MUSIC_ON_HOLD = 10;</code>
     */
    USE_TYPE__R_D_R_PERFORM_AS_MUSIC_ON_HOLD(10),
    /**
     * <code>USE_TYPE__R_D_R_PLAY_IN_PUBLIC = 11;</code>
     */
    USE_TYPE__R_D_R_PLAY_IN_PUBLIC(11),
    /**
     * <code>USE_TYPE__R_D_R_UNKNOWN = 12;</code>
     */
    USE_TYPE__R_D_R_UNKNOWN(12),
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_ADVERTISEMENT = 13;</code>
     */
    USE_TYPE__R_D_R_DUB_FOR_ADVERTISEMENT(13),
    /**
     * <code>USE_TYPE__R_D_R_SIMULCAST = 14;</code>
     */
    USE_TYPE__R_D_R_SIMULCAST(14),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_ALERT_TONE = 15;</code>
     */
    USE_TYPE__R_D_R_USE_AS_ALERT_TONE(15),
    /**
     * <code>USE_TYPE__R_D_R_STREAM = 16;</code>
     */
    USE_TYPE__R_D_R_STREAM(16),
    /**
     * <code>USE_TYPE__R_D_R_USER_DEFINED = 17;</code>
     */
    USE_TYPE__R_D_R_USER_DEFINED(17),
    /**
     * <code>USE_TYPE__R_D_R_PRIVATE_COPY = 18;</code>
     */
    USE_TYPE__R_D_R_PRIVATE_COPY(18),
    /**
     * <code>USE_TYPE__R_D_R_EXTRACT_FOR_INTERNET = 19;</code>
     */
    USE_TYPE__R_D_R_EXTRACT_FOR_INTERNET(19),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_RINGBACK_TONE = 20;</code>
     */
    USE_TYPE__R_D_R_USE_AS_RINGBACK_TONE(20),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_RINGBACK_TUNE = 21;</code>
     */
    USE_TYPE__R_D_R_USE_AS_RINGBACK_TUNE(21),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_RINGTONE = 22;</code>
     */
    USE_TYPE__R_D_R_USE_AS_RINGTONE(22),
    /**
     * <code>USE_TYPE__R_D_R_CONTENT_INFLUENCED_STREAM = 23;</code>
     */
    USE_TYPE__R_D_R_CONTENT_INFLUENCED_STREAM(23),
    /**
     * <code>USE_TYPE__R_D_R_PERFORM_IN_PUBLIC = 24;</code>
     */
    USE_TYPE__R_D_R_PERFORM_IN_PUBLIC(24),
    /**
     * <code>USE_TYPE__R_D_R_PERMANENT_DOWNLOAD = 25;</code>
     */
    USE_TYPE__R_D_R_PERMANENT_DOWNLOAD(25),
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_MUSIC_ON_HOLD = 26;</code>
     */
    USE_TYPE__R_D_R_DUB_FOR_MUSIC_ON_HOLD(26),
    /**
     * <code>USE_TYPE__R_D_R_CABLE = 27;</code>
     */
    USE_TYPE__R_D_R_CABLE(27),
    /**
     * <code>USE_TYPE__R_D_R_TETHERED_DOWNLOAD = 28;</code>
     */
    USE_TYPE__R_D_R_TETHERED_DOWNLOAD(28),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_VOICE_MAIL = 29;</code>
     */
    USE_TYPE__R_D_R_USE_AS_VOICE_MAIL(29),
    /**
     * <code>USE_TYPE__R_D_R_USE_IN_MOBILE_PHONE_MESSAGING = 30;</code>
     */
    USE_TYPE__R_D_R_USE_IN_MOBILE_PHONE_MESSAGING(30),
    /**
     * <code>USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_LABEL_PROVIDED = 31;</code>
     */
    USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_LABEL_PROVIDED(31),
    /**
     * <code>USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_USER_PROVIDED = 32;</code>
     */
    USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_USER_PROVIDED(32),
    /**
     * <code>USE_TYPE__R_D_R_DUB = 33;</code>
     */
    USE_TYPE__R_D_R_DUB(33),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_RINGTUNE = 34;</code>
     */
    USE_TYPE__R_D_R_USE_AS_RINGTUNE(34),
    /**
     * <code>USE_TYPE__R_D_R_BROADCAST = 35;</code>
     */
    USE_TYPE__R_D_R_BROADCAST(35),
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_LIVE_PERFORMANCE = 36;</code>
     */
    USE_TYPE__R_D_R_DUB_FOR_LIVE_PERFORMANCE(36),
    /**
     * <code>USE_TYPE__R_D_R_WEBCAST = 37;</code>
     */
    USE_TYPE__R_D_R_WEBCAST(37),
    /**
     * <code>USE_TYPE__R_D_R_DOWNLOAD = 38;</code>
     */
    USE_TYPE__R_D_R_DOWNLOAD(38),
    /**
     * <code>USE_TYPE__R_D_R_NON_INTERACTIVE_STREAM = 39;</code>
     */
    USE_TYPE__R_D_R_NON_INTERACTIVE_STREAM(39),
    /**
     * <code>USE_TYPE__R_D_R_USE_IN_PHONE_LISTENING = 40;</code>
     */
    USE_TYPE__R_D_R_USE_IN_PHONE_LISTENING(40),
    /**
     * <code>USE_TYPE__R_D_R_USE = 41;</code>
     */
    USE_TYPE__R_D_R_USE(41),
    /**
     * <code>USE_TYPE__R_D_R_PLAYBACK = 42;</code>
     */
    USE_TYPE__R_D_R_PLAYBACK(42),
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_T_V = 43;</code>
     */
    USE_TYPE__R_D_R_DUB_FOR_T_V(43),
    /**
     * <code>USE_TYPE__R_D_R_PERFORM_IN_LIVE_PERFORMANCE = 44;</code>
     */
    USE_TYPE__R_D_R_PERFORM_IN_LIVE_PERFORMANCE(44),
    /**
     * <code>USE_TYPE__R_D_R_PODCAST = 45;</code>
     */
    USE_TYPE__R_D_R_PODCAST(45),
    /**
     * <code>USE_TYPE__R_D_R_TIME_INFLUENCED_STREAM = 46;</code>
     */
    USE_TYPE__R_D_R_TIME_INFLUENCED_STREAM(46),
    /**
     * <code>USE_TYPE__R_D_R_CONDITIONAL_DOWNLOAD = 47;</code>
     */
    USE_TYPE__R_D_R_CONDITIONAL_DOWNLOAD(47),
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_MOVIES = 48;</code>
     */
    USE_TYPE__R_D_R_DUB_FOR_MOVIES(48),
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_PUBLIC_PERFORMANCE = 49;</code>
     */
    USE_TYPE__R_D_R_DUB_FOR_PUBLIC_PERFORMANCE(49),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_WALLPAPER = 50;</code>
     */
    USE_TYPE__R_D_R_USE_AS_WALLPAPER(50),
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_DEVICE = 51;</code>
     */
    USE_TYPE__R_D_R_USE_AS_DEVICE(51),
    /**
     * <code>USE_TYPE__R_D_R_NARROWCAST = 52;</code>
     */
    USE_TYPE__R_D_R_NARROWCAST(52),
    /**
     * <code>USE_TYPE__R_D_R_PURCHASE_AS_PHYSICAL_PRODUCT = 53;</code>
     */
    USE_TYPE__R_D_R_PURCHASE_AS_PHYSICAL_PRODUCT(53),
    /**
     * <code>USE_TYPE__R_D_R_DISPLAY = 54;</code>
     */
    USE_TYPE__R_D_R_DISPLAY(54),
    /**
     * <code>USE_TYPE__R_D_R_RENT = 55;</code>
     */
    USE_TYPE__R_D_R_RENT(55),
    ;

    /**
     * <code>USE_TYPE__R_D_R_ALL = 0;</code>
     */
    public static final int USE_TYPE__R_D_R_ALL_VALUE = 0;
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_RADIO = 1;</code>
     */
    public static final int USE_TYPE__R_D_R_DUB_FOR_RADIO_VALUE = 1;
    /**
     * <code>USE_TYPE__R_D_R_PERFORM = 2;</code>
     */
    public static final int USE_TYPE__R_D_R_PERFORM_VALUE = 2;
    /**
     * <code>USE_TYPE__R_D_R_KIOSK_DOWNLOAD = 3;</code>
     */
    public static final int USE_TYPE__R_D_R_KIOSK_DOWNLOAD_VALUE = 3;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_SCREENSAVER = 4;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_SCREENSAVER_VALUE = 4;
    /**
     * <code>USE_TYPE__R_D_R_ON_DEMAND_STREAM = 5;</code>
     */
    public static final int USE_TYPE__R_D_R_ON_DEMAND_STREAM_VALUE = 5;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_KARAOKE = 6;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_KARAOKE_VALUE = 6;
    /**
     * <code>USE_TYPE__R_D_R_USE_FOR_IDENTIFICATION = 7;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_FOR_IDENTIFICATION_VALUE = 7;
    /**
     * <code>USE_TYPE__R_D_R_AS_PER_CONTRACT = 8;</code>
     */
    public static final int USE_TYPE__R_D_R_AS_PER_CONTRACT_VALUE = 8;
    /**
     * <code>USE_TYPE__R_D_R_PRINT = 9;</code>
     */
    public static final int USE_TYPE__R_D_R_PRINT_VALUE = 9;
    /**
     * <code>USE_TYPE__R_D_R_PERFORM_AS_MUSIC_ON_HOLD = 10;</code>
     */
    public static final int USE_TYPE__R_D_R_PERFORM_AS_MUSIC_ON_HOLD_VALUE = 10;
    /**
     * <code>USE_TYPE__R_D_R_PLAY_IN_PUBLIC = 11;</code>
     */
    public static final int USE_TYPE__R_D_R_PLAY_IN_PUBLIC_VALUE = 11;
    /**
     * <code>USE_TYPE__R_D_R_UNKNOWN = 12;</code>
     */
    public static final int USE_TYPE__R_D_R_UNKNOWN_VALUE = 12;
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_ADVERTISEMENT = 13;</code>
     */
    public static final int USE_TYPE__R_D_R_DUB_FOR_ADVERTISEMENT_VALUE = 13;
    /**
     * <code>USE_TYPE__R_D_R_SIMULCAST = 14;</code>
     */
    public static final int USE_TYPE__R_D_R_SIMULCAST_VALUE = 14;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_ALERT_TONE = 15;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_ALERT_TONE_VALUE = 15;
    /**
     * <code>USE_TYPE__R_D_R_STREAM = 16;</code>
     */
    public static final int USE_TYPE__R_D_R_STREAM_VALUE = 16;
    /**
     * <code>USE_TYPE__R_D_R_USER_DEFINED = 17;</code>
     */
    public static final int USE_TYPE__R_D_R_USER_DEFINED_VALUE = 17;
    /**
     * <code>USE_TYPE__R_D_R_PRIVATE_COPY = 18;</code>
     */
    public static final int USE_TYPE__R_D_R_PRIVATE_COPY_VALUE = 18;
    /**
     * <code>USE_TYPE__R_D_R_EXTRACT_FOR_INTERNET = 19;</code>
     */
    public static final int USE_TYPE__R_D_R_EXTRACT_FOR_INTERNET_VALUE = 19;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_RINGBACK_TONE = 20;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_RINGBACK_TONE_VALUE = 20;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_RINGBACK_TUNE = 21;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_RINGBACK_TUNE_VALUE = 21;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_RINGTONE = 22;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_RINGTONE_VALUE = 22;
    /**
     * <code>USE_TYPE__R_D_R_CONTENT_INFLUENCED_STREAM = 23;</code>
     */
    public static final int USE_TYPE__R_D_R_CONTENT_INFLUENCED_STREAM_VALUE = 23;
    /**
     * <code>USE_TYPE__R_D_R_PERFORM_IN_PUBLIC = 24;</code>
     */
    public static final int USE_TYPE__R_D_R_PERFORM_IN_PUBLIC_VALUE = 24;
    /**
     * <code>USE_TYPE__R_D_R_PERMANENT_DOWNLOAD = 25;</code>
     */
    public static final int USE_TYPE__R_D_R_PERMANENT_DOWNLOAD_VALUE = 25;
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_MUSIC_ON_HOLD = 26;</code>
     */
    public static final int USE_TYPE__R_D_R_DUB_FOR_MUSIC_ON_HOLD_VALUE = 26;
    /**
     * <code>USE_TYPE__R_D_R_CABLE = 27;</code>
     */
    public static final int USE_TYPE__R_D_R_CABLE_VALUE = 27;
    /**
     * <code>USE_TYPE__R_D_R_TETHERED_DOWNLOAD = 28;</code>
     */
    public static final int USE_TYPE__R_D_R_TETHERED_DOWNLOAD_VALUE = 28;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_VOICE_MAIL = 29;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_VOICE_MAIL_VALUE = 29;
    /**
     * <code>USE_TYPE__R_D_R_USE_IN_MOBILE_PHONE_MESSAGING = 30;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_IN_MOBILE_PHONE_MESSAGING_VALUE = 30;
    /**
     * <code>USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_LABEL_PROVIDED = 31;</code>
     */
    public static final int USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_LABEL_PROVIDED_VALUE = 31;
    /**
     * <code>USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_USER_PROVIDED = 32;</code>
     */
    public static final int USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_USER_PROVIDED_VALUE = 32;
    /**
     * <code>USE_TYPE__R_D_R_DUB = 33;</code>
     */
    public static final int USE_TYPE__R_D_R_DUB_VALUE = 33;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_RINGTUNE = 34;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_RINGTUNE_VALUE = 34;
    /**
     * <code>USE_TYPE__R_D_R_BROADCAST = 35;</code>
     */
    public static final int USE_TYPE__R_D_R_BROADCAST_VALUE = 35;
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_LIVE_PERFORMANCE = 36;</code>
     */
    public static final int USE_TYPE__R_D_R_DUB_FOR_LIVE_PERFORMANCE_VALUE = 36;
    /**
     * <code>USE_TYPE__R_D_R_WEBCAST = 37;</code>
     */
    public static final int USE_TYPE__R_D_R_WEBCAST_VALUE = 37;
    /**
     * <code>USE_TYPE__R_D_R_DOWNLOAD = 38;</code>
     */
    public static final int USE_TYPE__R_D_R_DOWNLOAD_VALUE = 38;
    /**
     * <code>USE_TYPE__R_D_R_NON_INTERACTIVE_STREAM = 39;</code>
     */
    public static final int USE_TYPE__R_D_R_NON_INTERACTIVE_STREAM_VALUE = 39;
    /**
     * <code>USE_TYPE__R_D_R_USE_IN_PHONE_LISTENING = 40;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_IN_PHONE_LISTENING_VALUE = 40;
    /**
     * <code>USE_TYPE__R_D_R_USE = 41;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_VALUE = 41;
    /**
     * <code>USE_TYPE__R_D_R_PLAYBACK = 42;</code>
     */
    public static final int USE_TYPE__R_D_R_PLAYBACK_VALUE = 42;
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_T_V = 43;</code>
     */
    public static final int USE_TYPE__R_D_R_DUB_FOR_T_V_VALUE = 43;
    /**
     * <code>USE_TYPE__R_D_R_PERFORM_IN_LIVE_PERFORMANCE = 44;</code>
     */
    public static final int USE_TYPE__R_D_R_PERFORM_IN_LIVE_PERFORMANCE_VALUE = 44;
    /**
     * <code>USE_TYPE__R_D_R_PODCAST = 45;</code>
     */
    public static final int USE_TYPE__R_D_R_PODCAST_VALUE = 45;
    /**
     * <code>USE_TYPE__R_D_R_TIME_INFLUENCED_STREAM = 46;</code>
     */
    public static final int USE_TYPE__R_D_R_TIME_INFLUENCED_STREAM_VALUE = 46;
    /**
     * <code>USE_TYPE__R_D_R_CONDITIONAL_DOWNLOAD = 47;</code>
     */
    public static final int USE_TYPE__R_D_R_CONDITIONAL_DOWNLOAD_VALUE = 47;
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_MOVIES = 48;</code>
     */
    public static final int USE_TYPE__R_D_R_DUB_FOR_MOVIES_VALUE = 48;
    /**
     * <code>USE_TYPE__R_D_R_DUB_FOR_PUBLIC_PERFORMANCE = 49;</code>
     */
    public static final int USE_TYPE__R_D_R_DUB_FOR_PUBLIC_PERFORMANCE_VALUE = 49;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_WALLPAPER = 50;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_WALLPAPER_VALUE = 50;
    /**
     * <code>USE_TYPE__R_D_R_USE_AS_DEVICE = 51;</code>
     */
    public static final int USE_TYPE__R_D_R_USE_AS_DEVICE_VALUE = 51;
    /**
     * <code>USE_TYPE__R_D_R_NARROWCAST = 52;</code>
     */
    public static final int USE_TYPE__R_D_R_NARROWCAST_VALUE = 52;
    /**
     * <code>USE_TYPE__R_D_R_PURCHASE_AS_PHYSICAL_PRODUCT = 53;</code>
     */
    public static final int USE_TYPE__R_D_R_PURCHASE_AS_PHYSICAL_PRODUCT_VALUE = 53;
    /**
     * <code>USE_TYPE__R_D_R_DISPLAY = 54;</code>
     */
    public static final int USE_TYPE__R_D_R_DISPLAY_VALUE = 54;
    /**
     * <code>USE_TYPE__R_D_R_RENT = 55;</code>
     */
    public static final int USE_TYPE__R_D_R_RENT_VALUE = 55;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UseType_RDR valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UseType_RDR forNumber(int value) {
      switch (value) {
        case 0: return USE_TYPE__R_D_R_ALL;
        case 1: return USE_TYPE__R_D_R_DUB_FOR_RADIO;
        case 2: return USE_TYPE__R_D_R_PERFORM;
        case 3: return USE_TYPE__R_D_R_KIOSK_DOWNLOAD;
        case 4: return USE_TYPE__R_D_R_USE_AS_SCREENSAVER;
        case 5: return USE_TYPE__R_D_R_ON_DEMAND_STREAM;
        case 6: return USE_TYPE__R_D_R_USE_AS_KARAOKE;
        case 7: return USE_TYPE__R_D_R_USE_FOR_IDENTIFICATION;
        case 8: return USE_TYPE__R_D_R_AS_PER_CONTRACT;
        case 9: return USE_TYPE__R_D_R_PRINT;
        case 10: return USE_TYPE__R_D_R_PERFORM_AS_MUSIC_ON_HOLD;
        case 11: return USE_TYPE__R_D_R_PLAY_IN_PUBLIC;
        case 12: return USE_TYPE__R_D_R_UNKNOWN;
        case 13: return USE_TYPE__R_D_R_DUB_FOR_ADVERTISEMENT;
        case 14: return USE_TYPE__R_D_R_SIMULCAST;
        case 15: return USE_TYPE__R_D_R_USE_AS_ALERT_TONE;
        case 16: return USE_TYPE__R_D_R_STREAM;
        case 17: return USE_TYPE__R_D_R_USER_DEFINED;
        case 18: return USE_TYPE__R_D_R_PRIVATE_COPY;
        case 19: return USE_TYPE__R_D_R_EXTRACT_FOR_INTERNET;
        case 20: return USE_TYPE__R_D_R_USE_AS_RINGBACK_TONE;
        case 21: return USE_TYPE__R_D_R_USE_AS_RINGBACK_TUNE;
        case 22: return USE_TYPE__R_D_R_USE_AS_RINGTONE;
        case 23: return USE_TYPE__R_D_R_CONTENT_INFLUENCED_STREAM;
        case 24: return USE_TYPE__R_D_R_PERFORM_IN_PUBLIC;
        case 25: return USE_TYPE__R_D_R_PERMANENT_DOWNLOAD;
        case 26: return USE_TYPE__R_D_R_DUB_FOR_MUSIC_ON_HOLD;
        case 27: return USE_TYPE__R_D_R_CABLE;
        case 28: return USE_TYPE__R_D_R_TETHERED_DOWNLOAD;
        case 29: return USE_TYPE__R_D_R_USE_AS_VOICE_MAIL;
        case 30: return USE_TYPE__R_D_R_USE_IN_MOBILE_PHONE_MESSAGING;
        case 31: return USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_LABEL_PROVIDED;
        case 32: return USE_TYPE__R_D_R_USER_MAKE_AVAILABLE_USER_PROVIDED;
        case 33: return USE_TYPE__R_D_R_DUB;
        case 34: return USE_TYPE__R_D_R_USE_AS_RINGTUNE;
        case 35: return USE_TYPE__R_D_R_BROADCAST;
        case 36: return USE_TYPE__R_D_R_DUB_FOR_LIVE_PERFORMANCE;
        case 37: return USE_TYPE__R_D_R_WEBCAST;
        case 38: return USE_TYPE__R_D_R_DOWNLOAD;
        case 39: return USE_TYPE__R_D_R_NON_INTERACTIVE_STREAM;
        case 40: return USE_TYPE__R_D_R_USE_IN_PHONE_LISTENING;
        case 41: return USE_TYPE__R_D_R_USE;
        case 42: return USE_TYPE__R_D_R_PLAYBACK;
        case 43: return USE_TYPE__R_D_R_DUB_FOR_T_V;
        case 44: return USE_TYPE__R_D_R_PERFORM_IN_LIVE_PERFORMANCE;
        case 45: return USE_TYPE__R_D_R_PODCAST;
        case 46: return USE_TYPE__R_D_R_TIME_INFLUENCED_STREAM;
        case 47: return USE_TYPE__R_D_R_CONDITIONAL_DOWNLOAD;
        case 48: return USE_TYPE__R_D_R_DUB_FOR_MOVIES;
        case 49: return USE_TYPE__R_D_R_DUB_FOR_PUBLIC_PERFORMANCE;
        case 50: return USE_TYPE__R_D_R_USE_AS_WALLPAPER;
        case 51: return USE_TYPE__R_D_R_USE_AS_DEVICE;
        case 52: return USE_TYPE__R_D_R_NARROWCAST;
        case 53: return USE_TYPE__R_D_R_PURCHASE_AS_PHYSICAL_PRODUCT;
        case 54: return USE_TYPE__R_D_R_DISPLAY;
        case 55: return USE_TYPE__R_D_R_RENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UseType_RDR>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UseType_RDR> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UseType_RDR>() {
            public UseType_RDR findValueByNumber(int number) {
              return UseType_RDR.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(194);
    }

    private static final UseType_RDR[] VALUES = values();

    public static UseType_RDR valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UseType_RDR(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UseType_RDR)
  }

  /**
   * Protobuf enum {@code avs.UserInterfaceType}
   */
  public enum UserInterfaceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USER_INTERFACE_TYPE_JUKEBOX = 0;</code>
     */
    USER_INTERFACE_TYPE_JUKEBOX(0),
    /**
     * <code>USER_INTERFACE_TYPE_SMART_SPEAKERS = 1;</code>
     */
    USER_INTERFACE_TYPE_SMART_SPEAKERS(1),
    /**
     * <code>USER_INTERFACE_TYPE_LOCAL_STORAGE_JUKEBOX = 2;</code>
     */
    USER_INTERFACE_TYPE_LOCAL_STORAGE_JUKEBOX(2),
    /**
     * <code>USER_INTERFACE_TYPE_REMOTE_STORAGE_JUKEBOX = 3;</code>
     */
    USER_INTERFACE_TYPE_REMOTE_STORAGE_JUKEBOX(3),
    /**
     * <code>USER_INTERFACE_TYPE_CONNECTED_DEVICE = 4;</code>
     */
    USER_INTERFACE_TYPE_CONNECTED_DEVICE(4),
    /**
     * <code>USER_INTERFACE_TYPE_GAME_CONSOLE = 5;</code>
     */
    USER_INTERFACE_TYPE_GAME_CONSOLE(5),
    /**
     * <code>USER_INTERFACE_TYPE_AS_PER_CONTRACT = 6;</code>
     */
    USER_INTERFACE_TYPE_AS_PER_CONTRACT(6),
    /**
     * <code>USER_INTERFACE_TYPE_PHYSICAL_MEDIA_WRITER = 7;</code>
     */
    USER_INTERFACE_TYPE_PHYSICAL_MEDIA_WRITER(7),
    /**
     * <code>USER_INTERFACE_TYPE_PERSONAL_COMPUTER = 8;</code>
     */
    USER_INTERFACE_TYPE_PERSONAL_COMPUTER(8),
    /**
     * <code>USER_INTERFACE_TYPE_UNKNOWN = 9;</code>
     */
    USER_INTERFACE_TYPE_UNKNOWN(9),
    /**
     * <code>USER_INTERFACE_TYPE_KARAOKE_MACHINE = 10;</code>
     */
    USER_INTERFACE_TYPE_KARAOKE_MACHINE(10),
    /**
     * <code>USER_INTERFACE_TYPE_PORTABLE_DEVICE = 11;</code>
     */
    USER_INTERFACE_TYPE_PORTABLE_DEVICE(11),
    /**
     * <code>USER_INTERFACE_TYPE_KIOSK = 12;</code>
     */
    USER_INTERFACE_TYPE_KIOSK(12),
    /**
     * <code>USER_INTERFACE_TYPE_USER_DEFINED = 13;</code>
     */
    USER_INTERFACE_TYPE_USER_DEFINED(13),
    ;

    /**
     * <code>USER_INTERFACE_TYPE_JUKEBOX = 0;</code>
     */
    public static final int USER_INTERFACE_TYPE_JUKEBOX_VALUE = 0;
    /**
     * <code>USER_INTERFACE_TYPE_SMART_SPEAKERS = 1;</code>
     */
    public static final int USER_INTERFACE_TYPE_SMART_SPEAKERS_VALUE = 1;
    /**
     * <code>USER_INTERFACE_TYPE_LOCAL_STORAGE_JUKEBOX = 2;</code>
     */
    public static final int USER_INTERFACE_TYPE_LOCAL_STORAGE_JUKEBOX_VALUE = 2;
    /**
     * <code>USER_INTERFACE_TYPE_REMOTE_STORAGE_JUKEBOX = 3;</code>
     */
    public static final int USER_INTERFACE_TYPE_REMOTE_STORAGE_JUKEBOX_VALUE = 3;
    /**
     * <code>USER_INTERFACE_TYPE_CONNECTED_DEVICE = 4;</code>
     */
    public static final int USER_INTERFACE_TYPE_CONNECTED_DEVICE_VALUE = 4;
    /**
     * <code>USER_INTERFACE_TYPE_GAME_CONSOLE = 5;</code>
     */
    public static final int USER_INTERFACE_TYPE_GAME_CONSOLE_VALUE = 5;
    /**
     * <code>USER_INTERFACE_TYPE_AS_PER_CONTRACT = 6;</code>
     */
    public static final int USER_INTERFACE_TYPE_AS_PER_CONTRACT_VALUE = 6;
    /**
     * <code>USER_INTERFACE_TYPE_PHYSICAL_MEDIA_WRITER = 7;</code>
     */
    public static final int USER_INTERFACE_TYPE_PHYSICAL_MEDIA_WRITER_VALUE = 7;
    /**
     * <code>USER_INTERFACE_TYPE_PERSONAL_COMPUTER = 8;</code>
     */
    public static final int USER_INTERFACE_TYPE_PERSONAL_COMPUTER_VALUE = 8;
    /**
     * <code>USER_INTERFACE_TYPE_UNKNOWN = 9;</code>
     */
    public static final int USER_INTERFACE_TYPE_UNKNOWN_VALUE = 9;
    /**
     * <code>USER_INTERFACE_TYPE_KARAOKE_MACHINE = 10;</code>
     */
    public static final int USER_INTERFACE_TYPE_KARAOKE_MACHINE_VALUE = 10;
    /**
     * <code>USER_INTERFACE_TYPE_PORTABLE_DEVICE = 11;</code>
     */
    public static final int USER_INTERFACE_TYPE_PORTABLE_DEVICE_VALUE = 11;
    /**
     * <code>USER_INTERFACE_TYPE_KIOSK = 12;</code>
     */
    public static final int USER_INTERFACE_TYPE_KIOSK_VALUE = 12;
    /**
     * <code>USER_INTERFACE_TYPE_USER_DEFINED = 13;</code>
     */
    public static final int USER_INTERFACE_TYPE_USER_DEFINED_VALUE = 13;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UserInterfaceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UserInterfaceType forNumber(int value) {
      switch (value) {
        case 0: return USER_INTERFACE_TYPE_JUKEBOX;
        case 1: return USER_INTERFACE_TYPE_SMART_SPEAKERS;
        case 2: return USER_INTERFACE_TYPE_LOCAL_STORAGE_JUKEBOX;
        case 3: return USER_INTERFACE_TYPE_REMOTE_STORAGE_JUKEBOX;
        case 4: return USER_INTERFACE_TYPE_CONNECTED_DEVICE;
        case 5: return USER_INTERFACE_TYPE_GAME_CONSOLE;
        case 6: return USER_INTERFACE_TYPE_AS_PER_CONTRACT;
        case 7: return USER_INTERFACE_TYPE_PHYSICAL_MEDIA_WRITER;
        case 8: return USER_INTERFACE_TYPE_PERSONAL_COMPUTER;
        case 9: return USER_INTERFACE_TYPE_UNKNOWN;
        case 10: return USER_INTERFACE_TYPE_KARAOKE_MACHINE;
        case 11: return USER_INTERFACE_TYPE_PORTABLE_DEVICE;
        case 12: return USER_INTERFACE_TYPE_KIOSK;
        case 13: return USER_INTERFACE_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserInterfaceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UserInterfaceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserInterfaceType>() {
            public UserInterfaceType findValueByNumber(int number) {
              return UserInterfaceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(195);
    }

    private static final UserInterfaceType[] VALUES = values();

    public static UserInterfaceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UserInterfaceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UserInterfaceType)
  }

  /**
   * Protobuf enum {@code avs.UserInterfaceType_ERN}
   */
  public enum UserInterfaceType_ERN
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_JUKEBOX = 0;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_JUKEBOX(0),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_PHYSICAL_MEDIA_WRITER = 1;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_PHYSICAL_MEDIA_WRITER(1),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_PERSONAL_COMPUTER = 2;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_PERSONAL_COMPUTER(2),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_KARAOKE_MACHINE = 3;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_KARAOKE_MACHINE(3),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_PORTABLE_DEVICE = 4;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_PORTABLE_DEVICE(4),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_SMART_SPEAKERS = 5;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_SMART_SPEAKERS(5),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_KIOSK = 6;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_KIOSK(6),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_LOCAL_STORAGE_JUKEBOX = 7;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_LOCAL_STORAGE_JUKEBOX(7),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_REMOTE_STORAGE_JUKEBOX = 8;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_REMOTE_STORAGE_JUKEBOX(8),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_USER_DEFINED = 9;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_USER_DEFINED(9),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_CONNECTED_DEVICE = 10;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_CONNECTED_DEVICE(10),
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_GAME_CONSOLE = 11;</code>
     */
    USER_INTERFACE_TYPE__E_R_N_GAME_CONSOLE(11),
    ;

    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_JUKEBOX = 0;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_JUKEBOX_VALUE = 0;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_PHYSICAL_MEDIA_WRITER = 1;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_PHYSICAL_MEDIA_WRITER_VALUE = 1;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_PERSONAL_COMPUTER = 2;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_PERSONAL_COMPUTER_VALUE = 2;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_KARAOKE_MACHINE = 3;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_KARAOKE_MACHINE_VALUE = 3;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_PORTABLE_DEVICE = 4;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_PORTABLE_DEVICE_VALUE = 4;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_SMART_SPEAKERS = 5;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_SMART_SPEAKERS_VALUE = 5;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_KIOSK = 6;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_KIOSK_VALUE = 6;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_LOCAL_STORAGE_JUKEBOX = 7;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_LOCAL_STORAGE_JUKEBOX_VALUE = 7;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_REMOTE_STORAGE_JUKEBOX = 8;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_REMOTE_STORAGE_JUKEBOX_VALUE = 8;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_USER_DEFINED = 9;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_USER_DEFINED_VALUE = 9;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_CONNECTED_DEVICE = 10;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_CONNECTED_DEVICE_VALUE = 10;
    /**
     * <code>USER_INTERFACE_TYPE__E_R_N_GAME_CONSOLE = 11;</code>
     */
    public static final int USER_INTERFACE_TYPE__E_R_N_GAME_CONSOLE_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UserInterfaceType_ERN valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UserInterfaceType_ERN forNumber(int value) {
      switch (value) {
        case 0: return USER_INTERFACE_TYPE__E_R_N_JUKEBOX;
        case 1: return USER_INTERFACE_TYPE__E_R_N_PHYSICAL_MEDIA_WRITER;
        case 2: return USER_INTERFACE_TYPE__E_R_N_PERSONAL_COMPUTER;
        case 3: return USER_INTERFACE_TYPE__E_R_N_KARAOKE_MACHINE;
        case 4: return USER_INTERFACE_TYPE__E_R_N_PORTABLE_DEVICE;
        case 5: return USER_INTERFACE_TYPE__E_R_N_SMART_SPEAKERS;
        case 6: return USER_INTERFACE_TYPE__E_R_N_KIOSK;
        case 7: return USER_INTERFACE_TYPE__E_R_N_LOCAL_STORAGE_JUKEBOX;
        case 8: return USER_INTERFACE_TYPE__E_R_N_REMOTE_STORAGE_JUKEBOX;
        case 9: return USER_INTERFACE_TYPE__E_R_N_USER_DEFINED;
        case 10: return USER_INTERFACE_TYPE__E_R_N_CONNECTED_DEVICE;
        case 11: return USER_INTERFACE_TYPE__E_R_N_GAME_CONSOLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserInterfaceType_ERN>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UserInterfaceType_ERN> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserInterfaceType_ERN>() {
            public UserInterfaceType_ERN findValueByNumber(int number) {
              return UserInterfaceType_ERN.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(196);
    }

    private static final UserInterfaceType_ERN[] VALUES = values();

    public static UserInterfaceType_ERN valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UserInterfaceType_ERN(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.UserInterfaceType_ERN)
  }

  /**
   * Protobuf enum {@code avs.VersionType}
   */
  public enum VersionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VERSION_TYPE_ALBUM_VERSION = 0;</code>
     */
    VERSION_TYPE_ALBUM_VERSION(0),
    /**
     * <code>VERSION_TYPE_A_CAPPELLA_VERSION = 1;</code>
     */
    VERSION_TYPE_A_CAPPELLA_VERSION(1),
    /**
     * <code>VERSION_TYPE_EDITED_VERSION = 2;</code>
     */
    VERSION_TYPE_EDITED_VERSION(2),
    /**
     * <code>VERSION_TYPE_INSTRUMENTAL_VERSION = 3;</code>
     */
    VERSION_TYPE_INSTRUMENTAL_VERSION(3),
    /**
     * <code>VERSION_TYPE_ALTERNATIVE_VERSION = 4;</code>
     */
    VERSION_TYPE_ALTERNATIVE_VERSION(4),
    /**
     * <code>VERSION_TYPE_MONO_VERSION = 5;</code>
     */
    VERSION_TYPE_MONO_VERSION(5),
    /**
     * <code>VERSION_TYPE_KARAOKE_VERSION = 6;</code>
     */
    VERSION_TYPE_KARAOKE_VERSION(6),
    /**
     * <code>VERSION_TYPE_LIVE_VERSION = 7;</code>
     */
    VERSION_TYPE_LIVE_VERSION(7),
    /**
     * <code>VERSION_TYPE_STEREO_VERSION = 8;</code>
     */
    VERSION_TYPE_STEREO_VERSION(8),
    /**
     * <code>VERSION_TYPE_DEMO_VERSION = 9;</code>
     */
    VERSION_TYPE_DEMO_VERSION(9),
    /**
     * <code>VERSION_TYPE_SESSION_VERSION = 10;</code>
     */
    VERSION_TYPE_SESSION_VERSION(10),
    /**
     * <code>VERSION_TYPE_SINGLE_VERSION = 11;</code>
     */
    VERSION_TYPE_SINGLE_VERSION(11),
    /**
     * <code>VERSION_TYPE_USER_DEFINED = 12;</code>
     */
    VERSION_TYPE_USER_DEFINED(12),
    /**
     * <code>VERSION_TYPE_RADIO_VERSION = 13;</code>
     */
    VERSION_TYPE_RADIO_VERSION(13),
    /**
     * <code>VERSION_TYPE_REMIX_VERSION = 14;</code>
     */
    VERSION_TYPE_REMIX_VERSION(14),
    /**
     * <code>VERSION_TYPE_CLEAN_VERSION = 15;</code>
     */
    VERSION_TYPE_CLEAN_VERSION(15),
    /**
     * <code>VERSION_TYPE_MIX_VERSION = 16;</code>
     */
    VERSION_TYPE_MIX_VERSION(16),
    ;

    /**
     * <code>VERSION_TYPE_ALBUM_VERSION = 0;</code>
     */
    public static final int VERSION_TYPE_ALBUM_VERSION_VALUE = 0;
    /**
     * <code>VERSION_TYPE_A_CAPPELLA_VERSION = 1;</code>
     */
    public static final int VERSION_TYPE_A_CAPPELLA_VERSION_VALUE = 1;
    /**
     * <code>VERSION_TYPE_EDITED_VERSION = 2;</code>
     */
    public static final int VERSION_TYPE_EDITED_VERSION_VALUE = 2;
    /**
     * <code>VERSION_TYPE_INSTRUMENTAL_VERSION = 3;</code>
     */
    public static final int VERSION_TYPE_INSTRUMENTAL_VERSION_VALUE = 3;
    /**
     * <code>VERSION_TYPE_ALTERNATIVE_VERSION = 4;</code>
     */
    public static final int VERSION_TYPE_ALTERNATIVE_VERSION_VALUE = 4;
    /**
     * <code>VERSION_TYPE_MONO_VERSION = 5;</code>
     */
    public static final int VERSION_TYPE_MONO_VERSION_VALUE = 5;
    /**
     * <code>VERSION_TYPE_KARAOKE_VERSION = 6;</code>
     */
    public static final int VERSION_TYPE_KARAOKE_VERSION_VALUE = 6;
    /**
     * <code>VERSION_TYPE_LIVE_VERSION = 7;</code>
     */
    public static final int VERSION_TYPE_LIVE_VERSION_VALUE = 7;
    /**
     * <code>VERSION_TYPE_STEREO_VERSION = 8;</code>
     */
    public static final int VERSION_TYPE_STEREO_VERSION_VALUE = 8;
    /**
     * <code>VERSION_TYPE_DEMO_VERSION = 9;</code>
     */
    public static final int VERSION_TYPE_DEMO_VERSION_VALUE = 9;
    /**
     * <code>VERSION_TYPE_SESSION_VERSION = 10;</code>
     */
    public static final int VERSION_TYPE_SESSION_VERSION_VALUE = 10;
    /**
     * <code>VERSION_TYPE_SINGLE_VERSION = 11;</code>
     */
    public static final int VERSION_TYPE_SINGLE_VERSION_VALUE = 11;
    /**
     * <code>VERSION_TYPE_USER_DEFINED = 12;</code>
     */
    public static final int VERSION_TYPE_USER_DEFINED_VALUE = 12;
    /**
     * <code>VERSION_TYPE_RADIO_VERSION = 13;</code>
     */
    public static final int VERSION_TYPE_RADIO_VERSION_VALUE = 13;
    /**
     * <code>VERSION_TYPE_REMIX_VERSION = 14;</code>
     */
    public static final int VERSION_TYPE_REMIX_VERSION_VALUE = 14;
    /**
     * <code>VERSION_TYPE_CLEAN_VERSION = 15;</code>
     */
    public static final int VERSION_TYPE_CLEAN_VERSION_VALUE = 15;
    /**
     * <code>VERSION_TYPE_MIX_VERSION = 16;</code>
     */
    public static final int VERSION_TYPE_MIX_VERSION_VALUE = 16;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VersionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VersionType forNumber(int value) {
      switch (value) {
        case 0: return VERSION_TYPE_ALBUM_VERSION;
        case 1: return VERSION_TYPE_A_CAPPELLA_VERSION;
        case 2: return VERSION_TYPE_EDITED_VERSION;
        case 3: return VERSION_TYPE_INSTRUMENTAL_VERSION;
        case 4: return VERSION_TYPE_ALTERNATIVE_VERSION;
        case 5: return VERSION_TYPE_MONO_VERSION;
        case 6: return VERSION_TYPE_KARAOKE_VERSION;
        case 7: return VERSION_TYPE_LIVE_VERSION;
        case 8: return VERSION_TYPE_STEREO_VERSION;
        case 9: return VERSION_TYPE_DEMO_VERSION;
        case 10: return VERSION_TYPE_SESSION_VERSION;
        case 11: return VERSION_TYPE_SINGLE_VERSION;
        case 12: return VERSION_TYPE_USER_DEFINED;
        case 13: return VERSION_TYPE_RADIO_VERSION;
        case 14: return VERSION_TYPE_REMIX_VERSION;
        case 15: return VERSION_TYPE_CLEAN_VERSION;
        case 16: return VERSION_TYPE_MIX_VERSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VersionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VersionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VersionType>() {
            public VersionType findValueByNumber(int number) {
              return VersionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(197);
    }

    private static final VersionType[] VALUES = values();

    public static VersionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VersionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.VersionType)
  }

  /**
   * Protobuf enum {@code avs.VideoCodecType}
   */
  public enum VideoCodecType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VIDEO_CODEC_TYPE_M_P_E_G__MINUS__4 = 0;</code>
     */
    VIDEO_CODEC_TYPE_M_P_E_G__MINUS__4(0),
    /**
     * <code>VIDEO_CODEC_TYPE_QUICK_TIME = 1;</code>
     */
    VIDEO_CODEC_TYPE_QUICK_TIME(1),
    /**
     * <code>VIDEO_CODEC_TYPE_W_M_V = 2;</code>
     */
    VIDEO_CODEC_TYPE_W_M_V(2),
    /**
     * <code>VIDEO_CODEC_TYPE_SHOCKWAVE = 3;</code>
     */
    VIDEO_CODEC_TYPE_SHOCKWAVE(3),
    /**
     * <code>VIDEO_CODEC_TYPE_UNKNOWN = 4;</code>
     */
    VIDEO_CODEC_TYPE_UNKNOWN(4),
    /**
     * <code>VIDEO_CODEC_TYPE_H__DOT__263 = 5;</code>
     */
    VIDEO_CODEC_TYPE_H__DOT__263(5),
    /**
     * <code>VIDEO_CODEC_TYPE_M_P_E_G__MINUS__1 = 6;</code>
     */
    VIDEO_CODEC_TYPE_M_P_E_G__MINUS__1(6),
    /**
     * <code>VIDEO_CODEC_TYPE_M_P_E_G__MINUS__2 = 7;</code>
     */
    VIDEO_CODEC_TYPE_M_P_E_G__MINUS__2(7),
    /**
     * <code>VIDEO_CODEC_TYPE_REAL_VIDEO = 8;</code>
     */
    VIDEO_CODEC_TYPE_REAL_VIDEO(8),
    /**
     * <code>VIDEO_CODEC_TYPE_H__DOT__261 = 9;</code>
     */
    VIDEO_CODEC_TYPE_H__DOT__261(9),
    /**
     * <code>VIDEO_CODEC_TYPE_USER_DEFINED = 10;</code>
     */
    VIDEO_CODEC_TYPE_USER_DEFINED(10),
    /**
     * <code>VIDEO_CODEC_TYPE_A_V_C = 11;</code>
     */
    VIDEO_CODEC_TYPE_A_V_C(11),
    ;

    /**
     * <code>VIDEO_CODEC_TYPE_M_P_E_G__MINUS__4 = 0;</code>
     */
    public static final int VIDEO_CODEC_TYPE_M_P_E_G__MINUS__4_VALUE = 0;
    /**
     * <code>VIDEO_CODEC_TYPE_QUICK_TIME = 1;</code>
     */
    public static final int VIDEO_CODEC_TYPE_QUICK_TIME_VALUE = 1;
    /**
     * <code>VIDEO_CODEC_TYPE_W_M_V = 2;</code>
     */
    public static final int VIDEO_CODEC_TYPE_W_M_V_VALUE = 2;
    /**
     * <code>VIDEO_CODEC_TYPE_SHOCKWAVE = 3;</code>
     */
    public static final int VIDEO_CODEC_TYPE_SHOCKWAVE_VALUE = 3;
    /**
     * <code>VIDEO_CODEC_TYPE_UNKNOWN = 4;</code>
     */
    public static final int VIDEO_CODEC_TYPE_UNKNOWN_VALUE = 4;
    /**
     * <code>VIDEO_CODEC_TYPE_H__DOT__263 = 5;</code>
     */
    public static final int VIDEO_CODEC_TYPE_H__DOT__263_VALUE = 5;
    /**
     * <code>VIDEO_CODEC_TYPE_M_P_E_G__MINUS__1 = 6;</code>
     */
    public static final int VIDEO_CODEC_TYPE_M_P_E_G__MINUS__1_VALUE = 6;
    /**
     * <code>VIDEO_CODEC_TYPE_M_P_E_G__MINUS__2 = 7;</code>
     */
    public static final int VIDEO_CODEC_TYPE_M_P_E_G__MINUS__2_VALUE = 7;
    /**
     * <code>VIDEO_CODEC_TYPE_REAL_VIDEO = 8;</code>
     */
    public static final int VIDEO_CODEC_TYPE_REAL_VIDEO_VALUE = 8;
    /**
     * <code>VIDEO_CODEC_TYPE_H__DOT__261 = 9;</code>
     */
    public static final int VIDEO_CODEC_TYPE_H__DOT__261_VALUE = 9;
    /**
     * <code>VIDEO_CODEC_TYPE_USER_DEFINED = 10;</code>
     */
    public static final int VIDEO_CODEC_TYPE_USER_DEFINED_VALUE = 10;
    /**
     * <code>VIDEO_CODEC_TYPE_A_V_C = 11;</code>
     */
    public static final int VIDEO_CODEC_TYPE_A_V_C_VALUE = 11;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VideoCodecType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VideoCodecType forNumber(int value) {
      switch (value) {
        case 0: return VIDEO_CODEC_TYPE_M_P_E_G__MINUS__4;
        case 1: return VIDEO_CODEC_TYPE_QUICK_TIME;
        case 2: return VIDEO_CODEC_TYPE_W_M_V;
        case 3: return VIDEO_CODEC_TYPE_SHOCKWAVE;
        case 4: return VIDEO_CODEC_TYPE_UNKNOWN;
        case 5: return VIDEO_CODEC_TYPE_H__DOT__263;
        case 6: return VIDEO_CODEC_TYPE_M_P_E_G__MINUS__1;
        case 7: return VIDEO_CODEC_TYPE_M_P_E_G__MINUS__2;
        case 8: return VIDEO_CODEC_TYPE_REAL_VIDEO;
        case 9: return VIDEO_CODEC_TYPE_H__DOT__261;
        case 10: return VIDEO_CODEC_TYPE_USER_DEFINED;
        case 11: return VIDEO_CODEC_TYPE_A_V_C;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VideoCodecType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VideoCodecType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VideoCodecType>() {
            public VideoCodecType findValueByNumber(int number) {
              return VideoCodecType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(198);
    }

    private static final VideoCodecType[] VALUES = values();

    public static VideoCodecType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VideoCodecType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.VideoCodecType)
  }

  /**
   * Protobuf enum {@code avs.VideoDefinitionType}
   */
  public enum VideoDefinitionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VIDEO_DEFINITION_TYPE_STANDARD_DEFINITION = 0;</code>
     */
    VIDEO_DEFINITION_TYPE_STANDARD_DEFINITION(0),
    /**
     * <code>VIDEO_DEFINITION_TYPE_USER_DEFINED = 1;</code>
     */
    VIDEO_DEFINITION_TYPE_USER_DEFINED(1),
    /**
     * <code>VIDEO_DEFINITION_TYPE_HIGH_DEFINITION = 2;</code>
     */
    VIDEO_DEFINITION_TYPE_HIGH_DEFINITION(2),
    ;

    /**
     * <code>VIDEO_DEFINITION_TYPE_STANDARD_DEFINITION = 0;</code>
     */
    public static final int VIDEO_DEFINITION_TYPE_STANDARD_DEFINITION_VALUE = 0;
    /**
     * <code>VIDEO_DEFINITION_TYPE_USER_DEFINED = 1;</code>
     */
    public static final int VIDEO_DEFINITION_TYPE_USER_DEFINED_VALUE = 1;
    /**
     * <code>VIDEO_DEFINITION_TYPE_HIGH_DEFINITION = 2;</code>
     */
    public static final int VIDEO_DEFINITION_TYPE_HIGH_DEFINITION_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VideoDefinitionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VideoDefinitionType forNumber(int value) {
      switch (value) {
        case 0: return VIDEO_DEFINITION_TYPE_STANDARD_DEFINITION;
        case 1: return VIDEO_DEFINITION_TYPE_USER_DEFINED;
        case 2: return VIDEO_DEFINITION_TYPE_HIGH_DEFINITION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VideoDefinitionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VideoDefinitionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VideoDefinitionType>() {
            public VideoDefinitionType findValueByNumber(int number) {
              return VideoDefinitionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(199);
    }

    private static final VideoDefinitionType[] VALUES = values();

    public static VideoDefinitionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VideoDefinitionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.VideoDefinitionType)
  }

  /**
   * Protobuf enum {@code avs.VideoType}
   */
  public enum VideoType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VIDEO_TYPE_READALONG_VIDEO = 0;</code>
     */
    VIDEO_TYPE_READALONG_VIDEO(0),
    /**
     * <code>VIDEO_TYPE_COLUMN_VIDEO = 1;</code>
     */
    VIDEO_TYPE_COLUMN_VIDEO(1),
    /**
     * <code>VIDEO_TYPE_LIVE_EVENT_VIDEO = 2;</code>
     */
    VIDEO_TYPE_LIVE_EVENT_VIDEO(2),
    /**
     * <code>VIDEO_TYPE_NON_MUSICAL_WORK_READALONG_VIDEO = 3;</code>
     */
    VIDEO_TYPE_NON_MUSICAL_WORK_READALONG_VIDEO(3),
    /**
     * <code>VIDEO_TYPE_TV_PROGRAM = 4;</code>
     */
    VIDEO_TYPE_TV_PROGRAM(4),
    /**
     * <code>VIDEO_TYPE_EDUCATIONAL_VIDEO = 5;</code>
     */
    VIDEO_TYPE_EDUCATIONAL_VIDEO(5),
    /**
     * <code>VIDEO_TYPE_NON_SERIAL_AUDIO_VISUAL_RECORDING = 6;</code>
     */
    VIDEO_TYPE_NON_SERIAL_AUDIO_VISUAL_RECORDING(6),
    /**
     * <code>VIDEO_TYPE_WEB_RESOURCE = 7;</code>
     */
    VIDEO_TYPE_WEB_RESOURCE(7),
    /**
     * <code>VIDEO_TYPE_SHORT_FILM = 8;</code>
     */
    VIDEO_TYPE_SHORT_FILM(8),
    /**
     * <code>VIDEO_TYPE_INTERVIEW = 9;</code>
     */
    VIDEO_TYPE_INTERVIEW(9),
    /**
     * <code>VIDEO_TYPE_MUSICAL_WORK_CLIP = 10;</code>
     */
    VIDEO_TYPE_MUSICAL_WORK_CLIP(10),
    /**
     * <code>VIDEO_TYPE_REALITY_TV_SHOW_VIDEO = 11;</code>
     */
    VIDEO_TYPE_REALITY_TV_SHOW_VIDEO(11),
    /**
     * <code>VIDEO_TYPE_THEATRICAL_WORK_VIDEO = 12;</code>
     */
    VIDEO_TYPE_THEATRICAL_WORK_VIDEO(12),
    /**
     * <code>VIDEO_TYPE_INTERACTIVE_RESOURCE = 13;</code>
     */
    VIDEO_TYPE_INTERACTIVE_RESOURCE(13),
    /**
     * <code>VIDEO_TYPE_FEATURE_FILM = 14;</code>
     */
    VIDEO_TYPE_FEATURE_FILM(14),
    /**
     * <code>VIDEO_TYPE_ADVICE_MAGAZINE = 15;</code>
     */
    VIDEO_TYPE_ADVICE_MAGAZINE(15),
    /**
     * <code>VIDEO_TYPE_SPORT = 16;</code>
     */
    VIDEO_TYPE_SPORT(16),
    /**
     * <code>VIDEO_TYPE_UNKNOWN = 17;</code>
     */
    VIDEO_TYPE_UNKNOWN(17),
    /**
     * <code>VIDEO_TYPE_VIDEO_CLIP = 18;</code>
     */
    VIDEO_TYPE_VIDEO_CLIP(18),
    /**
     * <code>VIDEO_TYPE_CHILDRENS_FILM = 19;</code>
     */
    VIDEO_TYPE_CHILDRENS_FILM(19),
    /**
     * <code>VIDEO_TYPE_NON_MUSICAL_WORK_TRAILER = 20;</code>
     */
    VIDEO_TYPE_NON_MUSICAL_WORK_TRAILER(20),
    /**
     * <code>VIDEO_TYPE_COLORIZED_VIDEO = 21;</code>
     */
    VIDEO_TYPE_COLORIZED_VIDEO(21),
    /**
     * <code>VIDEO_TYPE_TV_SHOW_VIDEO = 22;</code>
     */
    VIDEO_TYPE_TV_SHOW_VIDEO(22),
    /**
     * <code>VIDEO_TYPE_USER_DEFINED = 23;</code>
     */
    VIDEO_TYPE_USER_DEFINED(23),
    /**
     * <code>VIDEO_TYPE_VIDEO_STEM = 24;</code>
     */
    VIDEO_TYPE_VIDEO_STEM(24),
    /**
     * <code>VIDEO_TYPE_NON_MUSICAL_WORK_CLIP = 25;</code>
     */
    VIDEO_TYPE_NON_MUSICAL_WORK_CLIP(25),
    /**
     * <code>VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO = 26;</code>
     */
    VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO(26),
    /**
     * <code>VIDEO_TYPE_ADULT_CONTENT = 27;</code>
     */
    VIDEO_TYPE_ADULT_CONTENT(27),
    /**
     * <code>VIDEO_TYPE_KARAOKE = 28;</code>
     */
    VIDEO_TYPE_KARAOKE(28),
    /**
     * <code>VIDEO_TYPE_SERIAL_AUDIO_VISUAL_RECORDING = 29;</code>
     */
    VIDEO_TYPE_SERIAL_AUDIO_VISUAL_RECORDING(29),
    /**
     * <code>VIDEO_TYPE_TV_FILM = 30;</code>
     */
    VIDEO_TYPE_TV_FILM(30),
    /**
     * <code>VIDEO_TYPE_DRAMA = 31;</code>
     */
    VIDEO_TYPE_DRAMA(31),
    /**
     * <code>VIDEO_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO = 32;</code>
     */
    VIDEO_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO(32),
    /**
     * <code>VIDEO_TYPE_ADVERTISEMENT_VIDEO = 33;</code>
     */
    VIDEO_TYPE_ADVERTISEMENT_VIDEO(33),
    /**
     * <code>VIDEO_TYPE_PERFORMANCE = 34;</code>
     */
    VIDEO_TYPE_PERFORMANCE(34),
    /**
     * <code>VIDEO_TYPE_FICTION = 35;</code>
     */
    VIDEO_TYPE_FICTION(35),
    /**
     * <code>VIDEO_TYPE_SILENT_VIDEO = 36;</code>
     */
    VIDEO_TYPE_SILENT_VIDEO(36),
    /**
     * <code>VIDEO_TYPE_SKETCH_VIDEO = 37;</code>
     */
    VIDEO_TYPE_SKETCH_VIDEO(37),
    /**
     * <code>VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO = 38;</code>
     */
    VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO(38),
    /**
     * <code>VIDEO_TYPE_MUSICAL_WORK_READALONG_VIDEO = 39;</code>
     */
    VIDEO_TYPE_MUSICAL_WORK_READALONG_VIDEO(39),
    /**
     * <code>VIDEO_TYPE_SOAP_SITCOM = 40;</code>
     */
    VIDEO_TYPE_SOAP_SITCOM(40),
    /**
     * <code>VIDEO_TYPE_LYRIC_VIDEO = 41;</code>
     */
    VIDEO_TYPE_LYRIC_VIDEO(41),
    /**
     * <code>VIDEO_TYPE_BALLET_VIDEO = 42;</code>
     */
    VIDEO_TYPE_BALLET_VIDEO(42),
    /**
     * <code>VIDEO_TYPE_DOCUMENTARY = 43;</code>
     */
    VIDEO_TYPE_DOCUMENTARY(43),
    /**
     * <code>VIDEO_TYPE_BLACK_AND_WHITE_VIDEO = 44;</code>
     */
    VIDEO_TYPE_BLACK_AND_WHITE_VIDEO(44),
    /**
     * <code>VIDEO_TYPE_MUSICAL_WORK_VIDEO_CHAPTER = 45;</code>
     */
    VIDEO_TYPE_MUSICAL_WORK_VIDEO_CHAPTER(45),
    /**
     * <code>VIDEO_TYPE_NEWS = 46;</code>
     */
    VIDEO_TYPE_NEWS(46),
    /**
     * <code>VIDEO_TYPE_BEHIND_THE_SCENES = 47;</code>
     */
    VIDEO_TYPE_BEHIND_THE_SCENES(47),
    /**
     * <code>VIDEO_TYPE_MENU = 48;</code>
     */
    VIDEO_TYPE_MENU(48),
    /**
     * <code>VIDEO_TYPE_MULTIMEDIA_VIDEO = 49;</code>
     */
    VIDEO_TYPE_MULTIMEDIA_VIDEO(49),
    /**
     * <code>VIDEO_TYPE_SEASON = 50;</code>
     */
    VIDEO_TYPE_SEASON(50),
    /**
     * <code>VIDEO_TYPE_NON_MUSICAL_WORK_VIDEO_CHAPTER = 51;</code>
     */
    VIDEO_TYPE_NON_MUSICAL_WORK_VIDEO_CHAPTER(51),
    /**
     * <code>VIDEO_TYPE_VIDEO_CHAPTER = 52;</code>
     */
    VIDEO_TYPE_VIDEO_CHAPTER(52),
    /**
     * <code>VIDEO_TYPE_OPERA_VIDEO = 53;</code>
     */
    VIDEO_TYPE_OPERA_VIDEO(53),
    /**
     * <code>VIDEO_TYPE_VIDEO_REPORT = 54;</code>
     */
    VIDEO_TYPE_VIDEO_REPORT(54),
    /**
     * <code>VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO = 55;</code>
     */
    VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO(55),
    /**
     * <code>VIDEO_TYPE_EPISODE = 56;</code>
     */
    VIDEO_TYPE_EPISODE(56),
    /**
     * <code>VIDEO_TYPE_SERIES = 57;</code>
     */
    VIDEO_TYPE_SERIES(57),
    /**
     * <code>VIDEO_TYPE_CORPORATE_FILM = 58;</code>
     */
    VIDEO_TYPE_CORPORATE_FILM(58),
    /**
     * <code>VIDEO_TYPE_CREDITS = 59;</code>
     */
    VIDEO_TYPE_CREDITS(59),
    /**
     * <code>VIDEO_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO = 60;</code>
     */
    VIDEO_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO(60),
    /**
     * <code>VIDEO_TYPE_ANIMATION = 61;</code>
     */
    VIDEO_TYPE_ANIMATION(61),
    /**
     * <code>VIDEO_TYPE_CONCERT_CLIP = 62;</code>
     */
    VIDEO_TYPE_CONCERT_CLIP(62),
    /**
     * <code>VIDEO_TYPE_INFOMERCIAL_VIDEO = 63;</code>
     */
    VIDEO_TYPE_INFOMERCIAL_VIDEO(63),
    /**
     * <code>VIDEO_TYPE_TRAILER_VIDEO = 64;</code>
     */
    VIDEO_TYPE_TRAILER_VIDEO(64),
    /**
     * <code>VIDEO_TYPE_MUSICAL_WORK_TRAILER = 65;</code>
     */
    VIDEO_TYPE_MUSICAL_WORK_TRAILER(65),
    /**
     * <code>VIDEO_TYPE_CONCERT_VIDEO = 66;</code>
     */
    VIDEO_TYPE_CONCERT_VIDEO(66),
    /**
     * <code>VIDEO_TYPE_MAGAZINE = 67;</code>
     */
    VIDEO_TYPE_MAGAZINE(67),
    /**
     * <code>VIDEO_TYPE_SPECIAL_EVENT = 68;</code>
     */
    VIDEO_TYPE_SPECIAL_EVENT(68),
    ;

    /**
     * <code>VIDEO_TYPE_READALONG_VIDEO = 0;</code>
     */
    public static final int VIDEO_TYPE_READALONG_VIDEO_VALUE = 0;
    /**
     * <code>VIDEO_TYPE_COLUMN_VIDEO = 1;</code>
     */
    public static final int VIDEO_TYPE_COLUMN_VIDEO_VALUE = 1;
    /**
     * <code>VIDEO_TYPE_LIVE_EVENT_VIDEO = 2;</code>
     */
    public static final int VIDEO_TYPE_LIVE_EVENT_VIDEO_VALUE = 2;
    /**
     * <code>VIDEO_TYPE_NON_MUSICAL_WORK_READALONG_VIDEO = 3;</code>
     */
    public static final int VIDEO_TYPE_NON_MUSICAL_WORK_READALONG_VIDEO_VALUE = 3;
    /**
     * <code>VIDEO_TYPE_TV_PROGRAM = 4;</code>
     */
    public static final int VIDEO_TYPE_TV_PROGRAM_VALUE = 4;
    /**
     * <code>VIDEO_TYPE_EDUCATIONAL_VIDEO = 5;</code>
     */
    public static final int VIDEO_TYPE_EDUCATIONAL_VIDEO_VALUE = 5;
    /**
     * <code>VIDEO_TYPE_NON_SERIAL_AUDIO_VISUAL_RECORDING = 6;</code>
     */
    public static final int VIDEO_TYPE_NON_SERIAL_AUDIO_VISUAL_RECORDING_VALUE = 6;
    /**
     * <code>VIDEO_TYPE_WEB_RESOURCE = 7;</code>
     */
    public static final int VIDEO_TYPE_WEB_RESOURCE_VALUE = 7;
    /**
     * <code>VIDEO_TYPE_SHORT_FILM = 8;</code>
     */
    public static final int VIDEO_TYPE_SHORT_FILM_VALUE = 8;
    /**
     * <code>VIDEO_TYPE_INTERVIEW = 9;</code>
     */
    public static final int VIDEO_TYPE_INTERVIEW_VALUE = 9;
    /**
     * <code>VIDEO_TYPE_MUSICAL_WORK_CLIP = 10;</code>
     */
    public static final int VIDEO_TYPE_MUSICAL_WORK_CLIP_VALUE = 10;
    /**
     * <code>VIDEO_TYPE_REALITY_TV_SHOW_VIDEO = 11;</code>
     */
    public static final int VIDEO_TYPE_REALITY_TV_SHOW_VIDEO_VALUE = 11;
    /**
     * <code>VIDEO_TYPE_THEATRICAL_WORK_VIDEO = 12;</code>
     */
    public static final int VIDEO_TYPE_THEATRICAL_WORK_VIDEO_VALUE = 12;
    /**
     * <code>VIDEO_TYPE_INTERACTIVE_RESOURCE = 13;</code>
     */
    public static final int VIDEO_TYPE_INTERACTIVE_RESOURCE_VALUE = 13;
    /**
     * <code>VIDEO_TYPE_FEATURE_FILM = 14;</code>
     */
    public static final int VIDEO_TYPE_FEATURE_FILM_VALUE = 14;
    /**
     * <code>VIDEO_TYPE_ADVICE_MAGAZINE = 15;</code>
     */
    public static final int VIDEO_TYPE_ADVICE_MAGAZINE_VALUE = 15;
    /**
     * <code>VIDEO_TYPE_SPORT = 16;</code>
     */
    public static final int VIDEO_TYPE_SPORT_VALUE = 16;
    /**
     * <code>VIDEO_TYPE_UNKNOWN = 17;</code>
     */
    public static final int VIDEO_TYPE_UNKNOWN_VALUE = 17;
    /**
     * <code>VIDEO_TYPE_VIDEO_CLIP = 18;</code>
     */
    public static final int VIDEO_TYPE_VIDEO_CLIP_VALUE = 18;
    /**
     * <code>VIDEO_TYPE_CHILDRENS_FILM = 19;</code>
     */
    public static final int VIDEO_TYPE_CHILDRENS_FILM_VALUE = 19;
    /**
     * <code>VIDEO_TYPE_NON_MUSICAL_WORK_TRAILER = 20;</code>
     */
    public static final int VIDEO_TYPE_NON_MUSICAL_WORK_TRAILER_VALUE = 20;
    /**
     * <code>VIDEO_TYPE_COLORIZED_VIDEO = 21;</code>
     */
    public static final int VIDEO_TYPE_COLORIZED_VIDEO_VALUE = 21;
    /**
     * <code>VIDEO_TYPE_TV_SHOW_VIDEO = 22;</code>
     */
    public static final int VIDEO_TYPE_TV_SHOW_VIDEO_VALUE = 22;
    /**
     * <code>VIDEO_TYPE_USER_DEFINED = 23;</code>
     */
    public static final int VIDEO_TYPE_USER_DEFINED_VALUE = 23;
    /**
     * <code>VIDEO_TYPE_VIDEO_STEM = 24;</code>
     */
    public static final int VIDEO_TYPE_VIDEO_STEM_VALUE = 24;
    /**
     * <code>VIDEO_TYPE_NON_MUSICAL_WORK_CLIP = 25;</code>
     */
    public static final int VIDEO_TYPE_NON_MUSICAL_WORK_CLIP_VALUE = 25;
    /**
     * <code>VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO = 26;</code>
     */
    public static final int VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO_VALUE = 26;
    /**
     * <code>VIDEO_TYPE_ADULT_CONTENT = 27;</code>
     */
    public static final int VIDEO_TYPE_ADULT_CONTENT_VALUE = 27;
    /**
     * <code>VIDEO_TYPE_KARAOKE = 28;</code>
     */
    public static final int VIDEO_TYPE_KARAOKE_VALUE = 28;
    /**
     * <code>VIDEO_TYPE_SERIAL_AUDIO_VISUAL_RECORDING = 29;</code>
     */
    public static final int VIDEO_TYPE_SERIAL_AUDIO_VISUAL_RECORDING_VALUE = 29;
    /**
     * <code>VIDEO_TYPE_TV_FILM = 30;</code>
     */
    public static final int VIDEO_TYPE_TV_FILM_VALUE = 30;
    /**
     * <code>VIDEO_TYPE_DRAMA = 31;</code>
     */
    public static final int VIDEO_TYPE_DRAMA_VALUE = 31;
    /**
     * <code>VIDEO_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO = 32;</code>
     */
    public static final int VIDEO_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO_VALUE = 32;
    /**
     * <code>VIDEO_TYPE_ADVERTISEMENT_VIDEO = 33;</code>
     */
    public static final int VIDEO_TYPE_ADVERTISEMENT_VIDEO_VALUE = 33;
    /**
     * <code>VIDEO_TYPE_PERFORMANCE = 34;</code>
     */
    public static final int VIDEO_TYPE_PERFORMANCE_VALUE = 34;
    /**
     * <code>VIDEO_TYPE_FICTION = 35;</code>
     */
    public static final int VIDEO_TYPE_FICTION_VALUE = 35;
    /**
     * <code>VIDEO_TYPE_SILENT_VIDEO = 36;</code>
     */
    public static final int VIDEO_TYPE_SILENT_VIDEO_VALUE = 36;
    /**
     * <code>VIDEO_TYPE_SKETCH_VIDEO = 37;</code>
     */
    public static final int VIDEO_TYPE_SKETCH_VIDEO_VALUE = 37;
    /**
     * <code>VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO = 38;</code>
     */
    public static final int VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO_VALUE = 38;
    /**
     * <code>VIDEO_TYPE_MUSICAL_WORK_READALONG_VIDEO = 39;</code>
     */
    public static final int VIDEO_TYPE_MUSICAL_WORK_READALONG_VIDEO_VALUE = 39;
    /**
     * <code>VIDEO_TYPE_SOAP_SITCOM = 40;</code>
     */
    public static final int VIDEO_TYPE_SOAP_SITCOM_VALUE = 40;
    /**
     * <code>VIDEO_TYPE_LYRIC_VIDEO = 41;</code>
     */
    public static final int VIDEO_TYPE_LYRIC_VIDEO_VALUE = 41;
    /**
     * <code>VIDEO_TYPE_BALLET_VIDEO = 42;</code>
     */
    public static final int VIDEO_TYPE_BALLET_VIDEO_VALUE = 42;
    /**
     * <code>VIDEO_TYPE_DOCUMENTARY = 43;</code>
     */
    public static final int VIDEO_TYPE_DOCUMENTARY_VALUE = 43;
    /**
     * <code>VIDEO_TYPE_BLACK_AND_WHITE_VIDEO = 44;</code>
     */
    public static final int VIDEO_TYPE_BLACK_AND_WHITE_VIDEO_VALUE = 44;
    /**
     * <code>VIDEO_TYPE_MUSICAL_WORK_VIDEO_CHAPTER = 45;</code>
     */
    public static final int VIDEO_TYPE_MUSICAL_WORK_VIDEO_CHAPTER_VALUE = 45;
    /**
     * <code>VIDEO_TYPE_NEWS = 46;</code>
     */
    public static final int VIDEO_TYPE_NEWS_VALUE = 46;
    /**
     * <code>VIDEO_TYPE_BEHIND_THE_SCENES = 47;</code>
     */
    public static final int VIDEO_TYPE_BEHIND_THE_SCENES_VALUE = 47;
    /**
     * <code>VIDEO_TYPE_MENU = 48;</code>
     */
    public static final int VIDEO_TYPE_MENU_VALUE = 48;
    /**
     * <code>VIDEO_TYPE_MULTIMEDIA_VIDEO = 49;</code>
     */
    public static final int VIDEO_TYPE_MULTIMEDIA_VIDEO_VALUE = 49;
    /**
     * <code>VIDEO_TYPE_SEASON = 50;</code>
     */
    public static final int VIDEO_TYPE_SEASON_VALUE = 50;
    /**
     * <code>VIDEO_TYPE_NON_MUSICAL_WORK_VIDEO_CHAPTER = 51;</code>
     */
    public static final int VIDEO_TYPE_NON_MUSICAL_WORK_VIDEO_CHAPTER_VALUE = 51;
    /**
     * <code>VIDEO_TYPE_VIDEO_CHAPTER = 52;</code>
     */
    public static final int VIDEO_TYPE_VIDEO_CHAPTER_VALUE = 52;
    /**
     * <code>VIDEO_TYPE_OPERA_VIDEO = 53;</code>
     */
    public static final int VIDEO_TYPE_OPERA_VIDEO_VALUE = 53;
    /**
     * <code>VIDEO_TYPE_VIDEO_REPORT = 54;</code>
     */
    public static final int VIDEO_TYPE_VIDEO_REPORT_VALUE = 54;
    /**
     * <code>VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO = 55;</code>
     */
    public static final int VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO_VALUE = 55;
    /**
     * <code>VIDEO_TYPE_EPISODE = 56;</code>
     */
    public static final int VIDEO_TYPE_EPISODE_VALUE = 56;
    /**
     * <code>VIDEO_TYPE_SERIES = 57;</code>
     */
    public static final int VIDEO_TYPE_SERIES_VALUE = 57;
    /**
     * <code>VIDEO_TYPE_CORPORATE_FILM = 58;</code>
     */
    public static final int VIDEO_TYPE_CORPORATE_FILM_VALUE = 58;
    /**
     * <code>VIDEO_TYPE_CREDITS = 59;</code>
     */
    public static final int VIDEO_TYPE_CREDITS_VALUE = 59;
    /**
     * <code>VIDEO_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO = 60;</code>
     */
    public static final int VIDEO_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO_VALUE = 60;
    /**
     * <code>VIDEO_TYPE_ANIMATION = 61;</code>
     */
    public static final int VIDEO_TYPE_ANIMATION_VALUE = 61;
    /**
     * <code>VIDEO_TYPE_CONCERT_CLIP = 62;</code>
     */
    public static final int VIDEO_TYPE_CONCERT_CLIP_VALUE = 62;
    /**
     * <code>VIDEO_TYPE_INFOMERCIAL_VIDEO = 63;</code>
     */
    public static final int VIDEO_TYPE_INFOMERCIAL_VIDEO_VALUE = 63;
    /**
     * <code>VIDEO_TYPE_TRAILER_VIDEO = 64;</code>
     */
    public static final int VIDEO_TYPE_TRAILER_VIDEO_VALUE = 64;
    /**
     * <code>VIDEO_TYPE_MUSICAL_WORK_TRAILER = 65;</code>
     */
    public static final int VIDEO_TYPE_MUSICAL_WORK_TRAILER_VALUE = 65;
    /**
     * <code>VIDEO_TYPE_CONCERT_VIDEO = 66;</code>
     */
    public static final int VIDEO_TYPE_CONCERT_VIDEO_VALUE = 66;
    /**
     * <code>VIDEO_TYPE_MAGAZINE = 67;</code>
     */
    public static final int VIDEO_TYPE_MAGAZINE_VALUE = 67;
    /**
     * <code>VIDEO_TYPE_SPECIAL_EVENT = 68;</code>
     */
    public static final int VIDEO_TYPE_SPECIAL_EVENT_VALUE = 68;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VideoType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VideoType forNumber(int value) {
      switch (value) {
        case 0: return VIDEO_TYPE_READALONG_VIDEO;
        case 1: return VIDEO_TYPE_COLUMN_VIDEO;
        case 2: return VIDEO_TYPE_LIVE_EVENT_VIDEO;
        case 3: return VIDEO_TYPE_NON_MUSICAL_WORK_READALONG_VIDEO;
        case 4: return VIDEO_TYPE_TV_PROGRAM;
        case 5: return VIDEO_TYPE_EDUCATIONAL_VIDEO;
        case 6: return VIDEO_TYPE_NON_SERIAL_AUDIO_VISUAL_RECORDING;
        case 7: return VIDEO_TYPE_WEB_RESOURCE;
        case 8: return VIDEO_TYPE_SHORT_FILM;
        case 9: return VIDEO_TYPE_INTERVIEW;
        case 10: return VIDEO_TYPE_MUSICAL_WORK_CLIP;
        case 11: return VIDEO_TYPE_REALITY_TV_SHOW_VIDEO;
        case 12: return VIDEO_TYPE_THEATRICAL_WORK_VIDEO;
        case 13: return VIDEO_TYPE_INTERACTIVE_RESOURCE;
        case 14: return VIDEO_TYPE_FEATURE_FILM;
        case 15: return VIDEO_TYPE_ADVICE_MAGAZINE;
        case 16: return VIDEO_TYPE_SPORT;
        case 17: return VIDEO_TYPE_UNKNOWN;
        case 18: return VIDEO_TYPE_VIDEO_CLIP;
        case 19: return VIDEO_TYPE_CHILDRENS_FILM;
        case 20: return VIDEO_TYPE_NON_MUSICAL_WORK_TRAILER;
        case 21: return VIDEO_TYPE_COLORIZED_VIDEO;
        case 22: return VIDEO_TYPE_TV_SHOW_VIDEO;
        case 23: return VIDEO_TYPE_USER_DEFINED;
        case 24: return VIDEO_TYPE_VIDEO_STEM;
        case 25: return VIDEO_TYPE_NON_MUSICAL_WORK_CLIP;
        case 26: return VIDEO_TYPE_DRAMATICO_MUSICAL_VIDEO;
        case 27: return VIDEO_TYPE_ADULT_CONTENT;
        case 28: return VIDEO_TYPE_KARAOKE;
        case 29: return VIDEO_TYPE_SERIAL_AUDIO_VISUAL_RECORDING;
        case 30: return VIDEO_TYPE_TV_FILM;
        case 31: return VIDEO_TYPE_DRAMA;
        case 32: return VIDEO_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO;
        case 33: return VIDEO_TYPE_ADVERTISEMENT_VIDEO;
        case 34: return VIDEO_TYPE_PERFORMANCE;
        case 35: return VIDEO_TYPE_FICTION;
        case 36: return VIDEO_TYPE_SILENT_VIDEO;
        case 37: return VIDEO_TYPE_SKETCH_VIDEO;
        case 38: return VIDEO_TYPE_SHORT_FORM_MUSICAL_WORK_VIDEO;
        case 39: return VIDEO_TYPE_MUSICAL_WORK_READALONG_VIDEO;
        case 40: return VIDEO_TYPE_SOAP_SITCOM;
        case 41: return VIDEO_TYPE_LYRIC_VIDEO;
        case 42: return VIDEO_TYPE_BALLET_VIDEO;
        case 43: return VIDEO_TYPE_DOCUMENTARY;
        case 44: return VIDEO_TYPE_BLACK_AND_WHITE_VIDEO;
        case 45: return VIDEO_TYPE_MUSICAL_WORK_VIDEO_CHAPTER;
        case 46: return VIDEO_TYPE_NEWS;
        case 47: return VIDEO_TYPE_BEHIND_THE_SCENES;
        case 48: return VIDEO_TYPE_MENU;
        case 49: return VIDEO_TYPE_MULTIMEDIA_VIDEO;
        case 50: return VIDEO_TYPE_SEASON;
        case 51: return VIDEO_TYPE_NON_MUSICAL_WORK_VIDEO_CHAPTER;
        case 52: return VIDEO_TYPE_VIDEO_CHAPTER;
        case 53: return VIDEO_TYPE_OPERA_VIDEO;
        case 54: return VIDEO_TYPE_VIDEO_REPORT;
        case 55: return VIDEO_TYPE_SHORT_FORM_NON_MUSICAL_WORK_VIDEO;
        case 56: return VIDEO_TYPE_EPISODE;
        case 57: return VIDEO_TYPE_SERIES;
        case 58: return VIDEO_TYPE_CORPORATE_FILM;
        case 59: return VIDEO_TYPE_CREDITS;
        case 60: return VIDEO_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO;
        case 61: return VIDEO_TYPE_ANIMATION;
        case 62: return VIDEO_TYPE_CONCERT_CLIP;
        case 63: return VIDEO_TYPE_INFOMERCIAL_VIDEO;
        case 64: return VIDEO_TYPE_TRAILER_VIDEO;
        case 65: return VIDEO_TYPE_MUSICAL_WORK_TRAILER;
        case 66: return VIDEO_TYPE_CONCERT_VIDEO;
        case 67: return VIDEO_TYPE_MAGAZINE;
        case 68: return VIDEO_TYPE_SPECIAL_EVENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VideoType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VideoType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VideoType>() {
            public VideoType findValueByNumber(int number) {
              return VideoType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(200);
    }

    private static final VideoType[] VALUES = values();

    public static VideoType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VideoType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.VideoType)
  }

  /**
   * Protobuf enum {@code avs.VideoType_DSRF}
   */
  public enum VideoType_DSRF
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VIDEO_TYPE__D_S_R_F_READALONG_VIDEO = 0;</code>
     */
    VIDEO_TYPE__D_S_R_F_READALONG_VIDEO(0),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_COLUMN_VIDEO = 1;</code>
     */
    VIDEO_TYPE__D_S_R_F_COLUMN_VIDEO(1),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_LIVE_EVENT_VIDEO = 2;</code>
     */
    VIDEO_TYPE__D_S_R_F_LIVE_EVENT_VIDEO(2),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_READALONG_VIDEO = 3;</code>
     */
    VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_READALONG_VIDEO(3),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_TV_PROGRAM = 4;</code>
     */
    VIDEO_TYPE__D_S_R_F_TV_PROGRAM(4),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_EDUCATIONAL_VIDEO = 5;</code>
     */
    VIDEO_TYPE__D_S_R_F_EDUCATIONAL_VIDEO(5),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_SERIAL_AUDIO_VISUAL_RECORDING = 6;</code>
     */
    VIDEO_TYPE__D_S_R_F_NON_SERIAL_AUDIO_VISUAL_RECORDING(6),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SHORT_FILM = 7;</code>
     */
    VIDEO_TYPE__D_S_R_F_SHORT_FILM(7),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_INTERVIEW = 8;</code>
     */
    VIDEO_TYPE__D_S_R_F_INTERVIEW(8),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_CLIP = 9;</code>
     */
    VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_CLIP(9),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_REALITY_TV_SHOW_VIDEO = 10;</code>
     */
    VIDEO_TYPE__D_S_R_F_REALITY_TV_SHOW_VIDEO(10),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_THEATRICAL_WORK_VIDEO = 11;</code>
     */
    VIDEO_TYPE__D_S_R_F_THEATRICAL_WORK_VIDEO(11),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_FEATURE_FILM = 12;</code>
     */
    VIDEO_TYPE__D_S_R_F_FEATURE_FILM(12),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_ADVICE_MAGAZINE = 13;</code>
     */
    VIDEO_TYPE__D_S_R_F_ADVICE_MAGAZINE(13),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SPORT = 14;</code>
     */
    VIDEO_TYPE__D_S_R_F_SPORT(14),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_UNKNOWN = 15;</code>
     */
    VIDEO_TYPE__D_S_R_F_UNKNOWN(15),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_VIDEO_CLIP = 16;</code>
     */
    VIDEO_TYPE__D_S_R_F_VIDEO_CLIP(16),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CHILDRENS_FILM = 17;</code>
     */
    VIDEO_TYPE__D_S_R_F_CHILDRENS_FILM(17),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_TRAILER = 18;</code>
     */
    VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_TRAILER(18),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_COLORIZED_VIDEO = 19;</code>
     */
    VIDEO_TYPE__D_S_R_F_COLORIZED_VIDEO(19),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_TV_SHOW_VIDEO = 20;</code>
     */
    VIDEO_TYPE__D_S_R_F_TV_SHOW_VIDEO(20),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_VIDEO_STEM = 21;</code>
     */
    VIDEO_TYPE__D_S_R_F_VIDEO_STEM(21),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_CLIP = 22;</code>
     */
    VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_CLIP(22),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_ADULT_CONTENT = 23;</code>
     */
    VIDEO_TYPE__D_S_R_F_ADULT_CONTENT(23),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_KARAOKE = 24;</code>
     */
    VIDEO_TYPE__D_S_R_F_KARAOKE(24),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SERIAL_AUDIO_VISUAL_RECORDING = 25;</code>
     */
    VIDEO_TYPE__D_S_R_F_SERIAL_AUDIO_VISUAL_RECORDING(25),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_TV_FILM = 26;</code>
     */
    VIDEO_TYPE__D_S_R_F_TV_FILM(26),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_LONG_FORM_NON_MUSICAL_WORK_VIDEO = 27;</code>
     */
    VIDEO_TYPE__D_S_R_F_LONG_FORM_NON_MUSICAL_WORK_VIDEO(27),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_ADVERTISEMENT_VIDEO = 28;</code>
     */
    VIDEO_TYPE__D_S_R_F_ADVERTISEMENT_VIDEO(28),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_PERFORMANCE = 29;</code>
     */
    VIDEO_TYPE__D_S_R_F_PERFORMANCE(29),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_FICTION = 30;</code>
     */
    VIDEO_TYPE__D_S_R_F_FICTION(30),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SILENT_VIDEO = 31;</code>
     */
    VIDEO_TYPE__D_S_R_F_SILENT_VIDEO(31),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SKETCH_VIDEO = 32;</code>
     */
    VIDEO_TYPE__D_S_R_F_SKETCH_VIDEO(32),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_READALONG_VIDEO = 33;</code>
     */
    VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_READALONG_VIDEO(33),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SOAP_SITCOM = 34;</code>
     */
    VIDEO_TYPE__D_S_R_F_SOAP_SITCOM(34),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_LYRIC_VIDEO = 35;</code>
     */
    VIDEO_TYPE__D_S_R_F_LYRIC_VIDEO(35),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_BALLET_VIDEO = 36;</code>
     */
    VIDEO_TYPE__D_S_R_F_BALLET_VIDEO(36),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_DOCUMENTARY = 37;</code>
     */
    VIDEO_TYPE__D_S_R_F_DOCUMENTARY(37),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_BLACK_AND_WHITE_VIDEO = 38;</code>
     */
    VIDEO_TYPE__D_S_R_F_BLACK_AND_WHITE_VIDEO(38),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_VIDEO_CHAPTER = 39;</code>
     */
    VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_VIDEO_CHAPTER(39),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NEWS = 40;</code>
     */
    VIDEO_TYPE__D_S_R_F_NEWS(40),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_BEHIND_THE_SCENES = 41;</code>
     */
    VIDEO_TYPE__D_S_R_F_BEHIND_THE_SCENES(41),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MENU = 42;</code>
     */
    VIDEO_TYPE__D_S_R_F_MENU(42),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MULTIMEDIA_VIDEO = 43;</code>
     */
    VIDEO_TYPE__D_S_R_F_MULTIMEDIA_VIDEO(43),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SEASON = 44;</code>
     */
    VIDEO_TYPE__D_S_R_F_SEASON(44),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_VIDEO_CHAPTER = 45;</code>
     */
    VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_VIDEO_CHAPTER(45),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_VIDEO_CHAPTER = 46;</code>
     */
    VIDEO_TYPE__D_S_R_F_VIDEO_CHAPTER(46),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_OPERA_VIDEO = 47;</code>
     */
    VIDEO_TYPE__D_S_R_F_OPERA_VIDEO(47),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_VIDEO_REPORT = 48;</code>
     */
    VIDEO_TYPE__D_S_R_F_VIDEO_REPORT(48),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_EPISODE = 49;</code>
     */
    VIDEO_TYPE__D_S_R_F_EPISODE(49),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SERIES = 50;</code>
     */
    VIDEO_TYPE__D_S_R_F_SERIES(50),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CORPORATE_FILM = 51;</code>
     */
    VIDEO_TYPE__D_S_R_F_CORPORATE_FILM(51),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CREDITS = 52;</code>
     */
    VIDEO_TYPE__D_S_R_F_CREDITS(52),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_LONG_FORM_MUSICAL_WORK_VIDEO = 53;</code>
     */
    VIDEO_TYPE__D_S_R_F_LONG_FORM_MUSICAL_WORK_VIDEO(53),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_ANIMATION = 54;</code>
     */
    VIDEO_TYPE__D_S_R_F_ANIMATION(54),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CONCERT_CLIP = 55;</code>
     */
    VIDEO_TYPE__D_S_R_F_CONCERT_CLIP(55),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_INFOMERCIAL_VIDEO = 56;</code>
     */
    VIDEO_TYPE__D_S_R_F_INFOMERCIAL_VIDEO(56),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_TRAILER_VIDEO = 57;</code>
     */
    VIDEO_TYPE__D_S_R_F_TRAILER_VIDEO(57),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_TRAILER = 58;</code>
     */
    VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_TRAILER(58),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CONCERT_VIDEO = 59;</code>
     */
    VIDEO_TYPE__D_S_R_F_CONCERT_VIDEO(59),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MAGAZINE = 60;</code>
     */
    VIDEO_TYPE__D_S_R_F_MAGAZINE(60),
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SPECIAL_EVENT = 61;</code>
     */
    VIDEO_TYPE__D_S_R_F_SPECIAL_EVENT(61),
    ;

    /**
     * <code>VIDEO_TYPE__D_S_R_F_READALONG_VIDEO = 0;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_READALONG_VIDEO_VALUE = 0;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_COLUMN_VIDEO = 1;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_COLUMN_VIDEO_VALUE = 1;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_LIVE_EVENT_VIDEO = 2;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_LIVE_EVENT_VIDEO_VALUE = 2;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_READALONG_VIDEO = 3;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_READALONG_VIDEO_VALUE = 3;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_TV_PROGRAM = 4;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_TV_PROGRAM_VALUE = 4;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_EDUCATIONAL_VIDEO = 5;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_EDUCATIONAL_VIDEO_VALUE = 5;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_SERIAL_AUDIO_VISUAL_RECORDING = 6;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_NON_SERIAL_AUDIO_VISUAL_RECORDING_VALUE = 6;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SHORT_FILM = 7;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SHORT_FILM_VALUE = 7;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_INTERVIEW = 8;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_INTERVIEW_VALUE = 8;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_CLIP = 9;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_CLIP_VALUE = 9;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_REALITY_TV_SHOW_VIDEO = 10;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_REALITY_TV_SHOW_VIDEO_VALUE = 10;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_THEATRICAL_WORK_VIDEO = 11;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_THEATRICAL_WORK_VIDEO_VALUE = 11;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_FEATURE_FILM = 12;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_FEATURE_FILM_VALUE = 12;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_ADVICE_MAGAZINE = 13;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_ADVICE_MAGAZINE_VALUE = 13;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SPORT = 14;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SPORT_VALUE = 14;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_UNKNOWN = 15;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_UNKNOWN_VALUE = 15;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_VIDEO_CLIP = 16;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_VIDEO_CLIP_VALUE = 16;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CHILDRENS_FILM = 17;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_CHILDRENS_FILM_VALUE = 17;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_TRAILER = 18;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_TRAILER_VALUE = 18;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_COLORIZED_VIDEO = 19;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_COLORIZED_VIDEO_VALUE = 19;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_TV_SHOW_VIDEO = 20;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_TV_SHOW_VIDEO_VALUE = 20;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_VIDEO_STEM = 21;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_VIDEO_STEM_VALUE = 21;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_CLIP = 22;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_CLIP_VALUE = 22;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_ADULT_CONTENT = 23;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_ADULT_CONTENT_VALUE = 23;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_KARAOKE = 24;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_KARAOKE_VALUE = 24;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SERIAL_AUDIO_VISUAL_RECORDING = 25;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SERIAL_AUDIO_VISUAL_RECORDING_VALUE = 25;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_TV_FILM = 26;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_TV_FILM_VALUE = 26;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_LONG_FORM_NON_MUSICAL_WORK_VIDEO = 27;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_LONG_FORM_NON_MUSICAL_WORK_VIDEO_VALUE = 27;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_ADVERTISEMENT_VIDEO = 28;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_ADVERTISEMENT_VIDEO_VALUE = 28;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_PERFORMANCE = 29;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_PERFORMANCE_VALUE = 29;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_FICTION = 30;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_FICTION_VALUE = 30;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SILENT_VIDEO = 31;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SILENT_VIDEO_VALUE = 31;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SKETCH_VIDEO = 32;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SKETCH_VIDEO_VALUE = 32;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_READALONG_VIDEO = 33;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_READALONG_VIDEO_VALUE = 33;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SOAP_SITCOM = 34;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SOAP_SITCOM_VALUE = 34;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_LYRIC_VIDEO = 35;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_LYRIC_VIDEO_VALUE = 35;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_BALLET_VIDEO = 36;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_BALLET_VIDEO_VALUE = 36;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_DOCUMENTARY = 37;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_DOCUMENTARY_VALUE = 37;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_BLACK_AND_WHITE_VIDEO = 38;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_BLACK_AND_WHITE_VIDEO_VALUE = 38;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_VIDEO_CHAPTER = 39;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_VIDEO_CHAPTER_VALUE = 39;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NEWS = 40;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_NEWS_VALUE = 40;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_BEHIND_THE_SCENES = 41;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_BEHIND_THE_SCENES_VALUE = 41;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MENU = 42;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_MENU_VALUE = 42;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MULTIMEDIA_VIDEO = 43;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_MULTIMEDIA_VIDEO_VALUE = 43;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SEASON = 44;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SEASON_VALUE = 44;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_VIDEO_CHAPTER = 45;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_VIDEO_CHAPTER_VALUE = 45;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_VIDEO_CHAPTER = 46;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_VIDEO_CHAPTER_VALUE = 46;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_OPERA_VIDEO = 47;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_OPERA_VIDEO_VALUE = 47;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_VIDEO_REPORT = 48;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_VIDEO_REPORT_VALUE = 48;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_EPISODE = 49;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_EPISODE_VALUE = 49;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SERIES = 50;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SERIES_VALUE = 50;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CORPORATE_FILM = 51;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_CORPORATE_FILM_VALUE = 51;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CREDITS = 52;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_CREDITS_VALUE = 52;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_LONG_FORM_MUSICAL_WORK_VIDEO = 53;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_LONG_FORM_MUSICAL_WORK_VIDEO_VALUE = 53;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_ANIMATION = 54;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_ANIMATION_VALUE = 54;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CONCERT_CLIP = 55;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_CONCERT_CLIP_VALUE = 55;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_INFOMERCIAL_VIDEO = 56;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_INFOMERCIAL_VIDEO_VALUE = 56;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_TRAILER_VIDEO = 57;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_TRAILER_VIDEO_VALUE = 57;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_TRAILER = 58;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_TRAILER_VALUE = 58;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_CONCERT_VIDEO = 59;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_CONCERT_VIDEO_VALUE = 59;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_MAGAZINE = 60;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_MAGAZINE_VALUE = 60;
    /**
     * <code>VIDEO_TYPE__D_S_R_F_SPECIAL_EVENT = 61;</code>
     */
    public static final int VIDEO_TYPE__D_S_R_F_SPECIAL_EVENT_VALUE = 61;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VideoType_DSRF valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VideoType_DSRF forNumber(int value) {
      switch (value) {
        case 0: return VIDEO_TYPE__D_S_R_F_READALONG_VIDEO;
        case 1: return VIDEO_TYPE__D_S_R_F_COLUMN_VIDEO;
        case 2: return VIDEO_TYPE__D_S_R_F_LIVE_EVENT_VIDEO;
        case 3: return VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_READALONG_VIDEO;
        case 4: return VIDEO_TYPE__D_S_R_F_TV_PROGRAM;
        case 5: return VIDEO_TYPE__D_S_R_F_EDUCATIONAL_VIDEO;
        case 6: return VIDEO_TYPE__D_S_R_F_NON_SERIAL_AUDIO_VISUAL_RECORDING;
        case 7: return VIDEO_TYPE__D_S_R_F_SHORT_FILM;
        case 8: return VIDEO_TYPE__D_S_R_F_INTERVIEW;
        case 9: return VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_CLIP;
        case 10: return VIDEO_TYPE__D_S_R_F_REALITY_TV_SHOW_VIDEO;
        case 11: return VIDEO_TYPE__D_S_R_F_THEATRICAL_WORK_VIDEO;
        case 12: return VIDEO_TYPE__D_S_R_F_FEATURE_FILM;
        case 13: return VIDEO_TYPE__D_S_R_F_ADVICE_MAGAZINE;
        case 14: return VIDEO_TYPE__D_S_R_F_SPORT;
        case 15: return VIDEO_TYPE__D_S_R_F_UNKNOWN;
        case 16: return VIDEO_TYPE__D_S_R_F_VIDEO_CLIP;
        case 17: return VIDEO_TYPE__D_S_R_F_CHILDRENS_FILM;
        case 18: return VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_TRAILER;
        case 19: return VIDEO_TYPE__D_S_R_F_COLORIZED_VIDEO;
        case 20: return VIDEO_TYPE__D_S_R_F_TV_SHOW_VIDEO;
        case 21: return VIDEO_TYPE__D_S_R_F_VIDEO_STEM;
        case 22: return VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_CLIP;
        case 23: return VIDEO_TYPE__D_S_R_F_ADULT_CONTENT;
        case 24: return VIDEO_TYPE__D_S_R_F_KARAOKE;
        case 25: return VIDEO_TYPE__D_S_R_F_SERIAL_AUDIO_VISUAL_RECORDING;
        case 26: return VIDEO_TYPE__D_S_R_F_TV_FILM;
        case 27: return VIDEO_TYPE__D_S_R_F_LONG_FORM_NON_MUSICAL_WORK_VIDEO;
        case 28: return VIDEO_TYPE__D_S_R_F_ADVERTISEMENT_VIDEO;
        case 29: return VIDEO_TYPE__D_S_R_F_PERFORMANCE;
        case 30: return VIDEO_TYPE__D_S_R_F_FICTION;
        case 31: return VIDEO_TYPE__D_S_R_F_SILENT_VIDEO;
        case 32: return VIDEO_TYPE__D_S_R_F_SKETCH_VIDEO;
        case 33: return VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_READALONG_VIDEO;
        case 34: return VIDEO_TYPE__D_S_R_F_SOAP_SITCOM;
        case 35: return VIDEO_TYPE__D_S_R_F_LYRIC_VIDEO;
        case 36: return VIDEO_TYPE__D_S_R_F_BALLET_VIDEO;
        case 37: return VIDEO_TYPE__D_S_R_F_DOCUMENTARY;
        case 38: return VIDEO_TYPE__D_S_R_F_BLACK_AND_WHITE_VIDEO;
        case 39: return VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_VIDEO_CHAPTER;
        case 40: return VIDEO_TYPE__D_S_R_F_NEWS;
        case 41: return VIDEO_TYPE__D_S_R_F_BEHIND_THE_SCENES;
        case 42: return VIDEO_TYPE__D_S_R_F_MENU;
        case 43: return VIDEO_TYPE__D_S_R_F_MULTIMEDIA_VIDEO;
        case 44: return VIDEO_TYPE__D_S_R_F_SEASON;
        case 45: return VIDEO_TYPE__D_S_R_F_NON_MUSICAL_WORK_VIDEO_CHAPTER;
        case 46: return VIDEO_TYPE__D_S_R_F_VIDEO_CHAPTER;
        case 47: return VIDEO_TYPE__D_S_R_F_OPERA_VIDEO;
        case 48: return VIDEO_TYPE__D_S_R_F_VIDEO_REPORT;
        case 49: return VIDEO_TYPE__D_S_R_F_EPISODE;
        case 50: return VIDEO_TYPE__D_S_R_F_SERIES;
        case 51: return VIDEO_TYPE__D_S_R_F_CORPORATE_FILM;
        case 52: return VIDEO_TYPE__D_S_R_F_CREDITS;
        case 53: return VIDEO_TYPE__D_S_R_F_LONG_FORM_MUSICAL_WORK_VIDEO;
        case 54: return VIDEO_TYPE__D_S_R_F_ANIMATION;
        case 55: return VIDEO_TYPE__D_S_R_F_CONCERT_CLIP;
        case 56: return VIDEO_TYPE__D_S_R_F_INFOMERCIAL_VIDEO;
        case 57: return VIDEO_TYPE__D_S_R_F_TRAILER_VIDEO;
        case 58: return VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_TRAILER;
        case 59: return VIDEO_TYPE__D_S_R_F_CONCERT_VIDEO;
        case 60: return VIDEO_TYPE__D_S_R_F_MAGAZINE;
        case 61: return VIDEO_TYPE__D_S_R_F_SPECIAL_EVENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VideoType_DSRF>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VideoType_DSRF> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VideoType_DSRF>() {
            public VideoType_DSRF findValueByNumber(int number) {
              return VideoType_DSRF.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(201);
    }

    private static final VideoType_DSRF[] VALUES = values();

    public static VideoType_DSRF valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VideoType_DSRF(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.VideoType_DSRF)
  }

  /**
   * Protobuf enum {@code avs.VisualPerceptionType}
   */
  public enum VisualPerceptionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VISUAL_PERCEPTION_TYPE_BACKGROUND = 0;</code>
     */
    VISUAL_PERCEPTION_TYPE_BACKGROUND(0),
    /**
     * <code>VISUAL_PERCEPTION_TYPE_USER_DEFINED = 1;</code>
     */
    VISUAL_PERCEPTION_TYPE_USER_DEFINED(1),
    /**
     * <code>VISUAL_PERCEPTION_TYPE_VISUAL = 2;</code>
     */
    VISUAL_PERCEPTION_TYPE_VISUAL(2),
    ;

    /**
     * <code>VISUAL_PERCEPTION_TYPE_BACKGROUND = 0;</code>
     */
    public static final int VISUAL_PERCEPTION_TYPE_BACKGROUND_VALUE = 0;
    /**
     * <code>VISUAL_PERCEPTION_TYPE_USER_DEFINED = 1;</code>
     */
    public static final int VISUAL_PERCEPTION_TYPE_USER_DEFINED_VALUE = 1;
    /**
     * <code>VISUAL_PERCEPTION_TYPE_VISUAL = 2;</code>
     */
    public static final int VISUAL_PERCEPTION_TYPE_VISUAL_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VisualPerceptionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VisualPerceptionType forNumber(int value) {
      switch (value) {
        case 0: return VISUAL_PERCEPTION_TYPE_BACKGROUND;
        case 1: return VISUAL_PERCEPTION_TYPE_USER_DEFINED;
        case 2: return VISUAL_PERCEPTION_TYPE_VISUAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VisualPerceptionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VisualPerceptionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VisualPerceptionType>() {
            public VisualPerceptionType findValueByNumber(int number) {
              return VisualPerceptionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(202);
    }

    private static final VisualPerceptionType[] VALUES = values();

    public static VisualPerceptionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VisualPerceptionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.VisualPerceptionType)
  }

  /**
   * Protobuf enum {@code avs.VocalRegister}
   */
  public enum VocalRegister
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VOCAL_REGISTER_BASS = 0;</code>
     */
    VOCAL_REGISTER_BASS(0),
    /**
     * <code>VOCAL_REGISTER_SOPRANINO = 1;</code>
     */
    VOCAL_REGISTER_SOPRANINO(1),
    /**
     * <code>VOCAL_REGISTER_VIOLA_PARADON = 2;</code>
     */
    VOCAL_REGISTER_VIOLA_PARADON(2),
    /**
     * <code>VOCAL_REGISTER_CASTRATI = 3;</code>
     */
    VOCAL_REGISTER_CASTRATI(3),
    /**
     * <code>VOCAL_REGISTER_CONTRABASS = 4;</code>
     */
    VOCAL_REGISTER_CONTRABASS(4),
    /**
     * <code>VOCAL_REGISTER_BASS_BARITONE = 5;</code>
     */
    VOCAL_REGISTER_BASS_BARITONE(5),
    /**
     * <code>VOCAL_REGISTER_SOPRANO = 6;</code>
     */
    VOCAL_REGISTER_SOPRANO(6),
    /**
     * <code>VOCAL_REGISTER_PARADON = 7;</code>
     */
    VOCAL_REGISTER_PARADON(7),
    /**
     * <code>VOCAL_REGISTER_TENOR = 8;</code>
     */
    VOCAL_REGISTER_TENOR(8),
    /**
     * <code>VOCAL_REGISTER_FALSETTO = 9;</code>
     */
    VOCAL_REGISTER_FALSETTO(9),
    /**
     * <code>VOCAL_REGISTER_BARITONE = 10;</code>
     */
    VOCAL_REGISTER_BARITONE(10),
    /**
     * <code>VOCAL_REGISTER_PICCOLO = 11;</code>
     */
    VOCAL_REGISTER_PICCOLO(11),
    /**
     * <code>VOCAL_REGISTER_TREBLE = 12;</code>
     */
    VOCAL_REGISTER_TREBLE(12),
    /**
     * <code>VOCAL_REGISTER_ALTO = 13;</code>
     */
    VOCAL_REGISTER_ALTO(13),
    /**
     * <code>VOCAL_REGISTER_CONTRALTO = 14;</code>
     */
    VOCAL_REGISTER_CONTRALTO(14),
    /**
     * <code>VOCAL_REGISTER_MEZZO_SOPRANO = 15;</code>
     */
    VOCAL_REGISTER_MEZZO_SOPRANO(15),
    /**
     * <code>VOCAL_REGISTER_COUNTERTENOR = 16;</code>
     */
    VOCAL_REGISTER_COUNTERTENOR(16),
    /**
     * <code>VOCAL_REGISTER_USER_DEFINED = 17;</code>
     */
    VOCAL_REGISTER_USER_DEFINED(17),
    ;

    /**
     * <code>VOCAL_REGISTER_BASS = 0;</code>
     */
    public static final int VOCAL_REGISTER_BASS_VALUE = 0;
    /**
     * <code>VOCAL_REGISTER_SOPRANINO = 1;</code>
     */
    public static final int VOCAL_REGISTER_SOPRANINO_VALUE = 1;
    /**
     * <code>VOCAL_REGISTER_VIOLA_PARADON = 2;</code>
     */
    public static final int VOCAL_REGISTER_VIOLA_PARADON_VALUE = 2;
    /**
     * <code>VOCAL_REGISTER_CASTRATI = 3;</code>
     */
    public static final int VOCAL_REGISTER_CASTRATI_VALUE = 3;
    /**
     * <code>VOCAL_REGISTER_CONTRABASS = 4;</code>
     */
    public static final int VOCAL_REGISTER_CONTRABASS_VALUE = 4;
    /**
     * <code>VOCAL_REGISTER_BASS_BARITONE = 5;</code>
     */
    public static final int VOCAL_REGISTER_BASS_BARITONE_VALUE = 5;
    /**
     * <code>VOCAL_REGISTER_SOPRANO = 6;</code>
     */
    public static final int VOCAL_REGISTER_SOPRANO_VALUE = 6;
    /**
     * <code>VOCAL_REGISTER_PARADON = 7;</code>
     */
    public static final int VOCAL_REGISTER_PARADON_VALUE = 7;
    /**
     * <code>VOCAL_REGISTER_TENOR = 8;</code>
     */
    public static final int VOCAL_REGISTER_TENOR_VALUE = 8;
    /**
     * <code>VOCAL_REGISTER_FALSETTO = 9;</code>
     */
    public static final int VOCAL_REGISTER_FALSETTO_VALUE = 9;
    /**
     * <code>VOCAL_REGISTER_BARITONE = 10;</code>
     */
    public static final int VOCAL_REGISTER_BARITONE_VALUE = 10;
    /**
     * <code>VOCAL_REGISTER_PICCOLO = 11;</code>
     */
    public static final int VOCAL_REGISTER_PICCOLO_VALUE = 11;
    /**
     * <code>VOCAL_REGISTER_TREBLE = 12;</code>
     */
    public static final int VOCAL_REGISTER_TREBLE_VALUE = 12;
    /**
     * <code>VOCAL_REGISTER_ALTO = 13;</code>
     */
    public static final int VOCAL_REGISTER_ALTO_VALUE = 13;
    /**
     * <code>VOCAL_REGISTER_CONTRALTO = 14;</code>
     */
    public static final int VOCAL_REGISTER_CONTRALTO_VALUE = 14;
    /**
     * <code>VOCAL_REGISTER_MEZZO_SOPRANO = 15;</code>
     */
    public static final int VOCAL_REGISTER_MEZZO_SOPRANO_VALUE = 15;
    /**
     * <code>VOCAL_REGISTER_COUNTERTENOR = 16;</code>
     */
    public static final int VOCAL_REGISTER_COUNTERTENOR_VALUE = 16;
    /**
     * <code>VOCAL_REGISTER_USER_DEFINED = 17;</code>
     */
    public static final int VOCAL_REGISTER_USER_DEFINED_VALUE = 17;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VocalRegister valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VocalRegister forNumber(int value) {
      switch (value) {
        case 0: return VOCAL_REGISTER_BASS;
        case 1: return VOCAL_REGISTER_SOPRANINO;
        case 2: return VOCAL_REGISTER_VIOLA_PARADON;
        case 3: return VOCAL_REGISTER_CASTRATI;
        case 4: return VOCAL_REGISTER_CONTRABASS;
        case 5: return VOCAL_REGISTER_BASS_BARITONE;
        case 6: return VOCAL_REGISTER_SOPRANO;
        case 7: return VOCAL_REGISTER_PARADON;
        case 8: return VOCAL_REGISTER_TENOR;
        case 9: return VOCAL_REGISTER_FALSETTO;
        case 10: return VOCAL_REGISTER_BARITONE;
        case 11: return VOCAL_REGISTER_PICCOLO;
        case 12: return VOCAL_REGISTER_TREBLE;
        case 13: return VOCAL_REGISTER_ALTO;
        case 14: return VOCAL_REGISTER_CONTRALTO;
        case 15: return VOCAL_REGISTER_MEZZO_SOPRANO;
        case 16: return VOCAL_REGISTER_COUNTERTENOR;
        case 17: return VOCAL_REGISTER_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VocalRegister>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VocalRegister> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VocalRegister>() {
            public VocalRegister findValueByNumber(int number) {
              return VocalRegister.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(203);
    }

    private static final VocalRegister[] VALUES = values();

    public static VocalRegister valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VocalRegister(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.VocalRegister)
  }

  /**
   * Protobuf enum {@code avs.VocalType}
   */
  public enum VocalType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VOCAL_TYPE_VOCAL = 0;</code>
     */
    VOCAL_TYPE_VOCAL(0),
    /**
     * <code>VOCAL_TYPE_USER_DEFINED = 1;</code>
     */
    VOCAL_TYPE_USER_DEFINED(1),
    /**
     * <code>VOCAL_TYPE_INSTRUMENTAL = 2;</code>
     */
    VOCAL_TYPE_INSTRUMENTAL(2),
    ;

    /**
     * <code>VOCAL_TYPE_VOCAL = 0;</code>
     */
    public static final int VOCAL_TYPE_VOCAL_VALUE = 0;
    /**
     * <code>VOCAL_TYPE_USER_DEFINED = 1;</code>
     */
    public static final int VOCAL_TYPE_USER_DEFINED_VALUE = 1;
    /**
     * <code>VOCAL_TYPE_INSTRUMENTAL = 2;</code>
     */
    public static final int VOCAL_TYPE_INSTRUMENTAL_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VocalType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VocalType forNumber(int value) {
      switch (value) {
        case 0: return VOCAL_TYPE_VOCAL;
        case 1: return VOCAL_TYPE_USER_DEFINED;
        case 2: return VOCAL_TYPE_INSTRUMENTAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VocalType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VocalType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VocalType>() {
            public VocalType findValueByNumber(int number) {
              return VocalType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(204);
    }

    private static final VocalType[] VALUES = values();

    public static VocalType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VocalType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.VocalType)
  }

  /**
   * Protobuf enum {@code avs.WorkRelationshipType}
   */
  public enum WorkRelationshipType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>WORK_RELATIONSHIP_TYPE_REIMAGINING_OF = 0;</code>
     */
    WORK_RELATIONSHIP_TYPE_REIMAGINING_OF(0),
    /**
     * <code>WORK_RELATIONSHIP_TYPE_BASIS_FOR_ARRANGEMENT = 1;</code>
     */
    WORK_RELATIONSHIP_TYPE_BASIS_FOR_ARRANGEMENT(1),
    /**
     * <code>WORK_RELATIONSHIP_TYPE_ARRANGEMENT_OF = 2;</code>
     */
    WORK_RELATIONSHIP_TYPE_ARRANGEMENT_OF(2),
    /**
     * <code>WORK_RELATIONSHIP_TYPE_MELODY_BORROWED_FROM = 3;</code>
     */
    WORK_RELATIONSHIP_TYPE_MELODY_BORROWED_FROM(3),
    /**
     * <code>WORK_RELATIONSHIP_TYPE_TAKEN_FROM = 4;</code>
     */
    WORK_RELATIONSHIP_TYPE_TAKEN_FROM(4),
    /**
     * <code>WORK_RELATIONSHIP_TYPE_USER_DEFINED = 5;</code>
     */
    WORK_RELATIONSHIP_TYPE_USER_DEFINED(5),
    ;

    /**
     * <code>WORK_RELATIONSHIP_TYPE_REIMAGINING_OF = 0;</code>
     */
    public static final int WORK_RELATIONSHIP_TYPE_REIMAGINING_OF_VALUE = 0;
    /**
     * <code>WORK_RELATIONSHIP_TYPE_BASIS_FOR_ARRANGEMENT = 1;</code>
     */
    public static final int WORK_RELATIONSHIP_TYPE_BASIS_FOR_ARRANGEMENT_VALUE = 1;
    /**
     * <code>WORK_RELATIONSHIP_TYPE_ARRANGEMENT_OF = 2;</code>
     */
    public static final int WORK_RELATIONSHIP_TYPE_ARRANGEMENT_OF_VALUE = 2;
    /**
     * <code>WORK_RELATIONSHIP_TYPE_MELODY_BORROWED_FROM = 3;</code>
     */
    public static final int WORK_RELATIONSHIP_TYPE_MELODY_BORROWED_FROM_VALUE = 3;
    /**
     * <code>WORK_RELATIONSHIP_TYPE_TAKEN_FROM = 4;</code>
     */
    public static final int WORK_RELATIONSHIP_TYPE_TAKEN_FROM_VALUE = 4;
    /**
     * <code>WORK_RELATIONSHIP_TYPE_USER_DEFINED = 5;</code>
     */
    public static final int WORK_RELATIONSHIP_TYPE_USER_DEFINED_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WorkRelationshipType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WorkRelationshipType forNumber(int value) {
      switch (value) {
        case 0: return WORK_RELATIONSHIP_TYPE_REIMAGINING_OF;
        case 1: return WORK_RELATIONSHIP_TYPE_BASIS_FOR_ARRANGEMENT;
        case 2: return WORK_RELATIONSHIP_TYPE_ARRANGEMENT_OF;
        case 3: return WORK_RELATIONSHIP_TYPE_MELODY_BORROWED_FROM;
        case 4: return WORK_RELATIONSHIP_TYPE_TAKEN_FROM;
        case 5: return WORK_RELATIONSHIP_TYPE_USER_DEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WorkRelationshipType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WorkRelationshipType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WorkRelationshipType>() {
            public WorkRelationshipType findValueByNumber(int number) {
              return WorkRelationshipType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return avs.Avs.getDescriptor().getEnumTypes().get(205);
    }

    private static final WorkRelationshipType[] VALUES = values();

    public static WorkRelationshipType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WorkRelationshipType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:avs.WorkRelationshipType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ravs/avs.proto\022\003avs*J\n\033AdditionalRights" +
      "ClaimStatus\022+\n\'ADDITIONAL_RIGHTS_CLAIM_S" +
      "TATUS_ACCEPTED\020\000*\346\001\n\023AdditionalTitleType" +
      "\022(\n$ADDITIONAL_TITLE_TYPE_ORIGINAL_TITLE" +
      "\020\000\022&\n\"ADDITIONAL_TITLE_TYPE_FORMAL_TITLE" +
      "\020\001\022+\n\'ADDITIONAL_TITLE_TYPE_ALTERNATIVE_" +
      "TITLE\020\002\022&\n\"ADDITIONAL_TITLE_TYPE_USER_DE" +
      "FINED\020\003\022(\n$ADDITIONAL_TITLE_TYPE_GROUPIN" +
      "G_TITLE\020\004*0\n\021AdditionalUseType\022\033\n\027ADDITI" +
      "ONAL_USE_TYPE_ALL\020\000*\337\002\n\023AdditionalVideoT" +
      "ype\022.\n*ADDITIONAL_VIDEO_TYPE_INTERACTIVE" +
      "_RESOURCE\020\000\022\037\n\033ADDITIONAL_VIDEO_TYPE_DRA" +
      "MA\020\001\0227\n3ADDITIONAL_VIDEO_TYPE_SHORT_FORM" +
      "_MUSICAL_WORK_VIDEO\020\002\0221\n-ADDITIONAL_VIDE" +
      "O_TYPE_DRAMATICO_MUSICAL_VIDEO\020\003\022&\n\"ADDI" +
      "TIONAL_VIDEO_TYPE_WEB_RESOURCE\020\004\022;\n7ADDI" +
      "TIONAL_VIDEO_TYPE_SHORT_FORM_NON_MUSICAL" +
      "_WORK_VIDEO\020\005\022&\n\"ADDITIONAL_VIDEO_TYPE_U" +
      "SER_DEFINED\020\006*\312\002\n\037AdministratingRecordCo" +
      "mpanyRole\022<\n8ADMINISTRATING_RECORD_COMPA" +
      "NY_ROLE_ROYALTY_ADMINISTRATOR\020\000\022.\n*ADMIN" +
      "ISTRATING_RECORD_COMPANY_ROLE_UNKNOWN\020\001\022" +
      ";\n7ADMINISTRATING_RECORD_COMPANY_ROLE_RI" +
      "GHTS_ADMINISTRATOR\020\002\0223\n/ADMINISTRATING_R" +
      "ECORD_COMPANY_ROLE_USER_DEFINED\020\003\022G\nCADM" +
      "INISTRATING_RECORD_COMPANY_ROLE_DESIGNAT" +
      "ED_DSR_MESSAGE_RECIPIENT\020\004*\330\001\n\017Affiliati" +
      "onType\022)\n%AFFILIATION_TYPE_MUSIC_RIGHTS_" +
      "SOCIETY\020\000\022$\n AFFILIATION_TYPE_MUSIC_PUBL" +
      "ISHER\020\001\022,\n(AFFILIATION_TYPE_MUSIC_LICENS" +
      "ING_COMPANY\020\002\022#\n\037AFFILIATION_TYPE_RECORD" +
      "_COMPANY\020\003\022!\n\035AFFILIATION_TYPE_USER_DEFI" +
      "NED\020\004*\246y\n\020AllTerritoryCode\022\032\n\026ALL_TERRIT" +
      "ORY_CODE_A_D\020\000\022\032\n\026ALL_TERRITORY_CODE_A_E" +
      "\020\001\022\032\n\026ALL_TERRITORY_CODE_A_F\020\002\022\032\n\026ALL_TE" +
      "RRITORY_CODE_A_G\020\003\022\032\n\026ALL_TERRITORY_CODE" +
      "_A_I\020\004\022\032\n\026ALL_TERRITORY_CODE_A_L\020\005\022\032\n\026AL" +
      "L_TERRITORY_CODE_A_M\020\006\022\032\n\026ALL_TERRITORY_" +
      "CODE_A_N\020\007\022\032\n\026ALL_TERRITORY_CODE_A_O\020\010\022\032" +
      "\n\026ALL_TERRITORY_CODE_A_Q\020\t\022\032\n\026ALL_TERRIT" +
      "ORY_CODE_A_R\020\n\022\032\n\026ALL_TERRITORY_CODE_A_S" +
      "\020\013\022\032\n\026ALL_TERRITORY_CODE_A_T\020\014\022\032\n\026ALL_TE" +
      "RRITORY_CODE_A_U\020\r\022\030\n\024ALL_TERRITORY_CODE" +
      "_4\020\016\022\032\n\026ALL_TERRITORY_CODE_A_W\020\017\022\032\n\026ALL_" +
      "TERRITORY_CODE_A_X\020\020\022\030\n\024ALL_TERRITORY_CO" +
      "DE_8\020\021\022\032\n\026ALL_TERRITORY_CODE_800\020\022\022\032\n\026AL" +
      "L_TERRITORY_CODE_A_Z\020\023\022\032\n\026ALL_TERRITORY_" +
      "CODE_804\020\024\022\032\n\026ALL_TERRITORY_CODE_B_A\020\025\022\032" +
      "\n\026ALL_TERRITORY_CODE_807\020\026\022\032\n\026ALL_TERRIT" +
      "ORY_CODE_B_B\020\027\022\032\n\026ALL_TERRITORY_CODE_B_D" +
      "\020\030\022\032\n\026ALL_TERRITORY_CODE_B_E\020\031\022\032\n\026ALL_TE" +
      "RRITORY_CODE_B_F\020\032\022\036\n\032ALL_TERRITORY_CODE" +
      "_W_K_U_M\020\033\022\032\n\026ALL_TERRITORY_CODE_B_G\020\034\022\032" +
      "\n\026ALL_TERRITORY_CODE_B_H\020\035\022\032\n\026ALL_TERRIT" +
      "ORY_CODE_B_I\020\036\022\032\n\026ALL_TERRITORY_CODE_B_J" +
      "\020\037\022\032\n\026ALL_TERRITORY_CODE_B_L\020 \022\032\n\026ALL_TE" +
      "RRITORY_CODE_B_M\020!\022\032\n\026ALL_TERRITORY_CODE" +
      "_B_N\020\"\022\032\n\026ALL_TERRITORY_CODE_B_O\020#\022\032\n\026AL" +
      "L_TERRITORY_CODE_B_Q\020$\022\032\n\026ALL_TERRITORY_" +
      "CODE_B_R\020%\022\032\n\026ALL_TERRITORY_CODE_B_S\020&\022\032" +
      "\n\026ALL_TERRITORY_CODE_B_T\020\'\022\032\n\026ALL_TERRIT" +
      "ORY_CODE_B_V\020(\022\032\n\026ALL_TERRITORY_CODE_B_W" +
      "\020)\022\032\n\026ALL_TERRITORY_CODE_B_Y\020*\022\032\n\026ALL_TE" +
      "RRITORY_CODE_810\020+\022\032\n\026ALL_TERRITORY_CODE" +
      "_B_Z\020,\022\032\n\026ALL_TERRITORY_CODE_C_A\020-\022\032\n\026AL" +
      "L_TERRITORY_CODE_818\020.\022\032\n\026ALL_TERRITORY_" +
      "CODE_C_C\020/\022\032\n\026ALL_TERRITORY_CODE_C_D\0200\022\032" +
      "\n\026ALL_TERRITORY_CODE_C_F\0201\022\032\n\026ALL_TERRIT" +
      "ORY_CODE_C_G\0202\022\032\n\026ALL_TERRITORY_CODE_C_H" +
      "\0203\022\032\n\026ALL_TERRITORY_CODE_C_I\0204\022\032\n\026ALL_TE" +
      "RRITORY_CODE_C_K\0205\022\033\n\027ALL_TERRITORY_CODE" +
      "_2100\0206\022\032\n\026ALL_TERRITORY_CODE_C_L\0207\022\032\n\026A" +
      "LL_TERRITORY_CODE_C_M\0208\022\032\n\026ALL_TERRITORY" +
      "_CODE_C_N\0209\022\032\n\026ALL_TERRITORY_CODE_C_O\020:\022" +
      "\032\n\026ALL_TERRITORY_CODE_C_R\020;\022\032\n\026ALL_TERRI" +
      "TORY_CODE_C_S\020<\022\032\n\026ALL_TERRITORY_CODE_C_" +
      "U\020=\022\032\n\026ALL_TERRITORY_CODE_C_V\020>\022\032\n\026ALL_T" +
      "ERRITORY_CODE_C_W\020?\022\032\n\026ALL_TERRITORY_COD" +
      "E_C_X\020@\022\032\n\026ALL_TERRITORY_CODE_C_Y\020A\022\032\n\026A" +
      "LL_TERRITORY_CODE_C_Z\020B\022\032\n\026ALL_TERRITORY" +
      "_CODE_702\020C\022\032\n\026ALL_TERRITORY_CODE_703\020D\022" +
      "\032\n\026ALL_TERRITORY_CODE_704\020E\022\032\n\026ALL_TERRI" +
      "TORY_CODE_705\020F\022\032\n\026ALL_TERRITORY_CODE_82" +
      "6\020G\022\032\n\026ALL_TERRITORY_CODE_706\020H\022\032\n\026ALL_T" +
      "ERRITORY_CODE_D_E\020I\022\032\n\026ALL_TERRITORY_COD" +
      "E_D_J\020J\022\032\n\026ALL_TERRITORY_CODE_D_K\020K\022\033\n\027A" +
      "LL_TERRITORY_CODE_2111\020L\022\032\n\026ALL_TERRITOR" +
      "Y_CODE_D_M\020M\022\033\n\027ALL_TERRITORY_CODE_2110\020" +
      "N\022\032\n\026ALL_TERRITORY_CODE_D_O\020O\022\033\n\027ALL_TER" +
      "RITORY_CODE_2108\020P\022\033\n\027ALL_TERRITORY_CODE" +
      "_2107\020Q\022\033\n\027ALL_TERRITORY_CODE_2106\020R\022\033\n\027" +
      "ALL_TERRITORY_CODE_2105\020S\022\033\n\027ALL_TERRITO" +
      "RY_CODE_2104\020T\022\033\n\027ALL_TERRITORY_CODE_210" +
      "3\020U\022\032\n\026ALL_TERRITORY_CODE_D_Z\020V\022\032\n\026ALL_T" +
      "ERRITORY_CODE_710\020W\022\033\n\027ALL_TERRITORY_COD" +
      "E_2102\020X\022\033\n\027ALL_TERRITORY_CODE_2101\020Y\022\032\n" +
      "\026ALL_TERRITORY_CODE_834\020Z\022\032\n\026ALL_TERRITO" +
      "RY_CODE_716\020[\022\032\n\026ALL_TERRITORY_CODE_E_C\020" +
      "\\\022\033\n\027ALL_TERRITORY_CODE_2109\020]\022\032\n\026ALL_TE" +
      "RRITORY_CODE_E_E\020^\022\036\n\032ALL_TERRITORY_CODE" +
      "_B_Q_A_Q\020_\022\032\n\026ALL_TERRITORY_CODE_E_G\020`\022\032" +
      "\n\026ALL_TERRITORY_CODE_E_H\020a\022\036\n\032ALL_TERRIT" +
      "ORY_CODE_Y_U_C_S\020b\022\033\n\027ALL_TERRITORY_CODE" +
      "_2122\020c\022\033\n\027ALL_TERRITORY_CODE_2121\020d\022\033\n\027" +
      "ALL_TERRITORY_CODE_2120\020e\022\032\n\026ALL_TERRITO" +
      "RY_CODE_E_R\020f\022\032\n\026ALL_TERRITORY_CODE_E_S\020" +
      "g\022\032\n\026ALL_TERRITORY_CODE_E_T\020h\022\033\n\027ALL_TER" +
      "RITORY_CODE_2119\020i\022\033\n\027ALL_TERRITORY_CODE" +
      "_2118\020j\022\033\n\027ALL_TERRITORY_CODE_2117\020k\022\033\n\027" +
      "ALL_TERRITORY_CODE_2116\020l\022\032\n\026ALL_TERRITO" +
      "RY_CODE_840\020m\022\033\n\027ALL_TERRITORY_CODE_2115" +
      "\020n\022\032\n\026ALL_TERRITORY_CODE_720\020o\022\033\n\027ALL_TE" +
      "RRITORY_CODE_2114\020p\022\032\n\026ALL_TERRITORY_COD" +
      "E_600\020q\022\033\n\027ALL_TERRITORY_CODE_2113\020r\022\033\n\027" +
      "ALL_TERRITORY_CODE_2112\020s\022\032\n\026ALL_TERRITO" +
      "RY_CODE_724\020t\022\032\n\026ALL_TERRITORY_CODE_604\020" +
      "u\022\032\n\026ALL_TERRITORY_CODE_728\020v\022\032\n\026ALL_TER" +
      "RITORY_CODE_608\020w\022\032\n\026ALL_TERRITORY_CODE_" +
      "729\020x\022\032\n\026ALL_TERRITORY_CODE_F_I\020y\022\032\n\026ALL" +
      "_TERRITORY_CODE_F_J\020z\022\032\n\026ALL_TERRITORY_C" +
      "ODE_F_K\020{\022\032\n\026ALL_TERRITORY_CODE_F_M\020|\022\033\n" +
      "\027ALL_TERRITORY_CODE_2133\020}\022\032\n\026ALL_TERRIT" +
      "ORY_CODE_F_O\020~\022\033\n\027ALL_TERRITORY_CODE_213" +
      "2\020\177\022\034\n\027ALL_TERRITORY_CODE_2131\020\200\001\022\034\n\027ALL" +
      "_TERRITORY_CODE_2130\020\201\001\022\033\n\026ALL_TERRITORY" +
      "_CODE_F_R\020\202\001\022\034\n\027ALL_TERRITORY_CODE_2129\020" +
      "\203\001\022\034\n\027ALL_TERRITORY_CODE_2128\020\204\001\022\034\n\027ALL_" +
      "TERRITORY_CODE_2127\020\205\001\022\034\n\027ALL_TERRITORY_" +
      "CODE_2126\020\206\001\022\034\n\027ALL_TERRITORY_CODE_2125\020" +
      "\207\001\022\033\n\026ALL_TERRITORY_CODE_732\020\210\001\022\034\n\027ALL_T" +
      "ERRITORY_CODE_2124\020\211\001\022\033\n\026ALL_TERRITORY_C" +
      "ODE_854\020\212\001\022\034\n\027ALL_TERRITORY_CODE_2123\020\213\001" +
      "\022\033\n\026ALL_TERRITORY_CODE_G_A\020\214\001\022\033\n\026ALL_TER" +
      "RITORY_CODE_736\020\215\001\022\033\n\026ALL_TERRITORY_CODE" +
      "_G_B\020\216\001\022\033\n\026ALL_TERRITORY_CODE_616\020\217\001\022\033\n\026" +
      "ALL_TERRITORY_CODE_858\020\220\001\022\033\n\026ALL_TERRITO" +
      "RY_CODE_G_D\020\221\001\022\033\n\026ALL_TERRITORY_CODE_G_E" +
      "\020\222\001\022\033\n\026ALL_TERRITORY_CODE_G_F\020\223\001\022\033\n\026ALL_" +
      "TERRITORY_CODE_G_G\020\224\001\022\033\n\026ALL_TERRITORY_C" +
      "ODE_G_H\020\225\001\022\033\n\026ALL_TERRITORY_CODE_G_I\020\226\001\022" +
      "\033\n\026ALL_TERRITORY_CODE_G_L\020\227\001\022\033\n\026ALL_TERR" +
      "ITORY_CODE_G_M\020\230\001\022\033\n\026ALL_TERRITORY_CODE_" +
      "G_N\020\231\001\022\033\n\026ALL_TERRITORY_CODE_G_P\020\232\001\022\033\n\026A" +
      "LL_TERRITORY_CODE_G_Q\020\233\001\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_G_R\020\234\001\022(\n#ALL_TERRITORY_CODE_E_S_" +
      "_MINUS___M_L\020\235\001\022\033\n\026ALL_TERRITORY_CODE_G_" +
      "S\020\236\001\022\033\n\026ALL_TERRITORY_CODE_G_T\020\237\001\022\033\n\026ALL" +
      "_TERRITORY_CODE_G_U\020\240\001\022\033\n\026ALL_TERRITORY_" +
      "CODE_G_W\020\241\001\022\033\n\026ALL_TERRITORY_CODE_G_Y\020\242\001" +
      "\022\033\n\026ALL_TERRITORY_CODE_860\020\243\001\022\033\n\026ALL_TER" +
      "RITORY_CODE_740\020\244\001\022\033\n\026ALL_TERRITORY_CODE" +
      "_620\020\245\001\022\033\n\026ALL_TERRITORY_CODE_862\020\246\001\022\034\n\027" +
      "ALL_TERRITORY_CODE_2136\020\247\001\022\034\n\027ALL_TERRIT" +
      "ORY_CODE_2134\020\250\001\022\033\n\026ALL_TERRITORY_CODE_6" +
      "24\020\251\001\022\033\n\026ALL_TERRITORY_CODE_504\020\252\001\022\033\n\026AL" +
      "L_TERRITORY_CODE_626\020\253\001\022\033\n\026ALL_TERRITORY" +
      "_CODE_748\020\254\001\022\033\n\026ALL_TERRITORY_CODE_508\020\255" +
      "\001\022\033\n\026ALL_TERRITORY_CODE_H_K\020\256\001\022\033\n\026ALL_TE" +
      "RRITORY_CODE_H_M\020\257\001\022\033\n\026ALL_TERRITORY_COD" +
      "E_H_N\020\260\001\022\033\n\026ALL_TERRITORY_CODE_H_R\020\261\001\022\033\n" +
      "\026ALL_TERRITORY_CODE_H_T\020\262\001\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_H_U\020\263\001\022\037\n\032ALL_TERRITORY_CODE_M_" +
      "I_U_M\020\264\001\022\033\n\026ALL_TERRITORY_CODE_630\020\265\001\022\033\n" +
      "\026ALL_TERRITORY_CODE_752\020\266\001\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_512\020\267\001\022\033\n\026ALL_TERRITORY_CODE_63" +
      "4\020\270\001\022\037\n\032ALL_TERRITORY_CODE_N_Q_A_Q\020\271\001\022\033\n" +
      "\026ALL_TERRITORY_CODE_756\020\272\001\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_516\020\273\001\022\033\n\026ALL_TERRITORY_CODE_I_" +
      "D\020\274\001\022\033\n\026ALL_TERRITORY_CODE_I_E\020\275\001\022\037\n\032ALL" +
      "_TERRITORY_CODE_D_D_D_E\020\276\001\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_I_L\020\277\001\022\033\n\026ALL_TERRITORY_CODE_I_" +
      "M\020\300\001\022\033\n\026ALL_TERRITORY_CODE_I_N\020\301\001\022\033\n\026ALL" +
      "_TERRITORY_CODE_I_O\020\302\001\022\033\n\026ALL_TERRITORY_" +
      "CODE_I_Q\020\303\001\022\033\n\026ALL_TERRITORY_CODE_I_R\020\304\001" +
      "\022\033\n\026ALL_TERRITORY_CODE_I_S\020\305\001\022\033\n\026ALL_TER" +
      "RITORY_CODE_I_T\020\306\001\022\037\n\032ALL_TERRITORY_CODE" +
      "_B_U_M_M\020\307\001\022\033\n\026ALL_TERRITORY_CODE_760\020\310\001" +
      "\022\033\n\026ALL_TERRITORY_CODE_882\020\311\001\022\033\n\026ALL_TER" +
      "RITORY_CODE_520\020\312\001\022\033\n\026ALL_TERRITORY_CODE" +
      "_762\020\313\001\022\033\n\026ALL_TERRITORY_CODE_400\020\314\001\022\033\n\026" +
      "ALL_TERRITORY_CODE_642\020\315\001\022\033\n\026ALL_TERRITO" +
      "RY_CODE_643\020\316\001\022\033\n\026ALL_TERRITORY_CODE_764" +
      "\020\317\001\022\033\n\026ALL_TERRITORY_CODE_886\020\320\001\022\033\n\026ALL_" +
      "TERRITORY_CODE_524\020\321\001\022\033\n\026ALL_TERRITORY_C" +
      "ODE_887\020\322\001\022\033\n\026ALL_TERRITORY_CODE_404\020\323\001\022" +
      "\033\n\026ALL_TERRITORY_CODE_646\020\324\001\022\033\n\026ALL_TERR" +
      "ITORY_CODE_768\020\325\001\022\033\n\026ALL_TERRITORY_CODE_" +
      "J_E\020\326\001\022\033\n\026ALL_TERRITORY_CODE_528\020\327\001\022\033\n\026A" +
      "LL_TERRITORY_CODE_408\020\330\001\022\037\n\032ALL_TERRITOR" +
      "Y_CODE_F_X_F_R\020\331\001\022\037\n\032ALL_TERRITORY_CODE_" +
      "J_T_U_M\020\332\001\022\033\n\026ALL_TERRITORY_CODE_J_M\020\333\001\022" +
      "\033\n\026ALL_TERRITORY_CODE_J_O\020\334\001\022\033\n\026ALL_TERR" +
      "ITORY_CODE_J_P\020\335\001\022\033\n\026ALL_TERRITORY_CODE_" +
      "890\020\336\001\022\033\n\026ALL_TERRITORY_CODE_891\020\337\001\022\033\n\026A" +
      "LL_TERRITORY_CODE_410\020\340\001\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_894\020\341\001\022\033\n\026ALL_TERRITORY_CODE_776\020" +
      "\342\001\022\033\n\026ALL_TERRITORY_CODE_414\020\343\001\022\033\n\026ALL_T" +
      "ERRITORY_CODE_K_E\020\344\001\022\033\n\026ALL_TERRITORY_CO" +
      "DE_417\020\345\001\022\033\n\026ALL_TERRITORY_CODE_659\020\346\001\022\033" +
      "\n\026ALL_TERRITORY_CODE_418\020\347\001\022\037\n\032ALL_TERRI" +
      "TORY_CODE_S_K_I_N\020\350\001\022\033\n\026ALL_TERRITORY_CO" +
      "DE_K_G\020\351\001\022\033\n\026ALL_TERRITORY_CODE_K_H\020\352\001\022\033" +
      "\n\026ALL_TERRITORY_CODE_K_I\020\353\001\022\037\n\032ALL_TERRI" +
      "TORY_CODE_P_Z_P_A\020\354\001\022\033\n\026ALL_TERRITORY_CO" +
      "DE_K_M\020\355\001\022\037\n\032ALL_TERRITORY_CODE_N_T_H_H\020" +
      "\356\001\022\033\n\026ALL_TERRITORY_CODE_K_N\020\357\001\022\033\n\026ALL_T" +
      "ERRITORY_CODE_K_P\020\360\001\022\033\n\026ALL_TERRITORY_CO" +
      "DE_K_R\020\361\001\022\033\n\026ALL_TERRITORY_CODE_K_W\020\362\001\022\033" +
      "\n\026ALL_TERRITORY_CODE_K_Y\020\363\001\022\033\n\026ALL_TERRI" +
      "TORY_CODE_K_Z\020\364\001\022\033\n\026ALL_TERRITORY_CODE_7" +
      "80\020\365\001\022\037\n\032ALL_TERRITORY_CODE_C_S_H_H\020\366\001\022\033" +
      "\n\026ALL_TERRITORY_CODE_540\020\367\001\022\033\n\026ALL_TERRI" +
      "TORY_CODE_662\020\370\001\022\033\n\026ALL_TERRITORY_CODE_3" +
      "00\020\371\001\022\033\n\026ALL_TERRITORY_CODE_784\020\372\001\022\033\n\026AL" +
      "L_TERRITORY_CODE_422\020\373\001\022\033\n\026ALL_TERRITORY" +
      "_CODE_L_A\020\374\001\022\033\n\026ALL_TERRITORY_CODE_L_B\020\375" +
      "\001\022\033\n\026ALL_TERRITORY_CODE_L_C\020\376\001\022\033\n\026ALL_TE" +
      "RRITORY_CODE_788\020\377\001\022\033\n\026ALL_TERRITORY_COD" +
      "E_426\020\200\002\022\033\n\026ALL_TERRITORY_CODE_548\020\201\002\022\033\n" +
      "\026ALL_TERRITORY_CODE_428\020\202\002\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_308\020\203\002\022\033\n\026ALL_TERRITORY_CODE_L_" +
      "I\020\204\002\022\033\n\026ALL_TERRITORY_CODE_L_K\020\205\002\022\033\n\026ALL" +
      "_TERRITORY_CODE_L_R\020\206\002\022\033\n\026ALL_TERRITORY_" +
      "CODE_L_S\020\207\002\022\033\n\026ALL_TERRITORY_CODE_L_T\020\210\002" +
      "\022\033\n\026ALL_TERRITORY_CODE_L_U\020\211\002\022\033\n\026ALL_TER" +
      "RITORY_CODE_L_V\020\212\002\022\033\n\026ALL_TERRITORY_CODE" +
      "_L_Y\020\213\002\022\033\n\026ALL_TERRITORY_CODE_670\020\214\002\022\033\n\026" +
      "ALL_TERRITORY_CODE_792\020\215\002\022\037\n\032ALL_TERRITO" +
      "RY_CODE_C_T_K_I\020\216\002\022\033\n\026ALL_TERRITORY_CODE" +
      "_430\020\217\002\022\033\n\026ALL_TERRITORY_CODE_674\020\220\002\022\033\n\026" +
      "ALL_TERRITORY_CODE_795\020\221\002\022\033\n\026ALL_TERRITO" +
      "RY_CODE_M_A\020\222\002\022\033\n\026ALL_TERRITORY_CODE_554" +
      "\020\223\002\022\033\n\026ALL_TERRITORY_CODE_434\020\224\002\022\033\n\026ALL_" +
      "TERRITORY_CODE_M_C\020\225\002\022\033\n\026ALL_TERRITORY_C" +
      "ODE_798\020\226\002\022\033\n\026ALL_TERRITORY_CODE_M_D\020\227\002\022" +
      "\033\n\026ALL_TERRITORY_CODE_678\020\230\002\022\033\n\026ALL_TERR" +
      "ITORY_CODE_M_E\020\231\002\022\033\n\026ALL_TERRITORY_CODE_" +
      "558\020\232\002\022\033\n\026ALL_TERRITORY_CODE_M_F\020\233\002\022\033\n\026A" +
      "LL_TERRITORY_CODE_438\020\234\002\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_M_G\020\235\002\022\033\n\026ALL_TERRITORY_CODE_M_H\020" +
      "\236\002\022\033\n\026ALL_TERRITORY_CODE_M_K\020\237\002\022\033\n\026ALL_T" +
      "ERRITORY_CODE_M_L\020\240\002\022\033\n\026ALL_TERRITORY_CO" +
      "DE_M_M\020\241\002\022\033\n\026ALL_TERRITORY_CODE_M_N\020\242\002\022\033" +
      "\n\026ALL_TERRITORY_CODE_M_O\020\243\002\022\033\n\026ALL_TERRI" +
      "TORY_CODE_M_P\020\244\002\022\033\n\026ALL_TERRITORY_CODE_M" +
      "_Q\020\245\002\022\033\n\026ALL_TERRITORY_CODE_M_R\020\246\002\022\033\n\026AL" +
      "L_TERRITORY_CODE_M_S\020\247\002\022\033\n\026ALL_TERRITORY" +
      "_CODE_M_T\020\250\002\022\033\n\026ALL_TERRITORY_CODE_M_U\020\251" +
      "\002\022\033\n\026ALL_TERRITORY_CODE_M_V\020\252\002\022\033\n\026ALL_TE" +
      "RRITORY_CODE_M_W\020\253\002\022\033\n\026ALL_TERRITORY_COD" +
      "E_M_X\020\254\002\022\033\n\026ALL_TERRITORY_CODE_M_Y\020\255\002\022\033\n" +
      "\026ALL_TERRITORY_CODE_M_Z\020\256\002\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_440\020\257\002\022\033\n\026ALL_TERRITORY_CODE_68" +
      "2\020\260\002\022\033\n\026ALL_TERRITORY_CODE_320\020\261\002\022\033\n\026ALL" +
      "_TERRITORY_CODE_562\020\262\002\022\033\n\026ALL_TERRITORY_" +
      "CODE_200\020\263\002\022\033\n\026ALL_TERRITORY_CODE_442\020\264\002" +
      "\022\033\n\026ALL_TERRITORY_CODE_N_A\020\265\002\022\037\n\032ALL_TER" +
      "RITORY_CODE_Z_R_C_D\020\266\002\022\033\n\026ALL_TERRITORY_" +
      "CODE_686\020\267\002\022\033\n\026ALL_TERRITORY_CODE_N_C\020\270\002" +
      "\022\033\n\026ALL_TERRITORY_CODE_203\020\271\002\022\033\n\026ALL_TER" +
      "RITORY_CODE_324\020\272\002\022\033\n\026ALL_TERRITORY_CODE" +
      "_566\020\273\002\022\033\n\026ALL_TERRITORY_CODE_204\020\274\002\022\033\n\026" +
      "ALL_TERRITORY_CODE_688\020\275\002\022\033\n\026ALL_TERRITO" +
      "RY_CODE_N_E\020\276\002\022\033\n\026ALL_TERRITORY_CODE_N_F" +
      "\020\277\002\022\033\n\026ALL_TERRITORY_CODE_N_G\020\300\002\022\033\n\026ALL_" +
      "TERRITORY_CODE_328\020\301\002\022\033\n\026ALL_TERRITORY_C" +
      "ODE_208\020\302\002\022\033\n\026ALL_TERRITORY_CODE_N_I\020\303\002\022" +
      "\033\n\026ALL_TERRITORY_CODE_N_L\020\304\002\022\033\n\026ALL_TERR" +
      "ITORY_CODE_N_O\020\305\002\022\033\n\026ALL_TERRITORY_CODE_" +
      "N_P\020\306\002\022\033\n\026ALL_TERRITORY_CODE_N_R\020\307\002\022\033\n\026A" +
      "LL_TERRITORY_CODE_N_U\020\310\002\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_N_Z\020\311\002\022\033\n\026ALL_TERRITORY_CODE_690\020" +
      "\312\002\022\037\n\032ALL_TERRITORY_CODE_V_D_V_N\020\313\002\022\033\n\026A" +
      "LL_TERRITORY_CODE_450\020\314\002\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_694\020\315\002\022\033\n\026ALL_TERRITORY_CODE_332\020" +
      "\316\002\022\033\n\026ALL_TERRITORY_CODE_212\020\317\002\022\033\n\026ALL_T" +
      "ERRITORY_CODE_454\020\320\002\022\037\n\032ALL_TERRITORY_CO" +
      "DE_T_P_T_L\020\321\002\022\033\n\026ALL_TERRITORY_CODE_214\020" +
      "\322\002\022\033\n\026ALL_TERRITORY_CODE_336\020\323\002\022\033\n\026ALL_T" +
      "ERRITORY_CODE_578\020\324\002\022\033\n\026ALL_TERRITORY_CO" +
      "DE_458\020\325\002\022\033\n\026ALL_TERRITORY_CODE_218\020\326\002\022\037" +
      "\n\032ALL_TERRITORY_CODE_N_H_V_U\020\327\002\022\033\n\026ALL_T" +
      "ERRITORY_CODE_O_M\020\330\002\022\033\n\026ALL_TERRITORY_CO" +
      "DE_340\020\331\002\022\033\n\026ALL_TERRITORY_CODE_462\020\332\002\022\033" +
      "\n\026ALL_TERRITORY_CODE_583\020\333\002\022\037\n\032ALL_TERRI" +
      "TORY_CODE_H_V_B_F\020\334\002\022\033\n\026ALL_TERRITORY_CO" +
      "DE_P_A\020\335\002\022\033\n\026ALL_TERRITORY_CODE_100\020\336\002\022\033" +
      "\n\026ALL_TERRITORY_CODE_584\020\337\002\022\033\n\026ALL_TERRI" +
      "TORY_CODE_222\020\340\002\022\033\n\026ALL_TERRITORY_CODE_5" +
      "85\020\341\002\022\033\n\026ALL_TERRITORY_CODE_344\020\342\002\022\033\n\026AL" +
      "L_TERRITORY_CODE_586\020\343\002\022\037\n\032ALL_TERRITORY" +
      "_CODE_A_N_H_H\020\344\002\022\033\n\026ALL_TERRITORY_CODE_4" +
      "66\020\345\002\022\033\n\026ALL_TERRITORY_CODE_P_E\020\346\002\022\033\n\026AL" +
      "L_TERRITORY_CODE_104\020\347\002\022\033\n\026ALL_TERRITORY" +
      "_CODE_P_F\020\350\002\022\033\n\026ALL_TERRITORY_CODE_226\020\351" +
      "\002\022\033\n\026ALL_TERRITORY_CODE_P_G\020\352\002\022\033\n\026ALL_TE" +
      "RRITORY_CODE_348\020\353\002\022\033\n\026ALL_TERRITORY_COD" +
      "E_P_H\020\354\002\022\033\n\026ALL_TERRITORY_CODE_108\020\355\002\022\033\n" +
      "\026ALL_TERRITORY_CODE_P_K\020\356\002\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_P_L\020\357\002\022\033\n\026ALL_TERRITORY_CODE_P_" +
      "M\020\360\002\022\033\n\026ALL_TERRITORY_CODE_P_N\020\361\002\022\033\n\026ALL" +
      "_TERRITORY_CODE_P_R\020\362\002\022\033\n\026ALL_TERRITORY_" +
      "CODE_P_S\020\363\002\022\033\n\026ALL_TERRITORY_CODE_P_T\020\364\002" +
      "\022\033\n\026ALL_TERRITORY_CODE_P_W\020\365\002\022\033\n\026ALL_TER" +
      "RITORY_CODE_P_Y\020\366\002\022\033\n\026ALL_TERRITORY_CODE" +
      "_470\020\367\002\022\033\n\026ALL_TERRITORY_CODE_591\020\370\002\022\033\n\026" +
      "ALL_TERRITORY_CODE_230\020\371\002\022\033\n\026ALL_TERRITO" +
      "RY_CODE_Q_A\020\372\002\022\033\n\026ALL_TERRITORY_CODE_231" +
      "\020\373\002\022\033\n\026ALL_TERRITORY_CODE_352\020\374\002\022\033\n\026ALL_" +
      "TERRITORY_CODE_232\020\375\002\022\033\n\026ALL_TERRITORY_C" +
      "ODE_112\020\376\002\022\033\n\026ALL_TERRITORY_CODE_233\020\377\002\022" +
      "(\n#ALL_TERRITORY_CODE_E_S__MINUS___C_E\020\200" +
      "\003\022\033\n\026ALL_TERRITORY_CODE_356\020\201\003\022\033\n\026ALL_TE" +
      "RRITORY_CODE_598\020\202\003\022\033\n\026ALL_TERRITORY_COD" +
      "E_478\020\203\003\022\033\n\026ALL_TERRITORY_CODE_116\020\204\003\022\037\n" +
      "\032ALL_TERRITORY_CODE_P_C_H_H\020\205\003\022(\n#ALL_TE" +
      "RRITORY_CODE_E_S__MINUS___C_N\020\206\003\022\032\n\025ALL_" +
      "TERRITORY_CODE_12\020\207\003\022\033\n\026ALL_TERRITORY_CO" +
      "DE_480\020\210\003\022\033\n\026ALL_TERRITORY_CODE_360\020\211\003\022\033" +
      "\n\026ALL_TERRITORY_CODE_120\020\212\003\022\033\n\026ALL_TERRI" +
      "TORY_CODE_242\020\213\003\022\033\n\026ALL_TERRITORY_CODE_4" +
      "84\020\214\003\022\033\n\026ALL_TERRITORY_CODE_364\020\215\003\022\033\n\026AL" +
      "L_TERRITORY_CODE_R_E\020\216\003\022\033\n\026ALL_TERRITORY" +
      "_CODE_124\020\217\003\022\033\n\026ALL_TERRITORY_CODE_246\020\220" +
      "\003\022\033\n\026ALL_TERRITORY_CODE_368\020\221\003\022\033\n\026ALL_TE" +
      "RRITORY_CODE_R_O\020\222\003\022\032\n\025ALL_TERRITORY_COD" +
      "E_20\020\223\003\022\033\n\026ALL_TERRITORY_CODE_R_S\020\224\003\022\032\n\025" +
      "ALL_TERRITORY_CODE_24\020\225\003\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_R_U\020\226\003\022\033\n\026ALL_TERRITORY_CODE_R_W\020" +
      "\227\003\022\032\n\025ALL_TERRITORY_CODE_28\020\230\003\022\033\n\026ALL_TE" +
      "RRITORY_CODE_250\020\231\003\022\033\n\026ALL_TERRITORY_COD" +
      "E_492\020\232\003\022\033\n\026ALL_TERRITORY_CODE_S_A\020\233\003\022\033\n" +
      "\026ALL_TERRITORY_CODE_372\020\234\003\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_S_B\020\235\003\022\033\n\026ALL_TERRITORY_CODE_S_" +
      "C\020\236\003\022\033\n\026ALL_TERRITORY_CODE_132\020\237\003\022\033\n\026ALL" +
      "_TERRITORY_CODE_S_D\020\240\003\022\033\n\026ALL_TERRITORY_" +
      "CODE_496\020\241\003\022\033\n\026ALL_TERRITORY_CODE_S_E\020\242\003" +
      "\022\033\n\026ALL_TERRITORY_CODE_376\020\243\003\022\033\n\026ALL_TER" +
      "RITORY_CODE_498\020\244\003\022\033\n\026ALL_TERRITORY_CODE" +
      "_S_G\020\245\003\022\033\n\026ALL_TERRITORY_CODE_499\020\246\003\022\033\n\026" +
      "ALL_TERRITORY_CODE_S_H\020\247\003\022\033\n\026ALL_TERRITO" +
      "RY_CODE_258\020\250\003\022\033\n\026ALL_TERRITORY_CODE_S_I" +
      "\020\251\003\022\033\n\026ALL_TERRITORY_CODE_S_J\020\252\003\022\033\n\026ALL_" +
      "TERRITORY_CODE_S_K\020\253\003\022\033\n\026ALL_TERRITORY_C" +
      "ODE_S_L\020\254\003\022\033\n\026ALL_TERRITORY_CODE_S_M\020\255\003\022" +
      "\033\n\026ALL_TERRITORY_CODE_S_N\020\256\003\022\033\n\026ALL_TERR" +
      "ITORY_CODE_S_O\020\257\003\022\032\n\025ALL_TERRITORY_CODE_" +
      "31\020\260\003\022\033\n\026ALL_TERRITORY_CODE_S_R\020\261\003\022\032\n\025AL" +
      "L_TERRITORY_CODE_32\020\262\003\022\033\n\026ALL_TERRITORY_" +
      "CODE_S_S\020\263\003\022\033\n\026ALL_TERRITORY_CODE_S_T\020\264\003" +
      "\022\033\n\026ALL_TERRITORY_CODE_S_V\020\265\003\022\032\n\025ALL_TER" +
      "RITORY_CODE_36\020\266\003\022\033\n\026ALL_TERRITORY_CODE_" +
      "S_X\020\267\003\022\033\n\026ALL_TERRITORY_CODE_S_Y\020\270\003\022\033\n\026A" +
      "LL_TERRITORY_CODE_S_Z\020\271\003\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_380\020\272\003\022\033\n\026ALL_TERRITORY_CODE_140\020" +
      "\273\003\022\033\n\026ALL_TERRITORY_CODE_262\020\274\003\022\033\n\026ALL_T" +
      "ERRITORY_CODE_T_C\020\275\003\022\033\n\026ALL_TERRITORY_CO" +
      "DE_384\020\276\003\022\033\n\026ALL_TERRITORY_CODE_T_D\020\277\003\022\033" +
      "\n\026ALL_TERRITORY_CODE_144\020\300\003\022\033\n\026ALL_TERRI" +
      "TORY_CODE_T_F\020\301\003\022\033\n\026ALL_TERRITORY_CODE_2" +
      "66\020\302\003\022\033\n\026ALL_TERRITORY_CODE_T_G\020\303\003\022\033\n\026AL" +
      "L_TERRITORY_CODE_388\020\304\003\022\033\n\026ALL_TERRITORY" +
      "_CODE_T_H\020\305\003\022\033\n\026ALL_TERRITORY_CODE_268\020\306" +
      "\003\022\033\n\026ALL_TERRITORY_CODE_148\020\307\003\022\033\n\026ALL_TE" +
      "RRITORY_CODE_T_J\020\310\003\022\033\n\026ALL_TERRITORY_COD" +
      "E_T_K\020\311\003\022\033\n\026ALL_TERRITORY_CODE_T_L\020\312\003\022\033\n" +
      "\026ALL_TERRITORY_CODE_T_M\020\313\003\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_T_N\020\314\003\022\033\n\026ALL_TERRITORY_CODE_T_" +
      "O\020\315\003\022\032\n\025ALL_TERRITORY_CODE_40\020\316\003\022\033\n\026ALL_" +
      "TERRITORY_CODE_T_R\020\317\003\022\037\n\032ALL_TERRITORY_C" +
      "ODE_G_E_H_H\020\320\003\022\033\n\026ALL_TERRITORY_CODE_T_T" +
      "\020\321\003\022\032\n\025ALL_TERRITORY_CODE_44\020\322\003\022\033\n\026ALL_T" +
      "ERRITORY_CODE_T_V\020\323\003\022\033\n\026ALL_TERRITORY_CO" +
      "DE_T_W\020\324\003\022\032\n\025ALL_TERRITORY_CODE_48\020\325\003\022\033\n" +
      "\026ALL_TERRITORY_CODE_T_Z\020\326\003\022\033\n\026ALL_TERRIT" +
      "ORY_CODE_270\020\327\003\022\033\n\026ALL_TERRITORY_CODE_U_" +
      "A\020\330\003\022\033\n\026ALL_TERRITORY_CODE_392\020\331\003\022\033\n\026ALL" +
      "_TERRITORY_CODE_152\020\332\003\022\033\n\026ALL_TERRITORY_" +
      "CODE_276\020\333\003\022\033\n\026ALL_TERRITORY_CODE_U_G\020\334\003" +
      "\022\033\n\026ALL_TERRITORY_CODE_156\020\335\003\022\033\n\026ALL_TER" +
      "RITORY_CODE_398\020\336\003\022\033\n\026ALL_TERRITORY_CODE" +
      "_278\020\337\003\022\033\n\026ALL_TERRITORY_CODE_158\020\340\003\022\033\n\026" +
      "ALL_TERRITORY_CODE_U_M\020\341\003\022\032\n\025ALL_TERRITO" +
      "RY_CODE_50\020\342\003\022\032\n\025ALL_TERRITORY_CODE_51\020\343" +
      "\003\022\032\n\025ALL_TERRITORY_CODE_52\020\344\003\022\033\n\026ALL_TER" +
      "RITORY_CODE_U_S\020\345\003\022\032\n\025ALL_TERRITORY_CODE" +
      "_56\020\346\003\022\033\n\026ALL_TERRITORY_CODE_U_Y\020\347\003\022\033\n\026A" +
      "LL_TERRITORY_CODE_U_Z\020\350\003\022\037\n\032ALL_TERRITOR" +
      "Y_CODE_B_Y_A_A\020\351\003\022\033\n\026ALL_TERRITORY_CODE_" +
      "280\020\352\003\022\033\n\026ALL_TERRITORY_CODE_V_A\020\353\003\022\033\n\026A" +
      "LL_TERRITORY_CODE_V_C\020\354\003\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_V_E\020\355\003\022\037\n\032ALL_TERRITORY_CODE_A_I_" +
      "D_J\020\356\003\022\033\n\026ALL_TERRITORY_CODE_V_G\020\357\003\022\033\n\026A" +
      "LL_TERRITORY_CODE_288\020\360\003\022\033\n\026ALL_TERRITOR" +
      "Y_CODE_V_I\020\361\003\022\033\n\026ALL_TERRITORY_CODE_V_N\020" +
      "\362\003\022\032\n\025ALL_TERRITORY_CODE_64\020\363\003\022\033\n\026ALL_TE" +
      "RRITORY_CODE_V_U\020\364\003\022\032\n\025ALL_TERRITORY_COD" +
      "E_68\020\365\003\022\037\n\032ALL_TERRITORY_CODE_S_U_H_H\020\366\003" +
      "\022\033\n\026ALL_TERRITORY_CODE_170\020\367\003\022\033\n\026ALL_TER" +
      "RITORY_CODE_174\020\370\003\022\033\n\026ALL_TERRITORY_CODE",
      "_W_F\020\371\003\022\033\n\026ALL_TERRITORY_CODE_296\020\372\003\022\033\n\026" +
      "ALL_TERRITORY_CODE_178\020\373\003\022\032\n\025ALL_TERRITO" +
      "RY_CODE_70\020\374\003\022\032\n\025ALL_TERRITORY_CODE_72\020\375" +
      "\003\022\033\n\026ALL_TERRITORY_CODE_W_S\020\376\003\022\032\n\025ALL_TE" +
      "RRITORY_CODE_76\020\377\003\022\033\n\026ALL_TERRITORY_CODE" +
      "_180\020\200\004\022\033\n\026ALL_TERRITORY_CODE_188\020\201\004\022\033\n\026" +
      "ALL_TERRITORY_CODE_X_K\020\202\004\022\032\n\025ALL_TERRITO" +
      "RY_CODE_84\020\203\004\022\033\n\026ALL_TERRITORY_CODE_191\020" +
      "\204\004\022\033\n\026ALL_TERRITORY_CODE_192\020\205\004\022\033\n\026ALL_T" +
      "ERRITORY_CODE_Y_E\020\206\004\022\033\n\026ALL_TERRITORY_CO" +
      "DE_196\020\207\004\022\032\n\025ALL_TERRITORY_CODE_90\020\210\004\022\033\n" +
      "\026ALL_TERRITORY_CODE_Y_T\020\211\004\022\032\n\025ALL_TERRIT" +
      "ORY_CODE_96\020\212\004\022\033\n\026ALL_TERRITORY_CODE_Z_A" +
      "\020\213\004\022\037\n\032ALL_TERRITORY_CODE_F_Q_H_H\020\214\004\022!\n\034" +
      "ALL_TERRITORY_CODE_WORLDWIDE\020\215\004\022\033\n\026ALL_T" +
      "ERRITORY_CODE_Z_M\020\216\004\022\033\n\026ALL_TERRITORY_CO" +
      "DE_Z_W\020\217\004\022\037\n\032ALL_TERRITORY_CODE_C_S_X_X\020" +
      "\220\004\022\037\n\032ALL_TERRITORY_CODE_P_U_U_M\020\221\004\022\037\n\032A" +
      "LL_TERRITORY_CODE_Y_D_Y_E\020\222\004\022\037\n\032ALL_TERR" +
      "ITORY_CODE_D_Y_B_J\020\223\004\022\037\n\032ALL_TERRITORY_C" +
      "ODE_R_H_Z_W\020\224\004*\310\004\n\nArtistRole\022\034\n\030ARTIST_" +
      "ROLE_CALLIGRAPHER\020\000\022\032\n\026ARTIST_ROLE_CARTO" +
      "ONIST\020\001\022\033\n\027ARTIST_ROLE_DRAUGHTSMAN\020\002\022\033\n\027" +
      "ARTIST_ROLE_ART_COPYIST\020\003\022\032\n\026ARTIST_ROLE" +
      "_DELINEATOR\020\004\022#\n\037ARTIST_ROLE_COMPUTER_PR" +
      "OGRAMMER\020\005\022\030\n\024ARTIST_ROLE_DESIGNER\020\006\022\027\n\023" +
      "ARTIST_ROLE_UNKNOWN\020\007\022\033\n\027ARTIST_ROLE_ILL" +
      "USTRATOR\020\010\022\035\n\031ARTIST_ROLE_MUSIC_COPYIST\020" +
      "\t\022(\n$ARTIST_ROLE_COMPUTER_GRAPHIC_CREATO" +
      "R\020\n\022\034\n\030ARTIST_ROLE_PHOTOGRAPHER\020\013\022\034\n\030ART" +
      "IST_ROLE_CARTOGRAPHER\020\014\022\027\n\023ARTIST_ROLE_P" +
      "AINTER\020\r\022\033\n\027ARTIST_ROLE_FACSIMILIST\020\016\022\036\n" +
      "\032ARTIST_ROLE_GRAPHIC_ARTIST\020\017\022\035\n\031ARTIST_" +
      "ROLE_TYPE_DESIGNER\020\020\022\035\n\031ARTIST_ROLE_NOT_" +
      "SPECIFIED\020\021\022\034\n\030ARTIST_ROLE_USER_DEFINED\020" +
      "\022*\222\010\n\nArtistType\022\024\n\020ARTIST_TYPE_DUET\020\000\022\036" +
      "\n\032ARTIST_TYPE_STRING_QUARTET\020\001\022\035\n\031ARTIST" +
      "_TYPE_WIND_ENSEMBLE\020\002\022,\n(ARTIST_TYPE_INS" +
      "TRUMENT_AND_ACCOMPANIMENT\020\003\022\032\n\026ARTIST_TY" +
      "PE_JAZZ_COMBO\020\004\022\037\n\033ARTIST_TYPE_SOLO_INST" +
      "RUMENT\020\005\022\032\n\026ARTIST_TYPE_FOLK_GROUP\020\006\022\033\n\027" +
      "ARTIST_TYPE_REGGAE_BAND\020\007\022 \n\034ARTIST_TYPE" +
      "_ELECTRONIC_GROUP\020\010\022\034\n\030ARTIST_TYPE_USER_" +
      "DEFINED\020\t\022\036\n\032ARTIST_TYPE_PIANO_ENSEMBLE\020" +
      "\n\022\035\n\031ARTIST_TYPE_MARCHING_BAND\020\013\022\032\n\026ARTI" +
      "ST_TYPE_PIANO_TRIO\020\014\022\030\n\024ARTIST_TYPE_POP_" +
      "BAND\020\r\022#\n\037ARTIST_TYPE_A_CAPPELLA_ENSEMBL" +
      "E\020\016\022\024\n\020ARTIST_TYPE_TRIO\020\017\022\'\n#ARTIST_TYPE" +
      "_VOICE_AND_ACCOMPANIMENT\020\020\022\036\n\032ARTIST_TYP" +
      "E_STRING_QUINTET\020\021\022\030\n\024ARTIST_TYPE_BIG_BA" +
      "ND\020\022\022\031\n\025ARTIST_TYPE_ORCHESTRA\020\023\022\035\n\031ARTIS" +
      "T_TYPE_COUNTRY_GROUP\020\024\022!\n\035ARTIST_TYPE_CH" +
      "AMBER_ORCHESTRA\020\025\022\035\n\031ARTIST_TYPE_MARIACH" +
      "I_BAND\020\026\022#\n\037ARTIST_TYPE_BARBERSHOP_ENSEM" +
      "BLE\020\027\022#\n\037ARTIST_TYPE_PIPE_AND_DRUM_GROUP" +
      "\020\030\022\035\n\031ARTIST_TYPE_PIANO_QUINTET\020\031\022#\n\037ART" +
      "IST_TYPE_FIFE_AND_DRUM_CORPS\020\032\022\031\n\025ARTIST" +
      "_TYPE_ROCK_BAND\020\033\022\032\n\026ARTIST_TYPE_BRASS_B" +
      "AND\020\034\022\033\n\027ARTIST_TYPE_LATIN_GROUP\020\035\022\035\n\031AR" +
      "TIST_TYPE_PIANO_QUARTET\020\036\022\032\n\026ARTIST_TYPE" +
      "_SOLO_VOICE\020\037\022\037\n\033ARTIST_TYPE_STRING_ENSE" +
      "MBLE\020 *K\n\017AspectRatioType\022\033\n\027ASPECT_RATI" +
      "O_TYPE_P_A_R\020\000\022\033\n\027ASPECT_RATIO_TYPE_D_A_" +
      "R\020\001*\377\001\n\014AsserterType\022$\n ASSERTER_TYPE_CO" +
      "LLECTION_SOCIETY\020\000\022:\n6ASSERTER_TYPE_RECO" +
      "RD_COMPANY_WITH_INTEREST_IN_RESOURCE\020\001\022)" +
      "\n%ASSERTER_TYPE_MUSIC_LICENSING_COMPANY\020" +
      "\002\022\033\n\027ASSERTER_TYPE_PUBLISHER\020\003\022&\n\"ASSERT" +
      "ER_TYPE_INTERESTED_PUBLISHER\020\004\022\035\n\031ASSERT" +
      "ER_TYPE_THIRD_PARTY\020\005*0\n\017AssertionStatus" +
      "\022\035\n\031ASSERTION_STATUS_VERIFIED\020\000*\254\005\n\016Audi" +
      "oCodecType\022\033\n\027AUDIO_CODEC_TYPE_VORBIS\020\000\022" +
      "\032\n\026AUDIO_CODEC_TYPE_A_A_C\020\001\022\036\n\032AUDIO_COD" +
      "EC_TYPE_A_D_P_C_M\020\002\022\030\n\024AUDIO_CODEC_TYPE_" +
      "M_P\020\003\022\036\n\032AUDIO_CODEC_TYPE_Q_C_E_L_P\020\004\022\032\n" +
      "\026AUDIO_CODEC_TYPE_A_M_R\020\005\022\034\n\030AUDIO_CODEC" +
      "_TYPE_F_L_A_C\020\006\022\033\n\027AUDIO_CODEC_TYPE_MU_L" +
      "AW\020\007\022\032\n\026AUDIO_CODEC_TYPE_W_M_A\020\010\022\037\n\033AUDI" +
      "O_CODEC_TYPE_REAL_AUDIO\020\t\022\031\n\025AUDIO_CODEC" +
      "_TYPE_M_P2\020\n\022\031\n\025AUDIO_CODEC_TYPE_M_P3\020\013\022" +
      "\036\n\032AUDIO_CODEC_TYPE_SHOCKWAVE\020\014\022\032\n\026AUDIO" +
      "_CODEC_TYPE_ATMOS\020\r\022\034\n\030AUDIO_CODEC_TYPE_" +
      "UNKNOWN\020\016\022\'\n#AUDIO_CODEC_TYPE_A_M_R__MIN" +
      "US___N_B\020\017\022\032\n\026AUDIO_CODEC_TYPE_P_D_M\020\020\022\032" +
      "\n\026AUDIO_CODEC_TYPE_P_C_M\020\021\022\'\n#AUDIO_CODE" +
      "C_TYPE_A_M_R__MINUS___W_B\020\022\022\032\n\026AUDIO_COD" +
      "EC_TYPE_M_Q_A\020\023\022!\n\035AUDIO_CODEC_TYPE_USER" +
      "_DEFINED\020\024\022\032\n\026AUDIO_CODEC_TYPE_A_LAW\020\025*\246" +
      "\002\n\031BasisForRevenueAllocation\022&\n\"BASIS_FO" +
      "R_REVENUE_ALLOCATION_PROXY\020\000\022*\n&BASIS_FO" +
      "R_REVENUE_ALLOCATION_USAGE_LOG\020\001\022(\n$BASI" +
      "S_FOR_REVENUE_ALLOCATION_DERIVED\020\002\022,\n(BA" +
      "SIS_FOR_REVENUE_ALLOCATION_FULL_CENSUS\020\003" +
      "\022-\n)BASIS_FOR_REVENUE_ALLOCATION_MARKET_" +
      "SHARE\020\004\022.\n*BASIS_FOR_REVENUE_ALLOCATION_" +
      "SAMPLE_CENSUS\020\005*P\n\016BinaryDataType\022\037\n\033BIN" +
      "ARY_DATA_TYPE_HEX_BINARY\020\000\022\035\n\031BINARY_DAT" +
      "A_TYPE_BINARY64\020\001*\300\005\n\"BusinessMusicalWor" +
      "kContributorRole\022>\n:BUSINESS_MUSICAL_WOR" +
      "K_CONTRIBUTOR_ROLE_NEWSPAPER_PUBLISHER\020\000" +
      "\022?\n;BUSINESS_MUSICAL_WORK_CONTRIBUTOR_RO" +
      "LE_PERIODICAL_PUBLISHER\020\001\0229\n5BUSINESS_MU" +
      "SICAL_WORK_CONTRIBUTOR_ROLE_BOOK_PUBLISH" +
      "ER\020\002\022=\n9BUSINESS_MUSICAL_WORK_CONTRIBUTO" +
      "R_ROLE_ORIGINAL_PUBLISHER\020\003\0222\n.BUSINESS_" +
      "MUSICAL_WORK_CONTRIBUTOR_ROLE_UNKNOWN\020\004\022" +
      ":\n6BUSINESS_MUSICAL_WORK_CONTRIBUTOR_ROL" +
      "E_MUSIC_PUBLISHER\020\005\022;\n7BUSINESS_MUSICAL_" +
      "WORK_CONTRIBUTOR_ROLE_COPYRIGHT_HOLDER\020\006" +
      "\022@\n<BUSINESS_MUSICAL_WORK_CONTRIBUTOR_RO" +
      "LE_SUBSTITUTED_PUBLISHER\020\007\022=\n9BUSINESS_M" +
      "USICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_C" +
      "LAIMANT\020\010\0227\n3BUSINESS_MUSICAL_WORK_CONTR" +
      "IBUTOR_ROLE_USER_DEFINED\020\t\0228\n4BUSINESS_M" +
      "USICAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISH" +
      "ER\020\n*\221\037\n\013CarrierType\022\031\n\025CARRIER_TYPE_FAN" +
      "_PACK\020\000\022$\n CARRIER_TYPE_SACD_PLUS_DVD_VI" +
      "DEO\020\001\022(\n$CARRIER_TYPE_CD_MAXI_SINGLE_ENH" +
      "ANCED\020\002\0225\n1CARRIER_TYPE_DVD_VIDEO_LP_PLU" +
      "S_CD_LP_OR_CD_SINGLE\020\003\022\036\n\032CARRIER_TYPE_M" +
      "INI_DISC_E_P\020\004\022\030\n\024CARRIER_TYPE_S_A_C_D\020\005" +
      "\022\036\n\032CARRIER_TYPE_PRE_PAID_CARD\020\006\022-\n)CARR" +
      "IER_TYPE_LASER_DISC_LP12_INCH_N_T_S_C\020\007\022" +
      "1\n-CARRIER_TYPE_SACD_LP_STEREO_SURROUND_" +
      "CD_AUDIO\020\010\022$\n CARRIER_TYPE_MC_IDENTICAL_" +
      "TO_C_D\020\t\022\026\n\022CARRIER_TYPE_CD_EP\020\n\022%\n!CARR" +
      "IER_TYPE_CD_LP_PLUS_DVD_VIDEO\020\013\022#\n\037CARRI" +
      "ER_TYPE_DVD_VIDEO_LP_P_A_L\020\014\022\030\n\024CARRIER_" +
      "TYPE_BLU_RAY\020\r\022(\n$CARRIER_TYPE_CD_EXTRA_" +
      "SINGLE2_TRACKS\020\016\022$\n CARRIER_TYPE_CD_LP_P" +
      "LUS_CD_VIDEO\020\017\022\033\n\027CARRIER_TYPE_COMBI_PAC" +
      "K\020\020\022\035\n\031CARRIER_TYPE_USER_DEFINED\020\021\022/\n+CA" +
      "RRIER_TYPE_DVD_VIDEO5_MAXI_SINGLE_N_T_S_" +
      "C\020\022\022\037\n\033CARRIER_TYPE_SACD_LP_STEREO\020\023\022$\n " +
      "CARRIER_TYPE_33RPM10_INCH_SINGLE\020\024\022&\n\"CA" +
      "RRIER_TYPE_MINI_DISC_COMPILATION\020\025\022!\n\035CA" +
      "RRIER_TYPE_33RPM12_INCH_L_P\020\026\022%\n!CARRIER" +
      "_TYPE_DVD_VIDEO_LP_N_T_S_C\020\027\022\032\n\026CARRIER_" +
      "TYPE_DVD_VIDEO\020\030\022!\n\035CARRIER_TYPE_SACD_CO" +
      "MPILATION\020\031\022-\n)CARRIER_TYPE_MC_SINGLE_ID" +
      "ENTICAL_TO_C_D_S\020\032\022\'\n#CARRIER_TYPE_DVD_A" +
      "UDIO5_MAXI_SINGLE\020\033\022%\n!CARRIER_TYPE_CD_M" +
      "AXI_SINGLE3_INCH\020\034\022\034\n\030CARRIER_TYPE_CD_LP" +
      "5_INCH\020\035\022\034\n\030CARRIER_TYPE_MERCHANDISE\020\036\022\037" +
      "\n\033CARRIER_TYPE_LP_COMPILATION\020\037\022)\n%CARRI" +
      "ER_TYPE_45RPM12_INCH_MAXI_SINGLE\020 \022%\n!CA" +
      "RRIER_TYPE_CD_VIDEO5_LP_N_T_S_C\020!\022#\n\037CAR" +
      "RIER_TYPE_45RPM7_INCH_SINGLE\020\"\022%\n!CARRIE" +
      "R_TYPE_CD_EXTRA_COMPILATION\020#\022\037\n\033CARRIER" +
      "_TYPE_CD_LP_ENHANCED\020$\022 \n\034CARRIER_TYPE_3" +
      "3RPM7_INCH_L_P\020%\022-\n)CARRIER_TYPE_DVD_VID" +
      "EO5_MAXI_SINGLE_P_A_L\020&\022!\n\035CARRIER_TYPE_" +
      "CD_PLUS_CD_BONUS\020\'\022*\n&CARRIER_TYPE_CD_VI" +
      "DEO_AUDIO_COMPATIBLE\020(\022\027\n\023CARRIER_TYPE_C" +
      "D_ROM\020)\022\032\n\026CARRIER_TYPE_CD_SINGLE\020*\022-\n)C" +
      "ARRIER_TYPE_MC_COMP_IDENTICAL_TO_CD_COMP" +
      "\020+\022-\n)CARRIER_TYPE_MINI_DISC_SINGLE_MAXI" +
      "_SINGLE\020,\022(\n$CARRIER_TYPE_DVD_VIDEO5_SIN" +
      "GLE_P_A_L\020-\022\036\n\032CARRIER_TYPE_MEMORY_DEVIC" +
      "E\020.\022\032\n\026CARRIER_TYPE_VHS_P_A_L\020/\022(\n$CARRI" +
      "ER_TYPE_SACD_LP_STEREO_SURROUND\0200\022\036\n\032CAR" +
      "RIER_TYPE_DVD_AUDIO_L_P\0201\022\032\n\026CARRIER_TYP" +
      "E_DVD_AUDIO\0202\022\033\n\027CARRIER_TYPE_DVD_SINGLE" +
      "\0203\022)\n%CARRIER_TYPE_33RPM12_INCH_MAXI_SIN" +
      "GLE\0204\022\024\n\020CARRIER_TYPE_C_D\0205\022%\n!CARRIER_T" +
      "YPE_CD_MAXI_SINGLE_REMIX\0206\022\032\n\026CARRIER_TY" +
      "PE_MINI_DISC\0207\022(\n$CARRIER_TYPE_MEMORY_DE" +
      "VICE_AUDIO_L_P\0208\022!\n\035CARRIER_TYPE_33RPM10" +
      "_INCH_L_P\0209\022$\n CARRIER_TYPE_45RPM12_INCH" +
      "_SINGLE\020:\022)\n%CARRIER_TYPE_7_INCH_MAXI_SI" +
      "NGLE_REMIX\020;\022*\n&CARRIER_TYPE_DVD_VIDEO5_" +
      "SINGLE_N_T_S_C\020<\022\037\n\033CARRIER_TYPE_VHS_PLU" +
      "S_CD_LP\020=\022$\n CARRIER_TYPE_CD_EXTRA_MAXI_" +
      "REMIX\020>\022)\n%CARRIER_TYPE_45RPM10_INCH_MAX" +
      "I_SINGLE\020?\022!\n\035CARRIER_TYPE_45RPM10_INCH_" +
      "L_P\020@\022-\n)CARRIER_TYPE_LP_COMP_IDENTICAL_" +
      "TO_CD_COMP\020A\022$\n CARRIER_TYPE_LP_IDENTICA" +
      "L_TO_C_D\020B\022\037\n\033CARRIER_TYPE_MC_COMPILATIO" +
      "N\020C\022\037\n\033CARRIER_TYPE_CD_EP_ENHANCED\020D\022\024\n\020" +
      "CARRIER_TYPE_M_C\020E\022 \n\034CARRIER_TYPE_DCC_C" +
      "OMPILATION\020F\022\034\n\030CARRIER_TYPE_FILE_SYSTEM" +
      "\020G\022\035\n\031CARRIER_TYPE_CD_EXTRA_L_P\020H\022%\n!CAR" +
      "RIER_TYPE_CD_LP_PLUS_DVD_AUDIO\020I\022\036\n\032CARR" +
      "IER_TYPE_MC_DOUBLE_L_P\020J\022\027\n\023CARRIER_TYPE" +
      "_MC_L_P\020K\022\026\n\022CARRIER_TYPE_D_C_C\020L\022 \n\034CAR" +
      "RIER_TYPE_HD_DVD_VIDEO_LP\020M\022\035\n\031CARRIER_T" +
      "YPE_CD_EXTRA_E_P\020N\022!\n\035CARRIER_TYPE_DVD_A" +
      "UDIO_SINGLE\020O\022&\n\"CARRIER_TYPE_MEMORY_DEV" +
      "ICE_MIX_L_P\020P\022(\n$CARRIER_TYPE_MEMORY_DEV" +
      "ICE_VIDEO_L_P\020Q\022)\n%CARRIER_TYPE_33RPM12_" +
      "INCH_LP20_TRACKS\020R\022\036\n\032CARRIER_TYPE_ONLIN" +
      "E_SYSTEM\020S\022\034\n\030CARRIER_TYPE_VHS_N_T_S_C\020T" +
      "\022\036\n\032CARRIER_TYPE_VHS_S_E_C_A_M\020U\022\027\n\023CARR" +
      "IER_TYPE_MC_E_P\020V\022 \n\034CARRIER_TYPE_45RPM7" +
      "_INCH_E_P\020W\022\030\n\024CARRIER_TYPE_DVD_ROM\020X\022\037\n" +
      "\033CARRIER_TYPE_CD_COMPILATION\020Y\022$\n CARRIE" +
      "R_TYPE_45RPM10_INCH_SINGLE\020Z\022\031\n\025CARRIER_" +
      "TYPE_MC_REMIX\020[\022%\n!CARRIER_TYPE_MINI_DIS" +
      "C_MAXI_REMIX\020\\\022 \n\034CARRIER_TYPE_CD_EXTRA_" +
      "SINGLE\020]\022%\n!CARRIER_TYPE_CD_EXTRA_MAXI_S" +
      "INGLE\020^\022#\n\037CARRIER_TYPE_CD_VIDEO5_LP_P_A" +
      "_L\020_\022*\n&CARRIER_TYPE_SACD_LP_SURROUND_CD" +
      "_AUDIO\020`\022 \n\034CARRIER_TYPE_CD_SINGLE5_INCH" +
      "\020a\022$\n CARRIER_TYPE_33RPM12_INCH_SINGLE\020b" +
      "\022#\n\037CARRIER_TYPE_33RPM7_INCH_SINGLE\020c\022\032\n" +
      "\026CARRIER_TYPE_DUAL_DISC\020d\022\026\n\022CARRIER_TYP" +
      "E_D_V_D\020e\022+\n\'CARRIER_TYPE_12_INCH_DISCO_" +
      "SINGLE_REMIX\020f\022 \n\034CARRIER_TYPE_CD_SINGLE" +
      "3_INCH\020g\022\037\n\033CARRIER_TYPE_CD_LP_PLUS_WEB\020" +
      "h\022\026\n\022CARRIER_TYPE_CD_LP\020i\022\"\n\036CARRIER_TYP" +
      "E_CD_PLUS_DVD_BONUS\020j\022!\n\035CARRIER_TYPE_45" +
      "RPM12_INCH_L_P\020k\022(\n$CARRIER_TYPE_SACD_LP" +
      "_STEREO_CD_AUDIO\020l\022\037\n\033CARRIER_TYPE_MC_MA" +
      "XI_SINGLE\020m\022\032\n\026CARRIER_TYPE_MC_SINGLE\020n\022" +
      "\037\n\033CARRIER_TYPE_CD_MAXI_SINGLE\020o*G\n\023Cata" +
      "logTransferType\0220\n,CATALOG_TRANSFER_TYPE" +
      "_US_STATUTORY_REVERSION\020\000*\252\002\n\020CdProtecti" +
      "onType\022!\n\035CD_PROTECTION_TYPE_KEY2_AUDIO\020" +
      "\000\022\036\n\032CD_PROTECTION_TYPE_UNKNOWN\020\001\022\037\n\033CD_" +
      "PROTECTION_TYPE_C_D_S100\020\002\022$\n CD_PROTECT" +
      "ION_TYPE_NOT_PROTECTED\020\003\022\037\n\033CD_PROTECTIO" +
      "N_TYPE_C_D_S300\020\004\022%\n!CD_PROTECTION_TYPE_" +
      "MEDIA_MAX_C_D3\020\005\022\037\n\033CD_PROTECTION_TYPE_C" +
      "_D_S200\020\006\022#\n\037CD_PROTECTION_TYPE_USER_DEF" +
      "INED\020\007*\177\n\rCharacterType\022\"\n\036CHARACTER_TYP" +
      "E_OTHER_CHARACTER\020\000\022!\n\035CHARACTER_TYPE_MA" +
      "IN_CHARACTER\020\001\022\'\n#CHARACTER_TYPE_SUPPORT" +
      "ING_CHARACTER\020\002*\242\002\n\013ClaimStatus\022\033\n\027CLAIM" +
      "_STATUS_OVER_CLAIM\020\000\022\037\n\033CLAIM_STATUS_COM" +
      "PLETE_CLAIM\020\001\022\034\n\030CLAIM_STATUS_UNDER_CLAI" +
      "M\020\002\022%\n!CLAIM_STATUS_COMPLETE_UNDER_CLAIM" +
      "\020\003\022\'\n#CLAIM_STATUS_INCOMPLETE_UNDER_CLAI" +
      "M\020\004\022!\n\035CLAIM_STATUS_INCOMPLETE_CLAIM\020\005\022!" +
      "\n\035CLAIM_STATUS_MINOR_OVER_CLAIM\020\006\022!\n\035CLA" +
      "IM_STATUS_MAJOR_OVER_CLAIM\020\007*\252\004\n\017Classif" +
      "iedGenre\022\034\n\030CLASSIFIED_GENRE_HIP_HOP\020\000\022\'" +
      "\n#CLASSIFIED_GENRE_R__APO__N__APO___B\020\001\022" +
      "\033\n\027CLASSIFIED_GENRE_SPOKEN\020\002\022\031\n\025CLASSIFI" +
      "ED_GENRE_ROCK\020\003\022%\n!CLASSIFIED_GENRE_ELEC" +
      "TRONIC_MUSIC\020\004\022\031\n\025CLASSIFIED_GENRE_FOLK\020" +
      "\005\022\032\n\026CLASSIFIED_GENRE_BLUES\020\006\022\030\n\024CLASSIF" +
      "IED_GENRE_POP\020\007\022\"\n\036CLASSIFIED_GENRE_COUN" +
      "TRY_MUSIC\020\010\022 \n\034CLASSIFIED_GENRE_WORLD_MU" +
      "SIC\020\t\022\031\n\025CLASSIFIED_GENRE_JAZZ\020\n\022$\n CLAS" +
      "SIFIED_GENRE_CLASSICAL_MUSIC\020\013\022\033\n\027CLASSI" +
      "FIED_GENRE_GOSPEL\020\014\022\032\n\026CLASSIFIED_GENRE_" +
      "LATIN\020\r\022 \n\034CLASSIFIED_GENRE_TRADITIONAL\020" +
      "\016\022\033\n\027CLASSIFIED_GENRE_REGGAE\020\017\022!\n\035CLASSI" +
      "FIED_GENRE_USER_DEFINED\020\020*=\n\nCodingType\022" +
      "\025\n\021CODING_TYPE_LOSSY\020\000\022\030\n\024CODING_TYPE_LO" +
      "SSLESS\020\001*o\n\025CollectionMandateType\022%\n!COL" +
      "LECTION_MANDATE_TYPE_PERFORMER\020\000\022/\n+COLL" +
      "ECTION_MANDATE_TYPE_RIGHTS_ORGANIZATION\020" +
      "\001*;\n\022CommentaryNoteType\022%\n!COMMENTARY_NO" +
      "TE_TYPE_USER_DEFINED\020\000*\342\003\n\023CommercialMod" +
      "elType\022)\n%COMMERCIAL_MODEL_TYPE_AS_PER_C" +
      "ONTRACT\020\000\022.\n*COMMERCIAL_MODEL_TYPE_FREE_" +
      "OF_CHARGE_MODEL\020\001\0227\n3COMMERCIAL_MODEL_TY" +
      "PE_ADVERTISEMENT_SUPPORTED_MODEL\020\002\022!\n\035CO" +
      "MMERCIAL_MODEL_TYPE_UNKNOWN\020\003\022,\n(COMMERC" +
      "IAL_MODEL_TYPE_RIGHTS_CLAIM_MODEL\020\004\022,\n(C" +
      "OMMERCIAL_MODEL_TYPE_SUBSCRIPTION_MODEL\020" +
      "\005\0225\n1COMMERCIAL_MODEL_TYPE_PERFORMANCE_R" +
      "OYALTIES_MODEL\020\006\022*\n&COMMERCIAL_MODEL_TYP" +
      "E_DEVICE_FEE_MODEL\020\007\022&\n\"COMMERCIAL_MODEL" +
      "_TYPE_USER_DEFINED\020\010\022-\n)COMMERCIAL_MODEL" +
      "_TYPE_PAY_AS_YOU_GO_MODEL\020\t*\320\003\n\027Commerci" +
      "alModelType_ERN\0225\n1COMMERCIAL_MODEL_TYPE" +
      "__E_R_N_FREE_OF_CHARGE_MODEL\020\000\022>\n:COMMER" +
      "CIAL_MODEL_TYPE__E_R_N_ADVERTISEMENT_SUP" +
      "PORTED_MODEL\020\001\0223\n/COMMERCIAL_MODEL_TYPE_" +
      "_E_R_N_RIGHTS_CLAIM_MODEL\020\002\0223\n/COMMERCIA" +
      "L_MODEL_TYPE__E_R_N_SUBSCRIPTION_MODEL\020\003" +
      "\022<\n8COMMERCIAL_MODEL_TYPE__E_R_N_PERFORM" +
      "ANCE_ROYALTIES_MODEL\020\004\0221\n-COMMERCIAL_MOD" +
      "EL_TYPE__E_R_N_DEVICE_FEE_MODEL\020\005\022-\n)COM" +
      "MERCIAL_MODEL_TYPE__E_R_N_USER_DEFINED\020\006" +
      "\0224\n0COMMERCIAL_MODEL_TYPE__E_R_N_PAY_AS_" +
      "YOU_GO_MODEL\020\007*\313\001\n\030CommercialModelType_M" +
      "WNL\022@\n<COMMERCIAL_MODEL_TYPE__M_W_N_L_AD" +
      "VERTISEMENT_SUPPORTED_MODEL\020\000\0225\n1COMMERC" +
      "IAL_MODEL_TYPE__M_W_N_L_SUBSCRIPTION_MOD" +
      "EL\020\001\0226\n2COMMERCIAL_MODEL_TYPE__M_W_N_L_P" +
      "AY_AS_YOU_GO_MODEL\020\002*\216\001\n\017CompilationType" +
      "\022!\n\035COMPILATION_TYPE_NOT_COMPILED\020\000\022)\n%C" +
      "OMPILATION_TYPE_INTERNAL_COMPILATION\020\001\022-" +
      "\n)COMPILATION_TYPE_NON_INTERNAL_COMPILAT" +
      "ION\020\002*\226\001\n\030CompositeMusicalWorkType\022)\n%CO" +
      "MPOSITE_MUSICAL_WORK_TYPE_POTPOURRI\020\000\022&\n" +
      "\"COMPOSITE_MUSICAL_WORK_TYPE_MEDLEY\020\001\022\'\n" +
      "#COMPOSITE_MUSICAL_WORK_TYPE_NEITHER\020\002*\235" +
      "\002\n\017ContainerFormat\022\031\n\025CONTAINER_FORMAT_M" +
      "_P4\020\000\022\037\n\033CONTAINER_FORMAT_QUICK_TIME\020\001\022\037" +
      "\n\033CONTAINER_FORMAT_REAL_MEDIA\020\002\022\032\n\026CONTA" +
      "INER_FORMAT_A_V_I\020\003\022\034\n\030CONTAINER_FORMAT_" +
      "A_I_F_F\020\004\022\032\n\026CONTAINER_FORMAT_R_M_F\020\005\022!\n" +
      "\035CONTAINER_FORMAT_USER_DEFINED\020\006\022\032\n\026CONT" +
      "AINER_FORMAT_W_A_V\020\007\022\030\n\024CONTAINER_FORMAT" +
      "_OGG\020\010*\272\002\n\026ContributorClaimStatus\022%\n!CON" +
      "TRIBUTOR_CLAIM_STATUS_CONFLICT\020\000\022$\n CONT" +
      "RIBUTOR_CLAIM_STATUS_REVOKED\020\001\022(\n$CONTRI" +
      "BUTOR_CLAIM_STATUS_NO_CONFLICT\020\002\022+\n\'CONT" +
      "RIBUTOR_CLAIM_STATUS_PENDING_REVIEW\020\003\022%\n" +
      "!CONTRIBUTOR_CLAIM_STATUS_REJECTED\020\004\022.\n*" +
      "CONTRIBUTOR_CLAIM_STATUS_DATA_INCONSISTE" +
      "NT\020\005\022%\n!CONTRIBUTOR_CLAIM_STATUS_ACCEPTE" +
      "D\020\006*\311\\\n\017ContributorRole\022\033\n\027CONTRIBUTOR_R" +
      "OLE_ARTIST\020\000\0224\n0CONTRIBUTOR_ROLE_WRITER_" +
      "OF_ACCOMPANYING_MATERIAL\020\001\0223\n/CONTRIBUTO" +
      "R_ROLE_PRE_PRODUCTION_SECOND_ENGINEER\020\002\022" +
      "&\n\"CONTRIBUTOR_ROLE_INTERVIEWED_GUEST\020\003\022" +
      "/\n+CONTRIBUTOR_ROLE_ADDITIONAL_STUDIO_PR" +
      "ODUCER\020\004\022\036\n\032CONTRIBUTOR_ROLE_CONCEPTOR\020\005" +
      "\022 \n\034CONTRIBUTOR_ROLE_ART_COPYIST\020\006\022$\n CO" +
      "NTRIBUTOR_ROLE_SERIES_PRODUCER\020\007\022#\n\037CONT" +
      "RIBUTOR_ROLE_PRE_PRODUCTION\020\010\022!\n\035CONTRIB" +
      "UTOR_ROLE_LITHOGRAPHER\020\t\022*\n&CONTRIBUTOR_" +
      "ROLE_CO_EXECUTIVE_PRODUCER\020\n\022)\n%CONTRIBU" +
      "TOR_ROLE_ASSOCIATED_PERFORMER\020\013\022\"\n\036CONTR" +
      "IBUTOR_ROLE_TAPE_OPERATOR\020\014\022,\n(CONTRIBUT" +
      "OR_ROLE_PRE_PRODUCTION_ENGINEER\020\r\022\034\n\030CON" +
      "TRIBUTOR_ROLE_UNKNOWN\020\016\022\036\n\032CONTRIBUTOR_R" +
      "OLE_ANNOUNCER\020\017\022\036\n\032CONTRIBUTOR_ROLE_PUPP" +
      "ETEER\020\020\022\037\n\033CONTRIBUTOR_ROLE_TRANSLATOR\020\021" +
      "\022(\n$CONTRIBUTOR_ROLE_BACKGROUND_VOCALIST" +
      "\020\022\022\035\n\031CONTRIBUTOR_ROLE_MUSICIAN\020\023\022-\n)CON" +
      "TRIBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER\020\024" +
      "\022\032\n\026CONTRIBUTOR_ROLE_ACTOR\020\025\022!\n\035CONTRIBU" +
      "TOR_ROLE_SUB_LYRICIST\020\026\022\034\n\030CONTRIBUTOR_R" +
      "OLE_PAINTER\020\027\022!\n\035CONTRIBUTOR_ROLE_STORY_" +
      "TELLER\020\030\022!\n\035CONTRIBUTOR_ROLE_USER_DEFINE" +
      "D\020\031\022%\n!CONTRIBUTOR_ROLE_NON_LYRIC_AUTHOR" +
      "\020\032\022\'\n#CONTRIBUTOR_ROLE_ASSISTANT_DIRECTO" +
      "R\020\033\022)\n%CONTRIBUTOR_ROLE_PHOTOGRAPHY_DIRE" +
      "CTOR\020\034\022\037\n\033CONTRIBUTOR_ROLE_PLAYWRIGHT\020\035\022" +
      "\036\n\032CONTRIBUTOR_ROLE_ORCHESTRA\020\036\022!\n\035CONTR" +
      "IBUTOR_ROLE_SUB_ARRANGER\020\037\022(\n$CONTRIBUTO" +
      "R_ROLE_COMPUTER_PROGRAMMER\020 \022#\n\037CONTRIBU" +
      "TOR_ROLE_VOCAL_PRODUCER\020!\022%\n!CONTRIBUTOR" +
      "_ROLE_SCENIC_OPERATIVE\020\"\022\037\n\033CONTRIBUTOR_" +
      "ROLE_PROGRAMMER\020#\022$\n CONTRIBUTOR_ROLE_ST" +
      "UDIO_PRODUCER\020$\022#\n\037CONTRIBUTOR_ROLE_STAG" +
      "E_DIRECTOR\020%\022\033\n\027CONTRIBUTOR_ROLE_AUTHOR\020" +
      "&\022\037\n\033CONTRIBUTOR_ROLE_LIBRETTIST\020\'\022\"\n\036CO" +
      "NTRIBUTOR_ROLE_TYPE_DESIGNER\020(\022!\n\035CONTRI" +
      "BUTOR_ROLE_GROUP_MEMBER\020)\022\"\n\036CONTRIBUTOR" +
      "_ROLE_VISUAL_EDITOR\020*\022#\n\037CONTRIBUTOR_ROL" +
      "E_VOCAL_ARRANGER\020+\022.\n*CONTRIBUTOR_ROLE_A" +
      "SSISTANT_CAMERA_OPERATOR\020,\022\"\n\036CONTRIBUTO" +
      "R_ROLE_FILM_DIRECTOR\020-\022#\n\037CONTRIBUTOR_RO" +
      "LE_CLAPPER_LOADER\020.\022&\n\"CONTRIBUTOR_ROLE_" +
      "REMIXING_ENGINEER\020/\022\'\n#CONTRIBUTOR_ROLE_" +
      "BOOKPLATE_DESIGNER\0200\022-\n)CONTRIBUTOR_ROLE" +
      "_TRACKING_SECOND_ENGINEER\0201\022 \n\034CONTRIBUT" +
      "OR_ROLE_HAIRDRESSER\0202\022;\n7CONTRIBUTOR_ROL" +
      "E_TRANSFERS_AND_SAFETIES_SECOND_ENGINEER" +
      "\0203\022)\n%CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATI" +
      "ONS\0204\022%\n!CONTRIBUTOR_ROLE_COSTUME_DESIGN" +
      "ER\0205\0221\n-CONTRIBUTOR_ROLE_RIGHTS_CONTROLL" +
      "ER_ON_PRODUCT\0206\022\034\n\030CONTRIBUTOR_ROLE_SPEA" +
      "KER\0207\022%\n!CONTRIBUTOR_ROLE_LOCATION_MANAG" +
      "ER\0208\022!\n\035CONTRIBUTOR_ROLE_CALLIGRAPHER\0209\022" +
      "7\n3CONTRIBUTOR_ROLE_DIGITAL_AUDIO_WORKST" +
      "ATION_ENGINEER\020:\022&\n\"CONTRIBUTOR_ROLE_GRA" +
      "PHIC_ASSISTANT\020;\022+\n\'CONTRIBUTOR_ROLE_MIX" +
      "ING_SECOND_ENGINEER\020<\022\034\n\030CONTRIBUTOR_ROL" +
      "E_LEADMAN\020=\022%\n!CONTRIBUTOR_ROLE_COPYRIGH" +
      "T_HOLDER\020>\022\035\n\031CONTRIBUTOR_ROLE_REVIEWER\020" +
      "?\022#\n\037CONTRIBUTOR_ROLE_VOCAL_ENGINEER\020@\022*" +
      "\n&CONTRIBUTOR_ROLE_PRODUCTION_DEPARTMENT" +
      "\020A\022\034\n\030CONTRIBUTOR_ROLE_DRESSER\020B\022(\n$CONT" +
      "RIBUTOR_ROLE_AUTHOR_OF_AFTERWORD\020C\022%\n!CO" +
      "NTRIBUTOR_ROLE_BALANCE_ENGINEER\020D\022\"\n\036CON" +
      "TRIBUTOR_ROLE_CORRESPONDENT\020E\022\037\n\033CONTRIB" +
      "UTOR_ROLE_CONSULTANT\020F\022 \n\034CONTRIBUTOR_RO" +
      "LE_MUSIC_GROUP\020G\022(\n$CONTRIBUTOR_ROLE_ASS" +
      "ISTANT_CONDUCTOR\020H\0224\n0CONTRIBUTOR_ROLE_S" +
      "URROUND_MIXING_SECOND_ENGINEER\020I\0225\n1CONT" +
      "RIBUTOR_ROLE_TREATMENT__FS___PROGRAM_PRO" +
      "POSAL\020J\022$\n CONTRIBUTOR_ROLE_DIALOGUE_AUT" +
      "HOR\020K\022.\n*CONTRIBUTOR_ROLE_SIGN_LANGUAGE_" +
      "INTERPRETER\020L\0221\n-CONTRIBUTOR_ROLE_ARTIST" +
      "_VOCAL_SECOND_ENGINEER\020M\022\035\n\031CONTRIBUTOR_" +
      "ROLE_RESTAGER\020N\022\037\n\033CONTRIBUTOR_ROLE_JOUR" +
      "NALIST\020O\022\030\n\024CONTRIBUTOR_ROLE_D_J\020P\022)\n%CO" +
      "NTRIBUTOR_ROLE_BROADCAST_JOURNALIST\020Q\022\"\n" +
      "\036CONTRIBUTOR_ROLE_CIRCUS_ARTIST\020R\022-\n)CON" +
      "TRIBUTOR_ROLE_DIGITAL_EDITING_ENGINEER\020S" +
      "\022&\n\"CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR\020T" +
      "\022\034\n\030CONTRIBUTOR_ROLE_CREATOR\020U\022#\n\037CONTRI" +
      "BUTOR_ROLE_DIALOGUE_COACH\020V\022#\n\037CONTRIBUT" +
      "OR_ROLE_FIGHT_DIRECTOR\020W\022\"\n\036CONTRIBUTOR_" +
      "ROLE_ANCHOR_PERSON\020X\022)\n%CONTRIBUTOR_ROLE" +
      "_COMPILATION_PRODUCER\020Y\022\037\n\033CONTRIBUTOR_R" +
      "OLE_CONTRACTOR\020Z\0223\n/CONTRIBUTOR_ROLE_DIR" +
      "ECT_STREAM_DIGITAL_ENGINEER\020[\022$\n CONTRIB" +
      "UTOR_ROLE_ORIGINAL_ARTIST\020\\\022%\n!CONTRIBUT" +
      "OR_ROLE_STUDIO_CONDUCTOR\020]\022\035\n\031CONTRIBUTO" +
      "R_ROLE_COMPILER\020^\022)\n%CONTRIBUTOR_ROLE_PE" +
      "RIODICAL_PUBLISHER\020_\022\035\n\031CONTRIBUTOR_ROLE",
      "_ARRANGER\020`\022!\n\035CONTRIBUTOR_ROLE_ART_DIRE" +
      "CTOR\020a\022\035\n\031CONTRIBUTOR_ROLE_KEY_GRIP\020b\022.\n" +
      "*CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGIN" +
      "EER\020c\022*\n&CONTRIBUTOR_ROLE_A_AND_R_ADMINI" +
      "STRATOR\020d\022!\n\035CONTRIBUTOR_ROLE_ACCOMPANYI" +
      "ST\020e\022)\n%CONTRIBUTOR_ROLE_DISTRIBUTION_CO" +
      "MPANY\020f\022\033\n\027CONTRIBUTOR_ROLE_DANCER\020g\022 \n\034" +
      "CONTRIBUTOR_ROLE_FILM_EDITOR\020h\022$\n CONTRI" +
      "BUTOR_ROLE_STRING_PRODUCER\020i\022\036\n\032CONTRIBU" +
      "TOR_ROLE_ANNOTATOR\020j\022\035\n\031CONTRIBUTOR_ROLE" +
      "_SCULPTOR\020k\022 \n\034CONTRIBUTOR_ROLE_INTERVIE" +
      "WER\020l\022!\n\035CONTRIBUTOR_ROLE_PHOTOGRAPHER\020m" +
      "\022/\n+CONTRIBUTOR_ROLE_ADDITIONAL_MIXING_E" +
      "NGINEER\020n\022\036\n\032CONTRIBUTOR_ROLE_CONDUCTOR\020" +
      "o\0224\n0CONTRIBUTOR_ROLE_DIGITAL_EDITING_SE" +
      "COND_ENGINEER\020p\022%\n!CONTRIBUTOR_ROLE_REIS" +
      "SUE_PRODUCER\020q\022\036\n\032CONTRIBUTOR_ROLE_CARPE" +
      "NTER\020r\022&\n\"CONTRIBUTOR_ROLE_SCREENPLAY_AU" +
      "THOR\020s\022#\n\037CONTRIBUTOR_ROLE_LEAD_PERFORME" +
      "R\020t\022\"\n\036CONTRIBUTOR_ROLE_POST_PRODUCER\020u\022" +
      "\"\n\036CONTRIBUTOR_ROLE_CHOREOGRAPHER\020v\022 \n\034C" +
      "ONTRIBUTOR_ROLE_COMMENTATOR\020w\022.\n*CONTRIB" +
      "UTOR_ROLE_COMMISSIONING_BROADCASTER\020x\022+\n" +
      "\'CONTRIBUTOR_ROLE_VOCAL_EDITING_ENGINEER" +
      "\020y\022\035\n\031CONTRIBUTOR_ROLE_CO_MIXER\020z\022\033\n\027CON" +
      "TRIBUTOR_ROLE_EXPERT\020{\022\034\n\030CONTRIBUTOR_RO" +
      "LE_CAUSEUR\020|\022\"\n\036CONTRIBUTOR_ROLE_CHORUS_" +
      "MASTER\020}\022&\n\"CONTRIBUTOR_ROLE_BOOKJACK_DE" +
      "SIGNER\020~\022(\n$CONTRIBUTOR_ROLE_BROADCAST_A" +
      "SSISTANT\020\177\022!\n\034CONTRIBUTOR_ROLE_SET_DRESS" +
      "ER\020\200\001\0225\n0CONTRIBUTOR_ROLE_ADDITIONAL_PRO" +
      "GRAMMING_ENGINEER\020\201\001\022\033\n\026CONTRIBUTOR_ROLE" +
      "_CHOIR\020\202\001\022\036\n\031CONTRIBUTOR_ROLE_ENGINEER\020\203" +
      "\001\022!\n\034CONTRIBUTOR_ROLE_CO_PRODUCER\020\204\001\022#\n\036" +
      "CONTRIBUTOR_ROLE_BOOK_PRODUCER\020\205\001\022 \n\033CON" +
      "TRIBUTOR_ROLE_RESEARCHER\020\206\001\022$\n\037CONTRIBUT" +
      "OR_ROLE_SOUND_DESIGNER\020\207\001\022 \n\033CONTRIBUTOR" +
      "_ROLE_DISSERTANT\020\210\001\0220\n+CONTRIBUTOR_ROLE_" +
      "SPECIAL_EFFECTS_TECHNICIAN\020\211\001\022$\n\037CONTRIB" +
      "UTOR_ROLE_MUSIC_ARRANGER\020\212\001\022(\n#CONTRIBUT" +
      "OR_ROLE_COPYRIGHT_CLAIMANT\020\213\001\022!\n\034CONTRIB" +
      "UTOR_ROLE_VOICE_ACTOR\020\214\001\022,\n\'CONTRIBUTOR_" +
      "ROLE_PRODUCTION_COORDINATOR\020\215\001\022\036\n\031CONTRI" +
      "BUTOR_ROLE_WARDROBE\020\216\001\022/\n*CONTRIBUTOR_RO" +
      "LE_VISUAL_EFFECTS_TECHNICIAN\020\217\001\022\034\n\027CONTR" +
      "IBUTOR_ROLE_STUNTS\020\220\001\022,\n\'CONTRIBUTOR_ROL" +
      "E_TRANSPORTATION_MANAGER\020\221\001\022#\n\036CONTRIBUT" +
      "OR_ROLE_NEWS_PRODUCER\020\222\001\022#\n\036CONTRIBUTOR_" +
      "ROLE_LEAD_VOCALIST\020\223\001\022\035\n\030CONTRIBUTOR_ROL" +
      "E_SPONSOR\020\224\001\022*\n%CONTRIBUTOR_ROLE_PRODUCT" +
      "ION_SECRETARY\020\225\001\022$\n\037CONTRIBUTOR_ROLE_VID" +
      "EO_PRODUCER\020\226\001\022(\n#CONTRIBUTOR_ROLE_SCIEN" +
      "TIFIC_ADVISOR\020\227\001\022#\n\036CONTRIBUTOR_ROLE_AUR" +
      "AL_TRAINER\020\230\001\022&\n!CONTRIBUTOR_ROLE_CASTIN" +
      "G_DIRECTOR\020\231\001\022(\n#CONTRIBUTOR_ROLE_EXECUT" +
      "IVE_PRODUCER\020\232\001\022/\n*CONTRIBUTOR_ROLE_IMME" +
      "RSIVE_MIXING_ENGINEER\020\233\001\022&\n!CONTRIBUTOR_" +
      "ROLE_SECOND_CONDUCTOR\020\234\001\022\034\n\027CONTRIBUTOR_" +
      "ROLE_EDITOR\020\235\001\022#\n\036CONTRIBUTOR_ROLE_KEY_C" +
      "HARACTER\020\236\001\022(\n#CONTRIBUTOR_ROLE_PRODUCTI" +
      "ON_MANAGER\020\237\001\022(\n#CONTRIBUTOR_ROLE_ORIGIN" +
      "AL_PUBLISHER\020\240\001\022\036\n\031CONTRIBUTOR_ROLE_REDA" +
      "CTOR\020\241\001\022 \n\033CONTRIBUTOR_ROLE_CARTOONIST\020\242" +
      "\001\022(\n#CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER" +
      "\020\243\001\022$\n\037CONTRIBUTOR_ROLE_CONCERT_MASTER\020\244" +
      "\001\022#\n\036CONTRIBUTOR_ROLE_WOOD_ENGRAVER\020\245\001\022&" +
      "\n!CONTRIBUTOR_ROLE_STUDIO_PERSONNEL\020\246\001\022\036" +
      "\n\031CONTRIBUTOR_ROLE_COMEDIAN\020\247\001\022#\n\036CONTRI" +
      "BUTOR_ROLE_MUSIC_COPYIST\020\250\001\022(\n#CONTRIBUT" +
      "OR_ROLE_PRODUCTION_COMPANY\020\251\001\022/\n*CONTRIB" +
      "UTOR_ROLE_CHIEF_LIGHTING_TECHNICIAN\020\252\001\022$" +
      "\n\037CONTRIBUTOR_ROLE_PYROTECHNICIAN\020\253\001\022\'\n\"" +
      "CONTRIBUTOR_ROLE_SCRIPT_SUPERVISOR\020\254\001\022*\n" +
      "%CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMBER\020\255" +
      "\001\022(\n#CONTRIBUTOR_ROLE_CONTINUITY_CHECKER" +
      "\020\256\001\022\035\n\030CONTRIBUTOR_ROLE_SOLOIST\020\257\001\022)\n$CO" +
      "NTRIBUTOR_ROLE_ADDITIONAL_ENGINEER\020\260\001\022$\n" +
      "\037CONTRIBUTOR_ROLE_REMIXED_ARTIST\020\261\001\022%\n C" +
      "ONTRIBUTOR_ROLE_MUSIC_PUBLISHER\020\262\001\022\036\n\031CO" +
      "NTRIBUTOR_ROLE_DIRECTOR\020\263\001\022+\n&CONTRIBUTO" +
      "R_ROLE_SUBSTITUTED_PUBLISHER\020\264\001\022%\n CONTR" +
      "IBUTOR_ROLE_EDITOR_IN_CHIEF\020\265\001\0229\n4CONTRI" +
      "BUTOR_ROLE_ASSISTANT_CHIEF_LIGHTING_TECH" +
      "NICIAN\020\266\001\022&\n!CONTRIBUTOR_ROLE_SOUND_SUPE" +
      "RVISOR\020\267\001\022)\n$CONTRIBUTOR_ROLE_PUBLISHING" +
      "_DIRECTOR\020\270\001\022\036\n\031CONTRIBUTOR_ROLE_ARMOURE" +
      "R\020\271\001\022&\n!CONTRIBUTOR_ROLE_PROJECT_ENGINEE" +
      "R\020\272\001\022#\n\036CONTRIBUTOR_ROLE_NOT_SPECIFIED\020\273" +
      "\001\022!\n\034CONTRIBUTOR_ROLE_SOUND_MIXER\020\274\001\022%\n " +
      "CONTRIBUTOR_ROLE_SECOND_ENGINEER\020\275\001\0226\n1C" +
      "ONTRIBUTOR_ROLE_ARTIST_BACKGROUND_VOCAL_" +
      "ENGINEER\020\276\001\022%\n CONTRIBUTOR_ROLE_CAMERA_O" +
      "PERATOR\020\277\001\022&\n!CONTRIBUTOR_ROLE_OVERDUB_E" +
      "NGINEER\020\300\001\022)\n$CONTRIBUTOR_ROLE_LANDSCAPE" +
      "_ARCHITECT\020\301\001\022\"\n\035CONTRIBUTOR_ROLE_VIDEOG" +
      "RAPHER\020\302\001\022!\n\034CONTRIBUTOR_ROLE_BAND_LEADE" +
      "R\020\303\001\022&\n!CONTRIBUTOR_ROLE_SUBTITLES_EDITO" +
      "R\020\304\001\022)\n$CONTRIBUTOR_ROLE_A_AND_R_COORDIN" +
      "ATOR\020\305\001\022&\n!CONTRIBUTOR_ROLE_ASSISTANT_ED" +
      "ITOR\020\306\001\022#\n\036CONTRIBUTOR_ROLE_SUB_PUBLISHE" +
      "R\020\307\001\022%\n CONTRIBUTOR_ROLE_MIXING_ENGINEER" +
      "\020\310\001\022(\n#CONTRIBUTOR_ROLE_ASSOCIATE_PRODUC" +
      "ER\020\311\001\0226\n1CONTRIBUTOR_ROLE_SECOND_ASSISTA" +
      "NT_CAMERA_OPERATOR\020\312\001\022\034\n\027CONTRIBUTOR_ROL" +
      "E_BINDER\020\313\001\022!\n\034CONTRIBUTOR_ROLE_CO_DIREC" +
      "TOR\020\314\001\022\032\n\025CONTRIBUTOR_ROLE_GRIP\020\315\001\022$\n\037CO" +
      "NTRIBUTOR_ROLE_METAL_ENGRAVER\020\316\001\022#\n\036CONT" +
      "RIBUTOR_ROLE_BOOK_DESIGNER\020\317\001\022.\n)CONTRIB" +
      "UTOR_ROLE_COMPUTER_GRAPHIC_CREATOR\020\320\001\022\"\n" +
      "\035CONTRIBUTOR_ROLE_CARTOGRAPHER\020\321\001\022\'\n\"CON" +
      "TRIBUTOR_ROLE_COMPOSER_LYRICIST\020\322\001\022$\n\037CO" +
      "NTRIBUTOR_ROLE_MAKE_UP_ARTIST\020\323\001\022)\n$CONT" +
      "RIBUTOR_ROLE_NEWSPAPER_PUBLISHER\020\324\001\022\036\n\031C" +
      "ONTRIBUTOR_ROLE_COMPOSER\020\325\001\022%\n CONTRIBUT" +
      "OR_ROLE_PLAYBACK_SINGER\020\326\001\022%\n CONTRIBUTO" +
      "R_ROLE_STRING_ENGINEER\020\327\001\022!\n\034CONTRIBUTOR" +
      "_ROLE_DRAUGHTSMAN\020\330\001\022&\n!CONTRIBUTOR_ROLE" +
      "_PROGRAM_PRODUCER\020\331\001\022.\n)CONTRIBUTOR_ROLE" +
      "_REMIXING_SECOND_ENGINEER\020\332\001\022 \n\033CONTRIBU" +
      "TOR_ROLE_WOODCUTTER\020\333\001\022$\n\037CONTRIBUTOR_RO" +
      "LE_VIDEO_DIRECTOR\020\334\001\022\036\n\031CONTRIBUTOR_ROLE" +
      "_REPORTER\020\335\001\022 \n\033CONTRIBUTOR_ROLE_TONMEIS" +
      "TER\020\336\001\022-\n(CONTRIBUTOR_ROLE_ASSISTANT_VIS" +
      "UAL_EDITOR\020\337\001\022(\n#CONTRIBUTOR_ROLE_ASSIST" +
      "ANT_ENGINEER\020\340\001\022\034\n\027CONTRIBUTOR_ROLE_ETCH" +
      "ER\020\341\001\0225\n0CONTRIBUTOR_ROLE_TRANSFERS_AND_" +
      "SAFETIES_ENGINEER\020\342\001\022\036\n\031CONTRIBUTOR_ROLE" +
      "_ANIMATOR\020\343\001\022\'\n\"CONTRIBUTOR_ROLE_LIGHTIN" +
      "G_DIRECTOR\020\344\001\022%\n CONTRIBUTOR_ROLE_GUEST_" +
      "CONDUCTOR\020\345\001\022)\n$CONTRIBUTOR_ROLE_LIGHTIN" +
      "G_TECHNICIAN\020\346\001\022&\n!CONTRIBUTOR_ROLE_FILM" +
      "_DISTRIBUTOR\020\347\001\022&\n!CONTRIBUTOR_ROLE_INIT" +
      "IAL_PRODUCER\020\350\001\022 \n\033CONTRIBUTOR_ROLE_RUBR" +
      "ICATOR\020\351\001\022*\n%CONTRIBUTOR_ROLE_SUBTITLES_" +
      "TRANSLATOR\020\352\001\022+\n&CONTRIBUTOR_ROLE_ARTIST" +
      "_VOCAL_ENGINEER\020\353\001\022\034\n\027CONTRIBUTOR_ROLE_R" +
      "IGGER\020\354\001\022&\n!CONTRIBUTOR_ROLE_PRIMARY_MUS" +
      "ICIAN\020\355\001\022%\n CONTRIBUTOR_ROLE_COLOR_SEPAR" +
      "ATOR\020\356\001\022 \n\033CONTRIBUTOR_ROLE_REPETITEUR\020\357" +
      "\001\022&\n!CONTRIBUTOR_ROLE_GRAPHIC_DESIGNER\020\360" +
      "\001\022*\n%CONTRIBUTOR_ROLE_PRODUCTION_ASSISTA" +
      "NT\020\361\001\022\033\n\026CONTRIBUTOR_ROLE_MIXER\020\362\001\022&\n!CO" +
      "NTRIBUTOR_ROLE_BINDING_DESIGNER\020\363\001\022\035\n\030CO" +
      "NTRIBUTOR_ROLE_ADAPTER\020\364\001\022 \n\033CONTRIBUTOR" +
      "_ROLE_DELINEATOR\020\365\001\022$\n\037CONTRIBUTOR_ROLE_" +
      "BOOK_PUBLISHER\020\366\001\022\035\n\030CONTRIBUTOR_ROLE_EN" +
      "CODER\020\367\001\0223\n.CONTRIBUTOR_ROLE_VOCAL_EDITI" +
      "NG_SECOND_ENGINEER\020\370\001\022\"\n\035CONTRIBUTOR_ROL" +
      "E_MANUFACTURER\020\371\001\022(\n#CONTRIBUTOR_ROLE_RE" +
      "CORDING_ENGINEER\020\372\001\022+\n&CONTRIBUTOR_ROLE_" +
      "VOCAL_SECOND_ENGINEER\020\373\001\022!\n\034CONTRIBUTOR_" +
      "ROLE_FACSIMILIST\020\374\001\022 \n\033CONTRIBUTOR_ROLE_" +
      "KEY_TALENT\020\375\001\022\036\n\031CONTRIBUTOR_ROLE_CLUB_D" +
      "_J\020\376\001\022$\n\037CONTRIBUTOR_ROLE_COVER_DESIGNER" +
      "\020\377\001\022)\n$CONTRIBUTOR_ROLE_FILM_SOUND_ENGIN" +
      "EER\020\200\002\022\'\n\"CONTRIBUTOR_ROLE_TRACKING_ENGI" +
      "NEER\020\201\002\022\037\n\032CONTRIBUTOR_ROLE_PERFORMER\020\202\002" +
      "\022\"\n\035CONTRIBUTOR_ROLE_SET_DESIGNER\020\203\002\022*\n%" +
      "CONTRIBUTOR_ROLE_PROGRAMMING_ENGINEER\020\204\002" +
      "\022&\n!CONTRIBUTOR_ROLE_ORCHESTRA_MEMBER\020\205\002" +
      "\022!\n\034CONTRIBUTOR_ROLE_ILLUSTRATOR\020\206\002\022!\n\034C" +
      "ONTRIBUTOR_ROLE_NEWS_READER\020\207\002\022\034\n\027CONTRI" +
      "BUTOR_ROLE_DUBBER\020\210\002\022\036\n\031CONTRIBUTOR_ROLE" +
      "_ENSEMBLE\020\211\002\022(\n#CONTRIBUTOR_ROLE_ASSISTA" +
      "NT_PRODUCER\020\212\002\022\"\n\035CONTRIBUTOR_ROLE_FOLEY" +
      "_EDITOR\020\213\002\022\"\n\035CONTRIBUTOR_ROLE_MATTE_ART" +
      "IST\020\214\002\022\036\n\031CONTRIBUTOR_ROLE_ENGRAVER\020\215\002\022\036" +
      "\n\031CONTRIBUTOR_ROLE_LYRICIST\020\216\002\022$\n\037CONTRI" +
      "BUTOR_ROLE_MUSIC_DIRECTOR\020\217\002\022\034\n\027CONTRIBU" +
      "TOR_ROLE_RUNNER\020\220\002\022&\n!CONTRIBUTOR_ROLE_P" +
      "ROPERTY_MANAGER\020\221\002\022\"\n\035CONTRIBUTOR_ROLE_C" +
      "HOIR_MEMBER\020\222\002\022$\n\037CONTRIBUTOR_ROLE_ANIMA" +
      "L_TRAINER\020\223\002\022!\n\034CONTRIBUTOR_ROLE_FOLEY_M" +
      "IXER\020\224\002\022/\n*CONTRIBUTOR_ROLE_MASTERING_SE" +
      "COND_ENGINEER\020\225\002\022\036\n\031CONTRIBUTOR_ROLE_DES" +
      "IGNER\020\226\002\022#\n\036CONTRIBUTOR_ROLE_FILM_PRODUC" +
      "ER\020\227\002\022(\n#CONTRIBUTOR_ROLE_MASTERING_ENGI" +
      "NEER\020\230\002\022!\n\034CONTRIBUTOR_ROLE_PLATE_MAKER\020" +
      "\231\002\022&\n!CONTRIBUTOR_ROLE_SUPPORTING_ACTOR\020" +
      "\232\002\022\037\n\032CONTRIBUTOR_ROLE_GREENSMAN\020\233\002\022*\n%C" +
      "ONTRIBUTOR_ROLE_SECOND_UNIT_DIRECTOR\020\234\002\022" +
      ",\n\'CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIRECT" +
      "OR\020\235\002\022\"\n\035CONTRIBUTOR_ROLE_FOCUS_PULLER\020\236" +
      "\002\022\035\n\030CONTRIBUTOR_ROLE_REMIXER\020\237\002\022(\n#CONT" +
      "RIBUTOR_ROLE_RESEARCH_TEAM_HEAD\020\240\002\022%\n CO" +
      "NTRIBUTOR_ROLE_SOUND_RECORDIST\020\241\002\022&\n!CON" +
      "TRIBUTOR_ROLE_STRINGS_DIRECTOR\020\242\002\022\"\n\035CON" +
      "TRIBUTOR_ROLE_VISION_MIXER\020\243\002\022.\n)CONTRIB" +
      "UTOR_ROLE_SURROUND_MIXING_ENGINEER\020\244\002\022(\n" +
      "#CONTRIBUTOR_ROLE_TECHNICAL_DIRECTOR\020\245\002\022" +
      "$\n\037CONTRIBUTOR_ROLE_STAGE_ENGINEER\020\246\002\022%\n" +
      " CONTRIBUTOR_ROLE_STUDIO_MUSICIAN\020\247\002\022\036\n\031" +
      "CONTRIBUTOR_ROLE_VOCALIST\020\250\002\022\"\n\035CONTRIBU" +
      "TOR_ROLE_FOLEY_ARTIST\020\251\002\022\037\n\032CONTRIBUTOR_" +
      "ROLE_ARCHITECT\020\252\002\022\'\n\"CONTRIBUTOR_ROLE_ED" +
      "ITOR_OF_THE_DAY\020\253\002\022/\n*CONTRIBUTOR_ROLE_S" +
      "ECOND_ASSISTANT_DIRECTOR\020\254\002\022#\n\036CONTRIBUT" +
      "OR_ROLE_FLOOR_MANAGER\020\255\002\022$\n\037CONTRIBUTOR_" +
      "ROLE_GRAPHIC_ARTIST\020\256\002\022-\n(CONTRIBUTOR_RO" +
      "LE_OVERDUB_SECOND_ENGINEER\020\257\002\022\034\n\027CONTRIB" +
      "UTOR_ROLE_CENSOR\020\260\002\022\036\n\031CONTRIBUTOR_ROLE_" +
      "NARRATOR\020\261\002\022*\n%CONTRIBUTOR_ROLE_ADDITION" +
      "AL_PERFORMER\020\262\002*\341\017\n\"CreativeMusicalWorkC" +
      "ontributorRole\022:\n6CREATIVE_MUSICAL_WORK_" +
      "CONTRIBUTOR_ROLE_DIALOGUE_AUTHOR\020\000\0223\n/CR" +
      "EATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_ENG" +
      "RAVER\020\001\022<\n8CREATIVE_MUSICAL_WORK_CONTRIB" +
      "UTOR_ROLE_SCREENPLAY_AUTHOR\020\002\0223\n/CREATIV" +
      "E_MUSICAL_WORK_CONTRIBUTOR_ROLE_LYRICIST" +
      "\020\003\022J\nFCREATIVE_MUSICAL_WORK_CONTRIBUTOR_" +
      "ROLE_WRITER_OF_ACCOMPANYING_MATERIAL\020\004\022>" +
      "\n:CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE" +
      "_LANDSCAPE_ARCHITECT\020\005\0225\n1CREATIVE_MUSIC" +
      "AL_WORK_CONTRIBUTOR_ROLE_JOURNALIST\020\006\0224\n" +
      "0CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_" +
      "CONCEPTOR\020\007\0222\n.CREATIVE_MUSICAL_WORK_CON" +
      "TRIBUTOR_ROLE_ADAPTER\020\010\0222\n.CREATIVE_MUSI" +
      "CAL_WORK_CONTRIBUTOR_ROLE_CREATOR\020\t\0227\n3C" +
      "REATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_LI" +
      "THOGRAPHER\020\n\0228\n4CREATIVE_MUSICAL_WORK_CO" +
      "NTRIBUTOR_ROLE_WOOD_ENGRAVER\020\013\0229\n5CREATI" +
      "VE_MUSICAL_WORK_CONTRIBUTOR_ROLE_METAL_E" +
      "NGRAVER\020\014\0226\n2CREATIVE_MUSICAL_WORK_CONTR" +
      "IBUTOR_ROLE_PLATE_MAKER\020\r\0225\n1CREATIVE_MU" +
      "SICAL_WORK_CONTRIBUTOR_ROLE_TRANSLATOR\020\016" +
      "\0225\n1CREATIVE_MUSICAL_WORK_CONTRIBUTOR_RO" +
      "LE_DISSERTANT\020\017\0227\n3CREATIVE_MUSICAL_WORK" +
      "_CONTRIBUTOR_ROLE_SUB_LYRICIST\020\020\022<\n8CREA" +
      "TIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMPO" +
      "SER_LYRICIST\020\021\022?\n;CREATIVE_MUSICAL_WORK_" +
      "CONTRIBUTOR_ROLE_AUTHOR_IN_QUOTATIONS\020\022\022" +
      ";\n7CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROL" +
      "E_NON_LYRIC_AUTHOR\020\023\0223\n/CREATIVE_MUSICAL" +
      "_WORK_CONTRIBUTOR_ROLE_COMPILER\020\024\0223\n/CRE" +
      "ATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_COMP" +
      "OSER\020\025\0223\n/CREATIVE_MUSICAL_WORK_CONTRIBU" +
      "TOR_ROLE_ARRANGER\020\026\0225\n1CREATIVE_MUSICAL_" +
      "WORK_CONTRIBUTOR_ROLE_WOODCUTTER\020\027\0225\n1CR" +
      "EATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_PLA" +
      "YWRIGHT\020\030\0223\n/CREATIVE_MUSICAL_WORK_CONTR" +
      "IBUTOR_ROLE_REPORTER\020\031\0227\n3CREATIVE_MUSIC" +
      "AL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER\020\032\022" +
      "3\n/CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROL" +
      "E_REVIEWER\020\033\0221\n-CREATIVE_MUSICAL_WORK_CO" +
      "NTRIBUTOR_ROLE_ETCHER\020\034\0224\n0CREATIVE_MUSI" +
      "CAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT\020\035\022>\n" +
      ":CREATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_" +
      "AUTHOR_OF_AFTERWORD\020\036\0223\n/CREATIVE_MUSICA" +
      "L_WORK_CONTRIBUTOR_ROLE_SCULPTOR\020\037\0225\n1CR" +
      "EATIVE_MUSICAL_WORK_CONTRIBUTOR_ROLE_RUB" +
      "RICATOR\020 \0221\n-CREATIVE_MUSICAL_WORK_CONTR" +
      "IBUTOR_ROLE_AUTHOR\020!\0225\n1CREATIVE_MUSICAL" +
      "_WORK_CONTRIBUTOR_ROLE_LIBRETTIST\020\"*\255\001\n\t" +
      "CueOrigin\022\026\n\022CUE_ORIGIN_UNKNOWN\020\000\022 \n\034CUE" +
      "_ORIGIN_PREEXISTING_MUSIC\020\001\022+\n\'CUE_ORIGI" +
      "N_SPECIALLY_COMMISSIONED_MUSIC\020\002\022\033\n\027CUE_" +
      "ORIGIN_USER_DEFINED\020\003\022\034\n\030CUE_ORIGIN_LIBR" +
      "ARY_MUSIC\020\004*\324\001\n\014CueSheetType\022\'\n#CUE_SHEE" +
      "T_TYPE_SUMMARISED_CUE_SHEET\020\000\022%\n!CUE_SHE" +
      "ET_TYPE_STANDARD_CUE_SHEET\020\001\022&\n\"CUE_SHEE" +
      "T_TYPE_SURROGATE_CUE_SHEET\020\002\022$\n CUE_SHEE" +
      "T_TYPE_AVERAGE_CUE_SHEET\020\003\022&\n\"CUE_SHEET_" +
      "TYPE_COMPOSITE_CUE_SHEET\020\004*\305\002\n\nCueUseTyp" +
      "e\022\027\n\023CUE_USE_TYPE_BUMPER\020\000\022\037\n\033CUE_USE_TY" +
      "PE_ESSENTIAL_PART\020\001\022\033\n\027CUE_USE_TYPE_BACK" +
      "GROUND\020\002\022 \n\034CUE_USE_TYPE_ON_SCREEN_MUSIC" +
      "\020\003\022\033\n\027CUE_USE_TYPE_FILM_THEME\020\004\022\033\n\027CUE_U" +
      "SE_TYPE_AUDIO_LOGO\020\005\022-\n)CUE_USE_TYPE_IND" +
      "ISTINGUISHABLE_BACKGROUND\020\006\022\026\n\022CUE_USE_T" +
      "YPE_THEME\020\007\022\035\n\031CUE_USE_TYPE_USER_DEFINED" +
      "\020\010\022\036\n\032CUE_USE_TYPE_ROLLED_UP_CUE\020\t*\240\"\n\014C" +
      "urrencyCode\022\027\n\023CURRENCY_CODE_F_J_D\020\000\022\027\n\023" +
      "CURRENCY_CODE_M_X_N\020\001\022\027\n\023CURRENCY_CODE_S" +
      "_T_D\020\002\022\027\n\023CURRENCY_CODE_S_C_R\020\003\022\027\n\023CURRE" +
      "NCY_CODE_L_V_L\020\004\022\027\n\023CURRENCY_CODE_C_D_F\020" +
      "\005\022\027\n\023CURRENCY_CODE_B_B_D\020\006\022\027\n\023CURRENCY_C" +
      "ODE_G_T_Q\020\007\022\027\n\023CURRENCY_CODE_C_L_P\020\010\022\027\n\023" +
      "CURRENCY_CODE_H_N_L\020\t\022\027\n\023CURRENCY_CODE_U" +
      "_G_X\020\n\022\027\n\023CURRENCY_CODE_M_X_V\020\013\022\027\n\023CURRE" +
      "NCY_CODE_Z_A_R\020\014\022\027\n\023CURRENCY_CODE_T_N_D\020" +
      "\r\022\027\n\023CURRENCY_CODE_S_T_N\020\016\022\027\n\023CURRENCY_C" +
      "ODE_C_U_C\020\017\022\027\n\023CURRENCY_CODE_B_S_D\020\020\022\027\n\023" +
      "CURRENCY_CODE_S_L_L\020\021\022\027\n\023CURRENCY_CODE_S" +
      "_D_G\020\022\022\027\n\023CURRENCY_CODE_I_Q_D\020\023\022\027\n\023CURRE" +
      "NCY_CODE_C_U_P\020\024\022\027\n\023CURRENCY_CODE_G_M_D\020" +
      "\025\022\027\n\023CURRENCY_CODE_T_W_D\020\026\022\027\n\023CURRENCY_C" +
      "ODE_R_S_D\020\027\022\027\n\023CURRENCY_CODE_D_O_P\020\030\022\027\n\023" +
      "CURRENCY_CODE_U_Y_I\020\031\022\027\n\023CURRENCY_CODE_K" +
      "_M_F\020\032\022\027\n\023CURRENCY_CODE_M_Y_R\020\033\022\027\n\023CURRE" +
      "NCY_CODE_F_K_P\020\034\022\027\n\023CURRENCY_CODE_X_O_F\020" +
      "\035\022\027\n\023CURRENCY_CODE_G_E_L\020\036\022\027\n\023CURRENCY_C" +
      "ODE_U_Y_U\020\037\022\027\n\023CURRENCY_CODE_M_A_D\020 \022\027\n\023" +
      "CURRENCY_CODE_C_V_E\020!\022\027\n\023CURRENCY_CODE_T" +
      "_O_P\020\"\022\027\n\023CURRENCY_CODE_A_Z_N\020#\022\027\n\023CURRE" +
      "NCY_CODE_O_M_R\020$\022\027\n\023CURRENCY_CODE_P_G_K\020" +
      "%\022\027\n\023CURRENCY_CODE_K_E_S\020&\022\027\n\023CURRENCY_C" +
      "ODE_S_E_K\020\'\022\027\n\023CURRENCY_CODE_B_T_N\020(\022\027\n\023" +
      "CURRENCY_CODE_U_A_H\020)\022\027\n\023CURRENCY_CODE_G" +
      "_N_F\020*\022\027\n\023CURRENCY_CODE_E_R_N\020+\022\027\n\023CURRE" +
      "NCY_CODE_M_Z_N\020,\022\027\n\023CURRENCY_CODE_S_V_C\020" +
      "-\022\027\n\023CURRENCY_CODE_A_R_S\020.\022\027\n\023CURRENCY_C" +
      "ODE_Q_A_R\020/\022\027\n\023CURRENCY_CODE_I_R_R\0200\022\027\n\023" +
      "CURRENCY_CODE_M_R_O\0201\022\027\n\023CURRENCY_CODE_C" +
      "_N_Y\0202\022\027\n\023CURRENCY_CODE_T_H_B\0203\022\027\n\023CURRE" +
      "NCY_CODE_U_Z_S\0204\022\027\n\023CURRENCY_CODE_X_P_F\020" +
      "5\022\027\n\023CURRENCY_CODE_M_R_U\0206\022\027\n\023CURRENCY_C" +
      "ODE_B_D_T\0207\022\027\n\023CURRENCY_CODE_L_Y_D\0208\022\027\n\023" +
      "CURRENCY_CODE_B_M_D\0209\022\027\n\023CURRENCY_CODE_K" +
      "_W_D\020:\022\027\n\023CURRENCY_CODE_P_H_P\020;\022\027\n\023CURRE" +
      "NCY_CODE_R_U_B\020<\022\027\n\023CURRENCY_CODE_P_Y_G\020" +
      "=\022\027\n\023CURRENCY_CODE_I_S_K\020>\022\027\n\023CURRENCY_C" +
      "ODE_J_M_D\020?\022\027\n\023CURRENCY_CODE_C_O_P\020@\022\027\n\023" +
      "CURRENCY_CODE_M_K_D\020A\022\027\n\023CURRENCY_CODE_U" +
      "_S_D\020B\022\027\n\023CURRENCY_CODE_C_O_U\020C\022\027\n\023CURRE" +
      "NCY_CODE_D_Z_D\020D\022\027\n\023CURRENCY_CODE_P_A_B\020" +
      "E\022\027\n\023CURRENCY_CODE_S_G_D\020F\022\027\n\023CURRENCY_C" +
      "ODE_E_T_B\020G\022\027\n\023CURRENCY_CODE_K_G_S\020H\022\027\n\023" +
      "CURRENCY_CODE_S_O_S\020I\022\027\n\023CURRENCY_CODE_V" +
      "_U_V\020J\022\027\n\023CURRENCY_CODE_V_E_F\020K\022\027\n\023CURRE" +
      "NCY_CODE_L_A_K\020L\022\027\n\023CURRENCY_CODE_B_N_D\020" +
      "M\022\027\n\023CURRENCY_CODE_X_A_F\020N\022\027\n\023CURRENCY_C" +
      "ODE_L_R_D\020O\022\027\n\023CURRENCY_CODE_C_H_F\020P\022\027\n\023" +
      "CURRENCY_CODE_H_R_K\020Q\022\027\n\023CURRENCY_CODE_A" +
      "_L_L\020R\022\027\n\023CURRENCY_CODE_D_J_F\020S\022\027\n\023CURRE" +
      "NCY_CODE_M_T_L\020T\022\027\n\023CURRENCY_CODE_V_E_S\020" +
      "U\022\027\n\023CURRENCY_CODE_Z_M_W\020V\022\027\n\023CURRENCY_C" +
      "ODE_T_Z_S\020W\022\027\n\023CURRENCY_CODE_V_N_D\020X\022\027\n\023" +
      "CURRENCY_CODE_A_U_D\020Y\022\027\n\023CURRENCY_CODE_I" +
      "_L_S\020Z\022\027\n\023CURRENCY_CODE_G_H_S\020[\022\027\n\023CURRE" +
      "NCY_CODE_G_Y_D\020\\\022\027\n\023CURRENCY_CODE_K_P_W\020" +
      "]\022\027\n\023CURRENCY_CODE_B_O_B\020^\022\027\n\023CURRENCY_C" +
      "ODE_K_H_R\020_\022\027\n\023CURRENCY_CODE_M_D_L\020`\022\027\n\023" +
      "CURRENCY_CODE_I_D_R\020a\022\027\n\023CURRENCY_CODE_K" +
      "_Y_D\020b\022\027\n\023CURRENCY_CODE_A_M_D\020c\022\027\n\023CURRE" +
      "NCY_CODE_B_W_P\020d\022\027\n\023CURRENCY_CODE_S_H_P\020" +
      "e\022\027\n\023CURRENCY_CODE_T_R_Y\020f\022\027\n\023CURRENCY_C" +
      "ODE_L_B_P\020g\022\027\n\023CURRENCY_CODE_C_Y_P\020h\022\027\n\023" +
      "CURRENCY_CODE_T_J_S\020i\022\027\n\023CURRENCY_CODE_J" +
      "_O_D\020j\022\027\n\023CURRENCY_CODE_A_E_D\020k\022\027\n\023CURRE" +
      "NCY_CODE_H_K_D\020l\022\027\n\023CURRENCY_CODE_R_W_F\020" +
      "m\022\027\n\023CURRENCY_CODE_E_U_R\020n\022\027\n\023CURRENCY_C" +
      "ODE_L_S_L\020o\022\027\n\023CURRENCY_CODE_D_K_K\020p\022\027\n\023" +
      "CURRENCY_CODE_C_A_D\020q\022\027\n\023CURRENCY_CODE_B" +
      "_G_N\020r\022\027\n\023CURRENCY_CODE_B_O_V\020s\022\027\n\023CURRE" +
      "NCY_CODE_M_M_K\020t\022\027\n\023CURRENCY_CODE_E_E_K\020" +
      "u\022\027\n\023CURRENCY_CODE_M_U_R\020v\022\027\n\023CURRENCY_C" +
      "ODE_N_O_K\020w\022\027\n\023CURRENCY_CODE_S_Y_P\020x\022\027\n\023" +
      "CURRENCY_CODE_Z_W_L\020y\022\027\n\023CURRENCY_CODE_R" +
      "_O_L\020z\022\027\n\023CURRENCY_CODE_G_I_P\020{\022\027\n\023CURRE" +
      "NCY_CODE_R_O_N\020|\022\027\n\023CURRENCY_CODE_L_K_R\020" +
      "}\022\027\n\023CURRENCY_CODE_N_G_N\020~\022\027\n\023CURRENCY_C" +
      "ODE_C_R_C\020\177\022\030\n\023CURRENCY_CODE_C_Z_K\020\200\001\022\030\n" +
      "\023CURRENCY_CODE_P_K_R\020\201\001\022\030\n\023CURRENCY_CODE" +
      "_X_C_D\020\202\001\022\030\n\023CURRENCY_CODE_A_N_G\020\203\001\022\030\n\023C" +
      "URRENCY_CODE_H_T_G\020\204\001\022\030\n\023CURRENCY_CODE_B" +
      "_H_D\020\205\001\022\030\n\023CURRENCY_CODE_S_I_T\020\206\001\022\030\n\023CUR" +
      "RENCY_CODE_K_Z_T\020\207\001\022\030\n\023CURRENCY_CODE_S_R" +
      "_D\020\210\001\022\030\n\023CURRENCY_CODE_S_Z_L\020\211\001\022\030\n\023CURRE" +
      "NCY_CODE_S_A_R\020\212\001\022\030\n\023CURRENCY_CODE_T_T_D" +
      "\020\213\001\022\030\n\023CURRENCY_CODE_L_T_L\020\214\001\022\030\n\023CURRENC" +
      "Y_CODE_Y_E_R\020\215\001\022\030\n\023CURRENCY_CODE_M_V_R\020\216" +
      "\001\022\030\n\023CURRENCY_CODE_A_F_N\020\217\001\022\030\n\023CURRENCY_" +
      "CODE_I_N_R\020\220\001\022\030\n\023CURRENCY_CODE_A_W_G\020\221\001\022" +
      "\030\n\023CURRENCY_CODE_K_R_W\020\222\001\022\030\n\023CURRENCY_CO" +
      "DE_N_P_R\020\223\001\022\030\n\023CURRENCY_CODE_J_P_Y\020\224\001\022\030\n" +
      "\023CURRENCY_CODE_M_N_T\020\225\001\022\030\n\023CURRENCY_CODE" +
      "_A_O_A\020\226\001\022\030\n\023CURRENCY_CODE_P_L_N\020\227\001\022\030\n\023C" +
      "URRENCY_CODE_G_B_P\020\230\001\022\030\n\023CURRENCY_CODE_S" +
      "_B_D\020\231\001\022\030\n\023CURRENCY_CODE_H_U_F\020\232\001\022\030\n\023CUR" +
      "RENCY_CODE_B_Y_R\020\233\001\022\030\n\023CURRENCY_CODE_B_I" +
      "_F\020\234\001\022\030\n\023CURRENCY_CODE_M_W_K\020\235\001\022\030\n\023CURRE" +
      "NCY_CODE_M_G_A\020\236\001\022\030\n\023CURRENCY_CODE_B_Z_D" +
      "\020\237\001\022\030\n\023CURRENCY_CODE_B_A_M\020\240\001\022\030\n\023CURRENC" +
      "Y_CODE_E_G_P\020\241\001\022\030\n\023CURRENCY_CODE_M_O_P\020\242" +
      "\001\022\030\n\023CURRENCY_CODE_N_A_D\020\243\001\022\030\n\023CURRENCY_" +
      "CODE_S_S_P\020\244\001\022\030\n\023CURRENCY_CODE_S_K_K\020\245\001\022" +
      "\030\n\023CURRENCY_CODE_N_I_O\020\246\001\022\030\n\023CURRENCY_CO" +
      "DE_P_E_N\020\247\001\022\030\n\023CURRENCY_CODE_N_Z_D\020\250\001\022\030\n" +
      "\023CURRENCY_CODE_W_S_T\020\251\001\022\030\n\023CURRENCY_CODE" +
      "_T_M_T\020\252\001\022\030\n\023CURRENCY_CODE_C_L_F\020\253\001\022\030\n\023C" +
      "URRENCY_CODE_B_R_L\020\254\001*\203\201\001\n\024CurrentTerrit" +
      "oryCode\022\036\n\032CURRENT_TERRITORY_CODE_A_D\020\000\022" +
      "\036\n\032CURRENT_TERRITORY_CODE_A_E\020\001\022\036\n\032CURRE" +
      "NT_TERRITORY_CODE_A_F\020\002\022\036\n\032CURRENT_TERRI" +
      "TORY_CODE_A_G\020\003\022\036\n\032CURRENT_TERRITORY_COD" +
      "E_A_I\020\004\022\036\n\032CURRENT_TERRITORY_CODE_A_L\020\005\022" +
      "\036\n\032CURRENT_TERRITORY_CODE_A_M\020\006\022\036\n\032CURRE" +
      "NT_TERRITORY_CODE_A_N\020\007\022\036\n\032CURRENT_TERRI" +
      "TORY_CODE_A_O\020\010\022\036\n\032CURRENT_TERRITORY_COD" +
      "E_A_Q\020\t\022\036\n\032CURRENT_TERRITORY_CODE_A_R\020\n\022" +
      "\036\n\032CURRENT_TERRITORY_CODE_A_S\020\013\022\036\n\032CURRE" +
      "NT_TERRITORY_CODE_A_T\020\014\022\036\n\032CURRENT_TERRI" +
      "TORY_CODE_A_U\020\r\022\034\n\030CURRENT_TERRITORY_COD" +
      "E_4\020\016\022\036\n\032CURRENT_TERRITORY_CODE_A_W\020\017\022\036\n" +
      "\032CURRENT_TERRITORY_CODE_A_X\020\020\022\034\n\030CURRENT" +
      "_TERRITORY_CODE_8\020\021\022\036\n\032CURRENT_TERRITORY" +
      "_CODE_800\020\022\022\036\n\032CURRENT_TERRITORY_CODE_A_" +
      "Z\020\023\022\036\n\032CURRENT_TERRITORY_CODE_804\020\024\022\036\n\032C" +
      "URRENT_TERRITORY_CODE_B_A\020\025\022\036\n\032CURRENT_T" +
      "ERRITORY_CODE_807\020\026\022\036\n\032CURRENT_TERRITORY",
      "_CODE_B_B\020\027\022\036\n\032CURRENT_TERRITORY_CODE_B_" +
      "D\020\030\022\036\n\032CURRENT_TERRITORY_CODE_B_E\020\031\022\036\n\032C" +
      "URRENT_TERRITORY_CODE_B_F\020\032\022\036\n\032CURRENT_T" +
      "ERRITORY_CODE_B_G\020\033\022\036\n\032CURRENT_TERRITORY" +
      "_CODE_B_H\020\034\022\036\n\032CURRENT_TERRITORY_CODE_B_" +
      "I\020\035\022\036\n\032CURRENT_TERRITORY_CODE_B_J\020\036\022\036\n\032C" +
      "URRENT_TERRITORY_CODE_B_L\020\037\022\036\n\032CURRENT_T" +
      "ERRITORY_CODE_B_M\020 \022\036\n\032CURRENT_TERRITORY" +
      "_CODE_B_N\020!\022\036\n\032CURRENT_TERRITORY_CODE_B_" +
      "O\020\"\022\036\n\032CURRENT_TERRITORY_CODE_B_Q\020#\022\036\n\032C" +
      "URRENT_TERRITORY_CODE_B_R\020$\022\036\n\032CURRENT_T" +
      "ERRITORY_CODE_B_S\020%\022\036\n\032CURRENT_TERRITORY" +
      "_CODE_B_T\020&\022\036\n\032CURRENT_TERRITORY_CODE_B_" +
      "V\020\'\022\036\n\032CURRENT_TERRITORY_CODE_B_W\020(\022\036\n\032C" +
      "URRENT_TERRITORY_CODE_B_Y\020)\022\036\n\032CURRENT_T" +
      "ERRITORY_CODE_810\020*\022\036\n\032CURRENT_TERRITORY" +
      "_CODE_B_Z\020+\022\036\n\032CURRENT_TERRITORY_CODE_C_" +
      "A\020,\022\036\n\032CURRENT_TERRITORY_CODE_818\020-\022\036\n\032C" +
      "URRENT_TERRITORY_CODE_C_C\020.\022\036\n\032CURRENT_T" +
      "ERRITORY_CODE_C_D\020/\022\036\n\032CURRENT_TERRITORY" +
      "_CODE_C_F\0200\022\036\n\032CURRENT_TERRITORY_CODE_C_" +
      "G\0201\022\036\n\032CURRENT_TERRITORY_CODE_C_H\0202\022\036\n\032C" +
      "URRENT_TERRITORY_CODE_C_I\0203\022\036\n\032CURRENT_T" +
      "ERRITORY_CODE_C_K\0204\022\037\n\033CURRENT_TERRITORY" +
      "_CODE_2100\0205\022\036\n\032CURRENT_TERRITORY_CODE_C" +
      "_L\0206\022\036\n\032CURRENT_TERRITORY_CODE_C_M\0207\022\036\n\032" +
      "CURRENT_TERRITORY_CODE_C_N\0208\022\036\n\032CURRENT_" +
      "TERRITORY_CODE_C_O\0209\022\036\n\032CURRENT_TERRITOR" +
      "Y_CODE_C_R\020:\022\036\n\032CURRENT_TERRITORY_CODE_C" +
      "_S\020;\022\036\n\032CURRENT_TERRITORY_CODE_C_U\020<\022\036\n\032" +
      "CURRENT_TERRITORY_CODE_C_V\020=\022\036\n\032CURRENT_" +
      "TERRITORY_CODE_C_W\020>\022\036\n\032CURRENT_TERRITOR" +
      "Y_CODE_C_X\020?\022\036\n\032CURRENT_TERRITORY_CODE_C" +
      "_Y\020@\022\036\n\032CURRENT_TERRITORY_CODE_C_Z\020A\022\036\n\032" +
      "CURRENT_TERRITORY_CODE_702\020B\022\036\n\032CURRENT_" +
      "TERRITORY_CODE_703\020C\022\036\n\032CURRENT_TERRITOR" +
      "Y_CODE_704\020D\022\036\n\032CURRENT_TERRITORY_CODE_7" +
      "05\020E\022\036\n\032CURRENT_TERRITORY_CODE_826\020F\022\036\n\032" +
      "CURRENT_TERRITORY_CODE_706\020G\022\036\n\032CURRENT_" +
      "TERRITORY_CODE_D_E\020H\022\036\n\032CURRENT_TERRITOR" +
      "Y_CODE_D_J\020I\022\036\n\032CURRENT_TERRITORY_CODE_D" +
      "_K\020J\022\037\n\033CURRENT_TERRITORY_CODE_2111\020K\022\036\n" +
      "\032CURRENT_TERRITORY_CODE_D_M\020L\022\037\n\033CURRENT" +
      "_TERRITORY_CODE_2110\020M\022\036\n\032CURRENT_TERRIT" +
      "ORY_CODE_D_O\020N\022\037\n\033CURRENT_TERRITORY_CODE" +
      "_2108\020O\022\037\n\033CURRENT_TERRITORY_CODE_2107\020P" +
      "\022\037\n\033CURRENT_TERRITORY_CODE_2106\020Q\022\037\n\033CUR" +
      "RENT_TERRITORY_CODE_2105\020R\022\037\n\033CURRENT_TE" +
      "RRITORY_CODE_2104\020S\022\037\n\033CURRENT_TERRITORY" +
      "_CODE_2103\020T\022\036\n\032CURRENT_TERRITORY_CODE_D" +
      "_Z\020U\022\036\n\032CURRENT_TERRITORY_CODE_710\020V\022\037\n\033" +
      "CURRENT_TERRITORY_CODE_2102\020W\022\037\n\033CURRENT" +
      "_TERRITORY_CODE_2101\020X\022\036\n\032CURRENT_TERRIT" +
      "ORY_CODE_834\020Y\022\036\n\032CURRENT_TERRITORY_CODE" +
      "_716\020Z\022\036\n\032CURRENT_TERRITORY_CODE_E_C\020[\022\037" +
      "\n\033CURRENT_TERRITORY_CODE_2109\020\\\022\036\n\032CURRE" +
      "NT_TERRITORY_CODE_E_E\020]\022\036\n\032CURRENT_TERRI" +
      "TORY_CODE_E_G\020^\022\036\n\032CURRENT_TERRITORY_COD" +
      "E_E_H\020_\022\037\n\033CURRENT_TERRITORY_CODE_2122\020`" +
      "\022\037\n\033CURRENT_TERRITORY_CODE_2121\020a\022\037\n\033CUR" +
      "RENT_TERRITORY_CODE_2120\020b\022\036\n\032CURRENT_TE" +
      "RRITORY_CODE_E_R\020c\022\036\n\032CURRENT_TERRITORY_" +
      "CODE_E_S\020d\022\036\n\032CURRENT_TERRITORY_CODE_E_T" +
      "\020e\022\037\n\033CURRENT_TERRITORY_CODE_2119\020f\022\037\n\033C" +
      "URRENT_TERRITORY_CODE_2118\020g\022\037\n\033CURRENT_" +
      "TERRITORY_CODE_2117\020h\022\037\n\033CURRENT_TERRITO" +
      "RY_CODE_2116\020i\022\036\n\032CURRENT_TERRITORY_CODE" +
      "_840\020j\022\037\n\033CURRENT_TERRITORY_CODE_2115\020k\022" +
      "\036\n\032CURRENT_TERRITORY_CODE_720\020l\022\037\n\033CURRE" +
      "NT_TERRITORY_CODE_2114\020m\022\036\n\032CURRENT_TERR" +
      "ITORY_CODE_600\020n\022\037\n\033CURRENT_TERRITORY_CO" +
      "DE_2113\020o\022\037\n\033CURRENT_TERRITORY_CODE_2112" +
      "\020p\022\036\n\032CURRENT_TERRITORY_CODE_724\020q\022\036\n\032CU" +
      "RRENT_TERRITORY_CODE_604\020r\022\036\n\032CURRENT_TE" +
      "RRITORY_CODE_728\020s\022\036\n\032CURRENT_TERRITORY_" +
      "CODE_608\020t\022\036\n\032CURRENT_TERRITORY_CODE_729" +
      "\020u\022\036\n\032CURRENT_TERRITORY_CODE_F_I\020v\022\036\n\032CU" +
      "RRENT_TERRITORY_CODE_F_J\020w\022\036\n\032CURRENT_TE" +
      "RRITORY_CODE_F_K\020x\022\036\n\032CURRENT_TERRITORY_" +
      "CODE_F_M\020y\022\037\n\033CURRENT_TERRITORY_CODE_213" +
      "3\020z\022\036\n\032CURRENT_TERRITORY_CODE_F_O\020{\022\037\n\033C" +
      "URRENT_TERRITORY_CODE_2132\020|\022\037\n\033CURRENT_" +
      "TERRITORY_CODE_2131\020}\022\037\n\033CURRENT_TERRITO" +
      "RY_CODE_2130\020~\022\036\n\032CURRENT_TERRITORY_CODE" +
      "_F_R\020\177\022 \n\033CURRENT_TERRITORY_CODE_2129\020\200\001" +
      "\022 \n\033CURRENT_TERRITORY_CODE_2128\020\201\001\022 \n\033CU" +
      "RRENT_TERRITORY_CODE_2127\020\202\001\022 \n\033CURRENT_" +
      "TERRITORY_CODE_2126\020\203\001\022 \n\033CURRENT_TERRIT" +
      "ORY_CODE_2125\020\204\001\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_732\020\205\001\022 \n\033CURRENT_TERRITORY_CODE_2124" +
      "\020\206\001\022\037\n\032CURRENT_TERRITORY_CODE_854\020\207\001\022 \n\033" +
      "CURRENT_TERRITORY_CODE_2123\020\210\001\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_G_A\020\211\001\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_736\020\212\001\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_G_B\020\213\001\022\037\n\032CURRENT_TERRITORY_CODE_616\020" +
      "\214\001\022\037\n\032CURRENT_TERRITORY_CODE_858\020\215\001\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_G_D\020\216\001\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_G_E\020\217\001\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_G_F\020\220\001\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_G_G\020\221\001\022\037\n\032CURRENT_TERRITORY_CODE_G_H\020\222\001" +
      "\022\037\n\032CURRENT_TERRITORY_CODE_G_I\020\223\001\022\037\n\032CUR" +
      "RENT_TERRITORY_CODE_G_L\020\224\001\022\037\n\032CURRENT_TE" +
      "RRITORY_CODE_G_M\020\225\001\022\037\n\032CURRENT_TERRITORY" +
      "_CODE_G_N\020\226\001\022\037\n\032CURRENT_TERRITORY_CODE_G" +
      "_P\020\227\001\022\037\n\032CURRENT_TERRITORY_CODE_G_Q\020\230\001\022\037" +
      "\n\032CURRENT_TERRITORY_CODE_G_R\020\231\001\022,\n\'CURRE" +
      "NT_TERRITORY_CODE_E_S__MINUS___M_L\020\232\001\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_G_S\020\233\001\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_G_T\020\234\001\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_G_U\020\235\001\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_G_W\020\236\001\022\037\n\032CURRENT_TERRITORY_CODE_G_Y\020" +
      "\237\001\022\037\n\032CURRENT_TERRITORY_CODE_860\020\240\001\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_740\020\241\001\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_620\020\242\001\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_862\020\243\001\022 \n\033CURRENT_TERRITORY_CODE" +
      "_2136\020\244\001\022 \n\033CURRENT_TERRITORY_CODE_2134\020" +
      "\245\001\022\037\n\032CURRENT_TERRITORY_CODE_624\020\246\001\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_504\020\247\001\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_626\020\250\001\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_748\020\251\001\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_508\020\252\001\022\037\n\032CURRENT_TERRITORY_CODE_H_K\020\253\001" +
      "\022\037\n\032CURRENT_TERRITORY_CODE_H_M\020\254\001\022\037\n\032CUR" +
      "RENT_TERRITORY_CODE_H_N\020\255\001\022\037\n\032CURRENT_TE" +
      "RRITORY_CODE_H_R\020\256\001\022\037\n\032CURRENT_TERRITORY" +
      "_CODE_H_T\020\257\001\022\037\n\032CURRENT_TERRITORY_CODE_H" +
      "_U\020\260\001\022\037\n\032CURRENT_TERRITORY_CODE_630\020\261\001\022\037" +
      "\n\032CURRENT_TERRITORY_CODE_752\020\262\001\022\037\n\032CURRE" +
      "NT_TERRITORY_CODE_512\020\263\001\022\037\n\032CURRENT_TERR" +
      "ITORY_CODE_634\020\264\001\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_756\020\265\001\022\037\n\032CURRENT_TERRITORY_CODE_516" +
      "\020\266\001\022\037\n\032CURRENT_TERRITORY_CODE_I_D\020\267\001\022\037\n\032" +
      "CURRENT_TERRITORY_CODE_I_E\020\270\001\022\037\n\032CURRENT" +
      "_TERRITORY_CODE_I_L\020\271\001\022\037\n\032CURRENT_TERRIT" +
      "ORY_CODE_I_M\020\272\001\022\037\n\032CURRENT_TERRITORY_COD" +
      "E_I_N\020\273\001\022\037\n\032CURRENT_TERRITORY_CODE_I_O\020\274" +
      "\001\022\037\n\032CURRENT_TERRITORY_CODE_I_Q\020\275\001\022\037\n\032CU" +
      "RRENT_TERRITORY_CODE_I_R\020\276\001\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_I_S\020\277\001\022\037\n\032CURRENT_TERRITOR" +
      "Y_CODE_I_T\020\300\001\022\037\n\032CURRENT_TERRITORY_CODE_" +
      "760\020\301\001\022\037\n\032CURRENT_TERRITORY_CODE_882\020\302\001\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_520\020\303\001\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_762\020\304\001\022\037\n\032CURRENT_TER" +
      "RITORY_CODE_400\020\305\001\022\037\n\032CURRENT_TERRITORY_" +
      "CODE_642\020\306\001\022\037\n\032CURRENT_TERRITORY_CODE_64" +
      "3\020\307\001\022\037\n\032CURRENT_TERRITORY_CODE_764\020\310\001\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_886\020\311\001\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_524\020\312\001\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_887\020\313\001\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_404\020\314\001\022\037\n\032CURRENT_TERRITORY_CODE_646\020" +
      "\315\001\022\037\n\032CURRENT_TERRITORY_CODE_768\020\316\001\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_J_E\020\317\001\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_528\020\320\001\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_408\020\321\001\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_J_M\020\322\001\022\037\n\032CURRENT_TERRITORY_CODE_J_O\020\323\001" +
      "\022\037\n\032CURRENT_TERRITORY_CODE_J_P\020\324\001\022\037\n\032CUR" +
      "RENT_TERRITORY_CODE_890\020\325\001\022\037\n\032CURRENT_TE" +
      "RRITORY_CODE_891\020\326\001\022\037\n\032CURRENT_TERRITORY" +
      "_CODE_410\020\327\001\022\037\n\032CURRENT_TERRITORY_CODE_8" +
      "94\020\330\001\022\037\n\032CURRENT_TERRITORY_CODE_776\020\331\001\022\037" +
      "\n\032CURRENT_TERRITORY_CODE_414\020\332\001\022\037\n\032CURRE" +
      "NT_TERRITORY_CODE_K_E\020\333\001\022\037\n\032CURRENT_TERR" +
      "ITORY_CODE_417\020\334\001\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_659\020\335\001\022\037\n\032CURRENT_TERRITORY_CODE_418" +
      "\020\336\001\022\037\n\032CURRENT_TERRITORY_CODE_K_G\020\337\001\022\037\n\032" +
      "CURRENT_TERRITORY_CODE_K_H\020\340\001\022\037\n\032CURRENT" +
      "_TERRITORY_CODE_K_I\020\341\001\022\037\n\032CURRENT_TERRIT" +
      "ORY_CODE_K_M\020\342\001\022\037\n\032CURRENT_TERRITORY_COD" +
      "E_K_N\020\343\001\022\037\n\032CURRENT_TERRITORY_CODE_K_P\020\344" +
      "\001\022\037\n\032CURRENT_TERRITORY_CODE_K_R\020\345\001\022\037\n\032CU" +
      "RRENT_TERRITORY_CODE_K_W\020\346\001\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_K_Y\020\347\001\022\037\n\032CURRENT_TERRITOR" +
      "Y_CODE_K_Z\020\350\001\022\037\n\032CURRENT_TERRITORY_CODE_" +
      "780\020\351\001\022\037\n\032CURRENT_TERRITORY_CODE_540\020\352\001\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_662\020\353\001\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_300\020\354\001\022\037\n\032CURRENT_TER" +
      "RITORY_CODE_784\020\355\001\022\037\n\032CURRENT_TERRITORY_" +
      "CODE_422\020\356\001\022\037\n\032CURRENT_TERRITORY_CODE_L_" +
      "A\020\357\001\022\037\n\032CURRENT_TERRITORY_CODE_L_B\020\360\001\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_L_C\020\361\001\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_788\020\362\001\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_426\020\363\001\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_548\020\364\001\022\037\n\032CURRENT_TERRITORY_CODE_428\020" +
      "\365\001\022\037\n\032CURRENT_TERRITORY_CODE_308\020\366\001\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_L_I\020\367\001\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_L_K\020\370\001\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_L_R\020\371\001\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_L_S\020\372\001\022\037\n\032CURRENT_TERRITORY_CODE_L_T\020\373\001" +
      "\022\037\n\032CURRENT_TERRITORY_CODE_L_U\020\374\001\022\037\n\032CUR" +
      "RENT_TERRITORY_CODE_L_V\020\375\001\022\037\n\032CURRENT_TE" +
      "RRITORY_CODE_L_Y\020\376\001\022\037\n\032CURRENT_TERRITORY" +
      "_CODE_670\020\377\001\022\037\n\032CURRENT_TERRITORY_CODE_7" +
      "92\020\200\002\022\037\n\032CURRENT_TERRITORY_CODE_430\020\201\002\022\037" +
      "\n\032CURRENT_TERRITORY_CODE_674\020\202\002\022\037\n\032CURRE" +
      "NT_TERRITORY_CODE_795\020\203\002\022\037\n\032CURRENT_TERR" +
      "ITORY_CODE_M_A\020\204\002\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_554\020\205\002\022\037\n\032CURRENT_TERRITORY_CODE_434" +
      "\020\206\002\022\037\n\032CURRENT_TERRITORY_CODE_M_C\020\207\002\022\037\n\032" +
      "CURRENT_TERRITORY_CODE_798\020\210\002\022\037\n\032CURRENT" +
      "_TERRITORY_CODE_M_D\020\211\002\022\037\n\032CURRENT_TERRIT" +
      "ORY_CODE_678\020\212\002\022\037\n\032CURRENT_TERRITORY_COD" +
      "E_M_E\020\213\002\022\037\n\032CURRENT_TERRITORY_CODE_558\020\214" +
      "\002\022\037\n\032CURRENT_TERRITORY_CODE_M_F\020\215\002\022\037\n\032CU" +
      "RRENT_TERRITORY_CODE_438\020\216\002\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_M_G\020\217\002\022\037\n\032CURRENT_TERRITOR" +
      "Y_CODE_M_H\020\220\002\022\037\n\032CURRENT_TERRITORY_CODE_" +
      "M_K\020\221\002\022\037\n\032CURRENT_TERRITORY_CODE_M_L\020\222\002\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_M_M\020\223\002\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_M_N\020\224\002\022\037\n\032CURRENT_TER" +
      "RITORY_CODE_M_O\020\225\002\022\037\n\032CURRENT_TERRITORY_" +
      "CODE_M_P\020\226\002\022\037\n\032CURRENT_TERRITORY_CODE_M_" +
      "Q\020\227\002\022\037\n\032CURRENT_TERRITORY_CODE_M_R\020\230\002\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_M_S\020\231\002\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_M_T\020\232\002\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_M_U\020\233\002\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_M_V\020\234\002\022\037\n\032CURRENT_TERRITORY_CODE_M_W\020" +
      "\235\002\022\037\n\032CURRENT_TERRITORY_CODE_M_X\020\236\002\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_M_Y\020\237\002\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_M_Z\020\240\002\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_440\020\241\002\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_682\020\242\002\022\037\n\032CURRENT_TERRITORY_CODE_320\020\243\002" +
      "\022\037\n\032CURRENT_TERRITORY_CODE_562\020\244\002\022\037\n\032CUR" +
      "RENT_TERRITORY_CODE_200\020\245\002\022\037\n\032CURRENT_TE" +
      "RRITORY_CODE_442\020\246\002\022\037\n\032CURRENT_TERRITORY" +
      "_CODE_N_A\020\247\002\022\037\n\032CURRENT_TERRITORY_CODE_6" +
      "86\020\250\002\022\037\n\032CURRENT_TERRITORY_CODE_N_C\020\251\002\022\037" +
      "\n\032CURRENT_TERRITORY_CODE_203\020\252\002\022\037\n\032CURRE" +
      "NT_TERRITORY_CODE_324\020\253\002\022\037\n\032CURRENT_TERR" +
      "ITORY_CODE_566\020\254\002\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_204\020\255\002\022\037\n\032CURRENT_TERRITORY_CODE_688" +
      "\020\256\002\022\037\n\032CURRENT_TERRITORY_CODE_N_E\020\257\002\022\037\n\032" +
      "CURRENT_TERRITORY_CODE_N_F\020\260\002\022\037\n\032CURRENT" +
      "_TERRITORY_CODE_N_G\020\261\002\022\037\n\032CURRENT_TERRIT" +
      "ORY_CODE_328\020\262\002\022\037\n\032CURRENT_TERRITORY_COD" +
      "E_208\020\263\002\022\037\n\032CURRENT_TERRITORY_CODE_N_I\020\264" +
      "\002\022\037\n\032CURRENT_TERRITORY_CODE_N_L\020\265\002\022\037\n\032CU" +
      "RRENT_TERRITORY_CODE_N_O\020\266\002\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_N_P\020\267\002\022\037\n\032CURRENT_TERRITOR" +
      "Y_CODE_N_R\020\270\002\022\037\n\032CURRENT_TERRITORY_CODE_" +
      "N_U\020\271\002\022\037\n\032CURRENT_TERRITORY_CODE_N_Z\020\272\002\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_690\020\273\002\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_450\020\274\002\022\037\n\032CURRENT_TER" +
      "RITORY_CODE_694\020\275\002\022\037\n\032CURRENT_TERRITORY_" +
      "CODE_332\020\276\002\022\037\n\032CURRENT_TERRITORY_CODE_21" +
      "2\020\277\002\022\037\n\032CURRENT_TERRITORY_CODE_454\020\300\002\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_214\020\301\002\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_336\020\302\002\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_578\020\303\002\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_458\020\304\002\022\037\n\032CURRENT_TERRITORY_CODE_218\020" +
      "\305\002\022\037\n\032CURRENT_TERRITORY_CODE_O_M\020\306\002\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_340\020\307\002\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_462\020\310\002\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_583\020\311\002\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_P_A\020\312\002\022\037\n\032CURRENT_TERRITORY_CODE_100\020\313\002" +
      "\022\037\n\032CURRENT_TERRITORY_CODE_584\020\314\002\022\037\n\032CUR" +
      "RENT_TERRITORY_CODE_222\020\315\002\022\037\n\032CURRENT_TE" +
      "RRITORY_CODE_585\020\316\002\022\037\n\032CURRENT_TERRITORY" +
      "_CODE_344\020\317\002\022\037\n\032CURRENT_TERRITORY_CODE_5" +
      "86\020\320\002\022\037\n\032CURRENT_TERRITORY_CODE_466\020\321\002\022\037" +
      "\n\032CURRENT_TERRITORY_CODE_P_E\020\322\002\022\037\n\032CURRE" +
      "NT_TERRITORY_CODE_104\020\323\002\022\037\n\032CURRENT_TERR" +
      "ITORY_CODE_P_F\020\324\002\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_226\020\325\002\022\037\n\032CURRENT_TERRITORY_CODE_P_G" +
      "\020\326\002\022\037\n\032CURRENT_TERRITORY_CODE_348\020\327\002\022\037\n\032" +
      "CURRENT_TERRITORY_CODE_P_H\020\330\002\022\037\n\032CURRENT" +
      "_TERRITORY_CODE_108\020\331\002\022\037\n\032CURRENT_TERRIT" +
      "ORY_CODE_P_K\020\332\002\022\037\n\032CURRENT_TERRITORY_COD" +
      "E_P_L\020\333\002\022\037\n\032CURRENT_TERRITORY_CODE_P_M\020\334" +
      "\002\022\037\n\032CURRENT_TERRITORY_CODE_P_N\020\335\002\022\037\n\032CU" +
      "RRENT_TERRITORY_CODE_P_R\020\336\002\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_P_S\020\337\002\022\037\n\032CURRENT_TERRITOR" +
      "Y_CODE_P_T\020\340\002\022\037\n\032CURRENT_TERRITORY_CODE_" +
      "P_W\020\341\002\022\037\n\032CURRENT_TERRITORY_CODE_P_Y\020\342\002\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_470\020\343\002\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_591\020\344\002\022\037\n\032CURRENT_TER" +
      "RITORY_CODE_230\020\345\002\022\037\n\032CURRENT_TERRITORY_" +
      "CODE_Q_A\020\346\002\022\037\n\032CURRENT_TERRITORY_CODE_23" +
      "1\020\347\002\022\037\n\032CURRENT_TERRITORY_CODE_352\020\350\002\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_232\020\351\002\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_112\020\352\002\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_233\020\353\002\022,\n\'CURRENT_TERRITORY_CO" +
      "DE_E_S__MINUS___C_E\020\354\002\022\037\n\032CURRENT_TERRIT" +
      "ORY_CODE_356\020\355\002\022\037\n\032CURRENT_TERRITORY_COD" +
      "E_598\020\356\002\022\037\n\032CURRENT_TERRITORY_CODE_478\020\357" +
      "\002\022\037\n\032CURRENT_TERRITORY_CODE_116\020\360\002\022,\n\'CU" +
      "RRENT_TERRITORY_CODE_E_S__MINUS___C_N\020\361\002" +
      "\022\036\n\031CURRENT_TERRITORY_CODE_12\020\362\002\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_480\020\363\002\022\037\n\032CURRENT_TER" +
      "RITORY_CODE_360\020\364\002\022\037\n\032CURRENT_TERRITORY_" +
      "CODE_120\020\365\002\022\037\n\032CURRENT_TERRITORY_CODE_24" +
      "2\020\366\002\022\037\n\032CURRENT_TERRITORY_CODE_484\020\367\002\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_364\020\370\002\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_R_E\020\371\002\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_124\020\372\002\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_246\020\373\002\022\037\n\032CURRENT_TERRITORY_CODE_368\020" +
      "\374\002\022\037\n\032CURRENT_TERRITORY_CODE_R_O\020\375\002\022\036\n\031C" +
      "URRENT_TERRITORY_CODE_20\020\376\002\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_R_S\020\377\002\022\036\n\031CURRENT_TERRITOR" +
      "Y_CODE_24\020\200\003\022\037\n\032CURRENT_TERRITORY_CODE_R" +
      "_U\020\201\003\022\037\n\032CURRENT_TERRITORY_CODE_R_W\020\202\003\022\036" +
      "\n\031CURRENT_TERRITORY_CODE_28\020\203\003\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_250\020\204\003\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_492\020\205\003\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_S_A\020\206\003\022\037\n\032CURRENT_TERRITORY_CODE_372\020" +
      "\207\003\022\037\n\032CURRENT_TERRITORY_CODE_S_B\020\210\003\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_S_C\020\211\003\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_132\020\212\003\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_S_D\020\213\003\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_496\020\214\003\022\037\n\032CURRENT_TERRITORY_CODE_S_E\020\215\003" +
      "\022\037\n\032CURRENT_TERRITORY_CODE_376\020\216\003\022\037\n\032CUR" +
      "RENT_TERRITORY_CODE_498\020\217\003\022\037\n\032CURRENT_TE" +
      "RRITORY_CODE_S_G\020\220\003\022\037\n\032CURRENT_TERRITORY" +
      "_CODE_499\020\221\003\022\037\n\032CURRENT_TERRITORY_CODE_S" +
      "_H\020\222\003\022\037\n\032CURRENT_TERRITORY_CODE_258\020\223\003\022\037" +
      "\n\032CURRENT_TERRITORY_CODE_S_I\020\224\003\022\037\n\032CURRE" +
      "NT_TERRITORY_CODE_S_J\020\225\003\022\037\n\032CURRENT_TERR" +
      "ITORY_CODE_S_K\020\226\003\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_S_L\020\227\003\022\037\n\032CURRENT_TERRITORY_CODE_S_M" +
      "\020\230\003\022\037\n\032CURRENT_TERRITORY_CODE_S_N\020\231\003\022\037\n\032" +
      "CURRENT_TERRITORY_CODE_S_O\020\232\003\022\036\n\031CURRENT" +
      "_TERRITORY_CODE_31\020\233\003\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_S_R\020\234\003\022\036\n\031CURRENT_TERRITORY_CODE" +
      "_32\020\235\003\022\037\n\032CURRENT_TERRITORY_CODE_S_S\020\236\003\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_S_T\020\237\003\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_S_V\020\240\003\022\036\n\031CURRENT_TER" +
      "RITORY_CODE_36\020\241\003\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_S_X\020\242\003\022\037\n\032CURRENT_TERRITORY_CODE_S_Y" +
      "\020\243\003\022\037\n\032CURRENT_TERRITORY_CODE_S_Z\020\244\003\022\037\n\032" +
      "CURRENT_TERRITORY_CODE_380\020\245\003\022\037\n\032CURRENT" +
      "_TERRITORY_CODE_140\020\246\003\022\037\n\032CURRENT_TERRIT" +
      "ORY_CODE_262\020\247\003\022\037\n\032CURRENT_TERRITORY_COD" +
      "E_T_C\020\250\003\022\037\n\032CURRENT_TERRITORY_CODE_384\020\251" +
      "\003\022\037\n\032CURRENT_TERRITORY_CODE_T_D\020\252\003\022\037\n\032CU" +
      "RRENT_TERRITORY_CODE_144\020\253\003\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_T_F\020\254\003\022\037\n\032CURRENT_TERRITOR" +
      "Y_CODE_266\020\255\003\022\037\n\032CURRENT_TERRITORY_CODE_" +
      "T_G\020\256\003\022\037\n\032CURRENT_TERRITORY_CODE_388\020\257\003\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_T_H\020\260\003\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_268\020\261\003\022\037\n\032CURRENT_TER" +
      "RITORY_CODE_148\020\262\003\022\037\n\032CURRENT_TERRITORY_" +
      "CODE_T_J\020\263\003\022\037\n\032CURRENT_TERRITORY_CODE_T_" +
      "K\020\264\003\022\037\n\032CURRENT_TERRITORY_CODE_T_L\020\265\003\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_T_M\020\266\003\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_T_N\020\267\003\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_T_O\020\270\003\022\036\n\031CURRENT_TERRITORY_CO" +
      "DE_40\020\271\003\022\037\n\032CURRENT_TERRITORY_CODE_T_R\020\272" +
      "\003\022\037\n\032CURRENT_TERRITORY_CODE_T_T\020\273\003\022\036\n\031CU" +
      "RRENT_TERRITORY_CODE_44\020\274\003\022\037\n\032CURRENT_TE" +
      "RRITORY_CODE_T_V\020\275\003\022\037\n\032CURRENT_TERRITORY" +
      "_CODE_T_W\020\276\003\022\036\n\031CURRENT_TERRITORY_CODE_4" +
      "8\020\277\003\022\037\n\032CURRENT_TERRITORY_CODE_T_Z\020\300\003\022\037\n" +
      "\032CURRENT_TERRITORY_CODE_270\020\301\003\022\037\n\032CURREN" +
      "T_TERRITORY_CODE_U_A\020\302\003\022\037\n\032CURRENT_TERRI" +
      "TORY_CODE_392\020\303\003\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_152\020\304\003\022\037\n\032CURRENT_TERRITORY_CODE_276\020" +
      "\305\003\022\037\n\032CURRENT_TERRITORY_CODE_U_G\020\306\003\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_156\020\307\003\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_398\020\310\003\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_278\020\311\003\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_158\020\312\003\022\037\n\032CURRENT_TERRITORY_CODE_U_M\020\313\003" +
      "\022\036\n\031CURRENT_TERRITORY_CODE_50\020\314\003\022\036\n\031CURR" +
      "ENT_TERRITORY_CODE_51\020\315\003\022\036\n\031CURRENT_TERR" +
      "ITORY_CODE_52\020\316\003\022\037\n\032CURRENT_TERRITORY_CO" +
      "DE_U_S\020\317\003\022\036\n\031CURRENT_TERRITORY_CODE_56\020\320" +
      "\003\022\037\n\032CURRENT_TERRITORY_CODE_U_Y\020\321\003\022\037\n\032CU" +
      "RRENT_TERRITORY_CODE_U_Z\020\322\003\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_280\020\323\003\022\037\n\032CURRENT_TERRITOR" +
      "Y_CODE_V_A\020\324\003\022\037\n\032CURRENT_TERRITORY_CODE_" +
      "V_C\020\325\003\022\037\n\032CURRENT_TERRITORY_CODE_V_E\020\326\003\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_V_G\020\327\003\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_288\020\330\003\022\037\n\032CURRENT_TER" +
      "RITORY_CODE_V_I\020\331\003\022\037\n\032CURRENT_TERRITORY_" +
      "CODE_V_N\020\332\003\022\036\n\031CURRENT_TERRITORY_CODE_64" +
      "\020\333\003\022\037\n\032CURRENT_TERRITORY_CODE_V_U\020\334\003\022\036\n\031" +
      "CURRENT_TERRITORY_CODE_68\020\335\003\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_170\020\336\003\022\037\n\032CURRENT_TERRITO" +
      "RY_CODE_174\020\337\003\022\037\n\032CURRENT_TERRITORY_CODE" +
      "_W_F\020\340\003\022\037\n\032CURRENT_TERRITORY_CODE_296\020\341\003" +
      "\022\037\n\032CURRENT_TERRITORY_CODE_178\020\342\003\022\036\n\031CUR" +
      "RENT_TERRITORY_CODE_70\020\343\003\022\036\n\031CURRENT_TER" +
      "RITORY_CODE_72\020\344\003\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_W_S\020\345\003\022\036\n\031CURRENT_TERRITORY_CODE_76\020" +
      "\346\003\022\037\n\032CURRENT_TERRITORY_CODE_180\020\347\003\022\037\n\032C" +
      "URRENT_TERRITORY_CODE_188\020\350\003\022\037\n\032CURRENT_" +
      "TERRITORY_CODE_X_K\020\351\003\022\036\n\031CURRENT_TERRITO" +
      "RY_CODE_84\020\352\003\022\037\n\032CURRENT_TERRITORY_CODE_" +
      "191\020\353\003\022\037\n\032CURRENT_TERRITORY_CODE_192\020\354\003\022" +
      "\037\n\032CURRENT_TERRITORY_CODE_Y_E\020\355\003\022\037\n\032CURR" +
      "ENT_TERRITORY_CODE_196\020\356\003\022\036\n\031CURRENT_TER" +
      "RITORY_CODE_90\020\357\003\022\037\n\032CURRENT_TERRITORY_C" +
      "ODE_Y_T\020\360\003\022\036\n\031CURRENT_TERRITORY_CODE_96\020" +
      "\361\003\022\037\n\032CURRENT_TERRITORY_CODE_Z_A\020\362\003\022%\n C" +
      "URRENT_TERRITORY_CODE_WORLDWIDE\020\363\003\022\037\n\032CU" +
      "RRENT_TERRITORY_CODE_Z_M\020\364\003\022\037\n\032CURRENT_T" +
      "ERRITORY_CODE_Z_W\020\365\003*\276\016\n\nDanceStyle\022\032\n\026D" +
      "ANCE_STYLE_CHARLESTON\020\000\022\025\n\021DANCE_STYLE_S" +
      "AMBA\020\001\022\026\n\022DANCE_STYLE_WATUSI\020\002\022\034\n\030DANCE_" +
      "STYLE_SQUARE_DANCE\020\003\022\026\n\022DANCE_STYLE_DOUG" +
      "IE\020\004\022\027\n\023DANCE_STYLE_TURFING\020\005\022\033\n\027DANCE_S" +
      "TYLE_CONTRADANCE\020\006\022\026\n\022DANCE_STYLE_BOLERO" +
      "\020\007\022\031\n\025DANCE_STYLE_POLONAISE\020\010\022\031\n\025DANCE_S",
      "TYLE_QUICKSTEP\020\t\022\030\n\024DANCE_STYLE_DANSBAND" +
      "\020\n\022\025\n\021DANCE_STYLE_RUMBA\020\013\022\031\n\025DANCE_STYLE" +
      "_LINDY_HOP\020\014\022\034\n\030DANCE_STYLE_LIQUID_DANCE" +
      "\020\r\022\025\n\021DANCE_STYLE_SWING\020\016\022\027\n\023DANCE_STYLE" +
      "_POPPING\020\017\022\035\n\031DANCE_STYLE_WESTERN_SWING\020" +
      "\020\022\034\n\030DANCE_STYLE_USER_DEFINED\020\021\022\032\n\026DANCE" +
      "_STYLE_LINE_DANCE\020\022\022\035\n\031DANCE_STYLE_CAROL" +
      "INA_SHAG\020\023\022\031\n\025DANCE_STYLE_PASODOBLE\020\024\022\032\n" +
      "\026DANCE_STYLE_ACRO_DANCE\020\025\022!\n\035DANCE_STYLE" +
      "_TRADITIONAL_DANCE\020\026\022\026\n\022DANCE_STYLE_BALL" +
      "ET\020\027\022\025\n\021DANCE_STYLE_FORRO\020\030\022\032\n\026DANCE_STY" +
      "LE_UP_ROCKING\020\031\022\030\n\024DANCE_STYLE_CAKEWALK\020" +
      "\032\022\"\n\036DANCE_STYLE_CONTEMPORARY_DANCE\020\033\022\025\n" +
      "\021DANCE_STYLE_MAMBO\020\034\022\025\n\021DANCE_STYLE_SALS" +
      "A\020\035\022\031\n\025DANCE_STYLE_HAND_JIVE\020\036\022\032\n\026DANCE_" +
      "STYLE_BARCAROLLE\020\037\022\027\n\023DANCE_STYLE_CHA_CH" +
      "A\020 \022 \n\034DANCE_STYLE_EAST_COAST_SWING\020!\022 \n" +
      "\034DANCE_STYLE_COUNTRY_TWO_STEP\020\"\022\027\n\023DANCE" +
      "_STYLE_FOXTROT\020#\022\025\n\021DANCE_STYLE_WALTZ\020$\022" +
      "\033\n\027DANCE_STYLE_TRIPLE_STEP\020%\022\026\n\022DANCE_ST" +
      "YLE_HUSTLE\020&\022\031\n\025DANCE_STYLE_JITTERBUG\020\'\022" +
      "\036\n\032DANCE_STYLE_VIENNESE_WALTZ\020(\022\030\n\024DANCE" +
      "_STYLE_BALLROOM\020)\022\024\n\020DANCE_STYLE_BUMP\020*\022" +
      "%\n!DANCE_STYLE_COUNTRY_WESTERN_DANCE\020+\022\034" +
      "\n\030DANCE_STYLE_INTERPRETIVE\020,\022\032\n\026DANCE_ST" +
      "YLE_SLOW_WALTZ\020-\022\027\n\023DANCE_STYLE_MAZURKA\020" +
      ".\022\031\n\025DANCE_STYLE_THE_TWIST\020/\022\030\n\024DANCE_ST" +
      "YLE_STEPPING\0200\022\031\n\025DANCE_STYLE_BREAKDOWN\020" +
      "1\022\033\n\027DANCE_STYLE_TAP_DANCING\0202\022\033\n\027DANCE_" +
      "STYLE_RODEO_SWING\0203\022\027\n\023DANCE_STYLE_CAN_C" +
      "AN\0204\022\027\n\023DANCE_STYLE_LOCKING\0205\022\033\n\027DANCE_S" +
      "TYLE_DISCO_DANCE\0206\022\025\n\021DANCE_STYLE_TANGO\020" +
      "7\022\032\n\026DANCE_STYLE_CONGA_LINE\0208\022\023\n\017DANCE_S" +
      "TYLE_JIG\0209\022 \n\034DANCE_STYLE_WEST_COAST_SWI" +
      "NG\020:\022\036\n\032DANCE_STYLE_COWBOY_CHA_CHA\020;\022\035\n\031" +
      "DANCE_STYLE_HIP_HOP_DANCE\020<\022\024\n\020DANCE_STY" +
      "LE_JIVE\020=\022\034\n\030DANCE_STYLE_MODERN_DANCE\020>\022" +
      "\032\n\026DANCE_STYLE_JAZZ_DANCE\020?\022%\n!DANCE_STY" +
      "LE_LYRICAL_HIP_HOP_DANCE\020@\022\032\n\026DANCE_STYL" +
      "E_BREAKDANCE\020A\022\025\n\021DANCE_STYLE_ROBOT\020B*\375\016" +
      "\n\021DataCarrierFormat\022&\n\"DATA_CARRIER_FORM" +
      "AT_B_FORMAT_VIDEO\020\000\022!\n\035DATA_CARRIER_FORM" +
      "AT_I_S_O9660\020\001\022%\n!DATA_CARRIER_FORMAT_R_" +
      "A_D_A_R_I_I\020\002\022-\n)DATA_CARRIER_FORMAT_DIR" +
      "ECT_STREAM_DIGITAL\020\003\022*\n&DATA_CARRIER_FOR" +
      "MAT_DIGITAL_AUDIO_TAPE\020\004\0221\n-DATA_CARRIER" +
      "_FORMAT_DIGITAL_DATA_STORAGE_TAPE\020\005\022/\n+D" +
      "ATA_CARRIER_FORMAT_LINEAR_TAPE_FILE_SYST" +
      "EM\020\006\022!\n\035DATA_CARRIER_FORMAT_R_A_D_A_R\020\007\022" +
      "&\n\"DATA_CARRIER_FORMAT_STREAMING_DATA\020\010\022" +
      "#\n\037DATA_CARRIER_FORMAT_PCM_DIGITAL\020\t\022(\n$" +
      "DATA_CARRIER_FORMAT_D1_DIGITAL_VIDEO\020\n\022\037" +
      "\n\033DATA_CARRIER_FORMAT_A_D_A_T\020\013\022$\n DATA_" +
      "CARRIER_FORMAT_ANALOG_AUDIO\020\014\022(\n$DATA_CA" +
      "RRIER_FORMAT_D2_DIGITAL_VIDEO\020\r\0225\n1DATA_" +
      "CARRIER_FORMAT_HIERARCHICAL_FILE_SYSTEM_" +
      "PLUS\020\016\022#\n\037DATA_CARRIER_FORMAT_PROPRIETAR" +
      "Y\020\017\022(\n$DATA_CARRIER_FORMAT_D4_DIGITAL_VI" +
      "DEO\020\020\0222\n.DATA_CARRIER_FORMAT_COMPACT_DIS" +
      "K_DIGITAL_AUDIO\020\021\022(\n$DATA_CARRIER_FORMAT" +
      "_D3_DIGITAL_VIDEO\020\022\022#\n\037DATA_CARRIER_FORM" +
      "AT_BETACAM_S_X\020\023\022\037\n\033DATA_CARRIER_FORMAT_" +
      "BETAMAX\020\024\022&\n\"DATA_CARRIER_FORMAT_C_FORMA" +
      "T_VIDEO\020\025\0227\n3DATA_CARRIER_FORMAT_DIGITAL" +
      "_COMPONENT_VIDEOCASSETTE\020\026\022#\n\037DATA_CARRI" +
      "ER_FORMAT_D_V_C_P_R_O\020\027\022\'\n#DATA_CARRIER_" +
      "FORMAT_JVC_PCM_DIGITAL\020\030\022%\n!DATA_CARRIER" +
      "_FORMAT_D_V_C_P_R_O50\020\031\0220\n,DATA_CARRIER_" +
      "FORMAT_HIERARCHICAL_FILE_SYSTEM\020\032\022 \n\034DAT" +
      "A_CARRIER_FORMAT_PRO_DIGI\020\033\022#\n\037DATA_CARR" +
      "IER_FORMAT_BETACAM_S_P\020\034\0224\n0DATA_CARRIER" +
      "_FORMAT_FILE_ALLOCATION_TABLE_32_BIT\020\035\022\"" +
      "\n\036DATA_CARRIER_FORMAT_MASTERLINK\020\036\022&\n\"DA" +
      "TA_CARRIER_FORMAT_NOT_APPLICABLE\020\037\0222\n.DA" +
      "TA_CARRIER_FORMAT_NEW_TECHNOLOGY_FILE_SY" +
      "STEM\020 \022(\n$DATA_CARRIER_FORMAT_D6_DIGITAL" +
      "_VIDEO\020!\0229\n5DATA_CARRIER_FORMAT_TRANSVER" +
      "SE_TRACK_QUADRAPLEX_VIDEO\020\"\022\037\n\033DATA_CARR" +
      "IER_FORMAT_D_T_R_S\020#\022&\n\"DATA_CARRIER_FOR" +
      "MAT_A_FORMAT_VIDEO\020$\022\'\n#DATA_CARRIER_FOR" +
      "MAT_D_V_C_P_R_O_H_D\020%\022(\n$DATA_CARRIER_FO" +
      "RMAT_D5_DIGITAL_VIDEO\020&\022*\n&DATA_CARRIER_" +
      "FORMAT_DVCPRO_PROGRESSIVE\020\'\022&\n\"DATA_CARR" +
      "IER_FORMAT_SONY_P_C_M1630\020(\022\037\n\033DATA_CARR" +
      "IER_FORMAT_BETACAM\020)\022!\n\035DATA_CARRIER_FOR" +
      "MAT_D_V_C_A_M\020*\022-\n)DATA_CARRIER_FORMAT_F" +
      "ILE_ALLOCATION_TABLE\020+\0225\n1DATA_CARRIER_F" +
      "ORMAT_DIGITAL_AUDIO_STATIONARY_HEAD\020,*\242w" +
      "\n\017DataCarrierType\0227\n3DATA_CARRIER_TYPE_E" +
      "XABYTE_MAMMOTH_DIGITAL_DATA_TAPE\020\000\022N\nJDA" +
      "TA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_DISK" +
      "_DRIVE__EXTERNAL68_PIN_INTERFACE\020\001\0228\n4DA" +
      "TA_CARRIER_TYPE_8MM_PICTURE_ANALOG_VIDEO" +
      "_FILM_REEL\020\002\0229\n5DATA_CARRIER_TYPE_16MM_P" +
      "ICTURE_ANALOG_VIDEO_FILM_REEL\020\003\022+\n\'DATA_" +
      "CARRIER_TYPE_BERNOULLI_DISK_20_M_B\020\004\022S\nO" +
      "DATA_CARRIER_TYPE_HD_DVD_RECORDABLE_OPTI" +
      "CAL_DISK_SINGLE_SIDED__SINGLE_LAYER_8CM\020" +
      "\005\022?\n;DATA_CARRIER_TYPE_U_MATIC_ANALOG_VI" +
      "DEO_TAPE__SMALL_CASSETTE\020\006\022S\nODATA_CARRI" +
      "ER_TYPE_DVD_R_RECORDABLE_OPTICAL_DISK_SI" +
      "NGLE_SIDED__DOUBLE_LAYER_12CM\020\007\022A\n=DATA_" +
      "CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_A" +
      "UDIO_DISK_7_INCH\020\010\022J\nFDATA_CARRIER_TYPE_" +
      "IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWI" +
      "RE_INTERFACE\020\t\022.\n*DATA_CARRIER_TYPE_CD_R" +
      "OM_DIGITAL_DATA_DISK\020\n\022B\n>DATA_CARRIER_T" +
      "YPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK" +
      "_14_INCH\020\013\022$\n DATA_CARRIER_TYPE_PRE_MAST" +
      "ER_C_D\020\014\022F\nBDATA_CARRIER_TYPE_1__FS__2_I" +
      "NCH_DIGITAL_VIDEO_TAPE__LARGE_CASSETTE\020\r" +
      "\0227\n3DATA_CARRIER_TYPE_V_X_A__MINUS__2_DI" +
      "GITAL_DATA_TAPE\020\016\022?\n;DATA_CARRIER_TYPE_B" +
      "ETACAM_ANALOG_VIDEO_TAPE__LARGE_CASSETTE" +
      "\020\017\022T\nPDATA_CARRIER_TYPE_S__MINUS___ATA_H" +
      "ARD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INT" +
      "ERFACE\020\020\022B\n>DATA_CARRIER_TYPE_U_MATIC_SP" +
      "_ANALOG_VIDEO_TAPE__SMALL_CASSETTE\020\021\022(\n$" +
      "DATA_CARRIER_TYPE_BINDER_2_INCH_RING\020\022\022:" +
      "\n6DATA_CARRIER_TYPE_2_INCH_ANALOG_VIDEO_" +
      "TAPE__SMALL_REEL\020\023\022F\nBDATA_CARRIER_TYPE_" +
      "1__FS__2_INCH_DIGITAL_VIDEO_TAPE__SMALL_" +
      "CASSETTE\020\024\022!\n\035DATA_CARRIER_TYPE_STORAGE_" +
      "BOX\020\025\022G\nCDATA_CARRIER_TYPE_1__FS__4_INCH" +
      "_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE\020\026\022\\" +
      "\nXDATA_CARRIER_TYPE_DVD__PLUS___RW_REWRI" +
      "TABLE_OPTICAL_DISK_SINGLE_SIDED__SINGLE_" +
      "LAYER_12CM\020\027\022:\n6DATA_CARRIER_TYPE_EXABYT" +
      "E8900_SERIES_DIGITAL_DATA_TAPE\020\030\022>\n:DATA" +
      "_CARRIER_TYPE_VHS_ANALOG_VIDEO_TAPE__STA" +
      "NDARD_CASSETTE\020\031\0227\n3DATA_CARRIER_TYPE_V_" +
      "X_A__MINUS__3_DIGITAL_DATA_TAPE\020\032\022?\n;DAT" +
      "A_CARRIER_TYPE_BETACAM_ANALOG_VIDEO_TAPE" +
      "__SMALL_CASSETTE\020\033\022;\n7DATA_CARRIER_TYPE_" +
      "2_INCH_ANALOG_AUDIO_TAPE_12_INCH_REEL\020\034\022" +
      "\036\n\032DATA_CARRIER_TYPE_ENVELOPE\020\035\0223\n/DATA_" +
      "CARRIER_TYPE_D_A_T320_DIGITAL_STORAGE_TA" +
      "PE\020\036\022:\n6DATA_CARRIER_TYPE_DV_DIGITAL_VID" +
      "EO_TAPE__MINI_CASSETTE\020\037\022N\nJDATA_CARRIER" +
      "_TYPE_IDE_ATA_HARD_DISK_DRIVE__INTERNAL_" +
      "RIBBON_CABLE_INTERFACE\020 \022N\nJDATA_CARRIER" +
      "_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_ANA" +
      "LOG_AUDIO_DISK_14_INCH\020!\022H\nDDATA_CARRIER" +
      "_TYPE_DVCPRO_HD_DIGITAL_VIDEO_TAPE__EXTR" +
      "A_LARGE_CASSETTE\020\"\022U\nQDATA_CARRIER_TYPE_" +
      "S__MINUS___ATA_HARD_DISK_DRIVE__INTERNAL" +
      "_RIBBON_CABLE_INTERFACE\020#\022X\nTDATA_CARRIE" +
      "R_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_AN" +
      "ALOG_AUDIO_DISK__UNSPECIFIED_SIZE\020$\022%\n!D" +
      "ATA_CARRIER_TYPE_MO_DISK_650_M_B\020%\022Z\nVDA" +
      "TA_CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENS" +
      "ITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT__25_" +
      "INCH\020&\022A\n=DATA_CARRIER_TYPE_1__FS__4_INC" +
      "H_ANALOG_AUDIO_TAPE_7_INCH_REEL\020\'\022E\nADAT" +
      "A_CARRIER_TYPE_DIGITAL_S_DIGITAL_VIDEO_T" +
      "APE__STANDARD_CASSETTE\020(\022B\n>DATA_CARRIER" +
      "_TYPE_SHELLAC_PHONOGRAPH_ANALOG_AUDIO_DI" +
      "SK_10_INCH\020)\022F\nBDATA_CARRIER_TYPE_3__FS_" +
      "_4_INCH_DIGITAL_VIDEO_TAPE__LARGE_CASSET" +
      "TE\020*\0227\n3DATA_CARRIER_TYPE_V_X_A__MINUS__" +
      "1_DIGITAL_DATA_TAPE\020+\022?\n;DATA_CARRIER_TY" +
      "PE_L_T_O__MINUS__6_ULTRIUM_DIGITAL_DATA_" +
      "TAPE\020,\022G\nCDATA_CARRIER_TYPE_1__FS__2_INC" +
      "H_DIGITAL_VIDEO_TAPE__MEDIUM_CASSETTE\020-\022" +
      "Z\nVDATA_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE" +
      "_DENSITY_FLOPPY_DIGITAL_DATA_DISK_5__DOT" +
      "__25_INCH\020.\0226\n2DATA_CARRIER_TYPE_SOLID_S" +
      "TATE_MEMORY_STORAGE_CARDS\020/\022A\n=DATA_CARR" +
      "IER_TYPE_HDCAM_SR_DIGITAL_VIDEO_TAPE__LA" +
      "RGE_CASSETTE\0200\022\037\n\033DATA_CARRIER_TYPE_MINI" +
      "_DISK\0201\0221\n-DATA_CARRIER_TYPE_HDV_HDTV_DI" +
      "GITAL_VIDEO_TAPE\0202\022;\n7DATA_CARRIER_TYPE_" +
      "1_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL\0203\022" +
      "N\nJDATA_CARRIER_TYPE_METAL_BASED_ACETATE" +
      "_PHONOGRAPH_ANALOG_AUDIO_DISK_16_INCH\0204\022" +
      "?\n;DATA_CARRIER_TYPE_L_T_O__MINUS__4_ULT" +
      "RIUM_DIGITAL_DATA_TAPE\0205\022:\n6DATA_CARRIER" +
      "_TYPE_EXABYTE8700_SERIES_DIGITAL_DATA_TA" +
      "PE\0206\022@\n<DATA_CARRIER_TYPE_VINYL_PHONOGRA" +
      "PH_ANALOG_AUDIO_DISK_12_INCH\0207\022S\nODATA_C" +
      "ARRIER_TYPE_HD_DVD_RECORDABLE_OPTICAL_DI" +
      "SK_DOUBLE_SIDED__SINGLE_LAYER_8CM\0208\022B\n>D" +
      "ATA_CARRIER_TYPE_BETACAM_SP_ANALOG_VIDEO" +
      "_TAPE__SMALL_CASSETTE\0209\022.\n*DATA_CARRIER_" +
      "TYPE_DIGITAL_COMPACT_CASSETTE\020:\022Y\nUDATA_" +
      "CARRIER_TYPE_SINGLE_SIDED_SINGLE_DENSITY" +
      "_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INCH" +
      "\020;\022+\n\'DATA_CARRIER_TYPE_MO_DISK_2__DOT__" +
      "6_G_B\020<\0223\n/DATA_CARRIER_TYPE_XDCAM_REWRI" +
      "TABLE_OPTICAL_DISK\020=\022!\n\035DATA_CARRIER_TYP" +
      "E_FILE_SYSTEM\020>\022T\nPDATA_CARRIER_TYPE_IDE" +
      "_ATA_HARD_DISK_DRIVE__EXTERNAL_FIREWIRE_" +
      "_FS___USB_INTERFACE\020?\022?\n;DATA_CARRIER_TY" +
      "PE_L_T_O__MINUS__2_ULTRIUM_DIGITAL_DATA_" +
      "TAPE\020@\022C\n?DATA_CARRIER_TYPE_CD_I_INTERAC" +
      "TIVE_MULTIMEDIA_DIGITAL_DATA_DISK\020A\022N\nJD" +
      "ATA_CARRIER_TYPE_GLASS_BASED_ACETATE_PHO" +
      "NOGRAPH_ANALOG_AUDIO_DISK_10_INCH\020B\022@\n<D" +
      "ATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALOG" +
      "_AUDIO_DISK_16_INCH\020C\022F\nBDATA_CARRIER_TY" +
      "PE_3__FS__4_INCH_DIGITAL_VIDEO_TAPE__SMA" +
      "LL_CASSETTE\020D\022H\nDDATA_CARRIER_TYPE_SCSI_" +
      "I_I_HARD_DISK_DRIVE__EXTERNAL68_PIN_INTE" +
      "RFACE\020E\022N\nJDATA_CARRIER_TYPE_METAL_BASED" +
      "_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK_12" +
      "_INCH\020F\0227\n3DATA_CARRIER_TYPE_D_D_S__MINU" +
      "S__4_DIGITAL_DATA_TAPE\020G\022B\n>DATA_CARRIER" +
      "_TYPE_DVD_RAM_RECORDABLE_OPTICAL_DISK_DO" +
      "UBLE_SIDED\020H\022?\n;DATA_CARRIER_TYPE_L_T_O_" +
      "_MINUS__1_ULTRIUM_DIGITAL_DATA_TAPE\020I\022C\n" +
      "?DATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_T" +
      "APE_10__DOT__5_INCH_REEL\020J\022F\nBDATA_CARRI" +
      "ER_TYPE_HARD_DISK_DRIVE__EXTERNAL_USB2__" +
      "DOT__0_INTERFACE\020K\022F\nBDATA_CARRIER_TYPE_" +
      "HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_I" +
      "NTERFACE\020L\022H\nDDATA_CARRIER_TYPE_S__MINUS" +
      "___VHS_ANALOG_VIDEO_TAPE__COMPACT_CASSET" +
      "TE\020M\022M\nIDATA_CARRIER_TYPE_1__FS__2_INCH_" +
      "DIGITAL_AUDIO_TAPE__UNSPECIFIED_REEL_SIZ" +
      "E\020N\022N\nJDATA_CARRIER_TYPE_IDE_ATA_HARD_DI" +
      "SK_DRIVE__EXTERNAL_USB2__DOT__0_INTERFAC" +
      "E\020O\022B\n>DATA_CARRIER_TYPE_SHELLAC_PHONOGR" +
      "APH_ANALOG_AUDIO_DISK_14_INCH\020P\0228\n4DATA_" +
      "CARRIER_TYPE_35MM_SEPMAG_ANALOG_AUDIO_FI" +
      "LM_REEL\020Q\022A\n=DATA_CARRIER_TYPE_HDCAM_SR_" +
      "DIGITAL_VIDEO_TAPE__SMALL_CASSETTE\020R\022=\n9" +
      "DATA_CARRIER_TYPE_HARD_DISK_DRIVE__EXTER" +
      "NAL_USB_INTERFACE\020S\022J\nFDATA_CARRIER_TYPE" +
      "_1__FS__2_INCH_ANALOG_AUDIO_TAPE_10__DOT" +
      "__5_INCH_REEL\020T\022:\n6DATA_CARRIER_TYPE_EXA" +
      "BYTE8500_SERIES_DIGITAL_DATA_TAPE\020U\0224\n0D" +
      "ATA_CARRIER_TYPE_HI__MINUS__8_ANALOG_VID" +
      "EO_TAPE\020V\022C\n?DATA_CARRIER_TYPE_BETACAM_S" +
      "X_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE\020W\022F" +
      "\nBDATA_CARRIER_TYPE_1_INCH_DIGITAL_AUDIO" +
      "_TAPE__UNSPECIFIED_REEL_SIZE\020X\022;\n7DATA_C" +
      "ARRIER_TYPE_2_INCH_ANALOG_AUDIO_TAPE_14_" +
      "INCH_REEL\020Y\022L\nHDATA_CARRIER_TYPE_SCSI_I_" +
      "I_HARD_DISK_DRIVE__EXTERNAL_CENTRONIX_IN" +
      "TERFACE\020Z\022O\nKDATA_CARRIER_TYPE_SCSI_I_I_" +
      "HARD_DISK_DRIVE__INTERNAL_RIBBON_CABLE_I" +
      "NTERFACE\020[\022N\nJDATA_CARRIER_TYPE_SCSI_I_I" +
      "_I_LVD_HARD_DISK_DRIVE__EXTERNAL50_PIN_I" +
      "NTERFACE\020\\\022F\nBDATA_CARRIER_TYPE_1__FS__4" +
      "_INCH_DIGITAL_VIDEO_TAPE__SMALL_CASSETTE" +
      "\020]\022>\n:DATA_CARRIER_TYPE_WAX_CYLINDER_PHO" +
      "NOGRAM_ANALOG_AUDIO_DISK\020^\022L\nHDATA_CARRI" +
      "ER_TYPE_HARD_DISK_DRIVE__EXTERNAL_FIREWI" +
      "RE__FS___USB_INTERFACE\020_\022F\nBDATA_CARRIER" +
      "_TYPE_1__FS__4_INCH_DIGITAL_VIDEO_TAPE__" +
      "LARGE_CASSETTE\020`\0227\n3DATA_CARRIER_TYPE_A_" +
      "I_T__MINUS__3_DIGITAL_DATA_TAPE\020a\022C\n?DAT" +
      "A_CARRIER_TYPE_BETACAM_SX_DIGITAL_VIDEO_" +
      "TAPE__LARGE_CASSETTE\020b\022S\nODATA_CARRIER_T" +
      "YPE_DVD_R_RECORDABLE_OPTICAL_DISK_SINGLE" +
      "_SIDED__SINGLE_LAYER_12CM\020c\022?\n;DATA_CARR" +
      "IER_TYPE_L_T_O__MINUS__5_ULTRIUM_DIGITAL" +
      "_DATA_TAPE\020d\022;\n7DATA_CARRIER_TYPE_1_INCH" +
      "_ANALOG_VIDEO_TAPE__MEDIUM_REEL\020e\0228\n4DAT" +
      "A_CARRIER_TYPE_COMPACT_CASSETTE_ANALOG_A" +
      "UDIO_TAPE\020f\022=\n9DATA_CARRIER_TYPE_VHS_ANA" +
      "LOG_VIDEO_TAPE__COMPACT_CASSETTE\020g\022B\n>DA" +
      "TA_CARRIER_TYPE_LACQUER_PHONOGRAPH_ANALO" +
      "G_AUDIO_DISK_12_INCH\020h\022J\nFDATA_CARRIER_T" +
      "YPE_1__FS__4_INCH_ANALOG_AUDIO_TAPE_10__" +
      "DOT__5_INCH_REEL\020i\022&\n\"DATA_CARRIER_TYPE_" +
      "MO_DISK_1200_M_B\020j\022S\nODATA_CARRIER_TYPE_" +
      "HD_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SI" +
      "DED__DOUBLE_LAYER_8CM\020k\022K\nGDATA_CARRIER_" +
      "TYPE_1__FS__2_INCH_DIGITAL_AUDIO_TAPE_10" +
      "__DOT__5_INCH_REEL\020l\022K\nGDATA_CARRIER_TYP" +
      "E_1__FS__4_INCH_DIGITAL_AUDIO_TAPE_10__D" +
      "OT__5_INCH_REEL\020m\022B\n>DATA_CARRIER_TYPE_L" +
      "ACQUER_PHONOGRAPH_ANALOG_AUDIO_DISK_16_I" +
      "NCH\020n\022A\n=DATA_CARRIER_TYPE_DVCPRO50_DIGI" +
      "TAL_VIDEO_TAPE__LARGE_CASSETTE\020o\022Y\nUDATA" +
      "_CARRIER_TYPE_SINGLE_SIDED_DOUBLE_DENSIT" +
      "Y_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_INC" +
      "H\020p\022L\nHDATA_CARRIER_TYPE_1__FS__4_INCH_A" +
      "NALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SIZE\020" +
      "q\022I\nEDATA_CARRIER_TYPE_S__MINUS___VHS_AN" +
      "ALOG_VIDEO_TAPE__STANDARD_CASSETTE\020r\022@\n<" +
      "DATA_CARRIER_TYPE_VINYL_PHONOGRAPH_ANALO" +
      "G_AUDIO_DISK_10_INCH\020s\022;\n7DATA_CARRIER_T" +
      "YPE_A_I_T__MINUS__3_E_X_DIGITAL_DATA_TAP" +
      "E\020t\022\'\n#DATA_CARRIER_TYPE_STORAGE_CONTAIN" +
      "ER\020u\0220\n,DATA_CARRIER_TYPE_BINDER_0__DOT_" +
      "_5_INCH_RING\020v\022<\n8DATA_CARRIER_TYPE_D_L_" +
      "T__MINUS___I_I_I_DIGITAL_DATA_TAPE\020w\022.\n*" +
      "DATA_CARRIER_TYPE_HDCAM_DIGITAL_VIDEO_TA" +
      "PE\020x\022B\n>DATA_CARRIER_TYPE_DVCPRO50_DIGIT" +
      "AL_VIDEO_TAPE__MEDIUM_CASSETTE\020y\022+\n\'DATA" +
      "_CARRIER_TYPE_MO_DISK_1__DOT__3_G_B\020z\022E\n" +
      "ADATA_CARRIER_TYPE_2_INCH_ANALOG_AUDIO_T" +
      "APE__UNSPECIFIED_REEL_SIZE\020{\022X\nTDATA_CAR" +
      "RIER_TYPE_METAL_BASED_ACETATE_PHONOGRAPH" +
      "_ANALOG_AUDIO_DISK__UNSPECIFIED_SIZE\020|\0227" +
      "\n3DATA_CARRIER_TYPE_D_D_S__MINUS__3_DIGI" +
      "TAL_DATA_TAPE\020}\022[\nWDATA_CARRIER_TYPE_DVD" +
      "__PLUS___R_RECORDABLE_OPTICAL_DISK_SINGL" +
      "E_SIDED__SINGLE_LAYER_12CM\020~\022H\nDDATA_CAR" +
      "RIER_TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_" +
      "TAPE__LARGE_CASSETTE\020\177\022=\n8DATA_CARRIER_T" +
      "YPE_DV_DIGITAL_VIDEO_TAPE__NORMAL_CASSET" +
      "TE\020\200\001\022B\n=DATA_CARRIER_TYPE_LACQUER_PHONO" +
      "GRAPH_ANALOG_AUDIO_DISK_7_INCH\020\201\001\022Z\nUDAT" +
      "A_CARRIER_TYPE_DOUBLE_SIDED_DOUBLE_DENSI" +
      "TY_FLOPPY_DIGITAL_DATA_DISK_3__DOT__5_IN" +
      "CH\020\202\001\022;\n6DATA_CARRIER_TYPE_D_L_T__MINUS_" +
      "__I_V_DIGITAL_DATA_TAPE\020\203\001\022,\n\'DATA_CARRI" +
      "ER_TYPE_ZIP_DIGITAL_DATA_DISK\020\204\001\022`\n[DATA" +
      "_CARRIER_TYPE_IDE_ATA_HARD_DISK_DRIVE__E" +
      "XTERNAL_FIREWIRE__FS___USB__FS___SATA_IN" +
      "TERFACE\020\205\001\022C\n>DATA_CARRIER_TYPE_1__FS__4" +
      "_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL\020\206\001\022" +
      "E\n@DATA_CARRIER_TYPE_DIGITAL_S_DIGITAL_V" +
      "IDEO_TAPE__COMPACT_CASSETTE\020\207\001\022H\nCDATA_C" +
      "ARRIER_TYPE_3__FS__4_INCH_DIGITAL_VIDEO_" +
      "TAPE__MEDIUM_CASSETTE\020\210\001\022\\\nWDATA_CARRIER" +
      "_TYPE_DVD__PLUS___R_RECORDABLE_OPTICAL_D" +
      "ISK_SINGLE_SIDED__DOUBLE_LAYER_12CM\020\211\001\022O" +
      "\nJDATA_CARRIER_TYPE_METAL_BASED_ACETATE_" +
      "PHONOGRAPH_ANALOG_AUDIO_DISK_14_INCH\020\212\001\022" +
      "B\n=DATA_CARRIER_TYPE_DVCPRO50_DIGITAL_VI" +
      "DEO_TAPE__SMALL_CASSETTE\020\213\001\022O\nJDATA_CARR" +
      "IER_TYPE_GLASS_BASED_ACETATE_PHONOGRAPH_" +
      "ANALOG_AUDIO_DISK_12_INCH\020\214\001\022D\n?DATA_CAR" +
      "RIER_TYPE_1_INCH_ANALOG_AUDIO_TAPE_10__D" +
      "OT__5_INCH_REEL\020\215\001\022U\nPDATA_CARRIER_TYPE_" +
      "HD_DVD_RECORDABLE_OPTICAL_DISK_DOUBLE_SI" +
      "DED__DOUBLE_LAYER_12CM\020\216\001\022E\n@DATA_CARRIE" +
      "R_TYPE_1_INCH_DIGITAL_AUDIO_TAPE_10__DOT" +
      "__5_INCH_REEL\020\217\001\022C\n>DATA_CARRIER_TYPE_BE" +
      "TACAM_SP_ANALOG_VIDEO_TAPE__LARGE_CASSET" +
      "TE\020\220\001\022I\nDDATA_CARRIER_TYPE_SCSI_I_I_HARD" +
      "_DISK_DRIVE__EXTERNAL_D_SUB_INTERFACE\020\221\001" +
      "\022F\nADATA_CARRIER_TYPE_IDE_ATA_HARD_DISK_" +
      "DRIVE__EXTERNAL_USB_INTERFACE\020\222\001\022:\n5DATA" +
      "_CARRIER_TYPE_35MM_PICTURE_ANALOG_VIDEO_" +
      "FILM_REEL\020\223\001\022;\n6DATA_CARRIER_TYPE_1_INCH" +
      "_ANALOG_VIDEO_TAPE__LARGE_REEL\020\224\001\022C\n>DAT" +
      "A_CARRIER_TYPE_HARD_DISK_DRIVE__EXTERNAL" +
      "_FIREWIRE_INTERFACE\020\225\001\022I\nDDATA_CARRIER_T" +
      "YPE_SCSI_I_I_HARD_DISK_DRIVE__EXTERNAL50" +
      "_PIN_INTERFACE\020\226\001\022:\n5DATA_CARRIER_TYPE_L" +
      "ASERDISC_OPTICAL_DISK_SINGLE_SIDED\020\227\001\022V\n" +
      "QDATA_CARRIER_TYPE_SCSI_I_I_I_LVD_HARD_D" +
      "ISK_DRIVE__INTERNAL_RIBBON_CABLE_INTERFA" +
      "CE\020\230\001\022M\nHDATA_CARRIER_TYPE_1__FS__4_INCH" +
      "_DIGITAL_VIDEO_TAPE__EXTRA_LARGE_CASSETT" +
      "E\020\231\001\022A\n<DATA_CARRIER_TYPE_VINYL_PHONOGRA" +
      "PH_ANALOG_AUDIO_DISK_14_INCH\020\232\001\022?\n:DATA_" +
      "CARRIER_TYPE_SUPER16MM_PICTURE_ANALOG_VI" +
      "DEO_FILM_REEL\020\233\001\022N\nIDATA_CARRIER_TYPE_SC" +
      "SI_I_HARD_DISK_DRIVE__INTERNAL_RIBBON_CA" +
      "BLE_INTERFACE\020\234\001\022U\nPDATA_CARRIER_TYPE_HD" +
      "_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDE" +
      "D__SINGLE_LAYER_12CM\020\235\001\022I\nDDATA_CARRIER_" +
      "TYPE_DIGITAL_BETACAM_DIGITAL_VIDEO_TAPE_" +
      "_SMALL_CASSETTE\020\236\001\022O\nJDATA_CARRIER_TYPE_" +
      "GLASS_BASED_ACETATE_PHONOGRAPH_ANALOG_AU" +
      "DIO_DISK_16_INCH\020\237\001\022V\nQDATA_CARRIER_TYPE" +
      "_S__MINUS___ATA_HARD_DISK_DRIVE__EXTERNA" +
      "L_USB2__DOT__0_INTERFACE\020\240\001\022/\n*DATA_CARR" +
      "IER_TYPE_DVCAM_DIGITAL_VIDEO_TAPE\020\241\001\022N\nI" +
      "DATA_CARRIER_TYPE_1__FS__4_INCH_DIGITAL_" +
      "AUDIO_TAPE__UNSPECIFIED_REEL_SIZE\020\242\001\0228\n3" +
      "DATA_CARRIER_TYPE_A_I_T__MINUS__4_DIGITA" +
      "L_DATA_TAPE\020\243\001\022;\n6DATA_CARRIER_TYPE_1_IN" +
      "CH_ANALOG_VIDEO_TAPE__SMALL_REEL\020\244\001\0224\n/D" +
      "ATA_CARRIER_TYPE_D_A_T160_DIGITAL_STORAG" +
      "E_TAPE\020\245\001\022M\nHDATA_CARRIER_TYPE_SCSI_I_HA" +
      "RD_DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTE" +
      "RFACE\020\246\001\0227\n2DATA_CARRIER_TYPE_STORAGE_BO" +
      "X_1__DOT__2_CUBIC_FEET\020\247\001\0227\n2DATA_CARRIE" +
      "R_TYPE_STORAGE_BOX_2__DOT__0_CUBIC_FEET\020" +
      "\250\001\022@\n;DATA_CARRIER_TYPE_VINYL_PHONOGRAPH" +
      "_ANALOG_AUDIO_DISK_7_INCH\020\251\001\022<\n7DATA_CAR" +
      "RIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__MEDI" +
      "UM_REEL\020\252\001\022)\n$DATA_CARRIER_TYPE_DIGITAL_" +
      "AUDIO_TAPE\020\253\001\0229\n4DATA_CARRIER_TYPE_16MM_" +
      "SEPMAG_ANALOG_AUDIO_FILM_REEL\020\254\001\022M\nHDATA" +
      "_CARRIER_TYPE_1__FS__2_INCH_ANALOG_AUDIO" +
      "_TAPE__UNSPECIFIED_REEL_SIZE\020\255\001\022C\n>DATA_" +
      "CARRIER_TYPE_SHELLAC_PHONOGRAPH_ANALOG_A" +
      "UDIO_DISK_12_INCH\020\256\001\022O\nJDATA_CARRIER_TYP" +
      "E_METAL_BASED_ACETATE_PHONOGRAPH_ANALOG_" +
      "AUDIO_DISK_10_INCH\020\257\001\022G\nBDATA_CARRIER_TY" +
      "PE_SCSI_I_HARD_DISK_DRIVE__EXTERNAL_D_SU" +
      "B_INTERFACE\020\260\001\022F\nADATA_CARRIER_TYPE_2_IN" +
      "CH_ANALOG_VIDEO_TAPE__UNSPECIFIED_REEL_S" +
      "IZE\020\261\001\022=\n8DATA_CARRIER_TYPE_HARD_DISK_DR" +
      "IVE__UNSPECIFIED_INTERFACE\020\262\001\022@\n;DATA_CA" +
      "RRIER_TYPE_L_T_O__MINUS__3_ULTRIUM_DIGIT" +
      "AL_DATA_TAPE\020\263\001\0228\n3DATA_CARRIER_TYPE_A_I" +
      "_T__MINUS__5_DIGITAL_DATA_TAPE\020\264\001\0223\n.DAT" +
      "A_CARRIER_TYPE_D_A_T72_DIGITAL_STORAGE_T" +
      "APE\020\265\001\022U\nPDATA_CARRIER_TYPE_HD_DVD_RECOR" +
      "DABLE_OPTICAL_DISK_DOUBLE_SIDED__SINGLE_" +
      "LAYER_12CM\020\266\001\022F\nADATA_CARRIER_TYPE_1_INC",
      "H_ANALOG_AUDIO_TAPE__UNSPECIFIED_REEL_SI" +
      "ZE\020\267\001\022N\nIDATA_CARRIER_TYPE_IDE_ATA_HARD_" +
      "DISK_DRIVE__UNSPECIFIED_EXTERNAL_INTERFA" +
      "CE\020\270\001\0228\n3DATA_CARRIER_TYPE_A_I_T__MINUS_" +
      "_2_DIGITAL_DATA_TAPE\020\271\001\0228\n3DATA_CARRIER_" +
      "TYPE_D_D_S__MINUS__1_DIGITAL_DATA_TAPE\020\272" +
      "\001\022V\nQDATA_CARRIER_TYPE_S__MINUS___ATA_HA" +
      "RD_DISK_DRIVE__EXTERNAL_USB3__DOT__0_INT" +
      "ERFACE\020\273\001\022O\nJDATA_CARRIER_TYPE_SCSI_I_I_" +
      "I_LVD_HARD_DISK_DRIVE__EXTERNAL80_PIN_IN" +
      "TERFACE\020\274\001\022T\nODATA_CARRIER_TYPE_HD_DVD_R" +
      "ECORDABLE_OPTICAL_DISK_DOUBLE_SIDED__DOU" +
      "BLE_LAYER_8CM\020\275\001\022U\nPDATA_CARRIER_TYPE_HD" +
      "_DVD_RECORDABLE_OPTICAL_DISK_SINGLE_SIDE" +
      "D__DOUBLE_LAYER_12CM\020\276\001\022O\nJDATA_CARRIER_" +
      "TYPE_IDE_ATA_HARD_DISK_DRIVE__EXTERNAL_U" +
      "SB3__DOT__0_INTERFACE\020\277\001\022M\nHDATA_CARRIER" +
      "_TYPE_LACQUER_PHONOGRAPH_ANALOG_AUDIO_DI" +
      "SK__UNSPECIFIED_SIZE\020\300\001\022&\n!DATA_CARRIER_" +
      "TYPE_MO_DISK_540_M_B\020\301\001\022K\nFDATA_CARRIER_" +
      "TYPE_VINYL_PHONOGRAPH_ANALOG_AUDIO_DISK_" +
      "_UNSPECIFIED_SIZE\020\302\001\022V\nQDATA_CARRIER_TYP" +
      "E_BLU_RAY_RECORDABLE_OPTICAL_DISK_SINGLE" +
      "_SIDED__DOUBLE_LAYER_12CM\020\303\001\022,\n\'DATA_CAR" +
      "RIER_TYPE_JAZ_DIGITAL_DATA_DISK\020\304\001\022@\n;DA" +
      "TA_CARRIER_TYPE_U_MATIC_ANALOG_VIDEO_TAP" +
      "E__LARGE_CASSETTE\020\305\001\022G\nBDATA_CARRIER_TYP" +
      "E_HARD_DISK_DRIVE__EXTERNAL_USB3__DOT__0" +
      "_INTERFACE\020\306\001\0228\n3DATA_CARRIER_TYPE_D_D_S" +
      "__MINUS__2_DIGITAL_DATA_TAPE\020\307\001\022=\n8DATA_" +
      "CARRIER_TYPE_STORAGE_CONTAINER_2__DOT__0" +
      "_CUBIC_FEET\020\310\001\022C\n>DATA_CARRIER_TYPE_1__F" +
      "S__2_INCH_DIGITAL_AUDIO_TAPE_7_INCH_REEL" +
      "\020\311\001\022C\n>DATA_CARRIER_TYPE_LACQUER_PHONOGR" +
      "APH_ANALOG_AUDIO_DISK_10_INCH\020\312\001\022=\n8DATA" +
      "_CARRIER_TYPE_STORAGE_CONTAINER_1__DOT__" +
      "2_CUBIC_FEET\020\313\001\0228\n3DATA_CARRIER_TYPE_A_I" +
      "_T__MINUS__1_DIGITAL_DATA_TAPE\020\314\001\022>\n9DAT" +
      "A_CARRIER_TYPE_SUPER8MM_PICTURE_ANALOG_V" +
      "IDEO_FILM_REEL\020\315\001\022B\n=DATA_CARRIER_TYPE_1" +
      "__FS__2_INCH_ANALOG_AUDIO_TAPE_7_INCH_RE" +
      "EL\020\316\001\022C\n>DATA_CARRIER_TYPE_SHELLAC_PHONO" +
      "GRAPH_ANALOG_AUDIO_DISK_16_INCH\020\317\001\022F\nADA" +
      "TA_CARRIER_TYPE_1_INCH_ANALOG_VIDEO_TAPE" +
      "__UNSPECIFIED_REEL_SIZE\020\320\001\022@\n;DATA_CARRI" +
      "ER_TYPE_L_T_O__MINUS__7_ULTRIUM_DIGITAL_" +
      "DATA_TAPE\020\321\001\022M\nHDATA_CARRIER_TYPE_SHELLA" +
      "C_PHONOGRAPH_ANALOG_AUDIO_DISK__UNSPECIF" +
      "IED_SIZE\020\322\001\022)\n$DATA_CARRIER_TYPE_BINDER_" +
      "1_INCH_RING\020\323\001\022V\nQDATA_CARRIER_TYPE_BLU_" +
      "RAY_RECORDABLE_OPTICAL_DISK_SINGLE_SIDED" +
      "__SINGLE_LAYER_12CM\020\324\001\022R\nMDATA_CARRIER_T" +
      "YPE_S__MINUS___ATA_HARD_DISK_DRIVE__EXTE" +
      "RNAL_FIREWIRE_INTERFACE\020\325\001\022R\nMDATA_CARRI" +
      "ER_TYPE_SINGLE_SIDED_SINGLE_DENSITY_FLOP" +
      "PY_DIGITAL_DATA_DISK_8_INCH\020\326\001\022C\n>DATA_C" +
      "ARRIER_TYPE_DVD_RAM_RECORDABLE_OPTICAL_D" +
      "ISK_SINGLE_SIDED\020\327\001\022C\n>DATA_CARRIER_TYPE" +
      "_DVCPRO_HD_DIGITAL_VIDEO_TAPE__LARGE_CAS" +
      "SETTE\020\330\001\022;\n6DATA_CARRIER_TYPE_1_INCH_ANA" +
      "LOG_AUDIO_TAPE_7_INCH_REEL\020\331\001\022;\n6DATA_CA" +
      "RRIER_TYPE_2_INCH_ANALOG_VIDEO_TAPE__LAR" +
      "GE_REEL\020\332\001\022N\nIDATA_CARRIER_TYPE_METAL_BA" +
      "SED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK" +
      "_7_INCH\020\333\001\022N\nIDATA_CARRIER_TYPE_GLASS_BA" +
      "SED_ACETATE_PHONOGRAPH_ANALOG_AUDIO_DISK" +
      "_7_INCH\020\334\001\0221\n,DATA_CARRIER_TYPE_BINDER_1" +
      "__DOT__5_INCH_RING\020\335\001\022S\nNDATA_CARRIER_TY" +
      "PE_CD_R_RECORDABLE_OPTICAL_DISK_SINGLE_S" +
      "IDED__SINGLE_LAYER_12CM\020\336\001*S\n\021DdexTerrit" +
      "oryCode\022\033\n\027DDEX_TERRITORY_CODE_X_K\020\000\022!\n\035" +
      "DDEX_TERRITORY_CODE_WORLDWIDE\020\001*\244\003\n\026Depr" +
      "ecatedCurrencyCode\022\"\n\036DEPRECATED_CURRENC" +
      "Y_CODE_S_K_K\020\000\022\"\n\036DEPRECATED_CURRENCY_CO" +
      "DE_S_T_D\020\001\022\"\n\036DEPRECATED_CURRENCY_CODE_L" +
      "_V_L\020\002\022\"\n\036DEPRECATED_CURRENCY_CODE_M_T_L" +
      "\020\003\022\"\n\036DEPRECATED_CURRENCY_CODE_L_T_L\020\004\022\"" +
      "\n\036DEPRECATED_CURRENCY_CODE_V_E_F\020\005\022\"\n\036DE" +
      "PRECATED_CURRENCY_CODE_E_E_K\020\006\022\"\n\036DEPREC" +
      "ATED_CURRENCY_CODE_C_Y_P\020\007\022\"\n\036DEPRECATED" +
      "_CURRENCY_CODE_M_R_O\020\010\022\"\n\036DEPRECATED_CUR" +
      "RENCY_CODE_R_O_L\020\t\022\"\n\036DEPRECATED_CURRENC" +
      "Y_CODE_S_I_T\020\n*\321\n\n\032DeprecatedIsoTerritor" +
      "yCode\022)\n%DEPRECATED_ISO_TERRITORY_CODE_J" +
      "_T_U_M\020\000\022)\n%DEPRECATED_ISO_TERRITORY_COD" +
      "E_W_K_U_M\020\001\022)\n%DEPRECATED_ISO_TERRITORY_" +
      "CODE_S_U_H_H\020\002\022)\n%DEPRECATED_ISO_TERRITO" +
      "RY_CODE_V_D_V_N\020\003\022)\n%DEPRECATED_ISO_TERR" +
      "ITORY_CODE_C_T_K_I\020\004\022)\n%DEPRECATED_ISO_T" +
      "ERRITORY_CODE_M_I_U_M\020\005\022)\n%DEPRECATED_IS" +
      "O_TERRITORY_CODE_T_P_T_L\020\006\022)\n%DEPRECATED" +
      "_ISO_TERRITORY_CODE_R_H_Z_W\020\007\022)\n%DEPRECA" +
      "TED_ISO_TERRITORY_CODE_P_C_H_H\020\010\022)\n%DEPR" +
      "ECATED_ISO_TERRITORY_CODE_N_Q_A_Q\020\t\022)\n%D" +
      "EPRECATED_ISO_TERRITORY_CODE_S_K_I_N\020\n\022)" +
      "\n%DEPRECATED_ISO_TERRITORY_CODE_N_H_V_U\020" +
      "\013\022)\n%DEPRECATED_ISO_TERRITORY_CODE_D_D_D" +
      "_E\020\014\022)\n%DEPRECATED_ISO_TERRITORY_CODE_P_" +
      "Z_P_A\020\r\022)\n%DEPRECATED_ISO_TERRITORY_CODE" +
      "_B_Q_A_Q\020\016\022)\n%DEPRECATED_ISO_TERRITORY_C" +
      "ODE_N_T_H_H\020\017\022)\n%DEPRECATED_ISO_TERRITOR" +
      "Y_CODE_Y_U_C_S\020\020\022)\n%DEPRECATED_ISO_TERRI" +
      "TORY_CODE_B_Y_A_A\020\021\022)\n%DEPRECATED_ISO_TE" +
      "RRITORY_CODE_F_Q_H_H\020\022\022)\n%DEPRECATED_ISO" +
      "_TERRITORY_CODE_B_U_M_M\020\023\022)\n%DEPRECATED_" +
      "ISO_TERRITORY_CODE_C_S_H_H\020\024\022)\n%DEPRECAT" +
      "ED_ISO_TERRITORY_CODE_C_S_X_X\020\025\022)\n%DEPRE" +
      "CATED_ISO_TERRITORY_CODE_A_I_D_J\020\026\022)\n%DE" +
      "PRECATED_ISO_TERRITORY_CODE_H_V_B_F\020\027\022)\n" +
      "%DEPRECATED_ISO_TERRITORY_CODE_A_N_H_H\020\030" +
      "\022)\n%DEPRECATED_ISO_TERRITORY_CODE_Z_R_C_" +
      "D\020\031\022)\n%DEPRECATED_ISO_TERRITORY_CODE_P_U" +
      "_U_M\020\032\022)\n%DEPRECATED_ISO_TERRITORY_CODE_" +
      "D_Y_B_J\020\033\022)\n%DEPRECATED_ISO_TERRITORY_CO" +
      "DE_Y_D_Y_E\020\034\022)\n%DEPRECATED_ISO_TERRITORY" +
      "_CODE_F_X_F_R\020\035\022)\n%DEPRECATED_ISO_TERRIT" +
      "ORY_CODE_G_E_H_H\020\036*B\n\025DeprecatedReleaseT" +
      "ype\022)\n%DEPRECATED_RELEASE_TYPE_TRACK_REL" +
      "EASE\020\000*\210\001\n\020DigitizationMode\022\033\n\027DIGITIZAT" +
      "ION_MODE_A_D_D\020\000\022\033\n\027DIGITIZATION_MODE_A_" +
      "A_D\020\001\022\035\n\031DIGITIZATION_MODE_UNKNOWN\020\002\022\033\n\027" +
      "DIGITIZATION_MODE_D_D_D\020\003*\201\001\n\021DisplayArt" +
      "istRole\022\036\n\032DISPLAY_ARTIST_ROLE_ARTIST\020\000\022" +
      "#\n\037DISPLAY_ARTIST_ROLE_MAIN_ARTIST\020\001\022\'\n#" +
      "DISPLAY_ARTIST_ROLE_FEATURED_ARTIST\020\002*\302\005" +
      "\n\027DistributionChannelType\022#\n\037DISTRIBUTIO" +
      "N_CHANNEL_TYPE_CABLE\020\000\0221\n-DISTRIBUTION_C" +
      "HANNEL_TYPE_INTERNET_AND_MOBILE\020\001\022.\n*DIS" +
      "TRIBUTION_CHANNEL_TYPE_MOBILE_TELEPHONE\020" +
      "\002\022\'\n#DISTRIBUTION_CHANNEL_TYPE_SATELLITE" +
      "\020\003\022%\n!DISTRIBUTION_CHANNEL_TYPE_I_P_T_V\020" +
      "\004\022.\n*DISTRIBUTION_CHANNEL_TYPE_ON_DEMAND" +
      "_STREAM\020\005\022-\n)DISTRIBUTION_CHANNEL_TYPE_A" +
      "S_PER_CONTRACT\020\006\022&\n\"DISTRIBUTION_CHANNEL" +
      "_TYPE_PHYSICAL\020\007\022%\n!DISTRIBUTION_CHANNEL" +
      "_TYPE_UNKNOWN\020\010\022\'\n#DISTRIBUTION_CHANNEL_" +
      "TYPE_BROADCAST\020\t\022*\n&DISTRIBUTION_CHANNEL" +
      "_TYPE_PEER_TO_PEER\020\n\022\'\n#DISTRIBUTION_CHA" +
      "NNEL_TYPE_SIMULCAST\020\013\022%\n!DISTRIBUTION_CH" +
      "ANNEL_TYPE_WEBCAST\020\014\022(\n$DISTRIBUTION_CHA" +
      "NNEL_TYPE_NARROWCAST\020\r\022&\n\"DISTRIBUTION_C" +
      "HANNEL_TYPE_INTERNET\020\016\022*\n&DISTRIBUTION_C" +
      "HANNEL_TYPE_USER_DEFINED\020\017*e\n\020DocumentTy" +
      "pe_LoD\022+\n\'DOCUMENT_TYPE__LO_D_LETTER_OF_" +
      "DIRECTION\020\000\022$\n DOCUMENT_TYPE__LO_D_USER_" +
      "DEFINED\020\001*\207\001\n\020DocumentType_MWL\022)\n%DOCUME" +
      "NT_TYPE__M_W_L_RATE_CALCULATION\020\000\022%\n!DOC" +
      "UMENT_TYPE__M_W_L_USER_DEFINED\020\001\022!\n\035DOCU" +
      "MENT_TYPE__M_W_L_CONTRACT\020\002*W\n\nDpidStatu" +
      "s\022\026\n\022DPID_STATUS_ACTIVE\020\000\022\030\n\024DPID_STATUS" +
      "_REPLACED\020\001\022\027\n\023DPID_STATUS_DELETED\020\002*f\n\022" +
      "DrmEnforcementType\022%\n!DRM_ENFORCEMENT_TY" +
      "PE_DRM_ENFORCED\020\000\022)\n%DRM_ENFORCEMENT_TYP" +
      "E_NOT_DRM_ENFORCED\020\001*\206\020\n\024ElementConfigur" +
      "ation\022$\n ELEMENT_CONFIGURATION_STUDIO_ON" +
      "E\020\000\022%\n!ELEMENT_CONFIGURATION_ORANGE_BOOK" +
      "\020\001\022!\n\035ELEMENT_CONFIGURATION_3_TRACK\020\002\022,\n" +
      "(ELEMENT_CONFIGURATION_QUARTER_TRACK_MON" +
      "O\020\003\022,\n(ELEMENT_CONFIGURATION_RETROSPECT_" +
      "ARCHIVE\020\004\022+\n\'ELEMENT_CONFIGURATION_FINAL" +
      "_CUT_EXPRESS\020\005\022%\n!ELEMENT_CONFIGURATION_" +
      "BRU_ARCHIVE\020\006\022%\n!ELEMENT_CONFIGURATION_L" +
      "TFS_BACKUP\020\007\022\"\n\036ELEMENT_CONFIGURATION_48" +
      "_TRACK\020\010\022 \n\034ELEMENT_CONFIGURATION_CUBASE" +
      "\020\t\022\"\n\036ELEMENT_CONFIGURATION_12_TRACK\020\n\022%" +
      "\n!ELEMENT_CONFIGURATION_TAR_ARCHIVE\020\013\022\'\n" +
      "#ELEMENT_CONFIGURATION_TOAST_ARCHIVE\020\014\022!" +
      "\n\035ELEMENT_CONFIGURATION_8_TRACK\020\r\022#\n\037ELE" +
      "MENT_CONFIGURATION_HARD_COPY\020\016\022&\n\"ELEMEN" +
      "T_CONFIGURATION_SPLIT_STEREO\020\017\022!\n\035ELEMEN" +
      "T_CONFIGURATION_REDBOOK\020\020\022,\n(ELEMENT_CON" +
      "FIGURATION_RETROSPECT_CATALOG\020\021\0222\n.ELEME" +
      "NT_CONFIGURATION_TRACKED_DISC__INSIDE_OU" +
      "T\020\022\022\"\n\036ELEMENT_CONFIGURATION_24_TRACK\020\023\022" +
      "\"\n\036ELEMENT_CONFIGURATION_32_TRACK\020\024\022$\n E" +
      "LEMENT_CONFIGURATION_DATA_FILES\020\025\022\"\n\036ELE" +
      "MENT_CONFIGURATION_16_TRACK\020\026\022+\n\'ELEMENT" +
      "_CONFIGURATION_HALF_TRACK_STEREO\020\027\022$\n EL" +
      "EMENT_CONFIGURATION_MONO_FILES\020\030\022&\n\"ELEM" +
      "ENT_CONFIGURATION_LTFS_ARCHIVE\020\031\022)\n%ELEM" +
      "ENT_CONFIGURATION_FULL_TRACK_MONO\020\032\022.\n*E" +
      "LEMENT_CONFIGURATION_QUARTER_TRACK_STERE" +
      "O\020\033\0222\n.ELEMENT_CONFIGURATION_TRACKED_DIS" +
      "C__OUTSIDE_IN\020\034\022$\n ELEMENT_CONFIGURATION" +
      "_TWIN_TRACK\020\035\0224\n0ELEMENT_CONFIGURATION_I" +
      "NTERLEAVED5__DOT__1_FILES\020\036\022$\n ELEMENT_C" +
      "ONFIGURATION_QUICK_TIME\020\037\022\'\n#ELEMENT_CON" +
      "FIGURATION_MEZZO_ARCHIVE\020 \022&\n\"ELEMENT_CO" +
      "NFIGURATION_FRUITY_LOOPS\020!\022!\n\035ELEMENT_CO" +
      "NFIGURATION_6_TRACK\020\"\022+\n\'ELEMENT_CONFIGU" +
      "RATION_DIGITAL_PERFORMER\020#\022$\n ELEMENT_CO" +
      "NFIGURATION_TAR_BACKUP\020$\022%\n!ELEMENT_CONF" +
      "IGURATION_GARAGE_BAND\020%\022\037\n\033ELEMENT_CONFI" +
      "GURATION_LOGIC\020&\0222\n.ELEMENT_CONFIGURATIO" +
      "N_INTERLEAVED_STEREO_FILES\020\'\022 \n\034ELEMENT_" +
      "CONFIGURATION_NUENDO\020(\022!\n\035ELEMENT_CONFIG" +
      "URATION_4_TRACK\020)\022)\n%ELEMENT_CONFIGURATI" +
      "ON_HALF_TRACK_MONO\020*\022#\n\037ELEMENT_CONFIGUR" +
      "ATION_PRO_TOOLS\020+\022*\n&ELEMENT_CONFIGURATI" +
      "ON_MICROSOFT_BACKUP\020,\0221\n-ELEMENT_CONFIGU" +
      "RATION_BANDED_DISC__INSIDE_OUT\020-\022&\n\"ELEM" +
      "ENT_CONFIGURATION_ABLETON_LIVE\020.\0221\n-ELEM" +
      "ENT_CONFIGURATION_BANDED_DISC__OUTSIDE_I" +
      "N\020/\022\037\n\033ELEMENT_CONFIGURATION_PARIS\0200\022\'\n#" +
      "ELEMENT_CONFIGURATION_FINAL_CUT_PRO\0201*\364\002" +
      "\n\022ElementDesignation\022\036\n\032ELEMENT_DESIGNAT" +
      "ION_MASTER\020\000\022#\n\037ELEMENT_DESIGNATION_CONV" +
      "ENIENCE\020\001\022\034\n\030ELEMENT_DESIGNATION_COPY\020\002\022" +
      "\036\n\032ELEMENT_DESIGNATION_BACKUP\020\003\022%\n!ELEME" +
      "NT_DESIGNATION_DOCUMENTATION\020\004\022 \n\034ELEMEN" +
      "T_DESIGNATION_TRANSFER\020\005\022$\n ELEMENT_DESI" +
      "GNATION_WORK_ELEMENT\020\006\022\036\n\032ELEMENT_DESIGN" +
      "ATION_SAFETY\020\007\022!\n\035ELEMENT_DESIGNATION_LO" +
      "NG_TERM\020\010\022)\n%ELEMENT_DESIGNATION_STORAGE" +
      "_CONTAINER\020\t*G\n\014EncodingType\022\027\n\023ENCODING" +
      "_TYPE_I_P_A\020\000\022\036\n\032ENCODING_TYPE_USER_DEFI" +
      "NED\020\001*\312\001\n\rEquipmentType\022\035\n\031EQUIPMENT_TYP" +
      "E_MICROPHONE\020\000\022#\n\037EQUIPMENT_TYPE_SIGNAL_" +
      "PROCESSOR\020\001\022\033\n\027EQUIPMENT_TYPE_COMPUTER\020\002" +
      "\022\033\n\027EQUIPMENT_TYPE_RECORDER\020\003\022\033\n\027EQUIPME" +
      "NT_TYPE_SOFTWARE\020\004\022\036\n\032EQUIPMENT_TYPE_LOU" +
      "DSPEAKER\020\005*:\n\016ErnMessageType\022(\n$ERN_MESS" +
      "AGE_TYPE_NEW_RELEASE_MESSAGE\020\000*t\n\022ErnTes" +
      "tMessageType\022-\n)ERN_TEST_MESSAGE_TYPE_NE" +
      "W_RELEASE_MESSAGE\020\000\022/\n+ERN_TEST_MESSAGE_" +
      "TYPE_PURGE_RELEASE_MESSAGE\020\001*\333\007\n\016ErncFil" +
      "eStatus\022/\n+ERNC_FILE_STATUS_DUPLICATED_P" +
      "UBLISHER_NAMES\020\000\022%\n!ERNC_FILE_STATUS_RES" +
      "OURCE_CORRUPT\020\001\0228\n4ERNC_FILE_STATUS_RESO" +
      "URCE_NOT_MEETING_SPECIFICATIONS\020\002\0220\n,ERN" +
      "C_FILE_STATUS_PRIMARY_ARTIST_NAME_MISSIN" +
      "G\020\003\022B\n>ERNC_FILE_STATUS_ORIGINAL_RELEASE" +
      "_DATE_LATER_THAN_RELEASE_DATE\020\004\0220\n,ERNC_" +
      "FILE_STATUS_NEW_RELEASE_MESSAGE_INVALID\020" +
      "\005\022(\n$ERNC_FILE_STATUS_ARTIST_ROLE_UNKNOW" +
      "N\020\006\022.\n*ERNC_FILE_STATUS_IDENTIFIER_SYNTA" +
      "X_INVALID\020\007\0225\n1ERNC_FILE_STATUS_CONFLICT" +
      "ING_AVAILABILITY_PERIODS\020\010\022%\n!ERNC_FILE_" +
      "STATUS_RESOURCE_MISSING\020\t\022%\n!ERNC_FILE_S" +
      "TATUS_METADATA_MISSING\020\n\0224\n0ERNC_FILE_ST" +
      "ATUS_COMMERCIAL_RELEASE_DATE_INVALID\020\013\022\035" +
      "\n\031ERNC_FILE_STATUS_FILE_O_K\020\014\022 \n\034ERNC_FI" +
      "LE_STATUS_ERN_MISSING\020\r\022#\n\037ERNC_FILE_STA" +
      "TUS_INTERNAL_ERROR\020\016\0223\n/ERNC_FILE_STATUS" +
      "_NO_DEAL_IN_NEW_RELEASE_MESSAGE\020\017\022;\n7ERN" +
      "C_FILE_STATUS_SIGNATURE_OR_HASH_SUM_WRON" +
      "G_OR_MISSING\020\020\022&\n\"ERNC_FILE_STATUS_UNSUP" +
      "PORTED_USAGE\020\021\022.\n*ERNC_FILE_STATUS_NO_DE" +
      "AL_FOR_TRACK_RELEASE\020\022\022!\n\035ERNC_FILE_STAT" +
      "US_USER_DEFINED\020\023\022\'\n#ERNC_FILE_STATUS_ID" +
      "ENTIFIER_INVALID\020\024*\253\001\n\026ErncProposedActio" +
      "nType\0226\n2ERNC_PROPOSED_ACTION_TYPE_RESEN" +
      "D_XML_AND_RESOURCES\020\000\022-\n)ERNC_PROPOSED_A" +
      "CTION_TYPE_RESEND_XML_ONLY\020\001\022*\n&ERNC_PRO" +
      "POSED_ACTION_TYPE_USER_DEFINED\020\002*h\n\rErro" +
      "rSeverity\022\032\n\026ERROR_SEVERITY_WARNING\020\000\022\033\n" +
      "\027ERROR_SEVERITY_CRITICAL\020\001\022\036\n\032ERROR_SEVE" +
      "RITY_INFORMATION\020\002*h\n\tErrorType\022 \n\034ERROR" +
      "_TYPE_CONFORMANCE_ERROR\020\000\022\033\n\027ERROR_TYPE_" +
      "USER_DEFINED\020\001\022\034\n\030ERROR_TYPE_LOGICAL_ERR" +
      "OR\020\002*\271\001\n\017ExceptionReason\022)\n%EXCEPTION_RE" +
      "ASON_DISPUTED_BY_LICENSEE\020\000\0228\n4EXCEPTION" +
      "_REASON_DISPUTED_BY_RELINQUISHING_PUBLIS" +
      "HER\020\001\022!\n\035EXCEPTION_REASON_USER_DEFINED\020\002" +
      "\022\036\n\032EXCEPTION_REASON_NOT_FOUND\020\003*R\n\016Expr" +
      "essionType\022\037\n\033EXPRESSION_TYPE_INFORMATIV" +
      "E\020\000\022\037\n\033EXPRESSION_TYPE_INSTRUCTIVE\020\001*\212\003\n" +
      "\034ExternallyLinkedResourceType\0224\n0EXTERNA" +
      "LLY_LINKED_RESOURCE_TYPE_PROMOTIONAL_ITE" +
      "M\020\000\022+\n\'EXTERNALLY_LINKED_RESOURCE_TYPE_U" +
      "NKNOWN\020\001\0227\n3EXTERNALLY_LINKED_RESOURCE_T" +
      "YPE_ADDITIONAL_METADATA\020\002\0220\n,EXTERNALLY_" +
      "LINKED_RESOURCE_TYPE_USER_DEFINED\020\003\022;\n7E" +
      "XTERNALLY_LINKED_RESOURCE_TYPE_PROMOTION" +
      "AL_INFORMATION\020\004\022(\n$EXTERNALLY_LINKED_RE" +
      "SOURCE_TYPE_LOGO\020\005\0225\n1EXTERNALLY_LINKED_" +
      "RESOURCE_TYPE_PROMOTIONAL_IMAGE\020\006*\251\037\n\010Fi" +
      "leType\022\027\n\023FILE_TYPE_RELS_FILE\020\000\022\026\n\022FILE_" +
      "TYPE_WMV_FILE\020\001\022\026\n\022FILE_TYPE_PLN_FILE\020\002\022" +
      "\026\n\022FILE_TYPE_ASP_FILE\020\003\022\026\n\022FILE_TYPE_FNT" +
      "_FILE\020\004\022\026\n\022FILE_TYPE_EPS_FILE\020\005\022\026\n\022FILE_" +
      "TYPE_ROM_FILE\020\006\022\026\n\022FILE_TYPE_YUV_FILE\020\007\022" +
      "\027\n\023FILE_TYPE_SITX_FILE\020\010\022\026\n\022FILE_TYPE_UU" +
      "E_FILE\020\t\022\026\n\022FILE_TYPE_HTM_FILE\020\n\022\026\n\022FILE" +
      "_TYPE_EXE_FILE\020\013\022\026\n\022FILE_TYPE_CSS_FILE\020\014" +
      "\022\026\n\022FILE_TYPE_NEU_FILE\020\r\022\026\n\022FILE_TYPE_SI" +
      "T_FILE\020\016\022\026\n\022FILE_TYPE_WAV_FILE\020\017\022\026\n\022FILE" +
      "_TYPE_CAB_FILE\020\020\022\025\n\021FILE_TYPE_RA_FILE\020\021\022" +
      "\030\n\024FILE_TYPE_ACCDB_FILE\020\022\022\027\n\023FILE_TYPE_X" +
      "LSX_FILE\020\023\022\026\n\022FILE_TYPE_PRF_FILE\020\024\022\026\n\022FI" +
      "LE_TYPE_PKG_FILE\020\025\022\026\n\022FILE_TYPE_GPX_FILE" +
      "\020\026\022\026\n\022FILE_TYPE_XLS_FILE\020\027\022\026\n\022FILE_TYPE_" +
      "ORI_FILE\020\030\022\026\n\022FILE_TYPE_MP3_FILE\020\031\022\030\n\024FI" +
      "LE_TYPE_CLASS_FILE\020\032\022\026\n\022FILE_TYPE_XML_FI" +
      "LE\020\033\022\026\n\022FILE_TYPE_INI_FILE\020\034\022\026\n\022FILE_TYP" +
      "E_BMP_FILE\020\035\022\026\n\022FILE_TYPE_DBX_FILE\020\036\022\026\n\022" +
      "FILE_TYPE_EFX_FILE\020\037\022\025\n\021FILE_TYPE_BT_FIL" +
      "E\020 \022\026\n\022FILE_TYPE_SVG_FILE\020!\022\025\n\021FILE_TYPE" +
      "_GZ_FILE\020\"\022\025\n\021FILE_TYPE_PL_FILE\020#\022\025\n\021FIL" +
      "E_TYPE_VB_FILE\020$\022\025\n\021FILE_TYPE_AI_FILE\020%\022" +
      "\026\n\022FILE_TYPE_FLV_FILE\020&\022\026\n\022FILE_TYPE_CPP" +
      "_FILE\020\'\022\026\n\022FILE_TYPE_LNK_FILE\020(\022\024\n\020FILE_" +
      "TYPE_M_FILE\020)\022\026\n\022FILE_TYPE_MSG_FILE\020*\022\030\n" +
      "\024FILE_TYPE_TOAST_FILE\020+\022\025\n\021FILE_TYPE_JS_" +
      "FILE\020,\022\026\n\022FILE_TYPE_SDF_FILE\020-\022\026\n\022FILE_T" +
      "YPE_TXT_FILE\020.\022\026\n\022FILE_TYPE_PDF_FILE\020/\022\027" +
      "\n\023FILE_TYPE_3_G2_FILE\0200\022\026\n\022FILE_TYPE_KML" +
      "_FILE\0201\022\026\n\022FILE_TYPE_PHP_FILE\0202\022\027\n\023FILE_" +
      "TYPE_3_GP_FILE\0203\022\026\n\022FILE_TYPE_FON_FILE\0204" +
      "\022\026\n\022FILE_TYPE_MPA_FILE\0205\022\026\n\022FILE_TYPE_GA" +
      "M_FILE\0206\022\026\n\022FILE_TYPE_LOG_FILE\0207\022\026\n\022FILE" +
      "_TYPE_PNG_FILE\0208\022\026\n\022FILE_TYPE_THM_FILE\0209" +
      "\022\026\n\022FILE_TYPE_WKS_FILE\020:\022\026\n\022FILE_TYPE_VC" +
      "F_FILE\020;\022\026\n\022FILE_TYPE_JSP_FILE\020<\022\026\n\022FILE" +
      "_TYPE_PCM_FILE\020=\022\026\n\022FILE_TYPE_PIF_FILE\020>" +
      "\022\026\n\022FILE_TYPE_WPD_FILE\020?\022\026\n\022FILE_TYPE_QX" +
      "D_FILE\020@\022\027\n\023FILE_TYPE_HTML_FILE\020A\022\026\n\022FIL" +
      "E_TYPE_SYS_FILE\020B\022\027\n\023FILE_TYPE_8_BI_FILE" +
      "\020C\022\026\n\022FILE_TYPE_TTF_FILE\020D\022\026\n\022FILE_TYPE_" +
      "DXF_FILE\020E\022\026\n\022FILE_TYPE_MAX_FILE\020F\022\030\n\024FI" +
      "LE_TYPE_PAGES_FILE\020G\022\026\n\022FILE_TYPE_PPT_FI" +
      "LE\020H\022\033\n\027FILE_TYPE_PSPIMAGE_FILE\020I\022\026\n\022FIL" +
      "E_TYPE_ASX_FILE\020J\022\026\n\022FILE_TYPE_CGI_FILE\020" +
      "K\022\026\n\022FILE_TYPE_JAR_FILE\020L\022\026\n\022FILE_TYPE_B" +
      "AK_FILE\020M\022\026\n\022FILE_TYPE_PSD_FILE\020N\022\026\n\022FIL" +
      "E_TYPE_DMP_FILE\020O\022\026\n\022FILE_TYPE_BAT_FILE\020" +
      "P\022\026\n\022FILE_TYPE_DRV_FILE\020Q\022\026\n\022FILE_TYPE_Z" +
      "IP_FILE\020R\022\026\n\022FILE_TYPE_PDB_FILE\020S\022\025\n\021FIL" +
      "E_TYPE_RM_FILE\020T\022\030\n\024FILE_TYPE_XHTML_FILE" +
      "\020U\022\026\n\022FILE_TYPE_ASF_FILE\020V\022\026\n\022FILE_TYPE_" +
      "GIF_FILE\020W\022\027\n\023FILE_TYPE_PPTX_FILE\020X\022\026\n\022F" +
      "ILE_TYPE_BWF_FILE\020Y\022\026\n\022FILE_TYPE_SWF_FIL" +
      "E\020Z\022\026\n\022FILE_TYPE_MPG_FILE\020[\022\026\n\022FILE_TYPE" +
      "_VOB_FILE\020\\\022\024\n\020FILE_TYPE_C_FILE\020]\022\026\n\022FIL" +
      "E_TYPE_DMG_FILE\020^\022\026\n\022FILE_TYPE_RTF_FILE\020" +
      "_\022\026\n\022FILE_TYPE_AUD_FILE\020`\022\026\n\022FILE_TYPE_D" +
      "OC_FILE\020a\022\026\n\022FILE_TYPE_IFF_FILE\020b\022\026\n\022FIL" +
      "E_TYPE_CSR_FILE\020c\022\026\n\022FILE_TYPE_CSV_FILE\020" +
      "d\022\026\n\022FILE_TYPE_ISO_FILE\020e\022\026\n\022FILE_TYPE_O" +
      "TF_FILE\020f\022\026\n\022FILE_TYPE_DAT_FILE\020g\022\026\n\022FIL" +
      "E_TYPE_JPG_FILE\020h\022\026\n\022FILE_TYPE_SAV_FILE\020" +
      "i\022\027\n\023FILE_TYPE_3_DM_FILE\020j\022\026\n\022FILE_TYPE_" +
      "AAC_FILE\020k\022\026\n\022FILE_TYPE_COM_FILE\020l\022\026\n\022FI" +
      "LE_TYPE_MP4_FILE\020m\022\026\n\022FILE_TYPE_PTS_FILE" +
      "\020n\022\027\n\023FILE_TYPE_DOCX_FILE\020o\022\026\n\022FILE_TYPE" +
      "_RAR_FILE\020p\022\026\n\022FILE_TYPE_BIN_FILE\020q\022\025\n\021F" +
      "ILE_TYPE_DB_FILE\020r\022\026\n\022FILE_TYPE_DWG_FILE" +
      "\020s\022\026\n\022FILE_TYPE_DSD_FILE\020t\022\031\n\025FILE_TYPE_" +
      "TAR_GZ_FILE\020u\022\026\n\022FILE_TYPE_VCD_FILE\020v\022\026\n" +
      "\022FILE_TYPE_GHO_FILE\020w\022\026\n\022FILE_TYPE_PCT_F" +
      "ILE\020x\022\026\n\022FILE_TYPE_RSS_FILE\020y\022\026\n\022FILE_TY" +
      "PE_WSF_FILE\020z\022\027\n\023FILE_TYPE_M3_U_FILE\020{\022\027" +
      "\n\023FILE_TYPE_ZIPX_FILE\020|\022\026\n\022FILE_TYPE_APP" +
      "_FILE\020}\022\026\n\022FILE_TYPE_MIM_FILE\020~\022\026\n\022FILE_" +
      "TYPE_TMP_FILE\020\177\022\026\n\021FILE_TYPE_PS_FILE\020\200\001\022" +
      "\027\n\022FILE_TYPE_SQL_FILE\020\201\001\022\032\n\025FILE_TYPE_GA" +
      "DGET_FILE\020\202\001\022\030\n\023FILE_TYPE_INDD_FILE\020\203\001\022\027" +
      "\n\022FILE_TYPE_MID_FILE\020\204\001\022\027\n\022FILE_TYPE_KEY" +
      "_FILE\020\205\001\022\027\n\022FILE_TYPE_QXP_FILE\020\206\001\022\027\n\022FIL" +
      "E_TYPE_MDB_FILE\020\207\001\022\027\n\022FILE_TYPE_CER_FILE" +
      "\020\210\001\022\032\n\025FILE_TYPE_PLUGIN_FILE\020\211\001\022\027\n\022FILE_" +
      "TYPE_SD2_FILE\020\212\001\022\027\n\022FILE_TYPE_TAR_FILE\020\213" +
      "\001\022\027\n\022FILE_TYPE_MOV_FILE\020\214\001\022\027\n\022FILE_TYPE_" +
      "AIF_FILE\020\215\001\022\027\n\022FILE_TYPE_HQX_FILE\020\216\001\022\027\n\022" +
      "FILE_TYPE_FLA_FILE\020\217\001\022\027\n\022FILE_TYPE_WPS_F" +
      "ILE\020\220\001\022\026\n\021FILE_TYPE_CS_FILE\020\221\001\022\027\n\022FILE_T" +
      "YPE_DLL_FILE\020\222\001\022\026\n\021FILE_TYPE_DV_FILE\020\223\001\022" +
      "\027\n\022FILE_TYPE_CPL_FILE\020\224\001\022\027\n\022FILE_TYPE_PP" +
      "S_FILE\020\225\001\022\027\n\022FILE_TYPE_AVI_FILE\020\226\001\022\027\n\022FI" +
      "LE_TYPE_CUR_FILE\020\227\001\022\027\n\022FILE_TYPE_DTD_FIL" +
      "E\020\230\001\022\027\n\022FILE_TYPE_NES_FILE\020\231\001\022\027\n\022FILE_TY" +
      "PE_7_Z_FILE\020\232\001\022\027\n\022FILE_TYPE_WMA_FILE\020\233\001\022" +
      "\027\n\022FILE_TYPE_ANA_FILE\020\234\001\022\027\n\022FILE_TYPE_XL" +
      "L_FILE\020\235\001\022\034\n\027FILE_TYPE_KEYCHAIN_FILE\020\236\001\022" +
      "\030\n\023FILE_TYPE_JAVA_FILE\020\237\001\022\027\n\022FILE_TYPE_D" +
      "EB_FILE\020\240\001\022\027\n\022FILE_TYPE_TIF_FILE\020\241\001\022\027\n\022F" +
      "ILE_TYPE_DRW_FILE\020\242\001\022\027\n\022FILE_TYPE_CFG_FI" +
      "LE\020\243\001*G\n\030FingerprintAlgorithmType\022+\n\'FIN" +
      "GERPRINT_ALGORITHM_TYPE_USER_DEFINED\020\000*\246" +
      "\014\n\004Form\022\021\n\rFORM_SONATINA\020\000\022\025\n\021FORM_POWER" +
      "_BALLAD\020\001\022\021\n\rFORM_CAVATINA\020\002\022\016\n\nFORM_ETU" +
      "DE\020\003\022\031\n\025FORM_PERPETUUM_MOBILE\020\004\022\027\n\023FORM_" +
      "SYMPHONIC_POEM\020\005\022\020\n\014FORM_BALLATA\020\006\022\017\n\013FO" +
      "RM_BOLERO\020\007\022\022\n\016FORM_POLONAISE\020\010\022\024\n\020FORM_" +
      "PASSACAGLIA\020\t\022\016\n\nFORM_SUITE\020\n\022\025\n\021FORM_DI" +
      "VERTIMENTO\020\013\022\017\n\013FORM_MINUET\020\014\022\021\n\rFORM_SY" +
      "MPHONY\020\r\022\017\n\013FORM_ADAGIO\020\016\022\035\n\031FORM_SINFON" +
      "IA_CONCERTANTE\020\017\022\021\n\rFORM_MADRIGAL\020\020\022\021\n\rF" +
      "ORM_CHACONNE\020\021\022\020\n\014FORM_FANFARE\020\022\022\021\n\rFORM" +
      "_OVERTURE\020\023\022\023\n\017FORM_SALTARELLO\020\024\022\025\n\021FORM" +
      "_USER_DEFINED\020\025\022\031\n\025FORM_TWELVE_BAR_BLUES" +
      "\020\026\022\021\n\rFORM_ESTAMPIE\020\027\022\017\n\013FORM_PAVANE\020\030\022\020" +
      "\n\014FORM_CHANSON\020\031\022\030\n\024FORM_EIGHT_BAR_BLUES" +
      "\020\032\022\020\n\014FORM_BALLADE\020\033\022\021\n\rFORM_SEQUENCE\020\034\022" +
      "\017\n\013FORM_BALLAD\020\035\022\020\n\014FORM_CAPRICE\020\036\022\020\n\014FO" +
      "RM_MINIMAL\020\037\022\017\n\013FORM_SONATA\020 \022\023\n\017FORM_VE" +
      "RSE_ONLY\020!\022\r\n\tFORM_HYMN\020\"\022\r\n\tFORM_MASS\020#" +
      "\022\021\n\rFORM_CONCERTO\020$\022\023\n\017FORM_INTERMEZZO\020%" +
      "\022\024\n\020FORM_MOMENT_FORM\020&\022\r\n\tFORM_ARIA\020\'\022\017\n" +
      "\013FORM_TIENTO\020(\022\020\n\014FORM_FANTASY\020)\022\023\n\017FORM",
      "_BARCAROLLE\020*\022\021\n\rFORM_SERENADE\020+\022\016\n\nFORM" +
      "_WALTZ\020,\022\020\n\014FORM_CANTATA\020-\022\016\n\nFORM_DUMKA" +
      "\020.\022\016\n\nFORM_MARCH\020/\022\022\n\016FORM_BAGATELLE\0200\022\016" +
      "\n\nFORM_RONDO\0201\022\016\n\nFORM_CAROL\0202\022\026\n\022FORM_I" +
      "MPROVISATION\0203\022\020\n\014FORM_MAZURKA\0204\022\023\n\017FORM" +
      "_TARANTELLA\0205\022\r\n\tFORM_RAGA\0206\022\022\n\016FORM_ALL" +
      "EMANDE\0207\022\016\n\nFORM_MOTET\0208\022\016\n\nFORM_CANON\0209" +
      "\022\020\n\014FORM_FURIANT\020:\022\020\n\014FORM_CANZONA\020;\022\020\n\014" +
      "FORM_PARTITA\020<\022\r\n\tFORM_LIED\020=\022\021\n\rFORM_RI" +
      "CERCAR\020>\022\027\n\023FORM_RHYTHM_CHANGES\020?\022\021\n\rFOR" +
      "M_COURANTE\020@\022\021\n\rFORM_GALLIARD\020A\022\020\n\014FORM_" +
      "MELODIE\020B\022\016\n\nFORM_LAUDE\020C\022\020\n\014FORM_CAN_CA" +
      "N\020D\022\021\n\rFORM_NOCTURNE\020E\022\020\n\014FORM_SCHERZO\020F" +
      "\022\020\n\014FORM_TOCCATA\020G\022\016\n\nFORM_GIGUE\020H\022\022\n\016FO" +
      "RM_INTERLUDE\020I\022\020\n\014FORM_PRELUDE\020J\022\022\n\016FORM" +
      "_SARABANDE\020K\022\021\n\rFORM_VOCALISE\020L\022\016\n\nFORM_" +
      "DANCE\020M\022\021\n\rFORM_RHAPSODY\020N\022\016\n\nFORM_FUGUE" +
      "\020O\022\014\n\010FORM_RAG\020P\022\022\n\016FORM_VARIATION\020Q\022\021\n\r" +
      "FORM_ART_SONG\020R*`\n\tFrameRate\022\021\n\rFRAME_RA" +
      "TE_24\020\000\022\021\n\rFRAME_RATE_25\020\001\022\021\n\rFRAME_RATE" +
      "_30\020\002\022\032\n\026FRAME_RATE_29__DOT__97\020\003*_\n\006Gen" +
      "der\022\026\n\022GENDER_ANDROGYNOUS\020\000\022\024\n\020GENDER_MA" +
      "SCULINE\020\001\022\022\n\016GENDER_UNKNOWN\020\002\022\023\n\017GENDER_" +
      "FEMININE\020\003*C\n\026GoverningAgreementType\022)\n%" +
      "GOVERNING_AGREEMENT_TYPE_USER_DEFINED\020\000*" +
      "\232\005\n\024HashSumAlgorithmType\022\"\n\036HASH_SUM_ALG" +
      "ORITHM_TYPE_S_H_A2\020\000\022\"\n\036HASH_SUM_ALGORIT" +
      "HM_TYPE_S_H_A3\020\001\022\"\n\036HASH_SUM_ALGORITHM_T" +
      "YPE_M_D_C2\020\002\022\"\n\036HASH_SUM_ALGORITHM_TYPE_" +
      "S_H_A1\020\003\022#\n\037HASH_SUM_ALGORITHM_TYPE_C_R_" +
      "C32\020\004\0228\n4HASH_SUM_ALGORITHM_TYPE_M_D4__F" +
      "RB___M_L_N_E_T__BRB__\020\005\022-\n)HASH_SUM_ALGO" +
      "RITHM_TYPE_S_H_A__MINUS__384\020\006\022$\n HASH_S" +
      "UM_ALGORITHM_TYPE_R_M_D160\020\007\022!\n\035HASH_SUM" +
      "_ALGORITHM_TYPE_S_H_A\020\010\022-\n)HASH_SUM_ALGO" +
      "RITHM_TYPE_S_H_A__MINUS__224\020\t\022-\n)HASH_S" +
      "UM_ALGORITHM_TYPE_S_H_A__MINUS__256\020\n\022 \n" +
      "\034HASH_SUM_ALGORITHM_TYPE_M_D2\020\013\022 \n\034HASH_" +
      "SUM_ALGORITHM_TYPE_M_D4\020\014\022(\n$HASH_SUM_AL" +
      "GORITHM_TYPE_USER_DEFINED\020\r\022-\n)HASH_SUM_" +
      "ALGORITHM_TYPE_S_H_A__MINUS__512\020\016\022 \n\034HA" +
      "SH_SUM_ALGORITHM_TYPE_M_D5\020\017*\347\001\n\016ImageCo" +
      "decType\022 \n\034IMAGE_CODEC_TYPE_J_P_E_G2000\020" +
      "\000\022\034\n\030IMAGE_CODEC_TYPE_T_I_F_F\020\001\022\034\n\030IMAGE" +
      "_CODEC_TYPE_UNKNOWN\020\002\022\032\n\026IMAGE_CODEC_TYP" +
      "E_G_I_F\020\003\022\032\n\026IMAGE_CODEC_TYPE_P_N_G\020\004\022\034\n" +
      "\030IMAGE_CODEC_TYPE_J_P_E_G\020\005\022!\n\035IMAGE_COD" +
      "EC_TYPE_USER_DEFINED\020\006*\237\003\n\tImageType\022 \n\034" +
      "IMAGE_TYPE_FRONT_COVER_IMAGE\020\000\022\"\n\036IMAGE_" +
      "TYPE_BOOKLET_FRONT_IMAGE\020\001\022\035\n\031IMAGE_TYPE" +
      "_DOCUMENT_IMAGE\020\002\022\037\n\033IMAGE_TYPE_BACK_COV" +
      "ER_IMAGE\020\003\022\031\n\025IMAGE_TYPE_TRAY_IMAGE\020\004\022!\n" +
      "\035IMAGE_TYPE_BOOKLET_BACK_IMAGE\020\005\022\023\n\017IMAG" +
      "E_TYPE_LOGO\020\006\022#\n\037IMAGE_TYPE_VIDEO_SCREEN" +
      "_CAPTURE\020\007\022\026\n\022IMAGE_TYPE_UNKNOWN\020\010\022\025\n\021IM" +
      "AGE_TYPE_POSTER\020\t\022\030\n\024IMAGE_TYPE_WALLPAPE" +
      "R\020\n\022\023\n\017IMAGE_TYPE_ICON\020\013\022\031\n\025IMAGE_TYPE_P" +
      "HOTOGRAPH\020\014\022\033\n\027IMAGE_TYPE_USER_DEFINED\020\r" +
      "*\304\266\001\n\016InstrumentType\022\033\n\027INSTRUMENT_TYPE_" +
      "KALIMBA\020\000\022\033\n\027INSTRUMENT_TYPE_KHARTAL\020\001\022\035" +
      "\n\031INSTRUMENT_TYPE_XYLORIMBA\020\002\022\037\n\033INSTRUM" +
      "ENT_TYPE_TIN_WHISTLE\020\003\022\037\n\033INSTRUMENT_TYP" +
      "E_DRUM_SAMPLE\020\004\022\037\n\033INSTRUMENT_TYPE_MIXED" +
      "_VOICE\020\005\022\031\n\025INSTRUMENT_TYPE_CAIXA\020\006\022\035\n\031I" +
      "NSTRUMENT_TYPE_MANDOLINO\020\007\022\'\n#INSTRUMENT" +
      "_TYPE_CHROMATIC_HARMONICA\020\010\022\036\n\032INSTRUMEN" +
      "T_TYPE_CHAMBERLIN\020\t\022\"\n\036INSTRUMENT_TYPE_J" +
      "ARANA_JAROCHA\020\n\022!\n\035INSTRUMENT_TYPE_SYNTH" +
      "_STRINGS\020\013\022 \n\034INSTRUMENT_TYPE_BAROQUE_OB" +
      "OE\020\014\022\033\n\027INSTRUMENT_TYPE_DOUMBEK\020\r\022\030\n\024INS" +
      "TRUMENT_TYPE_RNGA\020\016\022\037\n\033INSTRUMENT_TYPE_A" +
      "GOGO_BELLS\020\017\022\037\n\033INSTRUMENT_TYPE_NYCKELHA" +
      "RPA\020\020\022 \n\034INSTRUMENT_TYPE_BANJO_GUITAR\020\021\022" +
      "\036\n\032INSTRUMENT_TYPE_CONCERTINA\020\022\022\033\n\027INSTR" +
      "UMENT_TYPE_BOTTLES\020\023\022\033\n\027INSTRUMENT_TYPE_" +
      "UKULELE\020\024\022\033\n\027INSTRUMENT_TYPE_CITTERN\020\025\022\035" +
      "\n\031INSTRUMENT_TYPE_BASS_TUBA\020\026\022\035\n\031INSTRUM" +
      "ENT_TYPE_JAM_BLOCK\020\027\022 \n\034INSTRUMENT_TYPE_" +
      "SARRUSOPHONE\020\030\022\037\n\033INSTRUMENT_TYPE_TENOR_" +
      "FLUTE\020\031\022\036\n\032INSTRUMENT_TYPE_MARXOPHONE\020\032\022" +
      "\032\n\026INSTRUMENT_TYPE_ALBOKA\020\033\022$\n INSTRUMEN" +
      "T_TYPE_MOUTH_PERCUSSION\020\034\022\031\n\025INSTRUMENT_" +
      "TYPE_SAROD\020\035\022\033\n\027INSTRUMENT_TYPE_JAWHARP\020" +
      "\036\022 \n\034INSTRUMENT_TYPE_ALTO_SACKBUT\020\037\022.\n*I" +
      "NSTRUMENT_TYPE_CHROMATIC_BUTTON_ACCORDIO" +
      "N\020 \0221\n-INSTRUMENT_TYPE_PITCHED_PERCUSSIO" +
      "N_INSTRUMENT\020!\022 \n\034INSTRUMENT_TYPE_FINGER" +
      "_SNAPS\020\"\022\036\n\032INSTRUMENT_TYPE_PIANO_HARP\020#" +
      "\022\033\n\027INSTRUMENT_TYPE_PAIXIAO\020$\022\"\n\036INSTRUM" +
      "ENT_TYPE_HIGHLAND_PIPES\020%\022\032\n\026INSTRUMENT_" +
      "TYPE_FIDDLE\020&\022\030\n\024INSTRUMENT_TYPE_KHOL\020\'\022" +
      "\036\n\032INSTRUMENT_TYPE_WOOD_FLUTE\020(\022\031\n\025INSTR" +
      "UMENT_TYPE_DAVUL\020)\022!\n\035INSTRUMENT_TYPE_VI" +
      "OLA_POMPOSA\020*\022%\n!INSTRUMENT_TYPE_ACOUSTI" +
      "C_KEYBOARD\020+\022\034\n\030INSTRUMENT_TYPE_JAGDHORN" +
      "\020,\022 \n\034INSTRUMENT_TYPE_WIND_SECTION\020-\022 \n\034" +
      "INSTRUMENT_TYPE_UPRIGHT_BASS\020.\022\033\n\027INSTRU" +
      "MENT_TYPE_SHEKERE\020/\022%\n!INSTRUMENT_TYPE_H" +
      "AMMERED_DULCIMER\0200\022\033\n\027INSTRUMENT_TYPE_BA" +
      "SSOON\0201\022\035\n\031INSTRUMENT_TYPE_BANDONEON\0202\022\031" +
      "\n\025INSTRUMENT_TYPE_DOHOL\0203\022!\n\035INSTRUMENT_" +
      "TYPE_ALTO_TROMBONE\0204\022 \n\034INSTRUMENT_TYPE_" +
      "SOUND_DESIGN\0205\022 \n\034INSTRUMENT_TYPE_RAUSCH" +
      "PFEIFE\0206\022(\n$INSTRUMENT_TYPE_FOLKLORIC_PE" +
      "RCUSSION\0207\022\036\n\032INSTRUMENT_TYPE_MALE_VOICE" +
      "\0208\022\035\n\031INSTRUMENT_TYPE_DULCITONE\0209\022\035\n\031INS" +
      "TRUMENT_TYPE_RECO_RECO\020:\022\036\n\032INSTRUMENT_T" +
      "YPE_CAVAQUINHO\020;\022\"\n\036INSTRUMENT_TYPE_PREP" +
      "ARED_PIANO\020<\022\027\n\023INSTRUMENT_TYPE_JUG\020=\022\031\n" +
      "\025INSTRUMENT_TYPE_DUDUK\020>\0221\n-INSTRUMENT_T" +
      "YPE_CHILDRENS_BACKGROUND_VOCALIST\020?\022\031\n\025I" +
      "NSTRUMENT_TYPE_REBAB\020@\022\033\n\027INSTRUMENT_TYP" +
      "E_HAEGEUM\020A\022!\n\035INSTRUMENT_TYPE_STROHL_VI" +
      "OLIN\020B\022\035\n\031INSTRUMENT_TYPE_EUPHONIUM\020C\022%\n" +
      "!INSTRUMENT_TYPE_STRING_INSTRUMENT\020D\022\031\n\025" +
      "INSTRUMENT_TYPE_SUONA\020E\022\034\n\030INSTRUMENT_TY" +
      "PE_GEMSHORN\020F\022\036\n\032INSTRUMENT_TYPE_NADASWA" +
      "RAM\020G\022\036\n\032INSTRUMENT_TYPE_TACK_PIANO\020H\022$\n" +
      " INSTRUMENT_TYPE_HOT_FOUNTAIN_PEN\020I\022\036\n\032I" +
      "NSTRUMENT_TYPE_HAND_BELLS\020J\022$\n INSTRUMEN" +
      "T_TYPE_BASSO_DA_BRACCIO\020K\022\035\n\031INSTRUMENT_" +
      "TYPE_TURNTABLE\020L\022\033\n\027INSTRUMENT_TYPE_CELE" +
      "STA\020M\022\032\n\026INSTRUMENT_TYPE_LIRONE\020N\022\035\n\031INS" +
      "TRUMENT_TYPE_JEWS_HARP\020O\022\027\n\023INSTRUMENT_T" +
      "YPE_WOT\020P\022\035\n\031INSTRUMENT_TYPE_OMNICHORD\020Q" +
      "\022\034\n\030INSTRUMENT_TYPE_CALLIOPE\020R\022\034\n\030INSTRU" +
      "MENT_TYPE_CASTANET\020S\022!\n\035INSTRUMENT_TYPE_" +
      "ALTO_CLARINET\020T\022!\n\035INSTRUMENT_TYPE_UILLE" +
      "AN_PIPES\020U\022\030\n\024INSTRUMENT_TYPE_LYRE\020V\022!\n\035" +
      "INSTRUMENT_TYPE_SLIDE_TRUMPET\020W\022\037\n\033INSTR" +
      "UMENT_TYPE_SPRING_DRUM\020X\022\031\n\025INSTRUMENT_T" +
      "YPE_GUIRO\020Y\022\033\n\027INSTRUMENT_TYPE_COWBELL\020Z" +
      "\022\035\n\031INSTRUMENT_TYPE_FOLK_HARP\020[\022!\n\035INSTR" +
      "UMENT_TYPE_BOMBO_LEGUERO\020\\\022\"\n\036INSTRUMENT" +
      "_TYPE_BASS_SAXOPHONE\020]\022\033\n\027INSTRUMENT_TYP" +
      "E_RATCHET\020^\022\031\n\025INSTRUMENT_TYPE_ESRAJ\020_\022\036" +
      "\n\032INSTRUMENT_TYPE_ALTO_FLUTE\020`\022\034\n\030INSTRU" +
      "MENT_TYPE_KEMENCHE\020a\022(\n$INSTRUMENT_TYPE_" +
      "FRETLESS_BASS_GUITAR\020b\022\031\n\025INSTRUMENT_TYP" +
      "E_GUIRA\020c\022!\n\035INSTRUMENT_TYPE_BARITONE_HO" +
      "RN\020d\022#\n\037INSTRUMENT_TYPE_BASSET_CLARINET\020" +
      "e\022\"\n\036INSTRUMENT_TYPE_VALVE_TROMBONE\020f\022\035\n" +
      "\031INSTRUMENT_TYPE_SAXOPHONE\020g\022\027\n\023INSTRUME" +
      "NT_TYPE_SHO\020h\022\032\n\026INSTRUMENT_TYPE_DHOLAK\020" +
      "i\022\035\n\031INSTRUMENT_TYPE_MRIDANGAM\020j\022#\n\037INST" +
      "RUMENT_TYPE_REED_INSTRUMENT\020k\022\031\n\025INSTRUM" +
      "ENT_TYPE_SHAWM\020l\022\034\n\030INSTRUMENT_TYPE_CROT" +
      "ALES\020m\022$\n INSTRUMENT_TYPE_HAMMERED_STRIN" +
      "GS\020n\022\'\n#INSTRUMENT_TYPE_CONTRABASS_CLARI" +
      "NET\020o\022\036\n\032INSTRUMENT_TYPE_BASS_BANJO\020p\022!\n" +
      "\035INSTRUMENT_TYPE_ALTO_CRUMHORN\020q\022\034\n\030INST" +
      "RUMENT_TYPE_TAROGATO\020r\022\031\n\025INSTRUMENT_TYP" +
      "E_GASBA\020s\022 \n\034INSTRUMENT_TYPE_RHYTHM_STIC" +
      "K\020t\022\037\n\033INSTRUMENT_TYPE_OBOROM_DRUM\020u\022\034\n\030" +
      "INSTRUMENT_TYPE_APPLAUSE\020v\022\031\n\025INSTRUMENT" +
      "_TYPE_QUENA\020w\022(\n$INSTRUMENT_TYPE_BRAZILI" +
      "AN_PERCUSSION\020x\022\035\n\031INSTRUMENT_TYPE_ALPEN" +
      "HORN\020y\022\034\n\030INSTRUMENT_TYPE_ROTOTOMS\020z\022\031\n\025" +
      "INSTRUMENT_TYPE_KATSA\020{\022\032\n\026INSTRUMENT_TY" +
      "PE_CAXIXI\020|\022\031\n\025INSTRUMENT_TYPE_RANAT\020}\022\030" +
      "\n\024INSTRUMENT_TYPE_FIFE\020~\022\036\n\032INSTRUMENT_T" +
      "YPE_OPHICLEIDE\020\177\022\"\n\035INSTRUMENT_TYPE_VIOL" +
      "A_CAIPIRA\020\200\001\022#\n\036INSTRUMENT_TYPE_FINGER_C" +
      "YMBALS\020\201\001\022\037\n\032INSTRUMENT_TYPE_HAND_CLAPS\020" +
      "\202\001\022\034\n\027INSTRUMENT_TYPE_GUZHENG\020\203\001\022\033\n\026INST" +
      "RUMENT_TYPE_VALIHA\020\204\001\022\032\n\025INSTRUMENT_TYPE" +
      "_DIPLE\020\205\001\022#\n\036INSTRUMENT_TYPE_TENOR_TROMB" +
      "ONE\020\206\001\022\033\n\026INSTRUMENT_TYPE_KACAPI\020\207\001\022(\n#I" +
      "NSTRUMENT_TYPE_CONTRABASS_RECORDER\020\210\001\022\034\n" +
      "\027INSTRUMENT_TYPE_GADULKA\020\211\001\022\034\n\027INSTRUMEN" +
      "T_TYPE_OCTOBAN\020\212\001\022\032\n\025INSTRUMENT_TYPE_CHO" +
      "IR\020\213\001\022\032\n\025INSTRUMENT_TYPE_TABOR\020\214\001\022\034\n\027INS" +
      "TRUMENT_TYPE_DILRUBA\020\215\001\022 \n\033INSTRUMENT_TY" +
      "PE_HUAPANGUERA\020\216\001\022\034\n\027INSTRUMENT_TYPE_HEL" +
      "ICON\020\217\001\022\036\n\031INSTRUMENT_TYPE_CLAPSTICK\020\220\001\022" +
      "$\n\037INSTRUMENT_TYPE_VAKO_ORCHESTRON\020\221\001\022/\n" +
      "*INSTRUMENT_TYPE_GROUP_BACKGROUND_VOCALI" +
      "STS\020\222\001\022\035\n\030INSTRUMENT_TYPE_CIMBASSO\020\223\001\022\031\n" +
      "\024INSTRUMENT_TYPE_GONG\020\224\001\022\"\n\035INSTRUMENT_T" +
      "YPE_ELEPHANT_BELL\020\225\001\022\"\n\035INSTRUMENT_TYPE_" +
      "SINGING_BOWLS\020\226\001\022\037\n\032INSTRUMENT_TYPE_TXAL" +
      "APARTA\020\227\001\022%\n INSTRUMENT_TYPE_PLUCKED_DUL" +
      "CIMER\020\230\001\022-\n(INSTRUMENT_TYPE_TAR__FRB___S" +
      "TRING__BRB__\020\231\001\0226\n1INSTRUMENT_TYPE_SNARE" +
      "_DRUM__FRB___MARCHING__BRB__\020\232\001\022\034\n\027INSTR" +
      "UMENT_TYPE_GAMBANG\020\233\001\022\"\n\035INSTRUMENT_TYPE" +
      "_LEAD_VOCALIST\020\234\001\022\035\n\030INSTRUMENT_TYPE_REC" +
      "ORDER\020\235\001\022\037\n\032INSTRUMENT_TYPE_MANDOCELLO\020\236" +
      "\001\022\032\n\025INSTRUMENT_TYPE_XALAM\020\237\001\022\036\n\031INSTRUM" +
      "ENT_TYPE_BUFO_BASS\020\240\001\022\"\n\035INSTRUMENT_TYPE" +
      "_DOUBLE_VIOLIN\020\241\001\022 \n\033INSTRUMENT_TYPE_TRE" +
      "BLE_VIOL\020\242\001\022\032\n\025INSTRUMENT_TYPE_TAROL\020\243\001\022" +
      "\'\n\"INSTRUMENT_TYPE_ARPEGGIATING_SYNTH\020\244\001" +
      "\022\030\n\023INSTRUMENT_TYPE_XUN\020\245\001\022\037\n\032INSTRUMENT" +
      "_TYPE_GUACHARACA\020\246\001\022\036\n\031INSTRUMENT_TYPE_R" +
      "EPINIQUE\020\247\001\022\032\n\025INSTRUMENT_TYPE_CELLO\020\250\001\022" +
      "\'\n\"INSTRUMENT_TYPE_SOPRANINO_RECORDER\020\251\001" +
      "\022\035\n\030INSTRUMENT_TYPE_BAGPIPES\020\252\001\022\'\n\"INSTR" +
      "UMENT_TYPE_BARITONE_SAXOPHONE\020\253\001\022\037\n\032INST" +
      "RUMENT_TYPE_SHRUTI_BOX\020\254\001\022\034\n\027INSTRUMENT_" +
      "TYPE_PIANOLA\020\255\001\022\030\n\023INSTRUMENT_TYPE_NAI\020\256" +
      "\001\022\033\n\026INSTRUMENT_TYPE_EKTARA\020\257\001\022\030\n\023INSTRU" +
      "MENT_TYPE_RIQ\020\260\001\022#\n\036INSTRUMENT_TYPE_TENO" +
      "R_CRUMHORN\020\261\001\022\036\n\031INSTRUMENT_TYPE_ORPHARI" +
      "ON\020\262\001\022\034\n\027INSTRUMENT_TYPE_ZUMMARA\020\263\001\022\033\n\026I" +
      "NSTRUMENT_TYPE_FUJARA\020\264\001\022!\n\034INSTRUMENT_T" +
      "YPE_BIRD_WHISTLE\020\265\001\022 \n\033INSTRUMENT_TYPE_S" +
      "YNTH_CHOIR\020\266\001\022\031\n\024INSTRUMENT_TYPE_DEFI\020\267\001" +
      "\022\033\n\026INSTRUMENT_TYPE_VIELLE\020\270\001\022 \n\033INSTRUM" +
      "ENT_TYPE_PHONOFIDDLE\020\271\001\022 \n\033INSTRUMENT_TY" +
      "PE_WIND_CHIMES\020\272\001\022,\n\'INSTRUMENT_TYPE_ELE" +
      "CTRIC6_STRING_VIOLIN\020\273\001\022\034\n\027INSTRUMENT_TY" +
      "PE_SARANGI\020\274\001\022\033\n\026INSTRUMENT_TYPE_SHENAI\020" +
      "\275\001\022(\n#INSTRUMENT_TYPE_EPINETTE_DES_VOSGE" +
      "S\020\276\001\022!\n\034INSTRUMENT_TYPE_BASS_DULCIAN\020\277\001\022" +
      "!\n\034INSTRUMENT_TYPE_TENOR_GUITAR\020\300\001\022\032\n\025IN" +
      "STRUMENT_TYPE_BUGLE\020\301\001\022\032\n\025INSTRUMENT_TYP" +
      "E_PUNGI\020\302\001\022\031\n\024INSTRUMENT_TYPE_PHIN\020\303\001\022\031\n" +
      "\024INSTRUMENT_TYPE_NAAL\020\304\001\022\034\n\027INSTRUMENT_T" +
      "YPE_YANGQIN\020\305\001\022\"\n\035INSTRUMENT_TYPE_TENOR_" +
      "SACKBUT\020\306\001\022%\n INSTRUMENT_TYPE_SOPRANO_CL" +
      "ARINET\020\307\001\022\034\n\027INSTRUMENT_TYPE_OCARINA\020\310\001\022" +
      "%\n INSTRUMENT_TYPE_SAMPLED_KEYBOARD\020\311\001\022$" +
      "\n\037INSTRUMENT_TYPE_CLARINO_TRUMPET\020\312\001\022\034\n\027" +
      "INSTRUMENT_TYPE_KENDANG\020\313\001\022\032\n\025INSTRUMENT" +
      "_TYPE_DOMRA\020\314\001\022\036\n\031INSTRUMENT_TYPE_SAW_DU" +
      "ANG\020\315\001\022\"\n\035INSTRUMENT_TYPE_ALTO_RECORDER\020" +
      "\316\001\022\035\n\030INSTRUMENT_TYPE_CRUMHORN\020\317\001\022\032\n\025INS" +
      "TRUMENT_TYPE_TAIKO\020\320\001\022\"\n\035INSTRUMENT_TYPE" +
      "_BASS_CLARINET\020\321\001\022\034\n\027INSTRUMENT_TYPE_BAL" +
      "AFON\020\322\001\022\032\n\025INSTRUMENT_TYPE_MADAL\020\323\001\022&\n!I" +
      "NSTRUMENT_TYPE_ELECTRIC_MANDOLIN\020\324\001\022\032\n\025I" +
      "NSTRUMENT_TYPE_KHLUI\020\325\001\022\031\n\024INSTRUMENT_TY" +
      "PE_HARP\020\326\001\022\036\n\031INSTRUMENT_TYPE_VIBRASLAP\020" +
      "\327\001\022 \n\033INSTRUMENT_TYPE_ORGANISTRUM\020\330\001\022 \n\033" +
      "INSTRUMENT_TYPE_TENOR_SHAWM\020\331\001\022\034\n\027INSTRU" +
      "MENT_TYPE_MANDORE\020\332\001\022\033\n\026INSTRUMENT_TYPE_" +
      "SULING\020\333\001\022\033\n\026INSTRUMENT_TYPE_GARDON\020\334\001\022\036" +
      "\n\031INSTRUMENT_TYPE_LYRA_VIOL\020\335\001\022\032\n\025INSTRU" +
      "MENT_TYPE_ZURNA\020\336\001\022\033\n\026INSTRUMENT_TYPE_RH" +
      "ODES\020\337\001\022\036\n\031INSTRUMENT_TYPE_NEY_FLUTE\020\340\001\022" +
      "$\n\037INSTRUMENT_TYPE_MINIATURE_KHENE\020\341\001\022\037\n" +
      "\032INSTRUMENT_TYPE_ZERBAGHALI\020\342\001\022\033\n\026INSTRU" +
      "MENT_TYPE_PIANET\020\343\001\022\035\n\030INSTRUMENT_TYPE_C" +
      "LAVINET\020\344\001\022\"\n\035INSTRUMENT_TYPE_SOPRANO_DO" +
      "MRA\020\345\001\022\032\n\025INSTRUMENT_TYPE_CAJON\020\346\001\022,\n\'IN" +
      "STRUMENT_TYPE_5__MINUS___STRING_BANJO\020\347\001" +
      "\022\037\n\032INSTRUMENT_TYPE_SNARE_DRUM\020\350\001\022\037\n\032INS" +
      "TRUMENT_TYPE_DZUDDAHORD\020\351\001\022 \n\033INSTRUMENT" +
      "_TYPE_BINGHI_DRUM\020\352\001\022\033\n\026INSTRUMENT_TYPE_" +
      "DAMARU\020\353\001\022\"\n\035INSTRUMENT_TYPE_BOWED_STRIN" +
      "GS\020\354\001\022\037\n\032INSTRUMENT_TYPE_PUMP_ORGAN\020\355\001\022\033" +
      "\n\026INSTRUMENT_TYPE_GUACHE\020\356\001\022\036\n\031INSTRUMEN" +
      "T_TYPE_BASS_VIOL\020\357\001\022\037\n\032INSTRUMENT_TYPE_T" +
      "AMBOURINE\020\360\001\022\037\n\032INSTRUMENT_TYPE_MELLOPHO" +
      "NE\020\361\001\022\031\n\024INSTRUMENT_TYPE_BIWA\020\362\001\022,\n\'INST" +
      "RUMENT_TYPE_CONTRABASS_SARRUSOPHONE\020\363\001\022 " +
      "\n\033INSTRUMENT_TYPE_WAGNER_TUBA\020\364\001\022&\n!INST" +
      "RUMENT_TYPE_IRISH_LOW_WHISTLE\020\365\001\022$\n\037INST" +
      "RUMENT_TYPE_PICCOLO_TRUMPET\020\366\001\022\036\n\031INSTRU" +
      "MENT_TYPE_SHELLTONE\020\367\001\022\036\n\031INSTRUMENT_TYP" +
      "E_ALTO_VIOL\020\370\001\022!\n\034INSTRUMENT_TYPE_TAONGA" +
      "_PUORO\020\371\001\022*\n%INSTRUMENT_TYPE_NATIVE_AMER" +
      "ICAN_FLUTE\020\372\001\022 \n\033INSTRUMENT_TYPE_CELTIC_" +
      "HARP\020\373\001\022\032\n\025INSTRUMENT_TYPE_GUSLI\020\374\001\022\035\n\030I" +
      "NSTRUMENT_TYPE_GUNSHOTS\020\375\001\022!\n\034INSTRUMENT" +
      "_TYPE_TUSSELFLOYTE\020\376\001\022\032\n\025INSTRUMENT_TYPE" +
      "_ORGAN\020\377\001\022\034\n\027INSTRUMENT_TYPE_DULCIAN\020\200\002\022" +
      "#\n\036INSTRUMENT_TYPE_HERALD_TRUMPET\020\201\002\022\034\n\027" +
      "INSTRUMENT_TYPE_TAMBORA\020\202\002\022\036\n\031INSTRUMENT" +
      "_TYPE_VIRGINALS\020\203\002\022\"\n\035INSTRUMENT_TYPE_AN" +
      "IMAL_SOUNDS\020\204\002\022\032\n\025INSTRUMENT_TYPE_NGONI\020" +
      "\205\002\022!\n\034INSTRUMENT_TYPE_CONCERT_HARP\020\206\002\022\037\n" +
      "\032INSTRUMENT_TYPE_AULOCHROME\020\207\002\0227\n2INSTRU" +
      "MENT_TYPE_12__MINUS___STRING_ELECTRIC_GU" +
      "ITAR\020\210\002\022$\n\037INSTRUMENT_TYPE_PARAGUAYAN_HA" +
      "RP\020\211\002\022\036\n\031INSTRUMENT_TYPE_PONG_LANG\020\212\002\022\033\n" +
      "\026INSTRUMENT_TYPE_THAVIL\020\213\002\022#\n\036INSTRUMENT" +
      "_TYPE_CHEWING_SOUNDS\020\214\002\022\035\n\030INSTRUMENT_TY" +
      "PE_BANJOLIN\020\215\002\022\036\n\031INSTRUMENT_TYPE_WASHBO" +
      "ARD\020\216\002\022\032\n\025INSTRUMENT_TYPE_GUQIN\020\217\002\022&\n!IN" +
      "STRUMENT_TYPE_FRYING_PAN_GUITAR\020\220\002\022\034\n\027IN" +
      "STRUMENT_TYPE_ATUMPAN\020\221\002\022\037\n\032INSTRUMENT_T" +
      "YPE_GLASS_HARP\020\222\002\022%\n INSTRUMENT_TYPE_LAT" +
      "IN_PERCUSSION\020\223\002\022(\n#INSTRUMENT_TYPE_CONT" +
      "RABASS_TROMBONE\020\224\002\022#\n\036INSTRUMENT_TYPE_PO" +
      "LICE_WHISTLE\020\225\002\022\031\n\024INSTRUMENT_TYPE_DHOL\020" +
      "\226\002\022!\n\034INSTRUMENT_TYPE_WASHTUB_BASS\020\227\002\022!\n" +
      "\034INSTRUMENT_TYPE_NATURAL_HORN\020\230\002\022$\n\037INST" +
      "RUMENT_TYPE_ELECTRIC_GUITAR\020\231\002\022!\n\034INSTRU" +
      "MENT_TYPE_DRUM_MACHINE\020\232\002\022\033\n\026INSTRUMENT_" +
      "TYPE_BONGOS\020\233\002\022!\n\034INSTRUMENT_TYPE_GERMAN" +
      "_FLUTE\020\234\002\022\032\n\025INSTRUMENT_TYPE_KAVAL\020\235\002\022\031\n" +
      "\024INSTRUMENT_TYPE_TOMS\020\236\002\022\"\n\035INSTRUMENT_T" +
      "YPE_VIOLA_D_AMORE\020\237\002\022\033\n\026INSTRUMENT_TYPE_" +
      "VIOLIN\020\240\002\022\032\n\025INSTRUMENT_TYPE_SITAR\020\241\002\022#\n" +
      "\036INSTRUMENT_TYPE_BASS_HARMONICA\020\242\002\022 \n\033IN" +
      "STRUMENT_TYPE_MOUTH_ORGAN\020\243\002\022!\n\034INSTRUME" +
      "NT_TYPE_MARIMBAPHONE\020\244\002\022\036\n\031INSTRUMENT_TY" +
      "PE_BOY_VOICE\020\245\002\022\033\n\026INSTRUMENT_TYPE_KHAMA" +
      "K\020\246\002\022\032\n\025INSTRUMENT_TYPE_PIANO\020\247\002\022\033\n\026INST" +
      "RUMENT_TYPE_CUATRO\020\250\002\022$\n\037INSTRUMENT_TYPE" +
      "_VIOLINO_PICCOLO\020\251\002\022$\n\037INSTRUMENT_TYPE_Z" +
      "YDECO_RUBBOARD\020\252\002\022\036\n\031INSTRUMENT_TYPE_BAB" +
      "Y_BASS\020\253\002\022\034\n\027INSTRUMENT_TYPE_TAARIJA\020\254\002\022" +
      " \n\033INSTRUMENT_TYPE_DOUBLE_HARP\020\255\002\022\036\n\031INS" +
      "TRUMENT_TYPE_MANDOLELE\020\256\002\022\037\n\032INSTRUMENT_" +
      "TYPE_GIRL_VOICE\020\257\002\022\035\n\030INSTRUMENT_TYPE_TR" +
      "OMBONE\020\260\002\022!\n\034INSTRUMENT_TYPE_AFRICAN_HAR" +
      "P\020\261\002\022\033\n\026INSTRUMENT_TYPE_SHAKER\020\262\002\022$\n\037INS" +
      "TRUMENT_TYPE_PIANO_ACCORDION\020\263\002\022#\n\036INSTR" +
      "UMENT_TYPE_ORCHESTRAL_HIT\020\264\002\022\033\n\026INSTRUME" +
      "NT_TYPE_TIMBAU\020\265\002\022\036\n\031INSTRUMENT_TYPE_HAR" +
      "MONICA\020\266\002\022!\n\034INSTRUMENT_TYPE_RECORD_NOIS" +
      "E\020\267\002\022&\n!INSTRUMENT_TYPE_SYNTH_STEEL_DRUM" +
      "S\020\270\002\022\032\n\025INSTRUMENT_TYPE_BONES\020\271\002\022\032\n\025INST" +
      "RUMENT_TYPE_CRWTH\020\272\002\022\034\n\027INSTRUMENT_TYPE_" +
      "GYALING\020\273\002\022 \n\033INSTRUMENT_TYPE_SYNTHESIZE" +
      "R\020\274\002\022$\n\037INSTRUMENT_TYPE_BARITONE_GUITAR\020" +
      "\275\002\022\036\n\031INSTRUMENT_TYPE_SCRATCHER\020\276\002\022\034\n\027IN" +
      "STRUMENT_TYPE_TANBOUR\020\277\002\022\035\n\030INSTRUMENT_T" +
      "YPE_KEYBOARD\020\300\002\022\036\n\031INSTRUMENT_TYPE_LANGE" +
      "LEIK\020\301\002\022$\n\037INSTRUMENT_TYPE_WIND_INSTRUME" +
      "NT\020\302\002\022\036\n\031INSTRUMENT_TYPE_MUHARSING\020\303\002\022*\n" +
      "%INSTRUMENT_TYPE_ORCHESTRAL_PERCUSSION\020\304" +
      "\002\022&\n!INSTRUMENT_TYPE_SOPRANO_SAXOPHONE\020\305" +
      "\002\022\033\n\026INSTRUMENT_TYPE_GUANZI\020\306\002\022\034\n\027INSTRU" +
      "MENT_TYPE_ULI_ULI\020\307\002\022\031\n\024INSTRUMENT_TYPE_" +
      "PIPA\020\310\002\022\037\n\032INSTRUMENT_TYPE_WOOD_BLOCK\020\311\002" +
      "\022\034\n\027INSTRUMENT_TYPE_BANDURA\020\312\002\022!\n\034INSTRU" +
      "MENT_TYPE_YAYLI_TAMBUR\020\313\002\022!\n\034INSTRUMENT_" +
      "TYPE_WOBBLE_BOARD\020\314\002\022\'\n\"INSTRUMENT_TYPE_" +
      "PEDAL_STEEL_GUITAR\020\315\002\022\034\n\027INSTRUMENT_TYPE" +
      "_CYMBALS\020\316\002\022 \n\033INSTRUMENT_TYPE_CELLO_BAN" +
      "JO\020\317\002\022%\n INSTRUMENT_TYPE_BAROQUE_CLARINE" +
      "T\020\320\002\022\"\n\035INSTRUMENT_TYPE_SLIDE_WHISTLE\020\321\002" +
      "\022\035\n\030INSTRUMENT_TYPE_MELODEON\020\322\002\022\033\n\026INSTR" +
      "UMENT_TYPE_LOKOLE\020\323\002\022\031\n\024INSTRUMENT_TYPE_" +
      "LUTE\020\324\002\022\032\n\025INSTRUMENT_TYPE_REBEC\020\325\002\022\036\n\031I" +
      "NSTRUMENT_TYPE_PAN_FLUTE\020\326\002\022 \n\033INSTRUMEN" +
      "T_TYPE_HURDY_GURDY\020\327\002\022\035\n\030INSTRUMENT_TYPE" +
      "_BERIMBAU\020\330\002\022\036\n\031INSTRUMENT_TYPE_FLEXATON" +
      "E\020\331\002\022\"\n\035INSTRUMENT_TYPE_TEMPLE_BLOCKS\020\332\002" +
      "\022\037\n\032INSTRUMENT_TYPE_DICTOPHONE\020\333\002\022\034\n\027INS" +
      "TRUMENT_TYPE_DAYEREH\020\334\002\022\034\n\027INSTRUMENT_TY" +
      "PE_JAWBONE\020\335\002\022\"\n\035INSTRUMENT_TYPE_MEDIEVA" +
      "L_HARP\020\336\002\022\"\n\035INSTRUMENT_TYPE_VERACRUZ_HA" +
      "RP\020\337\002\022\"\n\035INSTRUMENT_TYPE_CHAPMAN_STICK\020\340" +
      "\002\022\035\n\030INSTRUMENT_TYPE_PINKILLU\020\341\002\022\033\n\026INST" +
      "RUMENT_TYPE_GHAITA\020\342\002\022\027\n\022INSTRUMENT_TYPE" +
      "_PI\020\343\002\022$\n\037INSTRUMENT_TYPE_VENEZUELAN_HAR" +
      "P\020\344\002\022\035\n\030INSTRUMENT_TYPE_QUENACHO\020\345\002\022!\n\034I" +
      "NSTRUMENT_TYPE_USER_DEFINED\020\346\002\022#\n\036INSTRU" +
      "MENT_TYPE_ELECTRIC_SITAR\020\347\002\022\032\n\025INSTRUMEN" +
      "T_TYPE_KANUN\020\350\002\022\033\n\026INSTRUMENT_TYPE_BENDI" +
      "R\020\351\002\022\036\n\031INSTRUMENT_TYPE_MARIMBULA\020\352\002\022\033\n\026" +
      "INSTRUMENT_TYPE_JINGHU\020\353\002\022\034\n\027INSTRUMENT_" +
      "TYPE_CLAYPOT\020\354\002\022\034\n\027INSTRUMENT_TYPE_TINGS" +
      "HA\020\355\002\022\036\n\031INSTRUMENT_TYPE_BELL_TREE\020\356\002\022\031\n" +
      "\024INSTRUMENT_TYPE_CAJA\020\357\002\022.\n)INSTRUMENT_T" +
      "YPE_MIXED_BACKGROUND_VOCALIST\020\360\002\022(\n#INST" +
      "RUMENT_TYPE_TOGAMAN_GUITAR_VIOL\020\361\002\022#\n\036IN" +
      "STRUMENT_TYPE_ELECTRIC_PIANO\020\362\002\022\"\n\035INSTR" +
      "UMENT_TYPE_PICCOLO_FLUTE\020\363\002\022\033\n\026INSTRUMEN" +
      "T_TYPE_STICKS\020\364\002\022\036\n\031INSTRUMENT_TYPE_GUIT" +
      "ARRON\020\365\002\022\036\n\031INSTRUMENT_TYPE_BANDURRIA\020\366\002" +
      "\022\036\n\031INSTRUMENT_TYPE_DAN_TRANH\020\367\002\022%\n INST" +
      "RUMENT_TYPE_HARDANGER_FIDDLE\020\370\002\022\"\n\035INSTR" +
      "UMENT_TYPE_TENOR_DULCIAN\020\371\002\022\032\n\025INSTRUMEN" +
      "T_TYPE_BOMBO\020\372\002\0221\n,INSTRUMENT_TYPE_BASS_" +
      "DRUM__FRB___KICK__BRB__\020\373\002\022\032\n\025INSTRUMENT" +
      "_TYPE_APITO\020\374\002\022\033\n\026INSTRUMENT_TYPE_NJARKA" +
      "\020\375\002\022#\n\036INSTRUMENT_TYPE_BOSUNS_WHISTLE\020\376\002" +
      "\022#\n\036INSTRUMENT_TYPE_POSITIVE_ORGAN\020\377\002\022 \n" +
      "\033INSTRUMENT_TYPE_FRENCH_HORN\020\200\003\022 \n\033INSTR" +
      "UMENT_TYPE_TENOR_REBEC\020\201\003\022!\n\034INSTRUMENT_" +
      "TYPE_FEMALE_VOICE\020\202\003\022!\n\034INSTRUMENT_TYPE_" +
      "TREBLE_REBEC\020\203\003\022\"\n\035INSTRUMENT_TYPE_TIBET" +
      "AN_BELLS\020\204\003\022\031\n\024INSTRUMENT_TYPE_SIKU\020\205\003\0221" +
      "\n,INSTRUMENT_TYPE_ELECTRO_ACOUSTIC_HURDY" +
      "_GURDY\020\206\003\022\035\n\030INSTRUMENT_TYPE_MANDOLIN\020\207\003" +
      "\022\037\n\032INSTRUMENT_TYPE_SYNTH_BASS\020\210\003\022\036\n\031INS" +
      "TRUMENT_TYPE_XYLOPHONE\020\211\003\022(\n#INSTRUMENT_" +
      "TYPE_SOPRANINO_SAXOPHONE\020\212\003\022&\n!INSTRUMEN" +
      "T_TYPE_PORTUGUESE_GUITAR\020\213\003\022\032\n\025INSTRUMEN" +
      "T_TYPE_SABAR\020\214\003\022%\n INSTRUMENT_TYPE_BRASS" +
      "_INSTRUMENT\020\215\003\022)\n$INSTRUMENT_TYPE_CONTRA" +
      "BASS_SAXOPHONE\020\216\003\022$\n\037INSTRUMENT_TYPE_SOP" +
      "RANO_TRUMPET\020\217\003\022\035\n\030INSTRUMENT_TYPE_VUVUZ" +
      "ELA\020\220\003\022\034\n\027INSTRUMENT_TYPE_KANJIRA\020\221\003\022\034\n\027" +
      "INSTRUMENT_TYPE_KANTELE\020\222\003\022\034\n\027INSTRUMENT" +
      "_TYPE_ZHONGHU\020\223\003\022\034\n\027INSTRUMENT_TYPE_OPTI" +
      "GAN\020\224\003\022\"\n\035INSTRUMENT_TYPE_NEUTRAL_VOICE\020" +
      "\225\003\022\035\n\030INSTRUMENT_TYPE_DUNGCHEN\020\226\003\022\036\n\031INS" +
      "TRUMENT_TYPE_TOY_PIANO\020\227\003\022\033\n\026INSTRUMENT_" +
      "TYPE_ZITHER\020\230\003\022\037\n\032INSTRUMENT_TYPE_SHAKUH" +
      "ACHI\020\231\003\022\033\n\026INSTRUMENT_TYPE_ARGHUL\020\232\003\022\032\n\025" +
      "INSTRUMENT_TYPE_KHENE\020\233\003\022\035\n\030INSTRUMENT_T" +
      "YPE_QARKABEB\020\234\003\022\033\n\026INSTRUMENT_TYPE_YUEQI" +
      "N\020\235\003\022-\n(INSTRUMENT_TYPE_MALE_BACKGROUND_",
      "VOCALIST\020\236\003\022(\n#INSTRUMENT_TYPE_NYLON_STR" +
      "ING_GUITAR\020\237\003\022\032\n\025INSTRUMENT_TYPE_SURDO\020\240" +
      "\003\022\037\n\032INSTRUMENT_TYPE_WATERPHONE\020\241\003\022\034\n\027IN" +
      "STRUMENT_TYPE_PEDABRO\020\242\003\022\032\n\025INSTRUMENT_T" +
      "YPE_LEONA\020\243\003\022 \n\033INSTRUMENT_TYPE_SAND_BLO" +
      "CKS\020\244\003\022\034\n\027INSTRUMENT_TYPE_MANDOLA\020\245\003\022\037\n\032" +
      "INSTRUMENT_TYPE_METAL_CANS\020\246\003\022\033\n\026INSTRUM" +
      "ENT_TYPE_NAGARA\020\247\003\022\033\n\026INSTRUMENT_TYPE_CU" +
      "MBUS\020\250\003\022\034\n\027INSTRUMENT_TYPE_TAMBURA\020\251\003\022\035\n" +
      "\030INSTRUMENT_TYPE_PSALTERY\020\252\003\022\035\n\030INSTRUME" +
      "NT_TYPE_ANGKLUNG\020\253\003\022 \n\033INSTRUMENT_TYPE_C" +
      "HILD_VOICE\020\254\003\022#\n\036INSTRUMENT_TYPE_ALTO_SA" +
      "XOPHONE\020\255\003\022\037\n\032INSTRUMENT_TYPE_PIPE_ORGAN" +
      "\020\256\003\022\031\n\024INSTRUMENT_TYPE_TUBA\020\257\003\022\037\n\032INSTRU" +
      "MENT_TYPE_VIBRAPHONE\020\260\003\022\032\n\025INSTRUMENT_TY" +
      "PE_SHENG\020\261\003\022\031\n\024INSTRUMENT_TYPE_KORA\020\262\003\022\035" +
      "\n\030INSTRUMENT_TYPE_TAMBORIM\020\263\003\022\035\n\030INSTRUM" +
      "ENT_TYPE_GHAYCHAK\020\264\003\022\033\n\026INSTRUMENT_TYPE_" +
      "CONGAS\020\265\003\022 \n\033INSTRUMENT_TYPE_TONGUE_DRUM" +
      "\020\266\003\022\"\n\035INSTRUMENT_TYPE_BAROQUE_VIOLA\020\267\003\022" +
      "!\n\034INSTRUMENT_TYPE_TALKING_DRUM\020\270\003\022\036\n\031IN" +
      "STRUMENT_TYPE_POST_HORN\020\271\003\022\"\n\035INSTRUMENT" +
      "_TYPE_FINGER_CLICKS\020\272\003\022\032\n\025INSTRUMENT_TYP" +
      "E_GANGA\020\273\003\022!\n\034INSTRUMENT_TYPE_SLEIGH_BEL" +
      "LS\020\274\003\022\032\n\025INSTRUMENT_TYPE_VIOLA\020\275\003\022\034\n\027INS" +
      "TRUMENT_TYPE_DRANYEN\020\276\003\022$\n\037INSTRUMENT_TY" +
      "PE_ROMANTIC_GUITAR\020\277\003\022\033\n\026INSTRUMENT_TYPE" +
      "_DJEMBE\020\300\003\022\035\n\030INSTRUMENT_TYPE_SURBAHAR\020\301" +
      "\003\022\032\n\025INSTRUMENT_TYPE_DUTAR\020\302\003\022\034\n\027INSTRUM" +
      "ENT_TYPE_TANPURA\020\303\003\022\037\n\032INSTRUMENT_TYPE_B" +
      "ASS_SHAWM\020\304\003\022\034\n\027INSTRUMENT_TYPE_BOMBARD\020" +
      "\305\003\022\032\n\025INSTRUMENT_TYPE_SIREN\020\306\003\022!\n\034INSTRU" +
      "MENT_TYPE_TRAIN_SOUNDS\020\307\003\022\"\n\035INSTRUMENT_" +
      "TYPE_TROMBA_MARINA\020\310\003\022\037\n\032INSTRUMENT_TYPE" +
      "_BAJO_SEXTO\020\311\003\022\037\n\032INSTRUMENT_TYPE_DIDGER" +
      "IDOO\020\312\003\022\034\n\027INSTRUMENT_TYPE_NYATITI\020\313\003\022\037\n" +
      "\032INSTRUMENT_TYPE_CAR_SOUNDS\020\314\003\022\035\n\030INSTRU" +
      "MENT_TYPE_CRAVIOLA\020\315\003\022\031\n\024INSTRUMENT_TYPE" +
      "_DIZI\020\316\003\022$\n\037INSTRUMENT_TYPE_SLIDE_SAXOPH" +
      "ONE\020\317\003\022\034\n\027INSTRUMENT_TYPE_BODHRAN\020\320\003\022/\n*" +
      "INSTRUMENT_TYPE_CYMBAL__FRB___CRASH__BRB" +
      "__\020\321\003\022\"\n\035INSTRUMENT_TYPE_THUNDER_SHEET\020\322" +
      "\003\022\"\n\035INSTRUMENT_TYPE_BASS_RECORDER\020\323\003\0223\n" +
      ".INSTRUMENT_TYPE_CYMBAL__FRB___SUSPENDED" +
      "__BRB__\020\324\003\022\032\n\025INSTRUMENT_TYPE_BANJO\020\325\003\022\031" +
      "\n\024INSTRUMENT_TYPE_ERHU\020\326\003\022\034\n\027INSTRUMENT_" +
      "TYPE_SACKBUT\020\327\003\022\034\n\027INSTRUMENT_TYPE_GITTE" +
      "RN\020\330\003\022\032\n\025INSTRUMENT_TYPE_YOKIN\020\331\003\022#\n\036INS" +
      "TRUMENT_TYPE_OBOE_DA_CACCIA\020\332\003\022\037\n\032INSTRU" +
      "MENT_TYPE_ALTO_SHAWM\020\333\003\022\032\n\025INSTRUMENT_TY" +
      "PE_DUNUN\020\334\003\022\037\n\032INSTRUMENT_TYPE_SYNTH_LEA" +
      "D\020\335\003\022\034\n\027INSTRUMENT_TYPE_LUTHEAL\020\336\003\022\037\n\032IN" +
      "STRUMENT_TYPE_CLAVICHORD\020\337\003\022\035\n\030INSTRUMEN" +
      "T_TYPE_GAYAGEUM\020\340\003\022#\n\036INSTRUMENT_TYPE_EL" +
      "ECTRIC_ORGAN\020\341\003\022\032\n\025INSTRUMENT_TYPE_DUGGI" +
      "\020\342\003\022\036\n\031INSTRUMENT_TYPE_SYNTH_PAD\020\343\003\022\037\n\032I" +
      "NSTRUMENT_TYPE_BASS_FLUTE\020\344\003\022#\n\036INSTRUME" +
      "NT_TYPE_BAROQUE_VIOLIN\020\345\003\022\033\n\026INSTRUMENT_" +
      "TYPE_LAOUTO\020\346\003\022\035\n\030INSTRUMENT_TYPE_CORDOV" +
      "OX\020\347\003\022\036\n\031INSTRUMENT_TYPE_ARCH_LUTE\020\350\003\022\"\n" +
      "\035INSTRUMENT_TYPE_BARITONE_OBOE\020\351\003\022\033\n\026INS" +
      "TRUMENT_TYPE_CORNET\020\352\003\022 \n\033INSTRUMENT_TYP" +
      "E_TENOR_BANJO\020\353\003\022!\n\034INSTRUMENT_TYPE_BARR" +
      "EL_ORGAN\020\354\003\022$\n\037INSTRUMENT_TYPE_TENOR_SAX" +
      "OPHONE\020\355\003\0224\n/INSTRUMENT_TYPE_UNPITCHED_P" +
      "ERCUSSION_INSTRUMENT\020\356\003\022 \n\033INSTRUMENT_TY" +
      "PE_MUSICAL_BOW\020\357\003\022\031\n\024INSTRUMENT_TYPE_XIA" +
      "O\020\360\003\022\037\n\032INSTRUMENT_TYPE_TREATMENTS\020\361\003\022\031\n" +
      "\024INSTRUMENT_TYPE_KOTO\020\362\003\022!\n\034INSTRUMENT_T" +
      "YPE_SHVI_WHISTLE\020\363\003\022\034\n\027INSTRUMENT_TYPE_M" +
      "USETTE\020\364\003\022\031\n\024INSTRUMENT_TYPE_BASS\020\365\003\022\035\n\030" +
      "INSTRUMENT_TYPE_AUTOHARP\020\366\003\022$\n\037INSTRUMEN" +
      "T_TYPE_ELECTRIC_VIOLIN\020\367\003\022\035\n\030INSTRUMENT_" +
      "TYPE_BOUZOUKI\020\370\003\022%\n INSTRUMENT_TYPE_SOPR" +
      "ANO_CRUMHORN\020\371\003\022\033\n\026INSTRUMENT_TYPE_CHIME" +
      "S\020\372\003\022\035\n\030INSTRUMENT_TYPE_PANDEIRO\020\373\003\022\033\n\026I" +
      "NSTRUMENT_TYPE_CITOLE\020\374\003\022 \n\033INSTRUMENT_T" +
      "YPE_GRAND_PIANO\020\375\003\022\032\n\025INSTRUMENT_TYPE_KA" +
      "ZOO\020\376\003\022\036\n\031INSTRUMENT_TYPE_BALALAIKA\020\377\003\022 " +
      "\n\033INSTRUMENT_TYPE_MOHAN_VEENA\020\200\004\022#\n\036INST" +
      "RUMENT_TYPE_VICHITRA_VEENA\020\201\004\022\034\n\027INSTRUM" +
      "ENT_TYPE_CHATTER\020\202\004\022#\n\036INSTRUMENT_TYPE_P" +
      "OCKET_TRUMPET\020\203\004\022-\n(INSTRUMENT_TYPE_SPEC" +
      "TRASONICS_OMNISPHERE\020\204\004\022\032\n\025INSTRUMENT_TY" +
      "PE_BANHU\020\205\004\022!\n\034INSTRUMENT_TYPE_BASS_SACK" +
      "BUT\020\206\004\022\037\n\032INSTRUMENT_TYPE_SOUSAPHONE\020\207\004\022" +
      "$\n\037INSTRUMENT_TYPE_BODY_PERCUSSION\020\210\004\022\"\n" +
      "\035INSTRUMENT_TYPE_SOPRANO_SHAWM\020\211\004\022*\n%INS" +
      "TRUMENT_TYPE_PERCUSSION_INSTRUMENT\020\212\004\022\033\n" +
      "\026INSTRUMENT_TYPE_URUMEE\020\213\004\022 \n\033INSTRUMENT" +
      "_TYPE_SYNTH_BRASS\020\214\004\022\'\n\"INSTRUMENT_TYPE_" +
      "RENAISSANCE_GUITAR\020\215\004\022\031\n\024INSTRUMENT_TYPE" +
      "_COMB\020\216\004\022\035\n\030INSTRUMENT_TYPE_CLARINET\020\217\004\022" +
      "\033\n\026INSTRUMENT_TYPE_MIZMAR\020\220\004\022.\n)INSTRUME" +
      "NT_TYPE_CYMBAL__FRB___RIDE__BRB__\020\221\004\022\034\n\027" +
      "INSTRUMENT_TYPE_TIMPANI\020\222\004\022\035\n\030INSTRUMENT" +
      "_TYPE_TRIANGLE\020\223\004\022\032\n\025INSTRUMENT_TYPE_FLU" +
      "TE\020\224\004\022\034\n\027INSTRUMENT_TYPE_BAGLAMA\020\225\004\022$\n\037I" +
      "NSTRUMENT_TYPE_MEDIEVAL_FIDDLE\020\226\004\022\034\n\027INS" +
      "TRUMENT_TYPE_VIHUELA\020\227\004\022\031\n\024INSTRUMENT_TY" +
      "PE_BATA\020\230\004\022$\n\037INSTRUMENT_TYPE_NATURAL_TR" +
      "UMPET\020\231\004\022/\n*INSTRUMENT_TYPE_FEMALE_BACKG" +
      "ROUND_VOCALIST\020\232\004\022!\n\034INSTRUMENT_TYPE_TOU" +
      "CH_GUITAR\020\233\004\022 \n\033INSTRUMENT_TYPE_HECKELPH" +
      "ONE\020\234\004\022\034\n\027INSTRUMENT_TYPE_TRUMPET\020\235\004\022 \n\033" +
      "INSTRUMENT_TYPE_STEEL_DRUMS\020\236\004\022\030\n\023INSTRU" +
      "MENT_TYPE_OUD\020\237\004\022\033\n\026INSTRUMENT_TYPE_TIMP" +
      "LE\020\240\004\022\036\n\031INSTRUMENT_TYPE_BIRD_SONG\020\241\004\022#\n" +
      "\036INSTRUMENT_TYPE_ELECTRIC_VIOLA\020\242\004\0224\n/IN" +
      "STRUMENT_TYPE_BASS_DRUM__FRB___CONCERT__" +
      "BRB__\020\243\004\022\032\n\025INSTRUMENT_TYPE_ROLMO\020\244\004\022$\n\037" +
      "INSTRUMENT_TYPE_BAROQUE_BASSOON\020\245\004\022\036\n\031IN" +
      "STRUMENT_TYPE_LAUNEDDAS\020\246\004\022\034\n\027INSTRUMENT" +
      "_TYPE_XAPHOON\020\247\004\022\034\n\027INSTRUMENT_TYPE_MARA" +
      "CAS\020\250\004\022\031\n\024INSTRUMENT_TYPE_OBOE\020\251\004\022\"\n\035INS" +
      "TRUMENT_TYPE_TOY_ACCORDION\020\252\004\022\032\n\025INSTRUM" +
      "ENT_TYPE_REGAL\020\253\004\022\034\n\027INSTRUMENT_TYPE_SAN" +
      "TOOR\020\254\004\022\034\n\027INSTRUMENT_TYPE_DAEGEUM\020\255\004\022\033\n" +
      "\026INSTRUMENT_TYPE_SORDUN\020\256\004\022\035\n\030INSTRUMENT" +
      "_TYPE_CHARANGO\020\257\004\022\035\n\030INSTRUMENT_TYPE_CAL" +
      "ABASH\020\260\004\022\034\n\027INSTRUMENT_TYPE_FISCORN\020\261\004\022\036" +
      "\n\031INSTRUMENT_TYPE_SLAPSTICK\020\262\004\022\033\n\026INSTRU" +
      "MENT_TYPE_VI_TAR\020\263\004\022\032\n\025INSTRUMENT_TYPE_G" +
      "IZMO\020\264\004\022!\n\034INSTRUMENT_TYPE_WILLOW_FLUTE\020" +
      "\265\004\022\036\n\031INSTRUMENT_TYPE_BREAKBEAT\020\266\004\022\031\n\024IN" +
      "STRUMENT_TYPE_KHIM\020\267\004\022\032\n\025INSTRUMENT_TYPE" +
      "_VEENA\020\270\004\022\"\n\035INSTRUMENT_TYPE_BAROQUE_CEL" +
      "LO\020\271\004\022\037\n\032INSTRUMENT_TYPE_LITHOPHONE\020\272\004\022 " +
      "\n\033INSTRUMENT_TYPE_DOUBLE_BASS\020\273\004\022)\n$INST" +
      "RUMENT_TYPE_ACOUSTIC_BASS_GUITAR\020\274\004\022!\n\034I" +
      "NSTRUMENT_TYPE_PADDLE_DRUMS\020\275\004\022)\n$INSTRU" +
      "MENT_TYPE_UNINTENDED_ARTIFACTS\020\276\004\022\'\n\"INS" +
      "TRUMENT_TYPE_AFRICAN_PERCUSSION\020\277\004\022\032\n\025IN" +
      "STRUMENT_TYPE_CUICA\020\300\004\0221\n,INSTRUMENT_TYP" +
      "E_TAR__FRB___PERCUSSION__BRB__\020\301\004\022\032\n\025INS" +
      "TRUMENT_TYPE_TARKA\020\302\004\022%\n INSTRUMENT_TYPE" +
      "_SOPRANO_RECORDER\020\303\004\022!\n\034INSTRUMENT_TYPE_" +
      "GLOCKENSPIEL\020\304\004\022\037\n\032INSTRUMENT_TYPE_FLUGE" +
      "LHORN\020\305\004\022&\n!INSTRUMENT_TYPE_WELSH_TRIPLE" +
      "_HARP\020\306\004\022 \n\033INSTRUMENT_TYPE_ANDEAN_HARP\020" +
      "\307\004\022\036\n\031INSTRUMENT_TYPE_FLAGEOLET\020\310\004\022\031\n\024IN" +
      "STRUMENT_TYPE_TAAL\020\311\004\022$\n\037INSTRUMENT_TYPE" +
      "_SOPRANO_DULCIAN\020\312\004\022\033\n\026INSTRUMENT_TYPE_G" +
      "UITAR\020\313\004\022!\n\034INSTRUMENT_TYPE_WIND_MACHINE" +
      "\020\314\004\022\"\n\035INSTRUMENT_TYPE_BAROQUE_FLUTE\020\315\004\022" +
      "\031\n\024INSTRUMENT_TYPE_BAWU\020\316\004\022\"\n\035INSTRUMENT" +
      "_TYPE_KEYED_TRUMPET\020\317\004\022\035\n\030INSTRUMENT_TYP" +
      "E_DRUM_KIT\020\320\004\022\"\n\035INSTRUMENT_TYPE_POTS_AN" +
      "D_PANS\020\321\004\022\033\n\026INSTRUMENT_TYPE_MAZHAR\020\322\004\022\032" +
      "\n\025INSTRUMENT_TYPE_TABLA\020\323\004\022\030\n\023INSTRUMENT" +
      "_TYPE_DAF\020\324\004\022\032\n\025INSTRUMENT_TYPE_ANVIL\020\325\004" +
      "\022 \n\033INSTRUMENT_TYPE_DRUM_STICKS\020\326\004\022\032\n\025IN" +
      "STRUMENT_TYPE_RABEL\020\327\004\022\033\n\026INSTRUMENT_TYP" +
      "E_SPINET\020\330\004\022\037\n\032INSTRUMENT_TYPE_TENOR_DRU" +
      "M\020\331\004\022\'\n\"INSTRUMENT_TYPE_PERCUSSION_SECTI" +
      "ON\020\332\004\022\036\n\031INSTRUMENT_TYPE_ACCORDION\020\333\004\022\037\n" +
      "\032INSTRUMENT_TYPE_SIMSIMIYYA\020\334\004\022\035\n\030INSTRU" +
      "MENT_TYPE_SHAMISEN\020\335\004\022#\n\036INSTRUMENT_TYPE" +
      "_KHONG_WONG_YAI\020\336\004\022\034\n\027INSTRUMENT_TYPE_DA" +
      "N_BAU\020\337\004\022#\n\036INSTRUMENT_TYPE_SOPRANO_CORN" +
      "ET\020\340\004\022\033\n\026INSTRUMENT_TYPE_SINTIR\020\341\004\022\035\n\030IN" +
      "STRUMENT_TYPE_MELODICA\020\342\004\022#\n\036INSTRUMENT_" +
      "TYPE_ELECTRIC_CELLO\020\343\004\022)\n$INSTRUMENT_TYP" +
      "E_CONTRA_ALTO_CLARINET\020\344\004\022%\n INSTRUMENT_" +
      "TYPE_WIRE_STRUNG_HARP\020\345\004\022\032\n\025INSTRUMENT_T" +
      "YPE_SAUNG\020\346\004\022\037\n\032INSTRUMENT_TYPE_TENOR_VI" +
      "OL\020\347\004\022\037\n\032INSTRUMENT_TYPE_FOOT_STOMP\020\350\004\022\034" +
      "\n\027INSTRUMENT_TYPE_THEORBO\020\351\004\022\035\n\030INSTRUME" +
      "NT_TYPE_CHOCALHO\020\352\004\022\"\n\035INSTRUMENT_TYPE_S" +
      "OUND_EFFECTS\020\353\004\022!\n\034INSTRUMENT_TYPE_BASS_" +
      "CITTERN\020\354\004\022\036\n\031INSTRUMENT_TYPE_SYNTH_F_X\020" +
      "\355\004\022!\n\034INSTRUMENT_TYPE_LOWREY_ORGAN\020\356\004\022\034\n" +
      "\027INSTRUMENT_TYPE_SISTRUM\020\357\004\022\033\n\026INSTRUMEN" +
      "T_TYPE_TOMPAK\020\360\004\022\"\n\035INSTRUMENT_TYPE_BASS" +
      "_TROMBONE\020\361\004\022\034\n\027INSTRUMENT_TYPE_FLOYERA\020" +
      "\362\004\022\035\n\030INSTRUMENT_TYPE_KNUCKLES\020\363\004\022\033\n\026INS" +
      "TRUMENT_TYPE_CABASA\020\364\004\022!\n\034INSTRUMENT_TYP" +
      "E_DOBRO_GUITAR\020\365\004\022\035\n\030INSTRUMENT_TYPE_CIM" +
      "BALOM\020\366\004\022\034\n\027INSTRUMENT_TYPE_TZOURAS\020\367\004\022\032" +
      "\n\025INSTRUMENT_TYPE_BOZOQ\020\370\004\022\034\n\027INSTRUMENT" +
      "_TYPE_MARIMBA\020\371\004\022\031\n\024INSTRUMENT_TYPE_ZEZE" +
      "\020\372\004\022#\n\036INSTRUMENT_TYPE_TENOR_RECORDER\020\373\004" +
      "\022\036\n\031INSTRUMENT_TYPE_MUSIC_BOX\020\374\004\022\037\n\032INST" +
      "RUMENT_TYPE_FORTEPIANO\020\375\004\022%\n INSTRUMENT_" +
      "TYPE_PICCOLO_CLARINET\020\376\004\022\033\n\026INSTRUMENT_T" +
      "YPE_SPOONS\020\377\004\022 \n\033INSTRUMENT_TYPE_HAND_CH" +
      "IMES\020\200\005\022\033\n\026INSTRUMENT_TYPE_MIJWIZ\020\201\005\022\034\n\027" +
      "INSTRUMENT_TYPE_RACKETT\020\202\005\022)\n$INSTRUMENT" +
      "_TYPE_ELECTRIC_BASS_GUITAR\020\203\005\022!\n\034INSTRUM" +
      "ENT_TYPE_PICCOLO_BASS\020\204\005\022\030\n\023INSTRUMENT_T" +
      "YPE_UDU\020\205\005\022%\n INSTRUMENT_TYPE_OTHER_INST" +
      "RUMENT\020\206\005\022!\n\034INSTRUMENT_TYPE_BASS_TRUMPE" +
      "T\020\207\005\022\034\n\027INSTRUMENT_TYPE_BANSURI\020\210\005\022!\n\034IN" +
      "STRUMENT_TYPE_SQUARE_PIANO\020\211\005\022 \n\033INSTRUM" +
      "ENT_TYPE_HARPSICHORD\020\212\005\022#\n\036INSTRUMENT_TY" +
      "PE_IRISH_BOUZOUKI\020\213\005\022\033\n\026INSTRUMENT_TYPE_" +
      "RATTLE\020\214\005\022!\n\034INSTRUMENT_TYPE_ENGLISH_HOR" +
      "N\020\215\005\022\033\n\026INSTRUMENT_TYPE_SHOFAR\020\216\005\022\036\n\031INS" +
      "TRUMENT_TYPE_RAINSTICK\020\217\005\022\035\n\030INSTRUMENT_" +
      "TYPE_CARILLON\020\220\005\022\035\n\030INSTRUMENT_TYPE_CORN" +
      "ETTO\020\221\005\022(\n#INSTRUMENT_TYPE_GREAT_BASS_RE" +
      "CORDER\020\222\005\022 \n\033INSTRUMENT_TYPE_TEMPLE_BELL" +
      "\020\223\005\022\036\n\031INSTRUMENT_TYPE_MELLOTRON\020\224\005\022!\n\034I" +
      "NSTRUMENT_TYPE_OBOE_D_AMORE\020\225\005\022 \n\033INSTRU" +
      "MENT_TYPE_CONCH_SHELL\020\226\005\022.\n)INSTRUMENT_T" +
      "YPE_12__MINUS___STRING_GUITAR\020\227\005\022\034\n\027INST" +
      "RUMENT_TYPE_SERPENT\020\230\005\022#\n\036INSTRUMENT_TYP" +
      "E_KHONG_WONG_LEK\020\231\005\022!\n\034INSTRUMENT_TYPE_C" +
      "HURCH_BELLS\020\232\005\022\030\n\023INSTRUMENT_TYPE_SAW\020\233\005" +
      "\022\034\n\027INSTRUMENT_TYPE_PANDURA\020\234\005\022#\n\036INSTRU" +
      "MENT_TYPE_BAROQUE_GUITAR\020\235\005\022\"\n\035INSTRUMEN" +
      "T_TYPE_ELECTRIC_HARP\020\236\005\022\034\n\027INSTRUMENT_TY" +
      "PE_BARYTON\020\237\005\022$\n\037INSTRUMENT_TYPE_HOHNER_" +
      "GUITARET\020\240\005\022\035\n\030INSTRUMENT_TYPE_RONDADOR\020" +
      "\241\005\022\031\n\024INSTRUMENT_TYPE_KUGO\020\242\005\022\"\n\035INSTRUM" +
      "ENT_TYPE_BAHIAN_GUITAR\020\243\005\022\"\n\035INSTRUMENT_" +
      "TYPE_HI_HAT_CYMBAL\020\244\005\022!\n\034INSTRUMENT_TYPE" +
      "_WOOD_TRUMPET\020\245\005\022\034\n\027INSTRUMENT_TYPE_GAME" +
      "LAN\020\246\005\022\036\n\031INSTRUMENT_TYPE_ALTO_HORN\020\247\005\022\033" +
      "\n\026INSTRUMENT_TYPE_CLAVES\020\250\005\022\031\n\024INSTRUMEN" +
      "T_TYPE_VIOL\020\251\005\022\034\n\027INSTRUMENT_TYPE_FLABIO" +
      "L\020\252\005\022$\n\037INSTRUMENT_TYPE_DOUBLEBASS_VIOL\020" +
      "\253\005\022-\n(INSTRUMENT_TYPE_MAGNETIC_TAPE_TREA" +
      "TMENTS\020\254\005\022%\n INSTRUMENT_TYPE_LAP_STEEL_G" +
      "UITAR\020\255\005\022 \n\033INSTRUMENT_TYPE_BASSET_HORN\020" +
      "\256\005\022\036\n\031INSTRUMENT_TYPE_CHALUMEAU\020\257\005\022\035\n\030IN" +
      "STRUMENT_TYPE_TIMBALES\020\260\005\022!\n\034INSTRUMENT_" +
      "TYPE_BICYCLE_PUMP\020\261\005\022$\n\037INSTRUMENT_TYPE_" +
      "GLASS_HARMONICA\020\262\005\022\033\n\026INSTRUMENT_TYPE_JA" +
      "KHAY\020\263\005\022\032\n\025INSTRUMENT_TYPE_TIPLE\020\264\005\022\031\n\024I" +
      "NSTRUMENT_TYPE_FROG\020\265\005\022\032\n\025INSTRUMENT_TYP" +
      "E_TUMBI\020\266\005\022\037\n\032INSTRUMENT_TYPE_SWARMANDAL" +
      "\020\267\005\022\030\n\023INSTRUMENT_TYPE_LUR\020\270\005\022\031\n\024INSTRUM" +
      "ENT_TYPE_TRES\020\271\005\022\"\n\035INSTRUMENT_TYPE_HAMM" +
      "OND_ORGAN\020\272\005\022$\n\037INSTRUMENT_TYPE_PLUCKED_" +
      "STRINGS\020\273\005\022#\n\036INSTRUMENT_TYPE_STRING_SEC" +
      "TION\020\274\005\022\034\n\027INSTRUMENT_TYPE_ENNANGA\020\275\005\022\"\n" +
      "\035INSTRUMENT_TYPE_CONTRABASSOON\020\276\005\022\"\n\035INS" +
      "TRUMENT_TYPE_UPRIGHT_PIANO\020\277\005\022\033\n\026INSTRUM" +
      "ENT_TYPE_DOMBRA\020\300\005\022%\n INSTRUMENT_TYPE_BA" +
      "ROQUE_RECORDER\020\301\005\022$\n\037INSTRUMENT_TYPE_ACO" +
      "USTIC_GUITAR\020\302\005\022\037\n\032INSTRUMENT_TYPE_BASS_" +
      "REBEC\020\303\005*\235\310\001\n\030Iso639Part12LanguageCode\022#" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_LUI\020\000\022#\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_NYN\020\001\022#\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_MWL\020\002\022#\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_NYM\020\003\022#\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_BAD\020\004\022#\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_LUN\020\005\022#\n\037ISO639_PART12_LA" +
      "NGUAGE_CODE_NYO\020\006\022#\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_FIJ\020\007\022#\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_LUO\020\010\022#\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_FIL\020\t\022#\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "HMN\020\n\022#\n\037ISO639_PART12_LANGUAGE_CODE_MWR" +
      "\020\013\022#\n\037ISO639_PART12_LANGUAGE_CODE_FIN\020\014\022" +
      "#\n\037ISO639_PART12_LANGUAGE_CODE_DEL\020\r\022#\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_HMO\020\016\022#\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_BAI\020\017\022#\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_LUS\020\020\022#\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_BAL\020\021\022#\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_DEN\020\022\022#\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_BAK\020\023\022#\n\037ISO639_PART12_LANG" +
      "UAGE_CODE_BAN\020\024\022#\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_UGA\020\025\022#\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_BAM\020\026\022#\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_VIE\020\027\022#\n\037ISO639_PART12_LANGUAGE_CODE_FI" +
      "U\020\030\022#\n\037ISO639_PART12_LANGUAGE_CODE_BAT\020\031" +
      "\022#\n\037ISO639_PART12_LANGUAGE_CODE_DEU\020\032\022#\n" +
      "\037ISO639_PART12_LANGUAGE_CODE_BAS\020\033\022#\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_EGY\020\034\022#\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_TEL\020\035\022#\n\037ISO639_P" +
      "ART12_LANGUAGE_CODE_RAJ\020\036\022#\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_JRB\020\037\022#\n\037ISO639_PART12_" +
      "LANGUAGE_CODE_NZI\020 \022#\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_GLA\020!\022#\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_YOR\020\"\022#\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_TEM\020#\022#\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_SCO\020$\022#\n\037ISO639_PART12_LANGUAGE_CODE_S" +
      "CN\020%\022\"\n\036ISO639_PART12_LANGUAGE_CODE_AA\020&" +
      "\022#\n\037ISO639_PART12_LANGUAGE_CODE_RAP\020\'\022#\n" +
      "\037ISO639_PART12_LANGUAGE_CODE_TER\020(\022\"\n\036IS" +
      "O639_PART12_LANGUAGE_CODE_AB\020)\022#\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_GLE\020*\022#\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_RAR\020+\022#\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_TET\020,\022#\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_GLG\020-\022\"\n\036ISO639_PART12_LANG" +
      "UAGE_CODE_AE\020.\022\"\n\036ISO639_PART12_LANGUAGE" +
      "_CODE_AF\020/\022#\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_IPK\0200\022\"\n\036ISO639_PART12_LANGUAGE_CODE_A" +
      "K\0201\022\"\n\036ISO639_PART12_LANGUAGE_CODE_AM\0202\022" +
      "\"\n\036ISO639_PART12_LANGUAGE_CODE_AN\0203\022#\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_GLV\0204\022\"\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_AR\0205\022\"\n\036ISO639_P" +
      "ART12_LANGUAGE_CODE_AS\0206\022#\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_MYA\0207\022\"\n\036ISO639_PART12_L" +
      "ANGUAGE_CODE_AV\0208\022#\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_YPK\0209\022#\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_KUA\020:\022\"\n\036ISO639_PART12_LANGUAGE_CO" +
      "DE_AY\020;\022#\n\037ISO639_PART12_LANGUAGE_CODE_W" +
      "LN\020<\022\"\n\036ISO639_PART12_LANGUAGE_CODE_AZ\020=" +
      "\022\"\n\036ISO639_PART12_LANGUAGE_CODE_BA\020>\022#\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_CEB\020?\022#\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_KUM\020@\022\"\n\036ISO639" +
      "_PART12_LANGUAGE_CODE_BE\020A\022#\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_GMH\020B\022#\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_MYN\020C\022\"\n\036ISO639_PART12_LA" +
      "NGUAGE_CODE_BG\020D\022\"\n\036ISO639_PART12_LANGUA" +
      "GE_CODE_BH\020E\022\"\n\036ISO639_PART12_LANGUAGE_C" +
      "ODE_BI\020F\022#\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "KUR\020G\022\"\n\036ISO639_PART12_LANGUAGE_CODE_BM\020" +
      "H\022#\n\037ISO639_PART12_LANGUAGE_CODE_CEL\020I\022#" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_KUT\020J\022#\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_MYV\020K\022\"\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_BN\020L\022\"\n\036ISO639_P" +
      "ART12_LANGUAGE_CODE_BO\020M\022#\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_DGR\020N\022\"\n\036ISO639_PART12_L" +
      "ANGUAGE_CODE_BR\020O\022#\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_CES\020P\022\"\n\036ISO639_PART12_LANGUAGE" +
      "_CODE_BS\020Q\022#\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_UIG\020R\022#\n\037ISO639_PART12_LANGUAGE_CODE_A" +
      "AR\020S\022#\n\037ISO639_PART12_LANGUAGE_CODE_TGL\020" +
      "T\022#\n\037ISO639_PART12_LANGUAGE_CODE_TGK\020U\022#" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_IRA\020V\022#\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_SEM\020W\022#\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_SEL\020X\022\"\n\036ISO639_" +
      "PART12_LANGUAGE_CODE_CA\020Y\022\"\n\036ISO639_PART" +
      "12_LANGUAGE_CODE_CE\020Z\022\"\n\036ISO639_PART12_L" +
      "ANGUAGE_CODE_CH\020[\022#\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_IRO\020\\\022#\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_ABK\020]\022\"\n\036ISO639_PART12_LANGUAGE_CO" +
      "DE_CO\020^\022#\n\037ISO639_PART12_LANGUAGE_CODE_T" +
      "HA\020_\022\"\n\036ISO639_PART12_LANGUAGE_CODE_CR\020`" +
      "\022\"\n\036ISO639_PART12_LANGUAGE_CODE_CS\020a\022\"\n\036" +
      "ISO639_PART12_LANGUAGE_CODE_CU\020b\022\"\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_CV\020c\022\"\n\036ISO639_P" +
      "ART12_LANGUAGE_CODE_CY\020d\022#\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_EKA\020e\022\"\n\036ISO639_PART12_L" +
      "ANGUAGE_CODE_DA\020f\022\"\n\036ISO639_PART12_LANGU" +
      "AGE_CODE_DE\020g\022#\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_GOH\020h\022#\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_ACE\020i\022#\n\037ISO639_PART12_LANGUAGE_CODE_I" +
      "SL\020j\022#\n\037ISO639_PART12_LANGUAGE_CODE_BEJ\020" +
      "k\022#\n\037ISO639_PART12_LANGUAGE_CODE_ACH\020l\022#" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_GON\020m\022#\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_BEL\020n\022#\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_DIN\020o\022#\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_BEN\020p\022#\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_BEM\020q\022#\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_GOR\020r\022#\n\037ISO639_PART12_LA" +
      "NGUAGE_CODE_SGA\020s\022#\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_GOT\020t\022#\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_BER\020u\022#\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_DIV\020v\022#\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "ZUL\020w\022#\n\037ISO639_PART12_LANGUAGE_CODE_PAA" +
      "\020x\022\"\n\036ISO639_PART12_LANGUAGE_CODE_DV\020y\022#" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_ZUN\020z\022#\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_TIG\020{\022#\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_WOL\020|\022\"\n\036ISO639_" +
      "PART12_LANGUAGE_CODE_DZ\020}\022#\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_ITA\020~\022#\n\037ISO639_PART12_" +
      "LANGUAGE_CODE_PAG\020\177\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_PAL\020\200\001\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_SGN\020\201\001\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_PAN\020\202\001\022$\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_TIR\020\203\001\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_CHB\020\204\001\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_CHA\020\205\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_U" +
      "KR\020\206\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_PAM" +
      "\020\207\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_PAP\020\210" +
      "\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_ADA\020\211\001\022" +
      "#\n\036ISO639_PART12_LANGUAGE_CODE_EE\020\212\001\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_TIV\020\213\001\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_CHE\020\214\001\022$\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_CHG\020\215\001\022$\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_ELL\020\216\001\022$\n\037ISO639_P" +
      "ART12_LANGUAGE_CODE_PAU\020\217\001\022#\n\036ISO639_PAR" +
      "T12_LANGUAGE_CODE_EL\020\220\001\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_CHK\020\221\001\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_CHN\020\222\001\022#\n\036ISO639_PART12_LAN" +
      "GUAGE_CODE_EN\020\223\001\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_CHM\020\224\001\022#\n\036ISO639_PART12_LANGUAGE" +
      "_CODE_EO\020\225\001\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_CHP\020\226\001\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_CHO\020\227\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_C" +
      "HR\020\230\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_HRV" +
      "\020\231\001\022#\n\036ISO639_PART12_LANGUAGE_CODE_ES\020\232\001" +
      "\022#\n\036ISO639_PART12_LANGUAGE_CODE_ET\020\233\001\022$\n" +
      "\037ISO639_PART12_LANGUAGE_CODE_CHV\020\234\001\022#\n\036I" +
      "SO639_PART12_LANGUAGE_CODE_EU\020\235\001\022$\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_ELX\020\236\001\022$\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_CHU\020\237\001\022$\n\037ISO639_P" +
      "ART12_LANGUAGE_CODE_CHY\020\240\001\022$\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_HSB\020\241\001\022$\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_ADY\020\242\001\022$\n\037ISO639_PART12_" +
      "LANGUAGE_CODE_SHN\020\243\001\022#\n\036ISO639_PART12_LA" +
      "NGUAGE_CODE_FA\020\244\001\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_BGC\020\245\001\022#\n\036ISO639_PART12_LANGUAG" +
      "E_CODE_FF\020\246\001\022#\n\036ISO639_PART12_LANGUAGE_C" +
      "ODE_FI\020\247\001\022#\n\036ISO639_PART12_LANGUAGE_CODE" +
      "_FJ\020\250\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_FO",
      "N\020\251\001\022#\n\036ISO639_PART12_LANGUAGE_CODE_FO\020\252" +
      "\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_UMB\020\253\001\022" +
      "#\n\036ISO639_PART12_LANGUAGE_CODE_FR\020\254\001\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_SID\020\255\001\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_VOL\020\256\001\022#\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_FY\020\257\001\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_TKL\020\260\001\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_GRB\020\261\001\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_SIO\020\262\001\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_SIN\020\263\001\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_GRC\020\264\001\022#\n\036ISO639_PART12_LAN" +
      "GUAGE_CODE_GA\020\265\001\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_VOT\020\266\001\022#\n\036ISO639_PART12_LANGUAGE" +
      "_CODE_GD\020\267\001\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_AFA\020\270\001\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_ENG\020\271\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_S" +
      "IT\020\272\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_GRN" +
      "\020\273\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_AFH\020\274" +
      "\001\022#\n\036ISO639_PART12_LANGUAGE_CODE_GL\020\275\001\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_ENM\020\276\001\022#\n\036" +
      "ISO639_PART12_LANGUAGE_CODE_GN\020\277\001\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_BHO\020\300\001\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_UND\020\301\001\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_AFR\020\302\001\022#\n\036ISO639_PA" +
      "RT12_LANGUAGE_CODE_GU\020\303\001\022#\n\036ISO639_PART1" +
      "2_LANGUAGE_CODE_GV\020\304\001\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_TLI\020\305\001\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_TLH\020\306\001\022#\n\036ISO639_PART12_LANGU" +
      "AGE_CODE_HA\020\307\001\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_ZXX\020\310\001\022#\n\036ISO639_PART12_LANGUAGE_C" +
      "ODE_HE\020\311\001\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_BIH\020\312\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_H" +
      "UN\020\313\001\022#\n\036ISO639_PART12_LANGUAGE_CODE_HI\020" +
      "\314\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_HUP\020\315\001" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_BIK\020\316\001\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_BIN\020\317\001\022#\n\036" +
      "ISO639_PART12_LANGUAGE_CODE_HO\020\320\001\022#\n\036ISO" +
      "639_PART12_LANGUAGE_CODE_HR\020\321\001\022$\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_GSW\020\322\001\022#\n\036ISO639_P" +
      "ART12_LANGUAGE_CODE_HT\020\323\001\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_BIS\020\324\001\022#\n\036ISO639_PART12" +
      "_LANGUAGE_CODE_HU\020\325\001\022$\n\037ISO639_PART12_LA" +
      "NGUAGE_CODE_TMH\020\326\001\022#\n\036ISO639_PART12_LANG" +
      "UAGE_CODE_HY\020\327\001\022#\n\036ISO639_PART12_LANGUAG" +
      "E_CODE_HZ\020\330\001\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_FRA\020\331\001\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_OCI\020\332\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "NAH\020\333\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_NA" +
      "I\020\334\001\022#\n\036ISO639_PART12_LANGUAGE_CODE_IA\020\335" +
      "\001\022#\n\036ISO639_PART12_LANGUAGE_CODE_ID\020\336\001\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_PEO\020\337\001\022#\n\036" +
      "ISO639_PART12_LANGUAGE_CODE_IE\020\340\001\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_NAP\020\341\001\022#\n\036ISO63" +
      "9_PART12_LANGUAGE_CODE_IG\020\342\001\022#\n\036ISO639_P" +
      "ART12_LANGUAGE_CODE_II\020\343\001\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_FRM\020\344\001\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_ZZA\020\345\001\022#\n\036ISO639_PART12_L" +
      "ANGUAGE_CODE_IK\020\346\001\022$\n\037ISO639_PART12_LANG" +
      "UAGE_CODE_NAV\020\347\001\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_FRO\020\350\001\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_NAU\020\351\001\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_EPO\020\352\001\022#\n\036ISO639_PART12_LANGUAGE_COD" +
      "E_IO\020\353\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_F" +
      "RS\020\354\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_FRR" +
      "\020\355\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_SLA\020\356" +
      "\001\022#\n\036ISO639_PART12_LANGUAGE_CODE_IS\020\357\001\022#" +
      "\n\036ISO639_PART12_LANGUAGE_CODE_IT\020\360\001\022$\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_FRY\020\361\001\022#\n\036ISO" +
      "639_PART12_LANGUAGE_CODE_IU\020\362\001\022$\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_SLK\020\363\001\022#\n\036ISO639_P" +
      "ART12_LANGUAGE_CODE_JA\020\364\001\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_CMC\020\365\001\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_NBL\020\366\001\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_SLV\020\367\001\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_GUJ\020\370\001\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_DOI\020\371\001\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_SMA\020\372\001\022$\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_AIN\020\373\001\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_SME\020\374\001\022#\n\036ISO639_PART12_LANGUAGE_CODE" +
      "_JV\020\375\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_TO" +
      "G\020\376\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_SMI\020" +
      "\377\001\022$\n\037ISO639_PART12_LANGUAGE_CODE_MAD\020\200\002" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_SMJ\020\201\002\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_TON\020\202\002\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_MAG\020\203\002\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_SMO\020\204\002\022$\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_MAI\020\205\002\022$\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_MAH\020\206\002\022$\n\037ISO639_P" +
      "ART12_LANGUAGE_CODE_SMN\020\207\002\022#\n\036ISO639_PAR" +
      "T12_LANGUAGE_CODE_KA\020\210\002\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_BLA\020\211\002\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_MAK\020\212\002\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_SMS\020\213\002\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_MAL\020\214\002\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_MAN\020\215\002\022#\n\036ISO639_PART12_LANGUAGE_" +
      "CODE_KG\020\216\002\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_MAP\020\217\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_" +
      "KI\020\220\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_MAS" +
      "\020\221\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_KJ\020\222\002" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_MAR\020\223\002\022#" +
      "\n\036ISO639_PART12_LANGUAGE_CODE_KK\020\224\002\022#\n\036I" +
      "SO639_PART12_LANGUAGE_CODE_KL\020\225\002\022#\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_KM\020\226\002\022#\n\036ISO639_" +
      "PART12_LANGUAGE_CODE_KN\020\227\002\022#\n\036ISO639_PAR" +
      "T12_LANGUAGE_CODE_KO\020\230\002\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_URD\020\231\002\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_CNR\020\232\002\022#\n\036ISO639_PART12_LAN" +
      "GUAGE_CODE_KR\020\233\002\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_SNA\020\234\002\022#\n\036ISO639_PART12_LANGUAGE" +
      "_CODE_KS\020\235\002\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_SND\020\236\002\022#\n\036ISO639_PART12_LANGUAGE_CODE" +
      "_KU\020\237\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_KV" +
      "\020\240\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_KW\020\241\002" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_TPI\020\242\002\022#" +
      "\n\036ISO639_PART12_LANGUAGE_CODE_KY\020\243\002\022$\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_NDE\020\244\002\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_PHI\020\245\002\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_SNK\020\246\002\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_HYE\020\247\002\022#\n\036ISO639_PA" +
      "RT12_LANGUAGE_CODE_LA\020\250\002\022$\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_AKA\020\251\002\022#\n\036ISO639_PART12_" +
      "LANGUAGE_CODE_LB\020\252\002\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_PHN\020\253\002\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_NDO\020\254\002\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_GWI\020\255\002\022#\n\036ISO639_PART12_LANGUAGE_" +
      "CODE_LG\020\256\002\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_FUL\020\257\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "NDS\020\260\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_LI" +
      "\020\261\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_AKK\020\262" +
      "\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_LN\020\263\002\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_FUR\020\264\002\022#\n\036" +
      "ISO639_PART12_LANGUAGE_CODE_LO\020\265\002\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_COP\020\266\002\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_COS\020\267\002\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_EST\020\270\002\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_COR\020\271\002\022#\n\036ISO639_PART" +
      "12_LANGUAGE_CODE_LT\020\272\002\022#\n\036ISO639_PART12_" +
      "LANGUAGE_CODE_LU\020\273\002\022#\n\036ISO639_PART12_LAN" +
      "GUAGE_CODE_LV\020\274\002\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_SOG\020\275\002\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_LAD\020\276\002\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_SOM\020\277\002\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_DRA\020\300\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "LAH\020\301\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_SO" +
      "N\020\302\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_NEP\020" +
      "\303\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_CPF\020\304\002" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_SOT\020\305\002\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_CPE\020\306\002\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_LAM\020\307\002\022#\n\036IS" +
      "O639_PART12_LANGUAGE_CODE_MG\020\310\002\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_LAO\020\311\002\022#\n\036ISO639_" +
      "PART12_LANGUAGE_CODE_MH\020\312\002\022$\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_ALE\020\313\002\022#\n\036ISO639_PART1" +
      "2_LANGUAGE_CODE_MI\020\314\002\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_ALG\020\315\002\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_LAT\020\316\002\022#\n\036ISO639_PART12_LANGU" +
      "AGE_CODE_MK\020\317\002\022#\n\036ISO639_PART12_LANGUAGE" +
      "_CODE_ML\020\320\002\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_LAV\020\321\002\022#\n\036ISO639_PART12_LANGUAGE_CODE" +
      "_MN\020\322\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_NE" +
      "W\020\323\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_MO\020\324" +
      "\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_CPP\020\325\002\022" +
      "$\n\037ISO639_PART12_LANGUAGE_CODE_SPA\020\326\002\022#\n" +
      "\036ISO639_PART12_LANGUAGE_CODE_MR\020\327\002\022#\n\036IS" +
      "O639_PART12_LANGUAGE_CODE_MS\020\330\002\022#\n\036ISO63" +
      "9_PART12_LANGUAGE_CODE_MT\020\331\002\022$\n\037ISO639_P" +
      "ART12_LANGUAGE_CODE_ALT\020\332\002\022$\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_BNT\020\333\002\022#\n\036ISO639_PART1" +
      "2_LANGUAGE_CODE_MY\020\334\002\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_MDF\020\335\002\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_DSB\020\336\002\022#\n\036ISO639_PART12_LANGU" +
      "AGE_CODE_NA\020\337\002\022#\n\036ISO639_PART12_LANGUAGE" +
      "_CODE_NB\020\340\002\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_BOD\020\341\002\022#\n\036ISO639_PART12_LANGUAGE_CODE" +
      "_ND\020\342\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_NE" +
      "\020\343\002\022#\n\036ISO639_PART12_LANGUAGE_CODE_NG\020\344\002" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_MDR\020\345\002\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_AMH\020\346\002\022#\n\036" +
      "ISO639_PART12_LANGUAGE_CODE_NL\020\347\002\022#\n\036ISO" +
      "639_PART12_LANGUAGE_CODE_NN\020\350\002\022#\n\036ISO639" +
      "_PART12_LANGUAGE_CODE_NO\020\351\002\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_EUS\020\352\002\022#\n\036ISO639_PART" +
      "12_LANGUAGE_CODE_NR\020\353\002\022$\n\037ISO639_PART12_" +
      "LANGUAGE_CODE_ROA\020\354\002\022$\n\037ISO639_PART12_LA" +
      "NGUAGE_CODE_BOS\020\355\002\022#\n\036ISO639_PART12_LANG" +
      "UAGE_CODE_NV\020\356\002\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_ROH\020\357\002\022$\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_SQI\020\360\002\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_KAA\020\361\002\022#\n\036ISO639_PART12_LANGUAGE_CODE" +
      "_NY\020\362\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_TS" +
      "I\020\363\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_KAC\020" +
      "\364\002\022$\n\037ISO639_PART12_LANGUAGE_CODE_KAB\020\365\002" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_TSN\020\366\002\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_RON\020\367\002\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_TSO\020\370\002\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_ROM\020\371\002\022#\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_OC\020\372\002\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_KAM\020\373\002\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_CRE\020\374\002\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_KAL\020\375\002\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_MEN\020\376\002\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_CRH\020\377\002\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_KAN\020\200\003\022#\n\036ISO639_PART12_LANGU" +
      "AGE_CODE_OJ\020\201\003\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_ANG\020\202\003\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_KAS\020\203\003\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_KAR\020\204\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "KAU\020\205\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_OM" +
      "\020\206\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_KAT\020\207" +
      "\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_CRP\020\210\003\022" +
      "$\n\037ISO639_PART12_LANGUAGE_CODE_KAW\020\211\003\022$\n" +
      "\037ISO639_PART12_LANGUAGE_CODE_ANP\020\212\003\022#\n\036I" +
      "SO639_PART12_LANGUAGE_CODE_OR\020\213\003\022#\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_OS\020\214\003\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_SRD\020\215\003\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_KAZ\020\216\003\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_PLI\020\217\003\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_KBD\020\220\003\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_SRN\020\221\003\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_OJI\020\222\003\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_SRP\020\223\003\022#\n\036ISO639_PART12_LANGUAG" +
      "E_CODE_PA\020\224\003\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_DUA\020\225\003\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_EWE\020\226\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "SRR\020\227\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_CS" +
      "B\020\230\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_PI\020\231" +
      "\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_PL\020\232\003\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_EWO\020\233\003\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_DUM\020\234\003\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_SSA\020\235\003\022#\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_PS\020\236\003\022#\n\036ISO639_" +
      "PART12_LANGUAGE_CODE_PT\020\237\003\022$\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_MGA\020\240\003\022$\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_NIA\020\241\003\022$\n\037ISO639_PART12_" +
      "LANGUAGE_CODE_NIC\020\242\003\022$\n\037ISO639_PART12_LA" +
      "NGUAGE_CODE_TUK\020\243\003\022$\n\037ISO639_PART12_LANG" +
      "UAGE_CODE_TUM\020\244\003\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_TUP\020\245\003\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_TUR\020\246\003\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_BRA\020\247\003\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_TUT\020\250\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "APA\020\251\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_BR" +
      "E\020\252\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_SSW\020" +
      "\253\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_NIU\020\254\003" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_JAV\020\255\003\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_LEZ\020\256\003\022#\n\036" +
      "ISO639_PART12_LANGUAGE_CODE_QU\020\257\003\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_ZAP\020\260\003\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_TVL\020\261\003\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_JBO\020\262\003\022#\n\036ISO639_PA" +
      "RT12_LANGUAGE_CODE_RM\020\263\003\022#\n\036ISO639_PART1" +
      "2_LANGUAGE_CODE_RN\020\264\003\022#\n\036ISO639_PART12_L" +
      "ANGUAGE_CODE_RO\020\265\003\022$\n\037ISO639_PART12_LANG" +
      "UAGE_CODE_CUS\020\266\003\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_QQA\020\267\003\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_QQC\020\270\003\022#\n\036ISO639_PART12_LANGUAGE_C" +
      "ODE_RU\020\271\003\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_QQB\020\272\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_Q" +
      "QE\020\273\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_RW\020" +
      "\274\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_QQD\020\275\003" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_ZBL\020\276\003\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_MIC\020\277\003\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_QQG\020\300\003\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_TWI\020\301\003\022$\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_QQF\020\302\003\022$\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_QQI\020\303\003\022$\n\037ISO639_P" +
      "ART12_LANGUAGE_CODE_SUK\020\304\003\022$\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_QQH\020\305\003\022$\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_QQJ\020\306\003\022$\n\037ISO639_PART12_" +
      "LANGUAGE_CODE_POL\020\307\003\022$\n\037ISO639_PART12_LA" +
      "NGUAGE_CODE_SUN\020\310\003\022#\n\036ISO639_PART12_LANG" +
      "UAGE_CODE_SA\020\311\003\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_PON\020\312\003\022#\n\036ISO639_PART12_LANGUAGE_" +
      "CODE_SC\020\313\003\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_SUS\020\314\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "ARA\020\315\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_SD" +
      "\020\316\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_POR\020\317" +
      "\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_SE\020\320\003\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_ARC\020\321\003\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_MIN\020\322\003\022#\n\036IS" +
      "O639_PART12_LANGUAGE_CODE_SG\020\323\003\022#\n\036ISO63" +
      "9_PART12_LANGUAGE_CODE_SI\020\324\003\022$\n\037ISO639_P" +
      "ART12_LANGUAGE_CODE_MIS\020\325\003\022$\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_ARG\020\326\003\022$\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_SUX\020\327\003\022#\n\036ISO639_PART12_" +
      "LANGUAGE_CODE_SK\020\330\003\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_BTK\020\331\003\022#\n\036ISO639_PART12_LANGU" +
      "AGE_CODE_SL\020\332\003\022#\n\036ISO639_PART12_LANGUAGE" +
      "_CODE_SM\020\333\003\022#\n\036ISO639_PART12_LANGUAGE_CO" +
      "DE_SN\020\334\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_" +
      "SO\020\335\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_UZB" +
      "\020\336\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_ARN\020\337" +
      "\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_SQ\020\340\003\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_ARP\020\341\003\022#\n\036" +
      "ISO639_PART12_LANGUAGE_CODE_SR\020\342\003\022#\n\036ISO" +
      "639_PART12_LANGUAGE_CODE_SS\020\343\003\022#\n\036ISO639" +
      "_PART12_LANGUAGE_CODE_ST\020\344\003\022#\n\036ISO639_PA" +
      "RT12_LANGUAGE_CODE_SU\020\345\003\022$\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_ART\020\346\003\022#\n\036ISO639_PART12_" +
      "LANGUAGE_CODE_SV\020\347\003\022#\n\036ISO639_PART12_LAN" +
      "GUAGE_CODE_SW\020\350\003\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_YAO\020\351\003\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_NLD\020\352\003\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_ARW\020\353\003\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_IBA\020\354\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "YAP\020\355\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_TA" +
      "\020\356\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_BUA\020\357" +
      "\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_TE\020\360\003\022#" +
      "\n\036ISO639_PART12_LANGUAGE_CODE_TG\020\361\003\022#\n\036I" +
      "SO639_PART12_LANGUAGE_CODE_TH\020\362\003\022#\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_TI\020\363\003\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_BUG\020\364\003\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_IBO\020\365\003\022#\n\036ISO639_PART" +
      "12_LANGUAGE_CODE_TK\020\366\003\022$\n\037ISO639_PART12_" +
      "LANGUAGE_CODE_BUL\020\367\003\022#\n\036ISO639_PART12_LA" +
      "NGUAGE_CODE_TL\020\370\003\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_ASM\020\371\003\022#\n\036ISO639_PART12_LANGUAG" +
      "E_CODE_TN\020\372\003\022#\n\036ISO639_PART12_LANGUAGE_C" +
      "ODE_TO\020\373\003\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_SWA\020\374\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_T" +
      "R\020\375\003\022#\n\036ISO639_PART12_LANGUAGE_CODE_TS\020\376" +
      "\003\022$\n\037ISO639_PART12_LANGUAGE_CODE_SWE\020\377\003\022" +
      "#\n\036ISO639_PART12_LANGUAGE_CODE_TT\020\200\004\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_DYU\020\201\004\022#\n\036IS" +
      "O639_PART12_LANGUAGE_CODE_TW\020\202\004\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_AST\020\203\004\022#\n\036ISO639_" +
      "PART12_LANGUAGE_CODE_TY\020\204\004\022$\n\037ISO639_PAR" +
      "T12_LANGUAGE_CODE_MKD\020\205\004\022$\n\037ISO639_PART1" +
      "2_LANGUAGE_CODE_RUN\020\206\004\022$\n\037ISO639_PART12_" +
      "LANGUAGE_CODE_MKH\020\207\004\022$\n\037ISO639_PART12_LA" +
      "NGUAGE_CODE_RUP\020\210\004\022$\n\037ISO639_PART12_LANG" +
      "UAGE_CODE_LIN\020\211\004\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_TYV\020\212\004\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_LIM\020\213\004\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_RUS\020\214\004\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_HAI\020\215\004\022#\n\036ISO639_PART12_LANGUAGE_CODE_" +
      "UG\020\216\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_ATH" +
      "\020\217\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_LIT\020\220" +
      "\004\022#\n\036ISO639_PART12_LANGUAGE_CODE_UK\020\221\004\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_DZO\020\222\004\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_HAT\020\223\004\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_HAU\020\224\004\022#\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_UR\020\225\004\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_PRA\020\226\004\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_HAW\020\227\004\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_XAL\020\230\004\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_ZEN\020\231\004\022#\n\036ISO639_PART12_L" +
      "ANGUAGE_CODE_UZ\020\232\004\022$\n\037ISO639_PART12_LANG" +
      "UAGE_CODE_KHA\020\233\004\022$\n\037ISO639_PART12_LANGUA" +
      "GE_CODE_MLG\020\234\004\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_PRO\020\235\004\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_KHI\020\236\004\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_NNO\020\237\004\022#\n\036ISO639_PART12_LANGUAGE_CODE_" +
      "VE\020\240\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_KHM" +
      "\020\241\004\022#\n\036ISO639_PART12_LANGUAGE_CODE_VI\020\242\004" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_KHO\020\243\004\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_MLT\020\244\004\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_IDO\020\245\004\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_CYM\020\246\004\022#\n\036ISO6" +
      "39_PART12_LANGUAGE_CODE_VO\020\247\004\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_SYC\020\250\004\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_AUS\020\251\004\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_NOB\020\252\004\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_QUE\020\253\004\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_GAA\020\254\004\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_NOG\020\255\004\022#\n\036ISO639_PART12_LANGU" +
      "AGE_CODE_WA\020\256\004\022$\n\037ISO639_PART12_LANGUAGE" +
      "_CODE_KIK\020\257\004\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_NON\020\260\004\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_AVA\020\261\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "SYR\020\262\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_NO" +
      "R\020\263\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_AVE\020" +
      "\264\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_KIN\020\265\004" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_KIR\020\266\004\022#" +
      "\n\036ISO639_PART12_LANGUAGE_CODE_WO\020\267\004\022$\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_ZGH\020\270\004\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_GAY\020\271\004\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_WAK\020\272\004\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_MNC\020\273\004\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_WAL\020\274\004\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_ORI\020\275\004\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_GBA\020\276\004\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_WAS\020\277\004\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_MNI\020\300\004\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_WAR\020\301\004\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_AWA\020\302\004\022$\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_ORM\020\303\004\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_MNO\020\304\004\022#\n\036ISO639_PART12_LANGUAGE_CODE" +
      "_XH\020\305\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_ZH" +
      "A\020\306\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_BYN\020" +
      "\307\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_OSA\020\310\004" +
      "\022$\n\037ISO639_PART12_LANGUAGE_CODE_ZHO\020\311\004\022$" +
      "\n\037ISO639_PART12_LANGUAGE_CODE_HEB\020\312\004\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_MOH\020\313\004\022$\n\037IS" +
      "O639_PART12_LANGUAGE_CODE_MON\020\314\004\022$\n\037ISO6" +
      "39_PART12_LANGUAGE_CODE_NQO\020\315\004\022$\n\037ISO639" +
      "_PART12_LANGUAGE_CODE_OSS\020\316\004\022$\n\037ISO639_P" +
      "ART12_LANGUAGE_CODE_PUS\020\317\004\022#\n\036ISO639_PAR" +
      "T12_LANGUAGE_CODE_YI\020\320\004\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_MOS\020\321\004\022$\n\037ISO639_PART12_L",
      "ANGUAGE_CODE_FAN\020\322\004\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_HER\020\323\004\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_FAO\020\324\004\022#\n\036ISO639_PART12_LANGUAG" +
      "E_CODE_YO\020\325\004\022$\n\037ISO639_PART12_LANGUAGE_C" +
      "ODE_FAT\020\326\004\022$\n\037ISO639_PART12_LANGUAGE_COD" +
      "E_FAS\020\327\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_" +
      "OTA\020\330\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_VA" +
      "I\020\331\004\022#\n\036ISO639_PART12_LANGUAGE_CODE_ZA\020\332" +
      "\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_OTO\020\333\004\022" +
      "#\n\036ISO639_PART12_LANGUAGE_CODE_ZH\020\334\004\022$\n\037" +
      "ISO639_PART12_LANGUAGE_CODE_AYM\020\335\004\022#\n\036IS" +
      "O639_PART12_LANGUAGE_CODE_ZU\020\336\004\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_KMB\020\337\004\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_III\020\340\004\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_LOL\020\341\004\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_NSO\020\342\004\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_AZE\020\343\004\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_GEM\020\344\004\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_YID\020\345\004\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_LOZ\020\346\004\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_GEZ\020\347\004\022$\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_WEN\020\350\004\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_MRI\020\351\004\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_IJO\020\352\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_M" +
      "SA\020\353\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_NUB" +
      "\020\354\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_XHO\020\355" +
      "\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_KOK\020\356\004\022" +
      "$\n\037ISO639_PART12_LANGUAGE_CODE_KOM\020\357\004\022$\n" +
      "\037ISO639_PART12_LANGUAGE_CODE_HIL\020\360\004\022$\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_KON\020\361\004\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_HIN\020\362\004\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_HIM\020\363\004\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_KOS\020\364\004\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_KOR\020\365\004\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_DAK\020\366\004\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_DAN\020\367\004\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_IKU\020\370\004\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_HIT\020\371\004\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_DAR\020\372\004\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_TAH\020\373\004\022$\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_DAY\020\374\004\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_TAI\020\375\004\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_VEN\020\376\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_T" +
      "AM\020\377\004\022$\n\037ISO639_PART12_LANGUAGE_CODE_KPE" +
      "\020\200\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_ILE\020\201" +
      "\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_TAT\020\202\005\022" +
      "$\n\037ISO639_PART12_LANGUAGE_CODE_ILO\020\203\005\022$\n" +
      "\037ISO639_PART12_LANGUAGE_CODE_ZND\020\204\005\022$\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_NWC\020\205\005\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_UDM\020\206\005\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_MUL\020\207\005\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_CAD\020\210\005\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_MUN\020\211\005\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_CAI\020\212\005\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_MUS\020\213\005\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_GIL\020\214\005\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_CAR\020\215\005\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_CAU\020\216\005\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_CAT\020\217\005\022$\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_SAD\020\220\005\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_SAG\020\221\005\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_SAI\020\222\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_S" +
      "AH\020\223\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_INA" +
      "\020\224\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_KRC\020\225" +
      "\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_IND\020\226\005\022" +
      "$\n\037ISO639_PART12_LANGUAGE_CODE_SAM\020\227\005\022$\n" +
      "\037ISO639_PART12_LANGUAGE_CODE_INC\020\230\005\022$\n\037I" +
      "SO639_PART12_LANGUAGE_CODE_SAL\020\231\005\022$\n\037ISO" +
      "639_PART12_LANGUAGE_CODE_SAN\020\232\005\022$\n\037ISO63" +
      "9_PART12_LANGUAGE_CODE_INE\020\233\005\022$\n\037ISO639_" +
      "PART12_LANGUAGE_CODE_INH\020\234\005\022$\n\037ISO639_PA" +
      "RT12_LANGUAGE_CODE_KRL\020\235\005\022$\n\037ISO639_PART" +
      "12_LANGUAGE_CODE_SAS\020\236\005\022$\n\037ISO639_PART12" +
      "_LANGUAGE_CODE_SAT\020\237\005\022$\n\037ISO639_PART12_L" +
      "ANGUAGE_CODE_JPN\020\240\005\022$\n\037ISO639_PART12_LAN" +
      "GUAGE_CODE_EFI\020\241\005\022$\n\037ISO639_PART12_LANGU" +
      "AGE_CODE_KRO\020\242\005\022$\n\037ISO639_PART12_LANGUAG" +
      "E_CODE_JPR\020\243\005\022$\n\037ISO639_PART12_LANGUAGE_" +
      "CODE_KRU\020\244\005\022$\n\037ISO639_PART12_LANGUAGE_CO" +
      "DE_LTZ\020\245\005\022$\n\037ISO639_PART12_LANGUAGE_CODE" +
      "_NYA\020\246\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_L" +
      "UB\020\247\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_LUA" +
      "\020\250\005\022$\n\037ISO639_PART12_LANGUAGE_CODE_LUG\020\251" +
      "\005*=\n\027Iso639Part3LanguageCode\022\"\n\036ISO639_P" +
      "ART3_LANGUAGE_CODE_AAA\020\000*\215%\n\017IsoCurrency" +
      "Code\022\033\n\027ISO_CURRENCY_CODE_F_J_D\020\000\022\033\n\027ISO" +
      "_CURRENCY_CODE_M_X_N\020\001\022\033\n\027ISO_CURRENCY_C" +
      "ODE_S_C_R\020\002\022\033\n\027ISO_CURRENCY_CODE_C_D_F\020\003" +
      "\022\033\n\027ISO_CURRENCY_CODE_B_B_D\020\004\022\033\n\027ISO_CUR" +
      "RENCY_CODE_G_T_Q\020\005\022\033\n\027ISO_CURRENCY_CODE_" +
      "C_L_P\020\006\022\033\n\027ISO_CURRENCY_CODE_H_N_L\020\007\022\033\n\027" +
      "ISO_CURRENCY_CODE_U_G_X\020\010\022\033\n\027ISO_CURRENC" +
      "Y_CODE_M_X_V\020\t\022\033\n\027ISO_CURRENCY_CODE_Z_A_" +
      "R\020\n\022\033\n\027ISO_CURRENCY_CODE_T_N_D\020\013\022\033\n\027ISO_" +
      "CURRENCY_CODE_S_T_N\020\014\022\033\n\027ISO_CURRENCY_CO" +
      "DE_C_U_C\020\r\022\033\n\027ISO_CURRENCY_CODE_B_S_D\020\016\022" +
      "\033\n\027ISO_CURRENCY_CODE_S_L_L\020\017\022\033\n\027ISO_CURR" +
      "ENCY_CODE_S_D_G\020\020\022\033\n\027ISO_CURRENCY_CODE_I" +
      "_Q_D\020\021\022\033\n\027ISO_CURRENCY_CODE_C_U_P\020\022\022\033\n\027I" +
      "SO_CURRENCY_CODE_G_M_D\020\023\022\033\n\027ISO_CURRENCY" +
      "_CODE_T_W_D\020\024\022\033\n\027ISO_CURRENCY_CODE_R_S_D" +
      "\020\025\022\033\n\027ISO_CURRENCY_CODE_D_O_P\020\026\022\033\n\027ISO_C" +
      "URRENCY_CODE_U_Y_I\020\027\022\033\n\027ISO_CURRENCY_COD" +
      "E_K_M_F\020\030\022\033\n\027ISO_CURRENCY_CODE_M_Y_R\020\031\022\033" +
      "\n\027ISO_CURRENCY_CODE_F_K_P\020\032\022\033\n\027ISO_CURRE" +
      "NCY_CODE_X_O_F\020\033\022\033\n\027ISO_CURRENCY_CODE_G_" +
      "E_L\020\034\022\033\n\027ISO_CURRENCY_CODE_U_Y_U\020\035\022\033\n\027IS" +
      "O_CURRENCY_CODE_M_A_D\020\036\022\033\n\027ISO_CURRENCY_" +
      "CODE_C_V_E\020\037\022\033\n\027ISO_CURRENCY_CODE_T_O_P\020" +
      " \022\033\n\027ISO_CURRENCY_CODE_A_Z_N\020!\022\033\n\027ISO_CU" +
      "RRENCY_CODE_O_M_R\020\"\022\033\n\027ISO_CURRENCY_CODE" +
      "_P_G_K\020#\022\033\n\027ISO_CURRENCY_CODE_K_E_S\020$\022\033\n" +
      "\027ISO_CURRENCY_CODE_S_E_K\020%\022\033\n\027ISO_CURREN" +
      "CY_CODE_B_T_N\020&\022\033\n\027ISO_CURRENCY_CODE_U_A" +
      "_H\020\'\022\033\n\027ISO_CURRENCY_CODE_G_N_F\020(\022\033\n\027ISO" +
      "_CURRENCY_CODE_E_R_N\020)\022\033\n\027ISO_CURRENCY_C" +
      "ODE_M_Z_N\020*\022\033\n\027ISO_CURRENCY_CODE_S_V_C\020+" +
      "\022\033\n\027ISO_CURRENCY_CODE_A_R_S\020,\022\033\n\027ISO_CUR" +
      "RENCY_CODE_Q_A_R\020-\022\033\n\027ISO_CURRENCY_CODE_" +
      "I_R_R\020.\022\033\n\027ISO_CURRENCY_CODE_C_N_Y\020/\022\033\n\027" +
      "ISO_CURRENCY_CODE_T_H_B\0200\022\033\n\027ISO_CURRENC" +
      "Y_CODE_U_Z_S\0201\022\033\n\027ISO_CURRENCY_CODE_X_P_" +
      "F\0202\022\033\n\027ISO_CURRENCY_CODE_M_R_U\0203\022\033\n\027ISO_" +
      "CURRENCY_CODE_B_D_T\0204\022\033\n\027ISO_CURRENCY_CO" +
      "DE_L_Y_D\0205\022\033\n\027ISO_CURRENCY_CODE_B_M_D\0206\022" +
      "\033\n\027ISO_CURRENCY_CODE_K_W_D\0207\022\033\n\027ISO_CURR" +
      "ENCY_CODE_P_H_P\0208\022\033\n\027ISO_CURRENCY_CODE_R" +
      "_U_B\0209\022\033\n\027ISO_CURRENCY_CODE_P_Y_G\020:\022\033\n\027I" +
      "SO_CURRENCY_CODE_I_S_K\020;\022\033\n\027ISO_CURRENCY" +
      "_CODE_J_M_D\020<\022\033\n\027ISO_CURRENCY_CODE_C_O_P" +
      "\020=\022\033\n\027ISO_CURRENCY_CODE_M_K_D\020>\022\033\n\027ISO_C" +
      "URRENCY_CODE_U_S_D\020?\022\033\n\027ISO_CURRENCY_COD" +
      "E_C_O_U\020@\022\033\n\027ISO_CURRENCY_CODE_D_Z_D\020A\022\033" +
      "\n\027ISO_CURRENCY_CODE_P_A_B\020B\022\033\n\027ISO_CURRE" +
      "NCY_CODE_S_G_D\020C\022\033\n\027ISO_CURRENCY_CODE_E_" +
      "T_B\020D\022\033\n\027ISO_CURRENCY_CODE_K_G_S\020E\022\033\n\027IS" +
      "O_CURRENCY_CODE_S_O_S\020F\022\033\n\027ISO_CURRENCY_" +
      "CODE_V_U_V\020G\022\033\n\027ISO_CURRENCY_CODE_L_A_K\020" +
      "H\022\033\n\027ISO_CURRENCY_CODE_B_N_D\020I\022\033\n\027ISO_CU" +
      "RRENCY_CODE_X_A_F\020J\022\033\n\027ISO_CURRENCY_CODE" +
      "_L_R_D\020K\022\033\n\027ISO_CURRENCY_CODE_C_H_F\020L\022\033\n" +
      "\027ISO_CURRENCY_CODE_H_R_K\020M\022\033\n\027ISO_CURREN" +
      "CY_CODE_A_L_L\020N\022\033\n\027ISO_CURRENCY_CODE_D_J" +
      "_F\020O\022\033\n\027ISO_CURRENCY_CODE_V_E_S\020P\022\033\n\027ISO" +
      "_CURRENCY_CODE_Z_M_W\020Q\022\033\n\027ISO_CURRENCY_C" +
      "ODE_T_Z_S\020R\022\033\n\027ISO_CURRENCY_CODE_V_N_D\020S" +
      "\022\033\n\027ISO_CURRENCY_CODE_A_U_D\020T\022\033\n\027ISO_CUR" +
      "RENCY_CODE_I_L_S\020U\022\033\n\027ISO_CURRENCY_CODE_" +
      "G_H_S\020V\022\033\n\027ISO_CURRENCY_CODE_G_Y_D\020W\022\033\n\027" +
      "ISO_CURRENCY_CODE_K_P_W\020X\022\033\n\027ISO_CURRENC" +
      "Y_CODE_B_O_B\020Y\022\033\n\027ISO_CURRENCY_CODE_K_H_" +
      "R\020Z\022\033\n\027ISO_CURRENCY_CODE_M_D_L\020[\022\033\n\027ISO_" +
      "CURRENCY_CODE_I_D_R\020\\\022\033\n\027ISO_CURRENCY_CO" +
      "DE_K_Y_D\020]\022\033\n\027ISO_CURRENCY_CODE_A_M_D\020^\022" +
      "\033\n\027ISO_CURRENCY_CODE_B_W_P\020_\022\033\n\027ISO_CURR" +
      "ENCY_CODE_S_H_P\020`\022\033\n\027ISO_CURRENCY_CODE_T" +
      "_R_Y\020a\022\033\n\027ISO_CURRENCY_CODE_L_B_P\020b\022\033\n\027I" +
      "SO_CURRENCY_CODE_T_J_S\020c\022\033\n\027ISO_CURRENCY" +
      "_CODE_J_O_D\020d\022\033\n\027ISO_CURRENCY_CODE_A_E_D" +
      "\020e\022\033\n\027ISO_CURRENCY_CODE_H_K_D\020f\022\033\n\027ISO_C" +
      "URRENCY_CODE_R_W_F\020g\022\033\n\027ISO_CURRENCY_COD" +
      "E_E_U_R\020h\022\033\n\027ISO_CURRENCY_CODE_L_S_L\020i\022\033" +
      "\n\027ISO_CURRENCY_CODE_D_K_K\020j\022\033\n\027ISO_CURRE" +
      "NCY_CODE_C_A_D\020k\022\033\n\027ISO_CURRENCY_CODE_B_" +
      "G_N\020l\022\033\n\027ISO_CURRENCY_CODE_B_O_V\020m\022\033\n\027IS" +
      "O_CURRENCY_CODE_M_M_K\020n\022\033\n\027ISO_CURRENCY_" +
      "CODE_M_U_R\020o\022\033\n\027ISO_CURRENCY_CODE_N_O_K\020" +
      "p\022\033\n\027ISO_CURRENCY_CODE_S_Y_P\020q\022\033\n\027ISO_CU" +
      "RRENCY_CODE_Z_W_L\020r\022\033\n\027ISO_CURRENCY_CODE" +
      "_G_I_P\020s\022\033\n\027ISO_CURRENCY_CODE_R_O_N\020t\022\033\n" +
      "\027ISO_CURRENCY_CODE_L_K_R\020u\022\033\n\027ISO_CURREN" +
      "CY_CODE_N_G_N\020v\022\033\n\027ISO_CURRENCY_CODE_C_R" +
      "_C\020w\022\033\n\027ISO_CURRENCY_CODE_C_Z_K\020x\022\033\n\027ISO" +
      "_CURRENCY_CODE_P_K_R\020y\022\033\n\027ISO_CURRENCY_C" +
      "ODE_X_C_D\020z\022\033\n\027ISO_CURRENCY_CODE_A_N_G\020{" +
      "\022\033\n\027ISO_CURRENCY_CODE_H_T_G\020|\022\033\n\027ISO_CUR" +
      "RENCY_CODE_B_H_D\020}\022\033\n\027ISO_CURRENCY_CODE_" +
      "K_Z_T\020~\022\033\n\027ISO_CURRENCY_CODE_S_R_D\020\177\022\034\n\027" +
      "ISO_CURRENCY_CODE_S_Z_L\020\200\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_S_A_R\020\201\001\022\034\n\027ISO_CURRENCY_CODE_T_" +
      "T_D\020\202\001\022\034\n\027ISO_CURRENCY_CODE_Y_E_R\020\203\001\022\034\n\027" +
      "ISO_CURRENCY_CODE_M_V_R\020\204\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_A_F_N\020\205\001\022\034\n\027ISO_CURRENCY_CODE_I_" +
      "N_R\020\206\001\022\034\n\027ISO_CURRENCY_CODE_A_W_G\020\207\001\022\034\n\027" +
      "ISO_CURRENCY_CODE_K_R_W\020\210\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_N_P_R\020\211\001\022\034\n\027ISO_CURRENCY_CODE_J_" +
      "P_Y\020\212\001\022\034\n\027ISO_CURRENCY_CODE_M_N_T\020\213\001\022\034\n\027" +
      "ISO_CURRENCY_CODE_A_O_A\020\214\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_P_L_N\020\215\001\022\034\n\027ISO_CURRENCY_CODE_G_" +
      "B_P\020\216\001\022\034\n\027ISO_CURRENCY_CODE_S_B_D\020\217\001\022\034\n\027" +
      "ISO_CURRENCY_CODE_H_U_F\020\220\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_B_Y_R\020\221\001\022\034\n\027ISO_CURRENCY_CODE_B_" +
      "I_F\020\222\001\022\034\n\027ISO_CURRENCY_CODE_M_W_K\020\223\001\022\034\n\027" +
      "ISO_CURRENCY_CODE_M_G_A\020\224\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_B_Z_D\020\225\001\022\034\n\027ISO_CURRENCY_CODE_B_" +
      "A_M\020\226\001\022\034\n\027ISO_CURRENCY_CODE_E_G_P\020\227\001\022\034\n\027" +
      "ISO_CURRENCY_CODE_M_O_P\020\230\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_N_A_D\020\231\001\022\034\n\027ISO_CURRENCY_CODE_S_" +
      "S_P\020\232\001\022\034\n\027ISO_CURRENCY_CODE_N_I_O\020\233\001\022\034\n\027" +
      "ISO_CURRENCY_CODE_P_E_N\020\234\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_N_Z_D\020\235\001\022\034\n\027ISO_CURRENCY_CODE_W_" +
      "S_T\020\236\001\022\034\n\027ISO_CURRENCY_CODE_T_M_T\020\237\001\022\034\n\027" +
      "ISO_CURRENCY_CODE_C_L_F\020\240\001\022\034\n\027ISO_CURREN" +
      "CY_CODE_B_R_L\020\241\001*\214\223\001\n\017IsoLanguageCode\022\031\n" +
      "\025ISO_LANGUAGE_CODE_LUI\020\000\022\031\n\025ISO_LANGUAGE" +
      "_CODE_NYN\020\001\022\031\n\025ISO_LANGUAGE_CODE_MWL\020\002\022\031" +
      "\n\025ISO_LANGUAGE_CODE_NYM\020\003\022\031\n\025ISO_LANGUAG" +
      "E_CODE_BAD\020\004\022\031\n\025ISO_LANGUAGE_CODE_LUN\020\005\022" +
      "\031\n\025ISO_LANGUAGE_CODE_NYO\020\006\022\031\n\025ISO_LANGUA" +
      "GE_CODE_FIJ\020\007\022\031\n\025ISO_LANGUAGE_CODE_LUO\020\010" +
      "\022\031\n\025ISO_LANGUAGE_CODE_FIL\020\t\022\031\n\025ISO_LANGU" +
      "AGE_CODE_HMN\020\n\022\031\n\025ISO_LANGUAGE_CODE_MWR\020" +
      "\013\022\031\n\025ISO_LANGUAGE_CODE_FIN\020\014\022\031\n\025ISO_LANG" +
      "UAGE_CODE_DEL\020\r\022\031\n\025ISO_LANGUAGE_CODE_HMO" +
      "\020\016\022\031\n\025ISO_LANGUAGE_CODE_BAI\020\017\022\031\n\025ISO_LAN" +
      "GUAGE_CODE_LUS\020\020\022\031\n\025ISO_LANGUAGE_CODE_BA" +
      "L\020\021\022\031\n\025ISO_LANGUAGE_CODE_DEN\020\022\022\031\n\025ISO_LA" +
      "NGUAGE_CODE_BAK\020\023\022\031\n\025ISO_LANGUAGE_CODE_B" +
      "AN\020\024\022\031\n\025ISO_LANGUAGE_CODE_UGA\020\025\022\031\n\025ISO_L" +
      "ANGUAGE_CODE_BAM\020\026\022\031\n\025ISO_LANGUAGE_CODE_" +
      "VIE\020\027\022\031\n\025ISO_LANGUAGE_CODE_FIU\020\030\022\031\n\025ISO_" +
      "LANGUAGE_CODE_BAT\020\031\022\031\n\025ISO_LANGUAGE_CODE" +
      "_DEU\020\032\022\031\n\025ISO_LANGUAGE_CODE_BAS\020\033\022\031\n\025ISO" +
      "_LANGUAGE_CODE_EGY\020\034\022\031\n\025ISO_LANGUAGE_COD" +
      "E_TEL\020\035\022\031\n\025ISO_LANGUAGE_CODE_RAJ\020\036\022\031\n\025IS" +
      "O_LANGUAGE_CODE_JRB\020\037\022\031\n\025ISO_LANGUAGE_CO" +
      "DE_NZI\020 \022\031\n\025ISO_LANGUAGE_CODE_GLA\020!\022\031\n\025I" +
      "SO_LANGUAGE_CODE_YOR\020\"\022\031\n\025ISO_LANGUAGE_C" +
      "ODE_TEM\020#\022\031\n\025ISO_LANGUAGE_CODE_SCO\020$\022\031\n\025" +
      "ISO_LANGUAGE_CODE_SCN\020%\022\030\n\024ISO_LANGUAGE_" +
      "CODE_AA\020&\022\031\n\025ISO_LANGUAGE_CODE_RAP\020\'\022\031\n\025" +
      "ISO_LANGUAGE_CODE_TER\020(\022\030\n\024ISO_LANGUAGE_" +
      "CODE_AB\020)\022\031\n\025ISO_LANGUAGE_CODE_GLE\020*\022\031\n\025" +
      "ISO_LANGUAGE_CODE_RAR\020+\022\031\n\025ISO_LANGUAGE_" +
      "CODE_TET\020,\022\031\n\025ISO_LANGUAGE_CODE_GLG\020-\022\030\n" +
      "\024ISO_LANGUAGE_CODE_AE\020.\022\030\n\024ISO_LANGUAGE_" +
      "CODE_AF\020/\022\031\n\025ISO_LANGUAGE_CODE_IPK\0200\022\030\n\024" +
      "ISO_LANGUAGE_CODE_AK\0201\022\030\n\024ISO_LANGUAGE_C" +
      "ODE_AM\0202\022\030\n\024ISO_LANGUAGE_CODE_AN\0203\022\031\n\025IS" +
      "O_LANGUAGE_CODE_GLV\0204\022\030\n\024ISO_LANGUAGE_CO" +
      "DE_AR\0205\022\030\n\024ISO_LANGUAGE_CODE_AS\0206\022\031\n\025ISO" +
      "_LANGUAGE_CODE_MYA\0207\022\030\n\024ISO_LANGUAGE_COD" +
      "E_AV\0208\022\031\n\025ISO_LANGUAGE_CODE_YPK\0209\022\031\n\025ISO" +
      "_LANGUAGE_CODE_KUA\020:\022\030\n\024ISO_LANGUAGE_COD" +
      "E_AY\020;\022\031\n\025ISO_LANGUAGE_CODE_WLN\020<\022\030\n\024ISO" +
      "_LANGUAGE_CODE_AZ\020=\022\030\n\024ISO_LANGUAGE_CODE" +
      "_BA\020>\022\031\n\025ISO_LANGUAGE_CODE_AAA\020?\022\031\n\025ISO_" +
      "LANGUAGE_CODE_CEB\020@\022\031\n\025ISO_LANGUAGE_CODE" +
      "_KUM\020A\022\030\n\024ISO_LANGUAGE_CODE_BE\020B\022\031\n\025ISO_" +
      "LANGUAGE_CODE_GMH\020C\022\031\n\025ISO_LANGUAGE_CODE" +
      "_MYN\020D\022\030\n\024ISO_LANGUAGE_CODE_BG\020E\022\030\n\024ISO_" +
      "LANGUAGE_CODE_BH\020F\022\030\n\024ISO_LANGUAGE_CODE_" +
      "BI\020G\022\031\n\025ISO_LANGUAGE_CODE_KUR\020H\022\030\n\024ISO_L" +
      "ANGUAGE_CODE_BM\020I\022\031\n\025ISO_LANGUAGE_CODE_C" +
      "EL\020J\022\031\n\025ISO_LANGUAGE_CODE_KUT\020K\022\031\n\025ISO_L" +
      "ANGUAGE_CODE_MYV\020L\022\030\n\024ISO_LANGUAGE_CODE_" +
      "BN\020M\022\030\n\024ISO_LANGUAGE_CODE_BO\020N\022\031\n\025ISO_LA" +
      "NGUAGE_CODE_DGR\020O\022\030\n\024ISO_LANGUAGE_CODE_B" +
      "R\020P\022\031\n\025ISO_LANGUAGE_CODE_CES\020Q\022\030\n\024ISO_LA" +
      "NGUAGE_CODE_BS\020R\022\031\n\025ISO_LANGUAGE_CODE_UI" +
      "G\020S\022\031\n\025ISO_LANGUAGE_CODE_AAR\020T\022\031\n\025ISO_LA" +
      "NGUAGE_CODE_TGL\020U\022\031\n\025ISO_LANGUAGE_CODE_T" +
      "GK\020V\022\031\n\025ISO_LANGUAGE_CODE_IRA\020W\022\031\n\025ISO_L" +
      "ANGUAGE_CODE_SEM\020X\022\031\n\025ISO_LANGUAGE_CODE_" +
      "SEL\020Y\022\030\n\024ISO_LANGUAGE_CODE_CA\020Z\022\030\n\024ISO_L" +
      "ANGUAGE_CODE_CE\020[\022\030\n\024ISO_LANGUAGE_CODE_C" +
      "H\020\\\022\031\n\025ISO_LANGUAGE_CODE_IRO\020]\022\031\n\025ISO_LA" +
      "NGUAGE_CODE_ABK\020^\022\030\n\024ISO_LANGUAGE_CODE_C" +
      "O\020_\022\031\n\025ISO_LANGUAGE_CODE_THA\020`\022\030\n\024ISO_LA" +
      "NGUAGE_CODE_CR\020a\022\030\n\024ISO_LANGUAGE_CODE_CS" +
      "\020b\022\030\n\024ISO_LANGUAGE_CODE_CU\020c\022\030\n\024ISO_LANG" +
      "UAGE_CODE_CV\020d\022\030\n\024ISO_LANGUAGE_CODE_CY\020e" +
      "\022\031\n\025ISO_LANGUAGE_CODE_EKA\020f\022\030\n\024ISO_LANGU" +
      "AGE_CODE_DA\020g\022\030\n\024ISO_LANGUAGE_CODE_DE\020h\022" +
      "\031\n\025ISO_LANGUAGE_CODE_GOH\020i\022\031\n\025ISO_LANGUA" +
      "GE_CODE_ACE\020j\022\031\n\025ISO_LANGUAGE_CODE_ISL\020k" +
      "\022\031\n\025ISO_LANGUAGE_CODE_BEJ\020l\022\031\n\025ISO_LANGU" +
      "AGE_CODE_ACH\020m\022\031\n\025ISO_LANGUAGE_CODE_GON\020" +
      "n\022\031\n\025ISO_LANGUAGE_CODE_BEL\020o\022\031\n\025ISO_LANG" +
      "UAGE_CODE_DIN\020p\022\031\n\025ISO_LANGUAGE_CODE_BEN" +
      "\020q\022\031\n\025ISO_LANGUAGE_CODE_BEM\020r\022\031\n\025ISO_LAN" +
      "GUAGE_CODE_GOR\020s\022\031\n\025ISO_LANGUAGE_CODE_SG" +
      "A\020t\022\031\n\025ISO_LANGUAGE_CODE_GOT\020u\022\031\n\025ISO_LA" +
      "NGUAGE_CODE_BER\020v\022\031\n\025ISO_LANGUAGE_CODE_D" +
      "IV\020w\022\031\n\025ISO_LANGUAGE_CODE_ZUL\020x\022\031\n\025ISO_L" +
      "ANGUAGE_CODE_PAA\020y\022\030\n\024ISO_LANGUAGE_CODE_" +
      "DV\020z\022\031\n\025ISO_LANGUAGE_CODE_ZUN\020{\022\031\n\025ISO_L" +
      "ANGUAGE_CODE_TIG\020|\022\031\n\025ISO_LANGUAGE_CODE_" +
      "WOL\020}\022\030\n\024ISO_LANGUAGE_CODE_DZ\020~\022\031\n\025ISO_L" +
      "ANGUAGE_CODE_ITA\020\177\022\032\n\025ISO_LANGUAGE_CODE_" +
      "PAG\020\200\001\022\032\n\025ISO_LANGUAGE_CODE_PAL\020\201\001\022\032\n\025IS" +
      "O_LANGUAGE_CODE_SGN\020\202\001\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_PAN\020\203\001\022\032\n\025ISO_LANGUAGE_CODE_TIR\020\204\001\022\032" +
      "\n\025ISO_LANGUAGE_CODE_CHB\020\205\001\022\032\n\025ISO_LANGUA" +
      "GE_CODE_CHA\020\206\001\022\032\n\025ISO_LANGUAGE_CODE_UKR\020" +
      "\207\001\022\032\n\025ISO_LANGUAGE_CODE_PAM\020\210\001\022\032\n\025ISO_LA" +
      "NGUAGE_CODE_PAP\020\211\001\022\032\n\025ISO_LANGUAGE_CODE_" +
      "ADA\020\212\001\022\031\n\024ISO_LANGUAGE_CODE_EE\020\213\001\022\032\n\025ISO" +
      "_LANGUAGE_CODE_TIV\020\214\001\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_CHE\020\215\001\022\032\n\025ISO_LANGUAGE_CODE_CHG\020\216\001\022\032\n" +
      "\025ISO_LANGUAGE_CODE_ELL\020\217\001\022\032\n\025ISO_LANGUAG" +
      "E_CODE_PAU\020\220\001\022\031\n\024ISO_LANGUAGE_CODE_EL\020\221\001" +
      "\022\032\n\025ISO_LANGUAGE_CODE_CHK\020\222\001\022\032\n\025ISO_LANG" +
      "UAGE_CODE_CHN\020\223\001\022\031\n\024ISO_LANGUAGE_CODE_EN" +
      "\020\224\001\022\032\n\025ISO_LANGUAGE_CODE_CHM\020\225\001\022\031\n\024ISO_L" +
      "ANGUAGE_CODE_EO\020\226\001\022\032\n\025ISO_LANGUAGE_CODE_" +
      "CHP\020\227\001\022\032\n\025ISO_LANGUAGE_CODE_CHO\020\230\001\022\032\n\025IS" +
      "O_LANGUAGE_CODE_CHR\020\231\001\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_HRV\020\232\001\022\031\n\024ISO_LANGUAGE_CODE_ES\020\233\001\022\031\n" +
      "\024ISO_LANGUAGE_CODE_ET\020\234\001\022\032\n\025ISO_LANGUAGE" +
      "_CODE_CHV\020\235\001\022\031\n\024ISO_LANGUAGE_CODE_EU\020\236\001\022" +
      "\032\n\025ISO_LANGUAGE_CODE_ELX\020\237\001\022\032\n\025ISO_LANGU" +
      "AGE_CODE_CHU\020\240\001\022\032\n\025ISO_LANGUAGE_CODE_CHY" +
      "\020\241\001\022\032\n\025ISO_LANGUAGE_CODE_HSB\020\242\001\022\032\n\025ISO_L" +
      "ANGUAGE_CODE_ADY\020\243\001\022\032\n\025ISO_LANGUAGE_CODE" +
      "_SHN\020\244\001\022\031\n\024ISO_LANGUAGE_CODE_FA\020\245\001\022\032\n\025IS" +
      "O_LANGUAGE_CODE_BGC\020\246\001\022\031\n\024ISO_LANGUAGE_C" +
      "ODE_FF\020\247\001\022\031\n\024ISO_LANGUAGE_CODE_FI\020\250\001\022\031\n\024" +
      "ISO_LANGUAGE_CODE_FJ\020\251\001\022\032\n\025ISO_LANGUAGE_" +
      "CODE_FON\020\252\001\022\031\n\024ISO_LANGUAGE_CODE_FO\020\253\001\022\032" +
      "\n\025ISO_LANGUAGE_CODE_UMB\020\254\001\022\031\n\024ISO_LANGUA" +
      "GE_CODE_FR\020\255\001\022\032\n\025ISO_LANGUAGE_CODE_SID\020\256" +
      "\001\022\032\n\025ISO_LANGUAGE_CODE_VOL\020\257\001\022\031\n\024ISO_LAN" +
      "GUAGE_CODE_FY\020\260\001\022\032\n\025ISO_LANGUAGE_CODE_TK" +
      "L\020\261\001\022\032\n\025ISO_LANGUAGE_CODE_GRB\020\262\001\022\032\n\025ISO_" +
      "LANGUAGE_CODE_SIO\020\263\001\022\032\n\025ISO_LANGUAGE_COD" +
      "E_SIN\020\264\001\022\032\n\025ISO_LANGUAGE_CODE_GRC\020\265\001\022\031\n\024" +
      "ISO_LANGUAGE_CODE_GA\020\266\001\022\032\n\025ISO_LANGUAGE_" +
      "CODE_VOT\020\267\001\022\031\n\024ISO_LANGUAGE_CODE_GD\020\270\001\022\032" +
      "\n\025ISO_LANGUAGE_CODE_AFA\020\271\001\022\032\n\025ISO_LANGUA" +
      "GE_CODE_ENG\020\272\001\022\032\n\025ISO_LANGUAGE_CODE_SIT\020" +
      "\273\001\022\032\n\025ISO_LANGUAGE_CODE_GRN\020\274\001\022\032\n\025ISO_LA" +
      "NGUAGE_CODE_AFH\020\275\001\022\031\n\024ISO_LANGUAGE_CODE_" +
      "GL\020\276\001\022\032\n\025ISO_LANGUAGE_CODE_ENM\020\277\001\022\031\n\024ISO" +
      "_LANGUAGE_CODE_GN\020\300\001\022\032\n\025ISO_LANGUAGE_COD" +
      "E_BHO\020\301\001\022\032\n\025ISO_LANGUAGE_CODE_UND\020\302\001\022\032\n\025" +
      "ISO_LANGUAGE_CODE_AFR\020\303\001\022\031\n\024ISO_LANGUAGE" +
      "_CODE_GU\020\304\001\022\031\n\024ISO_LANGUAGE_CODE_GV\020\305\001\022\032" +
      "\n\025ISO_LANGUAGE_CODE_TLI\020\306\001\022\032\n\025ISO_LANGUA" +
      "GE_CODE_TLH\020\307\001\022\031\n\024ISO_LANGUAGE_CODE_HA\020\310" +
      "\001\022\032\n\025ISO_LANGUAGE_CODE_ZXX\020\311\001\022\031\n\024ISO_LAN" +
      "GUAGE_CODE_HE\020\312\001\022\032\n\025ISO_LANGUAGE_CODE_BI" +
      "H\020\313\001\022\032\n\025ISO_LANGUAGE_CODE_HUN\020\314\001\022\031\n\024ISO_" +
      "LANGUAGE_CODE_HI\020\315\001\022\032\n\025ISO_LANGUAGE_CODE" +
      "_HUP\020\316\001\022\032\n\025ISO_LANGUAGE_CODE_BIK\020\317\001\022\032\n\025I" +
      "SO_LANGUAGE_CODE_BIN\020\320\001\022\031\n\024ISO_LANGUAGE_" +
      "CODE_HO\020\321\001\022\031\n\024ISO_LANGUAGE_CODE_HR\020\322\001\022\032\n" +
      "\025ISO_LANGUAGE_CODE_GSW\020\323\001\022\031\n\024ISO_LANGUAG" +
      "E_CODE_HT\020\324\001\022\032\n\025ISO_LANGUAGE_CODE_BIS\020\325\001" +
      "\022\031\n\024ISO_LANGUAGE_CODE_HU\020\326\001\022\032\n\025ISO_LANGU" +
      "AGE_CODE_TMH\020\327\001\022\031\n\024ISO_LANGUAGE_CODE_HY\020" +
      "\330\001\022\031\n\024ISO_LANGUAGE_CODE_HZ\020\331\001\022\032\n\025ISO_LAN" +
      "GUAGE_CODE_FRA\020\332\001\022\032\n\025ISO_LANGUAGE_CODE_O" +
      "CI\020\333\001\022\032\n\025ISO_LANGUAGE_CODE_NAH\020\334\001\022\032\n\025ISO" +
      "_LANGUAGE_CODE_NAI\020\335\001\022\031\n\024ISO_LANGUAGE_CO" +
      "DE_IA\020\336\001\022\031\n\024ISO_LANGUAGE_CODE_ID\020\337\001\022\032\n\025I" +
      "SO_LANGUAGE_CODE_PEO\020\340\001\022\031\n\024ISO_LANGUAGE_" +
      "CODE_IE\020\341\001\022\032\n\025ISO_LANGUAGE_CODE_NAP\020\342\001\022\031" +
      "\n\024ISO_LANGUAGE_CODE_IG\020\343\001\022\031\n\024ISO_LANGUAG" +
      "E_CODE_II\020\344\001\022\032\n\025ISO_LANGUAGE_CODE_FRM\020\345\001" +
      "\022\032\n\025ISO_LANGUAGE_CODE_ZZA\020\346\001\022\031\n\024ISO_LANG" +
      "UAGE_CODE_IK\020\347\001\022\032\n\025ISO_LANGUAGE_CODE_NAV" +
      "\020\350\001\022\032\n\025ISO_LANGUAGE_CODE_FRO\020\351\001\022\032\n\025ISO_L" +
      "ANGUAGE_CODE_NAU\020\352\001\022\032\n\025ISO_LANGUAGE_CODE" +
      "_EPO\020\353\001\022\031\n\024ISO_LANGUAGE_CODE_IO\020\354\001\022\032\n\025IS" +
      "O_LANGUAGE_CODE_FRS\020\355\001\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_FRR\020\356\001\022\032\n\025ISO_LANGUAGE_CODE_SLA\020\357\001\022\031" +
      "\n\024ISO_LANGUAGE_CODE_IS\020\360\001\022\031\n\024ISO_LANGUAG" +
      "E_CODE_IT\020\361\001\022\032\n\025ISO_LANGUAGE_CODE_FRY\020\362\001" +
      "\022\031\n\024ISO_LANGUAGE_CODE_IU\020\363\001\022\032\n\025ISO_LANGU" +
      "AGE_CODE_SLK\020\364\001\022\031\n\024ISO_LANGUAGE_CODE_JA\020" +
      "\365\001\022\032\n\025ISO_LANGUAGE_CODE_CMC\020\366\001\022\032\n\025ISO_LA" +
      "NGUAGE_CODE_NBL\020\367\001\022\032\n\025ISO_LANGUAGE_CODE_" +
      "SLV\020\370\001\022\032\n\025ISO_LANGUAGE_CODE_GUJ\020\371\001\022\032\n\025IS" +
      "O_LANGUAGE_CODE_DOI\020\372\001\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_SMA\020\373\001\022\032\n\025ISO_LANGUAGE_CODE_AIN\020\374\001\022\032" +
      "\n\025ISO_LANGUAGE_CODE_SME\020\375\001\022\031\n\024ISO_LANGUA" +
      "GE_CODE_JV\020\376\001\022\032\n\025ISO_LANGUAGE_CODE_TOG\020\377" +
      "\001\022\032\n\025ISO_LANGUAGE_CODE_SMI\020\200\002\022\032\n\025ISO_LAN" +
      "GUAGE_CODE_MAD\020\201\002\022\032\n\025ISO_LANGUAGE_CODE_S" +
      "MJ\020\202\002\022\032\n\025ISO_LANGUAGE_CODE_TON\020\203\002\022\032\n\025ISO" +
      "_LANGUAGE_CODE_MAG\020\204\002\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_SMO\020\205\002\022\032\n\025ISO_LANGUAGE_CODE_MAI\020\206\002\022\032\n" +
      "\025ISO_LANGUAGE_CODE_MAH\020\207\002\022\032\n\025ISO_LANGUAG" +
      "E_CODE_SMN\020\210\002\022\031\n\024ISO_LANGUAGE_CODE_KA\020\211\002" +
      "\022\032\n\025ISO_LANGUAGE_CODE_BLA\020\212\002\022\032\n\025ISO_LANG" +
      "UAGE_CODE_MAK\020\213\002\022\032\n\025ISO_LANGUAGE_CODE_SM" +
      "S\020\214\002\022\032\n\025ISO_LANGUAGE_CODE_MAL\020\215\002\022\032\n\025ISO_" +
      "LANGUAGE_CODE_MAN\020\216\002\022\031\n\024ISO_LANGUAGE_COD" +
      "E_KG\020\217\002\022\032\n\025ISO_LANGUAGE_CODE_MAP\020\220\002\022\031\n\024I" +
      "SO_LANGUAGE_CODE_KI\020\221\002\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_MAS\020\222\002\022\031\n\024ISO_LANGUAGE_CODE_KJ\020\223\002\022\032\n" +
      "\025ISO_LANGUAGE_CODE_MAR\020\224\002\022\031\n\024ISO_LANGUAG" +
      "E_CODE_KK\020\225\002\022\031\n\024ISO_LANGUAGE_CODE_KL\020\226\002\022" +
      "\031\n\024ISO_LANGUAGE_CODE_KM\020\227\002\022\031\n\024ISO_LANGUA" +
      "GE_CODE_KN\020\230\002\022\031\n\024ISO_LANGUAGE_CODE_KO\020\231\002" +
      "\022\032\n\025ISO_LANGUAGE_CODE_URD\020\232\002\022\032\n\025ISO_LANG" +
      "UAGE_CODE_CNR\020\233\002\022\031\n\024ISO_LANGUAGE_CODE_KR" +
      "\020\234\002\022\032\n\025ISO_LANGUAGE_CODE_SNA\020\235\002\022\031\n\024ISO_L" +
      "ANGUAGE_CODE_KS\020\236\002\022\032\n\025ISO_LANGUAGE_CODE_",
      "SND\020\237\002\022\031\n\024ISO_LANGUAGE_CODE_KU\020\240\002\022\031\n\024ISO" +
      "_LANGUAGE_CODE_KV\020\241\002\022\031\n\024ISO_LANGUAGE_COD" +
      "E_KW\020\242\002\022\032\n\025ISO_LANGUAGE_CODE_TPI\020\243\002\022\031\n\024I" +
      "SO_LANGUAGE_CODE_KY\020\244\002\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_NDE\020\245\002\022\032\n\025ISO_LANGUAGE_CODE_PHI\020\246\002\022\032" +
      "\n\025ISO_LANGUAGE_CODE_SNK\020\247\002\022\032\n\025ISO_LANGUA" +
      "GE_CODE_HYE\020\250\002\022\031\n\024ISO_LANGUAGE_CODE_LA\020\251" +
      "\002\022\032\n\025ISO_LANGUAGE_CODE_AKA\020\252\002\022\031\n\024ISO_LAN" +
      "GUAGE_CODE_LB\020\253\002\022\032\n\025ISO_LANGUAGE_CODE_PH" +
      "N\020\254\002\022\032\n\025ISO_LANGUAGE_CODE_NDO\020\255\002\022\032\n\025ISO_" +
      "LANGUAGE_CODE_GWI\020\256\002\022\031\n\024ISO_LANGUAGE_COD" +
      "E_LG\020\257\002\022\032\n\025ISO_LANGUAGE_CODE_FUL\020\260\002\022\032\n\025I" +
      "SO_LANGUAGE_CODE_NDS\020\261\002\022\031\n\024ISO_LANGUAGE_" +
      "CODE_LI\020\262\002\022\032\n\025ISO_LANGUAGE_CODE_AKK\020\263\002\022\031" +
      "\n\024ISO_LANGUAGE_CODE_LN\020\264\002\022\032\n\025ISO_LANGUAG" +
      "E_CODE_FUR\020\265\002\022\031\n\024ISO_LANGUAGE_CODE_LO\020\266\002" +
      "\022\032\n\025ISO_LANGUAGE_CODE_COP\020\267\002\022\032\n\025ISO_LANG" +
      "UAGE_CODE_COS\020\270\002\022\032\n\025ISO_LANGUAGE_CODE_ES" +
      "T\020\271\002\022\032\n\025ISO_LANGUAGE_CODE_COR\020\272\002\022\031\n\024ISO_" +
      "LANGUAGE_CODE_LT\020\273\002\022\031\n\024ISO_LANGUAGE_CODE" +
      "_LU\020\274\002\022\031\n\024ISO_LANGUAGE_CODE_LV\020\275\002\022\032\n\025ISO" +
      "_LANGUAGE_CODE_SOG\020\276\002\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_LAD\020\277\002\022\032\n\025ISO_LANGUAGE_CODE_SOM\020\300\002\022\032\n" +
      "\025ISO_LANGUAGE_CODE_DRA\020\301\002\022\032\n\025ISO_LANGUAG" +
      "E_CODE_LAH\020\302\002\022\032\n\025ISO_LANGUAGE_CODE_SON\020\303" +
      "\002\022\032\n\025ISO_LANGUAGE_CODE_NEP\020\304\002\022\032\n\025ISO_LAN" +
      "GUAGE_CODE_CPF\020\305\002\022\032\n\025ISO_LANGUAGE_CODE_S" +
      "OT\020\306\002\022\032\n\025ISO_LANGUAGE_CODE_CPE\020\307\002\022\032\n\025ISO" +
      "_LANGUAGE_CODE_LAM\020\310\002\022\031\n\024ISO_LANGUAGE_CO" +
      "DE_MG\020\311\002\022\032\n\025ISO_LANGUAGE_CODE_LAO\020\312\002\022\031\n\024" +
      "ISO_LANGUAGE_CODE_MH\020\313\002\022\032\n\025ISO_LANGUAGE_" +
      "CODE_ALE\020\314\002\022\031\n\024ISO_LANGUAGE_CODE_MI\020\315\002\022\032" +
      "\n\025ISO_LANGUAGE_CODE_ALG\020\316\002\022\032\n\025ISO_LANGUA" +
      "GE_CODE_LAT\020\317\002\022\031\n\024ISO_LANGUAGE_CODE_MK\020\320" +
      "\002\022\031\n\024ISO_LANGUAGE_CODE_ML\020\321\002\022\032\n\025ISO_LANG" +
      "UAGE_CODE_LAV\020\322\002\022\031\n\024ISO_LANGUAGE_CODE_MN" +
      "\020\323\002\022\032\n\025ISO_LANGUAGE_CODE_NEW\020\324\002\022\031\n\024ISO_L" +
      "ANGUAGE_CODE_MO\020\325\002\022\032\n\025ISO_LANGUAGE_CODE_" +
      "CPP\020\326\002\022\032\n\025ISO_LANGUAGE_CODE_SPA\020\327\002\022\031\n\024IS" +
      "O_LANGUAGE_CODE_MR\020\330\002\022\031\n\024ISO_LANGUAGE_CO" +
      "DE_MS\020\331\002\022\031\n\024ISO_LANGUAGE_CODE_MT\020\332\002\022\032\n\025I" +
      "SO_LANGUAGE_CODE_ALT\020\333\002\022\032\n\025ISO_LANGUAGE_" +
      "CODE_BNT\020\334\002\022\031\n\024ISO_LANGUAGE_CODE_MY\020\335\002\022\032" +
      "\n\025ISO_LANGUAGE_CODE_MDF\020\336\002\022\032\n\025ISO_LANGUA" +
      "GE_CODE_DSB\020\337\002\022\031\n\024ISO_LANGUAGE_CODE_NA\020\340" +
      "\002\022\031\n\024ISO_LANGUAGE_CODE_NB\020\341\002\022\032\n\025ISO_LANG" +
      "UAGE_CODE_BOD\020\342\002\022\031\n\024ISO_LANGUAGE_CODE_ND" +
      "\020\343\002\022\031\n\024ISO_LANGUAGE_CODE_NE\020\344\002\022\031\n\024ISO_LA" +
      "NGUAGE_CODE_NG\020\345\002\022\032\n\025ISO_LANGUAGE_CODE_M" +
      "DR\020\346\002\022\032\n\025ISO_LANGUAGE_CODE_AMH\020\347\002\022\031\n\024ISO" +
      "_LANGUAGE_CODE_NL\020\350\002\022\031\n\024ISO_LANGUAGE_COD" +
      "E_NN\020\351\002\022\031\n\024ISO_LANGUAGE_CODE_NO\020\352\002\022\032\n\025IS" +
      "O_LANGUAGE_CODE_EUS\020\353\002\022\031\n\024ISO_LANGUAGE_C" +
      "ODE_NR\020\354\002\022\032\n\025ISO_LANGUAGE_CODE_ROA\020\355\002\022\032\n" +
      "\025ISO_LANGUAGE_CODE_BOS\020\356\002\022\031\n\024ISO_LANGUAG" +
      "E_CODE_NV\020\357\002\022\032\n\025ISO_LANGUAGE_CODE_ROH\020\360\002" +
      "\022\032\n\025ISO_LANGUAGE_CODE_SQI\020\361\002\022\032\n\025ISO_LANG" +
      "UAGE_CODE_KAA\020\362\002\022\031\n\024ISO_LANGUAGE_CODE_NY" +
      "\020\363\002\022\032\n\025ISO_LANGUAGE_CODE_TSI\020\364\002\022\032\n\025ISO_L" +
      "ANGUAGE_CODE_KAC\020\365\002\022\032\n\025ISO_LANGUAGE_CODE" +
      "_KAB\020\366\002\022\032\n\025ISO_LANGUAGE_CODE_TSN\020\367\002\022\032\n\025I" +
      "SO_LANGUAGE_CODE_RON\020\370\002\022\032\n\025ISO_LANGUAGE_" +
      "CODE_TSO\020\371\002\022\032\n\025ISO_LANGUAGE_CODE_ROM\020\372\002\022" +
      "\031\n\024ISO_LANGUAGE_CODE_OC\020\373\002\022\032\n\025ISO_LANGUA" +
      "GE_CODE_KAM\020\374\002\022\032\n\025ISO_LANGUAGE_CODE_CRE\020" +
      "\375\002\022\032\n\025ISO_LANGUAGE_CODE_KAL\020\376\002\022\032\n\025ISO_LA" +
      "NGUAGE_CODE_MEN\020\377\002\022\032\n\025ISO_LANGUAGE_CODE_" +
      "CRH\020\200\003\022\032\n\025ISO_LANGUAGE_CODE_KAN\020\201\003\022\031\n\024IS" +
      "O_LANGUAGE_CODE_OJ\020\202\003\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_ANG\020\203\003\022\032\n\025ISO_LANGUAGE_CODE_KAS\020\204\003\022\032\n" +
      "\025ISO_LANGUAGE_CODE_KAR\020\205\003\022\032\n\025ISO_LANGUAG" +
      "E_CODE_KAU\020\206\003\022\031\n\024ISO_LANGUAGE_CODE_OM\020\207\003" +
      "\022\032\n\025ISO_LANGUAGE_CODE_KAT\020\210\003\022\032\n\025ISO_LANG" +
      "UAGE_CODE_CRP\020\211\003\022\032\n\025ISO_LANGUAGE_CODE_KA" +
      "W\020\212\003\022\032\n\025ISO_LANGUAGE_CODE_ANP\020\213\003\022\031\n\024ISO_" +
      "LANGUAGE_CODE_OR\020\214\003\022\031\n\024ISO_LANGUAGE_CODE" +
      "_OS\020\215\003\022\032\n\025ISO_LANGUAGE_CODE_SRD\020\216\003\022\032\n\025IS" +
      "O_LANGUAGE_CODE_KAZ\020\217\003\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_PLI\020\220\003\022\032\n\025ISO_LANGUAGE_CODE_KBD\020\221\003\022\032" +
      "\n\025ISO_LANGUAGE_CODE_SRN\020\222\003\022\032\n\025ISO_LANGUA" +
      "GE_CODE_OJI\020\223\003\022\032\n\025ISO_LANGUAGE_CODE_SRP\020" +
      "\224\003\022\031\n\024ISO_LANGUAGE_CODE_PA\020\225\003\022\032\n\025ISO_LAN" +
      "GUAGE_CODE_DUA\020\226\003\022\032\n\025ISO_LANGUAGE_CODE_E" +
      "WE\020\227\003\022\032\n\025ISO_LANGUAGE_CODE_SRR\020\230\003\022\032\n\025ISO" +
      "_LANGUAGE_CODE_CSB\020\231\003\022\031\n\024ISO_LANGUAGE_CO" +
      "DE_PI\020\232\003\022\031\n\024ISO_LANGUAGE_CODE_PL\020\233\003\022\032\n\025I" +
      "SO_LANGUAGE_CODE_EWO\020\234\003\022\032\n\025ISO_LANGUAGE_" +
      "CODE_DUM\020\235\003\022\032\n\025ISO_LANGUAGE_CODE_SSA\020\236\003\022" +
      "\031\n\024ISO_LANGUAGE_CODE_PS\020\237\003\022\031\n\024ISO_LANGUA" +
      "GE_CODE_PT\020\240\003\022\032\n\025ISO_LANGUAGE_CODE_MGA\020\241" +
      "\003\022\032\n\025ISO_LANGUAGE_CODE_NIA\020\242\003\022\032\n\025ISO_LAN" +
      "GUAGE_CODE_NIC\020\243\003\022\032\n\025ISO_LANGUAGE_CODE_T" +
      "UK\020\244\003\022\032\n\025ISO_LANGUAGE_CODE_TUM\020\245\003\022\032\n\025ISO" +
      "_LANGUAGE_CODE_TUP\020\246\003\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_TUR\020\247\003\022\032\n\025ISO_LANGUAGE_CODE_BRA\020\250\003\022\032\n" +
      "\025ISO_LANGUAGE_CODE_TUT\020\251\003\022\032\n\025ISO_LANGUAG" +
      "E_CODE_APA\020\252\003\022\032\n\025ISO_LANGUAGE_CODE_BRE\020\253" +
      "\003\022\032\n\025ISO_LANGUAGE_CODE_SSW\020\254\003\022\032\n\025ISO_LAN" +
      "GUAGE_CODE_NIU\020\255\003\022\032\n\025ISO_LANGUAGE_CODE_J" +
      "AV\020\256\003\022\032\n\025ISO_LANGUAGE_CODE_LEZ\020\257\003\022\031\n\024ISO" +
      "_LANGUAGE_CODE_QU\020\260\003\022\032\n\025ISO_LANGUAGE_COD" +
      "E_ZAP\020\261\003\022\032\n\025ISO_LANGUAGE_CODE_TVL\020\262\003\022\032\n\025" +
      "ISO_LANGUAGE_CODE_JBO\020\263\003\022\031\n\024ISO_LANGUAGE" +
      "_CODE_RM\020\264\003\022\031\n\024ISO_LANGUAGE_CODE_RN\020\265\003\022\031" +
      "\n\024ISO_LANGUAGE_CODE_RO\020\266\003\022\032\n\025ISO_LANGUAG" +
      "E_CODE_CUS\020\267\003\022\032\n\025ISO_LANGUAGE_CODE_QQA\020\270" +
      "\003\022\032\n\025ISO_LANGUAGE_CODE_QQC\020\271\003\022\031\n\024ISO_LAN" +
      "GUAGE_CODE_RU\020\272\003\022\032\n\025ISO_LANGUAGE_CODE_QQ" +
      "B\020\273\003\022\032\n\025ISO_LANGUAGE_CODE_QQE\020\274\003\022\031\n\024ISO_" +
      "LANGUAGE_CODE_RW\020\275\003\022\032\n\025ISO_LANGUAGE_CODE" +
      "_QQD\020\276\003\022\032\n\025ISO_LANGUAGE_CODE_ZBL\020\277\003\022\032\n\025I" +
      "SO_LANGUAGE_CODE_MIC\020\300\003\022\032\n\025ISO_LANGUAGE_" +
      "CODE_QQG\020\301\003\022\032\n\025ISO_LANGUAGE_CODE_TWI\020\302\003\022" +
      "\032\n\025ISO_LANGUAGE_CODE_QQF\020\303\003\022\032\n\025ISO_LANGU" +
      "AGE_CODE_QQI\020\304\003\022\032\n\025ISO_LANGUAGE_CODE_SUK" +
      "\020\305\003\022\032\n\025ISO_LANGUAGE_CODE_QQH\020\306\003\022\032\n\025ISO_L" +
      "ANGUAGE_CODE_QQJ\020\307\003\022\032\n\025ISO_LANGUAGE_CODE" +
      "_POL\020\310\003\022\032\n\025ISO_LANGUAGE_CODE_SUN\020\311\003\022\031\n\024I" +
      "SO_LANGUAGE_CODE_SA\020\312\003\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_PON\020\313\003\022\031\n\024ISO_LANGUAGE_CODE_SC\020\314\003\022\032\n" +
      "\025ISO_LANGUAGE_CODE_SUS\020\315\003\022\032\n\025ISO_LANGUAG" +
      "E_CODE_ARA\020\316\003\022\031\n\024ISO_LANGUAGE_CODE_SD\020\317\003" +
      "\022\032\n\025ISO_LANGUAGE_CODE_POR\020\320\003\022\031\n\024ISO_LANG" +
      "UAGE_CODE_SE\020\321\003\022\032\n\025ISO_LANGUAGE_CODE_ARC" +
      "\020\322\003\022\032\n\025ISO_LANGUAGE_CODE_MIN\020\323\003\022\031\n\024ISO_L" +
      "ANGUAGE_CODE_SG\020\324\003\022\031\n\024ISO_LANGUAGE_CODE_" +
      "SI\020\325\003\022\032\n\025ISO_LANGUAGE_CODE_MIS\020\326\003\022\032\n\025ISO" +
      "_LANGUAGE_CODE_ARG\020\327\003\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_SUX\020\330\003\022\031\n\024ISO_LANGUAGE_CODE_SK\020\331\003\022\032\n\025" +
      "ISO_LANGUAGE_CODE_BTK\020\332\003\022\031\n\024ISO_LANGUAGE" +
      "_CODE_SL\020\333\003\022\031\n\024ISO_LANGUAGE_CODE_SM\020\334\003\022\031" +
      "\n\024ISO_LANGUAGE_CODE_SN\020\335\003\022\031\n\024ISO_LANGUAG" +
      "E_CODE_SO\020\336\003\022\032\n\025ISO_LANGUAGE_CODE_UZB\020\337\003" +
      "\022\032\n\025ISO_LANGUAGE_CODE_ARN\020\340\003\022\031\n\024ISO_LANG" +
      "UAGE_CODE_SQ\020\341\003\022\032\n\025ISO_LANGUAGE_CODE_ARP" +
      "\020\342\003\022\031\n\024ISO_LANGUAGE_CODE_SR\020\343\003\022\031\n\024ISO_LA" +
      "NGUAGE_CODE_SS\020\344\003\022\031\n\024ISO_LANGUAGE_CODE_S" +
      "T\020\345\003\022\031\n\024ISO_LANGUAGE_CODE_SU\020\346\003\022\032\n\025ISO_L" +
      "ANGUAGE_CODE_ART\020\347\003\022\031\n\024ISO_LANGUAGE_CODE" +
      "_SV\020\350\003\022\031\n\024ISO_LANGUAGE_CODE_SW\020\351\003\022\032\n\025ISO" +
      "_LANGUAGE_CODE_YAO\020\352\003\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_NLD\020\353\003\022\032\n\025ISO_LANGUAGE_CODE_ARW\020\354\003\022\032\n" +
      "\025ISO_LANGUAGE_CODE_IBA\020\355\003\022\032\n\025ISO_LANGUAG" +
      "E_CODE_YAP\020\356\003\022\031\n\024ISO_LANGUAGE_CODE_TA\020\357\003" +
      "\022\032\n\025ISO_LANGUAGE_CODE_BUA\020\360\003\022\031\n\024ISO_LANG" +
      "UAGE_CODE_TE\020\361\003\022\031\n\024ISO_LANGUAGE_CODE_TG\020" +
      "\362\003\022\031\n\024ISO_LANGUAGE_CODE_TH\020\363\003\022\031\n\024ISO_LAN" +
      "GUAGE_CODE_TI\020\364\003\022\032\n\025ISO_LANGUAGE_CODE_BU" +
      "G\020\365\003\022\032\n\025ISO_LANGUAGE_CODE_IBO\020\366\003\022\031\n\024ISO_" +
      "LANGUAGE_CODE_TK\020\367\003\022\032\n\025ISO_LANGUAGE_CODE" +
      "_BUL\020\370\003\022\031\n\024ISO_LANGUAGE_CODE_TL\020\371\003\022\032\n\025IS" +
      "O_LANGUAGE_CODE_ASM\020\372\003\022\031\n\024ISO_LANGUAGE_C" +
      "ODE_TN\020\373\003\022\031\n\024ISO_LANGUAGE_CODE_TO\020\374\003\022\032\n\025" +
      "ISO_LANGUAGE_CODE_SWA\020\375\003\022\031\n\024ISO_LANGUAGE" +
      "_CODE_TR\020\376\003\022\031\n\024ISO_LANGUAGE_CODE_TS\020\377\003\022\032" +
      "\n\025ISO_LANGUAGE_CODE_SWE\020\200\004\022\031\n\024ISO_LANGUA" +
      "GE_CODE_TT\020\201\004\022\032\n\025ISO_LANGUAGE_CODE_DYU\020\202" +
      "\004\022\031\n\024ISO_LANGUAGE_CODE_TW\020\203\004\022\032\n\025ISO_LANG" +
      "UAGE_CODE_AST\020\204\004\022\031\n\024ISO_LANGUAGE_CODE_TY" +
      "\020\205\004\022\032\n\025ISO_LANGUAGE_CODE_MKD\020\206\004\022\032\n\025ISO_L" +
      "ANGUAGE_CODE_RUN\020\207\004\022\032\n\025ISO_LANGUAGE_CODE" +
      "_MKH\020\210\004\022\032\n\025ISO_LANGUAGE_CODE_RUP\020\211\004\022\032\n\025I" +
      "SO_LANGUAGE_CODE_LIN\020\212\004\022\032\n\025ISO_LANGUAGE_" +
      "CODE_TYV\020\213\004\022\032\n\025ISO_LANGUAGE_CODE_LIM\020\214\004\022" +
      "\032\n\025ISO_LANGUAGE_CODE_RUS\020\215\004\022\032\n\025ISO_LANGU" +
      "AGE_CODE_HAI\020\216\004\022\031\n\024ISO_LANGUAGE_CODE_UG\020" +
      "\217\004\022\032\n\025ISO_LANGUAGE_CODE_ATH\020\220\004\022\032\n\025ISO_LA" +
      "NGUAGE_CODE_LIT\020\221\004\022\031\n\024ISO_LANGUAGE_CODE_" +
      "UK\020\222\004\022\032\n\025ISO_LANGUAGE_CODE_DZO\020\223\004\022\032\n\025ISO" +
      "_LANGUAGE_CODE_HAT\020\224\004\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_HAU\020\225\004\022\031\n\024ISO_LANGUAGE_CODE_UR\020\226\004\022\032\n\025" +
      "ISO_LANGUAGE_CODE_PRA\020\227\004\022\032\n\025ISO_LANGUAGE" +
      "_CODE_HAW\020\230\004\022\032\n\025ISO_LANGUAGE_CODE_XAL\020\231\004" +
      "\022\032\n\025ISO_LANGUAGE_CODE_ZEN\020\232\004\022\031\n\024ISO_LANG" +
      "UAGE_CODE_UZ\020\233\004\022\032\n\025ISO_LANGUAGE_CODE_KHA" +
      "\020\234\004\022\032\n\025ISO_LANGUAGE_CODE_MLG\020\235\004\022\032\n\025ISO_L" +
      "ANGUAGE_CODE_PRO\020\236\004\022\032\n\025ISO_LANGUAGE_CODE" +
      "_KHI\020\237\004\022\032\n\025ISO_LANGUAGE_CODE_NNO\020\240\004\022\031\n\024I" +
      "SO_LANGUAGE_CODE_VE\020\241\004\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_KHM\020\242\004\022\031\n\024ISO_LANGUAGE_CODE_VI\020\243\004\022\032\n" +
      "\025ISO_LANGUAGE_CODE_KHO\020\244\004\022\032\n\025ISO_LANGUAG" +
      "E_CODE_MLT\020\245\004\022\032\n\025ISO_LANGUAGE_CODE_IDO\020\246" +
      "\004\022\032\n\025ISO_LANGUAGE_CODE_CYM\020\247\004\022\031\n\024ISO_LAN" +
      "GUAGE_CODE_VO\020\250\004\022\032\n\025ISO_LANGUAGE_CODE_SY" +
      "C\020\251\004\022\032\n\025ISO_LANGUAGE_CODE_AUS\020\252\004\022\032\n\025ISO_" +
      "LANGUAGE_CODE_NOB\020\253\004\022\032\n\025ISO_LANGUAGE_COD" +
      "E_QUE\020\254\004\022\032\n\025ISO_LANGUAGE_CODE_GAA\020\255\004\022\032\n\025" +
      "ISO_LANGUAGE_CODE_NOG\020\256\004\022\031\n\024ISO_LANGUAGE" +
      "_CODE_WA\020\257\004\022\032\n\025ISO_LANGUAGE_CODE_KIK\020\260\004\022" +
      "\032\n\025ISO_LANGUAGE_CODE_NON\020\261\004\022\032\n\025ISO_LANGU" +
      "AGE_CODE_AVA\020\262\004\022\032\n\025ISO_LANGUAGE_CODE_SYR" +
      "\020\263\004\022\032\n\025ISO_LANGUAGE_CODE_NOR\020\264\004\022\032\n\025ISO_L" +
      "ANGUAGE_CODE_AVE\020\265\004\022\032\n\025ISO_LANGUAGE_CODE" +
      "_KIN\020\266\004\022\032\n\025ISO_LANGUAGE_CODE_KIR\020\267\004\022\031\n\024I" +
      "SO_LANGUAGE_CODE_WO\020\270\004\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_ZGH\020\271\004\022\032\n\025ISO_LANGUAGE_CODE_GAY\020\272\004\022\032" +
      "\n\025ISO_LANGUAGE_CODE_WAK\020\273\004\022\032\n\025ISO_LANGUA" +
      "GE_CODE_MNC\020\274\004\022\032\n\025ISO_LANGUAGE_CODE_WAL\020" +
      "\275\004\022\032\n\025ISO_LANGUAGE_CODE_ORI\020\276\004\022\032\n\025ISO_LA" +
      "NGUAGE_CODE_GBA\020\277\004\022\032\n\025ISO_LANGUAGE_CODE_" +
      "WAS\020\300\004\022\032\n\025ISO_LANGUAGE_CODE_MNI\020\301\004\022\032\n\025IS" +
      "O_LANGUAGE_CODE_WAR\020\302\004\022\032\n\025ISO_LANGUAGE_C" +
      "ODE_AWA\020\303\004\022\032\n\025ISO_LANGUAGE_CODE_ORM\020\304\004\022\032" +
      "\n\025ISO_LANGUAGE_CODE_MNO\020\305\004\022\031\n\024ISO_LANGUA" +
      "GE_CODE_XH\020\306\004\022\032\n\025ISO_LANGUAGE_CODE_ZHA\020\307" +
      "\004\022\032\n\025ISO_LANGUAGE_CODE_BYN\020\310\004\022\032\n\025ISO_LAN" +
      "GUAGE_CODE_OSA\020\311\004\022\032\n\025ISO_LANGUAGE_CODE_Z" +
      "HO\020\312\004\022\032\n\025ISO_LANGUAGE_CODE_HEB\020\313\004\022\032\n\025ISO" +
      "_LANGUAGE_CODE_MOH\020\314\004\022\032\n\025ISO_LANGUAGE_CO" +
      "DE_MON\020\315\004\022\032\n\025ISO_LANGUAGE_CODE_NQO\020\316\004\022\032\n" +
      "\025ISO_LANGUAGE_CODE_OSS\020\317\004\022\032\n\025ISO_LANGUAG" +
      "E_CODE_PUS\020\320\004\022\031\n\024ISO_LANGUAGE_CODE_YI\020\321\004" +
      "\022\032\n\025ISO_LANGUAGE_CODE_MOS\020\322\004\022\032\n\025ISO_LANG" +
      "UAGE_CODE_FAN\020\323\004\022\032\n\025ISO_LANGUAGE_CODE_HE" +
      "R\020\324\004\022\032\n\025ISO_LANGUAGE_CODE_FAO\020\325\004\022\031\n\024ISO_" +
      "LANGUAGE_CODE_YO\020\326\004\022\032\n\025ISO_LANGUAGE_CODE" +
      "_FAT\020\327\004\022\032\n\025ISO_LANGUAGE_CODE_FAS\020\330\004\022\032\n\025I" +
      "SO_LANGUAGE_CODE_OTA\020\331\004\022\032\n\025ISO_LANGUAGE_" +
      "CODE_VAI\020\332\004\022\031\n\024ISO_LANGUAGE_CODE_ZA\020\333\004\022\032" +
      "\n\025ISO_LANGUAGE_CODE_OTO\020\334\004\022\031\n\024ISO_LANGUA" +
      "GE_CODE_ZH\020\335\004\022\032\n\025ISO_LANGUAGE_CODE_AYM\020\336" +
      "\004\022\031\n\024ISO_LANGUAGE_CODE_ZU\020\337\004\022\032\n\025ISO_LANG" +
      "UAGE_CODE_KMB\020\340\004\022\032\n\025ISO_LANGUAGE_CODE_II" +
      "I\020\341\004\022\032\n\025ISO_LANGUAGE_CODE_LOL\020\342\004\022\032\n\025ISO_" +
      "LANGUAGE_CODE_NSO\020\343\004\022\032\n\025ISO_LANGUAGE_COD" +
      "E_AZE\020\344\004\022\032\n\025ISO_LANGUAGE_CODE_GEM\020\345\004\022\032\n\025" +
      "ISO_LANGUAGE_CODE_YID\020\346\004\022\032\n\025ISO_LANGUAGE" +
      "_CODE_LOZ\020\347\004\022\032\n\025ISO_LANGUAGE_CODE_GEZ\020\350\004" +
      "\022\032\n\025ISO_LANGUAGE_CODE_WEN\020\351\004\022\032\n\025ISO_LANG" +
      "UAGE_CODE_MRI\020\352\004\022\032\n\025ISO_LANGUAGE_CODE_IJ" +
      "O\020\353\004\022\032\n\025ISO_LANGUAGE_CODE_MSA\020\354\004\022\032\n\025ISO_" +
      "LANGUAGE_CODE_NUB\020\355\004\022\032\n\025ISO_LANGUAGE_COD" +
      "E_XHO\020\356\004\022\032\n\025ISO_LANGUAGE_CODE_KOK\020\357\004\022\032\n\025" +
      "ISO_LANGUAGE_CODE_KOM\020\360\004\022\032\n\025ISO_LANGUAGE" +
      "_CODE_HIL\020\361\004\022\032\n\025ISO_LANGUAGE_CODE_KON\020\362\004" +
      "\022\032\n\025ISO_LANGUAGE_CODE_HIN\020\363\004\022\032\n\025ISO_LANG" +
      "UAGE_CODE_HIM\020\364\004\022\032\n\025ISO_LANGUAGE_CODE_KO" +
      "S\020\365\004\022\032\n\025ISO_LANGUAGE_CODE_KOR\020\366\004\022\032\n\025ISO_" +
      "LANGUAGE_CODE_DAK\020\367\004\022\032\n\025ISO_LANGUAGE_COD" +
      "E_DAN\020\370\004\022\032\n\025ISO_LANGUAGE_CODE_IKU\020\371\004\022\032\n\025" +
      "ISO_LANGUAGE_CODE_HIT\020\372\004\022\032\n\025ISO_LANGUAGE" +
      "_CODE_DAR\020\373\004\022\032\n\025ISO_LANGUAGE_CODE_TAH\020\374\004" +
      "\022\032\n\025ISO_LANGUAGE_CODE_DAY\020\375\004\022\032\n\025ISO_LANG" +
      "UAGE_CODE_TAI\020\376\004\022\032\n\025ISO_LANGUAGE_CODE_VE" +
      "N\020\377\004\022\032\n\025ISO_LANGUAGE_CODE_TAM\020\200\005\022\032\n\025ISO_" +
      "LANGUAGE_CODE_KPE\020\201\005\022\032\n\025ISO_LANGUAGE_COD" +
      "E_ILE\020\202\005\022\032\n\025ISO_LANGUAGE_CODE_TAT\020\203\005\022\032\n\025" +
      "ISO_LANGUAGE_CODE_ILO\020\204\005\022\032\n\025ISO_LANGUAGE" +
      "_CODE_ZND\020\205\005\022\032\n\025ISO_LANGUAGE_CODE_NWC\020\206\005" +
      "\022\032\n\025ISO_LANGUAGE_CODE_UDM\020\207\005\022\032\n\025ISO_LANG" +
      "UAGE_CODE_MUL\020\210\005\022\032\n\025ISO_LANGUAGE_CODE_CA" +
      "D\020\211\005\022\032\n\025ISO_LANGUAGE_CODE_MUN\020\212\005\022\032\n\025ISO_" +
      "LANGUAGE_CODE_CAI\020\213\005\022\032\n\025ISO_LANGUAGE_COD" +
      "E_MUS\020\214\005\022\032\n\025ISO_LANGUAGE_CODE_GIL\020\215\005\022\032\n\025" +
      "ISO_LANGUAGE_CODE_CAR\020\216\005\022\032\n\025ISO_LANGUAGE" +
      "_CODE_CAU\020\217\005\022\032\n\025ISO_LANGUAGE_CODE_CAT\020\220\005" +
      "\022\032\n\025ISO_LANGUAGE_CODE_SAD\020\221\005\022\032\n\025ISO_LANG" +
      "UAGE_CODE_SAG\020\222\005\022\032\n\025ISO_LANGUAGE_CODE_SA" +
      "I\020\223\005\022\032\n\025ISO_LANGUAGE_CODE_SAH\020\224\005\022\032\n\025ISO_" +
      "LANGUAGE_CODE_INA\020\225\005\022\032\n\025ISO_LANGUAGE_COD" +
      "E_KRC\020\226\005\022\032\n\025ISO_LANGUAGE_CODE_IND\020\227\005\022\032\n\025" +
      "ISO_LANGUAGE_CODE_SAM\020\230\005\022\032\n\025ISO_LANGUAGE" +
      "_CODE_INC\020\231\005\022\032\n\025ISO_LANGUAGE_CODE_SAL\020\232\005" +
      "\022\032\n\025ISO_LANGUAGE_CODE_SAN\020\233\005\022\032\n\025ISO_LANG" +
      "UAGE_CODE_INE\020\234\005\022\032\n\025ISO_LANGUAGE_CODE_IN" +
      "H\020\235\005\022\032\n\025ISO_LANGUAGE_CODE_KRL\020\236\005\022\032\n\025ISO_" +
      "LANGUAGE_CODE_SAS\020\237\005\022\032\n\025ISO_LANGUAGE_COD" +
      "E_SAT\020\240\005\022\032\n\025ISO_LANGUAGE_CODE_JPN\020\241\005\022\032\n\025" +
      "ISO_LANGUAGE_CODE_EFI\020\242\005\022\032\n\025ISO_LANGUAGE" +
      "_CODE_KRO\020\243\005\022\032\n\025ISO_LANGUAGE_CODE_JPR\020\244\005" +
      "\022\032\n\025ISO_LANGUAGE_CODE_KRU\020\245\005\022\032\n\025ISO_LANG" +
      "UAGE_CODE_LTZ\020\246\005\022\032\n\025ISO_LANGUAGE_CODE_NY" +
      "A\020\247\005\022\032\n\025ISO_LANGUAGE_CODE_LUB\020\250\005\022\032\n\025ISO_" +
      "LANGUAGE_CODE_LUA\020\251\005\022\032\n\025ISO_LANGUAGE_COD" +
      "E_LUG\020\252\005*\3778\n\020IsoTerritoryCode\022\032\n\026ISO_TER" +
      "RITORY_CODE_P_R\020\000\022\032\n\026ISO_TERRITORY_CODE_" +
      "P_S\020\001\022\032\n\026ISO_TERRITORY_CODE_P_T\020\002\022\032\n\026ISO" +
      "_TERRITORY_CODE_P_W\020\003\022\032\n\026ISO_TERRITORY_C" +
      "ODE_P_Y\020\004\022\032\n\026ISO_TERRITORY_CODE_Q_A\020\005\022\'\n" +
      "#ISO_TERRITORY_CODE_E_S__MINUS___C_E\020\006\022\'" +
      "\n#ISO_TERRITORY_CODE_E_S__MINUS___C_N\020\007\022" +
      "\032\n\026ISO_TERRITORY_CODE_A_D\020\010\022\032\n\026ISO_TERRI" +
      "TORY_CODE_A_E\020\t\022\032\n\026ISO_TERRITORY_CODE_A_" +
      "F\020\n\022\032\n\026ISO_TERRITORY_CODE_A_G\020\013\022\032\n\026ISO_T" +
      "ERRITORY_CODE_A_I\020\014\022\032\n\026ISO_TERRITORY_COD" +
      "E_A_L\020\r\022\032\n\026ISO_TERRITORY_CODE_A_M\020\016\022\032\n\026I" +
      "SO_TERRITORY_CODE_A_N\020\017\022\032\n\026ISO_TERRITORY" +
      "_CODE_A_O\020\020\022\032\n\026ISO_TERRITORY_CODE_A_Q\020\021\022" +
      "\032\n\026ISO_TERRITORY_CODE_A_R\020\022\022\032\n\026ISO_TERRI" +
      "TORY_CODE_A_S\020\023\022\032\n\026ISO_TERRITORY_CODE_A_" +
      "T\020\024\022\032\n\026ISO_TERRITORY_CODE_R_E\020\025\022\032\n\026ISO_T" +
      "ERRITORY_CODE_A_U\020\026\022\032\n\026ISO_TERRITORY_COD" +
      "E_A_W\020\027\022\032\n\026ISO_TERRITORY_CODE_A_X\020\030\022\032\n\026I" +
      "SO_TERRITORY_CODE_A_Z\020\031\022\032\n\026ISO_TERRITORY" +
      "_CODE_R_O\020\032\022\032\n\026ISO_TERRITORY_CODE_B_A\020\033\022" +
      "\032\n\026ISO_TERRITORY_CODE_B_B\020\034\022\032\n\026ISO_TERRI" +
      "TORY_CODE_R_S\020\035\022\032\n\026ISO_TERRITORY_CODE_B_" +
      "D\020\036\022\032\n\026ISO_TERRITORY_CODE_B_E\020\037\022\032\n\026ISO_T" +
      "ERRITORY_CODE_R_U\020 \022\032\n\026ISO_TERRITORY_COD" +
      "E_B_F\020!\022\032\n\026ISO_TERRITORY_CODE_B_G\020\"\022\032\n\026I" +
      "SO_TERRITORY_CODE_R_W\020#\022\032\n\026ISO_TERRITORY" +
      "_CODE_B_H\020$\022\032\n\026ISO_TERRITORY_CODE_B_I\020%\022" +
      "\032\n\026ISO_TERRITORY_CODE_B_J\020&\022\032\n\026ISO_TERRI" +
      "TORY_CODE_B_L\020\'\022\032\n\026ISO_TERRITORY_CODE_B_" +
      "M\020(\022\032\n\026ISO_TERRITORY_CODE_B_N\020)\022\032\n\026ISO_T" +
      "ERRITORY_CODE_B_O\020*\022\032\n\026ISO_TERRITORY_COD" +
      "E_S_A\020+\022\032\n\026ISO_TERRITORY_CODE_B_Q\020,\022\032\n\026I" +
      "SO_TERRITORY_CODE_S_B\020-\022\032\n\026ISO_TERRITORY" +
      "_CODE_B_R\020.\022\032\n\026ISO_TERRITORY_CODE_S_C\020/\022" +
      "\032\n\026ISO_TERRITORY_CODE_B_S\0200\022\032\n\026ISO_TERRI" +
      "TORY_CODE_S_D\0201\022\032\n\026ISO_TERRITORY_CODE_B_" +
      "T\0202\022\032\n\026ISO_TERRITORY_CODE_S_E\0203\022\032\n\026ISO_T" +
      "ERRITORY_CODE_B_V\0204\022\032\n\026ISO_TERRITORY_COD" +
      "E_S_G\0205\022\032\n\026ISO_TERRITORY_CODE_B_W\0206\022\032\n\026I" +
      "SO_TERRITORY_CODE_S_H\0207\022\032\n\026ISO_TERRITORY" +
      "_CODE_S_I\0208\022\032\n\026ISO_TERRITORY_CODE_B_Y\0209\022" +
      "\032\n\026ISO_TERRITORY_CODE_S_J\020:\022\032\n\026ISO_TERRI" +
      "TORY_CODE_B_Z\020;\022\032\n\026ISO_TERRITORY_CODE_S_" +
      "K\020<\022\032\n\026ISO_TERRITORY_CODE_S_L\020=\022\032\n\026ISO_T" +
      "ERRITORY_CODE_S_M\020>\022\032\n\026ISO_TERRITORY_COD" +
      "E_S_N\020?\022\032\n\026ISO_TERRITORY_CODE_S_O\020@\022\032\n\026I" +
      "SO_TERRITORY_CODE_C_A\020A\022\032\n\026ISO_TERRITORY" +
      "_CODE_S_R\020B\022\032\n\026ISO_TERRITORY_CODE_C_C\020C\022" +
      "\032\n\026ISO_TERRITORY_CODE_S_S\020D\022\032\n\026ISO_TERRI" +
      "TORY_CODE_C_D\020E\022\032\n\026ISO_TERRITORY_CODE_S_" +
      "T\020F\022\032\n\026ISO_TERRITORY_CODE_C_F\020G\022\032\n\026ISO_T" +
      "ERRITORY_CODE_S_V\020H\022\032\n\026ISO_TERRITORY_COD" +
      "E_C_G\020I\022\032\n\026ISO_TERRITORY_CODE_C_H\020J\022\032\n\026I" +
      "SO_TERRITORY_CODE_S_X\020K\022\032\n\026ISO_TERRITORY" +
      "_CODE_C_I\020L\022\032\n\026ISO_TERRITORY_CODE_S_Y\020M\022" +
      "\032\n\026ISO_TERRITORY_CODE_S_Z\020N\022\032\n\026ISO_TERRI" +
      "TORY_CODE_C_K\020O\022\032\n\026ISO_TERRITORY_CODE_C_" +
      "L\020P\022\032\n\026ISO_TERRITORY_CODE_C_M\020Q\022\032\n\026ISO_T" +
      "ERRITORY_CODE_C_N\020R\022\032\n\026ISO_TERRITORY_COD" +
      "E_C_O\020S\022\032\n\026ISO_TERRITORY_CODE_C_R\020T\022\032\n\026I" +
      "SO_TERRITORY_CODE_T_C\020U\022\032\n\026ISO_TERRITORY" +
      "_CODE_C_S\020V\022\032\n\026ISO_TERRITORY_CODE_T_D\020W\022" +
      "\032\n\026ISO_TERRITORY_CODE_C_U\020X\022\032\n\026ISO_TERRI" +
      "TORY_CODE_T_F\020Y\022\032\n\026ISO_TERRITORY_CODE_C_" +
      "V\020Z\022\032\n\026ISO_TERRITORY_CODE_T_G\020[\022\032\n\026ISO_T" +
      "ERRITORY_CODE_C_W\020\\\022\032\n\026ISO_TERRITORY_COD" +
      "E_T_H\020]\022\032\n\026ISO_TERRITORY_CODE_C_X\020^\022\032\n\026I" +
      "SO_TERRITORY_CODE_C_Y\020_\022\032\n\026ISO_TERRITORY" +
      "_CODE_T_J\020`\022\032\n\026ISO_TERRITORY_CODE_C_Z\020a\022" +
      "\032\n\026ISO_TERRITORY_CODE_T_K\020b\022\032\n\026ISO_TERRI" +
      "TORY_CODE_T_L\020c\022\032\n\026ISO_TERRITORY_CODE_T_" +
      "M\020d\022\032\n\026ISO_TERRITORY_CODE_T_N\020e\022\032\n\026ISO_T" +
      "ERRITORY_CODE_T_O\020f\022\032\n\026ISO_TERRITORY_COD" +
      "E_T_R\020g\022\032\n\026ISO_TERRITORY_CODE_T_T\020h\022\032\n\026I" +
      "SO_TERRITORY_CODE_D_E\020i\022\032\n\026ISO_TERRITORY" +
      "_CODE_T_V\020j\022\032\n\026ISO_TERRITORY_CODE_T_W\020k\022" +
      "\032\n\026ISO_TERRITORY_CODE_D_J\020l\022\032\n\026ISO_TERRI" +
      "TORY_CODE_T_Z\020m\022\032\n\026ISO_TERRITORY_CODE_D_" +
      "K\020n\022\032\n\026ISO_TERRITORY_CODE_D_M\020o\022\032\n\026ISO_T" +
      "ERRITORY_CODE_D_O\020p\022\032\n\026ISO_TERRITORY_COD" +
      "E_U_A\020q\022\032\n\026ISO_TERRITORY_CODE_U_G\020r\022\032\n\026I" +
      "SO_TERRITORY_CODE_D_Z\020s\022\032\n\026ISO_TERRITORY" +
      "_CODE_U_M\020t\022\032\n\026ISO_TERRITORY_CODE_E_C\020u\022" +
      "\032\n\026ISO_TERRITORY_CODE_U_S\020v\022\032\n\026ISO_TERRI" +
      "TORY_CODE_E_E\020w\022\032\n\026ISO_TERRITORY_CODE_E_" +
      "G\020x\022\032\n\026ISO_TERRITORY_CODE_E_H\020y\022\032\n\026ISO_T" +
      "ERRITORY_CODE_U_Y\020z\022\032\n\026ISO_TERRITORY_COD" +
      "E_U_Z\020{\022\032\n\026ISO_TERRITORY_CODE_V_A\020|\022\032\n\026I" +
      "SO_TERRITORY_CODE_E_R\020}\022\032\n\026ISO_TERRITORY" +
      "_CODE_V_C\020~\022\032\n\026ISO_TERRITORY_CODE_E_S\020\177\022" +
      "\033\n\026ISO_TERRITORY_CODE_E_T\020\200\001\022\033\n\026ISO_TERR" +
      "ITORY_CODE_V_E\020\201\001\022\033\n\026ISO_TERRITORY_CODE_" +
      "V_G\020\202\001\022\033\n\026ISO_TERRITORY_CODE_V_I\020\203\001\022\033\n\026I" +
      "SO_TERRITORY_CODE_V_N\020\204\001\022\033\n\026ISO_TERRITOR" +
      "Y_CODE_V_U\020\205\001\022\033\n\026ISO_TERRITORY_CODE_F_I\020" +
      "\206\001\022\033\n\026ISO_TERRITORY_CODE_F_J\020\207\001\022\033\n\026ISO_T" +
      "ERRITORY_CODE_F_K\020\210\001\022\033\n\026ISO_TERRITORY_CO" +
      "DE_F_M\020\211\001\022\033\n\026ISO_TERRITORY_CODE_F_O\020\212\001\022\033" +
      "\n\026ISO_TERRITORY_CODE_F_R\020\213\001\022\033\n\026ISO_TERRI" +
      "TORY_CODE_W_F\020\214\001\022\033\n\026ISO_TERRITORY_CODE_G" +
      "_A\020\215\001\022\033\n\026ISO_TERRITORY_CODE_G_B\020\216\001\022\033\n\026IS" +
      "O_TERRITORY_CODE_W_S\020\217\001\022\033\n\026ISO_TERRITORY" +
      "_CODE_G_D\020\220\001\022\033\n\026ISO_TERRITORY_CODE_G_E\020\221" +
      "\001\022\033\n\026ISO_TERRITORY_CODE_G_F\020\222\001\022\033\n\026ISO_TE" +
      "RRITORY_CODE_G_G\020\223\001\022\033\n\026ISO_TERRITORY_COD" +
      "E_G_H\020\224\001\022\033\n\026ISO_TERRITORY_CODE_G_I\020\225\001\022\033\n" +
      "\026ISO_TERRITORY_CODE_G_L\020\226\001\022\033\n\026ISO_TERRIT" +
      "ORY_CODE_G_M\020\227\001\022\033\n\026ISO_TERRITORY_CODE_G_" +
      "N\020\230\001\022\033\n\026ISO_TERRITORY_CODE_G_P\020\231\001\022\033\n\026ISO" +
      "_TERRITORY_CODE_G_Q\020\232\001\022\033\n\026ISO_TERRITORY_" +
      "CODE_G_R\020\233\001\022(\n#ISO_TERRITORY_CODE_E_S__M" +
      "INUS___M_L\020\234\001\022\033\n\026ISO_TERRITORY_CODE_G_S\020" +
      "\235\001\022\033\n\026ISO_TERRITORY_CODE_G_T\020\236\001\022\033\n\026ISO_T" +
      "ERRITORY_CODE_G_U\020\237\001\022\033\n\026ISO_TERRITORY_CO" +
      "DE_G_W\020\240\001\022\033\n\026ISO_TERRITORY_CODE_G_Y\020\241\001\022\033" +
      "\n\026ISO_TERRITORY_CODE_H_K\020\242\001\022\033\n\026ISO_TERRI" +
      "TORY_CODE_H_M\020\243\001\022\033\n\026ISO_TERRITORY_CODE_H" +
      "_N\020\244\001\022\033\n\026ISO_TERRITORY_CODE_H_R\020\245\001\022\033\n\026IS" +
      "O_TERRITORY_CODE_H_T\020\246\001\022\033\n\026ISO_TERRITORY" +
      "_CODE_Y_E\020\247\001\022\033\n\026ISO_TERRITORY_CODE_H_U\020\250" +
      "\001\022\033\n\026ISO_TERRITORY_CODE_I_D\020\251\001\022\033\n\026ISO_TE" +
      "RRITORY_CODE_Y_T\020\252\001\022\033\n\026ISO_TERRITORY_COD" +
      "E_I_E\020\253\001\022\033\n\026ISO_TERRITORY_CODE_I_L\020\254\001\022\033\n" +
      "\026ISO_TERRITORY_CODE_I_M\020\255\001\022\033\n\026ISO_TERRIT" +
      "ORY_CODE_I_N\020\256\001\022\033\n\026ISO_TERRITORY_CODE_I_",
      "O\020\257\001\022\033\n\026ISO_TERRITORY_CODE_Z_A\020\260\001\022\033\n\026ISO" +
      "_TERRITORY_CODE_I_Q\020\261\001\022\033\n\026ISO_TERRITORY_" +
      "CODE_I_R\020\262\001\022\033\n\026ISO_TERRITORY_CODE_I_S\020\263\001" +
      "\022\033\n\026ISO_TERRITORY_CODE_I_T\020\264\001\022\033\n\026ISO_TER" +
      "RITORY_CODE_Z_M\020\265\001\022\033\n\026ISO_TERRITORY_CODE" +
      "_J_E\020\266\001\022\033\n\026ISO_TERRITORY_CODE_Z_W\020\267\001\022\033\n\026" +
      "ISO_TERRITORY_CODE_J_M\020\270\001\022\033\n\026ISO_TERRITO" +
      "RY_CODE_J_O\020\271\001\022\033\n\026ISO_TERRITORY_CODE_J_P" +
      "\020\272\001\022\033\n\026ISO_TERRITORY_CODE_K_E\020\273\001\022\033\n\026ISO_" +
      "TERRITORY_CODE_K_G\020\274\001\022\033\n\026ISO_TERRITORY_C" +
      "ODE_K_H\020\275\001\022\033\n\026ISO_TERRITORY_CODE_K_I\020\276\001\022" +
      "\033\n\026ISO_TERRITORY_CODE_K_M\020\277\001\022\033\n\026ISO_TERR" +
      "ITORY_CODE_K_N\020\300\001\022\033\n\026ISO_TERRITORY_CODE_" +
      "K_P\020\301\001\022\033\n\026ISO_TERRITORY_CODE_K_R\020\302\001\022\033\n\026I" +
      "SO_TERRITORY_CODE_K_W\020\303\001\022\033\n\026ISO_TERRITOR" +
      "Y_CODE_K_Y\020\304\001\022\033\n\026ISO_TERRITORY_CODE_K_Z\020" +
      "\305\001\022\033\n\026ISO_TERRITORY_CODE_L_A\020\306\001\022\033\n\026ISO_T" +
      "ERRITORY_CODE_L_B\020\307\001\022\033\n\026ISO_TERRITORY_CO" +
      "DE_L_C\020\310\001\022\033\n\026ISO_TERRITORY_CODE_L_I\020\311\001\022\033" +
      "\n\026ISO_TERRITORY_CODE_L_K\020\312\001\022\033\n\026ISO_TERRI" +
      "TORY_CODE_L_R\020\313\001\022\033\n\026ISO_TERRITORY_CODE_L" +
      "_S\020\314\001\022\033\n\026ISO_TERRITORY_CODE_L_T\020\315\001\022\033\n\026IS" +
      "O_TERRITORY_CODE_L_U\020\316\001\022\033\n\026ISO_TERRITORY" +
      "_CODE_L_V\020\317\001\022\033\n\026ISO_TERRITORY_CODE_L_Y\020\320" +
      "\001\022\033\n\026ISO_TERRITORY_CODE_M_A\020\321\001\022\033\n\026ISO_TE" +
      "RRITORY_CODE_M_C\020\322\001\022\033\n\026ISO_TERRITORY_COD" +
      "E_M_D\020\323\001\022\033\n\026ISO_TERRITORY_CODE_M_E\020\324\001\022\033\n" +
      "\026ISO_TERRITORY_CODE_M_F\020\325\001\022\033\n\026ISO_TERRIT" +
      "ORY_CODE_M_G\020\326\001\022\033\n\026ISO_TERRITORY_CODE_M_" +
      "H\020\327\001\022\033\n\026ISO_TERRITORY_CODE_M_K\020\330\001\022\033\n\026ISO" +
      "_TERRITORY_CODE_M_L\020\331\001\022\033\n\026ISO_TERRITORY_" +
      "CODE_M_M\020\332\001\022\033\n\026ISO_TERRITORY_CODE_M_N\020\333\001" +
      "\022\033\n\026ISO_TERRITORY_CODE_M_O\020\334\001\022\033\n\026ISO_TER" +
      "RITORY_CODE_M_P\020\335\001\022\033\n\026ISO_TERRITORY_CODE" +
      "_M_Q\020\336\001\022\033\n\026ISO_TERRITORY_CODE_M_R\020\337\001\022\033\n\026" +
      "ISO_TERRITORY_CODE_M_S\020\340\001\022\033\n\026ISO_TERRITO" +
      "RY_CODE_M_T\020\341\001\022\033\n\026ISO_TERRITORY_CODE_M_U" +
      "\020\342\001\022\033\n\026ISO_TERRITORY_CODE_M_V\020\343\001\022\033\n\026ISO_" +
      "TERRITORY_CODE_M_W\020\344\001\022\033\n\026ISO_TERRITORY_C" +
      "ODE_M_X\020\345\001\022\033\n\026ISO_TERRITORY_CODE_M_Y\020\346\001\022" +
      "\033\n\026ISO_TERRITORY_CODE_M_Z\020\347\001\022\033\n\026ISO_TERR" +
      "ITORY_CODE_N_A\020\350\001\022\033\n\026ISO_TERRITORY_CODE_" +
      "N_C\020\351\001\022\033\n\026ISO_TERRITORY_CODE_N_E\020\352\001\022\033\n\026I" +
      "SO_TERRITORY_CODE_N_F\020\353\001\022\033\n\026ISO_TERRITOR" +
      "Y_CODE_N_G\020\354\001\022\033\n\026ISO_TERRITORY_CODE_N_I\020" +
      "\355\001\022\033\n\026ISO_TERRITORY_CODE_N_L\020\356\001\022\033\n\026ISO_T" +
      "ERRITORY_CODE_N_O\020\357\001\022\033\n\026ISO_TERRITORY_CO" +
      "DE_N_P\020\360\001\022\033\n\026ISO_TERRITORY_CODE_N_R\020\361\001\022\033" +
      "\n\026ISO_TERRITORY_CODE_N_U\020\362\001\022\033\n\026ISO_TERRI" +
      "TORY_CODE_N_Z\020\363\001\022\033\n\026ISO_TERRITORY_CODE_O" +
      "_M\020\364\001\022\033\n\026ISO_TERRITORY_CODE_P_A\020\365\001\022\033\n\026IS" +
      "O_TERRITORY_CODE_P_E\020\366\001\022\033\n\026ISO_TERRITORY" +
      "_CODE_P_F\020\367\001\022\033\n\026ISO_TERRITORY_CODE_P_G\020\370" +
      "\001\022\033\n\026ISO_TERRITORY_CODE_P_H\020\371\001\022\033\n\026ISO_TE" +
      "RRITORY_CODE_P_K\020\372\001\022\033\n\026ISO_TERRITORY_COD" +
      "E_P_L\020\373\001\022\033\n\026ISO_TERRITORY_CODE_P_M\020\374\001\022\033\n" +
      "\026ISO_TERRITORY_CODE_P_N\020\375\001*Y\n\rLabelNameT" +
      "ype\022&\n\"LABEL_NAME_TYPE_DISPLAY_LABEL_NAM" +
      "E\020\000\022 \n\034LABEL_NAME_TYPE_USER_DEFINED\020\001*F\n" +
      "\tLabelType\022\033\n\027LABEL_TYPE_USER_DEFINED\020\000\022" +
      "\034\n\030LABEL_TYPE_DISPLAY_LABEL\020\001*\302\001\n\030Langua" +
      "geLocalizationType\022%\n!LANGUAGE_LOCALIZAT" +
      "ION_TYPE_DUBBED\020\000\022+\n\'LANGUAGE_LOCALIZATI" +
      "ON_TYPE_MULTILINGUAL\020\001\022)\n%LANGUAGE_LOCAL" +
      "IZATION_TYPE_SUB_TITLED\020\002\022\'\n#LANGUAGE_LO" +
      "CALIZATION_TYPE_ORIGINAL\020\003*n\n\rLicenseRec" +
      "ord\022\036\n\032LICENSE_RECORD_HAS_LICENSE\020\000\022\032\n\026L" +
      "ICENSE_RECORD_UNKNOWN\020\001\022!\n\035LICENSE_RECOR" +
      "D_HAS_NO_LICENSE\020\002*q\n\024LicenseRefusalReas" +
      "on\0220\n,LICENSE_REFUSAL_REASON_WORK_IN_PUB" +
      "LIC_DOMAIN\020\000\022\'\n#LICENSE_REFUSAL_REASON_U" +
      "SER_DEFINED\020\001*\216\005\n\026LicenseRejectionReason" +
      "\022=\n9LICENSE_REJECTION_REASON_DUPLICATE_L" +
      "ICENSE_REQUEST_NUMBER\020\000\0222\n.LICENSE_REJEC" +
      "TION_REASON_WORK_IN_PUBLIC_DOMAIN\020\001\022+\n\'L" +
      "ICENSE_REJECTION_REASON_LICENSE_EXISTS\020\002" +
      "\022/\n+LICENSE_REJECTION_REASON_LICENSE_NOT" +
      "_NEEDED\020\003\0228\n4LICENSE_REJECTION_REASON_RE" +
      "FERENCED_DOCUMENT_MISSING\020\004\022,\n(LICENSE_R" +
      "EJECTION_REASON_WRONG_ADDRESSEE\020\005\0225\n1LIC" +
      "ENSE_REJECTION_REASON_WORK_USED_MULTIPLE" +
      "_TIMES\020\006\022?\n;LICENSE_REJECTION_REASON_DIS" +
      "AGREEMENT_OVER_SCOPE_OF_LICENSE\020\007\022,\n(LIC" +
      "ENSE_REJECTION_REASON_LICENSE_BLOCKED\020\010\022" +
      ")\n%LICENSE_REJECTION_REASON_USER_DEFINED" +
      "\020\t\0220\n,LICENSE_REJECTION_REASON_SHARE_SPL" +
      "ITS_DIFFER\020\n\0228\n4LICENSE_REJECTION_REASON" +
      "_DISAGREEMENT_OVER_ROYALTIES\020\013*\313\001\n\031LinkA" +
      "cknowledgementStatus\022(\n$LINK_ACKNOWLEDGE" +
      "MENT_STATUS_CONFLICT\020\000\022,\n(LINK_ACKNOWLED" +
      "GEMENT_STATUS_USER_DEFINED\020\001\022(\n$LINK_ACK" +
      "NOWLEDGEMENT_STATUS_ACCEPTED\020\002\022,\n(LINK_A" +
      "CKNOWLEDGEMENT_STATUS_ACKNOWLEDGED\020\003*\177\n\017" +
      "LinkDescription\022)\n%LINK_DESCRIPTION_VIDE" +
      "O_SCREEN_CAPTURE\020\000\022!\n\035LINK_DESCRIPTION_U" +
      "SER_DEFINED\020\001\022\036\n\032LINK_DESCRIPTION_COVER_" +
      "ART\020\002*\234\002\n\nLyricsType\022\024\n\020LYRICS_TYPE_HOOK" +
      "\020\000\022\026\n\022LYRICS_TYPE_CHORUS\020\001\022\027\n\023LYRICS_TYP" +
      "E_UNKNOWN\020\002\022\030\n\024LYRICS_TYPE_COMPLETE\020\003\022\026\n" +
      "\022LYRICS_TYPE_STANZA\020\004\022\032\n\026LYRICS_TYPE_JAZ" +
      "Z_SCATS\020\005\022 \n\034LYRICS_TYPE_CHORUS_AND_VERS" +
      "E\020\006\022\034\n\030LYRICS_TYPE_USER_DEFINED\020\007\022\025\n\021LYR" +
      "ICS_TYPE_VERSE\020\010\022\"\n\036LYRICS_TYPE_FIRST_LI" +
      "NE_OF_TEXT\020\t*\240\001\n\017MeasurementType\022\032\n\026MEAS" +
      "UREMENT_TYPE_VIDEO\020\000\022)\n%MEASUREMENT_TYPE" +
      "_BOTH_AUDIO_AND_VIDEO\020\001\022\032\n\026MEASUREMENT_T" +
      "YPE_AUDIO\020\002\022*\n&MEASUREMENT_TYPE_EITHER_A" +
      "UDIO_OR_VIDEO\020\003*\200\001\n\016MembershipType\022#\n\037ME" +
      "MBERSHIP_TYPE_NATIONAL_MEMBER\020\000\022#\n\037MEMBE" +
      "RSHIP_TYPE_REGIONAL_MEMBER\020\001\022$\n MEMBERSH" +
      "IP_TYPE_WORLDWIDE_MEMBER\020\002*\216\002\n\021MessageAc" +
      "tionType\022#\n\037MESSAGE_ACTION_TYPE_RE_DELIV" +
      "ERY\020\000\022-\n)MESSAGE_ACTION_TYPE_BACK_CATALO" +
      "G_DELIVERY\020\001\022,\n(MESSAGE_ACTION_TYPE_NEW_" +
      "RELEASE_DELIVERY\020\002\022!\n\035MESSAGE_ACTION_TYP" +
      "E_TAKE_DOWN\020\003\022$\n MESSAGE_ACTION_TYPE_USE" +
      "R_DEFINED\020\004\022.\n*MESSAGE_ACTION_TYPE_HIGH_" +
      "PRIORITY_DELIVERY\020\005*b\n\022MessageControlTyp" +
      "e\022%\n!MESSAGE_CONTROL_TYPE_LIVE_MESSAGE\020\000" +
      "\022%\n!MESSAGE_CONTROL_TYPE_TEST_MESSAGE\020\001*" +
      "t\n\016MessagePurpose\022#\n\037MESSAGE_PURPOSE_ACK" +
      "NOWLEDGEMENT\020\000\022\033\n\027MESSAGE_PURPOSE_LICENS" +
      "E\020\001\022 \n\034MESSAGE_PURPOSE_NDMA_LICENSE\020\002*\300\002" +
      "\n\013MessageType\0223\n/MESSAGE_TYPE_MUSICAL_WO" +
      "RK_CLAIM_REQUEST_MESSAGE\020\000\0228\n4MESSAGE_TY" +
      "PE_MUSICAL_WORK_CLAIM_NOTIFICATION_MESSA" +
      "GE\020\001\022*\n&MESSAGE_TYPE_LO_D_CONFIRMATION_M" +
      "ESSAGE\020\002\022+\n\'MESSAGE_TYPE_LICENSE_REVOCAT" +
      "ION_MESSAGE\020\003\022(\n$MESSAGE_TYPE_LICENSE_RE" +
      "QUEST_MESSAGE\020\004\022\035\n\031MESSAGE_TYPE_LO_D_MES" +
      "SAGE\020\005\022 \n\034MESSAGE_TYPE_LICENSE_MESSAGE\020\006" +
      "*\270\001\n\022MetadataSourceType\022*\n&METADATA_SOUR" +
      "CE_TYPE_METADATA_PROVIDER\020\000\022#\n\037METADATA_" +
      "SOURCE_TYPE_JOURNALIST\020\001\022*\n&METADATA_SOU" +
      "RCE_TYPE_RIGHTS_CONTROLLER\020\002\022%\n!METADATA" +
      "_SOURCE_TYPE_USER_DEFINED\020\003*\210\001\n\021MissingL" +
      "inkReason\022%\n!MISSING_LINK_REASON_NO_LINK" +
      "_FOUND\020\000\022&\n\"MISSING_LINK_REASON_NO_MATCH" +
      "_FOUND\020\001\022$\n MISSING_LINK_REASON_USER_DEF" +
      "INED\020\002*\035\n\004Mode\022\025\n\021MODE_USER_DEFINED\020\000*\215\004" +
      "\n\004Mood\022\016\n\nMOOD_ANGRY\020\000\022\017\n\013MOOD_MELLOW\020\001\022" +
      "\020\n\014MOOD_LOW_KEY\020\002\022\025\n\021MOOD_ANTICIPATION\020\003" +
      "\022\025\n\021MOOD_FEELING_GOOD\020\004\022\022\n\016MOOD_CONFIDEN" +
      "T\020\005\022\r\n\tMOOD_EVIL\020\006\022\022\n\016MOOD_MOTIVATED\020\007\022\020" +
      "\n\014MOOD_SWAGGER\020\010\022\021\n\rMOOD_HUNGOVER\020\t\022\022\n\016M" +
      "OOD_RAINY_DAY\020\n\022\025\n\021MOOD_USER_DEFINED\020\013\022\020" +
      "\n\014MOOD_DISGUST\020\014\022\016\n\nMOOD_HAPPY\020\r\022\016\n\nMOOD" +
      "_CHILL\020\016\022\021\n\rMOOD_SURPRISE\020\017\022\021\n\rMOOD_DRAM" +
      "ATIC\020\020\022\r\n\tMOOD_FREE\020\021\022\022\n\016MOOD_EMPOWERED\020" +
      "\022\022\025\n\021MOOD_FEELING_DOWN\020\023\022\022\n\016MOOD_ENERGIZ" +
      "ED\020\024\022\021\n\rMOOD_ROMANTIC\020\025\022\021\n\rMOOD_PEACEFUL" +
      "\020\026\022\r\n\tMOOD_DARK\020\027\022\014\n\010MOOD_SAD\020\030\022\016\n\nMOOD_" +
      "QUIET\020\031\022\020\n\014MOOD_SOULFUL\020\032\022\022\n\016MOOD_INSPIR" +
      "ING\020\033*y\n\017MoodOrThemeType\022(\n$MOOD_OR_THEM" +
      "E_TYPE_LYRICS_AND_MELODY\020\000\022\035\n\031MOOD_OR_TH" +
      "EME_TYPE_MELODY\020\001\022\035\n\031MOOD_OR_THEME_TYPE_" +
      "LYRICS\020\002*\327\021\n\032MusicalWorkContributorRole\022" +
      "1\n-MUSICAL_WORK_CONTRIBUTOR_ROLE_DIALOGU" +
      "E_AUTHOR\020\000\022*\n&MUSICAL_WORK_CONTRIBUTOR_R" +
      "OLE_ENGRAVER\020\001\0223\n/MUSICAL_WORK_CONTRIBUT" +
      "OR_ROLE_SCREENPLAY_AUTHOR\020\002\022*\n&MUSICAL_W" +
      "ORK_CONTRIBUTOR_ROLE_LYRICIST\020\003\022A\n=MUSIC" +
      "AL_WORK_CONTRIBUTOR_ROLE_WRITER_OF_ACCOM" +
      "PANYING_MATERIAL\020\004\0225\n1MUSICAL_WORK_CONTR" +
      "IBUTOR_ROLE_LANDSCAPE_ARCHITECT\020\005\0224\n0MUS" +
      "ICAL_WORK_CONTRIBUTOR_ROLE_ORIGINAL_PUBL" +
      "ISHER\020\006\022,\n(MUSICAL_WORK_CONTRIBUTOR_ROLE" +
      "_JOURNALIST\020\007\022+\n\'MUSICAL_WORK_CONTRIBUTO" +
      "R_ROLE_CONCEPTOR\020\010\022)\n%MUSICAL_WORK_CONTR" +
      "IBUTOR_ROLE_ADAPTER\020\t\022)\n%MUSICAL_WORK_CO" +
      "NTRIBUTOR_ROLE_CREATOR\020\n\022.\n*MUSICAL_WORK" +
      "_CONTRIBUTOR_ROLE_LITHOGRAPHER\020\013\022/\n+MUSI" +
      "CAL_WORK_CONTRIBUTOR_ROLE_SUB_PUBLISHER\020" +
      "\014\022/\n+MUSICAL_WORK_CONTRIBUTOR_ROLE_WOOD_" +
      "ENGRAVER\020\r\0220\n,MUSICAL_WORK_CONTRIBUTOR_R" +
      "OLE_BOOK_PUBLISHER\020\016\022)\n%MUSICAL_WORK_CON" +
      "TRIBUTOR_ROLE_UNKNOWN\020\017\0220\n,MUSICAL_WORK_" +
      "CONTRIBUTOR_ROLE_METAL_ENGRAVER\020\020\022-\n)MUS" +
      "ICAL_WORK_CONTRIBUTOR_ROLE_PLATE_MAKER\020\021" +
      "\022,\n(MUSICAL_WORK_CONTRIBUTOR_ROLE_TRANSL" +
      "ATOR\020\022\022,\n(MUSICAL_WORK_CONTRIBUTOR_ROLE_" +
      "DISSERTANT\020\023\022.\n*MUSICAL_WORK_CONTRIBUTOR" +
      "_ROLE_SUB_LYRICIST\020\024\0223\n/MUSICAL_WORK_CON" +
      "TRIBUTOR_ROLE_COMPOSER_LYRICIST\020\025\0224\n0MUS" +
      "ICAL_WORK_CONTRIBUTOR_ROLE_COPYRIGHT_CLA" +
      "IMANT\020\026\0226\n2MUSICAL_WORK_CONTRIBUTOR_ROLE" +
      "_AUTHOR_IN_QUOTATIONS\020\027\022.\n*MUSICAL_WORK_" +
      "CONTRIBUTOR_ROLE_USER_DEFINED\020\030\0222\n.MUSIC" +
      "AL_WORK_CONTRIBUTOR_ROLE_NON_LYRIC_AUTHO" +
      "R\020\031\0225\n1MUSICAL_WORK_CONTRIBUTOR_ROLE_NEW" +
      "SPAPER_PUBLISHER\020\032\022*\n&MUSICAL_WORK_CONTR" +
      "IBUTOR_ROLE_COMPILER\020\033\022*\n&MUSICAL_WORK_C" +
      "ONTRIBUTOR_ROLE_COMPOSER\020\034\0226\n2MUSICAL_WO" +
      "RK_CONTRIBUTOR_ROLE_PERIODICAL_PUBLISHER" +
      "\020\035\022*\n&MUSICAL_WORK_CONTRIBUTOR_ROLE_ARRA" +
      "NGER\020\036\022,\n(MUSICAL_WORK_CONTRIBUTOR_ROLE_" +
      "WOODCUTTER\020\037\022,\n(MUSICAL_WORK_CONTRIBUTOR" +
      "_ROLE_PLAYWRIGHT\020 \022*\n&MUSICAL_WORK_CONTR" +
      "IBUTOR_ROLE_REPORTER\020!\0221\n-MUSICAL_WORK_C" +
      "ONTRIBUTOR_ROLE_MUSIC_PUBLISHER\020\"\022.\n*MUS" +
      "ICAL_WORK_CONTRIBUTOR_ROLE_SUB_ARRANGER\020" +
      "#\0222\n.MUSICAL_WORK_CONTRIBUTOR_ROLE_COPYR" +
      "IGHT_HOLDER\020$\0227\n3MUSICAL_WORK_CONTRIBUTO" +
      "R_ROLE_SUBSTITUTED_PUBLISHER\020%\022*\n&MUSICA" +
      "L_WORK_CONTRIBUTOR_ROLE_REVIEWER\020&\022(\n$MU" +
      "SICAL_WORK_CONTRIBUTOR_ROLE_ETCHER\020\'\022+\n\'" +
      "MUSICAL_WORK_CONTRIBUTOR_ROLE_ARCHITECT\020" +
      "(\0225\n1MUSICAL_WORK_CONTRIBUTOR_ROLE_AUTHO" +
      "R_OF_AFTERWORD\020)\022*\n&MUSICAL_WORK_CONTRIB" +
      "UTOR_ROLE_SCULPTOR\020*\022,\n(MUSICAL_WORK_CON" +
      "TRIBUTOR_ROLE_RUBRICATOR\020+\022(\n$MUSICAL_WO" +
      "RK_CONTRIBUTOR_ROLE_AUTHOR\020,\022,\n(MUSICAL_" +
      "WORK_CONTRIBUTOR_ROLE_LIBRETTIST\020-*\221\n\n\017M" +
      "usicalWorkType\022\037\n\033MUSICAL_WORK_TYPE_POTP" +
      "OURRI\020\000\0223\n/MUSICAL_WORK_TYPE_PRODUCTION_" +
      "MUSIC_LIBRARY_WORK\020\001\022\'\n#MUSICAL_WORK_TYP" +
      "E_LYRIC_REPLACEMENT\020\002\022-\n)MUSICAL_WORK_TY" +
      "PE_ADAPTED_WITH_NEW_LYRICS\020\003\022+\n\'MUSICAL_" +
      "WORK_TYPE_MUSICAL_WORK_MOVEMENT\020\004\022(\n$MUS" +
      "ICAL_WORK_TYPE_TV_PRODUCTION_WORK\020\005\022#\n\037M" +
      "USICAL_WORK_TYPE_LYRIC_REMOVAL\020\006\022/\n+MUSI" +
      "CAL_WORK_TYPE_MUSICAL_WORK_WITH_SAMPLES\020" +
      "\007\022\035\n\031MUSICAL_WORK_TYPE_UNKNOWN\020\010\022\034\n\030MUSI" +
      "CAL_WORK_TYPE_MASHUP\020\t\022,\n(MUSICAL_WORK_T" +
      "YPE_DRAMATICO_MUSICAL_WORK\020\n\022\034\n\030MUSICAL_" +
      "WORK_TYPE_MEDLEY\020\013\022\'\n#MUSICAL_WORK_TYPE_" +
      "LYRIC_TRANSLATION\020\014\022-\n)MUSICAL_WORK_TYPE" +
      "_UNSPECIFIED_ARRANGEMENT\020\r\022\"\n\036MUSICAL_WO" +
      "RK_TYPE_USER_DEFINED\020\016\022,\n(MUSICAL_WORK_T" +
      "YPE_COMPOSITE_MUSICAL_WORK\020\017\022+\n\'MUSICAL_" +
      "WORK_TYPE_VIDEO_PRODUCTION_WORK\020\020\022-\n)MUS" +
      "ICAL_WORK_TYPE_ARRANGED_WITH_NEW_MUSIC\020\021" +
      "\022/\n+MUSICAL_WORK_TYPE_MUSIC_ARRANGEMENT_" +
      "OF_TEXT\020\022\022+\n\'MUSICAL_WORK_TYPE_RADIO_PRO" +
      "DUCTION_WORK\020\023\0222\n.MUSICAL_WORK_TYPE_ADAP" +
      "TED_IN_ORIGINAL_LANGUAGE\020\024\0221\n-MUSICAL_WO" +
      "RK_TYPE_ORIGINAL_LYRICS_ARRANGEMENT\020\025\0226\n" +
      "2MUSICAL_WORK_TYPE_UNSPECIFIED_MUSICAL_W" +
      "ORK_EXCERPT\020\026\022/\n+MUSICAL_WORK_TYPE_ADAPT" +
      "ED_INSTRUMENTAL_WORK\020\027\022-\n)MUSICAL_WORK_T" +
      "YPE_THEATER_PRODUCTION_WORK\020\030\022+\n\'MUSICAL" +
      "_WORK_TYPE_ORIGINAL_MUSICAL_WORK\020\031\0220\n,MU" +
      "SICAL_WORK_TYPE_MULTIMEDIA_PRODUCTION_WO" +
      "RK\020\032\022\'\n#MUSICAL_WORK_TYPE_MUSIC_ARRANGEM" +
      "ENT\020\033\022/\n+MUSICAL_WORK_TYPE_ORIGINAL_MUSI" +
      "C_ADAPTATION\020\034*R\n\016MwnlFileStatus\022\035\n\031MWNL" +
      "_FILE_STATUS_FILE_O_K\020\000\022!\n\035MWNL_FILE_STA" +
      "TUS_USER_DEFINED\020\001*l\n\026MwnlProposedAction" +
      "Type\022&\n\"MWNL_PROPOSED_ACTION_TYPE_RESUBM" +
      "IT\020\000\022*\n&MWNL_PROPOSED_ACTION_TYPE_USER_D" +
      "EFINED\020\001*\316/\n\rNewStudioRole\022&\n\"NEW_STUDIO" +
      "_ROLE_PRODUCTION_MANAGER\020\000\022\034\n\030NEW_STUDIO" +
      "_ROLE_REDACTOR\020\001\022#\n\037NEW_STUDIO_ROLE_SERI" +
      "ES_PRODUCER\020\002\022\"\n\036NEW_STUDIO_ROLE_PRE_PRO" +
      "DUCTION\020\003\022)\n%NEW_STUDIO_ROLE_CO_EXECUTIV" +
      "E_PRODUCER\020\004\022$\n NEW_STUDIO_ROLE_STUDIO_P" +
      "ERSONNEL\020\005\022!\n\035NEW_STUDIO_ROLE_TAPE_OPERA" +
      "TOR\020\006\022+\n\'NEW_STUDIO_ROLE_PRE_PRODUCTION_" +
      "ENGINEER\020\007\022\034\n\030NEW_STUDIO_ROLE_MUSICIAN\020\010" +
      "\022&\n\"NEW_STUDIO_ROLE_PRODUCTION_COMPANY\020\t" +
      "\022-\n)NEW_STUDIO_ROLE_CHIEF_LIGHTING_TECHN" +
      "ICIAN\020\n\022\"\n\036NEW_STUDIO_ROLE_PYROTECHNICIA" +
      "N\020\013\022%\n!NEW_STUDIO_ROLE_SCRIPT_SUPERVISOR" +
      "\020\014\022(\n$NEW_STUDIO_ROLE_RESEARCH_TEAM_MEMB" +
      "ER\020\r\022 \n\034NEW_STUDIO_ROLE_USER_DEFINED\020\016\022&" +
      "\n\"NEW_STUDIO_ROLE_CONTINUITY_CHECKER\020\017\022\'" +
      "\n#NEW_STUDIO_ROLE_ADDITIONAL_ENGINEER\020\020\022" +
      "&\n\"NEW_STUDIO_ROLE_ASSISTANT_DIRECTOR\020\021\022" +
      "(\n$NEW_STUDIO_ROLE_PHOTOGRAPHY_DIRECTOR\020" +
      "\022\022\034\n\030NEW_STUDIO_ROLE_DIRECTOR\020\023\022#\n\037NEW_S" +
      "TUDIO_ROLE_EDITOR_IN_CHIEF\020\024\0227\n3NEW_STUD" +
      "IO_ROLE_ASSISTANT_CHIEF_LIGHTING_TECHNIC" +
      "IAN\020\025\022\"\n\036NEW_STUDIO_ROLE_VOCAL_PRODUCER\020" +
      "\026\022$\n NEW_STUDIO_ROLE_SCENIC_OPERATIVE\020\027\022" +
      "\'\n#NEW_STUDIO_ROLE_PUBLISHING_DIRECTOR\020\030" +
      "\022#\n\037NEW_STUDIO_ROLE_STUDIO_PRODUCER\020\031\022\"\n" +
      "\036NEW_STUDIO_ROLE_STAGE_DIRECTOR\020\032\022\034\n\030NEW" +
      "_STUDIO_ROLE_ARMOURER\020\033\022\037\n\033NEW_STUDIO_RO" +
      "LE_SOUND_MIXER\020\034\022#\n\037NEW_STUDIO_ROLE_SECO" +
      "ND_ENGINEER\020\035\0224\n0NEW_STUDIO_ROLE_ARTIST_" +
      "BACKGROUND_VOCAL_ENGINEER\020\036\022#\n\037NEW_STUDI" +
      "O_ROLE_CAMERA_OPERATOR\020\037\022$\n NEW_STUDIO_R" +
      "OLE_OVERDUB_ENGINEER\020 \022 \n\034NEW_STUDIO_ROL" +
      "E_VIDEOGRAPHER\020!\022$\n NEW_STUDIO_ROLE_SUBT" +
      "ITLES_EDITOR\020\"\022\'\n#NEW_STUDIO_ROLE_A_AND_" +
      "R_COORDINATOR\020#\022!\n\035NEW_STUDIO_ROLE_VISUA" +
      "L_EDITOR\020$\022#\n\037NEW_STUDIO_ROLE_MIXING_ENG" +
      "INEER\020%\0224\n0NEW_STUDIO_ROLE_SECOND_ASSIST" +
      "ANT_CAMERA_OPERATOR\020&\022\032\n\026NEW_STUDIO_ROLE" +
      "_BINDER\020\'\022\030\n\024NEW_STUDIO_ROLE_GRIP\020(\022-\n)N" +
      "EW_STUDIO_ROLE_ASSISTANT_CAMERA_OPERATOR" +
      "\020)\022!\n\035NEW_STUDIO_ROLE_FILM_DIRECTOR\020*\022\"\n" +
      "\036NEW_STUDIO_ROLE_CLAPPER_LOADER\020+\022%\n!NEW" +
      "_STUDIO_ROLE_REMIXING_ENGINEER\020,\022&\n\"NEW_" +
      "STUDIO_ROLE_BOOKPLATE_DESIGNER\020-\022,\n(NEW_" +
      "STUDIO_ROLE_TRACKING_SECOND_ENGINEER\020.\022!" +
      "\n\035NEW_STUDIO_ROLE_BOOK_DESIGNER\020/\022\037\n\033NEW" +
      "_STUDIO_ROLE_HAIRDRESSER\0200\022:\n6NEW_STUDIO" +
      "_ROLE_TRANSFERS_AND_SAFETIES_SECOND_ENGI" +
      "NEER\0201\022$\n NEW_STUDIO_ROLE_COSTUME_DESIGN" +
      "ER\0202\022\"\n\036NEW_STUDIO_ROLE_MAKE_UP_ARTIST\0203" +
      "\0220\n,NEW_STUDIO_ROLE_RIGHTS_CONTROLLER_ON" +
      "_PRODUCT\0204\022$\n NEW_STUDIO_ROLE_LOCATION_M" +
      "ANAGER\0205\0226\n2NEW_STUDIO_ROLE_DIGITAL_AUDI" +
      "O_WORKSTATION_ENGINEER\0206\022#\n\037NEW_STUDIO_R" +
      "OLE_STRING_ENGINEER\0207\022$\n NEW_STUDIO_ROLE" +
      "_PROGRAM_PRODUCER\0208\022,\n(NEW_STUDIO_ROLE_R" +
      "EMIXING_SECOND_ENGINEER\0209\022%\n!NEW_STUDIO_" +
      "ROLE_GRAPHIC_ASSISTANT\020:\022*\n&NEW_STUDIO_R" +
      "OLE_MIXING_SECOND_ENGINEER\020;\022\033\n\027NEW_STUD" +
      "IO_ROLE_LEADMAN\020<\022\036\n\032NEW_STUDIO_ROLE_TON" +
      "MEISTER\020=\022+\n\'NEW_STUDIO_ROLE_ASSISTANT_V" +
      "ISUAL_EDITOR\020>\022)\n%NEW_STUDIO_ROLE_PRODUC" +
      "TION_DEPARTMENT\020?\0223\n/NEW_STUDIO_ROLE_TRA" +
      "NSFERS_AND_SAFETIES_ENGINEER\020@\022\033\n\027NEW_ST" +
      "UDIO_ROLE_DRESSER\020A\022\034\n\030NEW_STUDIO_ROLE_A" +
      "NIMATOR\020B\022%\n!NEW_STUDIO_ROLE_LIGHTING_DI" +
      "RECTOR\020C\022\'\n#NEW_STUDIO_ROLE_LIGHTING_TEC" +
      "HNICIAN\020D\022$\n NEW_STUDIO_ROLE_FILM_DISTRI" +
      "BUTOR\020E\022$\n NEW_STUDIO_ROLE_INITIAL_PRODU" +
      "CER\020F\022!\n\035NEW_STUDIO_ROLE_CORRESPONDENT\020G" +
      "\022\036\n\032NEW_STUDIO_ROLE_CONSULTANT\020H\022(\n$NEW_" +
      "STUDIO_ROLE_SUBTITLES_TRANSLATOR\020I\022)\n%NE" +
      "W_STUDIO_ROLE_ARTIST_VOCAL_ENGINEER\020J\022\032\n" +
      "\026NEW_STUDIO_ROLE_RIGGER\020K\0220\n,NEW_STUDIO_" +
      "ROLE_ARTIST_VOCAL_SECOND_ENGINEER\020L\022\036\n\032N" +
      "EW_STUDIO_ROLE_REPETITEUR\020M\022\034\n\030NEW_STUDI" +
      "O_ROLE_RESTAGER\020N\022$\n NEW_STUDIO_ROLE_GRA" +
      "PHIC_DESIGNER\020O\022(\n$NEW_STUDIO_ROLE_BROAD" +
      "CAST_JOURNALIST\020P\022,\n(NEW_STUDIO_ROLE_DIG" +
      "ITAL_EDITING_ENGINEER\020Q\022$\n NEW_STUDIO_RO" +
      "LE_BINDING_DESIGNER\020R\022\"\n\036NEW_STUDIO_ROLE" +
      "_DIALOGUE_COACH\020S\022\"\n\036NEW_STUDIO_ROLE_FIG" +
      "HT_DIRECTOR\020T\022(\n$NEW_STUDIO_ROLE_COMPILA" +
      "TION_PRODUCER\020U\022\036\n\032NEW_STUDIO_ROLE_CONTR" +
      "ACTOR\020V\0222\n.NEW_STUDIO_ROLE_DIRECT_STREAM" +
      "_DIGITAL_ENGINEER\020W\022\033\n\027NEW_STUDIO_ROLE_E" +
      "NCODER\020X\022 \n\034NEW_STUDIO_ROLE_MANUFACTURER" +
      "\020Y\022&\n\"NEW_STUDIO_ROLE_RECORDING_ENGINEER" +
      "\020Z\022$\n NEW_STUDIO_ROLE_STUDIO_CONDUCTOR\020[" +
      "\022 \n\034NEW_STUDIO_ROLE_ART_DIRECTOR\020\\\022\034\n\030NE" +
      "W_STUDIO_ROLE_KEY_GRIP\020]\022-\n)NEW_STUDIO_R" +
      "OLE_RECORDING_SECOND_ENGINEER\020^\022\"\n\036NEW_S" +
      "TUDIO_ROLE_COVER_DESIGNER\020_\022(\n$NEW_STUDI" +
      "O_ROLE_DISTRIBUTION_COMPANY\020`\022\037\n\033NEW_STU" +
      "DIO_ROLE_FILM_EDITOR\020a\022\'\n#NEW_STUDIO_ROL" +
      "E_FILM_SOUND_ENGINEER\020b\022#\n\037NEW_STUDIO_RO" +
      "LE_STRING_PRODUCER\020c\022%\n!NEW_STUDIO_ROLE_" +
      "TRACKING_ENGINEER\020d\022 \n\034NEW_STUDIO_ROLE_S" +
      "ET_DESIGNER\020e\022(\n$NEW_STUDIO_ROLE_PROGRAM" +
      "MING_ENGINEER\020f\022\035\n\031NEW_STUDIO_ROLE_ANNOT" +
      "ATOR\020g\022\032\n\026NEW_STUDIO_ROLE_DUBBER\020h\022&\n\"NE" +
      "W_STUDIO_ROLE_ASSISTANT_PRODUCER\020i\022 \n\034NE" +
      "W_STUDIO_ROLE_FOLEY_EDITOR\020j\022 \n\034NEW_STUD" +
      "IO_ROLE_MATTE_ARTIST\020k\0223\n/NEW_STUDIO_ROL" +
      "E_DIGITAL_EDITING_SECOND_ENGINEER\020l\022$\n N" +
      "EW_STUDIO_ROLE_REISSUE_PRODUCER\020m\022\035\n\031NEW" +
      "_STUDIO_ROLE_CARPENTER\020n\022\"\n\036NEW_STUDIO_R" +
      "OLE_MUSIC_DIRECTOR\020o\022!\n\035NEW_STUDIO_ROLE_" +
      "POST_PRODUCER\020p\022\032\n\026NEW_STUDIO_ROLE_RUNNE" +
      "R\020q\022!\n\035NEW_STUDIO_ROLE_CHOREOGRAPHER\020r\022-" +
      "\n)NEW_STUDIO_ROLE_COMMISSIONING_BROADCAS" +
      "TER\020s\022$\n NEW_STUDIO_ROLE_PROPERTY_MANAGE" +
      "R\020t\022\032\n\026NEW_STUDIO_ROLE_EXPERT\020u\022\"\n\036NEW_S" +
      "TUDIO_ROLE_ANIMAL_TRAINER\020v\022\037\n\033NEW_STUDI" +
      "O_ROLE_FOLEY_MIXER\020w\022-\n)NEW_STUDIO_ROLE_" +
      "MASTERING_SECOND_ENGINEER\020x\022%\n!NEW_STUDI" +
      "O_ROLE_BOOKJACK_DESIGNER\020y\022\'\n#NEW_STUDIO" +
      "_ROLE_BROADCAST_ASSISTANT\020z\022\037\n\033NEW_STUDI" +
      "O_ROLE_SET_DRESSER\020{\022\034\n\030NEW_STUDIO_ROLE_" +
      "DESIGNER\020|\022\034\n\030NEW_STUDIO_ROLE_ENGINEER\020}" +
      "\022!\n\035NEW_STUDIO_ROLE_FILM_PRODUCER\020~\022\037\n\033N" +
      "EW_STUDIO_ROLE_CO_PRODUCER\020\177\022\'\n\"NEW_STUD" +
      "IO_ROLE_MASTERING_ENGINEER\020\200\001\022\"\n\035NEW_STU" +
      "DIO_ROLE_BOOK_PRODUCER\020\201\001\022\037\n\032NEW_STUDIO_" +
      "ROLE_RESEARCHER\020\202\001\022#\n\036NEW_STUDIO_ROLE_SO" +
      "UND_DESIGNER\020\203\001\022\036\n\031NEW_STUDIO_ROLE_GREEN" +
      "SMAN\020\204\001\022/\n*NEW_STUDIO_ROLE_SPECIAL_EFFEC" +
      "TS_TECHNICIAN\020\205\001\022)\n$NEW_STUDIO_ROLE_SECO" +
      "ND_UNIT_DIRECTOR\020\206\001\022\035\n\030NEW_STUDIO_ROLE_W" +
      "ARDROBE\020\207\001\022!\n\034NEW_STUDIO_ROLE_FOCUS_PULL" +
      "ER\020\210\001\022\'\n\"NEW_STUDIO_ROLE_RESEARCH_TEAM_H" +
      "EAD\020\211\001\022.\n)NEW_STUDIO_ROLE_VISUAL_EFFECTS" +
      "_TECHNICIAN\020\212\001\022$\n\037NEW_STUDIO_ROLE_SOUND_" +
      "RECORDIST\020\213\001\022+\n&NEW_STUDIO_ROLE_TRANSPOR" +
      "TATION_MANAGER\020\214\001\022!\n\034NEW_STUDIO_ROLE_VIS" +
      "ION_MIXER\020\215\001\022\'\n\"NEW_STUDIO_ROLE_TECHNICA" +
      "L_DIRECTOR\020\216\001\022\"\n\035NEW_STUDIO_ROLE_NEWS_PR" +
      "ODUCER\020\217\001\022\034\n\027NEW_STUDIO_ROLE_SPONSOR\020\220\001\022" +
      ")\n$NEW_STUDIO_ROLE_PRODUCTION_SECRETARY\020" +
      "\221\001\022!\n\034NEW_STUDIO_ROLE_FOLEY_ARTIST\020\222\001\022#\n" +
      "\036NEW_STUDIO_ROLE_VIDEO_PRODUCER\020\223\001\022\'\n\"NE" +
      "W_STUDIO_ROLE_SCIENTIFIC_ADVISOR\020\224\001\022\"\n\035N" +
      "EW_STUDIO_ROLE_AURAL_TRAINER\020\225\001\022&\n!NEW_S" +
      "TUDIO_ROLE_EDITOR_OF_THE_DAY\020\226\001\022,\n\'NEW_S" +
      "TUDIO_ROLE_PROGRAM_PROPOSAL_WRITER\020\227\001\022.\n" +
      ")NEW_STUDIO_ROLE_SECOND_ASSISTANT_DIRECT" +
      "OR\020\230\001\022%\n NEW_STUDIO_ROLE_CASTING_DIRECTO" +
      "R\020\231\001\022\'\n\"NEW_STUDIO_ROLE_EXECUTIVE_PRODUC" +
      "ER\020\232\001\022\"\n\035NEW_STUDIO_ROLE_FLOOR_MANAGER\020\233",
      "\001\022\033\n\026NEW_STUDIO_ROLE_EDITOR\020\234\001\022,\n\'NEW_ST" +
      "UDIO_ROLE_OVERDUB_SECOND_ENGINEER\020\235\001\022\033\n\026" +
      "NEW_STUDIO_ROLE_CENSOR\020\236\001*\244\001\n\023OperatingS" +
      "ystemType\022!\n\035OPERATING_SYSTEM_TYPE_UNKNO" +
      "WN\020\000\022!\n\035OPERATING_SYSTEM_TYPE_SYMBIAN\020\001\022" +
      "!\n\035OPERATING_SYSTEM_TYPE_MAC_O_S\020\002\022$\n OP" +
      "ERATING_SYSTEM_TYPE_MS_WINDOWS\020\003*P\n\tPLin" +
      "eType\022\"\n\036P_LINE_TYPE_REMASTERING_P_LINE\020" +
      "\000\022\037\n\033P_LINE_TYPE_ORIGINAL_P_LINE\020\001*\216\002\n\023P" +
      "arentalWarningType\022&\n\"PARENTAL_WARNING_T" +
      "YPE_NOT_EXPLICIT\020\000\022!\n\035PARENTAL_WARNING_T" +
      "YPE_UNKNOWN\020\001\022-\n)PARENTAL_WARNING_TYPE_N" +
      "O_ADVICE_AVAILABLE\020\002\022\"\n\036PARENTAL_WARNING" +
      "_TYPE_EXPLICIT\020\003\0221\n-PARENTAL_WARNING_TYP" +
      "E_EXPLICIT_CONTENT_EDITED\020\004\022&\n\"PARENTAL_" +
      "WARNING_TYPE_USER_DEFINED\020\005*\264\002\n\025PartyRel" +
      "ationshipType\022&\n\"PARTY_RELATIONSHIP_TYPE" +
      "_HAS_MEMBER\020\000\022&\n\"PARTY_RELATIONSHIP_TYPE" +
      "_IS_PART_OF\020\001\022\'\n#PARTY_RELATIONSHIP_TYPE" +
      "_IS_CHILD_OF\020\002\022(\n$PARTY_RELATIONSHIP_TYP" +
      "E_IS_MEMBER_OF\020\003\022$\n PARTY_RELATIONSHIP_T" +
      "YPE_HAS_PART\020\004\022(\n$PARTY_RELATIONSHIP_TYP" +
      "E_USER_DEFINED\020\005\022(\n$PARTY_RELATIONSHIP_T" +
      "YPE_IS_PARENT_OF\020\006*\306\002\n\016PercentageType\022+\n" +
      "\'PERCENTAGE_TYPE_PERCENTAGE_OF_NET_SALES" +
      "\020\000\022/\n+PERCENTAGE_TYPE_PERCENTAGE_OF_GROS" +
      "S_REVENUE\020\001\0226\n2PERCENTAGE_TYPE_PERCENTAG" +
      "E_OF_FREE_GOODS_PERMITTED\020\002\022-\n)PERCENTAG" +
      "E_TYPE_PERCENTAGE_OF_NET_REVENUE\020\003\0228\n4PE" +
      "RCENTAGE_TYPE_PERCENTAGE_OF_STATUTORY_RO" +
      "YALTY_RATE\020\004\0225\n1PERCENTAGE_TYPE_PERCENTA" +
      "GE_OF_PRICE_CONSUMER_PAID\020\005*\320\003\n\006Period\022\027" +
      "\n\023PERIOD_EXPERIMENTAL\020\000\022\027\n\023PERIOD_CONTEM" +
      "PORARY\020\001\022\030\n\024PERIOD_IMPRESSIONISM\020\002\022\030\n\024PE" +
      "RIOD_ARS_SUBTILIOR\020\003\022\030\n\024PERIOD_NEOCLASSI" +
      "CISM\020\004\022\026\n\022PERIOD_HIGH_MODERN\020\005\022\030\n\024PERIOD" +
      "_ANCIENT_MUSIC\020\006\022\021\n\rPERIOD_MODERN\020\007\022\026\n\022P" +
      "ERIOD_RENAISSANCE\020\010\022\023\n\017PERIOD_MEDIEVAL\020\t" +
      "\022\027\n\023PERIOD_GALANT_MUSIC\020\n\022\026\n\022PERIOD_POST" +
      "_MODERN\020\013\022\023\n\017PERIOD_ARS_NOVA\020\014\022\024\n\020PERIOD" +
      "_CLASSICAL\020\r\022\027\n\023PERIOD_USER_DEFINED\020\016\022\026\n" +
      "\022PERIOD_ARS_ANTIQUA\020\017\022\030\n\024PERIOD_LATE_ROM" +
      "ANTIC\020\020\022\022\n\016PERIOD_BAROQUE\020\021\022\031\n\025PERIOD_EA" +
      "RLY_ROMANTIC\020\022*\263\003\n\023PhysicalCarrierType\022#" +
      "\n\037PHYSICAL_CARRIER_TYPE_DUAL_DISC\020\000\022(\n$P" +
      "HYSICAL_CARRIER_TYPE_VIDEO_CASSETTE\020\001\022\035\n" +
      "\031PHYSICAL_CARRIER_TYPE_C_D\020\002\022\037\n\033PHYSICAL" +
      "_CARRIER_TYPE_D_V_D\020\003\022\'\n#PHYSICAL_CARRIE" +
      "R_TYPE_MEMORY_DEVICE\020\004\022!\n\035PHYSICAL_CARRI" +
      "ER_TYPE_BLU_RAY\020\005\022*\n&PHYSICAL_CARRIER_TY" +
      "PE_COMPACT_CASSETTE\020\006\022!\n\035PHYSICAL_CARRIE" +
      "R_TYPE_S_A_C_D\020\007\022$\n PHYSICAL_CARRIER_TYP" +
      "E_VINYL_DISK\020\010\022$\n PHYSICAL_CARRIER_TYPE_" +
      "COMBI_PACK\020\t\022&\n\"PHYSICAL_CARRIER_TYPE_US" +
      "ER_DEFINED\020\n*\235\001\n\024PriceInformationType\022*\n" +
      "&PRICE_INFORMATION_TYPE_PRE_ORDER_PRICE\020" +
      "\000\022\'\n#PRICE_INFORMATION_TYPE_USER_DEFINED" +
      "\020\001\0220\n,PRICE_INFORMATION_TYPE_STANDARD_RE" +
      "TAIL_PRICE\020\002*\335\001\n\013ProductType\022\036\n\032PRODUCT_" +
      "TYPE_AUDIO_PRODUCT\020\000\022+\n\'PRODUCT_TYPE_MIX" +
      "ED_MEDIA_BUNDLE_PRODUCT\020\001\022\036\n\032PRODUCT_TYP" +
      "E_VIDEO_PRODUCT\020\002\022\037\n\033PRODUCT_TYPE_MOBILE" +
      "_PRODUCT\020\003\022!\n\035PRODUCT_TYPE_GRAPHICS_PROD" +
      "UCT\020\004\022\035\n\031PRODUCT_TYPE_USER_DEFINED\020\005*\255\003\n" +
      "\tProfileId\022&\n\"PROFILE_ID_RADIO_BROADCAST" +
      "_PROFILE\020\000\022\"\n\036PROFILE_ID_BASIC_AUDIO_PRO" +
      "FILE\020\001\022#\n\037PROFILE_ID_AUDIO_VISUAL_PROFIL" +
      "E\020\002\022D\n@PROFILE_ID_FINANCIAL_REPORTING_TO" +
      "_RECORD_COMPANIES_PROFILE_S_R_B\020\003\022\"\n\036PRO" +
      "FILE_ID_MASTER_LIST_PROFILE\020\004\022(\n$PROFILE" +
      "_ID_BASIC_AUDIO_PROFILE_S_R_B\020\005\022(\n$PROFI" +
      "LE_ID_MASTER_LIST_PROFILE_S_R_B\020\006\022\034\n\030PRO" +
      "FILE_ID_U_G_C_PROFILE\020\007\022)\n%PROFILE_ID_AU" +
      "DIO_VISUAL_PROFILE_S_R_B\020\010\022(\n$PROFILE_ID" +
      "_ROYALTY_REPORTING_PROFILE\020\t*\322\001\n\007Purpose" +
      "\022\036\n\032PURPOSE_FILM_TRAILER_MUSIC\020\000\022!\n\035PURP" +
      "OSE_CHANNEL_TRAILER_MUSIC\020\001\022\023\n\017PURPOSE_E" +
      "XTRACT\020\002\022\031\n\025PURPOSE_TRAILER_MUSIC\020\003\022\030\n\024P" +
      "URPOSE_USER_DEFINED\020\004\022\034\n\030PURPOSE_BACKGRO" +
      "UND_MUSIC\020\005\022\034\n\030PURPOSE_FOREGROUND_MUSIC\020" +
      "\006*\346\023\n\014RatingAgency\022\031\n\025RATING_AGENCY_T_E_" +
      "L_A\020\000\022\027\n\023RATING_AGENCY_V_E_T\020\001\022&\n\"RATING" +
      "_AGENCY_F_I_L_M__MINUS___P_E\020\002\022\031\n\025RATING" +
      "_AGENCY_R_D_C_Q\020\003\022\031\n\025RATING_AGENCY_B_F_S" +
      "_C\020\004\022\027\n\023RATING_AGENCY_M_D_A\020\005\022\033\n\027RATING_" +
      "AGENCY_B_M_U_K_K\020\006\022&\n\"RATING_AGENCY_F_I_" +
      "L_M__MINUS___G_R\020\007\022\027\n\023RATING_AGENCY_N_B_" +
      "C\020\010\022\033\n\027RATING_AGENCY_M_C_C_A_A\020\t\022\033\n\027RATI" +
      "NG_AGENCY_N_F_V_C_B\020\n\022\031\n\025RATING_AGENCY_M" +
      "_D_C_B\020\013\022\035\n\031RATING_AGENCY_A_N_A_T_E_L\020\014\022" +
      "\"\n\036RATING_AGENCY_S_M__MINUS___S_A\020\r\022&\n\"R" +
      "ATING_AGENCY_F_I_L_M__MINUS___C_H\020\016\022\031\n\025R" +
      "ATING_AGENCY_I_C_A_A\020\017\022&\n\"RATING_AGENCY_" +
      "F_I_L_M__MINUS___S_K\020\020\022\031\n\025RATING_AGENCY_" +
      "M_F_C_B\020\021\022\036\n\032RATING_AGENCY_USER_DEFINED\020" +
      "\022\022\027\n\023RATING_AGENCY_L_S_F\020\023\022\027\n\023RATING_AGE" +
      "NCY_F_S_K\020\024\022\027\n\023RATING_AGENCY_F_C_B\020\025\022\031\n\025" +
      "RATING_AGENCY_M_E_K_U\020\026\022\027\n\023RATING_AGENCY" +
      "_M_I_C\020\027\022&\n\"RATING_AGENCY_O_F_L_C__MINUS" +
      "___N_Z\020\030\022\031\n\025RATING_AGENCY_M_P_A_A\020\031\022\027\n\023R" +
      "ATING_AGENCY_N_K_C\020\032\022\031\n\025RATING_AGENCY_A_" +
      "C_M_A\020\033\022\036\n\032RATING_AGENCY_FILMTILSYNET\020\034\022" +
      "\031\n\025RATING_AGENCY_O_F_L_C\020\035\022\027\n\023RATING_AGE" +
      "NCY_EIRIN\020\036\022\031\n\025RATING_AGENCY_B_F_C_O\020\037\022\032" +
      "\n\026RATING_AGENCY_SI_B_C_I\020 \022\031\n\025RATING_AGE" +
      "NCY_K_M_R_B\020!\022\031\n\025RATING_AGENCY_R_I_A_A\020\"" +
      "\022$\n RATING_AGENCY_M_O_C__MINUS___T_W\020#\022\031" +
      "\n\025RATING_AGENCY_P_E_G_I\020$\022\027\n\023RATING_AGEN" +
      "CY_F_C_O\020%\022\027\n\023RATING_AGENCY_C_N_A\020&\022&\n\"R" +
      "ATING_AGENCY_F_I_L_M__MINUS___C_Z\020\'\022\033\n\027R" +
      "ATING_AGENCY_I_F_C_O_F\020(\022\027\n\023RATING_AGENC" +
      "Y_C_N_C\020)\022\027\n\023RATING_AGENCY_F_P_B\020*\022\027\n\023RA" +
      "TING_AGENCY_N_C_S\020+\022\033\n\027RATING_AGENCY_C_H" +
      "_V_R_S\020,\022\027\n\023RATING_AGENCY_R_T_C\020-\022\027\n\023RAT" +
      "ING_AGENCY_R_T_E\020.\022\031\n\025RATING_AGENCY_C_B_" +
      "F_C\020/\022\037\n\033RATING_AGENCY_MEDIETILSYNET\0200\022\031" +
      "\n\025RATING_AGENCY_C_S_C_F\0201\022\027\n\023RATING_AGEN" +
      "CY_A_F_R\0202\022\031\n\025RATING_AGENCY_N_F_R_C\0203\022\033\n" +
      "\027RATING_AGENCY_A_G_C_O_M\0204\022\033\n\027RATING_AGE" +
      "NCY_M_T_R_C_B\0205\022\027\n\023RATING_AGENCY_C_S_A\0206" +
      "\022&\n\"RATING_AGENCY_F_I_L_M__MINUS___E_E\0207" +
      "\022\027\n\023RATING_AGENCY_S_B_B\0208\022&\n\"RATING_AGEN" +
      "CY_F_I_L_M__MINUS___E_G\0209\022\033\n\027RATING_AGEN" +
      "CY_M_P_A_A_T\020:\022\027\n\023RATING_AGENCY_SMAIS\020;\022" +
      "\031\n\025RATING_AGENCY_C_I_C_F\020<\022\031\n\025RATING_AGE" +
      "NCY_K_F_C_B\020=\022\034\n\030RATING_AGENCY_KIJKWIJZE" +
      "R\020>\022&\n\"RATING_AGENCY_S_P_I_O__MINUS___J_" +
      "K\020?\022\033\n\027RATING_AGENCY_D_J_C_T_Q\020@\022\031\n\025RATI" +
      "NG_AGENCY_T_V_P_G\020A\022\027\n\023RATING_AGENCY_M_O" +
      "_C\020B\022\033\n\027RATING_AGENCY_M_B_A_C_T\020C\022\027\n\023RAT" +
      "ING_AGENCY_M_B_U\020D\022\031\n\025RATING_AGENCY_B_B_" +
      "F_C\020E\022\027\n\023RATING_AGENCY_C_C_C\020F\022\031\n\025RATING" +
      "_AGENCY_O_F_R_B\020G\022\027\n\023RATING_AGENCY_C_C_E" +
      "\020H\022\027\n\023RATING_AGENCY_F_A_B\020I\022\025\n\021RATING_AG" +
      "ENCY_K_R\020J\022\031\n\025RATING_AGENCY_I_F_C_O\020K\022\031\n" +
      "\025RATING_AGENCY_B_F_V_C\020L\022\031\n\025RATING_AGENC" +
      "Y_C_B_S_C\020M\022\031\n\025RATING_AGENCY_C_P_B_C\020N\022\033" +
      "\n\027RATING_AGENCY_K_R_R_I_T\020O\022$\n RATING_AG" +
      "ENCY_C_B_S_C__MINUS___F\020P\022\031\n\025RATING_AGEN" +
      "CY_M_K_R_F\020Q\022\027\n\023RATING_AGENCY_F_R_B\020R\022\033\n" +
      "\027RATING_AGENCY_I_N_C_A_A\020S\022\033\n\027RATING_AGE" +
      "NCY_R_C_N_O_F\020T\022\033\n\027RATING_AGENCY_N_I_C_A" +
      "_M\020U\022\031\n\025RATING_AGENCY_E_S_R_B\020V\022\031\n\025RATIN" +
      "G_AGENCY_U_S_F_A\020W*\323\004\n\014RatingReason\022\027\n\023R" +
      "ATING_REASON_DRUGS\020\000\022\032\n\026RATING_REASON_GA" +
      "MBLING\020\001\022!\n\035RATING_REASON_SEXUAL_VIOLENC" +
      "E\020\002\022\033\n\027RATING_REASON_BEHAVIOUR\020\003\022\033\n\027RATI" +
      "NG_REASON_BLASPHEMY\020\004\022\032\n\026RATING_REASON_V" +
      "IOLENCE\020\005\022!\n\035RATING_REASON_ONLINE_GAMEPL" +
      "AY\020\006\022\025\n\021RATING_REASON_SEX\020\007\022\030\n\024RATING_RE" +
      "ASON_NUDITY\020\010\022-\n)RATING_REASON_DISCRIMIN" +
      "ATION_OR_PREJUDICE\020\t\022\036\n\032RATING_REASON_EX" +
      "PLICIT_SEX\020\n\022\037\n\033RATING_REASON_ILLEGAL_DR" +
      "UGS\020\013\022 \n\034RATING_REASON_FEAR_OR_HORROR\020\014\022" +
      "\"\n\036RATING_REASON_EXTREME_VIOLENCE\020\r\022\032\n\026R" +
      "ATING_REASON_LANGUAGE\020\016\022\027\n\023RATING_REASON" +
      "_CRIME\020\017\022\035\n\031RATING_REASON_LEGAL_DRUGS\020\020\022" +
      "\027\n\023RATING_REASON_THEME\020\021\022\036\n\032RATING_REASO" +
      "N_USER_DEFINED\020\022*\332\003\n\016RdrMessageType\022A\n=R" +
      "DR_MESSAGE_TYPE_REQUEST_SOUND_RECORDING_" +
      "RIGHTS_CLAIM_MESSAGE\020\000\022H\nDRDR_MESSAGE_TY" +
      "PE_DECLARATION_OF_SOUND_RECORDING_RIGHTS" +
      "_CLAIM_MESSAGE\020\001\022@\n<RDR_MESSAGE_TYPE_REV" +
      "OKE_SOUND_RECORDING_RIGHTS_CLAIM_MESSAGE" +
      "\020\002\0227\n3RDR_MESSAGE_TYPE_RIGHTS_CLAIM_STAT" +
      "US_UPDATE_MESSAGE\020\003\022<\n8RDR_MESSAGE_TYPE_" +
      "ASSERTION_OF_COLLECTION_MANDATE_MESSAGE\020" +
      "\004\0226\n2RDR_MESSAGE_TYPE_REVOKE_COLLECTION_" +
      "MANDATE_MESSAGE\020\005\022J\nFRDR_MESSAGE_TYPE_AS" +
      "SERTION_OF_COLLECTION_MANDATE_STATUS_UPD" +
      "ATE_MESSAGE\020\006*R\n\016RdrcFileStatus\022\035\n\031RDRC_" +
      "FILE_STATUS_FILE_O_K\020\000\022!\n\035RDRC_FILE_STAT" +
      "US_USER_DEFINED\020\001*\254\001\n\024RecipientRevenueTy" +
      "pe\0229\n5RECIPIENT_REVENUE_TYPE_PERFORMER_A" +
      "ND_PRODUCER_REVENUE\020\000\022,\n(RECIPIENT_REVEN" +
      "UE_TYPE_PERFORMER_REVENUE\020\001\022+\n\'RECIPIENT" +
      "_REVENUE_TYPE_PRODUCER_REVENUE\020\002*\271\002\n\rRec" +
      "ordingMode\022\027\n\023RECORDING_MODE_QUAD\020\000\022\036\n\032R" +
      "ECORDING_MODE_MULTI_TRACK\020\001\022!\n\035RECORDING" +
      "_MODE_SURROUND_SOUND\020\002\022\032\n\026RECORDING_MODE" +
      "_UNKNOWN\020\003\022\027\n\023RECORDING_MODE_MONO\020\004\022!\n\035R" +
      "ECORDING_MODE_BINAURAL_AUDIO\020\005\022\030\n\024RECORD" +
      "ING_MODE_L_C_R\020\006\022\031\n\025RECORDING_MODE_STERE" +
      "O\020\007\022\030\n\024RECORDING_MODE_STEMS\020\010\022%\n!RECORDI" +
      "NG_MODE_MULTICHANNEL_AUDIO\020\t*\305\004\n\021Recordi" +
      "ngPartType\022\034\n\030RECORDING_PART_TYPE_HOOK\020\000" +
      "\022$\n RECORDING_PART_TYPE_SOLO_SECTION\020\001\022\034" +
      "\n\030RECORDING_PART_TYPE_HEAD\020\002\022\036\n\032RECORDIN" +
      "G_PART_TYPE_CHORUS\020\003\022\034\n\030RECORDING_PART_T" +
      "YPE_CODA\020\004\022\"\n\036RECORDING_PART_TYPE_PRE_CH" +
      "ORUS\020\005\022\037\n\033RECORDING_PART_TYPE_PREVIEW\020\006\022" +
      "\034\n\030RECORDING_PART_TYPE_DROP\020\007\022\035\n\031RECORDI" +
      "NG_PART_TYPE_INTRO\020\010\022\034\n\030RECORDING_PART_T" +
      "YPE_USED\020\t\022!\n\035RECORDING_PART_TYPE_BREAKD" +
      "OWN\020\n\022\035\n\031RECORDING_PART_TYPE_OUTRO\020\013\022%\n!" +
      "RECORDING_PART_TYPE_MIDDLE_EIGHTH\020\014\022$\n R" +
      "ECORDING_PART_TYPE_USER_DEFINED\020\r\022\036\n\032REC" +
      "ORDING_PART_TYPE_BRIDGE\020\016\022\"\n\036RECORDING_P" +
      "ART_TYPE_KEY_CHANGE\020\017\022\035\n\031RECORDING_PART_" +
      "TYPE_VERSE\020\020*h\n\021ReferenceCreation\022(\n$REF" +
      "ERENCE_CREATION_CONSUMER_RESOURCE\020\000\022)\n%R" +
      "EFERENCE_CREATION_REFERENCE_RESOURCE\020\001*K" +
      "\n\rReferenceUnit\022\032\n\026REFERENCE_UNIT_PER_US" +
      "E\020\000\022\036\n\032REFERENCE_UNIT_PER_LICENSE\020\001*\303\002\n\022" +
      "RegistrationStatus\0227\n3REGISTRATION_STATU" +
      "S_CLAIM_MEETS_RECOMMENDED_PROFILE\020\000\0223\n/R" +
      "EGISTRATION_STATUS_RESOURCE_REGISTERED_I" +
      "NVALID\020\001\0221\n-REGISTRATION_STATUS_RESOURCE" +
      "_REGISTERED_VALID\020\002\0225\n1REGISTRATION_STAT" +
      "US_CLAIM_MEETS_CORE_DATA_PROFILE\020\003\022&\n\"RE" +
      "GISTRATION_STATUS_PENDING_REVIEW\020\004\022-\n)RE" +
      "GISTRATION_STATUS_REGISTRATION_REJECTED\020" +
      "\005*\252\005\n\023RelatedResourceType\022\'\n#RELATED_RES" +
      "OURCE_TYPE_ALBUM_VERSION\020\000\022,\n(RELATED_RE" +
      "SOURCE_TYPE_A_CAPPELLA_VERSION\020\001\022.\n*RELA" +
      "TED_RESOURCE_TYPE_INSTRUMENTAL_VERSION\020\002" +
      "\022-\n)RELATED_RESOURCE_TYPE_ALTERNATIVE_VE" +
      "RSION\020\003\022*\n&RELATED_RESOURCE_TYPE_ACOUSTI" +
      "C_VERSION\020\004\022\037\n\033RELATED_RESOURCE_TYPE_COV" +
      "ER\020\005\022(\n$RELATED_RESOURCE_TYPE_STUDIO_VER" +
      "SION\020\006\022\"\n\036RELATED_RESOURCE_TYPE_TV_TRACK" +
      "\020\007\022 \n\034RELATED_RESOURCE_TYPE_MEDLEY\020\010\022&\n\"" +
      "RELATED_RESOURCE_TYPE_LIVE_VERSION\020\t\022&\n\"" +
      "RELATED_RESOURCE_TYPE_DEMO_VERSION\020\n\022,\n(" +
      "RELATED_RESOURCE_TYPE_ORIGINAL_RECORDING" +
      "\020\013\022(\n$RELATED_RESOURCE_TYPE_SINGLE_VERSI" +
      "ON\020\014\022&\n\"RELATED_RESOURCE_TYPE_USER_DEFIN" +
      "ED\020\r\022\'\n#RELATED_RESOURCE_TYPE_RADIO_VERS" +
      "ION\020\016\022\'\n#RELATED_RESOURCE_TYPE_CLEAN_VER" +
      "SION\020\017*\371\001\n\021RelationalRelator\022 \n\034RELATION" +
      "AL_RELATOR_LESS_THAN\020\000\022,\n(RELATIONAL_REL" +
      "ATOR_LESS_THAN_OR_EQUAL_TO\020\001\022,\n(RELATION" +
      "AL_RELATOR_MORE_THAN_OR_EQUAL_TO\020\002\022#\n\037RE" +
      "LATIONAL_RELATOR_NOT_EQUAL_TO\020\003\022 \n\034RELAT" +
      "IONAL_RELATOR_MORE_THAN\020\004\022\037\n\033RELATIONAL_" +
      "RELATOR_EQUAL_TO\020\005*\306\001\n\036ReleaseProfileVar" +
      "iantVersionId\022@\n<RELEASE_PROFILE_VARIANT" +
      "_VERSION_ID_BOXED_SET__SP___CLASSICAL\020\000\022" +
      "0\n,RELEASE_PROFILE_VARIANT_VERSION_ID_CL" +
      "ASSICAL\020\001\0220\n,RELEASE_PROFILE_VARIANT_VER" +
      "SION_ID_BOXED_SET\020\002*\206\003\n\027ReleaseProfileVe" +
      "rsionId\022;\n7RELEASE_PROFILE_VERSION_ID_LO" +
      "NG_FORM_MUSICAL_WORK_VIDEO\020\000\022*\n&RELEASE_" +
      "PROFILE_VERSION_ID_MIXED_MEDIA\020\001\022$\n RELE" +
      "ASE_PROFILE_VERSION_ID_VIDEO\020\002\022\'\n#RELEAS" +
      "E_PROFILE_VERSION_ID_RINGTONE\020\003\022%\n!RELEA" +
      "SE_PROFILE_VERSION_ID_DJ_MIX\020\004\022$\n RELEAS" +
      "E_PROFILE_VERSION_ID_AUDIO\020\005\0222\n.RELEASE_" +
      "PROFILE_VERSION_ID_SIMPLE_AUDIO_SINGLE\020\006" +
      "\0222\n.RELEASE_PROFILE_VERSION_ID_SIMPLE_VI" +
      "DEO_SINGLE\020\007*\267\010\n\027ReleaseRelationshipType" +
      "\022?\n;RELEASE_RELATIONSHIP_TYPE_IS_DIGITAL" +
      "_EQUIVALENT_TO_PHYSICAL\020\000\0224\n0RELEASE_REL" +
      "ATIONSHIP_TYPE_IS_EQUIVALENT_TO_AUDIO\020\001\022" +
      "4\n0RELEASE_RELATIONSHIP_TYPE_IS_EXTENDED" +
      "_FROM_ALBUM\020\002\022-\n)RELEASE_RELATIONSHIP_TY" +
      "PE_HAS_SAME_ARTIST\020\003\0225\n1RELEASE_RELATION" +
      "SHIP_TYPE_IS_RELEASE_FROM_RELEASE\020\004\0224\n0R" +
      "ELEASE_RELATIONSHIP_TYPE_IS_EQUIVALENT_T" +
      "O_VIDEO\020\005\0223\n/RELEASE_RELATIONSHIP_TYPE_I" +
      "S_DIFFERENT_ENCODING\020\006\022.\n*RELEASE_RELATI" +
      "ONSHIP_TYPE_HAS_CONTENT_FROM\020\007\022+\n\'RELEAS" +
      "E_RELATIONSHIP_TYPE_IS_FROM_AUDIO\020\010\0225\n1R" +
      "ELEASE_RELATIONSHIP_TYPE_IS_SHORTENED_FR" +
      "OM_ALBUM\020\t\022;\n7RELEASE_RELATIONSHIP_TYPE_" +
      "HAS_ARTIST_FROM_SAME_ENSEMBLE\020\n\022%\n!RELEA" +
      "SE_RELATIONSHIP_TYPE_UNKNOWN\020\013\022+\n\'RELEAS" +
      "E_RELATIONSHIP_TYPE_IS_FROM_VIDEO\020\014\022?\n;R" +
      "ELEASE_RELATIONSHIP_TYPE_IS_PHYSICAL_EQU" +
      "IVALENT_TO_DIGITAL\020\r\0226\n2RELEASE_RELATION" +
      "SHIP_TYPE_HAS_ARTIST_FROM_ENSEMBLE\020\016\0226\n2" +
      "RELEASE_RELATIONSHIP_TYPE_HAS_ENSEMBLE_W" +
      "ITH_ARTIST\020\017\0221\n-RELEASE_RELATIONSHIP_TYP" +
      "E_HAS_SIMILAR_CONTENT\020\020\022/\n+RELEASE_RELAT" +
      "IONSHIP_TYPE_IS_PARENT_RELEASE\020\021\022*\n&RELE" +
      "ASE_RELATIONSHIP_TYPE_USER_DEFINED\020\022\0228\n4" +
      "RELEASE_RELATIONSHIP_TYPE_HAS_SAME_RECOR" +
      "DING_PROJECT\020\023*o\n\023ReleaseResourceType\022*\n" +
      "&RELEASE_RESOURCE_TYPE_PRIMARY_RESOURCE\020" +
      "\000\022,\n(RELEASE_RESOURCE_TYPE_SECONDARY_RES" +
      "OURCE\020\001*\222\016\n\013ReleaseType\022!\n\035RELEASE_TYPE_" +
      "LIVE_EVENT_VIDEO\020\000\022 \n\034RELEASE_TYPE_CLASS" +
      "ICAL_ALBUM\020\001\022+\n\'RELEASE_TYPE_CLASSICAL_M" +
      "ULTIMEDIA_ALBUM\020\002\022\026\n\022RELEASE_TYPE_ALBUM\020" +
      "\003\022\033\n\027RELEASE_TYPE_SHORT_FILM\020\004\022 \n\034RELEAS" +
      "E_TYPE_AS_PER_CONTRACT\020\005\022\035\n\031RELEASE_TYPE" +
      "_FEATURE_FILM\020\006\022!\n\035RELEASE_TYPE_RINGTONE" +
      "_RELEASE\020\007\022(\n$RELEASE_TYPE_SINGLE_RESOUR" +
      "CE_RELEASE\020\010\022#\n\037RELEASE_TYPE_ALERT_TONE_" +
      "RELEASE\020\t\022$\n RELEASE_TYPE_SHEET_MUSIC_RE" +
      "LEASE\020\n\022\036\n\032RELEASE_TYPE_TRACK_RELEASE\020\013\022" +
      ",\n(RELEASE_TYPE_CLASSICAL_DIGITAL_BOXED_" +
      "SET\020\014\022&\n\"RELEASE_TYPE_RINGBACK_TONE_RELE" +
      "ASE\020\r\022\035\n\031RELEASE_TYPE_USER_DEFINED\020\016\022\035\n\031" +
      "RELEASE_TYPE_LOGO_RELEASE\020\017\022!\n\035RELEASE_T" +
      "YPE_MULTIMEDIA_ALBUM\020\020\022$\n RELEASE_TYPE_A" +
      "UDIO_DRAMA_RELEASE\020\021\022+\n\'RELEASE_TYPE_BOO" +
      "KLET_BACK_IMAGE_RELEASE\020\022\022\024\n\020RELEASE_TYP" +
      "E_E_P\020\023\022\"\n\036RELEASE_TYPE_MULTIMEDIA_SINGL" +
      "E\020\024\0220\n,RELEASE_TYPE_DRAMATICO_MUSICAL_VI" +
      "DEO_RELEASE\020\025\022,\n(RELEASE_TYPE_BOOKLET_FR" +
      "ONT_IMAGE_RELEASE\020\026\022\026\n\022RELEASE_TYPE_DRAM" +
      "A\020\027\0224\n0RELEASE_TYPE_NON_MUSICAL_WORK_BAS" +
      "ED_GAME_RELEASE\020\030\022\027\n\023RELEASE_TYPE_DJ_MIX" +
      "\020\031\022-\n)RELEASE_TYPE_MULTIMEDIA_DIGITAL_BO" +
      "XED_SET\020\032\022\034\n\030RELEASE_TYPE_STEM_BUNDLE\020\033\022" +
      "\032\n\026RELEASE_TYPE_PLAY_LIST\020\034\022#\n\037RELEASE_T" +
      "YPE_AUDIO_BOOK_RELEASE\020\035\022(\n$RELEASE_TYPE" +
      "_DIGITAL_BOX_SET_RELEASE\020\036\022 \n\034RELEASE_TY" +
      "PE_KARAOKE_RELEASE\020\037\022\"\n\036RELEASE_TYPE_WAL" +
      "LPAPER_RELEASE\020 \022\034\n\030RELEASE_TYPE_DOCUMEN" +
      "TARY\020!\022\027\n\023RELEASE_TYPE_SEASON\020\"\0229\n5RELEA" +
      "SE_TYPE_LONG_FORM_NON_MUSICAL_WORK_VIDEO" +
      "_RELEASE\020#\022\027\n\023RELEASE_TYPE_BUNDLE\020$\022\037\n\033R" +
      "ELEASE_TYPE_E_BOOK_RELEASE\020%\022\034\n\030RELEASE_" +
      "TYPE_VIDEO_ALBUM\020&\022 \n\034RELEASE_TYPE_BOOKL" +
      "ET_RELEASE\020\'\0220\n,RELEASE_TYPE_MUSICAL_WOR" +
      "K_BASED_GAME_RELEASE\020(\022\030\n\024RELEASE_TYPE_E" +
      "PISODE\020)\022\027\n\023RELEASE_TYPE_SERIES\020*\022$\n REL" +
      "EASE_TYPE_LYRIC_SHEET_RELEASE\020+\022\027\n\023RELEA" +
      "SE_TYPE_SINGLE\020,\022\035\n\031RELEASE_TYPE_VIDEO_S" +
      "INGLE\020-\022)\n%RELEASE_TYPE_BACK_COVER_IMAGE" +
      "_RELEASE\020.\022\036\n\032RELEASE_TYPE_CONCERT_VIDEO" +
      "\020/\022)\n%RELEASE_TYPE_VIDEO_MASTERTONE_RELE" +
      "ASE\0200\0225\n1RELEASE_TYPE_LONG_FORM_MUSICAL_" +
      "WORK_VIDEO_RELEASE\0201*\377\020\n\020ReleaseType_ERN" +
      "4\022)\n%RELEASE_TYPE__E_R_N4_LIVE_EVENT_VID" +
      "EO\020\000\022(\n$RELEASE_TYPE__E_R_N4_CLASSICAL_A" +
      "LBUM\020\001\0223\n/RELEASE_TYPE__E_R_N4_CLASSICAL" +
      "_MULTIMEDIA_ALBUM\020\002\022\036\n\032RELEASE_TYPE__E_R" +
      "_N4_ALBUM\020\003\022#\n\037RELEASE_TYPE__E_R_N4_SHOR" +
      "T_FILM\020\004\022(\n$RELEASE_TYPE__E_R_N4_AS_PER_" +
      "CONTRACT\020\005\022%\n!RELEASE_TYPE__E_R_N4_FEATU" +
      "RE_FILM\020\006\022)\n%RELEASE_TYPE__E_R_N4_RINGTO" +
      "NE_RELEASE\020\007\0220\n,RELEASE_TYPE__E_R_N4_SIN" +
      "GLE_RESOURCE_RELEASE\020\010\022+\n\'RELEASE_TYPE__" +
      "E_R_N4_ALERT_TONE_RELEASE\020\t\022,\n(RELEASE_T" +
      "YPE__E_R_N4_SHEET_MUSIC_RELEASE\020\n\0224\n0REL" +
      "EASE_TYPE__E_R_N4_CLASSICAL_DIGITAL_BOXE" +
      "D_SET\020\013\022.\n*RELEASE_TYPE__E_R_N4_RINGBACK" +
      "_TONE_RELEASE\020\014\022%\n!RELEASE_TYPE__E_R_N4_" +
      "USER_DEFINED\020\r\022%\n!RELEASE_TYPE__E_R_N4_L" +
      "OGO_RELEASE\020\016\022)\n%RELEASE_TYPE__E_R_N4_MU" +
      "LTIMEDIA_ALBUM\020\017\022,\n(RELEASE_TYPE__E_R_N4" +
      "_AUDIO_DRAMA_RELEASE\020\020\0223\n/RELEASE_TYPE__" +
      "E_R_N4_BOOKLET_BACK_IMAGE_RELEASE\020\021\022\034\n\030R" +
      "ELEASE_TYPE__E_R_N4_E_P\020\022\022*\n&RELEASE_TYP" +
      "E__E_R_N4_MULTIMEDIA_SINGLE\020\023\0228\n4RELEASE" +
      "_TYPE__E_R_N4_DRAMATICO_MUSICAL_VIDEO_RE" +
      "LEASE\020\024\0224\n0RELEASE_TYPE__E_R_N4_BOOKLET_" +
      "FRONT_IMAGE_RELEASE\020\025\022\036\n\032RELEASE_TYPE__E" +
      "_R_N4_DRAMA\020\026\022<\n8RELEASE_TYPE__E_R_N4_NO" +
      "N_MUSICAL_WORK_BASED_GAME_RELEASE\020\027\022\037\n\033R" +
      "ELEASE_TYPE__E_R_N4_DJ_MIX\020\030\0225\n1RELEASE_" +
      "TYPE__E_R_N4_MULTIMEDIA_DIGITAL_BOXED_SE" +
      "T\020\031\022$\n RELEASE_TYPE__E_R_N4_STEM_BUNDLE\020" +
      "\032\022\"\n\036RELEASE_TYPE__E_R_N4_PLAY_LIST\020\033\022+\n" +
      "\'RELEASE_TYPE__E_R_N4_AUDIO_BOOK_RELEASE" +
      "\020\034\0220\n,RELEASE_TYPE__E_R_N4_DIGITAL_BOX_S" +
      "ET_RELEASE\020\035\022(\n$RELEASE_TYPE__E_R_N4_KAR" +
      "AOKE_RELEASE\020\036\022*\n&RELEASE_TYPE__E_R_N4_W" +
      "ALLPAPER_RELEASE\020\037\022$\n RELEASE_TYPE__E_R_" +
      "N4_DOCUMENTARY\020 \022\037\n\033RELEASE_TYPE__E_R_N4" +
      "_SEASON\020!\022A\n=RELEASE_TYPE__E_R_N4_LONG_F" +
      "ORM_NON_MUSICAL_WORK_VIDEO_RELEASE\020\"\022\037\n\033" +
      "RELEASE_TYPE__E_R_N4_BUNDLE\020#\022\'\n#RELEASE" +
      "_TYPE__E_R_N4_E_BOOK_RELEASE\020$\022$\n RELEAS" +
      "E_TYPE__E_R_N4_VIDEO_ALBUM\020%\022(\n$RELEASE_" +
      "TYPE__E_R_N4_BOOKLET_RELEASE\020&\0228\n4RELEAS" +
      "E_TYPE__E_R_N4_MUSICAL_WORK_BASED_GAME_R" +
      "ELEASE\020\'\022 \n\034RELEASE_TYPE__E_R_N4_EPISODE" +
      "\020(\022\037\n\033RELEASE_TYPE__E_R_N4_SERIES\020)\022,\n(R" +
      "ELEASE_TYPE__E_R_N4_LYRIC_SHEET_RELEASE\020" +
      "*\022\037\n\033RELEASE_TYPE__E_R_N4_SINGLE\020+\022%\n!RE" +
      "LEASE_TYPE__E_R_N4_VIDEO_SINGLE\020,\0221\n-REL" +
      "EASE_TYPE__E_R_N4_BACK_COVER_IMAGE_RELEA" +
      "SE\020-\022&\n\"RELEASE_TYPE__E_R_N4_CONCERT_VID" +
      "EO\020.\0221\n-RELEASE_TYPE__E_R_N4_VIDEO_MASTE" +
      "RTONE_RELEASE\020/\022=\n9RELEASE_TYPE__E_R_N4_" +
      "LONG_FORM_MUSICAL_WORK_VIDEO_RELEASE\0200*\315" +
      "\002\n\023ReleaseType_MCNOTIF\0220\n,RELEASE_TYPE__" +
      "M_C_N_O_T_I_F_RINGTONE_RELEASE\020\000\022&\n\"RELE" +
      "ASE_TYPE__M_C_N_O_T_I_F_SINGLE\020\001\022,\n(RELE" +
      "ASE_TYPE__M_C_N_O_T_I_F_VIDEO_SINGLE\020\002\022%" +
      "\n!RELEASE_TYPE__M_C_N_O_T_I_F_ALBUM\020\003\022#\n" +
      "\037RELEASE_TYPE__M_C_N_O_T_I_F_E_P\020\004\0225\n1RE" +
      "LEASE_TYPE__M_C_N_O_T_I_F_RINGBACK_TONE_" +
      "RELEASE\020\005\022+\n\'RELEASE_TYPE__M_C_N_O_T_I_F" +
      "_VIDEO_ALBUM\020\006*\240\001\n\025RequestMessagePurpose" +
      "\0220\n,REQUEST_MESSAGE_PURPOSE_NDMA_LICENSE" +
      "_REQUEST\020\000\022+\n\'REQUEST_MESSAGE_PURPOSE_LI" +
      "CENSE_REQUEST\020\001\022(\n$REQUEST_MESSAGE_PURPO" +
      "SE_NOTIFICATION\020\002*\306\003\n\rRequestReason\022#\n\037R" +
      "EQUEST_REASON_SPECIFIC_REQUEST\020\000\022!\n\035REQU" +
      "EST_REASON_WRITER_REMOVAL\020\001\022 \n\034REQUEST_R" +
      "EASON_WRITER_CHANGE\020\002\022#\n\037REQUEST_REASON_" +
      "PUBLISHER_CHANGE\020\003\022\"\n\036REQUEST_REASON_WRI" +
      "TER_ADDITION\020\004\022-\n)REQUEST_REASON_DISPUTE" +
      "_RESOLUTION_REQUEST\020\005\022\031\n\025REQUEST_REASON_" +
      "RECALL\020\006\022\"\n\036REQUEST_REASON_GENERAL_REQUE",
      "ST\020\007\022%\n!REQUEST_REASON_PUBLISHER_ADDITIO" +
      "N\020\010\022$\n REQUEST_REASON_PUBLISHER_REMOVAL\020" +
      "\t\022&\n\"REQUEST_REASON_RELEASE_LIST_UPDATE\020" +
      "\n\022\037\n\033REQUEST_REASON_USER_DEFINED\020\013*\300b\n\027R" +
      "esourceContributorRole\022$\n RESOURCE_CONTR" +
      "IBUTOR_ROLE_ARTIST\020\000\022<\n8RESOURCE_CONTRIB" +
      "UTOR_ROLE_PRE_PRODUCTION_SECOND_ENGINEER" +
      "\020\001\022/\n+RESOURCE_CONTRIBUTOR_ROLE_INTERVIE" +
      "WED_GUEST\020\002\0228\n4RESOURCE_CONTRIBUTOR_ROLE" +
      "_ADDITIONAL_STUDIO_PRODUCER\020\003\022)\n%RESOURC" +
      "E_CONTRIBUTOR_ROLE_ART_COPYIST\020\004\022-\n)RESO" +
      "URCE_CONTRIBUTOR_ROLE_SERIES_PRODUCER\020\005\022" +
      ",\n(RESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCT" +
      "ION\020\006\0223\n/RESOURCE_CONTRIBUTOR_ROLE_CO_EX" +
      "ECUTIVE_PRODUCER\020\007\0222\n.RESOURCE_CONTRIBUT" +
      "OR_ROLE_ASSOCIATED_PERFORMER\020\010\022+\n\'RESOUR" +
      "CE_CONTRIBUTOR_ROLE_TAPE_OPERATOR\020\t\0225\n1R" +
      "ESOURCE_CONTRIBUTOR_ROLE_PRE_PRODUCTION_" +
      "ENGINEER\020\n\022\'\n#RESOURCE_CONTRIBUTOR_ROLE_" +
      "ANNOUNCER\020\013\022\'\n#RESOURCE_CONTRIBUTOR_ROLE" +
      "_PUPPETEER\020\014\022%\n!RESOURCE_CONTRIBUTOR_ROL" +
      "E_UNKNOWN\020\r\0221\n-RESOURCE_CONTRIBUTOR_ROLE" +
      "_BACKGROUND_VOCALIST\020\016\022&\n\"RESOURCE_CONTR" +
      "IBUTOR_ROLE_MUSICIAN\020\017\0226\n2RESOURCE_CONTR" +
      "IBUTOR_ROLE_STAGE_ASSISTANT_ENGINEER\020\020\022#" +
      "\n\037RESOURCE_CONTRIBUTOR_ROLE_ACTOR\020\021\022%\n!R" +
      "ESOURCE_CONTRIBUTOR_ROLE_PAINTER\020\022\022*\n&RE" +
      "SOURCE_CONTRIBUTOR_ROLE_STORY_TELLER\020\023\022*" +
      "\n&RESOURCE_CONTRIBUTOR_ROLE_USER_DEFINED" +
      "\020\024\0220\n,RESOURCE_CONTRIBUTOR_ROLE_ASSISTAN" +
      "T_DIRECTOR\020\025\0222\n.RESOURCE_CONTRIBUTOR_ROL" +
      "E_PHOTOGRAPHY_DIRECTOR\020\026\022\'\n#RESOURCE_CON" +
      "TRIBUTOR_ROLE_ORCHESTRA\020\027\0221\n-RESOURCE_CO" +
      "NTRIBUTOR_ROLE_COMPUTER_PROGRAMMER\020\030\022,\n(" +
      "RESOURCE_CONTRIBUTOR_ROLE_VOCAL_PRODUCER" +
      "\020\031\022.\n*RESOURCE_CONTRIBUTOR_ROLE_SCENIC_O" +
      "PERATIVE\020\032\022(\n$RESOURCE_CONTRIBUTOR_ROLE_" +
      "PROGRAMMER\020\033\022-\n)RESOURCE_CONTRIBUTOR_ROL" +
      "E_STUDIO_PRODUCER\020\034\022,\n(RESOURCE_CONTRIBU" +
      "TOR_ROLE_STAGE_DIRECTOR\020\035\022+\n\'RESOURCE_CO" +
      "NTRIBUTOR_ROLE_TYPE_DESIGNER\020\036\022*\n&RESOUR" +
      "CE_CONTRIBUTOR_ROLE_GROUP_MEMBER\020\037\022+\n\'RE" +
      "SOURCE_CONTRIBUTOR_ROLE_VISUAL_EDITOR\020 \022" +
      ",\n(RESOURCE_CONTRIBUTOR_ROLE_VOCAL_ARRAN" +
      "GER\020!\0227\n3RESOURCE_CONTRIBUTOR_ROLE_ASSIS" +
      "TANT_CAMERA_OPERATOR\020\"\022+\n\'RESOURCE_CONTR" +
      "IBUTOR_ROLE_FILM_DIRECTOR\020#\022,\n(RESOURCE_" +
      "CONTRIBUTOR_ROLE_CLAPPER_LOADER\020$\022/\n+RES" +
      "OURCE_CONTRIBUTOR_ROLE_REMIXING_ENGINEER" +
      "\020%\0220\n,RESOURCE_CONTRIBUTOR_ROLE_BOOKPLAT" +
      "E_DESIGNER\020&\0226\n2RESOURCE_CONTRIBUTOR_ROL" +
      "E_TRACKING_SECOND_ENGINEER\020\'\022)\n%RESOURCE" +
      "_CONTRIBUTOR_ROLE_HAIRDRESSER\020(\022D\n@RESOU" +
      "RCE_CONTRIBUTOR_ROLE_TRANSFERS_AND_SAFET" +
      "IES_SECOND_ENGINEER\020)\022.\n*RESOURCE_CONTRI" +
      "BUTOR_ROLE_COSTUME_DESIGNER\020*\022:\n6RESOURC" +
      "E_CONTRIBUTOR_ROLE_RIGHTS_CONTROLLER_ON_" +
      "PRODUCT\020+\022%\n!RESOURCE_CONTRIBUTOR_ROLE_S" +
      "PEAKER\020,\022.\n*RESOURCE_CONTRIBUTOR_ROLE_LO" +
      "CATION_MANAGER\020-\022*\n&RESOURCE_CONTRIBUTOR" +
      "_ROLE_CALLIGRAPHER\020.\022@\n<RESOURCE_CONTRIB" +
      "UTOR_ROLE_DIGITAL_AUDIO_WORKSTATION_ENGI" +
      "NEER\020/\022/\n+RESOURCE_CONTRIBUTOR_ROLE_GRAP" +
      "HIC_ASSISTANT\0200\0224\n0RESOURCE_CONTRIBUTOR_" +
      "ROLE_MIXING_SECOND_ENGINEER\0201\022%\n!RESOURC" +
      "E_CONTRIBUTOR_ROLE_LEADMAN\0202\022,\n(RESOURCE" +
      "_CONTRIBUTOR_ROLE_VOCAL_ENGINEER\0203\0223\n/RE" +
      "SOURCE_CONTRIBUTOR_ROLE_PRODUCTION_DEPAR" +
      "TMENT\0204\022%\n!RESOURCE_CONTRIBUTOR_ROLE_DRE" +
      "SSER\0205\022.\n*RESOURCE_CONTRIBUTOR_ROLE_BALA" +
      "NCE_ENGINEER\0206\022+\n\'RESOURCE_CONTRIBUTOR_R" +
      "OLE_CORRESPONDENT\0207\022(\n$RESOURCE_CONTRIBU" +
      "TOR_ROLE_CONSULTANT\0208\022)\n%RESOURCE_CONTRI" +
      "BUTOR_ROLE_MUSIC_GROUP\0209\0221\n-RESOURCE_CON" +
      "TRIBUTOR_ROLE_ASSISTANT_CONDUCTOR\020:\022=\n9R" +
      "ESOURCE_CONTRIBUTOR_ROLE_SURROUND_MIXING" +
      "_SECOND_ENGINEER\020;\022>\n:RESOURCE_CONTRIBUT" +
      "OR_ROLE_TREATMENT__FS___PROGRAM_PROPOSAL" +
      "\020<\0227\n3RESOURCE_CONTRIBUTOR_ROLE_SIGN_LAN" +
      "GUAGE_INTERPRETER\020=\022:\n6RESOURCE_CONTRIBU" +
      "TOR_ROLE_ARTIST_VOCAL_SECOND_ENGINEER\020>\022" +
      "&\n\"RESOURCE_CONTRIBUTOR_ROLE_RESTAGER\020?\022" +
      "!\n\035RESOURCE_CONTRIBUTOR_ROLE_D_J\020@\0222\n.RE" +
      "SOURCE_CONTRIBUTOR_ROLE_BROADCAST_JOURNA" +
      "LIST\020A\022+\n\'RESOURCE_CONTRIBUTOR_ROLE_CIRC" +
      "US_ARTIST\020B\0226\n2RESOURCE_CONTRIBUTOR_ROLE" +
      "_DIGITAL_EDITING_ENGINEER\020C\022/\n+RESOURCE_" +
      "CONTRIBUTOR_ROLE_DIALOGUE_DIRECTOR\020D\022,\n(" +
      "RESOURCE_CONTRIBUTOR_ROLE_DIALOGUE_COACH" +
      "\020E\022,\n(RESOURCE_CONTRIBUTOR_ROLE_FIGHT_DI" +
      "RECTOR\020F\022+\n\'RESOURCE_CONTRIBUTOR_ROLE_AN" +
      "CHOR_PERSON\020G\0222\n.RESOURCE_CONTRIBUTOR_RO" +
      "LE_COMPILATION_PRODUCER\020H\022(\n$RESOURCE_CO" +
      "NTRIBUTOR_ROLE_CONTRACTOR\020I\022<\n8RESOURCE_" +
      "CONTRIBUTOR_ROLE_DIRECT_STREAM_DIGITAL_E" +
      "NGINEER\020J\022-\n)RESOURCE_CONTRIBUTOR_ROLE_O" +
      "RIGINAL_ARTIST\020K\022.\n*RESOURCE_CONTRIBUTOR" +
      "_ROLE_STUDIO_CONDUCTOR\020L\022*\n&RESOURCE_CON" +
      "TRIBUTOR_ROLE_ART_DIRECTOR\020M\022&\n\"RESOURCE" +
      "_CONTRIBUTOR_ROLE_KEY_GRIP\020N\0227\n3RESOURCE" +
      "_CONTRIBUTOR_ROLE_RECORDING_SECOND_ENGIN" +
      "EER\020O\0223\n/RESOURCE_CONTRIBUTOR_ROLE_A_AND" +
      "_R_ADMINISTRATOR\020P\022*\n&RESOURCE_CONTRIBUT" +
      "OR_ROLE_ACCOMPANYIST\020Q\0222\n.RESOURCE_CONTR" +
      "IBUTOR_ROLE_DISTRIBUTION_COMPANY\020R\022$\n RE" +
      "SOURCE_CONTRIBUTOR_ROLE_DANCER\020S\022)\n%RESO" +
      "URCE_CONTRIBUTOR_ROLE_FILM_EDITOR\020T\022-\n)R" +
      "ESOURCE_CONTRIBUTOR_ROLE_STRING_PRODUCER" +
      "\020U\022\'\n#RESOURCE_CONTRIBUTOR_ROLE_ANNOTATO" +
      "R\020V\022)\n%RESOURCE_CONTRIBUTOR_ROLE_INTERVI" +
      "EWER\020W\022*\n&RESOURCE_CONTRIBUTOR_ROLE_PHOT" +
      "OGRAPHER\020X\0228\n4RESOURCE_CONTRIBUTOR_ROLE_" +
      "ADDITIONAL_MIXING_ENGINEER\020Y\022\'\n#RESOURCE" +
      "_CONTRIBUTOR_ROLE_CONDUCTOR\020Z\022=\n9RESOURC" +
      "E_CONTRIBUTOR_ROLE_DIGITAL_EDITING_SECON" +
      "D_ENGINEER\020[\022.\n*RESOURCE_CONTRIBUTOR_ROL" +
      "E_REISSUE_PRODUCER\020\\\022\'\n#RESOURCE_CONTRIB" +
      "UTOR_ROLE_CARPENTER\020]\022,\n(RESOURCE_CONTRI" +
      "BUTOR_ROLE_LEAD_PERFORMER\020^\022+\n\'RESOURCE_" +
      "CONTRIBUTOR_ROLE_POST_PRODUCER\020_\022+\n\'RESO" +
      "URCE_CONTRIBUTOR_ROLE_CHOREOGRAPHER\020`\022)\n" +
      "%RESOURCE_CONTRIBUTOR_ROLE_COMMENTATOR\020a" +
      "\0227\n3RESOURCE_CONTRIBUTOR_ROLE_COMMISSION" +
      "ING_BROADCASTER\020b\0224\n0RESOURCE_CONTRIBUTO" +
      "R_ROLE_VOCAL_EDITING_ENGINEER\020c\022&\n\"RESOU" +
      "RCE_CONTRIBUTOR_ROLE_CO_MIXER\020d\022$\n RESOU" +
      "RCE_CONTRIBUTOR_ROLE_EXPERT\020e\022%\n!RESOURC" +
      "E_CONTRIBUTOR_ROLE_CAUSEUR\020f\022+\n\'RESOURCE" +
      "_CONTRIBUTOR_ROLE_CHORUS_MASTER\020g\022/\n+RES" +
      "OURCE_CONTRIBUTOR_ROLE_BOOKJACK_DESIGNER" +
      "\020h\0221\n-RESOURCE_CONTRIBUTOR_ROLE_BROADCAS" +
      "T_ASSISTANT\020i\022)\n%RESOURCE_CONTRIBUTOR_RO" +
      "LE_SET_DRESSER\020j\022=\n9RESOURCE_CONTRIBUTOR" +
      "_ROLE_ADDITIONAL_PROGRAMMING_ENGINEER\020k\022" +
      "#\n\037RESOURCE_CONTRIBUTOR_ROLE_CHOIR\020l\022&\n\"" +
      "RESOURCE_CONTRIBUTOR_ROLE_ENGINEER\020m\022)\n%" +
      "RESOURCE_CONTRIBUTOR_ROLE_CO_PRODUCER\020n\022" +
      "+\n\'RESOURCE_CONTRIBUTOR_ROLE_BOOK_PRODUC" +
      "ER\020o\022(\n$RESOURCE_CONTRIBUTOR_ROLE_RESEAR" +
      "CHER\020p\022,\n(RESOURCE_CONTRIBUTOR_ROLE_SOUN" +
      "D_DESIGNER\020q\0228\n4RESOURCE_CONTRIBUTOR_ROL" +
      "E_SPECIAL_EFFECTS_TECHNICIAN\020r\022,\n(RESOUR" +
      "CE_CONTRIBUTOR_ROLE_MUSIC_ARRANGER\020s\022)\n%" +
      "RESOURCE_CONTRIBUTOR_ROLE_VOICE_ACTOR\020t\022" +
      "4\n0RESOURCE_CONTRIBUTOR_ROLE_PRODUCTION_" +
      "COORDINATOR\020u\022&\n\"RESOURCE_CONTRIBUTOR_RO" +
      "LE_WARDROBE\020v\0227\n3RESOURCE_CONTRIBUTOR_RO" +
      "LE_VISUAL_EFFECTS_TECHNICIAN\020w\022$\n RESOUR" +
      "CE_CONTRIBUTOR_ROLE_STUNTS\020x\0224\n0RESOURCE" +
      "_CONTRIBUTOR_ROLE_TRANSPORTATION_MANAGER" +
      "\020y\022+\n\'RESOURCE_CONTRIBUTOR_ROLE_NEWS_PRO" +
      "DUCER\020z\022+\n\'RESOURCE_CONTRIBUTOR_ROLE_LEA" +
      "D_VOCALIST\020{\022%\n!RESOURCE_CONTRIBUTOR_ROL" +
      "E_SPONSOR\020|\0222\n.RESOURCE_CONTRIBUTOR_ROLE" +
      "_PRODUCTION_SECRETARY\020}\022,\n(RESOURCE_CONT" +
      "RIBUTOR_ROLE_VIDEO_PRODUCER\020~\0220\n,RESOURC" +
      "E_CONTRIBUTOR_ROLE_SCIENTIFIC_ADVISOR\020\177\022" +
      ",\n\'RESOURCE_CONTRIBUTOR_ROLE_AURAL_TRAIN" +
      "ER\020\200\001\022/\n*RESOURCE_CONTRIBUTOR_ROLE_CASTI" +
      "NG_DIRECTOR\020\201\001\0221\n,RESOURCE_CONTRIBUTOR_R" +
      "OLE_EXECUTIVE_PRODUCER\020\202\001\0228\n3RESOURCE_CO" +
      "NTRIBUTOR_ROLE_IMMERSIVE_MIXING_ENGINEER" +
      "\020\203\001\022/\n*RESOURCE_CONTRIBUTOR_ROLE_SECOND_" +
      "CONDUCTOR\020\204\001\022%\n RESOURCE_CONTRIBUTOR_ROL" +
      "E_EDITOR\020\205\001\022,\n\'RESOURCE_CONTRIBUTOR_ROLE" +
      "_KEY_CHARACTER\020\206\001\0221\n,RESOURCE_CONTRIBUTO" +
      "R_ROLE_PRODUCTION_MANAGER\020\207\001\022\'\n\"RESOURCE" +
      "_CONTRIBUTOR_ROLE_REDACTOR\020\210\001\022)\n$RESOURC" +
      "E_CONTRIBUTOR_ROLE_CARTOONIST\020\211\001\0221\n,RESO" +
      "URCE_CONTRIBUTOR_ROLE_CO_MIXING_ENGINEER" +
      "\020\212\001\022-\n(RESOURCE_CONTRIBUTOR_ROLE_CONCERT" +
      "_MASTER\020\213\001\022/\n*RESOURCE_CONTRIBUTOR_ROLE_" +
      "STUDIO_PERSONNEL\020\214\001\022\'\n\"RESOURCE_CONTRIBU" +
      "TOR_ROLE_COMEDIAN\020\215\001\022,\n\'RESOURCE_CONTRIB" +
      "UTOR_ROLE_MUSIC_COPYIST\020\216\001\0221\n,RESOURCE_C" +
      "ONTRIBUTOR_ROLE_PRODUCTION_COMPANY\020\217\001\0228\n" +
      "3RESOURCE_CONTRIBUTOR_ROLE_CHIEF_LIGHTIN" +
      "G_TECHNICIAN\020\220\001\022-\n(RESOURCE_CONTRIBUTOR_" +
      "ROLE_PYROTECHNICIAN\020\221\001\0220\n+RESOURCE_CONTR" +
      "IBUTOR_ROLE_SCRIPT_SUPERVISOR\020\222\001\0223\n.RESO" +
      "URCE_CONTRIBUTOR_ROLE_RESEARCH_TEAM_MEMB" +
      "ER\020\223\001\0221\n,RESOURCE_CONTRIBUTOR_ROLE_CONTI" +
      "NUITY_CHECKER\020\224\001\022&\n!RESOURCE_CONTRIBUTOR" +
      "_ROLE_SOLOIST\020\225\001\0222\n-RESOURCE_CONTRIBUTOR" +
      "_ROLE_ADDITIONAL_ENGINEER\020\226\001\022-\n(RESOURCE" +
      "_CONTRIBUTOR_ROLE_REMIXED_ARTIST\020\227\001\022\'\n\"R" +
      "ESOURCE_CONTRIBUTOR_ROLE_DIRECTOR\020\230\001\022.\n)" +
      "RESOURCE_CONTRIBUTOR_ROLE_EDITOR_IN_CHIE" +
      "F\020\231\001\022B\n=RESOURCE_CONTRIBUTOR_ROLE_ASSIST" +
      "ANT_CHIEF_LIGHTING_TECHNICIAN\020\232\001\022/\n*RESO" +
      "URCE_CONTRIBUTOR_ROLE_SOUND_SUPERVISOR\020\233" +
      "\001\0222\n-RESOURCE_CONTRIBUTOR_ROLE_PUBLISHIN" +
      "G_DIRECTOR\020\234\001\022\'\n\"RESOURCE_CONTRIBUTOR_RO" +
      "LE_ARMOURER\020\235\001\022/\n*RESOURCE_CONTRIBUTOR_R" +
      "OLE_PROJECT_ENGINEER\020\236\001\022,\n\'RESOURCE_CONT" +
      "RIBUTOR_ROLE_NOT_SPECIFIED\020\237\001\022*\n%RESOURC" +
      "E_CONTRIBUTOR_ROLE_SOUND_MIXER\020\240\001\022.\n)RES" +
      "OURCE_CONTRIBUTOR_ROLE_SECOND_ENGINEER\020\241" +
      "\001\022?\n:RESOURCE_CONTRIBUTOR_ROLE_ARTIST_BA" +
      "CKGROUND_VOCAL_ENGINEER\020\242\001\022.\n)RESOURCE_C" +
      "ONTRIBUTOR_ROLE_CAMERA_OPERATOR\020\243\001\022/\n*RE" +
      "SOURCE_CONTRIBUTOR_ROLE_OVERDUB_ENGINEER" +
      "\020\244\001\022+\n&RESOURCE_CONTRIBUTOR_ROLE_VIDEOGR" +
      "APHER\020\245\001\022*\n%RESOURCE_CONTRIBUTOR_ROLE_BA" +
      "ND_LEADER\020\246\001\022/\n*RESOURCE_CONTRIBUTOR_ROL" +
      "E_SUBTITLES_EDITOR\020\247\001\0222\n-RESOURCE_CONTRI" +
      "BUTOR_ROLE_A_AND_R_COORDINATOR\020\250\001\022/\n*RES" +
      "OURCE_CONTRIBUTOR_ROLE_ASSISTANT_EDITOR\020" +
      "\251\001\022.\n)RESOURCE_CONTRIBUTOR_ROLE_MIXING_E" +
      "NGINEER\020\252\001\0221\n,RESOURCE_CONTRIBUTOR_ROLE_" +
      "ASSOCIATE_PRODUCER\020\253\001\022?\n:RESOURCE_CONTRI" +
      "BUTOR_ROLE_SECOND_ASSISTANT_CAMERA_OPERA" +
      "TOR\020\254\001\022%\n RESOURCE_CONTRIBUTOR_ROLE_BIND" +
      "ER\020\255\001\022*\n%RESOURCE_CONTRIBUTOR_ROLE_CO_DI" +
      "RECTOR\020\256\001\022#\n\036RESOURCE_CONTRIBUTOR_ROLE_G" +
      "RIP\020\257\001\022,\n\'RESOURCE_CONTRIBUTOR_ROLE_BOOK" +
      "_DESIGNER\020\260\001\0227\n2RESOURCE_CONTRIBUTOR_ROL" +
      "E_COMPUTER_GRAPHIC_CREATOR\020\261\001\022+\n&RESOURC" +
      "E_CONTRIBUTOR_ROLE_CARTOGRAPHER\020\262\001\022-\n(RE" +
      "SOURCE_CONTRIBUTOR_ROLE_MAKE_UP_ARTIST\020\263" +
      "\001\022.\n)RESOURCE_CONTRIBUTOR_ROLE_PLAYBACK_" +
      "SINGER\020\264\001\022.\n)RESOURCE_CONTRIBUTOR_ROLE_S" +
      "TRING_ENGINEER\020\265\001\022*\n%RESOURCE_CONTRIBUTO" +
      "R_ROLE_DRAUGHTSMAN\020\266\001\022/\n*RESOURCE_CONTRI" +
      "BUTOR_ROLE_PROGRAM_PRODUCER\020\267\001\0227\n2RESOUR" +
      "CE_CONTRIBUTOR_ROLE_REMIXING_SECOND_ENGI" +
      "NEER\020\270\001\022-\n(RESOURCE_CONTRIBUTOR_ROLE_VID" +
      "EO_DIRECTOR\020\271\001\022)\n$RESOURCE_CONTRIBUTOR_R" +
      "OLE_TONMEISTER\020\272\001\0226\n1RESOURCE_CONTRIBUTO" +
      "R_ROLE_ASSISTANT_VISUAL_EDITOR\020\273\001\0221\n,RES" +
      "OURCE_CONTRIBUTOR_ROLE_ASSISTANT_ENGINEE" +
      "R\020\274\001\022>\n9RESOURCE_CONTRIBUTOR_ROLE_TRANSF" +
      "ERS_AND_SAFETIES_ENGINEER\020\275\001\022\'\n\"RESOURCE" +
      "_CONTRIBUTOR_ROLE_ANIMATOR\020\276\001\0220\n+RESOURC" +
      "E_CONTRIBUTOR_ROLE_LIGHTING_DIRECTOR\020\277\001\022" +
      ".\n)RESOURCE_CONTRIBUTOR_ROLE_GUEST_CONDU" +
      "CTOR\020\300\001\0222\n-RESOURCE_CONTRIBUTOR_ROLE_LIG" +
      "HTING_TECHNICIAN\020\301\001\022/\n*RESOURCE_CONTRIBU" +
      "TOR_ROLE_FILM_DISTRIBUTOR\020\302\001\022/\n*RESOURCE" +
      "_CONTRIBUTOR_ROLE_INITIAL_PRODUCER\020\303\001\0223\n" +
      ".RESOURCE_CONTRIBUTOR_ROLE_SUBTITLES_TRA" +
      "NSLATOR\020\304\001\0224\n/RESOURCE_CONTRIBUTOR_ROLE_" +
      "ARTIST_VOCAL_ENGINEER\020\305\001\022%\n RESOURCE_CON" +
      "TRIBUTOR_ROLE_RIGGER\020\306\001\022/\n*RESOURCE_CONT" +
      "RIBUTOR_ROLE_PRIMARY_MUSICIAN\020\307\001\022.\n)RESO" +
      "URCE_CONTRIBUTOR_ROLE_COLOR_SEPARATOR\020\310\001" +
      "\022)\n$RESOURCE_CONTRIBUTOR_ROLE_REPETITEUR" +
      "\020\311\001\022/\n*RESOURCE_CONTRIBUTOR_ROLE_GRAPHIC" +
      "_DESIGNER\020\312\001\0223\n.RESOURCE_CONTRIBUTOR_ROL" +
      "E_PRODUCTION_ASSISTANT\020\313\001\022$\n\037RESOURCE_CO" +
      "NTRIBUTOR_ROLE_MIXER\020\314\001\022/\n*RESOURCE_CONT" +
      "RIBUTOR_ROLE_BINDING_DESIGNER\020\315\001\022)\n$RESO" +
      "URCE_CONTRIBUTOR_ROLE_DELINEATOR\020\316\001\022&\n!R" +
      "ESOURCE_CONTRIBUTOR_ROLE_ENCODER\020\317\001\022<\n7R" +
      "ESOURCE_CONTRIBUTOR_ROLE_VOCAL_EDITING_S" +
      "ECOND_ENGINEER\020\320\001\022+\n&RESOURCE_CONTRIBUTO" +
      "R_ROLE_MANUFACTURER\020\321\001\0221\n,RESOURCE_CONTR" +
      "IBUTOR_ROLE_RECORDING_ENGINEER\020\322\001\0224\n/RES" +
      "OURCE_CONTRIBUTOR_ROLE_VOCAL_SECOND_ENGI" +
      "NEER\020\323\001\022*\n%RESOURCE_CONTRIBUTOR_ROLE_FAC" +
      "SIMILIST\020\324\001\022)\n$RESOURCE_CONTRIBUTOR_ROLE" +
      "_KEY_TALENT\020\325\001\022\'\n\"RESOURCE_CONTRIBUTOR_R" +
      "OLE_CLUB_D_J\020\326\001\022-\n(RESOURCE_CONTRIBUTOR_" +
      "ROLE_COVER_DESIGNER\020\327\001\0222\n-RESOURCE_CONTR" +
      "IBUTOR_ROLE_FILM_SOUND_ENGINEER\020\330\001\0220\n+RE" +
      "SOURCE_CONTRIBUTOR_ROLE_TRACKING_ENGINEE" +
      "R\020\331\001\022(\n#RESOURCE_CONTRIBUTOR_ROLE_PERFOR" +
      "MER\020\332\001\022+\n&RESOURCE_CONTRIBUTOR_ROLE_SET_" +
      "DESIGNER\020\333\001\0223\n.RESOURCE_CONTRIBUTOR_ROLE" +
      "_PROGRAMMING_ENGINEER\020\334\001\022/\n*RESOURCE_CON" +
      "TRIBUTOR_ROLE_ORCHESTRA_MEMBER\020\335\001\022*\n%RES" +
      "OURCE_CONTRIBUTOR_ROLE_ILLUSTRATOR\020\336\001\022*\n" +
      "%RESOURCE_CONTRIBUTOR_ROLE_NEWS_READER\020\337" +
      "\001\022%\n RESOURCE_CONTRIBUTOR_ROLE_DUBBER\020\340\001" +
      "\022\'\n\"RESOURCE_CONTRIBUTOR_ROLE_ENSEMBLE\020\341" +
      "\001\0221\n,RESOURCE_CONTRIBUTOR_ROLE_ASSISTANT" +
      "_PRODUCER\020\342\001\022+\n&RESOURCE_CONTRIBUTOR_ROL" +
      "E_FOLEY_EDITOR\020\343\001\022+\n&RESOURCE_CONTRIBUTO" +
      "R_ROLE_MATTE_ARTIST\020\344\001\022-\n(RESOURCE_CONTR" +
      "IBUTOR_ROLE_MUSIC_DIRECTOR\020\345\001\022%\n RESOURC" +
      "E_CONTRIBUTOR_ROLE_RUNNER\020\346\001\022/\n*RESOURCE" +
      "_CONTRIBUTOR_ROLE_PROPERTY_MANAGER\020\347\001\022+\n" +
      "&RESOURCE_CONTRIBUTOR_ROLE_CHOIR_MEMBER\020" +
      "\350\001\022-\n(RESOURCE_CONTRIBUTOR_ROLE_ANIMAL_T" +
      "RAINER\020\351\001\022*\n%RESOURCE_CONTRIBUTOR_ROLE_F" +
      "OLEY_MIXER\020\352\001\0228\n3RESOURCE_CONTRIBUTOR_RO" +
      "LE_MASTERING_SECOND_ENGINEER\020\353\001\022\'\n\"RESOU" +
      "RCE_CONTRIBUTOR_ROLE_DESIGNER\020\354\001\022,\n\'RESO" +
      "URCE_CONTRIBUTOR_ROLE_FILM_PRODUCER\020\355\001\0221" +
      "\n,RESOURCE_CONTRIBUTOR_ROLE_MASTERING_EN" +
      "GINEER\020\356\001\022/\n*RESOURCE_CONTRIBUTOR_ROLE_S" +
      "UPPORTING_ACTOR\020\357\001\022(\n#RESOURCE_CONTRIBUT" +
      "OR_ROLE_GREENSMAN\020\360\001\0223\n.RESOURCE_CONTRIB" +
      "UTOR_ROLE_SECOND_UNIT_DIRECTOR\020\361\001\0225\n0RES" +
      "OURCE_CONTRIBUTOR_ROLE_VIDEO_MUSICAL_DIR" +
      "ECTOR\020\362\001\022+\n&RESOURCE_CONTRIBUTOR_ROLE_FO" +
      "CUS_PULLER\020\363\001\022&\n!RESOURCE_CONTRIBUTOR_RO" +
      "LE_REMIXER\020\364\001\0221\n,RESOURCE_CONTRIBUTOR_RO" +
      "LE_RESEARCH_TEAM_HEAD\020\365\001\022.\n)RESOURCE_CON" +
      "TRIBUTOR_ROLE_SOUND_RECORDIST\020\366\001\022/\n*RESO" +
      "URCE_CONTRIBUTOR_ROLE_STRINGS_DIRECTOR\020\367" +
      "\001\022+\n&RESOURCE_CONTRIBUTOR_ROLE_VISION_MI" +
      "XER\020\370\001\0227\n2RESOURCE_CONTRIBUTOR_ROLE_SURR" +
      "OUND_MIXING_ENGINEER\020\371\001\0221\n,RESOURCE_CONT" +
      "RIBUTOR_ROLE_TECHNICAL_DIRECTOR\020\372\001\022-\n(RE" +
      "SOURCE_CONTRIBUTOR_ROLE_STAGE_ENGINEER\020\373" +
      "\001\022.\n)RESOURCE_CONTRIBUTOR_ROLE_STUDIO_MU" +
      "SICIAN\020\374\001\022\'\n\"RESOURCE_CONTRIBUTOR_ROLE_V" +
      "OCALIST\020\375\001\022+\n&RESOURCE_CONTRIBUTOR_ROLE_" +
      "FOLEY_ARTIST\020\376\001\0220\n+RESOURCE_CONTRIBUTOR_" +
      "ROLE_EDITOR_OF_THE_DAY\020\377\001\0228\n3RESOURCE_CO" +
      "NTRIBUTOR_ROLE_SECOND_ASSISTANT_DIRECTOR" +
      "\020\200\002\022,\n\'RESOURCE_CONTRIBUTOR_ROLE_FLOOR_M" +
      "ANAGER\020\201\002\022-\n(RESOURCE_CONTRIBUTOR_ROLE_G" +
      "RAPHIC_ARTIST\020\202\002\0226\n1RESOURCE_CONTRIBUTOR" +
      "_ROLE_OVERDUB_SECOND_ENGINEER\020\203\002\022%\n RESO" +
      "URCE_CONTRIBUTOR_ROLE_CENSOR\020\204\002\022\'\n\"RESOU" +
      "RCE_CONTRIBUTOR_ROLE_NARRATOR\020\205\002\0223\n.RESO" +
      "URCE_CONTRIBUTOR_ROLE_ADDITIONAL_PERFORM" +
      "ER\020\206\002*\323\001\n\021ResourceGroupType\022\034\n\030RESOURCE_" +
      "GROUP_TYPE_SIDE\020\000\022\'\n#RESOURCE_GROUP_TYPE" +
      "_MULTI_WORK_PART\020\001\022)\n%RESOURCE_GROUP_TYP" +
      "E_RELEASE_COMPONENT\020\002\022)\n%RESOURCE_GROUP_" +
      "TYPE_COMPONENT_RELEASE\020\003\022!\n\035RESOURCE_GRO" +
      "UP_TYPE_COMPONENT\020\004*\227\003\n\030ResourceRelation" +
      "shipType\0224\n0RESOURCE_RELATIONSHIP_TYPE_C" +
      "ONTAINS_SAMPLES_FROM\020\000\022*\n&RESOURCE_RELAT" +
      "IONSHIP_TYPE_IS_COVER_OF\020\001\022)\n%RESOURCE_R" +
      "ELATIONSHIP_TYPE_IS_PART_OF\020\002\022,\n(RESOURC" +
      "E_RELATIONSHIP_TYPE_IS_SAMPLED_BY\020\003\0224\n0R" +
      "ESOURCE_RELATIONSHIP_TYPE_IS_DIFFERENT_E" +
      "NCODING\020\004\022+\n\'RESOURCE_RELATIONSHIP_TYPE_" +
      "USER_DEFINED\020\005\022/\n+RESOURCE_RELATIONSHIP_" +
      "TYPE_HAS_CONTENT_FROM\020\006\022,\n(RESOURCE_RELA" +
      "TIONSHIP_TYPE_IS_COVERED_BY\020\007*\372\001\n\014Resour" +
      "ceType\022\'\n#RESOURCE_TYPE_USER_DEFINED_RES" +
      "OURCE\020\000\022\031\n\025RESOURCE_TYPE_M_I_D_I\020\001\022\027\n\023RE" +
      "SOURCE_TYPE_VIDEO\020\002\022\035\n\031RESOURCE_TYPE_SHE" +
      "ET_MUSIC\020\003\022\032\n\026RESOURCE_TYPE_SOFTWARE\020\004\022!" +
      "\n\035RESOURCE_TYPE_SOUND_RECORDING\020\005\022\026\n\022RES" +
      "OURCE_TYPE_TEXT\020\006\022\027\n\023RESOURCE_TYPE_IMAGE" +
      "\020\007*\236\001\n\024ResourceType_MCNOTIF\022&\n\"RESOURCE_" +
      "TYPE__M_C_N_O_T_I_F_VIDEO\020\000\022,\n(RESOURCE_" +
      "TYPE__M_C_N_O_T_I_F_SHEET_MUSIC\020\001\0220\n,RES" +
      "OURCE_TYPE__M_C_N_O_T_I_F_SOUND_RECORDIN" +
      "G\020\002*a\n\021ResourceType_RDRR\022 \n\034RESOURCE_TYP" +
      "E__R_D_R_R_VIDEO\020\000\022*\n&RESOURCE_TYPE__R_D" +
      "_R_R_SOUND_RECORDING\020\001*\263\002\n\034ResourceWorkR" +
      "elationshipType\022=\n9RESOURCE_WORK_RELATIO" +
      "NSHIP_TYPE_MUSICAL_WORK_WITH_SAMPLES\020\000\022*" +
      "\n&RESOURCE_WORK_RELATIONSHIP_TYPE_MEDLEY" +
      "\020\001\0228\n4RESOURCE_WORK_RELATIONSHIP_TYPE_SI" +
      "NGLE_WORK_RESOURCE\020\002\022:\n6RESOURCE_WORK_RE" +
      "LATIONSHIP_TYPE_MULTIPLE_WORK_RESOURCE\020\003" +
      "\0222\n.RESOURCE_WORK_RELATIONSHIP_TYPE_INTE" +
      "RPELLATION\020\004*\222\001\n\021RevenueSourceType\022)\n%RE" +
      "VENUE_SOURCE_TYPE_INDEMNITY_REVENUE\020\000\022\'\n" +
      "#REVENUE_SOURCE_TYPE_ROYALTY_REVENUE\020\001\022)" +
      "\n%REVENUE_SOURCE_TYPE_FINANCIAL_REVENUE\020" +
      "\002*\215\004\n\013RhythmStyle\022\036\n\032RHYTHM_STYLE_BOOGIE" +
      "_WOOGIE\020\000\022\031\n\025RHYTHM_STYLE_ONE_DROP\020\001\022\030\n\024" +
      "RHYTHM_STYLE_SHUFFLE\020\002\022\026\n\022RHYTHM_STYLE_S" +
      "KANK\020\003\022\025\n\021RHYTHM_STYLE_TALA\020\004\022\027\n\023RHYTHM_" +
      "STYLE_CUMBIA\020\005\022\033\n\027RHYTHM_STYLE_POLYRHYTH" +
      "M\020\006\022\026\n\022RHYTHM_STYLE_BLUES\020\007\022\032\n\026RHYTHM_ST" +
      "YLE_NYABINGHI\020\010\022\031\n\025RHYTHM_STYLE_FLAMENCO" +
      "\020\t\022\031\n\025RHYTHM_STYLE_MERENGUE\020\n\022\036\n\032RHYTHM_" +
      "STYLE_ROCK_AND_ROLL\020\013\022\027\n\023RHYTHM_STYLE_TE" +
      "JANO\020\014\022\030\n\024RHYTHM_STYLE_CALYPSO\020\r\022\026\n\022RHYT" +
      "HM_STYLE_RUMBA\020\016\022\027\n\023RHYTHM_STYLE_DEMBOW\020" +
      "\017\022\026\n\022RHYTHM_STYLE_DISCO\020\020\022\037\n\033RHYTHM_STYL" +
      "E_4_ON_THE_FLOOR\020\021\022\035\n\031RHYTHM_STYLE_USER_" +
      "DEFINED\020\022*\315\001\n\016RightShareType\0222\n.RIGHT_SH" +
      "ARE_TYPE_MUSICAL_WORK_MANUSCRIPT_SHARE\020\000" +
      "\022-\n)RIGHT_SHARE_TYPE_ORIGINAL_PUBLISHER_" +
      "SHARE\020\001\022$\n RIGHT_SHARE_TYPE_LICENSING_SH" +
      "ARE\020\002\0222\n.RIGHT_SHARE_TYPE_MUSICAL_WORK_C" +
      "OLLECTION_SHARE\020\003*\224\001\n\025RightsClaimPolicyT" +
      "ype\022%\n!RIGHTS_CLAIM_POLICY_TYPE_MONETIZE" +
      "\020\000\022)\n%RIGHTS_CLAIM_POLICY_TYPE_REPORT_US" +
      "AGE\020\001\022)\n%RIGHTS_CLAIM_POLICY_TYPE_BLOCK_" +
      "ACCESS\020\002*\360\001\n\021RightsClaimStatus\022 \n\034RIGHTS" +
      "_CLAIM_STATUS_CONFLICT\020\000\022\037\n\033RIGHTS_CLAIM" +
      "_STATUS_REVOKED\020\001\022#\n\037RIGHTS_CLAIM_STATUS" +
      "_NO_CONFLICT\020\002\022&\n\"RIGHTS_CLAIM_STATUS_PE" +
      "NDING_REVIEW\020\003\022 \n\034RIGHTS_CLAIM_STATUS_RE" +
      "JECTED\020\004\022)\n%RIGHTS_CLAIM_STATUS_DATA_INC" +
      "ONSISTENT\020\005*\346\001\n\021RightsControlType\022&\n\"RIG" +
      "HTS_CONTROL_TYPE_ORIGINAL_OWNER\020\000\022*\n&RIG" +
      "HTS_CONTROL_TYPE_EXCLUSIVE_LICENSEE\020\001\022#\n" +
      "\037RIGHTS_CONTROL_TYPE_LOCAL_PAYEE\020\002\022,\n(RI" +
      "GHTS_CONTROL_TYPE_RIGHTS_ADMINISTRATOR\020\003" +
      "\022*\n&RIGHTS_CONTROL_TYPE_SUCCESSOR_IN_TIT" +
      "LE\020\004*\255\002\n\024RightsControllerRole\0220\n,RIGHTS_" +
      "CONTROLLER_ROLE_ROYALTY_ADMINISTRATOR\020\000\022" +
      "\"\n\036RIGHTS_CONTROLLER_ROLE_UNKNOWN\020\001\022&\n\"R" +
      "IGHTS_CONTROLLER_ROLE_LOCAL_PAYEE\020\002\022/\n+R" +
      "IGHTS_CONTROLLER_ROLE_RIGHTS_ADMINISTRAT" +
      "OR\020\003\022,\n(RIGHTS_CONTROLLER_ROLE_RIGHTS_CO" +
      "NTROLLER\020\004\0228\n4RIGHTS_CONTROLLER_ROLE_ADM",
      "INISTRATING_RECORD_COMPANY\020\005*\237\001\n\024RightsC" +
      "ontrollerType\022)\n%RIGHTS_CONTROLLER_TYPE_" +
      "ORIGINAL_OWNER\020\000\022-\n)RIGHTS_CONTROLLER_TY" +
      "PE_EXCLUSIVE_LICENSEE\020\001\022-\n)RIGHTS_CONTRO" +
      "LLER_TYPE_SUCCESSOR_IN_TITLE\020\002*\234\002\n\016Right" +
      "sCoverage\022$\n RIGHTS_COVERAGE_MECHANICAL_" +
      "RIGHT\020\000\022\037\n\033RIGHTS_COVERAGE_PRINT_RIGHT\020\001" +
      "\022(\n$RIGHTS_COVERAGE_MAKE_AVAILABLE_RIGHT" +
      "\020\002\022&\n\"RIGHTS_COVERAGE_REPRODUCTION_RIGHT" +
      "\020\003\022)\n%RIGHTS_COVERAGE_SYNCHRONIZATION_RI" +
      "GHT\020\004\022 \n\034RIGHTS_COVERAGE_USER_DEFINED\020\005\022" +
      "$\n RIGHTS_COVERAGE_PERFORMING_RIGHT\020\006*\321\001" +
      "\n\023RightsCoverage_MWNL\022-\n)RIGHTS_COVERAGE" +
      "__M_W_N_L_MECHANICAL_RIGHT\020\000\022(\n$RIGHTS_C" +
      "OVERAGE__M_W_N_L_PRINT_RIGHT\020\001\0222\n.RIGHTS" +
      "_COVERAGE__M_W_N_L_SYNCHRONIZATION_RIGHT" +
      "\020\002\022-\n)RIGHTS_COVERAGE__M_W_N_L_PERFORMIN" +
      "G_RIGHT\020\003*{\n\026RightsStatementProfile\022-\n)R" +
      "IGHTS_STATEMENT_PROFILE_RIGHTS_STATEMENT" +
      "\020\000\0222\n.RIGHTS_STATEMENT_PROFILE_MANDATED_" +
      "USAGE_RIGHTS\020\001*\237\003\n\rRootChordNote\022\025\n\021ROOT" +
      "_CHORD_NOTE_A\020\000\022\025\n\021ROOT_CHORD_NOTE_B\020\001\022\025" +
      "\n\021ROOT_CHORD_NOTE_C\020\002\022\025\n\021ROOT_CHORD_NOTE" +
      "_D\020\003\022\'\n#ROOT_CHORD_NOTE_GB__FS___F__SHAR" +
      "P__\020\004\022\025\n\021ROOT_CHORD_NOTE_E\020\005\022\025\n\021ROOT_CHO" +
      "RD_NOTE_F\020\006\022\025\n\021ROOT_CHORD_NOTE_G\020\007\022\'\n#RO" +
      "OT_CHORD_NOTE_EB__FS___D__SHARP__\020\010\022\'\n#R" +
      "OOT_CHORD_NOTE_AB__FS___G__SHARP__\020\t\022\'\n#" +
      "ROOT_CHORD_NOTE_C__SHARP____FS___DB\020\n\022 \n" +
      "\034ROOT_CHORD_NOTE_USER_DEFINED\020\013\022\'\n#ROOT_" +
      "CHORD_NOTE_BB__FS___A__SHARP__\020\014*\376\004\n\020Roo" +
      "tChordQuality\022*\n&ROOT_CHORD_QUALITY_MAJO" +
      "R_MINOR_SEVENTH\020\000\022\"\n\036ROOT_CHORD_QUALITY_" +
      "MINOR_TRIAD\020\001\022)\n%ROOT_CHORD_QUALITY_DIMI" +
      "NISHED_SEVENTH\020\002\022$\n ROOT_CHORD_QUALITY_M" +
      "INOR_SEVENTH\020\003\022\"\n\036ROOT_CHORD_QUALITY_MAJ" +
      "OR_TRIAD\020\004\022\"\n\036ROOT_CHORD_QUALITY_MINOR_S" +
      "IXTH\020\005\022(\n$ROOT_CHORD_QUALITY_AUGMENTED_S" +
      "EVENTH\020\006\022\'\n#ROOT_CHORD_QUALITY_DOMINANT_" +
      "SEVENTH\020\007\022\'\n#ROOT_CHORD_QUALITY_DIMINISH" +
      "ED_TRIAD\020\010\022.\n*ROOT_CHORD_QUALITY_HALF_DI" +
      "MINISHED_SEVENTH\020\t\022$\n ROOT_CHORD_QUALITY" +
      "_MAJOR_SEVENTH\020\n\022&\n\"ROOT_CHORD_QUALITY_A" +
      "UGMENTED_TRIAD\020\013\022\034\n\030ROOT_CHORD_QUALITY_F" +
      "IFTH\020\014\022 \n\034ROOT_CHORD_QUALITY_SUSPENDED\020\r" +
      "\022#\n\037ROOT_CHORD_QUALITY_USER_DEFINED\020\016\022\"\n" +
      "\036ROOT_CHORD_QUALITY_MAJOR_SIXTH\020\017*\265\003\n\032Ro" +
      "yaltyRateCalculationType\022.\n*ROYALTY_RATE" +
      "_CALCULATION_TYPE_RETAIL_PRICE\020\000\022E\nAROYA" +
      "LTY_RATE_CALCULATION_TYPE_CONTROLLED_COM" +
      "POSITION_ROYALTY_RATE\020\001\022\'\n#ROYALTY_RATE_" +
      "CALCULATION_TYPE_P_P_D\020\002\0229\n5ROYALTY_RATE" +
      "_CALCULATION_TYPE_NEGOTIATED_ROYALTY_RAT" +
      "E\020\003\022@\n<ROYALTY_RATE_CALCULATION_TYPE_RED" +
      "UCED_STATUTORY_ROYALTY_RATE\020\004\0228\n4ROYALTY" +
      "_RATE_CALCULATION_TYPE_STATUTORY_ROYALTY" +
      "_RATE\020\005\022@\n<ROYALTY_RATE_CALCULATION_TYPE" +
      "_MINIMUM_STATUTORY_ROYALTY_RATE\020\006*b\n\017Roy" +
      "altyRateType\022-\n)ROYALTY_RATE_TYPE_PERCEN" +
      "TAGE_ROYALTY_RATE\020\000\022 \n\034ROYALTY_RATE_TYPE" +
      "_PENNY_RATE\020\001*\266\004\n\013SessionType\022\027\n\023SESSION" +
      "_TYPE_MIXING\020\000\022\025\n\021SESSION_TYPE_DEMO\020\001\022\031\n" +
      "\025SESSION_TYPE_TRACKING\020\002\022\035\n\031SESSION_TYPE" +
      "_PRESERVATION\020\003\022!\n\035SESSION_TYPE_LIVE_PER" +
      "FORMANCE\020\004\022\030\n\024SESSION_TYPE_EDITING\020\005\022\032\n\026" +
      "SESSION_TYPE_MASTERING\020\006\022\037\n\033SESSION_TYPE" +
      "_PRE_PRODUCTION\020\007\022\031\n\025SESSION_TYPE_REMIXI" +
      "NG\020\010\022\030\n\024SESSION_TYPE_OVERDUB\020\t\022\030\n\024SESSIO" +
      "N_TYPE_PROJECT\020\n\022 \n\034SESSION_TYPE_DIGITAL" +
      "_EDITING\020\013\022\036\n\032SESSION_TYPE_ARTIST_VOCALS" +
      "\020\014\022\033\n\027SESSION_TYPE_PRODUCTION\020\r\022\031\n\025SESSI" +
      "ON_TYPE_TRANSFER\020\016\022\026\n\022SESSION_TYPE_VOCAL" +
      "\020\017\022\032\n\026SESSION_TYPE_RECORDING\020\020\022\'\n#SESSIO" +
      "N_TYPE_TRANSFERS_AND_SAFETIES\020\021\022\035\n\031SESSI" +
      "ON_TYPE_USER_DEFINED\020\022*>\n\023SheetMusicCode" +
      "cType\022\'\n#SHEET_MUSIC_CODEC_TYPE_USER_DEF" +
      "INED\020\000*3\n\016SheetMusicType\022!\n\035SHEET_MUSIC_" +
      "TYPE_USER_DEFINED\020\000*\351\001\n\014SoftwareType\022\035\n\031" +
      "SOFTWARE_TYPE_SCREENSAVER\020\000\022)\n%SOFTWARE_" +
      "TYPE_MUSICAL_WORK_BASED_GAME\020\001\022%\n!SOFTWA" +
      "RE_TYPE_INTERACTIVE_BOOKLET\020\002\022\031\n\025SOFTWAR" +
      "E_TYPE_UNKNOWN\020\003\022-\n)SOFTWARE_TYPE_NON_MU" +
      "SICAL_WORK_BASED_GAME\020\004\022\036\n\032SOFTWARE_TYPE" +
      "_USER_DEFINED\020\005*\260\003\n\022SoundRecordingType\0224" +
      "\n0SOUND_RECORDING_TYPE_SPOKEN_WORD_SOUND" +
      "_RECORDING\020\000\022?\n;SOUND_RECORDING_TYPE_MUS" +
      "ICAL_WORK_READALONG_SOUND_RECORDING\020\001\022 \n" +
      "\034SOUND_RECORDING_TYPE_UNKNOWN\020\002\0225\n1SOUND" +
      "_RECORDING_TYPE_MUSICAL_WORK_SOUND_RECOR" +
      "DING\020\003\022#\n\037SOUND_RECORDING_TYPE_AUDIO_STE" +
      "M\020\004\0229\n5SOUND_RECORDING_TYPE_NON_MUSICAL_" +
      "WORK_SOUND_RECORDING\020\005\022C\n?SOUND_RECORDIN" +
      "G_TYPE_NON_MUSICAL_WORK_READALONG_SOUND_" +
      "RECORDING\020\006\022%\n!SOUND_RECORDING_TYPE_USER" +
      "_DEFINED\020\007*\357\001\n\006Status\022\035\n\031STATUS_AWAITING" +
      "_MATERIALS\020\000\022\023\n\017STATUS_VERIFIED\020\001\022\021\n\rSTA" +
      "TUS_CLOSED\020\002\022\026\n\022STATUS_NOT_STARTED\020\003\022\024\n\020" +
      "STATUS_COMPLETED\020\004\022\030\n\024STATUS_ASSETS_NEED" +
      "ED\020\005\022\023\n\017STATUS_CANCELED\020\006\022\024\n\020STATUS_BACK" +
      "ED_UP\020\007\022\027\n\023STATUS_USER_DEFINED\020\010\022\022\n\016STAT" +
      "US_IN_WORK\020\t*\222j\n\010SubGenre\022 \n\034SUB_GENRE_M" +
      "IDDLE20TH_CENTURY\020\000\022\032\n\026SUB_GENRE_AFRICAN" +
      "_JAZZ\020\001\022\026\n\022SUB_GENRE_HARD_BOP\020\002\022\036\n\032SUB_G" +
      "ENRE_NOUVELLE_CHANSON\020\003\022\'\n#SUB_GENRE_URB" +
      "AN_CONTEMPORARY_GOSPEL\020\004\022\024\n\020SUB_GENRE_CU" +
      "MBIA\020\005\022\032\n\026SUB_GENRE_NEW_FLAMENCO\020\006\022\024\n\020SU" +
      "B_GENRE_SALVES\020\007\022\027\n\023SUB_GENRE_DARK_WAVE\020" +
      "\010\022\027\n\023SUB_GENRE_INTERVIEW\020\t\022\036\n\032SUB_GENRE_" +
      "BARBERSHOP_MUSIC\020\n\022\024\n\020SUB_GENRE_BOOGIE\020\013" +
      "\022\022\n\016SUB_GENRE_SURF\020\014\022 \n\034SUB_GENRE_PROGRE" +
      "SSIVE_TRANCE\020\r\022\031\n\025SUB_GENRE_DEATH_METAL\020" +
      "\016\022\034\n\030SUB_GENRE_MODERN_COUNTRY\020\017\022\024\n\020SUB_G" +
      "ENRE_MBALAX\020\020\022\037\n\033SUB_GENRE_EASTCOAST_HIP" +
      "_HOP\020\021\022\033\n\027SUB_GENRE_2_STEP_GARAGE\020\022\022\027\n\023S" +
      "UB_GENRE_POWER_POP\020\023\022\025\n\021SUB_GENRE_NORTEN" +
      "O\020\024\022\023\n\017SUB_GENRE_GO_GO\020\025\022\024\n\020SUB_GENRE_CE" +
      "LTIC\020\026\022\031\n\025SUB_GENRE_PIANO_BLUES\020\027\022\030\n\024SUB" +
      "_GENRE_GOLDEN_AGE\020\030\022\025\n\021SUB_GENRE_MAKOSSA" +
      "\020\031\022\032\n\026SUB_GENRE_MODERN_LAIKO\020\032\022$\n SUB_GE" +
      "NRE_ACOUSTIC_CHICAGO_BLUES\020\033\022\024\n\020SUB_GENR" +
      "E_JUNGLE\020\034\022\033\n\027SUB_GENRE_PUNJABI_MUSIC\020\035\022" +
      "\036\n\032SUB_GENRE_PSYCHEDELIC_SOUL\020\036\022\033\n\027SUB_G" +
      "ENRE_TIBETAN_MUSIC\020\037\022!\n\035SUB_GENRE_JUMP__" +
      "MINUS___BLUES\020 \022\035\n\031SUB_GENRE_GREGORIAN_C" +
      "HANT\020!\022\025\n\021SUB_GENRE_SCREAMO\020\"\022\033\n\027SUB_GEN" +
      "RE_CONSCIOUS_RAP\020#\022\034\n\030SUB_GENRE_MIDDLE_B" +
      "AROQUE\020$\022\027\n\023SUB_GENRE_WORLDBEAT\020%\022\027\n\023SUB" +
      "_GENRE_DEEP_SOUL\020&\022\031\n\025SUB_GENRE_DRUM_N_B" +
      "ASS\020\'\022\034\n\030SUB_GENRE_CARNATIC_MUSIC\020(\022\030\n\024S" +
      "UB_GENRE_MERSEYBEAT\020)\022\031\n\025SUB_GENRE_QUIET" +
      "_STORM\020*\022\035\n\031SUB_GENRE_NASHVILLE_SOUND\020+\022" +
      "\036\n\032SUB_GENRE_BRITISH_INVASION\020,\022\031\n\025SUB_G" +
      "ENRE_SPEED_METAL\020-\022\'\n#SUB_GENRE_AMERICAN" +
      "_PRIMITIVE_GUITAR\020.\022\034\n\030SUB_GENRE_OUTLAW_" +
      "COUNTRY\020/\022!\n\035SUB_GENRE_ALTERNATIVE_COUNT" +
      "RY\0200\022\035\n\031SUB_GENRE_ALTERNATIVE_POP\0201\022\027\n\023S" +
      "UB_GENRE_DIRTY_RAP\0202\022\032\n\026SUB_GENRE_INDIAN" +
      "_MUSIC\0203\022\030\n\024SUB_GENRE_INDIAN_POP\0204\022\026\n\022SU" +
      "B_GENRE_MEDIEVAL\0205\022\031\n\025SUB_GENRE_DUBSTEP_" +
      "U_S\0206\022\032\n\026SUB_GENRE_THRASH_METAL\0207\022\025\n\021SUB" +
      "_GENRE_AMBIENT\0208\022\026\n\022SUB_GENRE_OLD_TIME\0209" +
      "\022(\n$SUB_GENRE_ELECTRONICA__FS___ECLECTIC" +
      "\020:\022\031\n\025SUB_GENRE_DUBSTEP_U_K\020;\022\026\n\022SUB_GEN" +
      "RE_MARIACHI\020<\022\035\n\031SUB_GENRE_COLOMBIAN_MUS" +
      "IC\020=\022\030\n\024SUB_GENRE_MADCHESTER\020>\022\023\n\017SUB_GE" +
      "NRE_SAMBA\020?\022\032\n\026SUB_GENRE_FOLK_BAROQUE\020@\022" +
      "\026\n\022SUB_GENRE_RANCHERA\020A\022\031\n\025SUB_GENRE_PHI" +
      "LLYSOUND\020B\022\027\n\023SUB_GENRE_BOLLYWOOD\020C\022\027\n\023S" +
      "UB_GENRE_SYNTH_POP\020D\022\031\n\025SUB_GENRE_IRISH_" +
      "MUSIC\020E\022\035\n\031SUB_GENRE_MODERN_CREATIVE\020F\022!" +
      "\n\035SUB_GENRE_SOUTH_AMERICAN_ROCK\020G\022\026\n\022SUB" +
      "_GENRE_TWEE_POP\020H\022\035\n\031SUB_GENRE_AMBROSIAN" +
      "_CHANT\020I\022\032\n\026SUB_GENRE_COUNTRY_ROCK\020J\022\032\n\026" +
      "SUB_GENRE_GOTHIC_METAL\020K\022\025\n\021SUB_GENRE_HI" +
      "PLIFE\020L\022\027\n\023SUB_GENRE_SOFT_ROCK\020M\022\036\n\032SUB_" +
      "GENRE_PROGRESSIVE_ROCK\020N\022\030\n\024SUB_GENRE_JA" +
      "ZZ_HOUSE\020O\022!\n\035SUB_GENRE_TRADITIONAL_COUN" +
      "TRY\020P\022\025\n\021SUB_GENRE_EXOTICA\020Q\022\027\n\023SUB_GENR" +
      "E_SERIALISM\020R\022\033\n\027SUB_GENRE_SWING_REVIVAL" +
      "\020S\022\027\n\023SUB_GENRE_PLAINSONG\020T\022\035\n\031SUB_GENRE" +
      "_NEAPOLITAN_SONG\020U\022\037\n\033SUB_GENRE_CANADIAN" +
      "_FIDDLING\020V\022\037\n\033SUB_GENRE_EARLY_RENAISSAN" +
      "CE\020W\022\025\n\021SUB_GENRE_BIKUTSI\020X\022\027\n\023SUB_GENRE" +
      "_POST_ROCK\020Y\022\033\n\027SUB_GENRE_NEO_CLASSICAL\020" +
      "Z\022\027\n\023SUB_GENRE_HARDSTYLE\020[\022\030\n\024SUB_GENRE_" +
      "INDUSTRIAL\020\\\022\026\n\022SUB_GENRE_HIGHLIFE\020]\022\030\n\024" +
      "SUB_GENRE_HAIR_METAL\020^\022\036\n\032SUB_GENRE_LATE" +
      "20TH_CENTURY\020_\022\032\n\026SUB_GENRE_FOLK_REVIVAL" +
      "\020`\022\031\n\025SUB_GENRE_COUNTRY_POP\020a\022\023\n\017SUB_GEN" +
      "RE_POLKA\020b\022\030\n\024SUB_GENRE_HONKY_TONK\020c\022\"\n\036" +
      "SUB_GENRE_TRADITIONAL_ACOUSTIC\020d\022\034\n\030SUB_" +
      "GENRE_BLUE_EYED_SOUL\020e\022\024\n\020SUB_GENRE_ZYDE" +
      "CO\020f\022\023\n\017SUB_GENRE_TANGO\020g\022\026\n\022SUB_GENRE_B" +
      "IG_BEAT\020h\022\037\n\033SUB_GENRE_ALTERNATIVE_DANCE" +
      "\020i\022\032\n\026SUB_GENRE_NEW_ROMANTIC\020j\022\027\n\023SUB_GE" +
      "NRE_NOISE_POP\020k\022\021\n\rSUB_GENRE_SKA\020l\022\031\n\025SU" +
      "B_GENRE_NOISE_MUSIC\020m\022\034\n\030SUB_GENRE_CAPOE" +
      "IRA_MUSIC\020n\022\031\n\025SUB_GENRE_FOLKTRONICA\020o\022\031" +
      "\n\025SUB_GENRE_UNDERGROUND\020p\022\026\n\022SUB_GENRE_R" +
      "OMANTIC\020q\022\023\n\017SUB_GENRE_GABBA\020r\022\031\n\025SUB_GE" +
      "NRE_CZECH_MUSIC\020s\022\035\n\031SUB_GENRE_DOMINICAN" +
      "_MUSIC\020t\022\026\n\022SUB_GENRE_BOOGALOO\020u\022\032\n\026SUB_" +
      "GENRE_JOVEM_GUARDA\020v\022\026\n\022SUB_GENRE_JAZZ_P" +
      "OP\020w\022\033\n\027SUB_GENRE_CHILEAN_MUSIC\020x\022\027\n\023SUB" +
      "_GENRE_SOUL_JAZZ\020y\022\033\n\027SUB_GENRE_HARDCORE" +
      "_PUNK\020z\022\033\n\027SUB_GENRE_AMBIENT_HOUSE\020{\022\031\n\025" +
      "SUB_GENRE_DUTCH_HOUSE\020|\022\036\n\032SUB_GENRE_ALT" +
      "ERNATIVE_ROCK\020}\022\026\n\022SUB_GENRE_FLAMENCO\020~\022" +
      "\031\n\025SUB_GENRE_ROCK_N_ROLL\020\177\022#\n\036SUB_GENRE_" +
      "MIDDLE_EASTERN_MUSIC\020\200\001\022\034\n\027SUB_GENRE_DET" +
      "ROIT_HOUSE\020\201\001\022#\n\036SUB_GENRE_ELECTRIC_TEXA" +
      "S_BLUES\020\202\001\022\032\n\025SUB_GENRE_BOOGIE_ROCK\020\203\001\022\027" +
      "\n\022SUB_GENRE_MBAQANGA\020\204\001\022\025\n\020SUB_GENRE_TRA" +
      "NCE\020\205\001\022\032\n\025SUB_GENRE_CHA_CHA_CHA\020\206\001\022\034\n\027SU" +
      "B_GENRE_SPANISH_MUSIC\020\207\001\022-\n(SUB_GENRE_AL" +
      "TERNATIVE_R__APO__N__APO___B\020\210\001\022\031\n\024SUB_G" +
      "ENRE_EARLY_ROCK\020\211\001\022\032\n\025SUB_GENRE_HARD_TRA" +
      "NCE\020\212\001\022\033\n\026SUB_GENRE_ROOTS_REGGAE\020\213\001\022\034\n\027S" +
      "UB_GENRE_CARIBBEAN_POP\020\214\001\022\033\n\026SUB_GENRE_L" +
      "ATE_BAROQUE\020\215\001\022\033\n\026SUB_GENRE_GERMAN_MUSIC" +
      "\020\216\001\022\030\n\023SUB_GENRE_EURODANCE\020\217\001\022\033\n\026SUB_GEN" +
      "RE_JAPANESE_POP\020\220\001\022\026\n\021SUB_GENRE_BAROQUE\020" +
      "\221\001\022\034\n\027SUB_GENRE_BOOGIE_WOOGIE\020\222\001\022\033\n\026SUB_" +
      "GENRE_SOUTHERN_RAP\020\223\001\022 \n\033SUB_GENRE_EXPER" +
      "IMENTAL_ROCK\020\224\001\022\026\n\021SUB_GENRE_SOUKOUS\020\225\001\022" +
      "\033\n\026SUB_GENRE_CONVERSATION\020\226\001\022\030\n\023SUB_GENR" +
      "E_CANTO_POP\020\227\001\022\024\n\017SUB_GENRE_BEBOP\020\230\001\022\030\n\023" +
      "SUB_GENRE_ALT_METAL\020\231\001\022\033\n\026SUB_GENRE_GAUC" +
      "HO_MUSIC\020\232\001\022\034\n\027SUB_GENRE_CHRISTIAN_RAP\020\233" +
      "\001\022\031\n\024SUB_GENRE_DEEP_HOUSE\020\234\001\022\027\n\022SUB_GENR" +
      "E_BRIT_POP\020\235\001\022\030\n\023SUB_GENRE_DIXIELAND\020\236\001\022" +
      "\"\n\035SUB_GENRE_CLASSICAL_CROSSOVER\020\237\001\022\033\n\026S" +
      "UB_GENRE_JEWISH_MUSIC\020\240\001\022 \n\033SUB_GENRE_EA" +
      "RLY20TH_CENTURY\020\241\001\022\027\n\022SUB_GENRE_TWO_TONE" +
      "\020\242\001\022\034\n\027SUB_GENRE_AMERICAN_FOLK\020\243\001\022\030\n\023SUB" +
      "_GENRE_SERTANEJO\020\244\001\022\024\n\017SUB_GENRE_N_D_W\020\245" +
      "\001\022\031\n\024SUB_GENRE_OI__BANG__\020\246\001\022\032\n\025SUB_GENR" +
      "E_ACID_TECHNO\020\247\001\022\031\n\024SUB_GENRE_MODERN_POP" +
      "\020\250\001\022\034\n\027SUB_GENRE_IMPRESSIONISM\020\251\001\022\030\n\023SUB" +
      "_GENRE_BLUEGRASS\020\252\001\022\036\n\031SUB_GENRE_SOUTHER" +
      "N_GOSPEL\020\253\001\022\030\n\023SUB_GENRE_KRAUTROCK\020\254\001\022\022\n" +
      "\rSUB_GENRE_SON\020\255\001\022\031\n\024SUB_GENRE_GYPSY_JAZ" +
      "Z\020\256\001\022&\n!SUB_GENRE_TURKISH_CLASSICAL_MUSI" +
      "C\020\257\001\022&\n!SUB_GENRE_NEO_TRADITIONAL_COUNTR" +
      "Y\020\260\001\022\027\n\022SUB_GENRE_BASSLINE\020\261\001\022\034\n\027SUB_GEN" +
      "RE_MEXICAN_MUSIC\020\262\001\022\031\n\024SUB_GENRE_SAMBA_R" +
      "OCK\020\263\001\022\031\n\024SUB_GENRE_MINIMALISM\020\264\001\022\025\n\020SUB" +
      "_GENRE_KUDURO\020\265\001\022\023\n\016SUB_GENRE_SKIT\020\266\001\022\030\n" +
      "\023SUB_GENRE_DOWNTEMPO\020\267\001\022\032\n\025SUB_GENRE_AFR" +
      "ICAN_POP\020\270\001\022\030\n\023SUB_GENRE_GRINDCORE\020\271\001\022\030\n" +
      "\023SUB_GENRE_INDIE_POP\020\272\001\022\032\n\025SUB_GENRE_NAT" +
      "IONALIST\020\273\001\022\034\n\027SUB_GENRE_TEXAS_COUNTRY\020\274" +
      "\001\022\032\n\025SUB_GENRE_DELTA_BLUES\020\275\001\022\026\n\021SUB_GEN" +
      "RE_BACHATA\020\276\001\022\033\n\026SUB_GENRE_FUNK_CARIOCA\020" +
      "\277\001\022\031\n\024SUB_GENRE_KOREAN_POP\020\300\001\022\034\n\027SUB_GEN" +
      "RE_FUTURE_GARAGE\020\301\001\022#\n\036SUB_GENRE_CLASSIC" +
      "_FEMALE_BLUES\020\302\001\022\034\n\027SUB_GENRE_EXPRESSION" +
      "ISM\020\303\001\022\027\n\022SUB_GENRE_SHOEGAZE\020\304\001\022 \n\033SUB_G" +
      "ENRE_ARGENTINIAN_MUSIC\020\305\001\022\026\n\021SUB_GENRE_K" +
      "LEZMER\020\306\001\022#\n\036SUB_GENRE_INSTRUMENTAL_HIP_" +
      "HOP\020\307\001\022\027\n\022SUB_GENRE_NEW_WAVE\020\310\001\022\031\n\024SUB_G" +
      "ENRE_BOSSA_NOVA\020\311\001\022\026\n\021SUB_GENRE_SCHRANZ\020" +
      "\312\001\022\"\n\035SUB_GENRE_NORTH_AMERICAN_FOLK\020\313\001\022 " +
      "\n\033SUB_GENRE_ORCHESTRAL_FUSION\020\314\001\022\031\n\024SUB_" +
      "GENRE_DUBTRONICA\020\315\001\022\035\n\030SUB_GENRE_NEW_JAC" +
      "K_SWING\020\316\001\022\032\n\025SUB_GENRE_SPECTRALISM\020\317\001\022\026" +
      "\n\021SUB_GENRE_NEW_AGE\020\320\001\022\034\n\027SUB_GENRE_SOUT" +
      "HERN_SOUL\020\321\001\022\034\n\027SUB_GENRE_PRE_CLASSICAL\020" +
      "\322\001\022\027\n\022SUB_GENRE_TRIP_HOP\020\323\001\022\031\n\024SUB_GENRE" +
      "_ROCKABILLY\020\324\001\022\022\n\rSUB_GENRE_DUB\020\325\001\022\032\n\025SU" +
      "B_GENRE_MODERN_JAZZ\020\326\001\022\030\n\023SUB_GENRE_HARD" +
      "_ROCK\020\327\001\022(\n#SUB_GENRE_MODERN_R__APO__N__" +
      "APO___B\020\330\001\022\033\n\026SUB_GENRE_BRITISH_FOLK\020\331\001\022" +
      "\027\n\022SUB_GENRE_HARDCORE\020\332\001\022!\n\034SUB_GENRE_BR" +
      "ITISH_DANCE_BAND\020\333\001\022\037\n\032SUB_GENRE_INDUSTR" +
      "IAL_METAL\020\334\001\022\024\n\017SUB_GENRE_CRUNK\020\335\001\022\031\n\024SU" +
      "B_GENRE_LATIN_JAZZ\020\336\001\022\033\n\026SUB_GENRE_CLASS" +
      "IC_ROCK\020\337\001\022\031\n\024SUB_GENRE_FUNK_METAL\020\340\001\022!\n" +
      "\034SUB_GENRE_PSYCHEDELIC_TRANCE\020\341\001\022#\n\036SUB_" +
      "GENRE_EXPERIMENTAL_HIP_HOP\020\342\001\022\034\n\027SUB_GEN" +
      "RE_BRAZILIAN_POP\020\343\001\022\032\n\025SUB_GENRE_JAZZ_FU" +
      "SION\020\344\001\022\035\n\030SUB_GENRE_HEARTLAND_ROCK\020\345\001\022\034" +
      "\n\027SUB_GENRE_CANADIAN_FOLK\020\346\001\022%\n SUB_GENR" +
      "E_EXPERIMENTAL_CLASSICAL\020\347\001\022.\n)SUB_GENRE" +
      "_CONTEMPORARY_R__APO__N__APO___B\020\350\001\022\034\n\027S" +
      "UB_GENRE_COUNTRY_BLUES\020\351\001\022\030\n\023SUB_GENRE_H" +
      "IP_HOUSE\020\352\001\022\034\n\027SUB_GENRE_CHICAGO_BLUES\020\353" +
      "\001\022\032\n\025SUB_GENRE_GARAGE_ROCK\020\354\001\022\030\n\023SUB_GEN" +
      "RE_MONOLOGUE\020\355\001\022)\n$SUB_GENRE_HINDUSTANI_" +
      "CLASSICAL_MUSIC\020\356\001\022\036\n\031SUB_GENRE_BYZANTIN" +
      "E_CHANT\020\357\001\022\030\n\023SUB_GENRE_SPIRITUAL\020\360\001\022\034\n\027" +
      "SUB_GENRE_AFRICAN_MUSIC\020\361\001\022\036\n\031SUB_GENRE_" +
      "CARIBBEAN_MUSIC\020\362\001\022\037\n\032SUB_GENRE_REGIONAL" +
      "_MEXICAN\020\363\001\022\031\n\024SUB_GENRE_MIAMI_BASS\020\364\001\022\031" +
      "\n\024SUB_GENRE_PIL__OI__N\020\365\001\022\024\n\017SUB_GENRE_S" +
      "WING\020\366\001\022\030\n\023SUB_GENRE_BRAZILIAN\020\367\001\022\027\n\022SUB" +
      "_GENRE_O_G_FUNK\020\370\001\022\033\n\026SUB_GENRE_USER_DEF" +
      "INED\020\371\001\022\033\n\026SUB_GENRE_MODERN_BLUES\020\372\001\022\025\n\020" +
      "SUB_GENRE_GLITCH\020\373\001\022\037\n\032SUB_GENRE_NEW_MEX" +
      "ICO_MUSIC\020\374\001\022 \n\033SUB_GENRE_PROGRESSIVE_ME" +
      "TAL\020\375\001\022\034\n\027SUB_GENRE_EARLY_BAROQUE\020\376\001\022&\n!" +
      "SUB_GENRE_EXPERIMENTAL_ELECTRONIC\020\377\001\022)\n$" +
      "SUB_GENRE_CLASSIC_R__APO__N__APO___B\020\200\002\022" +
      "\031\n\024SUB_GENRE_MODAL_JAZZ\020\201\002\022\033\n\026SUB_GENRE_" +
      "TRIBAL_HOUSE\020\202\002\022\031\n\024SUB_GENRE_GERMAN_POP\020" +
      "\203\002\022\033\n\026SUB_GENRE_FRENCH_HOUSE\020\204\002\022\035\n\030SUB_G" +
      "ENRE_ETHIOPIAN_JAZZ\020\205\002\022-\n(SUB_GENRE_NEW_" +
      "ORLEANS_R__APO__N__APO___B\020\206\002\022\024\n\017SUB_GEN" +
      "RE_SALSA\020\207\002\022\034\n\027SUB_GENRE_TURKISH_MUSIC\020\210" +
      "\002\022\023\n\016SUB_GENRE_SOUL\020\211\002\022\031\n\024SUB_GENRE_INDI" +
      "E_ROCK\020\212\002\022\033\n\026SUB_GENRE_ENGLISH_FOLK\020\213\002\022\035" +
      "\n\030SUB_GENRE_THIRD_WAVE_SKA\020\214\002\022\035\n\030SUB_GEN" +
      "RE_JAMAICAN_MUSIC\020\215\002\022\032\n\025SUB_GENRE_ITALO_" +
      "DISCO\020\216\002\022\033\n\026SUB_GENRE_CHICAGO_SOUL\020\217\002\022\032\n" +
      "\025SUB_GENRE_BLACK_METAL\020\220\002\022 \n\033SUB_GENRE_P" +
      "ROGRESSIVE_HOUSE\020\221\002\022\030\n\023SUB_GENRE_U_K_FUN" +
      "KY\020\222\002\022\036\n\031SUB_GENRE_LATIN_FREESTYLE\020\223\002\022\030\n" +
      "\023SUB_GENRE_DANCEHALL\020\224\002\022\025\n\020SUB_GENRE_TEJ" +
      "ANO\020\225\002\022\033\n\026SUB_GENRE_JUG_ENSEMBLE\020\226\002\022\024\n\017S" +
      "UB_GENRE_CUECA\020\227\002\022\024\n\017SUB_GENRE_BREGA\020\230\002\022" +
      "\034\n\027SUB_GENRE_ELECTRO_HOUSE\020\231\002\022\027\n\022SUB_GEN" +
      "RE_SCHLAGER\020\232\002\022\027\n\022SUB_GENRE_HI_N_R_G\020\233\002\022" +
      "\035\n\030SUB_GENRE_INDONESIAN_POP\020\234\002\022\036\n\031SUB_GE" +
      "NRE_BRAZILIAN_MUSIC\020\235\002\022\031\n\024SUB_GENRE_IRIS" +
      "H_FOLK\020\236\002\022\027\n\022SUB_GENRE_NU_DISCO\020\237\002\022\032\n\025SU" +
      "B_GENRE_CHINESE_POP\020\240\002\022\032\n\025SUB_GENRE_RENA" +
      "ISSANCE\020\241\002\022\034\n\027SUB_GENRE_MINIMAL_HOUSE\020\242\002" +
      "\022\033\n\026SUB_GENRE_MEMPHIS_SOUL\020\243\002\022\034\n\027SUB_GEN" +
      "RE_SCOTTISH_FOLK\020\244\002\022 \n\033SUB_GENRE_NEW_ORL" +
      "EANS_BLUES\020\245\002\022\037\n\032SUB_GENRE_MINNEAPOLIS_F" +
      "UNK\020\246\002\022\032\n\025SUB_GENRE_GOTHIC_ROCK\020\247\002\022\030\n\023SU" +
      "B_GENRE_SYNTHWAVE\020\250\002\022\027\n\022SUB_GENRE_GUARAC" +
      "HA\020\251\002\022#\n\036SUB_GENRE_TRADITIONAL_ELECTRIC\020" +
      "\252\002\022\030\n\023SUB_GENRE_COOL_JAZZ\020\253\002\022\023\n\016SUB_GENR" +
      "E_PUNK\020\254\002\022\023\n\016SUB_GENRE_FADO\020\255\002\022\024\n\017SUB_GE" +
      "NRE_METAL\020\256\002\022\031\n\024SUB_GENRE_WORK_SONGS\020\257\002\022" +
      "\026\n\021SUB_GENRE_DOO_WOP\020\260\002\022\033\n\026SUB_GENRE_20T" +
      "H_CENTURY\020\261\002\022\032\n\025SUB_GENRE_LATIN_HOUSE\020\262\002" +
      "\022\032\n\025SUB_GENRE_SMOOTH_JAZZ\020\263\002\022\024\n\017SUB_GENR" +
      "E_I_D_M\020\264\002\022\032\n\025SUB_GENRE_SWAMP_BLUES\020\265\002\022\037" +
      "\n\032SUB_GENRE_EARLY_ELECTRONIC\020\266\002\022\034\n\027SUB_G" +
      "ENRE_WESTERN_SWING\020\267\002\022\025\n\020SUB_GENRE_KWAIT" +
      "O\020\270\002\022\034\n\027SUB_GENRE_ITALIAN_MUSIC\020\271\002\022\027\n\022SU" +
      "B_GENRE_POP_ROCK\020\272\002\022\034\n\027SUB_GENRE_POST_HA" +
      "RDCORE\020\273\002\022\031\n\024SUB_GENRE_NOISE_ROCK\020\274\002\022\036\n\031" +
      "SUB_GENRE_PSYCHEDELIC_POP\020\275\002\022\026\n\021SUB_GENR" +
      "E_REPENTE\020\276\002\022!\n\034SUB_GENRE_PUERTO_RICAN_M" +
      "USIC\020\277\002\022\036\n\031SUB_GENRE_WEST_COAST_SOUL\020\300\002\022" +
      "\037\n\032SUB_GENRE_INDONESIAN_MUSIC\020\301\002\022\027\n\022SUB_" +
      "GENRE_DIMOTIKO\020\302\002\022\024\n\017SUB_GENRE_DISCO\020\303\002\022" +
      "\031\n\024SUB_GENRE_U_K_GARAGE\020\304\002\022\030\n\023SUB_GENRE_" +
      "GLAM_ROCK\020\305\002\022\036\n\031SUB_GENRE_ALTERNATIVE_RA" +
      "P\020\306\002\022\035\n\030SUB_GENRE_POST_CLASSICAL\020\307\002\022\033\n\026S" +
      "UB_GENRE_INDIETRONICA\020\310\002\022\035\n\030SUB_GENRE_CL" +
      "ASSIC_GOSPEL\020\311\002\022\037\n\032SUB_GENRE_TRADITIONAL" +
      "_JAZZ\020\312\002\022\027\n\022SUB_GENRE_MARACATU\020\313\002\022\027\n\022SUB" +
      "_GENRE_CORRIDOS\020\314\002\022\032\n\025SUB_GENRE_CONTRADA" +
      "NZA\020\315\002\022\024\n\017SUB_GENRE_GRIME\020\316\002\022\034\n\027SUB_GENR" +
      "E_BRITISH_BLUES\020\317\002\022\023\n\016SUB_GENRE_FUNK\020\320\002\022" +
      "\031\n\024SUB_GENRE_INDIE_FOLK\020\321\002\022\026\n\021SUB_GENRE_" +
      "KIZOMBA\020\322\002\022\037\n\032SUB_GENRE_DIGITAL_HARDCORE" +
      "\020\323\002\022\033\n\026SUB_GENRE_NEO_ROMANTIC\020\324\002\022\031\n\024SUB_" +
      "GENRE_TROPICALIA\020\325\002\022\026\n\021SUB_GENRE_POP_RAP" +
      "\020\326\002\022\032\n\025SUB_GENRE_COUNTRY_RAP\020\327\002\022\030\n\023SUB_G" +
      "ENRE_KAYOKYOKU\020\330\002\022\031\n\024SUB_GENRE_WELSH_FOL" +
      "K\020\331\002\022\035\n\030SUB_GENRE_BALINESE_MUSIC\020\332\002\022\031\n\024S" +
      "UB_GENRE_ACOUSMATIC\020\333\002\022\035\n\030SUB_GENRE_MINI" +
      "MAL_TECHNO\020\334\002\022\022\n\rSUB_GENRE_AXE\020\335\002\022\031\n\024SUB" +
      "_GENRE_ACID_HOUSE\020\336\002\022\024\n\017SUB_GENRE_AFOXE\020" +
      "\337\002\022\032\n\025SUB_GENRE_PSYCHOBILLY\020\340\002\022\034\n\027SUB_GE" +
      "NRE_ELECTRIC_FOLK\020\341\002\022\027\n\022SUB_GENRE_ARS_NO" +
      "VA\020\342\002\022\030\n\023SUB_GENRE_CLASSICAL\020\343\002\022\032\n\025SUB_G" +
      "ENRE_STONER_ROCK\020\344\002\022\031\n\024SUB_GENRE_TECH_HO" +
      "USE\020\345\002\022\027\n\022SUB_GENRE_EMO_ROCK\020\346\002\022\024\n\017SUB_G" +
      "ENRE_M_P_B\020\347\002\022\027\n\022SUB_GENRE_POST_BOP\020\350\002\022 " +
      "\n\033SUB_GENRE_WORLD_FUSION_JAZZ\020\351\002\022\024\n\017SUB_" +
      "GENRE_ROOTS\020\352\002\022$\n\037SUB_GENRE_FIRST_VIENNE" +
      "SE_SCHOOL\020\353\002\022\037\n\032SUB_GENRE_LATE_RENAISSAN" +
      "CE\020\354\002\022\031\n\024SUB_GENRE_JAZZ_BLUES\020\355\002\022!\n\034SUB_" +
      "GENRE_HARDCORE_BREAKBEAT\020\356\002\022\033\n\026SUB_GENRE" +
      "_SEA_SHANTIES\020\357\002\022\035\n\030SUB_GENRE_ROMANIAN_M" +
      "USIC\020\360\002\022\030\n\023SUB_GENRE_JAZZ_FUNK\020\361\002\022\036\n\031SUB" +
      "_GENRE_TRADITIONAL_POP\020\362\002\022\025\n\020SUB_GENRE_P" +
      "OETRY\020\363\002\022 \n\033SUB_GENRE_BAKERSFIELD_SOUND\020" +
      "\364\002\022\031\n\024SUB_GENRE_FRENCH_POP\020\365\002\022\030\n\023SUB_GEN" +
      "RE_MODERNISM\020\366\002\022\026\n\021SUB_GENRE_ORGANUM\020\367\002\022" +
      "\026\n\021SUB_GENRE_NO_WAVE\020\370\002\022\033\n\026SUB_GENRE_GAR" +
      "AGE_HOUSE\020\371\002\022\024\n\017SUB_GENRE_HOUSE\020\372\002\022\031\n\024SU" +
      "B_GENRE_SWAMP_ROCK\020\373\002\022\024\n\017SUB_GENRE_MAMBO" +
      "\020\374\002\022\037\n\032SUB_GENRE_PORTUGUESE_MUSIC\020\375\002\022\025\n\020" +
      "SUB_GENRE_TONADA\020\376\002\022\037\n\032SUB_GENRE_MUSIQUE" +
      "_CONCRETE\020\377\002\022\030\n\023SUB_GENRE_ACID_JAZZ\020\200\003\022\027" +
      "\n\022SUB_GENRE_POP_FUNK\020\201\003\022\032\n\025SUB_GENRE_POS" +
      "T_GRUNGE\020\202\003\022\032\n\025SUB_GENRE_HOKKIEN_POP\020\203\003\022" +
      "!\n\034SUB_GENRE_HILL_COUNTRY_BLUES\020\204\003\022\030\n\023SU" +
      "B_GENRE_BREAKBEAT\020\205\003\022\027\n\022SUB_GENRE_AFROBE" +
      "AT\020\206\003\022\030\n\023SUB_GENRE_GREEK_POP\020\207\003\022\030\n\023SUB_G" +
      "ENRE_FREE_JAZZ\020\210\003\022\027\n\022SUB_GENRE_NEO_SOUL\020" +
      "\211\003\022\036\n\031SUB_GENRE_POST_MINIMALISM\020\212\003\022\024\n\017SU" +
      "B_GENRE_E_B_M\020\213\003\022\025\n\020SUB_GENRE_TELUGU\020\214\003\022" +
      "\030\n\023SUB_GENRE_DREAM_POP\020\215\003\022\027\n\022SUB_GENRE_N" +
      "U_METAL\020\216\003\022\025\n\020SUB_GENRE_DANZON\020\217\003\022\024\n\017SUB" +
      "_GENRE_BANDA\020\220\003\022\030\n\023SUB_GENRE_METALCORE\020\221" +
      "\003\022\030\n\023SUB_GENRE_MATH_ROCK\020\222\003\022\025\n\020SUB_GENRE" +
      "_GRUNGE\020\223\003\022\023\n\016SUB_GENRE_TRAP\020\224\003\022\033\n\026SUB_G" +
      "ENRE_ELECTROCLASH\020\225\003\022\031\n\024SUB_GENRE_RIOT_G" +
      "RRRL\020\226\003\022\031\n\024SUB_GENRE_RETRO_SOUL\020\227\003\022\023\n\016SU" +
      "B_GENRE_PALO\020\230\003\022\034\n\027SUB_GENRE_CHICAGO_HOU" +
      "SE\020\231\003\022\030\n\023SUB_GENRE_AFRO_ROCK\020\232\003\022\033\n\026SUB_G" +
      "ENRE_FRENCH_MUSIC\020\233\003\022\037\n\032SUB_GENRE_WEST_C" +
      "OAST_BLUES\020\234\003\022\034\n\027SUB_GENRE_SOUTHERN_ROCK" +
      "\020\235\003\022\032\n\025SUB_GENRE_ARS_ANTIQUA\020\236\003\022\034\n\027SUB_G" +
      "ENRE_LATE_ROMANTIC\020\237\003\022-\n(SUB_GENRE_TRADI" +
      "TIONAL_R__APO__N__APO___B\020\240\003\022\030\n\023SUB_GENR" +
      "E_AFRO_FUNK\020\241\003\022\032\n\025SUB_GENRE_BROKEN_BEAT\020" +
      "\242\003\022\026\n\021SUB_GENRE_HUPANGO\020\243\003\022\031\n\024SUB_GENRE_" +
      "ROCKSTEADY\020\244\003\022\033\n\026SUB_GENRE_21ST_CENTURY\020" +
      "\245\003\022\031\n\024SUB_GENRE_CHIMURENGA\020\246\003\022\036\n\031SUB_GEN" +
      "RE_CLASSIC_HIP_HOP\020\247\003\022\035\n\030SUB_GENRE_HAPPY" +
      "_HARDCORE\020\250\003\022\026\n\021SUB_GENRE_CALYPSO\020\251\003\022\032\n\025",
      "SUB_GENRE_TEXAS_BLUES\020\252\003\022\030\n\023SUB_GENRE_PO" +
      "ST_PUNK\020\253\003\022\027\n\022SUB_GENRE_CONJUNTO\020\254\003\022\032\n\025S" +
      "UB_GENRE_DURANGUENSE\020\255\003\022\036\n\031SUB_GENRE_PAK" +
      "ISTANI_MUSIC\020\256\003\022\035\n\030SUB_GENRE_EARLY_ROMAN" +
      "TIC\020\257\003\022\031\n\024SUB_GENRE_COMMENTARY\020\260\003\022\027\n\022SUB" +
      "_GENRE_DRUMSTEP\020\261\003\022\033\n\026SUB_GENRE_ELECTRO_" +
      "GOTH\020\262\003\022\026\n\021SUB_GENRE_GRUPERA\020\263\003\022\024\n\017SUB_G" +
      "ENRE_CHORO\020\264\003\022\032\n\025SUB_GENRE_GANGSTA_RAP\020\265" +
      "\003\022\033\n\026SUB_GENRE_CONTEMPORARY\020\266\003\022\032\n\025SUB_GE" +
      "NRE_LIGHT_MUSIC\020\267\003\022\032\n\025SUB_GENRE_GREEK_MU" +
      "SIC\020\270\003\022\030\n\023SUB_GENRE_MANDO_POP\020\271\003\022\032\n\025SUB_" +
      "GENRE_CHAMBER_POP\020\272\003\022\031\n\024SUB_GENRE_DOOM_M" +
      "ETAL\020\273\003\022\027\n\022SUB_GENRE_MERENGUE\020\274\003\022\037\n\032SUB_" +
      "GENRE_PSYCHEDELIC_ROCK\020\275\003\022\030\n\023SUB_GENRE_R" +
      "EGGAETON\020\276\003\022\025\n\020SUB_GENRE_P_FUNK\020\277\003\022\030\n\023SU" +
      "B_GENRE_AMERICANA\020\300\003\022\030\n\023SUB_GENRE_CAPE_J" +
      "AZZ\020\301\003\022 \n\033SUB_GENRE_WESTCOAST_HIP_HOP\020\302\003" +
      "\022\025\n\020SUB_GENRE_G_FUNK\020\303\003\022\'\n\"SUB_GENRE_MUS" +
      "IC_OF_THE_PHILIPPINES\020\304\003\022\030\n\023SUB_GENRE_JA" +
      "ZZ_ROCK\020\305\003\022\035\n\030SUB_GENRE_JAVANESE_MUSIC\020\306" +
      "\003\022!\n\034SUB_GENRE_MIDDLE_RENAISSANCE\020\307\003\022#\n\036" +
      "SUB_GENRE_SOUTH_AMERICAN_MUSIC\020\310\003\022\035\n\030SUB" +
      "_GENRE_ELECTRONIC_POP\020\311\003\022\036\n\031SUB_GENRE_NE" +
      "O_PSYCHEDELIA\020\312\003\022\027\n\022SUB_GENRE_ART_ROCK\020\313" +
      "\003\022\032\n\025SUB_GENRE_VOCAL_HOUSE\020\314\003\022\031\n\024SUB_GEN" +
      "RE_PROTO_PUNK\020\315\003\022\033\n\026SUB_GENRE_FILIPINO_P" +
      "OP\020\316\003\022\033\n\026SUB_GENRE_MOTOWN_SOUND\020\317\003\022\033\n\026SU" +
      "B_GENRE_DRILL_N_BASS\020\320\003\022\027\n\022SUB_GENRE_FUT" +
      "URISM\020\321\003\022\025\n\020SUB_GENRE_TECHNO\020\322\003\022\026\n\021SUB_G" +
      "ENRE_RAGTIME\020\323\003\022\037\n\032SUB_GENRE_AVANT_GARDE" +
      "_JAZZ\020\324\003\022\036\n\031SUB_GENRE_STAND_UP_COMEDY\020\325\003" +
      "\022\035\n\030SUB_GENRE_PIEDMONT_BLUES\020\326\003\022\033\n\026SUB_G" +
      "ENRE_HARDCORE_RAP\020\327\003\022\030\n\023SUB_GENRE_BRIT_R" +
      "OCK\020\330\003\022\036\n\031SUB_GENRE_MIDDLE_ROMANTIC\020\331\003\022\033" +
      "\n\026SUB_GENRE_SPEED_GARAGE\020\332\003\022\032\n\025SUB_GENRE" +
      "_CUBAN_MUSIC\020\333\003\022#\n\036SUB_GENRE_NORTH_AMERI" +
      "CAN_MUSIC\020\334\003\022\035\n\030SUB_GENRE_DETROIT_TECHNO" +
      "\020\335\003\022\026\n\021SUB_GENRE_ELECTRO\020\336\003\022\023\n\016SUB_GENRE" +
      "_SOCA\020\337\003\022\031\n\024SUB_GENRE_SPACE_ROCK\020\340\003\022\023\n\016S" +
      "UB_GENRE_ENKA\020\341\003\022\027\n\022SUB_GENRE_POP_PUNK\020\342" +
      "\003*G\n\014SubTitleType\022\032\n\026SUB_TITLE_TYPE_VERS" +
      "ION\020\000\022\033\n\027SUB_TITLE_TYPE_LOCATION\020\001*O\n\013Su" +
      "mmaryType\022\034\n\030SUMMARY_TYPE_CONTRIBUTOR\020\000\022" +
      "\"\n\036SUMMARY_TYPE_RIGHTS_CONTROLLER\020\001*\342\005\n\021" +
      "SupplyChainStatus\022<\n8SUPPLY_CHAIN_STATUS" +
      "_ORDER_PLACED_FOR_RELEASE_DISTRIBUTOR\020\000\022" +
      ":\n6SUPPLY_CHAIN_STATUS_IN_DELIVERY_TO_RE" +
      "LEASE_DISTRIBUTOR\020\001\022?\n;SUPPLY_CHAIN_STAT" +
      "US_PROCESSING_ERROR_AT_RELEASE_DISTRIBUT" +
      "OR\020\002\022;\n7SUPPLY_CHAIN_STATUS_PROCESSING_E" +
      "RROR_AT_RELEASE_CREATOR\020\003\022;\n7SUPPLY_CHAI" +
      "N_STATUS_RELEASE_MADE_AVAILABLE_TO_CONSU" +
      "MERS\020\004\0228\n4SUPPLY_CHAIN_STATUS_DELIVERED_" +
      "TO_RELEASE_DISTRIBUTOR\020\005\022?\n;SUPPLY_CHAIN" +
      "_STATUS_RELEASE_RECEIVED_BY_RELEASE_DIST" +
      "RIBUTOR\020\006\022$\n SUPPLY_CHAIN_STATUS_USER_DE" +
      "FINED\020\007\0226\n2SUPPLY_CHAIN_STATUS_RELEASE_S" +
      "TAGED_FOR_PUBLICATION\020\010\022D\n@SUPPLY_CHAIN_" +
      "STATUS_SUCCESSFULLY_INGESTED_BY_RELEASE_" +
      "DISTRIBUTOR\020\t\022J\nFSUPPLY_CHAIN_STATUS_IN_" +
      "PREPARATION_FOR_DELIVERY_TO_RELEASE_DIST" +
      "RIBUTOR\020\n\022-\n)SUPPLY_CHAIN_STATUS_RELEASE" +
      "_NOT_AVAILABLE\020\013*\335\003\n\005Tempo\022\021\n\rTEMPO_ALLE" +
      "GRO\020\000\022\023\n\017TEMPO_ANDANTINO\020\001\022\023\n\017TEMPO_ADAG" +
      "IETTO\020\002\022\032\n\026TEMPO_ANDANTE_MODERATO\020\003\022\031\n\025T" +
      "EMPO_MARCIA_MODERATO\020\004\022\024\n\020TEMPO_ADAGISSI" +
      "MO\020\005\022\025\n\021TEMPO_LARGHISSIMO\020\006\022\024\n\020TEMPO_ALL" +
      "EGRETTO\020\007\022\021\n\rTEMPO_ANDANTE\020\010\022\017\n\013TEMPO_LE" +
      "NTO\020\t\022\032\n\026TEMPO_ALLEGRO_MODERATO\020\n\022\020\n\014TEM" +
      "PO_PRESTO\020\013\022\020\n\014TEMPO_ADAGIO\020\014\022\025\n\021TEMPO_V" +
      "IVACISSIMO\020\r\022\017\n\013TEMPO_GRAVE\020\016\022\026\n\022TEMPO_A" +
      "LLEGRISSIMO\020\017\022\017\n\013TEMPO_LARGO\020\020\022\022\n\016TEMPO_" +
      "MODERATO\020\021\022\025\n\021TEMPO_PRESTISSIMO\020\022\022\026\n\022TEM" +
      "PO_USER_DEFINED\020\023\022\023\n\017TEMPO_LARGHETTO\020\024\022\020" +
      "\n\014TEMPO_VIVACE\020\025*Q\n\021TerritoryCodeType\022\035\n" +
      "\031TERRITORY_CODE_TYPE_I_S_O\020\000\022\035\n\031TERRITOR" +
      "Y_CODE_TYPE_T_I_S\020\001*\344\001\n)TerritoryCodeTyp" +
      "eIncludingDeprecatedCodes\0228\n4TERRITORY_C" +
      "ODE_TYPE_INCLUDING_DEPRECATED_CODES_I_S_" +
      "O\020\000\022C\n?TERRITORY_CODE_TYPE_INCLUDING_DEP" +
      "RECATED_CODES_DEPRECATED_I_S_O\020\001\0228\n4TERR" +
      "ITORY_CODE_TYPE_INCLUDING_DEPRECATED_COD" +
      "ES_T_I_S\020\002*\356\005\n\rTextCodecType\022\037\n\033TEXT_COD" +
      "EC_TYPE_U_T_F8_TEXT\020\000\022\031\n\025TEXT_CODEC_TYPE" +
      "_R_T_F\020\001\022 \n\034TEXT_CODEC_TYPE_WINDOWS_TEXT" +
      "\020\002\022\035\n\031TEXT_CODEC_TYPE_O_O_X_M_L\020\003\022\"\n\036TEX" +
      "T_CODEC_TYPE_ENHANCED_L_R_C\020\004\022\033\n\027TEXT_CO" +
      "DEC_TYPE_H_T_M_L\020\005\022\035\n\031TEXT_CODEC_TYPE_A_" +
      "S_C_I_I\020\006\022\037\n\033TEXT_CODEC_TYPE_POST_SCRIPT" +
      "\020\007\022&\n\"TEXT_CODEC_TYPE_E_B_U__MINUS___T_T" +
      "\020\010\022\031\n\025TEXT_CODEC_TYPE_P_D_F\020\t\022\"\n\036TEXT_CO" +
      "DEC_TYPE_MICROSOFT_WORD\020\n\022\031\n\025TEXT_CODEC_" +
      "TYPE_S_R_T\020\013\022\033\n\027TEXT_CODEC_TYPE_UNKNOWN\020" +
      "\014\022*\n&TEXT_CODEC_TYPE_ASCII_OR_ISO8859N_T" +
      "EXT\020\r\022\031\n\025TEXT_CODEC_TYPE_X_M_L\020\016\022\031\n\025TEXT" +
      "_CODEC_TYPE_V_T_T\020\017\022\033\n\027TEXT_CODEC_TYPE_E" +
      "_P_U_B\020\020\022\033\n\027TEXT_CODEC_TYPE_T_T_M_L\020\021\022&\n" +
      "\"TEXT_CODEC_TYPE_OPEN_DOCUMENT_TEXT\020\022\022 \n" +
      "\034TEXT_CODEC_TYPE_SIMPLE_L_R_C\020\023\022\035\n\031TEXT_" +
      "CODEC_TYPE_X_H_T_M_L\020\024\022\031\n\025TEXT_CODEC_TYP" +
      "E_L_R_C\020\025\022 \n\034TEXT_CODEC_TYPE_USER_DEFINE" +
      "D\020\026*\343\001\n\010TextType\022\030\n\024TEXT_TYPE_LYRIC_TEXT" +
      "\020\000\022\024\n\020TEXT_TYPE_E_BOOK\020\001\022%\n!TEXT_TYPE_NO" +
      "N_INTERACTIVE_BOOKLET\020\002\022\033\n\027TEXT_TYPE_TEX" +
      "T_DOCUMENT\020\003\022\025\n\021TEXT_TYPE_UNKNOWN\020\004\022\032\n\026T" +
      "EXT_TYPE_USER_DEFINED\020\005\022\025\n\021TEXT_TYPE_CAP" +
      "TION\020\006\022\031\n\025TEXT_TYPE_LINER_NOTES\020\007*g\n\rTex" +
      "tType_ATOM\022\033\n\027TEXT_TYPE__A_T_O_M_HTML\020\000\022" +
      "\033\n\027TEXT_TYPE__A_T_O_M_TEXT\020\001\022\034\n\030TEXT_TYP" +
      "E__A_T_O_M_XHTML\020\002*\300\317\001\n\005Theme\022\017\n\013THEME_W" +
      "ATER\020\000\022\020\n\014THEME_RESCUE\020\001\022\r\n\tTHEME_RAT\020\002\022" +
      "\017\n\013THEME_CRAVE\020\003\022\020\n\014THEME_MEMORY\020\004\022\027\n\023TH" +
      "EME_WEST_VIRGINIA\020\005\022\024\n\020THEME_CAPE_VERDE\020" +
      "\006\022\021\n\rTHEME_ENGLAND\020\007\022\020\n\014THEME_REPEAT\020\010\022\020" +
      "\n\014THEME_GENDER\020\t\022\020\n\014THEME_STRING\020\n\022\021\n\rTH" +
      "EME_FREEDOM\020\013\022\016\n\nTHEME_MILE\020\014\022\016\n\nTHEME_S" +
      "URF\020\r\022\024\n\020THEME_EVERYTHING\020\016\022\016\n\nTHEME_PAS" +
      "T\020\017\022\030\n\024THEME_MENTAL_ILLNESS\020\020\022\020\n\014THEME_S" +
      "TREET\020\021\022\021\n\rTHEME_BREAKUP\020\022\022\030\n\024THEME_CZEC" +
      "HOSLOVAKIA\020\023\022\016\n\nTHEME_JULY\020\024\022\017\n\013THEME_KA" +
      "RMA\020\025\022\021\n\rTHEME_WEEKEND\020\026\022\026\n\022THEME_JESUS_" +
      "CHRIST\020\027\022\017\n\013THEME_SMALL\020\030\022\021\n\rTHEME_HIGHW" +
      "AY\020\031\022\024\n\020THEME_SEYCHELLES\020\032\022\023\n\017THEME_NASH" +
      "VILLE\020\033\022\024\n\020THEME_PATRIOTISM\020\034\022\016\n\nTHEME_P" +
      "ARK\020\035\022\021\n\rTHEME_PROMISE\020\036\022\024\n\020THEME_VIDEO_" +
      "GAME\020\037\022\016\n\nTHEME_GAME\020 \022\024\n\020THEME_EXCELLEN" +
      "CE\020!\022\021\n\rTHEME_FINLAND\020\"\022\016\n\nTHEME_EAST\020#\022" +
      "\031\n\025THEME_LAW_ENFORCEMENT\020$\022\022\n\016THEME_BUIL" +
      "DING\020%\022\016\n\nTHEME_JUNE\020&\022\021\n\rTHEME_BREATHE\020" +
      "\'\022\016\n\nTHEME_INCH\020(\022\022\n\016THEME_AMBITION\020)\022\017\n" +
      "\013THEME_LIBYA\020*\022\025\n\021THEME_SCANDINAVIA\020+\022\021\n" +
      "\rTHEME_PROTEST\020,\022\027\n\023THEME_SINGLE_PARENT\020" +
      "-\022\016\n\nTHEME_MIND\020.\022\016\n\nTHEME_MINE\020/\022\027\n\023THE" +
      "ME_LIECHTENSTEIN\0200\022\023\n\017THEME_BREAKDOWN\0201\022" +
      "\016\n\nTHEME_BOYS\0202\022\020\n\014THEME_JORDAN\0203\022\r\n\tTHE" +
      "ME_GOD\0204\022\016\n\nTHEME_FOOD\0205\022\020\n\014THEME_NEVADA" +
      "\0206\022\017\n\013THEME_BELLS\0207\022\023\n\017THEME_HAPPINESS\0208" +
      "\022\017\n\013THEME_CRASH\0209\022\023\n\017THEME_CAROLINAS\020:\022\017" +
      "\n\013THEME_BELLY\020;\022\026\n\022THEME_INDEPENDENCE\020<\022" +
      "\016\n\nTHEME_JUMP\020=\022\022\n\016THEME_MICHIGAN\020>\022\025\n\021T" +
      "HEME_COMPETITIVE\020?\022\r\n\tTHEME_RED\020@\022\023\n\017THE" +
      "ME_ADORATION\020A\022\022\n\016THEME_DJIBOUTI\020B\022\016\n\nTH" +
      "EME_CUBA\020C\022\023\n\017THEME_PERSEVERE\020D\022\r\n\tTHEME" +
      "_PAD\020E\022\026\n\022THEME_HORSE_RACING\020F\022\021\n\rTHEME_" +
      "SNOWMAN\020G\022\025\n\021THEME_WEST_INDIES\020H\022\016\n\nTHEM" +
      "E_KISS\020I\022\025\n\021THEME_NUCLEAR_WAR\020J\022\021\n\rTHEME" +
      "_EXCITED\020K\022\020\n\014THEME_CYPRUS\020L\022\017\n\013THEME_ST" +
      "ART\020M\022\r\n\tTHEME_PAW\020N\022\022\n\016THEME_CEMETARY\020O" +
      "\022\016\n\nTHEME_BRAG\020P\022\017\n\013THEME_BEATS\020Q\022\030\n\024THE" +
      "ME_MUSIC_BUSINESS\020R\022\021\n\rTHEME_ARMENIA\020S\022\023" +
      "\n\017THEME_DESPERATE\020T\022\020\n\014THEME_WINTER\020U\022\017\n" +
      "\013THEME_TOKYO\020V\022\021\n\rTHEME_BROTHER\020W\022\017\n\013THE" +
      "ME_LIGHT\020X\022\020\n\014THEME_BRAZIL\020Y\022\020\n\014THEME_CA" +
      "MERA\020Z\022\021\n\rTHEME_ECUADOR\020[\022\016\n\nTHEME_EYES\020" +
      "\\\022\020\n\014THEME_BOXING\020]\022\016\n\nTHEME_FOOL\020^\022\022\n\016T" +
      "HEME_ESWATINI\020_\022\025\n\021THEME_IMMORTALITY\020`\022\r" +
      "\n\tTHEME_END\020a\022\020\n\014THEME_UNIQUE\020b\022\025\n\021THEME" +
      "_BROKEN_HOME\020c\022\024\n\020THEME_PHILOSOPHY\020d\022\025\n\021" +
      "THEME_COMPLIMENTS\020e\022\020\n\014THEME_BRIDGE\020f\022\017\n" +
      "\013THEME_WORRY\020g\022\017\n\013THEME_ABOVE\020h\022\022\n\016THEME" +
      "_COSMETIC\020i\022\021\n\rTHEME_VERMONT\020j\022\017\n\013THEME_" +
      "HAITI\020k\022\016\n\nTHEME_HOLE\020l\022\025\n\021THEME_AFGHANI" +
      "STAN\020m\022\016\n\nTHEME_BIRD\020n\022\021\n\rTHEME_ALABAMA\020" +
      "o\022\031\n\025THEME_ONE_NIGHT_STAND\020p\022\021\n\rTHEME_RE" +
      "PTILE\020q\022\025\n\021THEME_COMING_HOME\020r\022\017\n\013THEME_" +
      "MOUTH\020s\022\022\n\016THEME_COLORADO\020t\022\025\n\021THEME_OPP" +
      "ORTUNITY\020u\022\036\n\032THEME_WOMEN_TALKING_TO_MEN" +
      "\020v\022\021\n\rTHEME_PRESENT\020w\022\016\n\nTHEME_HOME\020x\022\022\n" +
      "\016THEME_NOVEMBER\020y\022\024\n\020THEME_ACTIVITIES\020z\022" +
      "\020\n\014THEME_ESCAPE\020{\022\022\n\016THEME_INSECURE\020|\022\017\n" +
      "\013THEME_YOUNG\020}\022\016\n\nTHEME_DOWN\020~\022\"\n\036THEME_" +
      "LOST_THAT_LOVING_FEELING\020\177\022\021\n\014THEME_RETU" +
      "RN\020\200\001\022\021\n\014THEME_HORROR\020\201\001\022\021\n\014THEME_PEOPLE" +
      "\020\202\001\022\017\n\nTHEME_BABY\020\203\001\022\017\n\nTHEME_TALL\020\204\001\022\024\n" +
      "\017THEME_MINNESOTA\020\205\001\022\023\n\016THEME_ROMANTIC\020\206\001" +
      "\022\037\n\032THEME_MEN_TALKING_TO_WOMEN\020\207\001\022\024\n\017THE" +
      "ME_REJECTION\020\210\001\022\021\n\014THEME_CANDLE\020\211\001\022\020\n\013TH" +
      "EME_WHITE\020\212\001\022\023\n\016THEME_FEMINISM\020\213\001\022\020\n\013THE" +
      "ME_MOUSE\020\214\001\022\017\n\nTHEME_ASIA\020\215\001\022\023\n\016THEME_GA" +
      "SOLINE\020\216\001\022\017\n\nTHEME_CLUB\020\217\001\022\027\n\022THEME_COOK" +
      "_ISLANDS\020\220\001\022\023\n\016THEME_CONTEMPT\020\221\001\022\021\n\014THEM" +
      "E_SPIDER\020\222\001\022\021\n\014THEME_INSULT\020\223\001\022\023\n\016THEME_" +
      "CALMNESS\020\224\001\022\021\n\014THEME_WAITER\020\225\001\022\020\n\013THEME_" +
      "BRAIN\020\226\001\022\020\n\013THEME_BENIN\020\227\001\022\017\n\nTHEME_AUNT" +
      "\020\230\001\022\022\n\rTHEME_DOLPHIN\020\231\001\022\r\n\010THEME_GO\020\232\001\022\021" +
      "\n\014THEME_ACCUSE\020\233\001\022\025\n\020THEME_LIGHTHOUSE\020\234\001" +
      "\022\025\n\020THEME_PERFECTION\020\235\001\022\020\n\013THEME_TIBET\020\236" +
      "\001\022\025\n\020THEME_SKATEBOARD\020\237\001\022\023\n\016THEME_OPTIMI" +
      "SM\020\240\001\022\022\n\rTHEME_GRENADA\020\241\001\022\023\n\016THEME_MONGO" +
      "LIA\020\242\001\022\023\n\016THEME_MORALITY\020\243\001\022\022\n\rTHEME_MOR" +
      "OCCO\020\244\001\022\024\n\017THEME_SRI_LANKA\020\245\001\022\021\n\014THEME_S" +
      "LEAZY\020\246\001\022\017\n\nTHEME_BACK\020\247\001\022\032\n\025THEME_SOLOM" +
      "ON_ISLANDS\020\250\001\022\022\n\rTHEME_SHELTER\020\251\001\022\021\n\014THE" +
      "ME_EXCUSE\020\252\001\022\016\n\tTHEME_GUN\020\253\001\022\030\n\023THEME_FR" +
      "ENCH_GUIANA\020\254\001\022\022\n\rTHEME_MONTANA\020\255\001\022\023\n\016TH" +
      "EME_VIOLENCE\020\256\001\022\023\n\016THEME_KENTUCKY\020\257\001\022\020\n\013" +
      "THEME_GHANA\020\260\001\022\016\n\tTHEME_AIR\020\261\001\022\030\n\023THEME_" +
      "NOT_COMMITTED\020\262\001\022\017\n\nTHEME_DEEP\020\263\001\022\032\n\025THE" +
      "ME_POLITICAL_STATE\020\264\001\022\022\n\rTHEME_VOLCANO\020\265" +
      "\001\022\023\n\016THEME_MALDIVES\020\266\001\022\023\n\016THEME_OLYMPICS" +
      "\020\267\001\022\023\n\016THEME_BICYCLES\020\270\001\022\022\n\rTHEME_MEDICA" +
      "L\020\271\001\022\022\n\rTHEME_TRAPPED\020\272\001\022\023\n\016THEME_VIRGIN" +
      "IA\020\273\001\022\016\n\tTHEME_TOY\020\274\001\022\017\n\nTHEME_HIDE\020\275\001\022\022" +
      "\n\rTHEME_JUSTICE\020\276\001\022\023\n\016THEME_DARKNESS\020\277\001\022" +
      "\017\n\nTHEME_FIJI\020\300\001\022\021\n\014THEME_GUINEA\020\301\001\022\024\n\017T" +
      "HEME_IGNORANCE\020\302\001\022\022\n\rTHEME_HIGHEST\020\303\001\022\024\n" +
      "\017THEME_DIRECTION\020\304\001\022\036\n\031THEME_STORYBOOK_C" +
      "HARACTER\020\305\001\022\021\n\014THEME_MOSCOW\020\306\001\022\020\n\013THEME_" +
      "STYLE\020\307\001\022\025\n\020THEME_COMPASSION\020\310\001\022\021\n\014THEME" +
      "_DENVER\020\311\001\022\022\n\rTHEME_NIGERIA\020\312\001\022\035\n\030THEME_" +
      "EUROPEAN_CONTINENT\020\313\001\022\017\n\nTHEME_FOWL\020\314\001\022\022" +
      "\n\rTHEME_BELIEVE\020\315\001\022\026\n\021THEME_CHEERLEADER\020" +
      "\316\001\022\021\n\014THEME_LIVING\020\317\001\022\021\n\014THEME_RHYTHM\020\320\001" +
      "\022\016\n\tTHEME_COW\020\321\001\022\020\n\013THEME_SMART\020\322\001\022\020\n\013TH" +
      "EME_SAMOA\020\323\001\022\016\n\tTHEME_PIG\020\324\001\022\017\n\nTHEME_LO" +
      "CK\020\325\001\022\031\n\024THEME_FORTUNE_TELLER\020\326\001\022\020\n\013THEM" +
      "E_WRONG\020\327\001\022$\n\037THEME_AMUSEMENT_PARKS_AND_" +
      "RIDES\020\330\001\022\022\n\rTHEME_WEDDING\020\331\001\022\023\n\016THEME_GE" +
      "STURES\020\332\001\022\025\n\020THEME_LAST_NIGHT\020\333\001\022\017\n\nTHEM" +
      "E_HOPE\020\334\001\022\022\n\rTHEME_ESTONIA\020\335\001\022\016\n\tTHEME_A" +
      "LL\020\336\001\022\017\n\nTHEME_HORN\020\337\001\022\016\n\tTHEME_NEW\020\340\001\022\023" +
      "\n\016THEME_THOUSAND\020\341\001\022\030\n\023THEME_ENLIGHTENME" +
      "NT\020\342\001\022\022\n\rTHEME_BENELUX\020\343\001\022\031\n\024THEME_SURPR" +
      "ISE_PARTY\020\344\001\022\020\n\013THEME_SHINE\020\345\001\022\026\n\021THEME_" +
      "IVORY_COAST\020\346\001\022\030\n\023THEME_PHYSICAL_PAIN\020\347\001" +
      "\022\021\n\014THEME_MAMMAL\020\350\001\022\025\n\020THEME_MOTIVATION\020" +
      "\351\001\022\024\n\017THEME_EDUCATION\020\352\001\022\033\n\026THEME_DRAFT_" +
      "RESISTANCE\020\353\001\022\016\n\tTHEME_TRY\020\354\001\022\020\n\013THEME_D" +
      "IZZY\020\355\001\022\024\n\017THEME_INVISIBLE\020\356\001\022\020\n\013THEME_T" +
      "ONGA\020\357\001\022\021\n\014THEME_PLAYER\020\360\001\022\023\n\016THEME_VACA" +
      "TION\020\361\001\022\023\n\016THEME_SANTA_FE\020\362\001\022\021\n\014THEME_LO" +
      "NELY\020\363\001\022\020\n\013THEME_APRIL\020\364\001\022\026\n\021THEME_EMBAR" +
      "RASSED\020\365\001\022\022\n\rTHEME_TROUBLE\020\366\001\022\020\n\013THEME_P" +
      "IANO\020\367\001\022\021\n\014THEME_SUNDAY\020\370\001\022\r\n\010THEME_ME\020\371" +
      "\001\022\020\n\013THEME_DEATH\020\372\001\022\017\n\nTHEME_SKIN\020\373\001\022\026\n\021" +
      "THEME_SOUTH_SUDAN\020\374\001\022\026\n\021THEME_SUPERIORIT" +
      "Y\020\375\001\022\023\n\016THEME_GET_LOST\020\376\001\022\021\n\014THEME_TRUCK" +
      "S\020\377\001\022\024\n\017THEME_BUTTERFLY\020\200\002\022\022\n\rTHEME_DAYT" +
      "IME\020\201\002\022\025\n\020THEME_TEMPTATION\020\202\002\022\020\n\013THEME_F" +
      "LIRT\020\203\002\022\016\n\tTHEME_CRY\020\204\002\022\020\n\013THEME_MALTA\020\205" +
      "\002\022\024\n\017THEME_LAS_VEGAS\020\206\002\022\020\n\013THEME_PHONE\020\207" +
      "\002\022\022\n\rTHEME_IRELAND\020\210\002\022\022\n\rTHEME_BEDROOM\020\211" +
      "\002\022\030\n\023THEME_UNDERSTANDING\020\212\002\022\020\n\013THEME_SKA" +
      "TE\020\213\002\022\021\n\014THEME_SAFETY\020\214\002\022\026\n\021THEME_SYNTHE" +
      "SIZER\020\215\002\022\021\n\014THEME_FRANCE\020\216\002\022\027\n\022THEME_WOM" +
      "ENS_NAMES\020\217\002\022\030\n\023THEME_NORTH_AMERICA\020\220\002\022\021" +
      "\n\014THEME_VOODOO\020\221\002\022\020\n\013THEME_COMIC\020\222\002\022\020\n\013T" +
      "HEME_HANDS\020\223\002\022\017\n\nTHEME_HIGH\020\224\002\022\021\n\014THEME_" +
      "ORPHAN\020\225\002\022\017\n\nTHEME_FEEL\020\226\002\022\025\n\020THEME_SENS" +
      "UALITY\020\227\002\022\020\n\013THEME_FAITH\020\230\002\022\021\n\014THEME_STR" +
      "ESS\020\231\002\022\017\n\nTHEME_FEET\020\232\002\022\022\n\rTHEME_FORGIVE" +
      "\020\233\002\022\022\n\rTHEME_ANIMALS\020\234\002\022\020\n\013THEME_WHALE\020\235" +
      "\002\022\017\n\nTHEME_MAIL\020\236\002\022\024\n\017THEME_NICARAGUA\020\237\002" +
      "\022\032\n\025THEME_NORTH_MACEDONIA\020\240\002\022\031\n\024THEME_DI" +
      "SAPPOINTMENT\020\241\002\022\017\n\nTHEME_FIND\020\242\002\022\020\n\013THEM" +
      "E_SHEEP\020\243\002\022\021\n\014THEME_MEXICO\020\244\002\022\021\n\014THEME_D" +
      "ESERT\020\245\002\022\023\n\016THEME_HANDSOME\020\246\002\022\022\n\rTHEME_H" +
      "OUSTON\020\247\002\022\021\n\014THEME_REGRET\020\250\002\022\023\n\016THEME_RA" +
      "P_GAME\020\251\002\022\017\n\nTHEME_BALI\020\252\002\022\022\n\rTHEME_INDI" +
      "ANA\020\253\002\022\020\n\013THEME_WALES\020\254\002\022\025\n\020THEME_CINCIN" +
      "NATI\020\255\002\022\021\n\014THEME_BURDEN\020\256\002\022\024\n\017THEME_HILL" +
      "BILLY\020\257\002\022\036\n\031THEME_MULTIPLE_BODY_PARTS\020\260\002" +
      "\022\022\n\rTHEME_BAHAMAS\020\261\002\022\033\n\026THEME_FRENCH_CAR" +
      "IBBEAN\020\262\002\022\021\n\014THEME_FOLLOW\020\263\002\022\021\n\014THEME_UN" +
      "FAIR\020\264\002\022\017\n\nTHEME_MALI\020\265\002\022\021\n\014THEME_PANAMA" +
      "\020\266\002\022\020\n\013THEME_ACTOR\020\267\002\022\020\n\013THEME_SWEET\020\270\002\022" +
      "\017\n\nTHEME_TAXI\020\271\002\022\023\n\016THEME_MAGICIAN\020\272\002\022\017\n" +
      "\nTHEME_BEST\020\273\002\022\017\n\nTHEME_THEM\020\274\002\022\027\n\022THEME" +
      "_USER_DEFINED\020\275\002\022\022\n\rTHEME_DONT_GO\020\276\002\022\017\n\n" +
      "THEME_HEAD\020\277\002\022\026\n\021THEME_CANT_RESIST\020\300\002\022\020\n" +
      "\013THEME_SHAKE\020\301\002\022\021\n\014THEME_AFRICA\020\302\002\022\021\n\014TH" +
      "EME_SPRING\020\303\002\022\035\n\030THEME_COWBOY_AND_COWGIR" +
      "L\020\304\002\022\026\n\021THEME_ISLE_OF_MAN\020\305\002\022\023\n\016THEME_PR" +
      "OBLEMS\020\306\002\022 \n\033THEME_WE_SHOULD_BE_TOGETHER" +
      "\020\307\002\022\022\n\rTHEME_NAMIBIA\020\310\002\022\017\n\nTHEME_KEYS\020\311\002" +
      "\022\022\n\rTHEME_CHARITY\020\312\002\022\026\n\021THEME_NEW_ZEALAN" +
      "D\020\313\002\022\022\n\rTHEME_SLAVERY\020\314\002\022\016\n\tTHEME_ART\020\315\002" +
      "\022\024\n\017THEME_WATERFALL\020\316\002\022\021\n\014THEME_CIRCUS\020\317" +
      "\002\022 \n\033THEME_SAINT_KITTS_AND_NEVIS\020\320\002\022\025\n\020T" +
      "HEME_MADAGASCAR\020\321\002\022\026\n\021THEME_POSSIBILITY\020" +
      "\322\002\022\024\n\017THEME_BOARDWALK\020\323\002\022\020\n\013THEME_ASHES\020" +
      "\324\002\022\025\n\020THEME_WASHINGTON\020\325\002\022\020\n\013THEME_UNION" +
      "\020\326\002\022\021\n\014THEME_SWEDEN\020\327\002\022\022\n\rTHEME_ROYALTY\020" +
      "\330\002\022\022\n\rTHEME_FINGERS\020\331\002\022\017\n\nTHEME_STAR\020\332\002\022" +
      "\021\n\014THEME_MALAWI\020\333\002\022\023\n\016THEME_SHOULDER\020\334\002\022" +
      "\022\n\rTHEME_ANDORRA\020\335\002\022\024\n\017THEME_VALENTINE\020\336" +
      "\002\022\021\n\014THEME_POLAND\020\337\002\022\017\n\nTHEME_FISH\020\340\002\022\025\n" +
      "\020THEME_IN_TROUBLE\020\341\002\022\017\n\nTHEME_WOLF\020\342\002\022\017\n" +
      "\nTHEME_FACE\020\343\002\022\020\n\013THEME_ANGST\020\344\002\022\021\n\014THEM" +
      "E_DALLAS\020\345\002\022\021\n\014THEME_HAVANA\020\346\002\022\022\n\rTHEME_" +
      "TUNISIA\020\347\002\022\024\n\017THEME_WISCONSIN\020\350\002\022\021\n\014THEM" +
      "E_NATURE\020\351\002\022\021\n\014THEME_WINDOW\020\352\002\022\021\n\014THEME_" +
      "MOTION\020\353\002\022\025\n\020THEME_COSTA_RICA\020\354\002\022\024\n\017THEM" +
      "E_AFFECTION\020\355\002\022\025\n\020THEME_CONNECTION\020\356\002\022\023\n" +
      "\016THEME_RELIGION\020\357\002\022\022\n\rTHEME_SEDUCED\020\360\002\022\016" +
      "\n\tTHEME_RUN\020\361\002\022\031\n\024THEME_PHARMACEUTICAL\020\362" +
      "\002\022\031\n\024THEME_EUROPEAN_UNION\020\363\002\022\021\n\014THEME_TU" +
      "VALU\020\364\002\022\022\n\rTHEME_TRAGEDY\020\365\002\022\033\n\026THEME_SHO" +
      "ULD_HAVE_SAID\020\366\002\022\025\n\020THEME_BIRMINGHAM\020\367\002\022" +
      "\027\n\022THEME_CIVIL_RIGHTS\020\370\002\022\020\n\013THEME_FEVER\020" +
      "\371\002\022\021\n\014THEME_PRETTY\020\372\002\022\024\n\017THEME_SUPERHERO" +
      "\020\373\002\022\025\n\020THEME_RESTAURANT\020\374\002\022\020\n\013THEME_SLEE" +
      "P\020\375\002\022\021\n\014THEME_CHOOSE\020\376\002\022\020\n\013THEME_MUSIC\020\377" +
      "\002\022\017\n\nTHEME_FIRE\020\200\003\022\032\n\025THEME_CENTRAL_AMER" +
      "ICA\020\201\003\022\022\n\rTHEME_HEALING\020\202\003\022\020\n\013THEME_LEAR" +
      "N\020\203\003\022\016\n\tTHEME_HAT\020\204\003\022\022\n\rTHEME_VILLAIN\020\205\003" +
      "\022!\n\034THEME_WOMEN_TALKING_TO_WOMEN\020\206\003\022\024\n\017T" +
      "HEME_GRATITUDE\020\207\003\022\021\n\014THEME_TONGUE\020\210\003\022\022\n\r" +
      "THEME_DETROIT\020\211\003\022\023\n\016THEME_ANYTHING\020\212\003\022\022\n" +
      "\rTHEME_MORNING\020\213\003\022\017\n\nTHEME_SING\020\214\003\022\022\n\rTH" +
      "EME_ALCOHOL\020\215\003\022\021\n\014THEME_PARADE\020\216\003\022\023\n\016THE" +
      "ME_IN_FRONT\020\217\003\022\020\n\013THEME_BEACH\020\220\003\022\024\n\017THEM" +
      "E_CONTAINER\020\221\003\022\025\n\020THEME_CONFIDENCE\020\222\003\022\024\n" +
      "\017THEME_NOSTALGIA\020\223\003\022\024\n\017THEME_POLYNESIA\020\224" +
      "\003\022\021\n\014THEME_SEARCH\020\225\003\022\023\n\016THEME_STUBBORN\020\226" +
      "\003\022\020\n\013THEME_DRIVE\020\227\003\022\022\n\rTHEME_OUTDOOR\020\230\003\022" +
      "\022\n\rTHEME_ALGERIA\020\231\003\022\017\n\nTHEME_LOOK\020\232\003\022\023\n\016" +
      "THEME_SLOVENIA\020\233\003\022\023\n\016THEME_BEVERAGE\020\234\003\022\020" +
      "\n\013THEME_TRUTH\020\235\003\022\017\n\nTHEME_THIN\020\236\003\022\023\n\016THE" +
      "ME_COLOMBIA\020\237\003\022\021\n\014THEME_HEAVEN\020\240\003\022\026\n\021THE" +
      "ME_GAS_STATION\020\241\003\022\023\n\016THEME_CLOTHING\020\242\003\022\022" +
      "\n\rTHEME_MOLDOVA\020\243\003\022\017\n\nTHEME_FREE\020\244\003\022\027\n\022T" +
      "HEME_PENNSYLVANIA\020\245\003\022\027\n\022THEME_GANGSTA_LI" +
      "FE\020\246\003\022\020\n\013THEME_TEXAS\020\247\003\022\022\n\rTHEME_JEALOUS" +
      "\020\250\003\022\025\n\020THEME_NEW_MEXICO\020\251\003\022\016\n\tTHEME_NOW\020" +
      "\252\003\022\023\n\016THEME_HONDURAS\020\253\003\022\r\n\010THEME_UP\020\254\003\022\020" +
      "\n\013THEME_NAURU\020\255\003\022\r\n\010THEME_US\020\256\003\022\021\n\014THEME" +
      "_BEAUTY\020\257\003\022\020\n\013THEME_BROWN\020\260\003\022\023\n\016THEME_GA" +
      "MBLING\020\261\003\022\024\n\017THEME_CHRISTMAS\020\262\003\022\020\n\013THEME" +
      "_GREED\020\263\003\022\024\n\017THEME_SEPTEMBER\020\264\003\022\024\n\017THEME" +
      "_CRITICIZE\020\265\003\022\021\n\014THEME_PARENT\020\266\003\022\022\n\rTHEM" +
      "E_FASCISM\020\267\003\022\017\n\nTHEME_HIPS\020\270\003\022\023\n\016THEME_S" +
      "HOW_BIZ\020\271\003\022\024\n\017THEME_FORBIDDEN\020\272\003\022\020\n\013THEM" +
      "E_LEAVE\020\273\003\022\016\n\tTHEME_WAR\020\274\003\022\030\n\023THEME_SPEC" +
      "IFIC_TIME\020\275\003\022\025\n\020THEME_BASKETBALL\020\276\003\022\022\n\rT" +
      "HEME_FISHING\020\277\003\022\024\n\017THEME_SITUATION\020\300\003\022\030\n" +
      "\023THEME_NEW_HAMPSHIRE\020\301\003\022\034\n\027THEME_PRODUCT" +
      "_AND_BRAND\020\302\003\022\026\n\021THEME_NETHERLANDS\020\303\003\022\025\n" +
      "\020THEME_EARTHQUAKE\020\304\003\022\023\n\016THEME_MOUNTAIN\020\305" +
      "\003\022\030\n\023THEME_BACK_TOGETHER\020\306\003\022\022\n\rTHEME_QUA" +
      "LITY\020\307\003\022\021\n\014THEME_ALASKA\020\310\003\022\023\n\016THEME_SHOP" +
      "PING\020\311\003\022\022\n\rTHEME_TUESDAY\020\312\003\022\020\n\013THEME_BLA" +
      "ME\020\313\003\022\026\n\021THEME_PUERTO_RICO\020\314\003\022\017\n\nTHEME_B" +
      "ASS\020\315\003\022\024\n\017THEME_OBSESSION\020\316\003\022\021\n\014THEME_BH" +
      "UTAN\020\317\003\022\020\n\013THEME_TRUST\020\320\003\022\020\n\013THEME_MIAMI" +
      "\020\321\003\022\024\n\017THEME_CONTINENT\020\322\003\022\024\n\017THEME_ADDIC" +
      "TION\020\323\003\022\024\n\017THEME_LIGHTNING\020\324\003\022\016\n\tTHEME_F" +
      "AR\020\325\003\022\016\n\tTHEME_FAT\020\326\003\022\023\n\016THEME_ZIMBABWE\020" +
      "\327\003\022\020\n\013THEME_GREEN\020\330\003\022\025\n\020THEME_MONTENEGRO" +
      "\020\331\003\022\017\n\nTHEME_BARS\020\332\003\022\021\n\014THEME_PRAYER\020\333\003\022" +
      "\023\n\016THEME_MISTAKES\020\334\003\022\030\n\023THEME_BIRTH_CONT" +
      "ROL\020\335\003\022\022\n\rTHEME_SUPPORT\020\336\003\022\021\n\014THEME_BEHI" +
      "ND\020\337\003\022#\n\036THEME_CENTRAL_AFRICAN_REPUBLIC\020" +
      "\340\003\022\026\n\021THEME_SEGREGATION\020\341\003\022\020\n\013THEME_SHAR" +
      "K\020\342\003\022\026\n\021THEME_CELEBRATION\020\343\003\022\024\n\017THEME_FU" +
      "RNITURE\020\344\003\022\017\n\nTHEME_UTAH\020\345\003\022\020\n\013THEME_BLE" +
      "SS\020\346\003\022\024\n\017THEME_GOODNIGHT\020\347\003\022\021\n\014THEME_GRE" +
      "ECE\020\350\003\022\022\n\rTHEME_PRIVACY\020\351\003\022\023\n\016THEME_SHOU" +
      "TING\020\352\003\022\027\n\022THEME_SOUTH_AFRICA\020\353\003\022\017\n\nTHEM" +
      "E_WIFE\020\354\003\022\022\n\rTHEME_SPECIAL\020\355\003\022\017\n\nTHEME_W" +
      "ORK\020\356\003\022\023\n\016THEME_COMPUTER\020\357\003\022\021\n\014THEME_GUY" +
      "ANA\020\360\003\022\021\n\014THEME_PLANET\020\361\003\022\022\n\rTHEME_NEW_D" +
      "AY\020\362\003\022\022\n\rTHEME_FAILURE\020\363\003\022\020\n\013THEME_WOMEN" +
      "\020\364\003\022\020\n\013THEME_UNCLE\020\365\003\022\024\n\017THEME_AFTERNOON" +
      "\020\366\003\022\017\n\nTHEME_COLD\020\367\003\022\023\n\016THEME_SAVANNAH\020\370" +
      "\003\022\022\n\rTHEME_UKRAINE\020\371\003\022\035\n\030THEME_MEN_TALKI" +
      "NG_TO_MEN\020\372\003\022\020\n\013THEME_HOUSE\020\373\003\022\017\n\nTHEME_" +
      "LIES\020\374\003\022\024\n\017THEME_GOOD_LIFE\020\375\003\022\022\n\rTHEME_T" +
      "OBACCO\020\376\003\022\016\n\tTHEME_LOW\020\377\003\022\017\n\nTHEME_IDEA\020" +
      "\200\004\022\024\n\017THEME_BEGINNING\020\201\004\022\026\n\021THEME_CONNEC" +
      "TICUT\020\202\004\022\020\n\013THEME_CRIME\020\203\004\022\022\n\rTHEME_COUN" +
      "TRY\020\204\004\022\022\n\rTHEME_BERMUDA\020\205\004\022\021\n\014THEME_ALWA" +
      "YS\020\206\004\022\022\n\rTHEME_JAMAICA\020\207\004\022\027\n\022THEME_TURKM" +
      "ENISTAN\020\210\004\022\020\n\013THEME_WRITE\020\211\004\022\023\n\016THEME_DE" +
      "FEATED\020\212\004\022\017\n\nTHEME_HELP\020\213\004\022\021\n\014THEME_COUP" +
      "LE\020\214\004\022\017\n\nTHEME_COOL\020\215\004\022\023\n\016THEME_THAILAND" +
      "\020\216\004\022\024\n\017THEME_LECTURING\020\217\004\022\022\n\rTHEME_FRAGI" +
      "LE\020\220\004\022\017\n\nTHEME_FAKE\020\221\004\022\024\n\017THEME_AMSTERDA" +
      "M\020\222\004\022\027\n\022THEME_SAUDI_ARABIA\020\223\004\022\022\n\rTHEME_M" +
      "ONSTER\020\224\004\022\030\n\023THEME_NEW_YORK_CITY\020\225\004\022\020\n\013T" +
      "HEME_WITCH\020\226\004\022\021\n\014THEME_KUWAIT\020\227\004\022\027\n\022THEM" +
      "E_BURKINA_FASO\020\230\004\022\022\n\rTHEME_CROATIA\020\231\004\022\017\n" +
      "\nTHEME_LOST\020\232\004\022\021\n\014THEME_GUITAR\020\233\004\022\020\n\013THE" +
      "ME_MOVIE\020\234\004\022\021\n\014THEME_HIPPIE\020\235\004\022\017\n\nTHEME_" +
      "FAIR\020\236\004\022\026\n\021THEME_EL_SALVADOR\020\237\004\022\017\n\nTHEME" +
      "_ROAD\020\240\004\022\017\n\nTHEME_LOSS\020\241\004\022\030\n\023THEME_SEARC" +
      "HING_FOR\020\242\004\022\027\n\022THEME_RHODE_ISLAND\020\243\004\022\020\n\013" +
      "THEME_FOUND\020\244\004\022\024\n\017THEME_PREGNANCY\020\245\004\022\022\n\r" +
      "THEME_SILENCE\020\246\004\022\023\n\016THEME_FEELINGS\020\247\004\022\035\n" +
      "\030THEME_CAPITAL_PUNISHMENT\020\250\004\022\021\n\014THEME_FA" +
      "MILY\020\251\004\022\024\n\017THEME_HALLOWEEN\020\252\004\022\017\n\nTHEME_N" +
      "ONE\020\253\004\022\016\n\tTHEME_DAY\020\254\004\022\017\n\nTHEME_HELL\020\255\004\022" +
      "\024\n\017THEME_BEAUTIFUL\020\256\004\022\025\n\020THEME_FALLING_I" +
      "N\020\257\004\022\025\n\020THEME_UNFAITHFUL\020\260\004\022\023\n\016THEME_BEI" +
      "NG_IN\020\261\004\022\020\n\013THEME_DRINK\020\262\004\022\024\n\017THEME_KNOW" +
      "LEDGE\020\263\004\022\020\n\013THEME_SPORT\020\264\004\022\017\n\nTHEME_FAME" +
      "\020\265\004\022\022\n\rTHEME_AUSTRIA\020\266\004\022\023\n\016THEME_EXERCIS" +
      "E\020\267\004\022\025\n\020THEME_TECHNOLOGY\020\270\004\022\021\n\014THEME_MON" +
      "ACO\020\271\004\022\024\n\017THEME_INNOCENCE\020\272\004\022\017\n\nTHEME_UG" +
      "LY\020\273\004\022\020\n\013THEME_CANDY\020\274\004\022\022\n\rTHEME_MEMPHIS",
      "\020\275\004\022\023\n\016THEME_HOSPITAL\020\276\004\022\021\n\014THEME_BELIEF" +
      "\020\277\004\022\026\n\021THEME_KANSAS_CITY\020\300\004\022\017\n\nTHEME_ROC" +
      "K\020\301\004\022\021\n\014THEME_AUTUMN\020\302\004\022\017\n\nTHEME_NOON\020\303\004" +
      "\022\024\n\017THEME_YESTERDAY\020\304\004\022\023\n\016THEME_DAUGHTER" +
      "\020\305\004\022\030\n\023THEME_SOUTH_AMERICA\020\306\004\022\020\n\013THEME_Y" +
      "OUTH\020\307\004\022\025\n\020THEME_PERCUSSION\020\310\004\022\025\n\020THEME_" +
      "MANIPULATE\020\311\004\022\030\n\023THEME_MEDELL__II__N\020\312\004\022" +
      "\027\n\022THEME_SIERRA_LEONE\020\313\004\022\022\n\rTHEME_ALBANI" +
      "A\020\314\004\022\021\n\014THEME_AUGUST\020\315\004\022\020\n\013THEME_UNITY\020\316" +
      "\004\022\032\n\025THEME_PACIFIC_ISLANDS\020\317\004\022\017\n\nTHEME_L" +
      "OVE\020\320\004\022\025\n\020THEME_ENLISTMENT\020\321\004\022\016\n\tTHEME_S" +
      "AD\020\322\004\022\022\n\rTHEME_THEATRE\020\323\004\022\017\n\nTHEME_FALL\020" +
      "\324\004\022\033\n\026THEME_MARSHALL_ISLANDS\020\325\004\022\023\n\016THEME" +
      "_ETHIOPIA\020\326\004\022\026\n\021THEME_TEMPERATURE\020\327\004\022\017\n\n" +
      "THEME_WILD\020\330\004\022\025\n\020THEME_MENS_NAMES\020\331\004\022\025\n\020" +
      "THEME_LOSING_YOU\020\332\004\022\021\n\014THEME_FORGET\020\333\004\022\034" +
      "\n\027THEME_POWER_AND_CONTROL\020\334\004\022\020\n\013THEME_EA" +
      "RTH\020\335\004\022\023\n\016THEME_WASTEFUL\020\336\004\022\027\n\022THEME_TOG" +
      "ETHERNESS\020\337\004\022\023\n\016THEME_THREATEN\020\340\004\022\023\n\016THE" +
      "ME_PAKISTAN\020\341\004\022\023\n\016THEME_DINOSAUR\020\342\004\022\022\n\rT" +
      "HEME_ATLANTA\020\343\004\022\021\n\014THEME_GAMBIA\020\344\004\022\020\n\013TH" +
      "EME_QATAR\020\345\004\022\024\n\017THEME_CROCODILE\020\346\004\022\021\n\014TH" +
      "EME_DANGER\020\347\004\022\021\n\014THEME_SERBIA\020\350\004\022\017\n\nTHEM" +
      "E_DRUG\020\351\004\022\022\n\rTHEME_JUKEBOX\020\352\004\022\021\n\014THEME_F" +
      "LOWER\020\353\004\022\021\n\014THEME_ZODIAC\020\354\004\022\016\n\tTHEME_BAD" +
      "\020\355\004\022\017\n\nTHEME_FROG\020\356\004\022\020\n\013THEME_SHAME\020\357\004\022\021" +
      "\n\014THEME_RWANDA\020\360\004\022\023\n\016THEME_ETERNITY\020\361\004\022\021" +
      "\n\014THEME_SPIRIT\020\362\004\022\017\n\nTHEME_DATE\020\363\004\022\025\n\020TH" +
      "EME_BANGLADESH\020\364\004\022\020\n\013THEME_TODAY\020\365\004\022\023\n\016T" +
      "HEME_BARBADOS\020\366\004\022\016\n\tTHEME_FIX\020\367\004\022\030\n\023THEM" +
      "E_DONT_LEAVE_ME\020\370\004\022\022\n\rTHEME_DENMARK\020\371\004\022\023" +
      "\n\016THEME_POLITICS\020\372\004\022\016\n\tTHEME_BAY\020\373\004\022\020\n\013T" +
      "HEME_FIGHT\020\374\004\022\026\n\021THEME_GRANDPARENT\020\375\004\022\016\n" +
      "\tTHEME_YOU\020\376\004\022\024\n\017THEME_INTEGRITY\020\377\004\022!\n\034T" +
      "HEME_EUROPEAN_ECONOMIC_AREA\020\200\005\022\020\n\013THEME_" +
      "HEART\020\201\005\022\020\n\013THEME_STORM\020\202\005\022\017\n\nTHEME_WIND" +
      "\020\203\005\022\017\n\nTHEME_LEFT\020\204\005\022\031\n\024THEME_SOCIAL_OUT" +
      "CAST\020\205\005\022\023\n\016THEME_CAMBODIA\020\206\005\022\017\n\nTHEME_ST" +
      "OP\020\207\005\022\020\n\013THEME_IDEAL\020\210\005\022\017\n\nTHEME_SIZE\020\211\005" +
      "\022\020\n\013THEME_SWAMP\020\212\005\022\022\n\rTHEME_JEWELRY\020\213\005\022\020" +
      "\n\013THEME_BLACK\020\214\005\022\017\n\nTHEME_PONY\020\215\005\022\023\n\016THE" +
      "ME_PARAGUAY\020\216\005\022\022\n\rTHEME_BALKANS\020\217\005\022\022\n\rTH" +
      "EME_SUCCESS\020\220\005\022\021\n\014THEME_WEAPON\020\221\005\022\020\n\013THE" +
      "ME_SYRIA\020\222\005\022\020\n\013THEME_IDEAS\020\223\005\022\020\n\013THEME_D" +
      "REAM\020\224\005\022\025\n\020THEME_GROW_OLDER\020\225\005\022\024\n\017THEME_" +
      "CARD_GAME\020\226\005\022\017\n\nTHEME_DAWN\020\227\005\022\020\n\013THEME_R" +
      "ANCH\020\230\005\022\017\n\nTHEME_LION\020\231\005\022\023\n\016THEME_CALL_O" +
      "UT\020\232\005\022\017\n\nTHEME_HAIR\020\233\005\022\020\n\013THEME_ANGER\020\234\005" +
      "\022\033\n\026THEME_FRENCH_POLYNESIA\020\235\005\022\022\n\rTHEME_V" +
      "ATICAN\020\236\005\022\020\n\013THEME_RODEO\020\237\005\022\020\n\013THEME_ANG" +
      "EL\020\240\005\022\026\n\021THEME_ANNIVERSARY\020\241\005\022\023\n\016THEME_W" +
      "OODWIND\020\242\005\022\021\n\014THEME_METHOD\020\243\005\022\025\n\020THEME_C" +
      "ALIFORNIA\020\244\005\022\016\n\tTHEME_HOT\020\245\005\022\022\n\rTHEME_BA" +
      "HRAIN\020\246\005\022\016\n\tTHEME_SEA\020\247\005\022\020\n\013THEME_CHASE\020" +
      "\250\005\022\024\n\017THEME_HOLLYWOOD\020\251\005\022\025\n\020THEME_AMBIVA" +
      "LENT\020\252\005\022\022\n\rTHEME_HONESTY\020\253\005\022\026\n\021THEME_MIS" +
      "SISSIPPI\020\254\005\022\020\n\013THEME_DEVIL\020\255\005\022\017\n\nTHEME_S" +
      "AIL\020\256\005\022\022\n\rTHEME_COMOROS\020\257\005\022\017\n\nTHEME_HERO" +
      "\020\260\005\022\024\n\017THEME_CITY_LIFE\020\261\005\022\024\n\017THEME_POLIT" +
      "ICAL\020\262\005\022\030\n\023THEME_CANT_GET_OVER\020\263\005\022\032\n\025THE" +
      "ME_STRING_AND_ROPE\020\264\005\022\021\n\014THEME_FABRIC\020\265\005" +
      "\022\023\n\016THEME_MARYLAND\020\266\005\022\017\n\nTHEME_WEEK\020\267\005\022\025" +
      "\n\020THEME_HOLDING_ON\020\270\005\022\026\n\021THEME_ADOLESCEN" +
      "CE\020\271\005\022\022\n\rTHEME_ERITREA\020\272\005\022\017\n\nTHEME_LIPS\020" +
      "\273\005\022\023\n\016THEME_OKLAHOMA\020\274\005\022\023\n\016THEME_CONFUSE" +
      "D\020\275\005\022\023\n\016THEME_ARKANSAS\020\276\005\022\020\n\013THEME_TIGER" +
      "\020\277\005\022\022\n\rTHEME_REUNITE\020\300\005\022\016\n\tTHEME_FLY\020\301\005\022" +
      "\022\n\rTHEME_OCTOBER\020\302\005\022\020\n\013THEME_SOBER\020\303\005\022\022\n" +
      "\rTHEME_STRANGE\020\304\005\022\020\n\013THEME_OCEAN\020\305\005\022\023\n\016T" +
      "HEME_NEW_YORK\020\306\005\022\021\n\014THEME_BOUNCE\020\307\005\022\017\n\nT" +
      "HEME_NECK\020\310\005\022\023\n\016THEME_BULGARIA\020\311\005\022\021\n\014THE" +
      "ME_SEASON\020\312\005\022\017\n\nTHEME_FAST\020\313\005\022\017\n\nTHEME_L" +
      "EGS\020\314\005\022\016\n\tTHEME_BEG\020\315\005\022\017\n\nTHEME_BLUE\020\316\005\022" +
      " \n\033THEME_REPUBLIC_OF_THE_CONGO\020\317\005\022\022\n\rTHE" +
      "ME_COURAGE\020\320\005\022\017\n\nTHEME_NEAR\020\321\005\022\020\n\013THEME_" +
      "KENYA\020\322\005\022\025\n\020THEME_TELEVISION\020\323\005\022\023\n\016THEME" +
      "_THURSDAY\020\324\005\022\022\n\rTHEME_HOLIDAY\020\325\005\022\026\n\021THEM" +
      "E_MOTORCYCLES\020\326\005\022\024\n\017THEME_BALLERINA\020\327\005\022\017" +
      "\n\nTHEME_FARM\020\330\005\022\030\n\023THEME_INDIVIDUALITY\020\331" +
      "\005\022\020\n\013THEME_DANCE\020\332\005\022\020\n\013THEME_DRIFT\020\333\005\022\021\n" +
      "\014THEME_ISRAEL\020\334\005\022\021\n\014THEME_BETRAY\020\335\005\022\021\n\014T" +
      "HEME_FATHER\020\336\005\022\020\n\013THEME_PLACE\020\337\005\022\025\n\020THEM" +
      "E_TAJIKISTAN\020\340\005\022\025\n\020THEME_REVOLUTION\020\341\005\022\024" +
      "\n\017THEME_ASTRONAUT\020\342\005\022\022\n\rTHEME_REVOLVE\020\343\005" +
      "\022\021\n\014THEME_MONDAY\020\344\005\022\022\n\rTHEME_WYOMING\020\345\005\022" +
      "\032\n\025THEME_IDENTITY_CRISIS\020\346\005\022\021\n\014THEME_TAT" +
      "TOO\020\347\005\022\023\n\016THEME_MALAYSIA\020\350\005\022\030\n\023THEME_BOD" +
      "Y_LANGUAGE\020\351\005\022\017\n\nTHEME_NEED\020\352\005\022\023\n\016THEME_" +
      "PLATONIC\020\353\005\022\017\n\nTHEME_ROME\020\354\005\022\020\n\013THEME_HE" +
      "LLO\020\355\005\022&\n!THEME_EUROPEAN_ECONOMIC_COMMUN" +
      "ITY\020\356\005\022\021\n\014THEME_FRIDAY\020\357\005\022\020\n\013THEME_ENEMY" +
      "\020\360\005\022\031\n\024THEME_BIRTHDAY_PARTY\020\361\005\022\024\n\017THEME_" +
      "HONEYMOON\020\362\005\022\022\n\rTHEME_INSIGHT\020\363\005\022\020\n\013THEM" +
      "E_NORTH\020\364\005\022\020\n\013THEME_TEACH\020\365\005\022\021\n\014THEME_DE" +
      "FEAT\020\366\005\022\021\n\014THEME_LOVELY\020\367\005\022\021\n\014THEME_DATI" +
      "NG\020\370\005\022\023\n\016THEME_PROPHECY\020\371\005\022\017\n\nTHEME_SAME" +
      "\020\372\005\022\017\n\nTHEME_GOLD\020\373\005\022\023\n\016THEME_WIZARDRY\020\374" +
      "\005\022\022\n\rTHEME_TALKING\020\375\005\022\017\n\nTHEME_GOLF\020\376\005\022\023" +
      "\n\016THEME_ATTITUDE\020\377\005\022\016\n\tTHEME_SHY\020\200\006\022\020\n\013T" +
      "HEME_GYPSY\020\201\006\022\020\n\013THEME_COLOR\020\202\006\022\022\n\rTHEME" +
      "_HUNDRED\020\203\006\022\025\n\020THEME_SPACED_OUT\020\204\006\022\017\n\nTH" +
      "EME_FATE\020\205\006\022\016\n\tTHEME_FOX\020\206\006\022\024\n\017THEME_EMP" +
      "OWERED\020\207\006\022\036\n\031THEME_BATTLE_OF_THE_SEXES\020\210" +
      "\006\022\021\n\014THEME_SILVER\020\211\006\022\024\n\017THEME_ANTI_DRUG\020" +
      "\212\006\022\023\n\016THEME_ELEPHANT\020\213\006\022\020\n\013THEME_STICK\020\214" +
      "\006\022\022\n\rTHEME_OBJECTS\020\215\006\022\020\n\013THEME_ITALY\020\216\006\022" +
      "\016\n\tTHEME_SIN\020\217\006\022\017\n\nTHEME_TURN\020\220\006\022\025\n\020THEM" +
      "E_COMMITMENT\020\221\006\022\022\n\rTHEME_LOYALTY\020\222\006\022\025\n\020T" +
      "HEME_MARDI_GRAS\020\223\006\022\016\n\tTHEME_SIT\020\224\006\022\026\n\021TH" +
      "EME_MEASUREMENT\020\225\006\022\021\n\014THEME_HARBOR\020\226\006\022\024\n" +
      "\017THEME_TRADITION\020\227\006\022\023\n\016THEME_SCOTLAND\020\230\006" +
      "\022\021\n\014THEME_BLONDE\020\231\006\022\023\n\016THEME_PORPOISE\020\232\006" +
      "\022\020\n\013THEME_MONEY\020\233\006\022+\n&THEME_SAINT_VINCEN" +
      "T_AND_THE_GRENADINES\020\234\006\022\021\n\014THEME_SCHOOL\020" +
      "\235\006\022\021\n\014THEME_NUMBER\020\236\006\022\022\n\rTHEME_RAINBOW\020\237" +
      "\006\022\023\n\016THEME_CHILDREN\020\240\006\022\022\n\rTHEME_MILLION\020" +
      "\241\006\022\025\n\020THEME_KYRGYZSTAN\020\242\006\022\016\n\tTHEME_BIG\020\243" +
      "\006\022\020\n\013THEME_SPEED\020\244\006\022\021\n\014THEME_GARDEN\020\245\006\022\017" +
      "\n\nTHEME_TOGO\020\246\006\022\020\n\013THEME_TAROT\020\247\006\022\025\n\020THE" +
      "ME_UZBEKISTAN\020\250\006\022\023\n\016THEME_UNIVERSE\020\251\006\022\023\n" +
      "\016THEME_NEW_YEAR\020\252\006\022\023\n\016THEME_FOOTBALL\020\253\006\022" +
      "\017\n\nTHEME_WISH\020\254\006\022!\n\034THEME_BOSNIA_AND_HER" +
      "ZEGOVINA\020\255\006\022\016\n\tTHEME_SKI\020\256\006\022\027\n\022THEME_COU" +
      "NTRY_LIFE\020\257\006\022\026\n\021THEME_SAN_ANTONIO\020\260\006\022\023\n\016" +
      "THEME_INSOMNIA\020\261\006\022\021\n\014THEME_PURPLE\020\262\006\022\021\n\014" +
      "THEME_PIRATE\020\263\006\022\017\n\nTHEME_OHIO\020\264\006\022\017\n\nTHEM" +
      "E_GOOD\020\265\006\022\023\n\016THEME_MIDNIGHT\020\266\006\022\026\n\021THEME_" +
      "NIGHTINGALE\020\267\006\022\023\n\016THEME_DOMINICA\020\270\006\022\016\n\tT" +
      "HEME_SKY\020\271\006\022\023\n\016THEME_FAREWELL\020\272\006\022\022\n\rTHEM" +
      "E_LASTING\020\273\006\022\022\n\rTHEME_RESPECT\020\274\006\022\020\n\013THEM" +
      "E_SUDAN\020\275\006\022\026\n\021THEME_WIND_CHIMES\020\276\006\022\023\n\016TH" +
      "EME_PORTUGAL\020\277\006\022\024\n\017THEME_PRESIDENT\020\300\006\022\021\n" +
      "\014THEME_LATVIA\020\301\006\022\023\n\016THEME_DECEMBER\020\302\006\022\023\n" +
      "\016THEME_COMPLAIN\020\303\006\022\024\n\017THEME_ESPIONAGE\020\304\006" +
      "\022\024\n\017THEME_DIFFICULT\020\305\006\022\024\n\017THEME_CELEBRIT" +
      "Y\020\306\006\022\024\n\017THEME_GUATEMALA\020\307\006\022\026\n\021THEME_CRUC" +
      "IFIXION\020\310\006\022\016\n\tTHEME_DOG\020\311\006\022\023\n\016THEME_DIST" +
      "ANCE\020\312\006\022\020\n\013THEME_HUMAN\020\313\006\022\023\n\016THEME_TANZA" +
      "NIA\020\314\006\022\023\n\016THEME_DELAWARE\020\315\006\022\022\n\rTHEME_FLO" +
      "RIDA\020\316\006\022\021\n\014THEME_ISLAND\020\317\006\022\023\n\016THEME_TOMO" +
      "RROW\020\320\006\022\020\n\013THEME_GIRLS\020\321\006\022\020\n\013THEME_INDIA" +
      "\020\322\006\022\025\n\020THEME_ATTRACTIVE\020\323\006\022\020\n\013THEME_READ" +
      "Y\020\324\006\022\021\n\014THEME_CANADA\020\325\006\022\020\n\013THEME_TRAIL\020\326" +
      "\006\022\023\n\016THEME_BASEBALL\020\327\006\022\021\n\014THEME_YELLOW\020\330" +
      "\006\022\031\n\024THEME_UNITED_KINGDOM\020\331\006\022\035\n\030THEME_MU" +
      "SICAL_INSTRUMENT\020\332\006\022\021\n\014THEME_TAIWAN\020\333\006\022\023" +
      "\n\016THEME_DAYDREAM\020\334\006\022\026\n\021THEME_DANCE_PARTY" +
      "\020\335\006\022\017\n\nTHEME_RIDE\020\336\006\022\022\n\rTHEME_GERMANY\020\337\006" +
      "\022\016\n\tTHEME_MAY\020\340\006\022\023\n\016THEME_BATHROOM\020\341\006\022\021\n" +
      "\014THEME_RABBIT\020\342\006\022\020\n\013THEME_RIGHT\020\343\006\022\022\n\rTH" +
      "EME_SOMALIA\020\344\006\022\027\n\022THEME_CONVERSATION\020\345\006\022" +
      "\023\n\016THEME_KIRIBATI\020\346\006\022\022\n\rTHEME_VIETNAM\020\347\006" +
      "\022\021\n\014THEME_GENTLE\020\350\006\022\020\n\013THEME_RIVER\020\351\006\022\026\n" +
      "\021THEME_MIDDLE_EAST\020\352\006\022\016\n\tTHEME_FUN\020\353\006\022\020\n" +
      "\013THEME_ALIEN\020\354\006\022\016\n\tTHEME_FUR\020\355\006\022\017\n\nTHEME" +
      "_MULE\020\356\006\022\025\n\020THEME_GOVERNMENT\020\357\006\022\037\n\032THEME" +
      "_TIMOR__MINUS___LESTE\020\360\006\022\017\n\nTHEME_HATE\020\361" +
      "\006\022\020\n\013THEME_SOUTH\020\362\006\022\020\n\013THEME_TOOLS\020\363\006\022\022\n" +
      "\rTHEME_TONIGHT\020\364\006\022\021\n\014THEME_MOBILE\020\365\006\022\026\n\021" +
      "THEME_SWITZERLAND\020\366\006\022\025\n\020THEME_OPPRESSION" +
      "\020\367\006\022\020\n\013THEME_SPAIN\020\370\006\022\016\n\tTHEME_SON\020\371\006\022\026\n" +
      "\021THEME_THREE_KINGS\020\372\006\022\022\n\rTHEME_REFLECT\020\373" +
      "\006\022\020\n\013THEME_CLIMB\020\374\006\022\020\n\013THEME_PALAU\020\375\006\022\021\n" +
      "\014THEME_RACISM\020\376\006\022\020\n\013THEME_CRUSH\020\377\006\022\027\n\022TH" +
      "EME_SPECIFIC_AGE\020\200\007\022\021\n\014THEME_CHURCH\020\201\007\022\017" +
      "\n\nTHEME_SNOW\020\202\007\022\023\n\016THEME_SYMPATHY\020\203\007\022\021\n\014" +
      "THEME_DUBLIN\020\204\007\022\017\n\nTHEME_LAKE\020\205\007\022\020\n\013THEM" +
      "E_SMOKE\020\206\007\022\022\n\rTHEME_GROW_UP\020\207\007\022\023\n\016THEME_" +
      "BRUNETTE\020\210\007\022\020\n\013THEME_COAST\020\211\007\022\023\n\016THEME_P" +
      "ATIENCE\020\212\007\022\025\n\020THEME_MOZAMBIQUE\020\213\007\022\017\n\nTHE" +
      "ME_EVIL\020\214\007\022\020\n\013THEME_BUILD\020\215\007\022\017\n\nTHEME_RE" +
      "AL\020\216\007\022\026\n\021THEME_NOT_MY_TYPE\020\217\007\022\022\n\rTHEME_L" +
      "ESOTHO\020\220\007\022\030\n\023THEME_SAN_FRANCISCO\020\221\007\022\021\n\014T" +
      "HEME_BERLIN\020\222\007\022\021\n\014THEME_EUROPE\020\223\007\022\020\n\013THE" +
      "ME_TEETH\020\224\007\022\017\n\nTHEME_ARMS\020\225\007\022\024\n\017THEME_DI" +
      "SCOVERY\020\226\007\022\017\n\nTHEME_CITY\020\227\007\022\024\n\017THEME_MAU" +
      "RITIUS\020\230\007\022\020\n\013THEME_TULSA\020\231\007\022\017\n\nTHEME_PIN" +
      "K\020\232\007\022\026\n\021THEME_SANTA_CLAUS\020\233\007\022\016\n\tTHEME_ME" +
      "N\020\234\007\022\024\n\017THEME_WEDNESDAY\020\235\007\022\022\n\rTHEME_FANT" +
      "ASY\020\236\007\022\023\n\016THEME_LAUGHTER\020\237\007\022\036\n\031THEME_HEA" +
      "LTH_AND_WELLNESS\020\240\007\022\017\n\nTHEME_SAVE\020\241\007\022\027\n\022" +
      "THEME_MARRIED_LIFE\020\242\007\022\021\n\014THEME_ADVICE\020\243\007" +
      "\022\023\n\016THEME_MOURNING\020\244\007\022\017\n\nTHEME_WAIT\020\245\007\022\022" +
      "\n\rTHEME_HEROISM\020\246\007\022\025\n\020THEME_PLAY_MUSIC\020\247" +
      "\007\022\020\n\013THEME_HOTEL\020\250\007\022\020\n\013THEME_CLOWN\020\251\007\022\017\n" +
      "\nTHEME_WALK\020\252\007\022\017\n\nTHEME_WALL\020\253\007\022\022\n\rTHEME" +
      "_DESPAIR\020\254\007\022\020\n\013THEME_MAINE\020\255\007\022\024\n\017THEME_T" +
      "ENNESSEE\020\256\007\022\031\n\024THEME_AT_FIRST_SIGHT\020\257\007\022\020" +
      "\n\013THEME_CLEAN\020\260\007\022\026\n\021THEME_INFORMATION\020\261\007" +
      "\022\025\n\020THEME_ENGAGEMENT\020\262\007\022\020\n\013THEME_PRIDE\020\263" +
      "\007\022\027\n\022THEME_UNBELIEVABLE\020\264\007\022\030\n\023THEME_ROAD" +
      "_ACCIDENT\020\265\007\022\021\n\014THEME_CREATE\020\266\007\022\021\n\014THEME" +
      "_VIENNA\020\267\007\022\023\n\016THEME_TERRIBLE\020\270\007\022\021\n\014THEME" +
      "_SISTER\020\271\007\022\022\n\rTHEME_WINNING\020\272\007\022\024\n\017THEME_" +
      "LITHUANIA\020\273\007\022\017\n\nTHEME_BODY\020\274\007\022\026\n\021THEME_M" +
      "ISSING_YOU\020\275\007\022\023\n\016THEME_HIGHLAND\020\276\007\022\017\n\nTH" +
      "EME_REAR\020\277\007\022\020\n\013THEME_SNAKE\020\300\007\022\017\n\nTHEME_W" +
      "EST\020\301\007\022\020\n\013THEME_MAGIC\020\302\007\022\020\n\013THEME_STEAL\020" +
      "\303\007\022\036\n\031THEME_TRINIDAD_AND_TOBAGO\020\304\007\022\021\n\014TH" +
      "EME_AFRAID\020\305\007\022\023\n\016THEME_OPINIONS\020\306\007\022\021\n\014TH" +
      "EME_NORWAY\020\307\007\022\020\n\013THEME_MACAO\020\310\007\022\021\n\014THEME" +
      "_POISON\020\311\007\022\021\n\014THEME_FOREST\020\312\007\022\020\n\013THEME_P" +
      "APER\020\313\007\022\021\n\014THEME_UGANDA\020\314\007\022\023\n\016THEME_SURI" +
      "NAME\020\315\007\022\024\n\017THEME_EMERGENCY\020\316\007\022\020\n\013THEME_A" +
      "LONE\020\317\007\022\020\n\013THEME_VOICE\020\320\007\022\020\n\013THEME_PARIS" +
      "\020\321\007\022\024\n\017THEME_ASSURANCE\020\322\007\022\017\n\nTHEME_GEEK\020" +
      "\323\007\022\017\n\nTHEME_BUSY\020\324\007\022\017\n\nTHEME_SLOW\020\325\007\022\020\n\013" +
      "THEME_ELVIS\020\326\007\022\036\n\031THEME_ANTIGUA_AND_BARB" +
      "UDA\020\327\007\022\016\n\tTHEME_OLD\020\330\007\022\025\n\020THEME_KAZAKHST" +
      "AN\020\331\007\022\022\n\rTHEME_HISTORY\020\332\007\022\020\n\013THEME_BLOOD" +
      "\020\333\007\022\026\n\021THEME_SAINT_LUCIA\020\334\007\022\023\n\016THEME_SAT" +
      "URDAY\020\335\007\022\024\n\017THEME_REBELLION\020\336\007\022\020\n\013THEME_" +
      "MONTH\020\337\007\022\023\n\016THEME_SUFFRAGE\020\340\007\022\023\n\016THEME_R" +
      "EMEMBER\020\341\007\022\020\n\013THEME_HILLS\020\342\007\022\025\n\020THEME_CA" +
      "R_RACING\020\343\007\022\022\n\rTHEME_SURVIVE\020\344\007\022\022\n\rTHEME" +
      "_REDHEAD\020\345\007\022\020\n\013THEME_EAGLE\020\346\007\022\017\n\nTHEME_L" +
      "AOS\020\347\007\022\022\n\rTHEME_JANUARY\020\350\007\022\020\n\013THEME_CLIF" +
      "F\020\351\007\022\024\n\017THEME_ARGENTINA\020\352\007\022\037\n\032THEME_UNIT" +
      "ED_ARAB_EMIRATES\020\353\007\022\021\n\014THEME_BELIZE\020\354\007\022\022" +
      "\n\rTHEME_BRITAIN\020\355\007\022\021\n\014THEME_ZAMBIA\020\356\007\022\020\n" +
      "\013THEME_SMILE\020\357\007\022\021\n\014THEME_MURDER\020\360\007\022\016\n\tTH" +
      "EME_SUN\020\361\007\022\030\n\023THEME_BRITISH_ISLES\020\362\007\022\032\n\025" +
      "THEME_SMALL_TOWN_LIFE\020\363\007\022\017\n\nTHEME_TORN\020\364" +
      "\007\022!\n\034THEME_GUINEA__MINUS___BISSAU\020\365\007\022\026\n\021" +
      "THEME_ADDICTED_TO\020\366\007\022\023\n\016THEME_ILLINOIS\020\367" +
      "\007\022\021\n\014THEME_LONDON\020\370\007\022\020\n\013THEME_CLOSE\020\371\007\022\022" +
      "\n\rTHEME_GEORGIA\020\372\007\022\026\n\021THEME_MISBEHAVIOR\020" +
      "\373\007\022\020\n\013THEME_IDAHO\020\374\007\022\020\n\013THEME_YEMEN\020\375\007\022\021" +
      "\n\014THEME_TRAINS\020\376\007\022\026\n\021THEME_INSPIRATION\020\377" +
      "\007\022\021\n\014THEME_LEADER\020\200\010\022\021\n\014THEME_MONKEY\020\201\010\022" +
      "\030\n\023THEME_SINGLE_PERSON\020\202\010\022\026\n\021THEME_MAKIN" +
      "G_LOVE\020\203\010\022\020\n\013THEME_MARCH\020\204\010\022\024\n\017THEME_PRE" +
      "JUDICE\020\205\010\022\030\n\023THEME_DETERMINATION\020\206\010\022\022\n\rT" +
      "HEME_SUICIDE\020\207\010\022\023\n\016THEME_ELEMENTS\020\210\010\022\022\n\r" +
      "THEME_STALKER\020\211\010\022\021\n\014THEME_SIMPLE\020\212\010\022\030\n\023T" +
      "HEME_GREAT_BRITAIN\020\213\010\022\020\n\013THEME_PARTY\020\214\010\022" +
      "\016\n\tTHEME_BUG\020\215\010\022\024\n\017THEME_LISTENING\020\216\010\022\022\n" +
      "\rTHEME_SWAGGER\020\217\010\022\023\n\016THEME_MISSOURI\020\220\010\022\023" +
      "\n\016THEME_QUESTION\020\221\010\022\021\n\014THEME_UTOPIA\020\222\010\022\024" +
      "\n\017THEME_NIGHTMARE\020\223\010\022\024\n\017THEME_VEGETABLE\020" +
      "\224\010\022\030\n\023THEME_COMMUNICATION\020\225\010\022\023\n\016THEME_MI" +
      "LITARY\020\226\010\022\016\n\tTHEME_BUS\020\227\010\022\017\n\nTHEME_JAVA\020" +
      "\230\010\022\022\n\rTHEME_PROTECT\020\231\010\022\021\n\014THEME_COUSIN\020\232" +
      "\010\022\021\n\014THEME_HAWAII\020\233\010\022\023\n\016THEME_EVERYDAY\020\234" +
      "\010\022\023\n\016THEME_CAREFREE\020\235\010\022\021\n\014THEME_BRUNEI\020\236" +
      "\010\022\022\n\rTHEME_LEBANON\020\237\010\022\022\n\rTHEME_DIVORCE\020\240" +
      "\010\022\025\n\020THEME_AZERBAIJAN\020\241\010\022\024\n\017THEME_BALTIM" +
      "ORE\020\242\010\022\025\n\020THEME_MAURITANIA\020\243\010\022\020\n\013THEME_G" +
      "HOST\020\244\010\022\020\n\013THEME_WORDS\020\245\010\022\022\n\rTHEME_COMFO" +
      "RT\020\246\010\022\025\n\020THEME_CONSISTENT\020\247\010\022\022\n\rTHEME_AN" +
      "XIOUS\020\250\010\022\020\n\013THEME_EVENT\020\251\010\022\022\n\rTHEME_SUNR" +
      "ISE\020\252\010\022\024\n\017THEME_RESILIENT\020\253\010\022\017\n\nTHEME_SH" +
      "IP\020\254\010\022\024\n\017THEME_AUSTRALIA\020\255\010\022\027\n\022THEME_PHI" +
      "LADELPHIA\020\256\010\022\031\n\024THEME_RIO_DE_JANEIRO\020\257\010\022" +
      "\030\n\023THEME_UNITED_STATES\020\260\010\022\025\n\020THEME_UNREQ" +
      "UITED\020\261\010\022\022\n\rTHEME_WHISTLE\020\262\010\022\022\n\rTHEME_MY" +
      "ANMAR\020\263\010\022\023\n\016THEME_CAMEROON\020\264\010\022\022\n\rTHEME_R" +
      "EVENGE\020\265\010\022\030\n\023THEME_LAW_AND_ORDER\020\266\010\022\021\n\014T" +
      "HEME_STRONG\020\267\010\022\022\n\rTHEME_ICELAND\020\270\010\022\017\n\nTH" +
      "EME_OMAN\020\271\010\022\017\n\nTHEME_SWIM\020\272\010\022\021\n\014THEME_SO" +
      "UNDS\020\273\010\022\020\n\013THEME_GABON\020\274\010\022\025\n\020THEME_YUGOS" +
      "LAVIA\020\275\010\022\025\n\020THEME_LUXEMBOURG\020\276\010\022\020\n\013THEME" +
      "_DRUMS\020\277\010\022\025\n\020THEME_ARMAGEDDON\020\300\010\022\022\n\rTHEM" +
      "E_POVERTY\020\301\010\022\030\n\023THEME_CONSCIOUSNESS\020\302\010\022\036" +
      "\n\031THEME_GEOGRAPHIC_LOCATION\020\303\010\022\021\n\014THEME_" +
      "KANSAS\020\304\010\022\020\n\013THEME_LUCKY\020\305\010\022\024\n\017THEME_HEA" +
      "RTACHE\020\306\010\022\021\n\014THEME_PLEASE\020\307\010\022\022\n\rTHEME_MI" +
      "RACLE\020\310\010\022\017\n\nTHEME_IOWA\020\311\010\022\022\n\rTHEME_VANUA" +
      "TU\020\312\010\022\024\n\017THEME_ALLIGATOR\020\313\010\022\030\n\023THEME_FAM" +
      "ILY_MEMBER\020\314\010\022\023\n\016THEME_CONFLICT\020\315\010\022\026\n\021TH" +
      "EME_NORTH_KOREA\020\316\010\022\022\n\rTHEME_GENERAL\020\317\010\022\026" +
      "\n\021THEME_LOS_ANGELES\020\320\010\022\027\n\022THEME_SOUTH_DA" +
      "KOTA\020\321\010\022\021\n\014THEME_OUTLAW\020\322\010\022\020\n\013THEME_PANI" +
      "C\020\323\010\022\021\n\014THEME_ACTION\020\324\010\022\022\n\rTHEME_BURUNDI" +
      "\020\325\010\022\020\n\013THEME_RELAX\020\326\010\022\024\n\017THEME_SINGAPORE" +
      "\020\327\010\022\031\n\024THEME_TRANSPORTATION\020\330\010\022\025\n\020THEME_" +
      "CELL_PHONE\020\331\010\022\017\n\nTHEME_RISK\020\332\010\022\026\n\021THEME_" +
      "FAMILY_LIFE\020\333\010\022\017\n\nTHEME_TIME\020\334\010\022\021\n\014THEME" +
      "_STUPID\020\335\010\022\023\n\016THEME_ABORTION\020\336\010\022\023\n\016THEME" +
      "_NEBRASKA\020\337\010\022\021\n\014THEME_RUSSIA\020\340\010\022\022\n\rTHEME" +
      "_WHISPER\020\341\010\022\020\n\013THEME_BORED\020\342\010\022\020\n\013THEME_E" +
      "MPTY\020\343\010\022\017\n\nTHEME_PAIN\020\344\010\022\022\n\rTHEME_CHOICE" +
      "S\020\345\010\022\025\n\020THEME_AMMUNITION\020\346\010\022\020\n\013THEME_CHI" +
      "NA\020\347\010\022\017\n\nTHEME_NEWS\020\350\010\022\020\n\013THEME_PEACE\020\351\010" +
      "\022\031\n\024THEME_EASTERN_EUROPE\020\352\010\022\017\n\nTHEME_GRE" +
      "Y\020\353\010\022+\n&THEME_DEMOCRATIC_REPUBLIC_OF_THE" +
      "_CONGO\020\354\010\022\017\n\nTHEME_LATE\020\355\010\022\022\n\rTHEME_ROMA" +
      "NIA\020\356\010\022\021\n\014THEME_DESIRE\020\357\010\022\024\n\017THEME_ASTRO" +
      "LOGY\020\360\010\022\026\n\021THEME_PHILIPPINES\020\361\010\022\026\n\021THEME" +
      "_NEW_ORLEANS\020\362\010\022\022\n\rTHEME_BURNING\020\363\010\022\022\n\rT" +
      "HEME_HUSBAND\020\364\010\022\024\n\017THEME_POSSESSED\020\365\010\022\021\n" +
      "\014THEME_TRAVEL\020\366\010\022\023\n\016THEME_MISPLACE\020\367\010\022\020\n" +
      "\013THEME_SIGNS\020\370\010\022\031\n\024THEME_WESTERN_SAHARA\020" +
      "\371\010\022\024\n\017THEME_WONDERFUL\020\372\010\022\024\n\017THEME_INTENT" +
      "ION\020\373\010\022\032\n\025THEME_SOUTH_EAST_ASIA\020\374\010\022\020\n\013TH" +
      "EME_ROBOT\020\375\010\022\026\n\021THEME_QUESTIONING\020\376\010\022\024\n\017" +
      "THEME_INDONESIA\020\377\010\022\023\n\016THEME_LOCATION\020\200\t\022" +
      "\032\n\025THEME_DISSATISFACTION\020\201\t\022\021\n\014THEME_ANG" +
      "OLA\020\202\t\022\022\n\rTHEME_SECRETS\020\203\t\022\017\n\nTHEME_MOON" +
      "\020\204\t\022\024\n\017THEME_AWARENESS\020\205\t\022\027\n\022THEME_SATIS" +
      "FACTION\020\206\t\022\022\n\rTHEME_PRAIRIE\020\207\t\022\026\n\021THEME_" +
      "INTOXICATED\020\210\t\022\020\n\013THEME_CRUEL\020\211\t\022\024\n\017THEM" +
      "E_MOVING_ON\020\212\t\022\021\n\014THEME_ORANGE\020\213\t\022\025\n\020THE" +
      "ME_INFATUATED\020\214\t\022\021\n\014THEME_FRUITS\020\215\t\022\017\n\nT" +
      "HEME_GIVE\020\216\t\022\025\n\020THEME_SUBSTANCES\020\217\t\022\017\n\nT" +
      "HEME_IRAN\020\220\t\022\017\n\nTHEME_BOOK\020\221\t\022\032\n\025THEME_S" +
      "T__DOT___LOUIS\020\222\t\022\031\n\024THEME_CZECH_REPUBLI" +
      "C\020\223\t\022\017\n\nTHEME_IRAQ\020\224\t\022\023\n\016THEME_IDENTITY\020" +
      "\225\t\022\020\n\013THEME_CHILE\020\226\t\022\034\n\027THEME_EQUATORIAL" +
      "_GUINEA\020\227\t\022\022\n\rTHEME_TRUMPET\020\230\t\022\022\n\rTHEME_" +
      "ARIZONA\020\231\t\022\020\n\013THEME_NEPAL\020\232\t\022\021\n\014THEME_BO" +
      "STON\020\233\t\022\017\n\nTHEME_CARS\020\234\t\022\030\n\023THEME_WORKIN" +
      "G_CLASS\020\235\t\022\020\n\013THEME_KNEES\020\236\t\022\034\n\027THEME_FL" +
      "OOR_AND_CEILING\020\237\t\022\023\n\016THEME_SOLITUDE\020\240\t\022" +
      "\027\n\022THEME_TAKE_ME_BACK\020\241\t\022\023\n\016THEME_ECSTAT" +
      "IC\020\242\t\022\017\n\nTHEME_SHOE\020\243\t\022\024\n\017THEME_MENTALIT" +
      "Y\020\244\t\022\027\n\022THEME_NORTH_DAKOTA\020\245\t\022\021\n\014THEME_T" +
      "URKEY\020\246\t\022\022\n\rTHEME_BELGIUM\020\247\t\022\021\n\014THEME_VA" +
      "LLEY\020\250\t\022\020\n\013THEME_SHOOT\020\251\t\022\017\n\nTHEME_PERU\020" +
      "\252\t\022 \n\033THEME_SAO_TOME_AND_PRINCIPE\020\253\t\022\022\n\r" +
      "THEME_EXPLORE\020\254\t\022\021\n\014THEME_SCREAM\020\255\t\022\017\n\nT" +
      "HEME_CHAD\020\256\t\022\020\n\013THEME_BIRTH\020\257\t\022\024\n\017THEME_" +
      "CHALLENGE\020\260\t\022\021\n\014THEME_PRISON\020\261\t\022\027\n\022THEME" +
      "_NON_ROMANTIC\020\262\t\022\021\n\014THEME_BUDDHA\020\263\t\022\021\n\014T" +
      "HEME_MOTHER\020\264\t\022\030\n\023THEME_MASSACHUSETTS\020\265\t" +
      "\022\022\n\rTHEME_MYSTERY\020\266\t\022\034\n\027THEME_DOMESTIC_V" +
      "IOLENCE\020\267\t\022\022\n\rTHEME_URUGUAY\020\270\t\022\022\n\rTHEME_" +
      "FASHION\020\271\t\022\020\n\013THEME_RADIO\020\272\t\022\021\n\014THEME_DO" +
      "CTOR\020\273\t\022\023\n\016THEME_GENOCIDE\020\274\t\022\020\n\013THEME_ST" +
      "AND\020\275\t\022\022\n\rTHEME_LIBERIA\020\276\t\022\024\n\017THEME_VENE" +
      "ZUELA\020\277\t\022\024\n\017THEME_LOUISIANA\020\300\t\022\026\n\021THEME_" +
      "SOUTH_KOREA\020\301\t\022\025\n\020THEME_BODY_PARTS\020\302\t\022\025\n" +
      "\020THEME_PHOTOGRAPH\020\303\t\022\027\n\022THEME_GETTING_OV" +
      "ER\020\304\t\022\024\n\017THEME_GEOGRAPHY\020\305\t\022\022\n\rTHEME_DIS" +
      "EASE\020\306\t\022\020\n\013THEME_NIGHT\020\307\t\022\021\n\014THEME_SUMME" +
      "R\020\310\t\022\020\n\013THEME_WORLD\020\311\t\022\023\n\016THEME_RECOVERY" +
      "\020\312\t\022\037\n\032THEME_US_AGAINST_THE_WORLD\020\313\t\022\031\n\024" +
      "THEME_FAITH_IN_DOUBT\020\314\t\022\021\n\014THEME_WISDOM\020" +
      "\315\t\022\017\n\nTHEME_RAIN\020\316\t\022\017\n\nTHEME_BOSS\020\317\t\022\020\n\013" +
      "THEME_CRAZY\020\320\t\022\020\n\013THEME_HORSE\020\321\t\022\017\n\nTHEM" +
      "E_TREE\020\322\t\022\023\n\016THEME_EQUALITY\020\323\t\022\023\n\016THEME_" +
      "ADOPTION\020\324\t\022\023\n\016THEME_CARNIVAL\020\325\t\022\033\n\026THEM" +
      "E_PAPUA_NEW_GUINEA\020\326\t\022\022\n\rTHEME_HUNGARY\020\327" +
      "\t\022\020\n\013THEME_JAPAN\020\330\t\022\022\n\rTHEME_ROMANCE\020\331\t\022" +
      "\031\n\024THEME_SALT_LAKE_CITY\020\332\t\022\022\n\rTHEME_BELA" +
      "RUS\020\333\t\022\017\n\nTHEME_LAZY\020\334\t\022\031\n\024THEME_NUCLEAR" +
      "_ENERGY\020\335\t\022\022\n\rTHEME_SENEGAL\020\336\t\022\016\n\tTHEME_" +
      "CAT\020\337\t\022\026\n\021THEME_ENVIRONMENT\020\340\t\022\016\n\tTHEME_" +
      "ZOO\020\341\t\022\027\n\022THEME_TEXT_MESSAGE\020\342\t\022\023\n\016THEME" +
      "_FAVORITE\020\343\t\022\020\n\013THEME_BELOW\020\344\t\022\022\n\rTHEME_" +
      "GARBAGE\020\345\t\022\021\n\014THEME_OREGON\020\346\t\022\017\n\nTHEME_M" +
      "EAN\020\347\t\022\024\n\017THEME_AIRPLANES\020\350\t\022\035\n\030THEME_DO" +
      "MINICAN_REPUBLIC\020\351\t\022\023\n\016THEME_KANGAROO\020\352\t" +
      "\022\026\n\021THEME_STEP_PARENT\020\353\t\022\022\n\rTHEME_LONGIN" +
      "G\020\354\t\022\020\n\013THEME_BRASS\020\355\t\022\020\n\013THEME_EGYPT\020\356\t" +
      "\022\023\n\016THEME_SUNSHINE\020\357\t\022\017\n\nTHEME_BEAR\020\360\t\022\022" +
      "\n\rTHEME_BOLIVIA\020\361\t\022\025\n\020THEME_SAN_MARINO\020\362" +
      "\t\022\022\n\rTHEME_OCEANIA\020\363\t\022\025\n\020THEME_FRIENDSHI" +
      "P\020\364\t\022\025\n\020THEME_NEW_JERSEY\020\365\t\022\020\n\013THEME_FLO" +
      "OD\020\366\t\022\017\n\nTHEME_MOVE\020\367\t\022\023\n\016THEME_SLOVAKIA" +
      "\020\370\t\022\020\n\013THEME_MERCY\020\371\t\022\021\n\014THEME_INSECT\020\372\t" +
      "\022\017\n\nTHEME_EARS\020\373\t\022\023\n\016THEME_FEBRUARY\020\374\t\022\024" +
      "\n\017THEME_APOLOGIZE\020\375\t\022\020\n\013THEME_U_F_O\020\376\t\022\022" +
      "\n\rTHEME_HOLLAND\020\377\t\022\026\n\021THEME_TIME_OF_DAY\020" +
      "\200\n\022\020\n\013THEME_REHAB\020\201\n\022\022\n\rTHEME_CHICAGO\020\202\n" +
      "\022\020\n\013THEME_NIGER\020\203\n\022\030\n\023THEME_BALTIC_STATE" +
      "S\020\204\n\022\021\n\014THEME_CHANGE\020\205\n\022\016\n\tTHEME_EGO\020\206\n\022" +
      "\017\n\nTHEME_DOOR\020\207\n\022\022\n\rTHEME_NERVOUS\020\210\n\022\024\n\017" +
      "THEME_HONG_KONG\020\211\n\022\021\n\014THEME_CASINO\020\212\n\022\021\n" +
      "\014THEME_GOSSIP\020\213\n\022\017\n\nTHEME_TELL\020\214\n\022\023\n\016THE" +
      "ME_BOTSWANA\020\215\n\022\021\n\014THEME_FUTURE\020\216\n\022\022\n\rTHE" +
      "ME_WELCOME\020\217\n\022\025\n\020THEME_MICRONESIA\020\220\n\022\025\n\020" +
      "THEME_REDEMPTION\020\221\n\022\020\n\013THEME_GUILT\020\222\n\022\027\n" +
      "\022THEME_SUPERNATURAL\020\223\n*\271\001\n\tThemeType\022\034\n\030" +
      "THEME_TYPE_CLOSING_THEME\020\000\022\031\n\025THEME_TYPE" +
      "_MAIN_THEME\020\001\022\032\n\026THEME_TYPE_TITLE_THEME\020" +
      "\002\022\033\n\027THEME_TYPE_USER_DEFINED\020\003\022\034\n\030THEME_" +
      "TYPE_OPENING_THEME\020\004\022\034\n\030THEME_TYPE_SEGME" +
      "NT_THEME\020\005*z\n\014TimecodeType\022\033\n\027TIMECODE_T" +
      "YPE_S_M_P_T_E\020\000\022\031\n\025TIMECODE_TYPE_M_I_D_I" +
      "\020\001\022\031\n\025TIMECODE_TYPE_V_I_T_C\020\002\022\027\n\023TIMECOD" +
      "E_TYPE_F_S_K\020\003*\3726\n\020TisTerritoryCode\022\032\n\026T" +
      "IS_TERRITORY_CODE_470\020\000\022\032\n\026TIS_TERRITORY" +
      "_CODE_591\020\001\022\032\n\026TIS_TERRITORY_CODE_230\020\002\022" +
      "\032\n\026TIS_TERRITORY_CODE_231\020\003\022\032\n\026TIS_TERRI" +
      "TORY_CODE_352\020\004\022\032\n\026TIS_TERRITORY_CODE_23" +
      "2\020\005\022\032\n\026TIS_TERRITORY_CODE_112\020\006\022\032\n\026TIS_T" +
      "ERRITORY_CODE_233\020\007\022\032\n\026TIS_TERRITORY_COD" +
      "E_356\020\010\022\032\n\026TIS_TERRITORY_CODE_598\020\t\022\032\n\026T" +
      "IS_TERRITORY_CODE_478\020\n\022\032\n\026TIS_TERRITORY" +
      "_CODE_116\020\013\022\031\n\025TIS_TERRITORY_CODE_12\020\014\022\032" +
      "\n\026TIS_TERRITORY_CODE_480\020\r\022\032\n\026TIS_TERRIT" +
      "ORY_CODE_360\020\016\022\032\n\026TIS_TERRITORY_CODE_120" +
      "\020\017\022\032\n\026TIS_TERRITORY_CODE_242\020\020\022\032\n\026TIS_TE" +
      "RRITORY_CODE_484\020\021\022\032\n\026TIS_TERRITORY_CODE" +
      "_364\020\022\022\032\n\026TIS_TERRITORY_CODE_124\020\023\022\030\n\024TI" +
      "S_TERRITORY_CODE_4\020\024\022\032\n\026TIS_TERRITORY_CO" +
      "DE_246\020\025\022\032\n\026TIS_TERRITORY_CODE_368\020\026\022\030\n\024" +
      "TIS_TERRITORY_CODE_8\020\027\022\032\n\026TIS_TERRITORY_" +
      "CODE_800\020\030\022\032\n\026TIS_TERRITORY_CODE_804\020\031\022\031",
      "\n\025TIS_TERRITORY_CODE_20\020\032\022\032\n\026TIS_TERRITO" +
      "RY_CODE_807\020\033\022\031\n\025TIS_TERRITORY_CODE_24\020\034" +
      "\022\031\n\025TIS_TERRITORY_CODE_28\020\035\022\032\n\026TIS_TERRI" +
      "TORY_CODE_250\020\036\022\032\n\026TIS_TERRITORY_CODE_49" +
      "2\020\037\022\032\n\026TIS_TERRITORY_CODE_372\020 \022\032\n\026TIS_T" +
      "ERRITORY_CODE_132\020!\022\032\n\026TIS_TERRITORY_COD" +
      "E_496\020\"\022\032\n\026TIS_TERRITORY_CODE_376\020#\022\032\n\026T" +
      "IS_TERRITORY_CODE_498\020$\022\032\n\026TIS_TERRITORY" +
      "_CODE_499\020%\022\032\n\026TIS_TERRITORY_CODE_258\020&\022" +
      "\032\n\026TIS_TERRITORY_CODE_810\020\'\022\031\n\025TIS_TERRI" +
      "TORY_CODE_31\020(\022\031\n\025TIS_TERRITORY_CODE_32\020" +
      ")\022\032\n\026TIS_TERRITORY_CODE_818\020*\022\031\n\025TIS_TER" +
      "RITORY_CODE_36\020+\022\033\n\027TIS_TERRITORY_CODE_2" +
      "100\020,\022\032\n\026TIS_TERRITORY_CODE_380\020-\022\032\n\026TIS" +
      "_TERRITORY_CODE_140\020.\022\032\n\026TIS_TERRITORY_C" +
      "ODE_262\020/\022\032\n\026TIS_TERRITORY_CODE_384\0200\022\032\n" +
      "\026TIS_TERRITORY_CODE_144\0201\022\032\n\026TIS_TERRITO" +
      "RY_CODE_266\0202\022\032\n\026TIS_TERRITORY_CODE_388\020" +
      "3\022\032\n\026TIS_TERRITORY_CODE_268\0204\022\032\n\026TIS_TER" +
      "RITORY_CODE_148\0205\022\032\n\026TIS_TERRITORY_CODE_" +
      "702\0206\022\032\n\026TIS_TERRITORY_CODE_703\0207\022\032\n\026TIS" +
      "_TERRITORY_CODE_704\0208\022\031\n\025TIS_TERRITORY_C" +
      "ODE_40\0209\022\032\n\026TIS_TERRITORY_CODE_705\020:\022\032\n\026" +
      "TIS_TERRITORY_CODE_826\020;\022\032\n\026TIS_TERRITOR" +
      "Y_CODE_706\020<\022\031\n\025TIS_TERRITORY_CODE_44\020=\022" +
      "\031\n\025TIS_TERRITORY_CODE_48\020>\022\033\n\027TIS_TERRIT" +
      "ORY_CODE_2111\020?\022\033\n\027TIS_TERRITORY_CODE_21" +
      "10\020@\022\032\n\026TIS_TERRITORY_CODE_270\020A\022\032\n\026TIS_" +
      "TERRITORY_CODE_392\020B\022\032\n\026TIS_TERRITORY_CO" +
      "DE_152\020C\022\033\n\027TIS_TERRITORY_CODE_2108\020D\022\032\n" +
      "\026TIS_TERRITORY_CODE_276\020E\022\033\n\027TIS_TERRITO" +
      "RY_CODE_2107\020F\022\032\n\026TIS_TERRITORY_CODE_156" +
      "\020G\022\032\n\026TIS_TERRITORY_CODE_398\020H\022\033\n\027TIS_TE" +
      "RRITORY_CODE_2106\020I\022\032\n\026TIS_TERRITORY_COD" +
      "E_278\020J\022\033\n\027TIS_TERRITORY_CODE_2105\020K\022\032\n\026" +
      "TIS_TERRITORY_CODE_158\020L\022\033\n\027TIS_TERRITOR" +
      "Y_CODE_2104\020M\022\033\n\027TIS_TERRITORY_CODE_2103" +
      "\020N\022\032\n\026TIS_TERRITORY_CODE_710\020O\022\033\n\027TIS_TE" +
      "RRITORY_CODE_2102\020P\022\033\n\027TIS_TERRITORY_COD" +
      "E_2101\020Q\022\032\n\026TIS_TERRITORY_CODE_834\020R\022\031\n\025" +
      "TIS_TERRITORY_CODE_50\020S\022\031\n\025TIS_TERRITORY" +
      "_CODE_51\020T\022\032\n\026TIS_TERRITORY_CODE_716\020U\022\031" +
      "\n\025TIS_TERRITORY_CODE_52\020V\022\033\n\027TIS_TERRITO" +
      "RY_CODE_2109\020W\022\031\n\025TIS_TERRITORY_CODE_56\020" +
      "X\022\033\n\027TIS_TERRITORY_CODE_2122\020Y\022\033\n\027TIS_TE" +
      "RRITORY_CODE_2121\020Z\022\032\n\026TIS_TERRITORY_COD" +
      "E_280\020[\022\033\n\027TIS_TERRITORY_CODE_2120\020\\\022\033\n\027" +
      "TIS_TERRITORY_CODE_2119\020]\022\033\n\027TIS_TERRITO" +
      "RY_CODE_2118\020^\022\032\n\026TIS_TERRITORY_CODE_288" +
      "\020_\022\033\n\027TIS_TERRITORY_CODE_2117\020`\022\033\n\027TIS_T" +
      "ERRITORY_CODE_2116\020a\022\032\n\026TIS_TERRITORY_CO" +
      "DE_840\020b\022\033\n\027TIS_TERRITORY_CODE_2115\020c\022\032\n" +
      "\026TIS_TERRITORY_CODE_720\020d\022\033\n\027TIS_TERRITO" +
      "RY_CODE_2114\020e\022\032\n\026TIS_TERRITORY_CODE_600" +
      "\020f\022\033\n\027TIS_TERRITORY_CODE_2113\020g\022\033\n\027TIS_T" +
      "ERRITORY_CODE_2112\020h\022\032\n\026TIS_TERRITORY_CO" +
      "DE_724\020i\022\032\n\026TIS_TERRITORY_CODE_604\020j\022\032\n\026" +
      "TIS_TERRITORY_CODE_728\020k\022\031\n\025TIS_TERRITOR" +
      "Y_CODE_64\020l\022\032\n\026TIS_TERRITORY_CODE_608\020m\022" +
      "\032\n\026TIS_TERRITORY_CODE_729\020n\022\031\n\025TIS_TERRI" +
      "TORY_CODE_68\020o\022\033\n\027TIS_TERRITORY_CODE_213" +
      "3\020p\022\033\n\027TIS_TERRITORY_CODE_2132\020q\022\032\n\026TIS_" +
      "TERRITORY_CODE_170\020r\022\033\n\027TIS_TERRITORY_CO" +
      "DE_2131\020s\022\033\n\027TIS_TERRITORY_CODE_2130\020t\022\032" +
      "\n\026TIS_TERRITORY_CODE_174\020u\022\032\n\026TIS_TERRIT" +
      "ORY_CODE_296\020v\022\033\n\027TIS_TERRITORY_CODE_212" +
      "9\020w\022\032\n\026TIS_TERRITORY_CODE_178\020x\022\033\n\027TIS_T" +
      "ERRITORY_CODE_2128\020y\022\033\n\027TIS_TERRITORY_CO" +
      "DE_2127\020z\022\033\n\027TIS_TERRITORY_CODE_2126\020{\022\033" +
      "\n\027TIS_TERRITORY_CODE_2125\020|\022\032\n\026TIS_TERRI" +
      "TORY_CODE_732\020}\022\033\n\027TIS_TERRITORY_CODE_21" +
      "24\020~\022\032\n\026TIS_TERRITORY_CODE_854\020\177\022\034\n\027TIS_" +
      "TERRITORY_CODE_2123\020\200\001\022\032\n\025TIS_TERRITORY_" +
      "CODE_70\020\201\001\022\033\n\026TIS_TERRITORY_CODE_736\020\202\001\022" +
      "\032\n\025TIS_TERRITORY_CODE_72\020\203\001\022\033\n\026TIS_TERRI" +
      "TORY_CODE_616\020\204\001\022\033\n\026TIS_TERRITORY_CODE_8" +
      "58\020\205\001\022\032\n\025TIS_TERRITORY_CODE_76\020\206\001\022\033\n\026TIS" +
      "_TERRITORY_CODE_180\020\207\001\022\033\n\026TIS_TERRITORY_" +
      "CODE_188\020\210\001\022\033\n\026TIS_TERRITORY_CODE_860\020\211\001" +
      "\022\033\n\026TIS_TERRITORY_CODE_740\020\212\001\022\033\n\026TIS_TER" +
      "RITORY_CODE_620\020\213\001\022\033\n\026TIS_TERRITORY_CODE" +
      "_862\020\214\001\022\034\n\027TIS_TERRITORY_CODE_2136\020\215\001\022\034\n" +
      "\027TIS_TERRITORY_CODE_2134\020\216\001\022\033\n\026TIS_TERRI" +
      "TORY_CODE_624\020\217\001\022\033\n\026TIS_TERRITORY_CODE_5" +
      "04\020\220\001\022\033\n\026TIS_TERRITORY_CODE_626\020\221\001\022\033\n\026TI" +
      "S_TERRITORY_CODE_748\020\222\001\022\032\n\025TIS_TERRITORY" +
      "_CODE_84\020\223\001\022\033\n\026TIS_TERRITORY_CODE_508\020\224\001" +
      "\022\033\n\026TIS_TERRITORY_CODE_191\020\225\001\022\033\n\026TIS_TER" +
      "RITORY_CODE_192\020\226\001\022\033\n\026TIS_TERRITORY_CODE" +
      "_196\020\227\001\022\033\n\026TIS_TERRITORY_CODE_630\020\230\001\022\033\n\026" +
      "TIS_TERRITORY_CODE_752\020\231\001\022\033\n\026TIS_TERRITO" +
      "RY_CODE_512\020\232\001\022\032\n\025TIS_TERRITORY_CODE_90\020" +
      "\233\001\022\033\n\026TIS_TERRITORY_CODE_634\020\234\001\022\033\n\026TIS_T" +
      "ERRITORY_CODE_756\020\235\001\022\033\n\026TIS_TERRITORY_CO" +
      "DE_516\020\236\001\022\032\n\025TIS_TERRITORY_CODE_96\020\237\001\022\033\n" +
      "\026TIS_TERRITORY_CODE_760\020\240\001\022\033\n\026TIS_TERRIT" +
      "ORY_CODE_882\020\241\001\022\033\n\026TIS_TERRITORY_CODE_52" +
      "0\020\242\001\022\033\n\026TIS_TERRITORY_CODE_762\020\243\001\022\033\n\026TIS" +
      "_TERRITORY_CODE_400\020\244\001\022\033\n\026TIS_TERRITORY_" +
      "CODE_642\020\245\001\022\033\n\026TIS_TERRITORY_CODE_643\020\246\001" +
      "\022\033\n\026TIS_TERRITORY_CODE_764\020\247\001\022\033\n\026TIS_TER" +
      "RITORY_CODE_886\020\250\001\022\033\n\026TIS_TERRITORY_CODE" +
      "_524\020\251\001\022\033\n\026TIS_TERRITORY_CODE_887\020\252\001\022\033\n\026" +
      "TIS_TERRITORY_CODE_404\020\253\001\022\033\n\026TIS_TERRITO" +
      "RY_CODE_646\020\254\001\022\033\n\026TIS_TERRITORY_CODE_768" +
      "\020\255\001\022\033\n\026TIS_TERRITORY_CODE_528\020\256\001\022\033\n\026TIS_" +
      "TERRITORY_CODE_408\020\257\001\022\033\n\026TIS_TERRITORY_C" +
      "ODE_890\020\260\001\022\033\n\026TIS_TERRITORY_CODE_891\020\261\001\022" +
      "\033\n\026TIS_TERRITORY_CODE_410\020\262\001\022\033\n\026TIS_TERR" +
      "ITORY_CODE_894\020\263\001\022\033\n\026TIS_TERRITORY_CODE_" +
      "776\020\264\001\022\033\n\026TIS_TERRITORY_CODE_414\020\265\001\022\033\n\026T" +
      "IS_TERRITORY_CODE_417\020\266\001\022\033\n\026TIS_TERRITOR" +
      "Y_CODE_659\020\267\001\022\033\n\026TIS_TERRITORY_CODE_418\020" +
      "\270\001\022\033\n\026TIS_TERRITORY_CODE_780\020\271\001\022\033\n\026TIS_T" +
      "ERRITORY_CODE_540\020\272\001\022\033\n\026TIS_TERRITORY_CO" +
      "DE_662\020\273\001\022\033\n\026TIS_TERRITORY_CODE_300\020\274\001\022\033" +
      "\n\026TIS_TERRITORY_CODE_784\020\275\001\022\033\n\026TIS_TERRI" +
      "TORY_CODE_422\020\276\001\022\033\n\026TIS_TERRITORY_CODE_7" +
      "88\020\277\001\022\033\n\026TIS_TERRITORY_CODE_426\020\300\001\022\033\n\026TI" +
      "S_TERRITORY_CODE_548\020\301\001\022\033\n\026TIS_TERRITORY" +
      "_CODE_428\020\302\001\022\033\n\026TIS_TERRITORY_CODE_308\020\303" +
      "\001\022\033\n\026TIS_TERRITORY_CODE_670\020\304\001\022\033\n\026TIS_TE" +
      "RRITORY_CODE_792\020\305\001\022\033\n\026TIS_TERRITORY_COD" +
      "E_430\020\306\001\022\033\n\026TIS_TERRITORY_CODE_674\020\307\001\022\033\n" +
      "\026TIS_TERRITORY_CODE_795\020\310\001\022\033\n\026TIS_TERRIT" +
      "ORY_CODE_554\020\311\001\022\033\n\026TIS_TERRITORY_CODE_43" +
      "4\020\312\001\022\033\n\026TIS_TERRITORY_CODE_798\020\313\001\022\033\n\026TIS" +
      "_TERRITORY_CODE_678\020\314\001\022\033\n\026TIS_TERRITORY_" +
      "CODE_558\020\315\001\022\033\n\026TIS_TERRITORY_CODE_438\020\316\001" +
      "\022\033\n\026TIS_TERRITORY_CODE_440\020\317\001\022\033\n\026TIS_TER" +
      "RITORY_CODE_682\020\320\001\022\033\n\026TIS_TERRITORY_CODE" +
      "_320\020\321\001\022\033\n\026TIS_TERRITORY_CODE_562\020\322\001\022\033\n\026" +
      "TIS_TERRITORY_CODE_200\020\323\001\022\033\n\026TIS_TERRITO" +
      "RY_CODE_442\020\324\001\022\033\n\026TIS_TERRITORY_CODE_686" +
      "\020\325\001\022\033\n\026TIS_TERRITORY_CODE_203\020\326\001\022\033\n\026TIS_" +
      "TERRITORY_CODE_324\020\327\001\022\033\n\026TIS_TERRITORY_C" +
      "ODE_566\020\330\001\022\033\n\026TIS_TERRITORY_CODE_204\020\331\001\022" +
      "\033\n\026TIS_TERRITORY_CODE_688\020\332\001\022\033\n\026TIS_TERR" +
      "ITORY_CODE_328\020\333\001\022\033\n\026TIS_TERRITORY_CODE_" +
      "208\020\334\001\022\033\n\026TIS_TERRITORY_CODE_690\020\335\001\022\033\n\026T" +
      "IS_TERRITORY_CODE_450\020\336\001\022\033\n\026TIS_TERRITOR" +
      "Y_CODE_694\020\337\001\022\033\n\026TIS_TERRITORY_CODE_332\020" +
      "\340\001\022\033\n\026TIS_TERRITORY_CODE_212\020\341\001\022\033\n\026TIS_T" +
      "ERRITORY_CODE_454\020\342\001\022\033\n\026TIS_TERRITORY_CO" +
      "DE_214\020\343\001\022\033\n\026TIS_TERRITORY_CODE_336\020\344\001\022\033" +
      "\n\026TIS_TERRITORY_CODE_578\020\345\001\022\033\n\026TIS_TERRI" +
      "TORY_CODE_458\020\346\001\022\033\n\026TIS_TERRITORY_CODE_2" +
      "18\020\347\001\022\033\n\026TIS_TERRITORY_CODE_340\020\350\001\022\033\n\026TI" +
      "S_TERRITORY_CODE_462\020\351\001\022\033\n\026TIS_TERRITORY" +
      "_CODE_583\020\352\001\022\033\n\026TIS_TERRITORY_CODE_100\020\353" +
      "\001\022\033\n\026TIS_TERRITORY_CODE_584\020\354\001\022\033\n\026TIS_TE" +
      "RRITORY_CODE_222\020\355\001\022\033\n\026TIS_TERRITORY_COD" +
      "E_585\020\356\001\022\033\n\026TIS_TERRITORY_CODE_344\020\357\001\022\033\n" +
      "\026TIS_TERRITORY_CODE_586\020\360\001\022\033\n\026TIS_TERRIT" +
      "ORY_CODE_466\020\361\001\022\033\n\026TIS_TERRITORY_CODE_10" +
      "4\020\362\001\022\033\n\026TIS_TERRITORY_CODE_226\020\363\001\022\033\n\026TIS" +
      "_TERRITORY_CODE_348\020\364\001\022\033\n\026TIS_TERRITORY_" +
      "CODE_108\020\365\001*\215\004\n\tTitleType\022\034\n\030TITLE_TYPE_" +
      "SORTING_TITLE\020\000\022\034\n\030TITLE_TYPE_DISPLAY_TI" +
      "TLE\020\001\022(\n$TITLE_TYPE_TITLE_WITHOUT_PUNCTU" +
      "ATION\020\002\022\036\n\032TITLE_TYPE_INCORRECT_TITLE\020\003\022" +
      " \n\034TITLE_TYPE_ALTERNATIVE_TITLE\020\004\022!\n\035TIT" +
      "LE_TYPE_FIRST_LINE_OF_TEXT\020\005\022\035\n\031TITLE_TY" +
      "PE_GROUPING_TITLE\020\006\022(\n$TITLE_TYPE_ABBREV" +
      "IATED_DISPLAY_TITLE\020\007\022\037\n\033TITLE_TYPE_TRAN" +
      "SLATED_TITLE\020\010\022\026\n\022TITLE_TYPE_UNKNOWN\020\t\022\033" +
      "\n\027TITLE_TYPE_SEARCH_TITLE\020\n\022\035\n\031TITLE_TYP" +
      "E_ORIGINAL_TITLE\020\013\022\037\n\033TITLE_TYPE_MISSPEL" +
      "LED_TITLE\020\014\022\033\n\027TITLE_TYPE_FORMAL_TITLE\020\r" +
      "\022\034\n\030TITLE_TYPE_TITLE_AS_PART\020\016\022\033\n\027TITLE_" +
      "TYPE_USER_DEFINED\020\017*\203\n\n\020TransferCategory" +
      "\022\037\n\033TRANSFER_CATEGORY_CARTRIDGE\020\000\022%\n!TRA" +
      "NSFER_CATEGORY_NUMBER_OF_SIDES\020\001\0220\n,TRAN" +
      "SFER_CATEGORY_CONVERSION_REFERENCE_LEVEL" +
      "\020\002\022%\n!TRANSFER_CATEGORY_ALIGNMENT_TONES\020" +
      "\003\022\037\n\033TRANSFER_CATEGORY_BIT_DEPTH\020\004\022%\n!TR" +
      "ANSFER_CATEGORY_SIDE1_CONDITION\020\005\022\034\n\030TRA" +
      "NSFER_CATEGORY_STYLUS\020\006\022%\n!TRANSFER_CATE" +
      "GORY_TAPE_COOL_HOURS\020\007\022&\n\"TRANSFER_CATEG" +
      "ORY_NUMBER_OF_TRACKS\020\010\022%\n!TRANSFER_CATEG" +
      "ORY_TAPE_BAKED_DATE\020\t\022!\n\035TRANSFER_CATEGO" +
      "RY_STYLUS_SIZE\020\n\022\'\n#TRANSFER_CATEGORY_TR" +
      "ANSFER_SOFTWARE\020\013\022%\n!TRANSFER_CATEGORY_R" +
      "EFERENCE_CLOCK\020\014\022\033\n\027TRANSFER_CATEGORY_SP" +
      "EED\020\r\022\036\n\032TRANSFER_CATEGORY_EMPHASIS\020\016\022)\n" +
      "%TRANSFER_CATEGORY_TRACK_CONFIGURATION\020\017" +
      "\0221\n-TRANSFER_CATEGORY_ANALOG_TO_DIGITAL_" +
      "CONVERTER\020\020\022(\n$TRANSFER_CATEGORY_MATERIA" +
      "L_CONDITION\020\021\022#\n\037TRANSFER_CATEGORY_SAMPL" +
      "ING_RATE\020\022\022\"\n\036TRANSFER_CATEGORY_CLOCK_SO" +
      "URCE\020\023\022%\n!TRANSFER_CATEGORY_NOISE_REDUCT" +
      "ION\020\024\022*\n&TRANSFER_CATEGORY_TAPE_BAKED_EQ" +
      "UIPMENT\020\025\022\"\n\036TRANSFER_CATEGORY_PHONO_PRE" +
      "AMP\020\026\022&\n\"TRANSFER_CATEGORY_SMPTE_FRAME_R" +
      "ATE\020\027\022\035\n\031TRANSFER_CATEGORY_STORAGE\020\030\022,\n(" +
      "TRANSFER_CATEGORY_TAPE_BAKED_TEMPERATURE" +
      "\020\031\022%\n!TRANSFER_CATEGORY_SIDE2_CONDITION\020" +
      "\032\022&\n\"TRANSFER_CATEGORY_TAPE_BAKED_HOURS\020" +
      "\033\022\035\n\031TRANSFER_CATEGORY_TONEARM\020\034\022(\n$TRAN" +
      "SFER_CATEGORY_NUMBER_OF_CHANNELS\020\035\022 \n\034TR" +
      "ANSFER_CATEGORY_MIC_PREAMP\020\036\022%\n!TRANSFER" +
      "_CATEGORY_REFERENCE_TONES\020\037\022$\n TRANSFER_" +
      "CATEGORY_SOURCE_MACHINE\020 *\302\001\n\014TransferTy" +
      "pe\022\036\n\032TRANSFER_TYPE_DIGITAL_COPY\020\000\022#\n\037TR" +
      "ANSFER_TYPE_ANALOG_TO_DIGITAL\020\001\022#\n\037TRANS" +
      "FER_TYPE_DIGITAL_TO_ANALOG\020\002\022$\n TRANSFER" +
      "_TYPE_DIGITAL_TO_DIGITAL\020\003\022\"\n\036TRANSFER_T" +
      "YPE_ANALOG_TO_ANALOG\020\004*z\n\rUnitOfBitRate\022" +
      "\030\n\024UNIT_OF_BIT_RATE_BPS\020\000\022\031\n\025UNIT_OF_BIT" +
      "_RATE_KBPS\020\001\022\031\n\025UNIT_OF_BIT_RATE_MBPS\020\002\022" +
      "\031\n\025UNIT_OF_BIT_RATE_GBPS\020\003*\317\001\n\024UnitOfCon" +
      "ditionValue\022\'\n#UNIT_OF_CONDITION_VALUE_M" +
      "ILLISECOND\020\000\022\"\n\036UNIT_OF_CONDITION_VALUE_" +
      "MINUTE\020\001\022\"\n\036UNIT_OF_CONDITION_VALUE_SECO" +
      "ND\020\002\022#\n\037UNIT_OF_CONDITION_VALUE_PERCENT\020" +
      "\003\022!\n\035UNIT_OF_CONDITION_VALUE_PIXEL\020\004*T\n\017" +
      "UnitOfCuePoints\022\"\n\036UNIT_OF_CUE_POINTS_MI" +
      "LLISECOND\020\000\022\035\n\031UNIT_OF_CUE_POINTS_SECOND" +
      "\020\001*\204\001\n\016UnitOfDuration\022\032\n\026UNIT_OF_DURATIO" +
      "N_MONTH\020\000\022!\n\035UNIT_OF_DURATION_USER_DEFIN" +
      "ED\020\001\022\030\n\024UNIT_OF_DURATION_DAY\020\002\022\031\n\025UNIT_O" +
      "F_DURATION_WEEK\020\003*\225\001\n\014UnitOfExtent\022\025\n\021UN" +
      "IT_OF_EXTENT_MM\020\000\022$\n UNIT_OF_EXTENT_PERC" +
      "ENT_OF_SCREEN\020\001\022\027\n\023UNIT_OF_EXTENT_INCH\020\002" +
      "\022\025\n\021UNIT_OF_EXTENT_CM\020\003\022\030\n\024UNIT_OF_EXTEN" +
      "T_PIXEL\020\004*\203\001\n\017UnitOfFrameRate\022=\n9UNIT_OF" +
      "_FRAME_RATE_HZ__FRB__NON__MINUS__INTERLA" +
      "CED__BRB__\020\000\0221\n-UNIT_OF_FRAME_RATE_HZ__F" +
      "RB__INTERLACED__BRB__\020\001*\177\n\017UnitOfFrequen" +
      "cy\022\030\n\024UNIT_OF_FREQUENCY_HZ\020\000\022\032\n\026UNIT_OF_" +
      "FREQUENCY_G_HZ\020\001\022\032\n\026UNIT_OF_FREQUENCY_K_" +
      "HZ\020\002\022\032\n\026UNIT_OF_FREQUENCY_M_HZ\020\003*\250\001\n\034Uni" +
      "tTypeForRevenueAllocation\022)\n%UNIT_TYPE_F" +
      "OR_REVENUE_ALLOCATION_PLAY\020\000\022+\n\'UNIT_TYP" +
      "E_FOR_REVENUE_ALLOCATION_SECOND\020\001\0220\n,UNI" +
      "T_TYPE_FOR_REVENUE_ALLOCATION_PERFORMANC" +
      "E\020\002*\241\r\n\007UseType\022\032\n\026USE_TYPE_DUB_FOR_RADI" +
      "O\020\000\022\024\n\020USE_TYPE_PERFORM\020\001\022\033\n\027USE_TYPE_KI" +
      "OSK_DOWNLOAD\020\002\022\037\n\033USE_TYPE_USE_AS_SCREEN" +
      "SAVER\020\003\022\035\n\031USE_TYPE_ON_DEMAND_STREAM\020\004\022\033" +
      "\n\027USE_TYPE_USE_AS_KARAOKE\020\005\022#\n\037USE_TYPE_" +
      "USE_FOR_IDENTIFICATION\020\006\022\034\n\030USE_TYPE_AS_" +
      "PER_CONTRACT\020\007\022\022\n\016USE_TYPE_PRINT\020\010\022%\n!US" +
      "E_TYPE_PERFORM_AS_MUSIC_ON_HOLD\020\t\022\033\n\027USE" +
      "_TYPE_PLAY_IN_PUBLIC\020\n\022\024\n\020USE_TYPE_UNKNO" +
      "WN\020\013\022\"\n\036USE_TYPE_DUB_FOR_ADVERTISEMENT\020\014" +
      "\022\026\n\022USE_TYPE_SIMULCAST\020\r\022\036\n\032USE_TYPE_USE" +
      "_AS_ALERT_TONE\020\016\022\023\n\017USE_TYPE_STREAM\020\017\022\031\n" +
      "\025USE_TYPE_USER_DEFINED\020\020\022\031\n\025USE_TYPE_PRI" +
      "VATE_COPY\020\021\022!\n\035USE_TYPE_EXTRACT_FOR_INTE" +
      "RNET\020\022\022!\n\035USE_TYPE_USE_AS_RINGBACK_TONE\020" +
      "\023\022!\n\035USE_TYPE_USE_AS_RINGBACK_TUNE\020\024\022\034\n\030" +
      "USE_TYPE_USE_AS_RINGTONE\020\025\022&\n\"USE_TYPE_C" +
      "ONTENT_INFLUENCED_STREAM\020\026\022\036\n\032USE_TYPE_P" +
      "ERFORM_IN_PUBLIC\020\027\022\037\n\033USE_TYPE_PERMANENT" +
      "_DOWNLOAD\020\030\022\"\n\036USE_TYPE_DUB_FOR_MUSIC_ON" +
      "_HOLD\020\031\022\022\n\016USE_TYPE_CABLE\020\032\022\036\n\032USE_TYPE_" +
      "TETHERED_DOWNLOAD\020\033\022\036\n\032USE_TYPE_USE_AS_V" +
      "OICE_MAIL\020\034\022*\n&USE_TYPE_USE_IN_MOBILE_PH" +
      "ONE_MESSAGING\020\035\022/\n+USE_TYPE_USER_MAKE_AV" +
      "AILABLE_LABEL_PROVIDED\020\036\022.\n*USE_TYPE_USE" +
      "R_MAKE_AVAILABLE_USER_PROVIDED\020\037\022\020\n\014USE_" +
      "TYPE_DUB\020 \022\034\n\030USE_TYPE_USE_AS_RINGTUNE\020!" +
      "\022\026\n\022USE_TYPE_BROADCAST\020\"\022%\n!USE_TYPE_DUB" +
      "_FOR_LIVE_PERFORMANCE\020#\022\024\n\020USE_TYPE_WEBC" +
      "AST\020$\022\025\n\021USE_TYPE_DOWNLOAD\020%\022#\n\037USE_TYPE" +
      "_NON_INTERACTIVE_STREAM\020&\022#\n\037USE_TYPE_US" +
      "E_IN_PHONE_LISTENING\020\'\022\020\n\014USE_TYPE_USE\020(" +
      "\022\025\n\021USE_TYPE_PLAYBACK\020)\022\030\n\024USE_TYPE_DUB_" +
      "FOR_T_V\020*\022(\n$USE_TYPE_PERFORM_IN_LIVE_PE" +
      "RFORMANCE\020+\022\024\n\020USE_TYPE_PODCAST\020,\022#\n\037USE" +
      "_TYPE_TIME_INFLUENCED_STREAM\020-\022!\n\035USE_TY" +
      "PE_CONDITIONAL_DOWNLOAD\020.\022\033\n\027USE_TYPE_DU" +
      "B_FOR_MOVIES\020/\022\'\n#USE_TYPE_DUB_FOR_PUBLI" +
      "C_PERFORMANCE\0200\022\035\n\031USE_TYPE_USE_AS_WALLP" +
      "APER\0201\022\032\n\026USE_TYPE_USE_AS_DEVICE\0202\022\027\n\023US" +
      "E_TYPE_NARROWCAST\0203\022)\n%USE_TYPE_PURCHASE" +
      "_AS_PHYSICAL_PRODUCT\0204\022\024\n\020USE_TYPE_DISPL" +
      "AY\0205\022\021\n\rUSE_TYPE_RENT\0206*\344\017\n\013UseType_ERN\022" +
      "!\n\035USE_TYPE__E_R_N_DUB_FOR_RADIO\020\000\022\033\n\027US" +
      "E_TYPE__E_R_N_PERFORM\020\001\022\"\n\036USE_TYPE__E_R" +
      "_N_KIOSK_DOWNLOAD\020\002\022&\n\"USE_TYPE__E_R_N_U" +
      "SE_AS_SCREENSAVER\020\003\022$\n USE_TYPE__E_R_N_O" +
      "N_DEMAND_STREAM\020\004\022\"\n\036USE_TYPE__E_R_N_USE" +
      "_AS_KARAOKE\020\005\022*\n&USE_TYPE__E_R_N_USE_FOR" +
      "_IDENTIFICATION\020\006\022\031\n\025USE_TYPE__E_R_N_PRI" +
      "NT\020\007\022,\n(USE_TYPE__E_R_N_PERFORM_AS_MUSIC" +
      "_ON_HOLD\020\010\022\"\n\036USE_TYPE__E_R_N_PLAY_IN_PU" +
      "BLIC\020\t\022)\n%USE_TYPE__E_R_N_DUB_FOR_ADVERT" +
      "ISEMENT\020\n\022\035\n\031USE_TYPE__E_R_N_SIMULCAST\020\013" +
      "\022%\n!USE_TYPE__E_R_N_USE_AS_ALERT_TONE\020\014\022" +
      "\032\n\026USE_TYPE__E_R_N_STREAM\020\r\022 \n\034USE_TYPE_" +
      "_E_R_N_USER_DEFINED\020\016\022 \n\034USE_TYPE__E_R_N" +
      "_PRIVATE_COPY\020\017\022(\n$USE_TYPE__E_R_N_EXTRA" +
      "CT_FOR_INTERNET\020\020\022(\n$USE_TYPE__E_R_N_USE" +
      "_AS_RINGBACK_TONE\020\021\022(\n$USE_TYPE__E_R_N_U" +
      "SE_AS_RINGBACK_TUNE\020\022\022#\n\037USE_TYPE__E_R_N" +
      "_USE_AS_RINGTONE\020\023\022-\n)USE_TYPE__E_R_N_CO" +
      "NTENT_INFLUENCED_STREAM\020\024\022%\n!USE_TYPE__E" +
      "_R_N_PERFORM_IN_PUBLIC\020\025\022&\n\"USE_TYPE__E_" +
      "R_N_PERMANENT_DOWNLOAD\020\026\022)\n%USE_TYPE__E_" +
      "R_N_DUB_FOR_MUSIC_ON_HOLD\020\027\022\031\n\025USE_TYPE_" +
      "_E_R_N_CABLE\020\030\022%\n!USE_TYPE__E_R_N_TETHER" +
      "ED_DOWNLOAD\020\031\022%\n!USE_TYPE__E_R_N_USE_AS_" +
      "VOICE_MAIL\020\032\0221\n-USE_TYPE__E_R_N_USE_IN_M" +
      "OBILE_PHONE_MESSAGING\020\033\0226\n2USE_TYPE__E_R" +
      "_N_USER_MAKE_AVAILABLE_LABEL_PROVIDED\020\034\022" +
      "5\n1USE_TYPE__E_R_N_USER_MAKE_AVAILABLE_U" +
      "SER_PROVIDED\020\035\022\027\n\023USE_TYPE__E_R_N_DUB\020\036\022" +
      "#\n\037USE_TYPE__E_R_N_USE_AS_RINGTUNE\020\037\022\035\n\031" +
      "USE_TYPE__E_R_N_BROADCAST\020 \022,\n(USE_TYPE_" +
      "_E_R_N_DUB_FOR_LIVE_PERFORMANCE\020!\022\033\n\027USE" +
      "_TYPE__E_R_N_WEBCAST\020\"\022\034\n\030USE_TYPE__E_R_" +
      "N_DOWNLOAD\020#\022*\n&USE_TYPE__E_R_N_NON_INTE" +
      "RACTIVE_STREAM\020$\022*\n&USE_TYPE__E_R_N_USE_" +
      "IN_PHONE_LISTENING\020%\022\027\n\023USE_TYPE__E_R_N_" +
      "USE\020&\022\034\n\030USE_TYPE__E_R_N_PLAYBACK\020\'\022\037\n\033U" +
      "SE_TYPE__E_R_N_DUB_FOR_T_V\020(\022/\n+USE_TYPE" +
      "__E_R_N_PERFORM_IN_LIVE_PERFORMANCE\020)\022\033\n" +
      "\027USE_TYPE__E_R_N_PODCAST\020*\022*\n&USE_TYPE__" +
      "E_R_N_TIME_INFLUENCED_STREAM\020+\022(\n$USE_TY" +
      "PE__E_R_N_CONDITIONAL_DOWNLOAD\020,\022\"\n\036USE_" +
      "TYPE__E_R_N_DUB_FOR_MOVIES\020-\022.\n*USE_TYPE" +
      "__E_R_N_DUB_FOR_PUBLIC_PERFORMANCE\020.\022$\n " +
      "USE_TYPE__E_R_N_USE_AS_WALLPAPER\020/\022!\n\035US" +
      "E_TYPE__E_R_N_USE_AS_DEVICE\0200\022\036\n\032USE_TYP" +
      "E__E_R_N_NARROWCAST\0201\0220\n,USE_TYPE__E_R_N" +
      "_PURCHASE_AS_PHYSICAL_PRODUCT\0202\022\033\n\027USE_T" +
      "YPE__E_R_N_DISPLAY\0203\022\030\n\024USE_TYPE__E_R_N_" +
      "RENT\0204*\273\001\n\014UseType_MWNL\022(\n$USE_TYPE__M_W" +
      "_N_L_PERMANENT_DOWNLOAD\020\000\022%\n!USE_TYPE__M" +
      "_W_N_L_USE_AS_RINGTONE\020\001\0222\n.USE_TYPE__M_" +
      "W_N_L_PURCHASE_AS_PHYSICAL_PRODUCT\020\002\022&\n\"" +
      "USE_TYPE__M_W_N_L_ON_DEMAND_STREAM\020\003*\277\020\n" +
      "\013UseType_RDR\022\027\n\023USE_TYPE__R_D_R_ALL\020\000\022!\n" +
      "\035USE_TYPE__R_D_R_DUB_FOR_RADIO\020\001\022\033\n\027USE_" +
      "TYPE__R_D_R_PERFORM\020\002\022\"\n\036USE_TYPE__R_D_R" +
      "_KIOSK_DOWNLOAD\020\003\022&\n\"USE_TYPE__R_D_R_USE" +
      "_AS_SCREENSAVER\020\004\022$\n USE_TYPE__R_D_R_ON_" +
      "DEMAND_STREAM\020\005\022\"\n\036USE_TYPE__R_D_R_USE_A" +
      "S_KARAOKE\020\006\022*\n&USE_TYPE__R_D_R_USE_FOR_I" +
      "DENTIFICATION\020\007\022#\n\037USE_TYPE__R_D_R_AS_PE" +
      "R_CONTRACT\020\010\022\031\n\025USE_TYPE__R_D_R_PRINT\020\t\022" +
      ",\n(USE_TYPE__R_D_R_PERFORM_AS_MUSIC_ON_H" +
      "OLD\020\n\022\"\n\036USE_TYPE__R_D_R_PLAY_IN_PUBLIC\020" +
      "\013\022\033\n\027USE_TYPE__R_D_R_UNKNOWN\020\014\022)\n%USE_TY" +
      "PE__R_D_R_DUB_FOR_ADVERTISEMENT\020\r\022\035\n\031USE" +
      "_TYPE__R_D_R_SIMULCAST\020\016\022%\n!USE_TYPE__R_" +
      "D_R_USE_AS_ALERT_TONE\020\017\022\032\n\026USE_TYPE__R_D" +
      "_R_STREAM\020\020\022 \n\034USE_TYPE__R_D_R_USER_DEFI" +
      "NED\020\021\022 \n\034USE_TYPE__R_D_R_PRIVATE_COPY\020\022\022" +
      "(\n$USE_TYPE__R_D_R_EXTRACT_FOR_INTERNET\020" +
      "\023\022(\n$USE_TYPE__R_D_R_USE_AS_RINGBACK_TON" +
      "E\020\024\022(\n$USE_TYPE__R_D_R_USE_AS_RINGBACK_T" +
      "UNE\020\025\022#\n\037USE_TYPE__R_D_R_USE_AS_RINGTONE" +
      "\020\026\022-\n)USE_TYPE__R_D_R_CONTENT_INFLUENCED" +
      "_STREAM\020\027\022%\n!USE_TYPE__R_D_R_PERFORM_IN_" +
      "PUBLIC\020\030\022&\n\"USE_TYPE__R_D_R_PERMANENT_DO" +
      "WNLOAD\020\031\022)\n%USE_TYPE__R_D_R_DUB_FOR_MUSI" +
      "C_ON_HOLD\020\032\022\031\n\025USE_TYPE__R_D_R_CABLE\020\033\022%" +
      "\n!USE_TYPE__R_D_R_TETHERED_DOWNLOAD\020\034\022%\n" +
      "!USE_TYPE__R_D_R_USE_AS_VOICE_MAIL\020\035\0221\n-" +
      "USE_TYPE__R_D_R_USE_IN_MOBILE_PHONE_MESS" +
      "AGING\020\036\0226\n2USE_TYPE__R_D_R_USER_MAKE_AVA" +
      "ILABLE_LABEL_PROVIDED\020\037\0225\n1USE_TYPE__R_D" +
      "_R_USER_MAKE_AVAILABLE_USER_PROVIDED\020 \022\027" +
      "\n\023USE_TYPE__R_D_R_DUB\020!\022#\n\037USE_TYPE__R_D" +
      "_R_USE_AS_RINGTUNE\020\"\022\035\n\031USE_TYPE__R_D_R_" +
      "BROADCAST\020#\022,\n(USE_TYPE__R_D_R_DUB_FOR_L" +
      "IVE_PERFORMANCE\020$\022\033\n\027USE_TYPE__R_D_R_WEB" +
      "CAST\020%\022\034\n\030USE_TYPE__R_D_R_DOWNLOAD\020&\022*\n&" +
      "USE_TYPE__R_D_R_NON_INTERACTIVE_STREAM\020\'" +
      "\022*\n&USE_TYPE__R_D_R_USE_IN_PHONE_LISTENI" +
      "NG\020(\022\027\n\023USE_TYPE__R_D_R_USE\020)\022\034\n\030USE_TYP" +
      "E__R_D_R_PLAYBACK\020*\022\037\n\033USE_TYPE__R_D_R_D" +
      "UB_FOR_T_V\020+\022/\n+USE_TYPE__R_D_R_PERFORM_" +
      "IN_LIVE_PERFORMANCE\020,\022\033\n\027USE_TYPE__R_D_R" +
      "_PODCAST\020-\022*\n&USE_TYPE__R_D_R_TIME_INFLU" +
      "ENCED_STREAM\020.\022(\n$USE_TYPE__R_D_R_CONDIT" +
      "IONAL_DOWNLOAD\020/\022\"\n\036USE_TYPE__R_D_R_DUB_" +
      "FOR_MOVIES\0200\022.\n*USE_TYPE__R_D_R_DUB_FOR_" +
      "PUBLIC_PERFORMANCE\0201\022$\n USE_TYPE__R_D_R_" +
      "USE_AS_WALLPAPER\0202\022!\n\035USE_TYPE__R_D_R_US" +
      "E_AS_DEVICE\0203\022\036\n\032USE_TYPE__R_D_R_NARROWC" +
      "AST\0204\0220\n,USE_TYPE__R_D_R_PURCHASE_AS_PHY" +
      "SICAL_PRODUCT\0205\022\033\n\027USE_TYPE__R_D_R_DISPL" +
      "AY\0206\022\030\n\024USE_TYPE__R_D_R_RENT\0207*\306\004\n\021UserI" +
      "nterfaceType\022\037\n\033USER_INTERFACE_TYPE_JUKE" +
      "BOX\020\000\022&\n\"USER_INTERFACE_TYPE_SMART_SPEAK" +
      "ERS\020\001\022-\n)USER_INTERFACE_TYPE_LOCAL_STORA" +
      "GE_JUKEBOX\020\002\022.\n*USER_INTERFACE_TYPE_REMO" +
      "TE_STORAGE_JUKEBOX\020\003\022(\n$USER_INTERFACE_T" +
      "YPE_CONNECTED_DEVICE\020\004\022$\n USER_INTERFACE" +
      "_TYPE_GAME_CONSOLE\020\005\022\'\n#USER_INTERFACE_T" +
      "YPE_AS_PER_CONTRACT\020\006\022-\n)USER_INTERFACE_" +
      "TYPE_PHYSICAL_MEDIA_WRITER\020\007\022)\n%USER_INT" +
      "ERFACE_TYPE_PERSONAL_COMPUTER\020\010\022\037\n\033USER_" +
      "INTERFACE_TYPE_UNKNOWN\020\t\022\'\n#USER_INTERFA" +
      "CE_TYPE_KARAOKE_MACHINE\020\n\022\'\n#USER_INTERF" +
      "ACE_TYPE_PORTABLE_DEVICE\020\013\022\035\n\031USER_INTER",
      "FACE_TYPE_KIOSK\020\014\022$\n USER_INTERFACE_TYPE" +
      "_USER_DEFINED\020\r*\324\004\n\025UserInterfaceType_ER" +
      "N\022&\n\"USER_INTERFACE_TYPE__E_R_N_JUKEBOX\020" +
      "\000\0224\n0USER_INTERFACE_TYPE__E_R_N_PHYSICAL" +
      "_MEDIA_WRITER\020\001\0220\n,USER_INTERFACE_TYPE__" +
      "E_R_N_PERSONAL_COMPUTER\020\002\022.\n*USER_INTERF" +
      "ACE_TYPE__E_R_N_KARAOKE_MACHINE\020\003\022.\n*USE" +
      "R_INTERFACE_TYPE__E_R_N_PORTABLE_DEVICE\020" +
      "\004\022-\n)USER_INTERFACE_TYPE__E_R_N_SMART_SP" +
      "EAKERS\020\005\022$\n USER_INTERFACE_TYPE__E_R_N_K" +
      "IOSK\020\006\0224\n0USER_INTERFACE_TYPE__E_R_N_LOC" +
      "AL_STORAGE_JUKEBOX\020\007\0225\n1USER_INTERFACE_T" +
      "YPE__E_R_N_REMOTE_STORAGE_JUKEBOX\020\010\022+\n\'U" +
      "SER_INTERFACE_TYPE__E_R_N_USER_DEFINED\020\t" +
      "\022/\n+USER_INTERFACE_TYPE__E_R_N_CONNECTED" +
      "_DEVICE\020\n\022+\n\'USER_INTERFACE_TYPE__E_R_N_" +
      "GAME_CONSOLE\020\013*\300\004\n\013VersionType\022\036\n\032VERSIO" +
      "N_TYPE_ALBUM_VERSION\020\000\022#\n\037VERSION_TYPE_A" +
      "_CAPPELLA_VERSION\020\001\022\037\n\033VERSION_TYPE_EDIT" +
      "ED_VERSION\020\002\022%\n!VERSION_TYPE_INSTRUMENTA" +
      "L_VERSION\020\003\022$\n VERSION_TYPE_ALTERNATIVE_" +
      "VERSION\020\004\022\035\n\031VERSION_TYPE_MONO_VERSION\020\005" +
      "\022 \n\034VERSION_TYPE_KARAOKE_VERSION\020\006\022\035\n\031VE" +
      "RSION_TYPE_LIVE_VERSION\020\007\022\037\n\033VERSION_TYP" +
      "E_STEREO_VERSION\020\010\022\035\n\031VERSION_TYPE_DEMO_" +
      "VERSION\020\t\022 \n\034VERSION_TYPE_SESSION_VERSIO" +
      "N\020\n\022\037\n\033VERSION_TYPE_SINGLE_VERSION\020\013\022\035\n\031" +
      "VERSION_TYPE_USER_DEFINED\020\014\022\036\n\032VERSION_T" +
      "YPE_RADIO_VERSION\020\r\022\036\n\032VERSION_TYPE_REMI" +
      "X_VERSION\020\016\022\036\n\032VERSION_TYPE_CLEAN_VERSIO" +
      "N\020\017\022\034\n\030VERSION_TYPE_MIX_VERSION\020\020*\247\003\n\016Vi" +
      "deoCodecType\022&\n\"VIDEO_CODEC_TYPE_M_P_E_G" +
      "__MINUS__4\020\000\022\037\n\033VIDEO_CODEC_TYPE_QUICK_T" +
      "IME\020\001\022\032\n\026VIDEO_CODEC_TYPE_W_M_V\020\002\022\036\n\032VID" +
      "EO_CODEC_TYPE_SHOCKWAVE\020\003\022\034\n\030VIDEO_CODEC" +
      "_TYPE_UNKNOWN\020\004\022 \n\034VIDEO_CODEC_TYPE_H__D" +
      "OT__263\020\005\022&\n\"VIDEO_CODEC_TYPE_M_P_E_G__M" +
      "INUS__1\020\006\022&\n\"VIDEO_CODEC_TYPE_M_P_E_G__M" +
      "INUS__2\020\007\022\037\n\033VIDEO_CODEC_TYPE_REAL_VIDEO" +
      "\020\010\022 \n\034VIDEO_CODEC_TYPE_H__DOT__261\020\t\022!\n\035" +
      "VIDEO_CODEC_TYPE_USER_DEFINED\020\n\022\032\n\026VIDEO" +
      "_CODEC_TYPE_A_V_C\020\013*\227\001\n\023VideoDefinitionT" +
      "ype\022-\n)VIDEO_DEFINITION_TYPE_STANDARD_DE" +
      "FINITION\020\000\022&\n\"VIDEO_DEFINITION_TYPE_USER" +
      "_DEFINED\020\001\022)\n%VIDEO_DEFINITION_TYPE_HIGH" +
      "_DEFINITION\020\002*\262\021\n\tVideoType\022\036\n\032VIDEO_TYP" +
      "E_READALONG_VIDEO\020\000\022\033\n\027VIDEO_TYPE_COLUMN" +
      "_VIDEO\020\001\022\037\n\033VIDEO_TYPE_LIVE_EVENT_VIDEO\020" +
      "\002\022/\n+VIDEO_TYPE_NON_MUSICAL_WORK_READALO" +
      "NG_VIDEO\020\003\022\031\n\025VIDEO_TYPE_TV_PROGRAM\020\004\022 \n" +
      "\034VIDEO_TYPE_EDUCATIONAL_VIDEO\020\005\0220\n,VIDEO" +
      "_TYPE_NON_SERIAL_AUDIO_VISUAL_RECORDING\020" +
      "\006\022\033\n\027VIDEO_TYPE_WEB_RESOURCE\020\007\022\031\n\025VIDEO_" +
      "TYPE_SHORT_FILM\020\010\022\030\n\024VIDEO_TYPE_INTERVIE" +
      "W\020\t\022 \n\034VIDEO_TYPE_MUSICAL_WORK_CLIP\020\n\022$\n" +
      " VIDEO_TYPE_REALITY_TV_SHOW_VIDEO\020\013\022$\n V" +
      "IDEO_TYPE_THEATRICAL_WORK_VIDEO\020\014\022#\n\037VID" +
      "EO_TYPE_INTERACTIVE_RESOURCE\020\r\022\033\n\027VIDEO_" +
      "TYPE_FEATURE_FILM\020\016\022\036\n\032VIDEO_TYPE_ADVICE" +
      "_MAGAZINE\020\017\022\024\n\020VIDEO_TYPE_SPORT\020\020\022\026\n\022VID" +
      "EO_TYPE_UNKNOWN\020\021\022\031\n\025VIDEO_TYPE_VIDEO_CL" +
      "IP\020\022\022\035\n\031VIDEO_TYPE_CHILDRENS_FILM\020\023\022\'\n#V" +
      "IDEO_TYPE_NON_MUSICAL_WORK_TRAILER\020\024\022\036\n\032" +
      "VIDEO_TYPE_COLORIZED_VIDEO\020\025\022\034\n\030VIDEO_TY" +
      "PE_TV_SHOW_VIDEO\020\026\022\033\n\027VIDEO_TYPE_USER_DE" +
      "FINED\020\027\022\031\n\025VIDEO_TYPE_VIDEO_STEM\020\030\022$\n VI" +
      "DEO_TYPE_NON_MUSICAL_WORK_CLIP\020\031\022&\n\"VIDE" +
      "O_TYPE_DRAMATICO_MUSICAL_VIDEO\020\032\022\034\n\030VIDE" +
      "O_TYPE_ADULT_CONTENT\020\033\022\026\n\022VIDEO_TYPE_KAR" +
      "AOKE\020\034\022,\n(VIDEO_TYPE_SERIAL_AUDIO_VISUAL" +
      "_RECORDING\020\035\022\026\n\022VIDEO_TYPE_TV_FILM\020\036\022\024\n\020" +
      "VIDEO_TYPE_DRAMA\020\037\022/\n+VIDEO_TYPE_LONG_FO" +
      "RM_NON_MUSICAL_WORK_VIDEO\020 \022\"\n\036VIDEO_TYP" +
      "E_ADVERTISEMENT_VIDEO\020!\022\032\n\026VIDEO_TYPE_PE" +
      "RFORMANCE\020\"\022\026\n\022VIDEO_TYPE_FICTION\020#\022\033\n\027V" +
      "IDEO_TYPE_SILENT_VIDEO\020$\022\033\n\027VIDEO_TYPE_S" +
      "KETCH_VIDEO\020%\022,\n(VIDEO_TYPE_SHORT_FORM_M" +
      "USICAL_WORK_VIDEO\020&\022+\n\'VIDEO_TYPE_MUSICA" +
      "L_WORK_READALONG_VIDEO\020\'\022\032\n\026VIDEO_TYPE_S" +
      "OAP_SITCOM\020(\022\032\n\026VIDEO_TYPE_LYRIC_VIDEO\020)" +
      "\022\033\n\027VIDEO_TYPE_BALLET_VIDEO\020*\022\032\n\026VIDEO_T" +
      "YPE_DOCUMENTARY\020+\022$\n VIDEO_TYPE_BLACK_AN" +
      "D_WHITE_VIDEO\020,\022)\n%VIDEO_TYPE_MUSICAL_WO" +
      "RK_VIDEO_CHAPTER\020-\022\023\n\017VIDEO_TYPE_NEWS\020.\022" +
      " \n\034VIDEO_TYPE_BEHIND_THE_SCENES\020/\022\023\n\017VID" +
      "EO_TYPE_MENU\0200\022\037\n\033VIDEO_TYPE_MULTIMEDIA_" +
      "VIDEO\0201\022\025\n\021VIDEO_TYPE_SEASON\0202\022-\n)VIDEO_" +
      "TYPE_NON_MUSICAL_WORK_VIDEO_CHAPTER\0203\022\034\n" +
      "\030VIDEO_TYPE_VIDEO_CHAPTER\0204\022\032\n\026VIDEO_TYP" +
      "E_OPERA_VIDEO\0205\022\033\n\027VIDEO_TYPE_VIDEO_REPO" +
      "RT\0206\0220\n,VIDEO_TYPE_SHORT_FORM_NON_MUSICA" +
      "L_WORK_VIDEO\0207\022\026\n\022VIDEO_TYPE_EPISODE\0208\022\025" +
      "\n\021VIDEO_TYPE_SERIES\0209\022\035\n\031VIDEO_TYPE_CORP" +
      "ORATE_FILM\020:\022\026\n\022VIDEO_TYPE_CREDITS\020;\022+\n\'" +
      "VIDEO_TYPE_LONG_FORM_MUSICAL_WORK_VIDEO\020" +
      "<\022\030\n\024VIDEO_TYPE_ANIMATION\020=\022\033\n\027VIDEO_TYP" +
      "E_CONCERT_CLIP\020>\022 \n\034VIDEO_TYPE_INFOMERCI" +
      "AL_VIDEO\020?\022\034\n\030VIDEO_TYPE_TRAILER_VIDEO\020@" +
      "\022#\n\037VIDEO_TYPE_MUSICAL_WORK_TRAILER\020A\022\034\n" +
      "\030VIDEO_TYPE_CONCERT_VIDEO\020B\022\027\n\023VIDEO_TYP" +
      "E_MAGAZINE\020C\022\034\n\030VIDEO_TYPE_SPECIAL_EVENT" +
      "\020D*\350\023\n\016VideoType_DSRF\022\'\n#VIDEO_TYPE__D_S" +
      "_R_F_READALONG_VIDEO\020\000\022$\n VIDEO_TYPE__D_" +
      "S_R_F_COLUMN_VIDEO\020\001\022(\n$VIDEO_TYPE__D_S_" +
      "R_F_LIVE_EVENT_VIDEO\020\002\0228\n4VIDEO_TYPE__D_" +
      "S_R_F_NON_MUSICAL_WORK_READALONG_VIDEO\020\003" +
      "\022\"\n\036VIDEO_TYPE__D_S_R_F_TV_PROGRAM\020\004\022)\n%" +
      "VIDEO_TYPE__D_S_R_F_EDUCATIONAL_VIDEO\020\005\022" +
      "9\n5VIDEO_TYPE__D_S_R_F_NON_SERIAL_AUDIO_" +
      "VISUAL_RECORDING\020\006\022\"\n\036VIDEO_TYPE__D_S_R_" +
      "F_SHORT_FILM\020\007\022!\n\035VIDEO_TYPE__D_S_R_F_IN" +
      "TERVIEW\020\010\022)\n%VIDEO_TYPE__D_S_R_F_MUSICAL" +
      "_WORK_CLIP\020\t\022-\n)VIDEO_TYPE__D_S_R_F_REAL" +
      "ITY_TV_SHOW_VIDEO\020\n\022-\n)VIDEO_TYPE__D_S_R" +
      "_F_THEATRICAL_WORK_VIDEO\020\013\022$\n VIDEO_TYPE" +
      "__D_S_R_F_FEATURE_FILM\020\014\022\'\n#VIDEO_TYPE__" +
      "D_S_R_F_ADVICE_MAGAZINE\020\r\022\035\n\031VIDEO_TYPE_" +
      "_D_S_R_F_SPORT\020\016\022\037\n\033VIDEO_TYPE__D_S_R_F_" +
      "UNKNOWN\020\017\022\"\n\036VIDEO_TYPE__D_S_R_F_VIDEO_C" +
      "LIP\020\020\022&\n\"VIDEO_TYPE__D_S_R_F_CHILDRENS_F" +
      "ILM\020\021\0220\n,VIDEO_TYPE__D_S_R_F_NON_MUSICAL" +
      "_WORK_TRAILER\020\022\022\'\n#VIDEO_TYPE__D_S_R_F_C" +
      "OLORIZED_VIDEO\020\023\022%\n!VIDEO_TYPE__D_S_R_F_" +
      "TV_SHOW_VIDEO\020\024\022\"\n\036VIDEO_TYPE__D_S_R_F_V" +
      "IDEO_STEM\020\025\022-\n)VIDEO_TYPE__D_S_R_F_NON_M" +
      "USICAL_WORK_CLIP\020\026\022%\n!VIDEO_TYPE__D_S_R_" +
      "F_ADULT_CONTENT\020\027\022\037\n\033VIDEO_TYPE__D_S_R_F" +
      "_KARAOKE\020\030\0225\n1VIDEO_TYPE__D_S_R_F_SERIAL" +
      "_AUDIO_VISUAL_RECORDING\020\031\022\037\n\033VIDEO_TYPE_" +
      "_D_S_R_F_TV_FILM\020\032\0228\n4VIDEO_TYPE__D_S_R_" +
      "F_LONG_FORM_NON_MUSICAL_WORK_VIDEO\020\033\022+\n\'" +
      "VIDEO_TYPE__D_S_R_F_ADVERTISEMENT_VIDEO\020" +
      "\034\022#\n\037VIDEO_TYPE__D_S_R_F_PERFORMANCE\020\035\022\037" +
      "\n\033VIDEO_TYPE__D_S_R_F_FICTION\020\036\022$\n VIDEO" +
      "_TYPE__D_S_R_F_SILENT_VIDEO\020\037\022$\n VIDEO_T" +
      "YPE__D_S_R_F_SKETCH_VIDEO\020 \0224\n0VIDEO_TYP" +
      "E__D_S_R_F_MUSICAL_WORK_READALONG_VIDEO\020" +
      "!\022#\n\037VIDEO_TYPE__D_S_R_F_SOAP_SITCOM\020\"\022#" +
      "\n\037VIDEO_TYPE__D_S_R_F_LYRIC_VIDEO\020#\022$\n V" +
      "IDEO_TYPE__D_S_R_F_BALLET_VIDEO\020$\022#\n\037VID" +
      "EO_TYPE__D_S_R_F_DOCUMENTARY\020%\022-\n)VIDEO_" +
      "TYPE__D_S_R_F_BLACK_AND_WHITE_VIDEO\020&\0222\n" +
      ".VIDEO_TYPE__D_S_R_F_MUSICAL_WORK_VIDEO_" +
      "CHAPTER\020\'\022\034\n\030VIDEO_TYPE__D_S_R_F_NEWS\020(\022" +
      ")\n%VIDEO_TYPE__D_S_R_F_BEHIND_THE_SCENES" +
      "\020)\022\034\n\030VIDEO_TYPE__D_S_R_F_MENU\020*\022(\n$VIDE" +
      "O_TYPE__D_S_R_F_MULTIMEDIA_VIDEO\020+\022\036\n\032VI" +
      "DEO_TYPE__D_S_R_F_SEASON\020,\0226\n2VIDEO_TYPE" +
      "__D_S_R_F_NON_MUSICAL_WORK_VIDEO_CHAPTER" +
      "\020-\022%\n!VIDEO_TYPE__D_S_R_F_VIDEO_CHAPTER\020" +
      ".\022#\n\037VIDEO_TYPE__D_S_R_F_OPERA_VIDEO\020/\022$" +
      "\n VIDEO_TYPE__D_S_R_F_VIDEO_REPORT\0200\022\037\n\033" +
      "VIDEO_TYPE__D_S_R_F_EPISODE\0201\022\036\n\032VIDEO_T" +
      "YPE__D_S_R_F_SERIES\0202\022&\n\"VIDEO_TYPE__D_S" +
      "_R_F_CORPORATE_FILM\0203\022\037\n\033VIDEO_TYPE__D_S" +
      "_R_F_CREDITS\0204\0224\n0VIDEO_TYPE__D_S_R_F_LO" +
      "NG_FORM_MUSICAL_WORK_VIDEO\0205\022!\n\035VIDEO_TY" +
      "PE__D_S_R_F_ANIMATION\0206\022$\n VIDEO_TYPE__D" +
      "_S_R_F_CONCERT_CLIP\0207\022)\n%VIDEO_TYPE__D_S" +
      "_R_F_INFOMERCIAL_VIDEO\0208\022%\n!VIDEO_TYPE__" +
      "D_S_R_F_TRAILER_VIDEO\0209\022,\n(VIDEO_TYPE__D" +
      "_S_R_F_MUSICAL_WORK_TRAILER\020:\022%\n!VIDEO_T" +
      "YPE__D_S_R_F_CONCERT_VIDEO\020;\022 \n\034VIDEO_TY" +
      "PE__D_S_R_F_MAGAZINE\020<\022%\n!VIDEO_TYPE__D_" +
      "S_R_F_SPECIAL_EVENT\020=*\211\001\n\024VisualPercepti" +
      "onType\022%\n!VISUAL_PERCEPTION_TYPE_BACKGRO" +
      "UND\020\000\022\'\n#VISUAL_PERCEPTION_TYPE_USER_DEF" +
      "INED\020\001\022!\n\035VISUAL_PERCEPTION_TYPE_VISUAL\020" +
      "\002*\244\004\n\rVocalRegister\022\027\n\023VOCAL_REGISTER_BA" +
      "SS\020\000\022\034\n\030VOCAL_REGISTER_SOPRANINO\020\001\022 \n\034VO" +
      "CAL_REGISTER_VIOLA_PARADON\020\002\022\033\n\027VOCAL_RE" +
      "GISTER_CASTRATI\020\003\022\035\n\031VOCAL_REGISTER_CONT" +
      "RABASS\020\004\022 \n\034VOCAL_REGISTER_BASS_BARITONE" +
      "\020\005\022\032\n\026VOCAL_REGISTER_SOPRANO\020\006\022\032\n\026VOCAL_" +
      "REGISTER_PARADON\020\007\022\030\n\024VOCAL_REGISTER_TEN" +
      "OR\020\010\022\033\n\027VOCAL_REGISTER_FALSETTO\020\t\022\033\n\027VOC" +
      "AL_REGISTER_BARITONE\020\n\022\032\n\026VOCAL_REGISTER" +
      "_PICCOLO\020\013\022\031\n\025VOCAL_REGISTER_TREBLE\020\014\022\027\n" +
      "\023VOCAL_REGISTER_ALTO\020\r\022\034\n\030VOCAL_REGISTER" +
      "_CONTRALTO\020\016\022 \n\034VOCAL_REGISTER_MEZZO_SOP" +
      "RANO\020\017\022\037\n\033VOCAL_REGISTER_COUNTERTENOR\020\020\022" +
      "\037\n\033VOCAL_REGISTER_USER_DEFINED\020\021*[\n\tVoca" +
      "lType\022\024\n\020VOCAL_TYPE_VOCAL\020\000\022\033\n\027VOCAL_TYP" +
      "E_USER_DEFINED\020\001\022\033\n\027VOCAL_TYPE_INSTRUMEN" +
      "TAL\020\002*\237\002\n\024WorkRelationshipType\022)\n%WORK_R" +
      "ELATIONSHIP_TYPE_REIMAGINING_OF\020\000\0220\n,WOR" +
      "K_RELATIONSHIP_TYPE_BASIS_FOR_ARRANGEMEN" +
      "T\020\001\022)\n%WORK_RELATIONSHIP_TYPE_ARRANGEMEN" +
      "T_OF\020\002\022/\n+WORK_RELATIONSHIP_TYPE_MELODY_" +
      "BORROWED_FROM\020\003\022%\n!WORK_RELATIONSHIP_TYP" +
      "E_TAKEN_FROM\020\004\022\'\n#WORK_RELATIONSHIP_TYPE" +
      "_USER_DEFINED\020\005"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
