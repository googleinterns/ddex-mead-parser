/* Generated schema for mead, version 10 */

syntax = "proto2";
package mead10;

/* A Composite containing details of an absolute pitch. */
message mead_AbsolutePitch {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* The value of the absolute pitch of the A above middle C (aâ€™) in Hertz. */
	optional double value = 2;
}

/* A Composite containing details of a TerritoryCode. */
message mead_AllTerritoryCode {
/* A standard used for the TerritoryCode. This is represented in an XML schema as an XML Attribute. If this Attribute is not provided, it is assumed that the code is a TerritoryCode in accordance with ISO 3166-1 or 3166-2 standard (or Worldwide). */
	optional avs_TerritoryCodeTypeIncludingDeprecatedCodes identifier_type = 1;
	optional avs_AllTerritoryCode ext_value = 2;
}

/* A Composite containing details of an AlternativeTitle. */
message mead_AlternativeTitle {
/* The Language and script for the Elements of the Title as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* The Namespace of the TitleType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 3;
/* A SubTitle of the Title, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
	optional mead_TitleTextWithPronunciation sub_title = 4;
/* The text of the Title.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional mead_TitleTextWithPronunciation title_text = 5;
/* A Type of the Title which defines its origin or the function it fulfils in relation to a Creation. Note: A Title may fulfil more than one role. Example: 'Help' may be both the OriginalTitle and the DisplayTitle for the well-known Beatles song. This is represented in an XML schema as an XML Attribute. */
	optional avs_TitleType title_type = 6;
/* A UserDefined value of the TitleType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 7;
}

/* A Composite containing details of an Annotation, e.g. a Description or a Comment. */
message mead_Annotation {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* The text of the Annotation. */
	optional mead_TextWithFormat text = 2;
}

/* A Composite containing details of an artist type. */
message mead_ArtistType {
/* A Territory to which the artist type applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Composite containing details of an artist type value. */
	optional mead_ArtistTypeValue value = 3;
}

/* A Composite containing details of an artist type value. */
message mead_ArtistTypeValue {
/* The Namespace of the element. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the element. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ArtistType ext_value = 3;
}

/* A Composite containing details of a related Artist that was influenced or that was an influencer. */
message mead_ArtisticInfluence {
/* A Composite containing Description of the relationship. */
	repeated mead_TextWithFormat description = 1;
/* A Flag indicating whether the related Party is influenced by the current Party (=true) or not (=false). */
	optional bool is_influenced = 2;
/* A Flag indicating whether the related Party has influenced the current Party (=true) or not (=false). */
	optional bool is_influencer = 3;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 4;
/* A Composite containing details of a Party. */
	repeated mead_PartyWithNames party = 5;
/* A Composite containing details of a Release. */
	repeated mead_Release release = 6;
/* A Composite containing details of a Resource. */
	repeated mead_Resource resource = 7;
/* A Composite containing details of a Work. */
	repeated mead_Work work = 8;
}

/* A Composite containing details of an award. */
message mead_Award {
/* The Name or Category of the award. */
	optional mead_NameWithPronunciation award_name = 1;
/* A Composite containing details of the awarded Party. */
	optional mead_PartyWithNames awarded_party = 2;
/* A Composite containing details of the awarding body. */
	optional mead_PartyDescriptor awarding_body = 3;
/* A Comment on the award. */
	repeated mead_TextWithFormat comment = 4;
/* A Composite containing details of the Date and Place of the award (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional mead_EventDate date = 5;
/* A Flag indicating whether the award was won (=true) or whether it was a nomination for the award (=false). */
	optional bool is_winner = 6;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 7;
}

/* A Composite containing details of an award.Explanatory Note: This Composite is named AwardForParty to disambiguate it from the basic Award Composite. */
message mead_AwardForParty {
/* The Name or Category of the award. */
	optional mead_NameWithPronunciation award_name = 1;
/* A Composite containing details of the awarded Party. */
	optional mead_PartyWithNames awarded_party = 2;
/* A Composite containing details of an awarded Release. */
	optional mead_Release awarded_release = 3;
/* A Composite containing details of an awarded Resource. */
	optional mead_Resource awarded_resource = 4;
/* A Composite containing details of an awarded Work. */
	optional mead_Work awarded_work = 5;
/* A Composite containing details of the awarding body. */
	optional mead_PartyDescriptor awarding_body = 6;
/* A Comment on the award. */
	repeated mead_TextWithFormat comment = 7;
/* A Composite containing details of the Date and Place of the award (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional mead_EventDate date = 8;
/* A Flag indicating whether the award was won (=true) or whether it was a nomination for the award (=false). */
	optional bool is_winner = 9;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 10;
}

/* A Composite containing details of beats. */
message mead_BeatsPerMinute {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* A Composite containing details of a modulation. */
	repeated mead_Modulation modulation = 2;
/* The value of the beats per minute. */
	optional double value = 3;
}

/* A Composite containing details of a biography of a Party. */
message mead_Biography {
/* A Composite containing details of an Author of the biography. */
	repeated mead_PartyWithNames author = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Composite containing details of the biography text. */
	repeated mead_BiographyText text = 3;
}

/* A Composite containing details of the biography text. */
message mead_BiographyText {
/* A Territory to which the biography text applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The format of the biography text. This is represented in an XML schema as an XML Attribute. */
	optional avs_TextCodecType format = 2;
/* The Language and script for the Elements of the biography text as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* The Namespace of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 4;
/* A UserDefined value of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 5;
	optional string ext_value = 6;
}

/* A Composite containing details of a CatalogNumber. */
message mead_CatalogNumber {
/* The Namespace of the CatalogNumber. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a category. The Atom cagegory construct is defined in section 4.2.2 of the format spec. */
message mead_Category {
	repeated string any_attribute_value = 1;
/* The label. This is represented in an XML schema as an XML Attribute. */
	optional string label = 2;
/* The scheme. This is represented in an XML schema as an XML Attribute of type AnyURI. */
	optional string scheme = 3;
/* The term. This is represented in an XML schema as an XML Attribute. */
	optional string term = 4;
}

/* A Composite containing details of an entry in the charts. */
message mead_ChartEntry {
/* A Comment regarding the charts. */
	repeated mead_TextWithFormat comment = 1;
/* The Date of the chart entry (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional mead_ddex_IsoDate date = 2;
/* The Duration for which the Creation or the Party was in this position in the charts. */
	optional mead_Duration duration = 3;
/* The position in the charts. */
	optional int32 position = 4;
}

/* A Composite containing details of a chart name. */
message mead_ChartName {
/* The Language and script of the ChartName as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* The Name string.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional string name = 2;
/* The string describing the pronunciation. */
	repeated mead_Pronunciation pronunciation = 3;
}

/* A Composite containing details of parents, children and siblings of a Work that is a child. */
message mead_ChildWorkHierarchy {
/* A Composite containing details of parents, children and siblings of the Work. */
	repeated mead_ChildWorkHierarchy child = 1;
/* A Composite containing details of a form of the Work (e.g. Concerto, Aria, 12 bar blues, etc.). */
	optional mead_Form form = 2;
/* The Flag indicating whether the hierarchy level is complete (=true) or not (=false). */
	optional bool is_complete = 3;
/* The Flag indicating whether this element of the hierarchy is the Work for which the hierarchy is described (=true) or not (=false). */
	optional bool is_described_element = 4;
/* The number indicating the order of the Work in a group of Works. */
	optional int32 sequence_number = 5;
/* A Composite containing details of a MusicalWorkId. */
	optional mead_MusicalWorkId work_id = 6;
/* A Composite containing details of a Title of the Work. */
	repeated mead_WorkTitle work_title = 7;
}

/* A Composite containing details of a musical period. */
message mead_ClassicalPeriod {
/* A Territory to which the classical musical period applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* The value of the period. */
	optional mead_PeriodValue name = 3;
}

/* A Composite containing details of a commentary note. */
message mead_CommentaryNote {
/* A Territory to which the commentary note applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* An author of the commentary note. */
	repeated mead_PartyWithNames author = 2;
/* A type of the commentary note. */
	repeated mead_CommentaryNoteType commentary_note_type = 3;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 4;
/* A Composite containing the text of the commentary note. */
	repeated mead_TextWithoutTerritory text = 5;
}

/* A Composite containing details of a commentary note type. */
message mead_CommentaryNoteType {
/* The Namespace of the commentary note type. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the commentary note type. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_CommentaryNoteType ext_value = 3;
}

/* A Composite containing details of a content. The Atom content construct is defined in section 4.1.3 of the format spec. */
message mead_Content {
	repeated string any_attribute_value = 1;
	repeated string any_value = 2;
/* The source. This is represented in an XML schema as an XML Attribute of type AnyURI. */
	optional string src = 3;
/* The type. This is represented in an XML schema as an XML Attribute. */
	optional string type = 4;
}

/* A Composite containing details of a TerritoryCode. */
message mead_CurrentTerritoryCode {
/* A standard used for the TerritoryCode. This is represented in an XML schema as an XML Attribute. If this Attribute is not provided, it is assumed that the code is a TerritoryCode in accordance with ISO 3166-1 or 3166-2 standard (or Worldwide). */
	optional avs_TerritoryCodeType identifier_type = 1;
	optional avs_CurrentTerritoryCode ext_value = 2;
}

/* A Composite containing details of a dance and rhythm style. */
message mead_DanceAndRhythmStyle {
/* A Territory to which the dance and rhythm style applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing a Description of the dance and rhythm style. */
	repeated mead_TextWithoutTerritory description = 2;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 3;
/* A Composite containing details of a dance and rhythm style value. */
	optional mead_DanceAndRhythmStyleValue value = 4;
}

/* A Composite containing details of a dance and rhythm style value. */
message mead_DanceAndRhythmStyleValue {
/* The Namespace of the element. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the element. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_DanceAndRhythmStyle ext_value = 3;
}

/* A Composite containing details of a Date. */
message mead_Date {
/* The Flag indicating whether the reported Date is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 1;
	optional mead_ddex_IsoDate ext_value = 2;
}

/* A Composite containing details of a published. */
message mead_DateTime {
	repeated string any_attribute_value = 1;
	optional uint64 ext_value = 2;
}

/* A Composite containing details of a Recording of a Work. */
message mead_DerivedRecording {
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the related Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s) */
	optional mead_DisplayArtistNameWithDefault display_artist_name = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Type of the related Resource. */
	optional mead_RelatedResourceType related_resource_type = 3;
/* A Composite containing details of ResourceIds for the related Resource. */
	optional mead_ResourceId resource_id = 4;
/* A Composite containing details of a Title of the related Resource. */
	repeated mead_TitleWithPronunciation title = 5;
}

/* A Composite containing details of a HashSum and its governing algorithm.Explanatory Note: This Composite is named DetailedHashSum to disambiguate it from the basic HashSum Composite. */
message mead_DetailedHashSum {
/* A Composite containing details of the Type of HashSumAlgorithm governing the HashSum. */
	optional mead_HashSumAlgorithmType algorithm = 1;
/* The datatype of the HashSum. */
	optional avs_BinaryDataType data_type = 2;
/* The value of the HashSum. */
	optional string hash_sum_value = 3;
/* A parameter of the HashSumAlgorithm. */
	optional string parameter = 4;
/* The Identifier of the Version of the HashSumAlgorithm. */
	optional string version = 5;
}

/* A Composite containing details of a PartyId.Explanatory Note: This Composite is named DetailedPartyId to disambiguate it from the basic PartyId Composite. */
message mead_DetailedPartyId {
/* A CISAC Society Identifier, a CISAC standard Identifier for music rights societies. */
	optional string cisac_society_id = 1;
/* An Identifier of a Party according to the DdexPartyId standard DDEX-DPID. */
	optional string d_p_i_d = 2;
/* An International Performer Number, an IPDA Identifier. */
	optional string i_p_n = 3;
/* An International Standard Name Identifier, the ISO 27729 Standard Identifier for names. DDEX will enforce the syntax [0-9]{15}[X0-9] using XML Schema in the future. */
	optional string i_s_n_i = 4;
/* An Interested Party Identifier, a CISAC standard Identifier. An IpiNameNumber comprises 11 digits. */
	optional string ipi_name_number = 5;
/* A Composite containing details of a ProprietaryIdentifier of the Party. */
	repeated mead_ProprietaryId proprietary_id = 6;
}

/* A Composite containing details of a DisplayArtist of a Resource or Release. */
message mead_DisplayArtist {
/* An Identifier of the DisplayArtist according to the DdexPartyId standard DDEX-DPID. */
	optional string d_p_i_d = 1;
/* The Name of the DisplayArtist. */
	optional string display_artist_name = 2;
/* An International Performer Number, an IPDA Identifier, of the DisplayArtist. */
	optional string i_p_n = 3;
/* An International Standard Name Identifier, the ISO 27729 Standard Identifier for names, of the DisplayArtist. DDEX will enforce the syntax [0-9]{15}[X0-9] using XML Schema in the future. */
	optional string i_s_n_i = 4;
/* An Interested Party Identifier, a CISAC standard Identifier, of the DisplayArtist. An IpiNameNumber comprises 11 digits. */
	optional string ipi_name_number = 5;
/* A Composite containing details of a ProprietaryIdentifier of the DisplayArtist. */
	repeated mead_ProprietaryId proprietary_id = 6;
}

/* A Composite containing details of a DisplayArtistName.Explanatory Note: This Composite is named DisplayArtistNameWithDefault to disambiguate it from the basic DisplayArtistName Composite. */
message mead_DisplayArtistNameWithDefault {
/* A Territory to which the Name applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script of the Name as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	optional string ext_value = 4;
}

/* A Composite containing details of a DisplayArtistName.Explanatory Note: This Composite is named DisplayArtistNameWithPronunciation to disambiguate it from the basic DisplayArtistName Composite. */
message mead_DisplayArtistNameWithPronunciation {
/* The Name string.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional mead_DisplayArtistNameWithDefault name = 1;
/* The string describing the pronunciation. */
	repeated mead_Pronunciation pronunciation = 2;
}

/* A Composite containing details of a SubTitle.Explanatory Note: This Composite is named DisplaySubTitle to disambiguate it from the basic SubTitle Composite. */
message mead_DisplaySubTitle {
/* A Flag indicating whether the SubTitle is displayed in the Title (=true) or not (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_displayed_in_title = 1;
/* The Namespace of the SubTitleType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 2;
/* The string describing the pronunciation. */
	repeated mead_Pronunciation pronunciation = 3;
/* The number indicating the order of the SubTitle in a group of SubTitles. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 4;
/* A Type of the SubTitle which defines its origin or the function it fulfils. This is represented in an XML schema as an XML Attribute. */
	optional string sub_title_type = 5;
/* The Title string. */
	optional string title = 6;
/* A UserDefined value of the SubTitleType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 7;
}

/* A Composite containing details of a Title as the MessageSender suggests it should be shown to the Consumer. */
message mead_DisplayTitle {
/* A Territory to which the Title applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script for the Elements of the Title as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* A Composite containing details of a SubTitle of the Title, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
	repeated mead_DisplaySubTitle sub_title = 4;
/* The text of the Title.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional mead_TitleTextWithPronunciation title_text = 5;
}

/* A Composite containing details of an entry in the charts. */
message mead_Duration {
/* The Namespace of the UnitOfDuration. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* The unit of the Duration. This is represented in an XML schema as an XML Attribute. */
	optional avs_UnitOfDuration unit_of_duration = 2;
/* A UserDefined value of the UnitOfDuration. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 3;
	optional string ext_value = 4;
}

/* A Composite containing details of an entry. */
message mead_Entry {
/* A Composite containing details of a Party. This is either the only entity about which the relevant MeadMessage talks or the main one. */
	optional mead_Party party = 1;
/* A Composite containing details of a DDEX Release. This is either the only entity about which the relevant MeadMessage talks or the main one. */
	optional mead_Release release = 2;
/* A Composite containing details of a DDEX Resource. This is either the only entity about which the relevant MeadMessage talks or the main one. */
	optional mead_Resource resource = 3;
/* An Identifier of the subscription to which the Notification is a reply. */
	optional string subscription_id = 4;
/* A Composite containing details of a Work. This is either the only entity about which the relevant MeadMessage talks or the main one. */
	optional mead_Work work = 5;
	repeated string any_attribute_value = 6;
/* A Composite containing details of the Name, Identifier and Role(s) of an author of a Resource. */
	repeated mead_Person author = 7;
/* A Composite containing details of a category. */
	repeated mead_Category category = 8;
/* A Composite containing details of a content. */
	optional mead_Content content = 9;
/* A Composite containing details of the Name, Identifier and Role(s) of a contributor to a Resource. */
	repeated mead_Person contributor = 10;
/* A Composite containing details of an ID. */
	optional mead_Id id = 11;
/* A Composite containing details of a link. */
	repeated mead_Link link = 12;
/* A Composite containing details of a published. */
	optional mead_DateTime published = 13;
/* A Composite containing details of rights. */
	optional mead_Text rights = 14;
/* A Composite containing details of a source. */
	optional mead_Source source = 15;
/* A Composite containing details of a summary. */
	optional mead_Text summary = 16;
/* A Composite containing details of a title. The title should contain three pieces of information separated by a semicolon and a space character: (1) the DPID of the message sender (without dashes); (2) the subscription ID; and (3) the Date when the entry was added to the feed queue (in the ISO format yyyy-mm-dd). */
	optional mead_Text title = 17;
/* A Composite containing details of an update. */
	optional mead_DateTime updated = 18;
}

/* A Composite containing details of an epoch in a artist's career. */
message mead_Epoch {
/* A Territory to which the epoch applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Date that marks the end of the epoch. It can be represented as a calendar Year, Month or Day (in ISO 8601:2004 format: YYYY, YYYY-MM or YYYY-MM-DD). */
	optional mead_Date end_date = 2;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 3;
/* A Composite containing details of a related Artist. */
	repeated mead_PartyWithNames related_artist = 4;
/* A Composite containing details of a Creation (a Work, a Release or a Resource) that is part of the epoch. */
	repeated mead_RelatedCreation related_creation = 5;
/* The Date that marks the beginning of the epoch. It can be represented as a calendar Year, Month or Day (in ISO 8601:2004 format: YYYY, YYYY-MM or YYYY-MM-DD). */
	optional mead_Date start_date = 6;
/* A Composite containing details of an epoch name. */
	repeated mead_Name value = 7;
}

/* A Composite containing details of the Date and Place of an Event. */
message mead_EventDate {
/* The Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_AllTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether the Event being described occurred sometime after the reported Date (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_after = 2;
/* The Flag indicating whether the reported Date is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 3;
/* The Flag indicating whether the Event being described occurred sometime before the reported Date (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_before = 4;
/* The Language and script for the LocationDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 6;
	optional mead_ddex_IsoDate ext_value = 7;
}

/* A Composite containing details of the DateTime and Place of an Event. */
message mead_EventDateTime {
/* The Flag indicating whether the Event being described occurred sometime after the reported DateTime (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_after = 1;
/* The Flag indicating whether the reported DateTime is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
/* The Flag indicating whether the Event being described occurred sometime before the reported DateTime (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_before = 3;
/* The Language and script for the LocationDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 5;
/* The Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_AllTerritoryCode territory_code = 6;
	optional uint64 ext_value = 7;
}

/* A Composite containing details of the Date and Place of an Event.Explanatory Note: This Composite is named EventDateWithoutFlags to disambiguate it from the basic EventDate Composite. */
message mead_EventDateWithoutFlags {
/* The main Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_AllTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether the reported Date is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
/* The Language and script for the LocationDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 4;
	optional mead_ddex_IsoDate ext_value = 5;
}

message mead_Feed {
	repeated string any_attribute_value = 1;
	repeated string any_value = 2;
/* A Composite containing details of the Name, Identifier and Role(s) of an author of a Resource. */
	repeated mead_Person author = 3;
/* A Composite containing details of a category. */
	repeated mead_Category category = 4;
/* A Composite containing details of the Name, Identifier and Role(s) of a contributor to a Resource. */
	repeated mead_Person contributor = 5;
/* A Composite containing details of an entry. */
	repeated mead_Entry entry = 6;
/* A Composite containing details of a generator. */
	optional mead_Generator generator = 7;
/* A Composite containing details of an icon. */
	optional mead_Icon icon = 8;
/* A Composite containing details of an ID. */
	optional mead_Id id = 9;
/* A Composite containing details of a link. */
	repeated mead_Link link = 10;
/* A Composite containing details of a logo. */
	optional mead_Logo logo = 11;
/* A Composite containing details of rights. */
	optional mead_Text rights = 12;
/* A Composite containing details of a subtitle. */
	optional mead_Text subtitle = 13;
/* A Composite containing details of a title. */
	optional mead_Text title = 14;
/* A Composite containing details of an update. */
	optional mead_DateTime updated = 15;
}

/* A Composite containing details of a File. */
message mead_File {
/* The size of the File in kilobytes. */
	optional double file_size = 1;
/* A Composite containing a HashSum of the File and information about the algorithm with which it has been generated. */
	optional mead_DetailedHashSum hash_sum = 2;
/* A URI of the File (this can be a URL or another type of Identifier using a scheme identifier, e.g. http or ftp, as defined in RFC 3986). */
	optional string u_r_i = 3;
}

/* A Composite containing details of a Flag. */
message mead_Flag {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* The value of the Flag */
	optional bool value = 2;
}

/* A Composite containing details of a focus track. */
message mead_FocusTrack {
/* A Territory to which the focus track applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Comment regarding the focus track. */
	repeated mead_TextWithoutTerritory comment = 2;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Release to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s) */
	repeated mead_DisplayArtistNameWithPronunciation display_artist_name = 3;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 4;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 5;
/* A Composite containing details about a focus track period. StartDate and EndDate are deprecated and StartDateTime/EndDateTime should be used instead. DDEX advises that StartDate and EndDate may be removed at a future date and therefore recommends against using them. */
	repeated mead_PeriodWithTime period_of_being_focus_track = 6;
/* A Composite containing details of ResourceIds for the Resource. */
	optional mead_ResourceId resource_id = 7;
/* The number indicating the order of the focus Track in a group of Tracks. It should not be provided unless more than one focus track is provided for a specific Artist. */
	optional int32 sequence_number = 8;
/* A Composite containing details of a Title of the Work as the MessageSender suggests it should be shown to the Consumer. */
	repeated mead_TitleWithPronunciation title = 9;
}

/* A Composite containing details of a form of a Work (e.g. Concerto, Aria, 12 bar blues, etc.). */
message mead_Form {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* A Composite containing details of a form value. */
	optional mead_FormValue value = 2;
}

/* A Composite containing details of a form of a Work. */
message mead_FormValue {
/* The Namespace of the vocal register. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the vocal register. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_Form ext_value = 3;
}

/* A Composite containing details of a generator. The Atom generator element is defined in section 4.2.4 of the format spec. */
message mead_Generator {
	repeated string any_attribute_value = 1;
	optional string ext_value = 2;
/* The URI. This is represented in an XML schema as an XML Attribute of type AnyURI. */
	optional string uri = 3;
/* The Identifier of the Version of the generator. This is represented in an XML schema as an XML Attribute. */
	optional string version = 4;
}

/* A Composite containing details of a Genre Category. */
message mead_GenreCategory {
/* A Territory to which the Genre Category applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing a Description of the Genre Category. */
	repeated mead_TextWithoutTerritory description = 2;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 3;
/* A Composite containing details of a Genre Category value. */
	optional mead_GenreCategoryValue value = 4;
}

/* A Composite containing details of a Genre Category value. */
message mead_GenreCategoryValue {
/* The Language and script of this Element as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* The Namespace of the element. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 2;
/* A UserDefined value of the element. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 3;
	optional avs_ClassifiedGenre ext_value = 4;
}

/* A Composite containing details of a harmony of a MusicalWork or a Resource. */
message mead_Harmony {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* A mode, i.e. a type of musical scale coupled with a set of characteristic melodic behaviours. */
	optional mead_Mode mode = 2;
/* A Composite containing details of a harmony modulation. */
	repeated mead_HarmonyModulation modulation = 3;
/* A root chord note. */
	optional mead_RootChordNote root_chord_note = 4;
/* A root chord quality. */
	optional mead_RootChordQuality root_chord_quality = 5;
}

/* A Composite containing details of the harmony modulation of a MusicalWork or a Resource. */
message mead_HarmonyModulation {
/* The end point given in bars from the start of the referenced Work. */
	optional int32 end_bar = 1;
/* The end point given in seconds from the start of the referenced Resource. */
	optional double end_point = 2;
/* A mode of the modulation, i.e. a type of musical scale coupled with a set of characteristic melodic behaviours. */
	optional mead_Mode mode = 3;
/* A root chord note of the modulation. */
	optional mead_RootChordNote root_chord_note = 4;
/* A root chord quality of the modulation. */
	optional mead_RootChordQuality root_chord_quality = 5;
/* The start point given in bars from the start of the referenced Work. */
	optional int32 start_bar = 6;
/* The start point given in seconds from the start of the referenced Resource. */
	optional double start_point = 7;
}

/* A Composite containing details of a HashSumAlgorithmType. */
message mead_HashSumAlgorithmType {
/* The Namespace of the HashSumAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the HashSumAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_HashSumAlgorithmType ext_value = 3;
}

/* A Composite containing details of historic charting information. */
message mead_HistoricChartingInformation {
/* A Composite containing details of the Date and Place of the usage (in ISO 8601:2004 format: YYYY-MM-DD). */
	repeated mead_ChartEntry chart_entry = 1;
/* A Name of the charts. */
	repeated mead_ChartName chart_name = 2;
/* A Comment regarding the charts. */
	repeated mead_TextWithFormat comment = 3;
/* The Duration for which the Creation or the Party was in the charts. */
	optional mead_Duration duration_in_charts = 4;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 5;
/* A Territory of the charts. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard. */
	optional mead_CurrentTerritoryCode territory_code = 6;
/* The top position in the charts. */
	optional int32 top_position = 7;
}

/* A Composite containing details of historic charting information.Explanatory Note: This Composite is named HistoricChartingInformationForParty to disambiguate it from the basic HistoricChartingInformation Composite. */
message mead_HistoricChartingInformationForParty {
/* A Composite containing details of the Date and Place of the usage (in ISO 8601:2004 format: YYYY-MM-DD). */
	repeated mead_ChartEntry chart_entry = 1;
/* A Name of the charts. */
	repeated mead_ChartName chart_name = 2;
/* A Composite containing details of a charted Release. */
	optional mead_Release charted_release = 3;
/* A Composite containing details of a charted Resource. */
	optional mead_Resource charted_resource = 4;
/* A Composite containing details of a charted Work. */
	optional mead_Work charted_work = 5;
/* A Comment regarding the charts. */
	repeated mead_TextWithFormat comment = 6;
/* The Duration for which the Creation or the Party was in the charts. */
	optional mead_Duration duration_in_charts = 7;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 8;
/* A Territory of the charts. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard. */
	optional mead_CurrentTerritoryCode territory_code = 9;
/* The top position in the charts. */
	optional int32 top_position = 10;
}

/* A Composite containing details of an icon. The Atom icon construct is defined in section 4.2.5 of the format spec. */
message mead_Icon {
	repeated string any_attribute_value = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of an ID. The Atom id construct is defined in section 4.2.6 of the format spec. */
message mead_Id {
	repeated string any_attribute_value = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of an Image. */
message mead_Image {
/* A Composite containing details of a File containing the Image. */
	optional mead_File file = 1;
/* A Composite containing details of the Type of the Image. */
	repeated mead_ImageType image_type = 2;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 3;
}

/* A Composite containing details of an ImageType. */
message mead_ImageType {
/* The Namespace of the ImageType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ImageType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ImageType ext_value = 3;
}

/* A Composite containing details of an Instrument. */
message mead_Instrument {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* The value of the instrument. */
	optional mead_InstrumentValue value = 2;
}

/* A Composite containing details of an Instrument. */
message mead_InstrumentUsed {
/* The Flag indicating whether the Instrument is featured (=true). This is represented in an XML schema as an XML Attribute. */
	optional bool is_featured = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* The value of the instrument. */
	optional mead_InstrumentValue value = 3;
}

/* A Composite containing details of an Instrument. */
message mead_InstrumentValue {
/* The Namespace of the Instrument. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the Instrument. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_InstrumentType ext_value = 3;
}

/* A Composite containing details of a link. The Atom link construct is defined in section 3.4 of the format spec. */
message mead_Link {
	repeated string any_attribute_value = 1;
/* The href. This is represented in an XML schema as an XML Attribute of type AnyURI. */
	optional string href = 2;
/* The href lang. This is represented in an XML schema as an XML Attribute of type NMTOKEN. */
	optional string hreflang = 3;
/* The length. This is represented in an XML schema as an XML Attribute of type PositiveInteger. */
	optional uint32 length = 4;
/* The rel. This is represented in an XML schema as an XML Attribute. */
	optional string rel = 5;
/* The title. This is represented in an XML schema as an XML Attribute. */
	optional string title = 6;
/* The type. This is represented in an XML schema as an XML Attribute. */
	optional string type = 7;
}

/* A Composite containing details of a Session. */
message mead_LocationAndDateOfSession {
/* A Composite containing a human-readable Comment about the Session. */
	optional mead_TextWithFormat comment = 1;
/* A Composite containing details of a Contributor. */
	repeated mead_PartyWithRole contributor = 2;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 3;
/* A Composite containing details about a Period of the Session. Periods are typically described by at least a StartDate or EndDate. */
	optional mead_Period period = 4;
/* The Type of Session. */
	repeated mead_SessionType session_type = 5;
/* A Composite containing details of the venue where the Session took place. */
	repeated mead_Venue venue = 6;
}

/* A Composite containing details of a logo. The Atom logo construct is defined in section 4.2.8 of the format spec. */
message mead_Logo {
	repeated string any_attribute_value = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of Lyrics. */
message mead_Lyrics {
/* A Flag indicating whether the Lyrics are misquoted (=true) or not (=false). */
	optional bool is_misquoted = 1;
/* The Type of the Lyrics. */
	optional avs_LyricsType lyrics_type = 2;
/* The Namespace of the user defined value for LyricsType. This is represented in an XML schema as an XML Attribute. */
	optional string lyrics_type_namespace = 3;
/* A UserDefined value of LyricsType This is represented in an XML schema as an XML Attribute. */
	optional string lyrics_type_user_defined_value = 4;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 5;
/* The string describing the pronunciation. */
	repeated mead_Pronunciation pronunciation = 6;
/* A number indicating the order of the Lyrics in a group of Lyrics. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 7;
/* The text of the Lyrics. */
	optional mead_LyricsText text = 8;
}

/* A Composite containing details of Lyrics. */
message mead_LyricsText {
/* A Territory to which this Element applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The format of the Lyrics. This is represented in an XML schema as an XML Attribute. */
	optional avs_TextCodecType format = 2;
/* The Namespace of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string format_namespace = 3;
/* A UserDefined value of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string format_user_defined_value = 4;
/* The Flag indicating whether the Lyrics text is complete (=true) or not (=false). */
	optional bool is_complete = 5;
/* The Language and script of the Lyrics as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 6;
	optional string ext_value = 7;
}

message mead_MeadMessage {
/* The Language and script for the Elements of this message as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* The MessageHeader for the MeadMessage. */
	optional mead_MessageHeader message_header = 2;
/* A Composite containing details of one or more Parties that created the metadata. */
	optional mead_MetadataSourceList metadata_source_list = 3;
/* A Composite containing detailed information about one or more Parties. */
	optional mead_PartyInformationList party_information_list = 4;
/* A Composite containing detailed information about one or more Releases. */
	optional mead_ReleaseInformationList release_information_list = 5;
/* A Composite containing detailed information about one or more Resources. */
	optional mead_ResourceInformationList resource_information_list = 6;
/* An Identifier of the subscription. */
	optional string subscription_id = 7;
/* A Composite containing detailed information about one or more Works */
	optional mead_WorkInformationList work_information_list = 8;
	repeated string any_value = 9;
}

/* A Composite containing information about Parties in between the original MessageSender and ultimate MessageRecipient. */
message mead_MessageAuditTrail {
/* A Composite containing details of a Party handling the Message and the Time at which the handling took place. */
	repeated mead_MessageAuditTrailEvent message_audit_trail_event = 1;
}

/* A Composite containing details of a Party handling a Message and the Time at which the handling took place. */
message mead_MessageAuditTrailEvent {
/* The DateTime at which the Message was handled by the MessagingParty (the only allowed format is ISO 8601:2004: YYYY-MM-DDThh:mm:ssTZD). */
	optional uint64 date_time = 1;
/* A Composite containing details of a MessagingParty. */
	optional mead_MessagingPartyWithoutCode messaging_party_descriptor = 2;
}

/* A Composite placed at the beginning of each DdexMessage providing information about the Message, such as MessageSender, MessageRecipient and a Message creation time stamp. */
message mead_MessageHeader {
/* A Composite containing information about Parties in between the original MessageSender and ultimate MessageRecipient. */
	optional mead_MessageAuditTrail message_audit_trail = 1;
/* The indicator used to distinguish a live Message from a test Message. */
	optional avs_MessageControlType message_control_type = 2;
/* The DateTime on which the Message was created (the only allowed format is ISO 8601:2004: YYYY-MM-DDThh:mm:ssTZD). */
	optional uint64 message_created_date_time = 3;
/* The FileName, possibly including the FilePath, of the XML File containing the current Message. */
	optional string message_file_name = 4;
/* A xs:string used to uniquely identify the current Message. The MessageId shall be, in combination with the DdexPartyId (DPID) of the MessageSender, globally unique. Thus, a MessageSender shall never re-use a MessageId. */
	optional string message_id = 5;
/* A Composite containing details of the MessageRecipient. Note that if multiple MessageRecipients are provided, all of them will be able to read this information. */
	repeated mead_MessagingPartyWithoutCode message_recipient = 6;
/* A Composite containing details of the MessageSender. */
	optional mead_MessagingPartyWithoutCode message_sender = 7;
/* A xs:string used to uniquely identify the thread of Messages of which the current Message is a part. The MessageThreadId shall be, in combination with the DdexPartyId (DPID) of the MessageSender, globally unique. Thus, a MessageSender shall never re-use a MessageThreadId. One example of such a 'thread' is the chain of NewReleaseMessages being sent from ReleaseCreator to wholesale ReleaseDistributor 1 to retail DSP when communicating information about the same Release(s). A common MessageThreadId will allow all these messages to be tied together. */
	optional string message_thread_id = 8;
/* A Composite containing details of the Party on whose behalf the Message is sent. */
	optional mead_MessagingPartyWithoutCode sent_on_behalf_of = 9;
}

/* A Composite containing details of a MessagingParty.Explanatory Note: This Composite is named MessagingPartyWithoutCode to disambiguate it from the basic MessagingParty Composite. */
message mead_MessagingPartyWithoutCode {
/* An Identifier of a Party according to the DdexPartyId standard DDEX-DPID. */
	optional string party_id = 1;
/* A Composite containing details of the PartyNames for the Party handling the Message.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
	optional mead_PartyNameWithoutCode party_name = 2;
/* A Composite containing a TradingName for the Party handling the Message.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional string trading_name = 3;
}

/* A Composite containing details of a Party that created metadata. */
message mead_MetadataSource {
/* The Type of the metadata source. */
	optional mead_MetadataSourceType metadata_source_type = 1;
/* A Composite containing details of the PartyId for the metadata source. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, producers or other Creators. */
	repeated mead_DetailedPartyId party_id = 2;
/* A Composite containing details of the PartyName(s). */
	repeated mead_PartyNameWithTerritory party_name = 3;
/* The Identifier (specific to the Message) of the metadata source. This is a LocalMetadataSourceAnchor starting with the letter U. */
	optional string source_reference = 4;
}

/* A Composite containing details of one or more Parties that created the metadata. */
message mead_MetadataSourceList {
/* A Composite containing details of a metadata source. */
	repeated mead_MetadataSource metadata_source = 1;
}

/* A Composite containing details of a MetadataSourceType. */
message mead_MetadataSourceType {
/* The Namespace of the MetadataSourceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the MetadataSourceType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_MetadataSourceType ext_value = 3;
}

/* A Composite containing details of a meter. */
message mead_Meter {
/* The note that is equivalent to one beat. */
	optional int32 note_equivalent_to_beat = 1;
/* The number of beats in a bar. */
	optional int32 number_of_beats_in_bar = 2;
}

/* A Composite containing details of a mode. */
message mead_Mode {
/* The Namespace of the mode. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the mode. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_Mode ext_value = 3;
}

/* A Composite containing details of a modulation. */
message mead_Modulation {
/* The end point given in bars from the start of the referenced Work. */
	optional int32 end_bar = 1;
/* The end point given in seconds from the start of the referenced Resource. */
	optional double end_point = 2;
/* The start point given in bars from the start of the referenced Work. */
	optional int32 start_bar = 3;
/* The start point given in seconds from the start of the referenced Resource. */
	optional double start_point = 4;
/* The value of the beats per minute. */
	optional double value = 5;
}

/* A Composite containing details of a mood. */
message mead_Mood {
/* A Territory to which the mood applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing a Description of the mood. */
	repeated mead_TextWithoutTerritory description = 2;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 3;
/* A Composite containing details of a mood value. */
	optional mead_MoodValue value = 4;
}

/* A Composite containing details of a mood value. */
message mead_MoodValue {
/* A Flag indicating whether the mood value applies to the composition (=true) or not (=false). */
	optional bool applies_to_composition = 1;
/* A Flag indicating whether the mood value applies to the lyrics (=true) or not (=false). */
	optional bool applies_to_lyrics = 2;
/* The Namespace of the element. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 3;
/* A UserDefined value of the element. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 4;
	optional avs_MoodType ext_value = 5;
}

/* A Composite containing details of a MusicalWorkId. */
message mead_MusicalWorkId {
/* A MusicalWorkId identifying a MusicalWork within the catalog of its Composer (typically of classical music) according to a standardized numbering (e.g. 'K' numbers for Koechel's catalog of Mozart). */
	repeated string composer_catalog_number = 1;
/* The ISWC (International Standard Musical Work Code defined in ISO 15707) identifying the MusicalWork. An ISWC comprises three parts: the letter 'T', followed by nine digits and then one check digit. DDEX will enforce the syntax [a-zA-Z][0-9]{10} using XML Schema in the future. */
	optional string i_s_w_c = 2;
/* The MusicalWorkId identifying the MusicalWork within the catalog of its Composer (typically of classical music) as an opus number. */
	optional string opus_number = 3;
/* A Composite containing details of a ProprietaryIdentifier of the MusicalWork. */
	repeated mead_ProprietaryId proprietary_id = 4;
}

/* A Composite containing details of a Name. */
message mead_Name {
/* The Language and script of the Name as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a Name and its pronunciation.Explanatory Note: This Composite is named NameWithPronunciation to disambiguate it from the basic Name Composite. */
message mead_NameWithPronunciation {
/* The Name string.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional string name = 1;
/* The string describing the pronunciation. */
	repeated mead_Pronunciation pronunciation = 2;
}

/* A Composite containing details of a Name and its pronunciation.Explanatory Note: This Composite is named NameWithPronunciationAndScriptCode to disambiguate it from the basic Name Composite. */
message mead_NameWithPronunciationAndScriptCode {
/* The Name string.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional mead_Name name = 1;
/* The string describing the pronunciation. */
	repeated mead_Pronunciation pronunciation = 2;
}

/* A Composite containing details of a Party. */
message mead_Party {
/* An Identifier of the Party for which information is provided according to the DdexPartyId standard DDEX-DPID. */
	optional string d_p_i_d = 1;
/* An International Performer Number, an IPDA Identifier, of the Party for which information is provided. */
	optional string i_p_n = 2;
/* An International Standard Name Identifier, the ISO 27729 Standard Identifier for names, of the Party for which information is provided. DDEX will enforce the syntax [0-9]{15}[X0-9] using XML Schema in the future. */
	optional string i_s_n_i = 3;
/* An Interested Party Identifier, a CISAC standard Identifier, of the Party for which information is provided. An IpiNameNumber comprises 11 digits. */
	optional string ipi_name_number = 4;
/* The Name of the Party for which information is provided. */
	optional string party_name = 5;
/* A Composite containing details of a ProprietaryIdentifier of the Party for which information is provided. */
	repeated mead_ProprietaryId proprietary_id = 6;
}

/* A Composite containing details of a Party. Parties are typically described through Names and/or Identifiers. */
message mead_PartyDescriptor {
/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, producers or other Creators. */
	repeated mead_DetailedPartyId party_id = 1;
/* A Composite containing details of the PartyName(s).Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
	repeated mead_PartyName party_name = 2;
}

/* A Composite containing details of a Party. */
message mead_PartyInformation {
/* A Composite containing details of an Artist type (applicable if the Party is an Artist). This allows saying that the Artist is, for instance, a Mariachi Band. */
	repeated mead_ArtistType artist_type = 1;
/* A Composite containing details of a related Artist that was influenced or that was an influencer (applicable if the Party is an Artist). */
	repeated mead_ArtisticInfluence artistic_influence = 2;
/* A Composite containing details of an award. Recipients are requested to make sure they only trust this information if it is sent from a reputable and, ideally, authoritative source. */
	repeated mead_AwardForParty award = 3;
/* A Composite containing details of a biography of the Party. */
	repeated mead_Biography biography = 4;
/* A Composite containing details of a period of the Party. */
	optional mead_ClassicalPeriod classical_period = 5;
/* A Composite containing details of a commentary note. */
	repeated mead_CommentaryNote commentary_note = 6;
/* A Composite containing details of an epoch in the Artist's career (applicable if the Party is an Artist). */
	repeated mead_Epoch epoch = 7;
/* A Composite containing details of a focus track. */
	repeated mead_FocusTrack focus_track = 8;
/* A Composite containing details of historic charting information. Recipients are requested to make sure they only trust this information if it is sent from a reputable and, ideally, authoritative source. */
	repeated mead_HistoricChartingInformationForParty historic_charting_information = 9;
/* A Composite containing details of an Image of the Party. */
	repeated mead_Image image = 10;
/* A Composite containing details of a similar Party. */
	repeated mead_SimilarParty is_similar = 11;
/* A Composite containing details of a Party. */
	optional mead_PartyWithNames party = 12;
/* A Composite containing details of a pseudonym. */
	repeated mead_Pseudonym pseudonym = 13;
/* A Composite containing details of a Creation (a Work, a Release or a Resource) to which the Party contributed. */
	repeated mead_RelatedCreation related_creation = 14;
/* A Composite containing details of a vocal register of the Party. */
	optional mead_VocalRegister vocal_register = 15;
}

/* A Composite containing detailed information about one or more Parties. */
message mead_PartyInformationList {
/* A Composite containing detailed information about a Party. */
	repeated mead_PartyInformation party_information = 1;
}

/* A Composite containing details of a PartyName. Name details for a Party typically either contain a FullName or a KeyName.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
message mead_PartyName {
/* A Composite containing a short version of the PartyName (e.g. for use on devices with a small display). */
	optional mead_Name abbreviated_name = 1;
/* A Composite containing the complete Name of the Party, in its normal form of presentation (e.g. John H. Smith, Acme Music Inc, the Beatles). */
	optional mead_Name full_name = 2;
/* The FullName transcribed using 7-bit ASCII code. */
	optional string full_name_ascii_transcribed = 3;
/* A Composite containing the complete Name of the Party in the form in which it normally appears in an alphabetic index, with the KeyName first (e.g. Smith, John H.; Beatles, The). */
	optional mead_Name full_name_indexed = 4;
/* A Composite containing the Part of a Name of the Party normally used to index an entry in an alphabetical list, such as 'Smith' (in John Smith) or 'Garcia Marquez' or 'Madonna' or 'Francis de Sales' (in Saint Francis de Sales). For persons, this normally corresponds to the 'family name' or names, which in Western name forms usually comes as a surname at the end of a FullName, and in Asian name forms often at the beginning of a FullName.  */
	optional mead_Name key_name = 5;
/* The Language and script for the Elements of the PartyName as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 6;
/* A Composite containing the Name(s) following the KeyName. Example:'Ibrahim' (in Anwar Ibrahim). This is common, e.g., in many Asian personal name forms where a FullName begins with the KeyName, which is followed by other names. */
	optional mead_Name names_after_key_name = 7;
/* A Composite containing the Name(s) preceding the KeyName in the FullName (and that is placed after it in a FullNameIndexed). Examples: 'George' in 'George Michael'; 'John Fitzgerald' in 'John Fitzgerald Kennedy'. Not all PartyNames have a NamesBeforeKeyName (e.g. Madonna, EMI Music Inc). */
	optional mead_Name names_before_key_name = 8;
}

/* A Composite containing details of a PartyName.Explanatory Note: This Composite is named PartyNameWithPronunciation to disambiguate it from the basic PartyName Composite.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
message mead_PartyNameWithPronunciation {
/* A Composite containing a short version of the PartyName (e.g. for use on devices with a small display). */
	optional mead_NameWithPronunciationAndScriptCode abbreviated_name = 1;
/* A Composite containing the complete Name of the Party, in its normal form of presentation (e.g. John H. Smith, Acme Music Inc, the Beatles). */
	optional mead_NameWithPronunciationAndScriptCode full_name = 2;
/* The FullName transcribed using 7-bit ASCII code. */
	optional mead_NameWithPronunciation full_name_ascii_transcribed = 3;
/* A Composite containing the complete Name of the Party in the form in which it normally appears in an alphabetic index, with the KeyName first (e.g. Smith, John H.; Beatles, The). */
	optional mead_NameWithPronunciationAndScriptCode full_name_indexed = 4;
/* A Composite containing the Part of a Name of the Party normally used to index an entry in an alphabetical list, such as 'Smith' (in John Smith) or 'Garcia Marquez' or 'Madonna' or 'Francis de Sales' (in Saint Francis de Sales). For persons, this normally corresponds to the 'family name' or names, which in Western name forms usually comes as a surname at the end of a FullName, and in Asian name forms often at the beginning of a FullName.  */
	optional mead_NameWithPronunciationAndScriptCode key_name = 5;
/* The Language and script for the Elements of the PartyName as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 6;
/* A Composite containing the Name(s) following the KeyName. Example:'Ibrahim' (in Anwar Ibrahim). This is common, e.g., in many Asian personal name forms where a FullName begins with the KeyName, which is followed by other names. */
	optional mead_NameWithPronunciationAndScriptCode names_after_key_name = 7;
/* A Composite containing the Name(s) preceding the KeyName in the FullName (and that is placed after it in a FullNameIndexed). Examples: 'George' in 'George Michael'; 'John Fitzgerald' in 'John Fitzgerald Kennedy'. Not all PartyNames have a NamesBeforeKeyName (e.g. Madonna, EMI Music Inc). */
	optional mead_NameWithPronunciationAndScriptCode names_before_key_name = 8;
}

/* A Composite containing details of a PartyName.Explanatory Note: This Composite is named PartyNameWithTerritory to disambiguate it from the basic PartyName Composite. */
message mead_PartyNameWithTerritory {
/* A Composite containing a short version of the PartyName (e.g. for use on devices with a small display). */
	optional mead_NameWithPronunciationAndScriptCode abbreviated_name = 1;
/* A Territory to which the PartyName applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 2;
/* A Composite containing the complete Name of the Party, in its normal form of presentation (e.g. John H. Smith, Acme Music Inc, the Beatles). */
	optional mead_NameWithPronunciationAndScriptCode full_name = 3;
/* The FullName transcribed using 7-bit ASCII code. */
	optional mead_NameWithPronunciation full_name_ascii_transcribed = 4;
/* A Composite containing the complete Name of the Party in the form in which it normally appears in an alphabetic index, with the KeyName first (e.g. Smith, John H.; Beatles, The). */
	optional mead_NameWithPronunciationAndScriptCode full_name_indexed = 5;
/* A Composite containing the Part of a Name of the Party normally used to index an entry in an alphabetical list, such as 'Smith' (in John Smith) or 'Garcia Marquez' or 'Madonna' or 'Francis de Sales' (in Saint Francis de Sales). For persons, this normally corresponds to the 'family name' or names, which in Western name forms usually comes as a surname at the end of a FullName, and in Asian name forms often at the beginning of a FullName.  */
	optional mead_NameWithPronunciationAndScriptCode key_name = 6;
/* The Language and script for the Elements of the PartyName as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 7;
/* A Composite containing the Name(s) following the KeyName. Example:'Ibrahim' (in Anwar Ibrahim). This is common, e.g., in many Asian personal name forms where a FullName begins with the KeyName, which is followed by other names. */
	optional mead_NameWithPronunciationAndScriptCode names_after_key_name = 8;
/* A Composite containing the Name(s) preceding the KeyName in the FullName (and that is placed after it in a FullNameIndexed). Examples: 'George' in 'George Michael'; 'John Fitzgerald' in 'John Fitzgerald Kennedy'. Not all PartyNames have a NamesBeforeKeyName (e.g. Madonna, EMI Music Inc). */
	optional mead_NameWithPronunciationAndScriptCode names_before_key_name = 9;
}

/* A Composite containing details of a PartyName. Name details for a Party typically either contain a FullName or a KeyName.Explanatory Note: This Composite is named PartyNameWithoutCode to disambiguate it from the basic PartyName Composite.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
message mead_PartyNameWithoutCode {
/* A short version of the PartyName (e.g. for use on devices with a small display). */
	optional string abbreviated_name = 1;
/* The complete Name of the Party, in its normal form of presentation (e.g. John H. Smith, Acme Music Inc, the Beatles). */
	optional string full_name = 2;
/* The FullName transcribed using 7-bit ASCII code. */
	optional string full_name_ascii_transcribed = 3;
/* The complete Name of the Party in the form in which it normally appears in an alphabetic index, with the KeyName first (e.g. Smith, John H.; Beatles, The). */
	optional string full_name_indexed = 4;
/* The Part of a Name of the Party normally used to index an entry in an alphabetical list, such as 'Smith' (in John Smith) or 'Garcia Marquez' or 'Madonna' or 'Francis de Sales' (in Saint Francis de Sales). For persons, this normally corresponds to the 'family name' or names, which in Western name forms usually comes as a surname at the end of a FullName, and in Asian name forms often at the beginning of a FullName.  */
	optional string key_name = 5;
/* The Name(s) following the KeyName. Example:'Ibrahim' (in Anwar Ibrahim). This is common, e.g., in many Asian personal name forms where a FullName begins with the KeyName, which is followed by other names. */
	optional string names_after_key_name = 6;
/* The Name(s) preceding the KeyName in the FullName (and that is placed after it in a FullNameIndexed). Examples: 'George' in 'George Michael'; 'John Fitzgerald' in 'John Fitzgerald Kennedy'. Not all PartyNames have a NamesBeforeKeyName (e.g. Madonna, EMI Music Inc). */
	optional string names_before_key_name = 7;
}

/* A Composite containing details of a Party.Explanatory Note: This Composite is named PartyWithNames to disambiguate it from the basic Party Composite. */
message mead_PartyWithNames {
/* An Identifier of the Party for which information is provided according to the DdexPartyId standard DDEX-DPID. */
	optional string d_p_i_d = 1;
/* An International Performer Number, an IPDA Identifier, of the Party for which information is provided. */
	optional string i_p_n = 2;
/* An International Standard Name Identifier, the ISO 27729 Standard Identifier for names, of the Party for which information is provided. DDEX will enforce the syntax [0-9]{15}[X0-9] using XML Schema in the future. */
	optional string i_s_n_i = 3;
/* An Interested Party Identifier, a CISAC standard Identifier, of the Party for which information is provided. An IpiNameNumber comprises 11 digits. */
	optional string ipi_name_number = 4;
/* A Composite containing details of a Name of the Party for which information is provided. */
	repeated mead_PartyNameWithTerritory name = 5;
/* A Composite containing details of a ProprietaryIdentifier of the Party for which information is provided. */
	repeated mead_ProprietaryId proprietary_id = 6;
}

/* A Composite containing details of a Party.Explanatory Note: This Composite is named PartyWithRole to disambiguate it from the basic Party Composite. */
message mead_PartyWithRole {
/* An Identifier of the Party for which information is provided according to the DdexPartyId standard DDEX-DPID. */
	optional string d_p_i_d = 1;
/* An International Performer Number, an IPDA Identifier, of the Party for which information is provided. */
	optional string i_p_n = 2;
/* An International Standard Name Identifier, the ISO 27729 Standard Identifier for names, of the Party for which information is provided. DDEX will enforce the syntax [0-9]{15}[X0-9] using XML Schema in the future. */
	optional string i_s_n_i = 3;
/* An Interested Party Identifier, a CISAC standard Identifier, of the Party for which information is provided. An IpiNameNumber comprises 11 digits. */
	optional string ipi_name_number = 4;
/* A Composite containing details of a Name of the Contributor. */
	optional mead_PartyNameWithPronunciation party_name = 5;
/* A Composite containing details of a ProprietaryIdentifier of the Party for which information is provided. */
	repeated mead_ProprietaryId proprietary_id = 6;
/* A Role played by the Contributor. */
	optional mead_ResourceContributorRole role = 7;
}

/* A Composite containing details about a Period of Time. Periods are typically describedby at least a StartDate or EndDate (or StartDateTime or EndDateTime) where the StartDate(Time) and EndDate(Time) are included in the Period. Thus a one-day period can be described by using the same date in the StartDate and EndDate. If two subsequent Periods form a continuum (i.e. with no break in-between) there are two ways to express this: (a) if using dates, the EndDate of the first Period must be one day before the StartDate of the second Period; (b) if using date times, the EndDateTime of the first Period must be the same as the StartDateTime of the second Period. */
message mead_Period {
/* A Composite containing details of the Date and Place of an Event that marks the end of the Period (in ISO 8601:2004 format: YYYY-MM-DD). The EndDate must not be earlier than the StartDate if both are provided. */
	optional mead_EventDate end_date = 1;
/* A Composite containing details of the DateTime and Place of an Event that marks the end of the Period (in ISO 8601:2004 format: YYYY-MM-DDThh:mm:ss). The EndDateTime must not be earlier than the StartDateTime if both are provided. */
	optional mead_EventDateTime end_date_time = 2;
/* A Composite containing details of the Date and Place of an Event that marks the beginning of the Period (in ISO 8601:2004 format: YYYY-MM-DD). The StartDate must be no later than the EndDate if both are provided. */
	optional mead_EventDate start_date = 3;
/* A Composite containing details of the DateTime and Place of an Event that marks the beginning of the Period (in ISO 8601:2004 format: YYYY-MM-DDThh:mm:ss). The StartDateTime must be no later than the EndDateTime if both are provided. */
	optional mead_EventDateTime start_date_time = 4;
}

/* A Composite containing details of a musical period. */
message mead_PeriodValue {
/* The Namespace of the musical period. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the musical period. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_Period ext_value = 3;
}

/* A Composite containing details about a Period of Time. Periods are typically describedby at least a StartDate or EndDate (or StartDateTime or EndDateTime) where the StartDate(Time) and EndDate(Time) are included in the Period. Thus a one-day period can be described by using the same date in the StartDate and EndDate. If two subsequent Periods form a continuum (i.e. with no break in-between) there are two ways to express this: (a) if using dates, the EndDate of the first Period must be one day before the StartDate of the second Period; (b) if using date times, the EndDateTime of the first Period must be the same as the StartDateTime of the second Period.Explanatory Note: This Composite is named PeriodWithTime to disambiguate it from the basic Period Composite. */
message mead_PeriodWithTime {
/* The DateTime of an Event that marks the end of the Period (in ISO 8601:2004 format: YYYY-MM-DDThh:mm:ss). The EndDateTime must not be earlier than the StartDateTime if both are provided. */
	optional uint64 end_date_time = 1;
/* The DateTime of an Event that marks the beginning of the Period (in ISO 8601:2004 format: YYYY-MM-DDThh:mm:ss). The StartDateTime must be no later than the EndDateTime if both are provided. */
	optional uint64 start_date_time = 2;
}

/* A Composite containing details of the Name, Identifier and Role(s) of a Party related to a Resource. The Atom person construct is defined in section 3.2 of the format spec. */
message mead_Person {
	repeated string any_attribute_value = 1;
	optional string any_value = 2;
/* A Composite containing details of an Email address. This is a NormalizedString. */
	optional string email = 3;
/* A Name of the person. */
	optional string name = 4;
/* A Composite containing details of a URI. */
	optional mead_URI uri = 5;
}

/* A Composite containing details of a pronunciation of a Name. */
message mead_Pronunciation {
/* The Namespace of the EncodingType. This is represented in an XML schema as an XML Attribute. */
	optional string encoding_namespace = 1;
/* A Type of encoding system used for the pronunciation respelling. If this attribute is missing, then the International Phonetic Alphabet without opening or closing dashes or brackets is used. */
	optional avs_EncodingType encoding_type = 2;
/* A UserDefined value of the EncodingType. This is represented in an XML schema as an XML Attribute. */
	optional string encoding_user_defined_value = 3;
/* A Flag indicating whether the pronunciation is canonical (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_canonical = 4;
/* The Language for which the pronunciation is valid, as defined in IETF RfC 5646. This is provided as lang[-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_code = 5;
	optional string ext_value = 6;
}

/* A Composite containing details of a ProprietaryIdentifier. */
message mead_ProprietaryId {
/* The Namespace of the ProprietaryIdentifier. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a pseudonym. */
message mead_Pseudonym {
/* A Territory to which the pseudonym applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* A Flag indicating whether the pseudonym is authorized (or at least used) by a label and/or artist (=true) or not (=false). */
	optional bool is_official = 3;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 4;
/* A Composite containing summary details of a Name. */
	optional mead_PartyNameWithPronunciation name = 5;
}

/* A Composite containing details of a Recording part. */
message mead_RecordingPart {
/* A Comment on the Recording part. */
	repeated mead_Annotation comment = 1;
/* The end point of the recording part measured in the specified unit from the start of the Recording. Seconds may include fractions (e.g. 30.5 seconds would be 30.5). */
	optional double end_point = 2;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 3;
/* A Composite containing details of a part of the Recording identified by the cue point. */
	optional mead_RecordingPartType recording_part_type = 4;
/* A number indicating the order of the Recording part in a group of parts. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 5;
/* The start point of the recording part measured in the specified unit from the start of the Recording. Seconds may include fractions (e.g. 30.5 seconds would be 30.5). */
	optional double start_point = 6;
/* A UnitOfMeasure used for the specification of the cue points. */
	optional avs_UnitOfCuePoints unit = 7;
/* An Annotation providing information on the usage of the Recording. */
	repeated mead_TextWithFormat usage_information = 8;
}

/* A Composite containing details of a RecordingPartType. */
message mead_RecordingPartType {
/* The Namespace of the RecordingPartType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the RecordingPartType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_RecordingPartType ext_value = 3;
}

/* A Composite containing details of a related Creation (a Work, a Release or a Resource). */
message mead_RelatedCreation {
/* A Composite containing details of a MusicalWorkId. */
	optional mead_MusicalWorkId musical_work_id = 1;
/* A Composite containing details of a ReleaseId. */
	optional mead_ReleaseId release_id = 2;
/* A Composite containing details of a ResourceId. */
	optional mead_ResourceId resource_id = 3;
/* A Composite containing details of a Title of the Creation. */
	optional mead_TitleWithPronunciation title = 4;
}

/* A Composite containing details of a related Resource. */
message mead_RelatedResource {
/* A Composite containing details of ResourceIds for the Resource. */
	optional mead_ResourceId resource_id = 1;
/* A Type of relationship between two Resources. */
	optional mead_ResourceRelationshipType resource_relationship_type = 2;
}

/* A Composite containing details of a RelatedResourceType. */
message mead_RelatedResourceType {
/* The Namespace of the RelatedResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the RelatedResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_RelatedResourceType ext_value = 3;
}

/* A Composite containing details of a related Work. */
message mead_RelatedWork {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* A Composite containing details of a MusicalWorkId. */
	optional mead_MusicalWorkId work_id = 2;
/* A Type of relationship between the two Works. */
	optional mead_WorkRelationshipType work_relationship_type = 3;
/* A Composite containing details of a Title of the Work. */
	repeated mead_WorkTitle work_title = 4;
/* A Composite containing details of a writer of the Work for which information is provided. */
	repeated mead_PartyWithNames writer = 5;
}

/* A Composite containing details of a DDEX Release. */
message mead_Release {
/* A Composite containing details of a DisplayArtist of the Release for which information is provided. */
	repeated mead_DisplayArtist display_artist = 1;
/* The GRid identifying the Release for which information is provided. */
	optional string g_rid = 2;
/* The ICPN (bar code) of the Release for which information is provided. */
	optional string i_c_p_n = 3;
/* A ProprietaryIdentifier of the Release for which information is provided. */
	optional string proprietary_release_id = 4;
/* The Title of the Release for which information is provided. */
	repeated mead_ReleaseTitle release_title = 5;
}

/* A Composite containing details of a ReleaseId. If available, a GRid should always to be used. If the Release contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
message mead_ReleaseId {
/* A Composite containing details of the CatalogNumber of the Release. */
	optional mead_CatalogNumber catalog_number = 1;
/* The GRid identifying the Release. This is the preferred Element and is mandatory if a GRid is available. A GRid comprises four parts: the xs:string 'A1', followed by five alphanumeric characters, ten alphanumeric characters and and one alphanumeric character. DDEX will enforce the syntax [a-zA-Z0-9]{18} using XML Schema in the future. */
	optional string g_rid = 2;
/* An ICPN used as proxy for identification of the Release. Only applicable when the Release is an abstraction of a complete PhysicalProduct. An ICPN comprises 12 or 13 digits, depending whether it is an EAN (13) or a UPC (12). DDEX will enforce the syntax [0-9]{12,13} using XML Schema in the future. */
	optional string i_c_p_n = 3;
/* The ISRC (International Standard Recording Code as defined in ISO 3901) used as proxy for identification of the Release. Only applicable when the Release only contains one SoundRecording or one MusicalWorkVideo. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits. DDEX will enforce the syntax [a-zA-Z]{2}[a-zA-Z0-9]{3}[0-9]{7} using XML Schema in the future. */
	optional string i_s_r_c = 4;
/* A Composite containing details of a ProprietaryIdentifier of the Release. */
	repeated mead_ProprietaryId proprietary_id = 5;
}

/* A Composite containing details of a Release. */
message mead_ReleaseInformation {
/* A Composite containing details of an AlternativeTitle of the Release to aid the recipient to identify the recording by Titles other than the official Title. */
	repeated mead_AlternativeTitle alternative_title = 1;
/* A Territory to which the information applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 2;
/* A Composite containing details of a related Artist that was influenced or that was an influencer. */
	repeated mead_ArtisticInfluence artistic_influence = 3;
/* A Composite containing details of an award. Recipients are requested to make sure they only trust this information if it is sent from a reputable and, ideally, authoritative source. */
	repeated mead_Award award = 4;
/* A Composite containing details of a commentary note. */
	repeated mead_CommentaryNote commentary_note = 5;
/* A Composite containing details of an epoch in a artist's career which the Release is related to. */
	repeated mead_Epoch epoch = 6;
/* A Composite containing details of a Genre Category. */
	repeated mead_GenreCategory genre_category = 7;
/* A Composite containing details of historic charting information. Recipients are requested to make sure they only trust this information if it is sent from a reputable and, ideally, authoritative source. */
	repeated mead_HistoricChartingInformation historic_charting_information = 8;
/* A Composite containing details of an Image relating to the Release. */
	repeated mead_Image image = 9;
/* A Composite containing details of a similar Release. */
	repeated mead_SimilarRelease is_similar = 10;
/* A Composite containing details of a mood. */
	repeated mead_Mood mood = 11;
/* The EndDate of a Period in which the Release is a priority item. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional mead_ddex_IsoDate priority_period_end_date = 12;
/* The StartDate of a Period in which the Release is a priority item. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional mead_ddex_IsoDate priority_period_start_date = 13;
/* A Composite containing summary details of a Release. */
	optional mead_ReleaseSummary release_summary = 14;
/* A Composite containing details of a sub-genre of the Release. */
	optional mead_SubGenreCategory sub_genre_category = 15;
/* A Composite containing details of a theme. */
	repeated mead_Theme theme = 16;
}

/* A Composite containing detailed information about one or more Releases. */
message mead_ReleaseInformationList {
/* A Composite containing detailed information about a Release. */
	repeated mead_ReleaseInformation release_information = 1;
}

/* A Composite containing summary details of a Release. */
message mead_ReleaseSummary {
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Release to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated mead_PartyNameWithTerritory display_artist = 1;
/* A Composite containing details of a Title of the Release as the MessageSender suggests it should be shown to the Consumer. */
	repeated mead_DisplayTitle display_title = 2;
/* A Composite containing details of a ReleaseId. */
	optional mead_ReleaseId release_id = 3;
}

/* A Composite containing details of a ReleaseTitle. */
message mead_ReleaseTitle {
/* The Language and script of the ReleaseTitle as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a DDEX Resource. */
message mead_Resource {
/* The catalogue number of the Resource for which information is provided. */
	optional string catalog_number = 1;
/* A Composite containing details of a DisplayArtist of the Resource for which information is provided. */
	repeated mead_DisplayArtist display_artist = 2;
/* The ISRC of the Resource for which information is provided. */
	optional string i_s_r_c = 3;
/* A ProprietaryIdentifier of the Resource for which information is provided. */
	optional string proprietary_resource_id = 4;
/* The Title of the Resource for which information is provided. */
	repeated mead_ResourceTitle resource_title = 5;
}

/* A Composite containing details of a StudioRole. */
message mead_ResourceContributorRole {
/* The Namespace of the StudioRole. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the StudioRole. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ResourceContributorRole ext_value = 3;
}

/* A Composite containing details of ResourceIds. */
message mead_ResourceId {
/* A Composite containing details of the CatalogNumber of the Resource. */
	optional mead_CatalogNumber catalog_number = 1;
/* The ISAN (International Standard Audiovisual Number as defined in ISO 15706) for the Resource. An ISAN comprises four blocks of four hexadecimal charaters followed by a check character. DDEX will enforce the syntax [A-F0-9]{12} using XML Schema in the future. */
	optional string i_s_a_n = 2;
/* The ISBN (International Standard Book Number defined in ISO 2108) for the Resource. An ISBN is a 13-digit number. Pre-2007, ISBNs, which had 10-digits and are now deprecated, are converted by adding the prefix '978' and re-calculating the check character. DDEX will enforce the syntax 97[8-9][0-9]{9}[X0-9] using XML Schema in the future. */
	optional string i_s_b_n = 3;
/* The ISMN (International Standard Music Number defined in ISO 10957) for the Resource. An ISMN is a thirteen-digit number. Pre-2008 ISMNs, which had 10 characters and are now deprecated, are converted by replacing the initial letter ('M') with '979-0'. DDEX will enforce the syntax 979[0-9]{9}[X0-9] using XML Schema in the future. */
	optional string i_s_m_n = 4;
/* The ISRC (International Standard Recording Code as defined in ISO 3901) for the Resource. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits. DDEX will enforce the syntax [a-zA-Z]{2}[a-zA-Z0-9]{3}[0-9]{7} using XML Schema in the future. */
	optional string i_s_r_c = 5;
/* The ISSN (International Standard Serial Number defined in ISO 3297) for the Resource. An ISSN comprises two groups of four digits, separated by a hyphen and a control digit. DDEX will enforce the syntax [0-9]{4}-[0-9]{3}[X0-9] using XML Schema in the future. */
	optional string i_s_s_n = 6;
/* A Composite containing details of a ProprietaryIdentifier of the Resource. */
	repeated mead_ProprietaryId proprietary_id = 7;
/* The SICI (Serial Item and Contribution Identifier defined in ANSI/NISO Z39.56-199) for the Resource. DDEX will enforce the syntax [0-9]{4}-[0-9]{3}[X0-9].+ using XML Schema in the future. */
	optional string s_i_c_i = 8;
/* The V-ISAN (Version Identifier of a International Standard Audiovisual Number as defined in ISO 15706-2) for the Resource. A V-ISAN comprises four blocks of four hexadecimal charaters followed by a check character, followed by two further blocks of four hexadecimal characters, followed by a further check character. DDEX will enforce the syntax [A-F0-9]{24} using XML Schema in the future. */
	optional string v_i_s_a_n = 9;
}

/* A Composite containing details of a Resource. */
message mead_ResourceInformation {
/* A Composite containing details of the absolute pitch of the Resource. */
	optional mead_AbsolutePitch absolute_pitch = 1;
/* A Composite containing details of an AlternativeTitle of the Resource to aid the recipient to identify the recording by Titles other than the official Title. */
	repeated mead_AlternativeTitle alternative_title = 2;
/* A Territory to which the information applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 3;
/* A Composite containing details of a related Artist that was influenced or that was an influencer. */
	repeated mead_ArtisticInfluence artistic_influence = 4;
/* A Composite containing details of an award. Recipients are requested to make sure they only trust this information if it is sent from a reputable and, ideally, authoritative source. */
	repeated mead_Award award = 5;
/* A Composite containing details of the beats of the Resource. */
	optional mead_BeatsPerMinute beats_per_minute = 6;
/* A Composite containing details of a commentary note. */
	repeated mead_CommentaryNote commentary_note = 7;
/* A Composite containing details of a dance and rhythm style. */
	repeated mead_DanceAndRhythmStyle dance_and_rhythm_style = 8;
/* A Composite containing details of an epoch in a artist's career which the Resource is related to. */
	repeated mead_Epoch epoch = 9;
/* A Composite containing details of a Genre Category. */
	repeated mead_GenreCategory genre_category = 10;
/* A Composite containing details of a harmony of the Resource. */
	optional mead_Harmony harmony = 11;
/* A Composite containing details of historic charting information. Recipients are requested to make sure they only trust this information if it is sent from a reputable and, ideally, authoritative source. */
	repeated mead_HistoricChartingInformation historic_charting_information = 12;
/* A Composite containing details of an Image relating to the Resource. */
	repeated mead_Image image = 13;
/* A Composite containing details of an Instrument relating to the Resource. */
	repeated mead_InstrumentUsed instrument_used = 14;
/* A Flag indicating whether the Recording is a Cover (=true) or not (=false). */
	optional mead_Flag is_cover = 15;
/* A Flag indicating whether the Recording is an OriginalRecording (=true) or not (=false). */
	optional mead_Flag is_original = 16;
/* A Composite containing details of a similar Resource. */
	repeated mead_SimilarResource is_similar = 17;
/* A Composite containing details of a RecordingSession. */
	repeated mead_LocationAndDateOfSession location_and_date_of_session = 18;
/* A Composite containing details of a theme for the Lyrics. */
	repeated mead_Theme lyric_theme = 19;
/* A Composite containing details of Lyrics. */
	repeated mead_Lyrics lyrics = 20;
/* A Composite containing details of a mood. */
	repeated mead_Mood mood = 21;
/* The EndDate of a Period in which the Resource is a priority item. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional mead_ddex_IsoDate priority_period_end_date = 22;
/* The StartDate of a Period in which the Resource is a priority item. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional mead_ddex_IsoDate priority_period_start_date = 23;
/* A Composite containing details of a theme for the Recording. */
	repeated mead_Theme programmatic_theme = 24;
/* A Composite containing details of a Recording Part. */
	repeated mead_RecordingPart recording_part = 25;
/* A Composite containing details of a related Resource. */
	repeated mead_ResourceRelationship related_resource = 26;
/* A Composite containing summary details of a Resource. */
	optional mead_ResourceSummary resource_summary = 27;
/* A Composite containing details of a sample. */
	repeated mead_Sample sample = 28;
/* A Composite containing details of a sub-genre of the Resource. */
	optional mead_SubGenreCategory sub_genre_category = 29;
/* A Composite containing details of a time signature of the Resource. */
	optional mead_TimeSignature time_signature = 30;
/* A Composite containing details of a Context in which the Resource has been used. */
	repeated mead_Usage usage = 31;
/* A Composite containing details of a MusicalWork that has been used in the recording. */
	repeated mead_UsedMusicalWork used_musical_work = 32;
/* A Composite containing details of a vocal register of the Resource. */
	optional mead_VocalRegister vocal_register = 33;
}

/* A Composite containing detailed information about one or more Resources. */
message mead_ResourceInformationList {
/* A Composite containing detailed information about a Resource. */
	repeated mead_ResourceInformation resource_information = 1;
}

/* A Composite containing details of a related Resource. */
message mead_ResourceRelationship {
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the related Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s) */
	optional mead_DisplayArtistNameWithDefault display_artist_name = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Type of the related Resource. */
	optional mead_RelatedResourceType related_resource_type = 3;
/* A Composite containing details of ResourceIds for the related Resource. */
	optional mead_ResourceId resource_id = 4;
/* A Composite containing details of a Title of the related Resource. */
	repeated mead_TitleWithPronunciation title = 5;
}

/* A Composite containing details of a ResourceRelationshipType. */
message mead_ResourceRelationshipType {
/* The Namespace of the ResourceRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ResourceRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ResourceRelationshipType ext_value = 3;
}

/* A Composite containing summary details of a Resource. */
message mead_ResourceSummary {
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated mead_PartyNameWithTerritory display_artist = 1;
/* A Composite containing details of a Title of the Resource as the MessageSender suggests it should be shown to the Consumer. */
	repeated mead_DisplayTitle display_title = 2;
/* A Composite containing details of a ResourceId. */
	optional mead_ResourceId resource_id = 3;
}

/* A Composite containing details of a ResourceTitle. */
message mead_ResourceTitle {
/* The Language and script of the ResourceTitle as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a root chord note. */
message mead_RootChordNote {
/* The Namespace of the root chord note. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the root chord note. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_RootChordNote ext_value = 3;
}

/* A Composite containing details of a root chord quality. */
message mead_RootChordQuality {
/* The Namespace of the root chord quality. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the root chord quality. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_RootChordQuality ext_value = 3;
}

/* A Composite containing details of a sample. */
message mead_Sample {
/* The Flag indicating whether the SoundRecording contains samples (=true) or not (=false). */
	optional bool contains_samples = 1;
/* A Composite containing a Description of the sample. */
	repeated mead_TextWithFormat description = 2;
/* A Composite containing details of a StartTime and a Duration of a host Resource. */
	repeated mead_Timing host_timing = 3;
/* A Flag indicating whether the SoundRecording is contained in a sample (=true) or not (=false). */
	optional bool is_contained_in_sample = 4;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 5;
/* A Composite containing details of a related Resource. */
	optional mead_ResourceSummary related_resource = 6;
/* A Composite containing a Description of a sample feature. */
	repeated mead_SampleFeature sample_feature = 7;
/* A Composite containing details of a StartTime and a Duration of a sample Resource. */
	repeated mead_Timing sample_timing = 8;
}

/* A Composite containing details of a sample feature. */
message mead_SampleFeature {
/* The Language and script of the sample feature as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a SessionType. */
message mead_SessionType {
/* The Namespace of the SessionType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the SessionType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_SessionType ext_value = 3;
}

/* A Composite containing details of a similar Party. */
message mead_SimilarParty {
/* A Composite containing a Description of the similarity. */
	repeated mead_Annotation description = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Composite containing details of the Party. */
	optional mead_PartyWithNames party = 3;
}

/* A Composite containing details of a similar Release. */
message mead_SimilarRelease {
/* A Composite containing a Description of the similarity. */
	repeated mead_Annotation description = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Composite containing details of the Release. */
	optional mead_Release release = 3;
}

/* A Composite containing details of a similar Resource. */
message mead_SimilarResource {
/* A Composite containing a Description of the similarity. */
	repeated mead_Annotation description = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Composite containing details of the Resource. */
	optional mead_Resource resource = 3;
}

/* A Composite containing details of a similar Work. */
message mead_SimilarWork {
/* A Composite containing a Description of the similarity. */
	repeated mead_Annotation description = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Composite containing details of the Work. */
	optional mead_Work work = 3;
}

/* A Composite containing details of a source. The Atom source construct is defined in section 4.2.11 of the format spec. */
message mead_Source {
	repeated string any_attribute_value = 1;
	repeated string any_value = 2;
/* A Composite containing details of the Name, Identifier and Role(s) of an author of a Resource. */
	repeated mead_Person author = 3;
/* A Composite containing details of a category. */
	repeated mead_Category category = 4;
/* A Composite containing details of the Name, Identifier and Role(s) of a contributor to a Resource. */
	repeated mead_Person contributor = 5;
/* A Composite containing details of a generator. */
	optional mead_Generator generator = 6;
/* A Composite containing details of an icon. */
	optional mead_Icon icon = 7;
/* A Composite containing details of an ID. */
	optional mead_Id id = 8;
/* A Composite containing details of a link. */
	repeated mead_Link link = 9;
/* A Composite containing details of a logo. */
	optional mead_Logo logo = 10;
/* A Composite containing details of rights. */
	optional mead_Text rights = 11;
/* A Composite containing details of a subtitle. */
	optional mead_Text subtitle = 12;
/* A Composite containing details of a title. */
	optional mead_Text title = 13;
/* A Composite containing details of an update. */
	optional mead_DateTime updated = 14;
}

/* A Composite containing details of a sub-genre within the classical genre. */
message mead_SubGenreCategory {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* The text of the sub-genre. */
	repeated mead_SubGenreCategoryValue value = 2;
}

/* A Composite containing details of a sub-genre within the classical genre. */
message mead_SubGenreCategoryValue {
/* The Namespace of the classical sub-genre. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the vocal register. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_SubGenre ext_value = 3;
}

/* A Composite containing details of a tempo. */
message mead_Tempo {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* The value of the tempo. */
	optional mead_TempoValue value = 2;
}

/* A Composite containing details of a tempo. */
message mead_TempoValue {
/* The Namespace of the tempo. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the tempo. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_Tempo ext_value = 3;
}

/* A Composite containing details of a text. The Atom text construct is defined in section 3.1 of the format spec. */
message mead_Text {
	repeated string any_attribute_value = 1;
	optional string any_value = 2;
/* The type. This is represented in an XML schema as an XML Attribute. */
	optional avs_TextType_ATOM type = 3;
}

/* A Composite containing details of an Annotation, e.g. a Description or a Comment. */
message mead_TextWithFormat {
/* A Territory to which the Annotation applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The format of the Annotation. This is represented in an XML schema as an XML Attribute. */
	optional avs_TextCodecType format = 2;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 3;
/* The Language and script of the Annotation as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
/* The Namespace of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 5;
/* A UserDefined value of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 6;
	optional string ext_value = 7;
}

/* A Composite containing details of an Annotation, e.g. a Description or a Comment.Explanatory Note: This Composite is named TextWithoutTerritory to disambiguate it from the basic TextWithFormat Composite. */
message mead_TextWithoutTerritory {
/* A Territory to which the Annotation applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The format of the Annotation. This is represented in an XML schema as an XML Attribute. */
	optional avs_TextCodecType format = 2;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 3;
/* The Language and script of the Annotation as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
/* The Namespace of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 5;
/* A UserDefined value of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 6;
	optional string ext_value = 7;
}

/* A Composite containing details of a theme. */
message mead_Theme {
/* A Territory to which the theme applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing a Description of the theme. */
	repeated mead_TextWithoutTerritory description = 2;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 3;
/* A Composite containing details of a theme value. */
	optional mead_ThemeValue value = 4;
}

/* A Composite containing details of a theme value. */
message mead_ThemeValue {
/* The Namespace of the element. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the element. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_Theme ext_value = 3;
}

/* A Composite containing details of a time signature. */
message mead_TimeSignature {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* A Composite containing details of a meter. */
	optional mead_Meter meter = 2;
/* A Composite containing details of a time signature modulation. */
	repeated mead_TimeSignatureModulation modulation = 3;
/* A Flag indicating whether a meter was not available (=true) or whether it was (=false). */
	optional bool no_meter_available = 4;
/* A Composite containing details of a tempo. */
	optional mead_TempoValue tempo = 5;
/* A Flag indicating whether there are too many tempi to provide any information (=true) or not (=false). */
	optional bool too_many_tempi = 6;
}

/* A Composite containing details of a time signature modulation. */
message mead_TimeSignatureModulation {
/* The end point given in bars from the start of the referenced Work. */
	optional int32 end_bar = 1;
/* The end point given in seconds from the start of the referenced Resource. */
	optional double end_point = 2;
/* A Composite containing details of a meter of the modulation. */
	optional mead_Meter meter = 3;
/* A Flag indicating whether a meter was not available (=true) or whether it was (=false). */
	optional bool no_meter_available = 4;
/* The start point given in bars from the start of the referenced Work. */
	optional int32 start_bar = 5;
/* The start point given in seconds from the start of the referenced Resource. */
	optional double start_point = 6;
/* A Composite containing details of a tempo of the modulation. */
	optional mead_Tempo tempo = 7;
}

/* A Composite containing details of a StartTime and a Duration of a Resource. */
message mead_Timing {
/* The total Duration of the related Resource that has been used (this may be less than the total Duration of the Resource) (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration_used = 1;
/* The start point of the related Resource from the start of the referencing Resource (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string start_point = 2;
}

/* A Composite containing details of a Title and its pronunciation.Explanatory Note: This Composite is named TitleTextWithPronunciation to disambiguate it from the basic Title Composite. */
message mead_TitleTextWithPronunciation {
/* The string describing the pronunciation. */
	repeated mead_Pronunciation pronunciation = 1;
/* The Title string. */
	optional string title = 2;
}

/* A Composite containing details of a Title.Explanatory Note: This Composite is named TitleWithPronunciation to disambiguate it from the basic Title Composite. */
message mead_TitleWithPronunciation {
/* The Language and script for the Elements of the Title as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* The Namespace of the TitleType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 2;
/* A SubTitle of the Title, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
	optional mead_TitleTextWithPronunciation sub_title = 3;
/* The text of the Title.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional mead_TitleTextWithPronunciation title_text = 4;
/* A Type of the Title which defines its origin or the function it fulfils in relation to a Creation. Note: A Title may fulfil more than one role. Example: 'Help' may be both the OriginalTitle and the DisplayTitle for the well-known Beatles song. This is represented in an XML schema as an XML Attribute. */
	optional avs_TitleType title_type = 5;
/* A UserDefined value of the TitleType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 6;
}

/* A Composite containing details of a URI. */
message mead_URI {
	repeated string any_attribute_value = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a Context in which a Work or Resource has been used. */
message mead_Usage {
/* A Composite containing a textual Description of the usage, e.g. 'Woodstock festival' or 'advert' or 'theme song from movie XYZ'. */
	repeated mead_TextWithFormat description = 1;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 2;
/* A Composite containing details of a relevant Resource. */
	repeated mead_RelatedResource relevant_resource = 3;
/* The number indicating the order of the usage in a group of usages. */
	optional int32 sequence_number = 4;
/* A Composite containing details of the Date and Place of the usage (in ISO 8601:2004 format: YYYY-MM-DD). */
	repeated mead_EventDate usage_date = 5;
/* A Composite containing details about the Period of Time for which a usage is reported. */
	repeated mead_UsagePeriod usage_period = 6;
}

/* A Composite containing details about a Period of Time. Periods are typically describedby at least a StartDate or EndDate (or StartDateTime or EndDateTime) where the StartDate(Time) and EndDate(Time) are included in the Period. Thus a one-day period can be described by using the same date in the StartDate and EndDate. If two subsequent Periods form a continuum (i.e. with no break in-between) there are two ways to express this: (a) if using dates, the EndDate of the first Period must be one day before the StartDate of the second Period; (b) if using date times, the EndDateTime of the first Period must be the same as the StartDateTime of the second Period. */
message mead_UsagePeriod {
/* A Composite containing details of the Date and Place of an Event that marks the end of the Period (in ISO 8601:2004 format: YYYY-MM-DD). The EndDate must not be earlier than the StartDate if both are provided. */
	optional mead_EventDateWithoutFlags end_date = 1;
/* A Composite containing details of the Date and Place of an Event that marks the beginning of the Period (in ISO 8601:2004 format: YYYY-MM-DD). The StartDate must be no later than the EndDate if both are provided. */
	optional mead_EventDateWithoutFlags start_date = 2;
}

/* A Composite containing details of a MusicalWork that has been used in a recording. */
message mead_UsedMusicalWork {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* A Reference for the MusicalWork (specific to this Message). This is a LocalMusicalWorkAnchorReference starting with the letter W. */
	repeated string resource_musical_work_reference = 2;
}

/* A Composite containing details of a venue. */
message mead_Venue {
/* An UN/Locode of the venue. */
	optional string location_code = 1;
/* A Territory of the VenueAddress. The use of ISO TerritoryCodes is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard. */
	optional mead_AllTerritoryCode territory_code = 2;
/* The Address of the venue. The level of description may be more or less granular, possibly including only the name of the city. */
	optional string venue_address = 3;
/* The Name of the venue. */
	optional string venue_name = 4;
/* A specific studio of the venue where a Session took place. */
	optional string venue_room = 5;
}

/* A Composite containing details of a vocal register. */
message mead_VocalRegister {
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 1;
/* The value of the vocal register. */
	optional mead_VocalRegisterValue value = 2;
}

/* A Composite containing details of a vocal register. */
message mead_VocalRegisterValue {
/* The Namespace of the vocal register. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the vocal register. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_VocalRegister ext_value = 3;
}

/* A Composite containing details of a Work. */
message mead_Work {
/* The ISWC of the Work for which information is provided. */
	optional string i_s_w_c = 1;
/* A ProprietaryIdentifier of the Work for which information is provided. */
	optional string proprietary_work_id = 2;
/* The Title of the Work for which information is provided. */
	repeated mead_WorkTitle work_title = 3;
/* A Composite containing details of a writer of the Work for which information is provided. */
	repeated mead_PartyWithNames writer = 4;
}

/* A Composite containing details of parents, children and siblings of a Work. */
message mead_WorkHierarchy {
/* A Composite containing details of parents, children and siblings of the Work. */
	repeated mead_ChildWorkHierarchy child = 1;
/* A Composite containing details of a form of the Work (e.g. Concerto, Aria, 12 bar blues, etc.). */
	optional mead_Form form = 2;
/* The Flag indicating whether the hierarchy level is complete (=true) or not (=false). */
	optional bool is_complete = 3;
/* The Flag indicating whether this element of the hierarchy is the Work for which the hierarchy is described (=true) or not (=false). */
	optional bool is_described_element = 4;
/* A Reference for a Party (specific to this Message) that is the author of this metadata. This is a LocalMetadataSourceAnchorReference starting with the letter U. */
	repeated string metadata_source_reference = 5;
/* The number indicating the order of the Work in a group of Works. */
	optional int32 sequence_number = 6;
/* A Composite containing details of a MusicalWorkId. */
	optional mead_MusicalWorkId work_id = 7;
/* A Composite containing details of a Title of the Work. */
	repeated mead_WorkTitle work_title = 8;
}

/* A Composite containing details of a Work. */
message mead_WorkInformation {
/* A Composite containing details of an AlternativeTitle of the Work to aid the recipient to identify the recording by Titles other than the official Title. */
	repeated mead_AlternativeTitle alternative_title = 1;
/* A Composite containing details of a related Artist that was influenced or that was an influencer. */
	repeated mead_ArtisticInfluence artistic_influence = 2;
/* A Composite containing details of an award. Recipients are requested to make sure they only trust this information if it is sent from a reputable and, ideally, authoritative source. */
	repeated mead_Award award = 3;
/* A Composite containing details of a period of the Work. */
	optional mead_ClassicalPeriod classical_period = 4;
/* A Composite containing details of a commentary note. */
	repeated mead_CommentaryNote commentary_note = 5;
/* A Composite containing details of a dance and rhythm style. */
	repeated mead_DanceAndRhythmStyle dance_and_rhythm_style = 6;
/* A Composite containing details of a Recording of the Work. */
	repeated mead_DerivedRecording derived_recording = 7;
/* A Composite containing details of an epoch in a artist's career which the Work is related to. */
	repeated mead_Epoch epoch = 8;
/* A Composite containing details of a form of the Work (e.g. Concerto, Aria, 12 bar blues, etc.). */
	optional mead_Form form = 9;
/* A Composite containing details of a harmony of the Work. */
	optional mead_Harmony harmony = 10;
/* A Composite containing details of a similar Work. */
	repeated mead_SimilarWork is_similar = 11;
/* A Composite containing details of Lyrics. */
	repeated mead_Lyrics lyrics = 12;
/* A Composite containing details of a Mood created by the lyrics of the Work. */
	repeated mead_Mood lyrics_mood = 13;
/* The Identifier (specific to the Message) of the MusicalWork. This is a LocalMusicalWorkAnchor starting with the letter W. This element is only needed if and when a ResourceInformation composite that provides musical-work level information is used in the same MEAD message. */
	optional string musical_work_reference = 14;
/* A Composite containing details of a Work relating to the Work. */
	repeated mead_RelatedWork related_work = 15;
/* A Composite containing details of a sub-genre of the Work. */
	optional mead_SubGenreCategory sub_genre_category = 16;
/* A Composite containing details of an Instrument relating to the Work. */
	repeated mead_Instrument target_instrument = 17;
/* A Composite containing details of a theme. */
	repeated mead_Theme theme = 18;
/* A Composite containing details of a time signature of the Work. */
	optional mead_TimeSignature time_signature = 19;
/* A Composite containing details of a vocal register of the Work. */
	optional mead_VocalRegister vocal_register = 20;
/* A Composite containing details of parents, children and siblings of the Work. */
	repeated mead_WorkHierarchy work_hierarchy = 21;
/* A Composite containing summary details of the Work. */
	optional mead_WorkSummary work_summary = 22;
}

/* A Composite containing detailed information about one or more Works */
message mead_WorkInformationList {
/* A Composite containing detailed information about a Work. */
	repeated mead_WorkInformation work_information = 1;
}

/* A Composite containing details of a WorkRelationshipType. */
message mead_WorkRelationshipType {
/* The Namespace of the WorkRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the WorkRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_WorkRelationshipType ext_value = 3;
}

/* A Composite containing summary details of a Work. */
message mead_WorkSummary {
/* A Composite containing details of a MusicalWorkId. */
	optional mead_MusicalWorkId musical_work_id = 1;
/* A Composite containing details of a Title of the Work as the MessageSender suggests it should be shown to the Consumer. */
	repeated mead_TitleWithPronunciation work_title = 2;
/* A Composite containing details of the PartyName(s).Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
	repeated mead_PartyNameWithTerritory writer = 3;
}

/* A Composite containing details of a WorkTitle. */
message mead_WorkTitle {
/* The Language and script of the WorkTitle as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* SchemaConverter generated base level auto field wrapper */
message mead_ddex_IsoDate {
	optional string auto_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AdditionalTitleType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AdditionalUseType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AdditionalVideoType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AdministratingRecordCompanyRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AffiliationType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AllTerritoryCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ArtistRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ArtistType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AspectRatioType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AsserterType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AudioCodecType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_AvsVersionId {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_BinaryDataType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_BusinessMusicalWorkContributorRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CarrierType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CatalogTransferType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CdProtectionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CharacterType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ClaimStatus {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ClassifiedGenre {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CodingType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CommentaryNoteType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CommercialModelType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CommercialModelType_MWNL {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CompilationType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CompositeMusicalWorkType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ContainerFormat {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ContributorRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CreativeMusicalWorkContributorRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CueOrigin {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CueSheetType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CueUseType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CurrencyCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_CurrentTerritoryCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DanceAndRhythmStyle {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DataCarrierFormat {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DataCarrierType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DdexTerritoryCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DeprecatedCurrencyCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DeprecatedIsoTerritoryCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DeprecatedReleaseType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DigitizationMode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DisplayArtistRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DistributionChannelType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DocumentType_LoD {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DocumentType_MWL {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DpidStatus {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_DrmEnforcementType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ElementConfiguration {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ElementDesignation {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_EncodingType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_EquipmentType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ErnMessageType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ErnTestMessageType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ErncFileStatus {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ErncProposedActionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ErrorSeverity {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ErrorType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ExceptionReason {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ExpressionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ExternallyLinkedResourceType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_FileType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_FingerprintAlgorithmType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Form {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_FrameRate {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Gender {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_GoverningAgreementType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_HashSumAlgorithmType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ImageCodecType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ImageType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_InstrumentType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Iso639Part12LanguageCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Iso639Part3LanguageCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_IsoCurrencyCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_IsoLanguageCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_IsoTerritoryCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LabelNameType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LabelType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LanguageLocalizationType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LicenseRecord {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LicenseRefusalReason {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LicenseRejectionReason {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LinkAcknowledgementStatus {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LinkDescription {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_LyricsType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MembershipType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MessageActionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MessageControlType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MessagePurpose {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MessageType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MetadataSourceType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MissingLinkReason {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MlcMessageType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Mode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MoodType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MusicalWorkContributorRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MusicalWorkType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MwnlFileStatus {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_MwnlProposedActionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_NewStudioRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_OperatingSystemType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_PLineType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ParentalWarningType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_PartyRelationshipType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_PercentageType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Period {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_PhysicalCarrierType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_PriceInformationType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ProductType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ProfileId {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Purpose {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RatingAgency {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RatingReason {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RecipientRevenueType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RecordingMode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RecordingPartType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReferenceCreation {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReferenceUnit {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RegistrationStatus {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RelatedResourceType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RelationalRelator {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReleaseProfileVariantVersionId {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReleaseProfileVersionId {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReleaseRelationshipType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReleaseResourceType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReleaseType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReleaseType_ERN4 {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ReleaseType_MCNOTIF {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RequestMessagePurpose {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RequestReason {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ResourceContributorRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ResourceGroupType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ResourceRelationshipType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ResourceType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ResourceType_MCNOTIF {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ResourceWorkRelationshipType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RevenueSourceType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RightShareType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RightsClaimPolicyType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RightsClaimStatus {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RightsControllerRole {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RightsControllerType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RightsCoverage {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RightsCoverage_MWNL {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RightsStatementProfile {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RootChordNote {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RootChordQuality {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RoyaltyRateCalculationType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_RoyaltyRateType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_SessionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_SheetMusicCodecType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_SheetMusicType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_SoftwareType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_SoundRecordingType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Status {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_SubGenre {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_SubTitleType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_SupplyChainStatus {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Tempo {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TerritoryCodeType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TerritoryCodeTypeIncludingDeprecatedCodes {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TextCodecType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TextType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TextType_ATOM {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_Theme {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_ThemeType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TimecodeType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TisTerritoryCode {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TitleType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TransferCategory {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_TransferType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UnitOfBitRate {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UnitOfConditionValue {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UnitOfCuePoints {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UnitOfDuration {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UnitOfExtent {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UnitOfFrameRate {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UnitOfFrequency {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UseType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UseType_MLC {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UseType_MWNL {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_UserInterfaceType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_VersionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_VideoCodecType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_VideoDefinitionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_VideoType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_VideoType_DSRF {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_VisualPerceptionType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_VocalRegister {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_VocalType {
	optional string enum_value = 1;
}

/* SchemaConverter generated enum replacement message type */
message avs_WorkRelationshipType {
	optional string enum_value = 1;
}

