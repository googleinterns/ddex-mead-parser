syntax = "proto2";
package ern42;

/* A Composite containing details of an AdditionalTitle. */
message ern_AdditionalTitle {
/* A Territory to which the Title applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script for the Elements of the Title as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* The Namespace of the AdditionalTitleType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 4;
/* A Composite containing details of a SubTitle of the Title, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
	repeated ern_DisplaySubTitle sub_title = 5;
/* The text of the Title.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional string title_text = 6;
/* A Type of the Title which defines its origin or the function it fulfils in relation to a Creation. Note: A Title may fulfil more than one role. Example: 'Help' may be both the OriginalTitle and the DisplayTitle for the well-known Beatles song. This is represented in an XML schema as an XML Attribute. */
	optional avs_AdditionalTitleType title_type = 7;
/* A UserDefined value of the AdditionalTitleType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 8;
}

/* A Composite containing details of a AdministratingRecordCompanyRole. */
message ern_AdministratingRecordCompanyRole {
/* The Namespace of the AdministratingRecordCompanyRole. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the AdministratingRecordCompanyRole. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_AdministratingRecordCompanyRole ext_value = 3;
}

/* A Composite containing details of an AdministratingRecordCompany.Explanatory Note: This Composite is named AdministratingRecordCompanyWithReference to disambiguate it from the basic AdministratingRecordCompany Composite. */
message ern_AdministratingRecordCompanyWithReference {
/* A Reference for a Party (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	optional string record_company_party_reference = 1;
/* The role played by the Party responsible for administering Rights in a Resource or a Release. */
	optional ern_AdministratingRecordCompanyRole role = 2;
}

/* A Composite containing details of a business deal with another Party. */
message ern_Affiliation {
/* The Name of the company. */
	optional string company_name = 1;
/* A Territory to which the affiliation details do not apply. Either this Element or Territory shall be present, but not both. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard. */
	repeated ern_CurrentTerritoryCode excluded_territory_code = 2;
/* A Reference for an affiliated Party (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	optional string party_affiliate_reference = 3;
/* Percentage of the specific Right that is represented by the society. A quarter share is represented by '25' (and not 0.25). */
	optional double percentage_of_rights_assignment = 4;
/* A Composite containing details of a rights type. */
	repeated ern_SimpleRightsType rights_type = 5;
/* A Territory to which the affiliation details apply. Either this Element or ExcludedTerritory shall be present, but not both. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	repeated ern_CurrentTerritoryCode territory_code = 6;
/* The Type of affiliated Party. */
	optional avs_AffiliationType type = 7;
/* A Composite containing details about the Period of Time for which the society affiliation is valid.Further Reading: https://kb.ddex.net/display/HBK/Dates%3A+exclusive+vs.+inclusive */
	optional ern_ValidityPeriod validity_period = 8;
}

/* A Composite containing details of a TerritoryCode. */
message ern_AllTerritoryCode {
/* A standard used for the TerritoryCode. This is represented in an XML schema as an XML Attribute. If this Attribute is not provided, it is assumed that the code is a TerritoryCode in accordance with ISO 3166-1 or 3166-2 standard (or Worldwide). */
	optional avs_TerritoryCodeTypeIncludingDeprecatedCodes identifier_type = 1;
	optional avs_AllTerritoryCode ext_value = 2;
}

/* A Composite containing an AspectRatio and an AspectRatioType. */
message ern_AspectRatio {
/* The Type of the AspectRatio. This is represented in an XML schema as an XML Attribute. If this Attribute is not provided, it is assumed that the AspectRatio is a PixelAspectRatio. */
	optional avs_AspectRatioType aspect_ratio_type = 1;
	optional double ext_value = 2;
}

/* A Composite containing details of an AudioCodecType. */
message ern_AudioCodecType {
/* The Namespace of the AudioCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the AudioCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
/* The Identifier of the Version of the AudioCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional avs_AudioCodecType ext_value = 4;
}

/* A Composite containing details of a rating for an audio-visual Creation. */
message ern_AvRating {
/* A Composite containing details of an Organization that issues the AvRating. */
	optional ern_RatingAgency agency = 1;
/* A Territory to which the AvRating applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 2;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 3;
/* The text of the AvRating. */
	optional string rating = 4;
/* A Composite containing details of a Reason for a rating being applied. */
	optional ern_RatingReason reason = 5;
}

/* A Composite containing a BitRate and a UnitOfMeasure. */
message ern_BitRate {
/* The UnitOfMeasure of the BitRate. This is represented in an XML schema as an XML Attribute.  */
	optional avs_UnitOfBitRate unit_of_measure = 1;
	optional double ext_value = 2;
}

/* A Composite containing details of a CLine. */
message ern_CLine {
/* The Name of the company releasing the Creation. This may be an owner or a Licensee of the Creation. */
	optional string c_line_company = 1;
/* The text of the CLine. */
	optional string c_line_text = 2;
/* The Language and script of the CLineText as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* The Year of the CLine. */
	optional uint32 year = 4;
}

/* A Composite containing details of a CLine.Explanatory Note: This Composite is named CLineWithDefault to disambiguate it from the basic CLine Composite. */
message ern_CLineWithDefault {
/* A Territory to which the CLine applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Name of the company releasing the Creation. This may be an owner or a Licensee of the Creation. */
	optional string c_line_company = 2;
/* The text of the CLine. */
	optional string c_line_text = 3;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 4;
/* The Language and script of the CLineText as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
/* The Year of the CLine. */
	optional uint32 year = 6;
}

/* A Composite containing details of a CarrierType. */
message ern_CarrierType {
/* The Namespace of the CarrierType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the CarrierType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_CarrierType ext_value = 3;
}

/* A Composite containing details of a CatalogNumber. */
message ern_CatalogNumber {
/* The Namespace of the CatalogNumber. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a Chapter. Chapters referenced from Video Resources are of ChapterType VideoChapter. Chapters referenced from a Release composite are of ChapterType Series, Season or Episode. */
message ern_Chapter {
/* A Composite containing details of an AdditionalTitle of the Chapter. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of an Identifier of the Chapter. */
	repeated ern_ProprietaryId chapter_id = 2;
/* The Identifier (specific to the Message) of the Chapter within the Release which contains it. This is a LocalCollectionAnchor starting with the letter X. */
	optional string chapter_reference = 3;
/* A Composite containing details of a Character in the Chapter. A Character may be described through Name, Identifier and Roles. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_Character character = 4;
/* A Composite containing details of a Contributor to the Chapter. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_Contributor contributor = 5;
/* A Composite containing details of a Title of the Chapter as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 6;
/* A Composite containing details of a Title of the Chapter as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 7;
/* The Duration of the use of the Chapter (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration = 8;
/* The end time of the Chapter, measured from the start of the Resource that contains it (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string end_time = 9;
/* The Language and script for the Elements of the Collection as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 10;
/* A Reference for an Image (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	optional string representative_image_reference = 11;
/* The number indicating the order of the Chapter within all Chapters at this level. The default value is 1, and the value must be incremented by 1 for each Chapter occurring at a particular level. */
	optional int32 sequence_number = 12;
/* The start time of the Chapter, measured from the start of the Resource that contains it (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string start_time = 13;
}

/* A Composite containing details of one or more Chapters. */
message ern_ChapterList {
/* A Composite containing details of a Chapter contained in a Resource. */
	repeated ern_Chapter chapter = 1;
/* The Language and script for the Elements of the ChapterList as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
}

/* A Composite containing details of a Character. A Character may be described through Name, Identifier and Roles. */
message ern_Character {
/* A Reference for a Party (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	optional string character_party_reference = 1;
/* A Composite containing details of the Name, Identifier and Role(s) of a Performer. */
	optional ern_Contributor performer = 2;
/* The number indicating the order of the Character in a group of Characters. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 3;
}

/* A Composite containing details of a CommercialModelType. */
message ern_CommercialModelType {
/* The Namespace of the CommercialModelType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the CommercialModelType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_CommercialModelType_ERN ext_value = 3;
}

/* A Composite containing details of a Condition.Explanatory Note: This Composite is named ConditionForRightsClaimPolicy to disambiguate it from the basic mwnl:Condition Composite. */
message ern_ConditionForRightsClaimPolicy {
/* A Type to signal whether the Measurement should be made on the audio, the video, either or both. The absence of this element means that the terms of the contract between MessageSender and MessageRecipient rule. */
	optional avs_MeasurementType measurement_type = 1;
/* A Creation that is used as a reference when the unit is Percent, so it can be expressed whether the value is a percentage of the reference Resource for which rights are claimed or of a consumer's UserGeneratedContent. */
	optional avs_ReferenceCreation reference_creation = 2;
/* A Relator expressing the accuracy of the condition value. */
	optional avs_RelationalRelator relational_relator = 3;
/* A UnitOfMeasure for the condition value. */
	optional avs_UnitOfConditionValue unit = 4;
/* The numeric value of the Condition. */
	optional double value = 5;
}

/* A Composite containing details of a ContainerFormat. */
message ern_ContainerFormat {
/* The Namespace of the ContainerFormat. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ContainerFormat. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ContainerFormat ext_value = 3;
}

/* A Composite containing details of the Name, Identifier and Role(s) of a Contributor to a Resource. */
message ern_Contributor {
/* A Reference for a Party (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	optional string contributor_party_reference = 1;
/* A Role for which the Party is credited. */
	repeated ern_DisplayCredits display_credits = 2;
/* A Flag indicating whether the Party is an Artist that has a contract for its part in creating the Resource (=true) or not (=false). */
	optional bool has_made_contracted_contribution = 3;
/* A Flag indicating whether the Party is a featured Artist (=true) or not (=false). */
	optional bool has_made_featured_contribution = 4;
/* A Type of musical Instrument played by the Contributor. */
	repeated ern_InstrumentType instrument_type = 5;
/* A Flag indicating whether the Contributor is credited as having played a role in creating the Recording (=true) or not (=false). */
	optional ern_IsCredited is_credited = 6;
/* A Composite containing details of a Role played by the Contributor. */
	repeated ern_ContributorRole role = 7;
/* The number indicating the order of the ResourceContributor in a group of ResourceContributors that have contributed to a Resource. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 8;
}

/* A Composite containing details of a ContributorRole. Note: this can be used in a DdexMessage in relation to any Work, Performance or Fixation any of which may form the whole or part of the Resource itself. */
message ern_ContributorRole {
/* The Namespace of the ContributorRole. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ContributorRole. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ContributorRole ext_value = 3;
}

/* A Composite containing details of the core part of a Video. */
message ern_CoreArea {
/* The position of the bottom right corner of the core area measured in Pixels. The position is given as two coordinate values separated by a comma, the top left pixel being 0,0. */
	optional string bottom_right_corner = 1;
/* The position of the top left corner of the core area measured in Pixels. The position is given as two coordinate values separated by a comma, the top left pixel being 0,0. */
	optional string top_left_corner = 2;
}

/* A Composite containing details of a CourtesyLine.Explanatory Note: This Composite is named CourtesyLineWithDefault to disambiguate it from the basic CourtesyLine Composite. */
message ern_CourtesyLineWithDefault {
/* A Territory to which the CourtesyLine applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script of the CourtesyLine as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	optional string ext_value = 4;
}

/* A Composite containing details of a CueOrigin. */
message ern_CueOrigin {
/* The Namespace of the CueOrigin. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the CueOrigin. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_CueOrigin ext_value = 3;
}

/* A Composite containing details of a CueSheetType. */
message ern_CueSheetType {
/* The Namespace of the CueSheetType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the CueSheetType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_CueSheetType ext_value = 3;
}

/* A Composite containing details of a ThemeType for a Creation referenced in a Cue. */
message ern_CueThemeType {
/* The Namespace of the ThemeType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ThemeType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ThemeType ext_value = 3;
}

/* A Composite containing details of a CueUseType. */
message ern_CueUseType {
/* The Namespace of the CueUseType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the CueUseType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_CueUseType ext_value = 3;
}

/* A Composite containing details of a VisualPerceptionType for a Creation referenced in a Cue. */
message ern_CueVisualPerceptionType {
/* The Namespace of the VisualPerceptionType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the VisualPerceptionType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_VisualPerceptionType ext_value = 3;
}

/* A Composite containing details of a VocalType for a Creation referenced in a Cue. */
message ern_CueVocalType {
/* The Namespace of the VocalType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the VocalType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_VocalType ext_value = 3;
}

/* A Composite containing details of a TerritoryCode. */
message ern_CurrentTerritoryCode {
/* A standard used for the TerritoryCode. This is represented in an XML schema as an XML Attribute. If this Attribute is not provided, it is assumed that the code is a TerritoryCode in accordance with ISO 3166-1 or 3166-2 standard (or Worldwide). */
	optional avs_TerritoryCodeType identifier_type = 1;
	optional avs_CurrentTerritoryCode ext_value = 2;
}

/* A Composite containing details of a DSP acting as a Licensee in a commercial relationship. */
message ern_DSP {
/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, producers or other Creators. */
	repeated ern_DetailedPartyId party_id = 1;
/* A Composite containing details of the PartyName(s).Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
	repeated ern_PartyName party_name = 2;
/* A Composite containing a TradingName of the DSP.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional ern_Name trading_name = 3;
/* A URL for the DSP's web site. */
	repeated string u_r_l = 4;
}

/* A Composite containing details (in full or in summary) of a Deal made between a DSP (as Licensee) and a Licensor of Works or Releases. When any new DealTerms are added or removed from an existing Deal (different UseTypes, Prices, Territories, DistributionChannels) then a new Deal is created, and (if appropriate) the ValidityPeriod of the existing Deal should be terminated. The only changes which should be made to the DealTerms of an existing Deal are corrections required because of an earlier error or omission, or the addition of an EndDate to the Deal's ValidityPeriod. */
message ern_Deal {
/* A Reference to a TextDocument containing details of the Deal (in the form of an Identifier, Name or Description). */
	repeated string deal_reference = 1;
/* A Composite containing a list of DealTechnicalResourceDetailsReferences for the Deal. */
	optional ern_DealTechnicalResourceDetailsReferenceList deal_technical_resource_details_reference_list = 2;
/* A Composite containing details of the terms of the Deal.Further Reading: https://kb.ddex.net/display/HBK/Cancelling+a+Deal+Before+%E2%80%9CStreet+Date%E2%80%9D */
	optional ern_DealTerms deal_terms = 3;
/* A Composite containing details of a WebPage for the DistributionChannel. */
	repeated ern_DistributionChannelPage distribution_channel_page = 4;
/* A Flag indicating whether the Deal is communicated outside the usual ERN delivery and identified by an Identifier in the DealReference element (=true) or not (=false). It would be up to the MessageSender and MessageRecipient to ensure that this Deal Identifier is unique. */
	optional bool is_communicated_out_of_band = 5;
}

/* A Composite containing details of one or more Deals. */
message ern_DealList {
/* A Composite containing details of one or more Deals pertaining to one or more Releases.Further Reading: https://kb.ddex.net/display/HBK/Multiple+Deals+for+one+ReleaseFurther Reading: https://kb.ddex.net/display/HBK/Is+a+NewReleaseMessage+with+no+Deal+valid%3FFurther Reading: https://kb.ddex.net/display/HBK/Complex+Deals+can+be+Dangerous */
	repeated ern_ReleaseDeal release_deal = 1;
/* A Composite containing details of a set of Dates specifying when a Release can be shown to Consumers. */
	repeated ern_ReleaseVisibility release_visibility = 2;
/* A Composite containing details of a set of Dates specifying when a TrackRelease can be shown to Consumers. */
	repeated ern_TrackReleaseVisibility track_release_visibility = 3;
}

/* A Composite containing details of one or more Resources relating to a Deal. */
message ern_DealResourceReferenceList {
/* A Reference for a Resource (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	repeated string deal_resource_reference = 1;
}

/* A Composite containing a list of DealTechnicalResourceDetailsReferences. */
message ern_DealTechnicalResourceDetailsReferenceList {
/* A Reference for a Composite specifying technical details of a Resource (specific to this Message). This is a LocalTechnicalResourceDetailsAnchorReference starting with the letter T. */
	repeated string deal_technical_resource_details_reference = 1;
}

/* A Composite containing details of the terms of a Deal. */
message ern_DealTerms {
/* A Composite containing details of a Carrier. */
	repeated ern_CarrierType carrier_type = 1;
/* A Composite containing details of the fundamental business model which applies to the Deal (e.g. SubscriptionModel and PayAsYouGoModel). The CommercialModelType indicates how the Consumer pays for the Service or Release. */
	repeated ern_CommercialModelType commercial_model_type = 2;
/* A Composite containing details of the DSP through whose DistributionChannel the sales are permitted. If none are provided no limitations on the DistributionChannels are given. */
	repeated ern_DSP distribution_channel = 3;
/* A Composite containing details of excluded DSP. This is used in an aggregator model where all agreed partners of the aggregators may use a ReleaseDeal, except those that are listed herein. */
	repeated ern_DSP excluded_distribution_channel = 4;
/* A Territory in which the Deal does not apply. Either this Element or Territory must be present, but not both. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	repeated ern_CurrentTerritoryCode excluded_territory_code = 5;
/* A Composite containing details of one or more Resources that are only available for download as soon as the Release is purchased (i.e. before the ReleaseDate). */
	optional ern_DealResourceReferenceList instant_gratification_resource_list = 6;
/* A Flag indicating whether the Deal is covering only the period where the Release can be purchased by a consumer but not yet fulfilled (=true) or not (=false). */
	optional bool is_pre_order_deal = 7;
/* The Flag indicating whether a special Deal is made between the Licensor and the Licensee (=true) or not (=false) regarding the royalties or payments due to be paid for Releases distributed under this Deal. */
	optional bool is_promotional = 8;
/* A number of Products per carton. This is the smallest number of Products that can be ordered. */
	optional int32 number_of_products_per_carton = 9;
/* The number of times a Release can be used under the terms of the Deal. */
	optional int32 number_of_usages = 10;
/* A Composite containing details of physical returns. */
	optional ern_PhysicalReturns physical_returns = 11;
/* A Composite containing details of a Price. Note that this Price applies to all UseTypes referenced in this Composite.Further Reading: https://kb.ddex.net/display/HBK/PriceInformation */
	repeated ern_PriceInformationWithType price_information = 12;
/* A Composite containing details of a PromotionalCode. */
	optional ern_PromotionalCode promotional_code = 13;
/* A Composite containing details of a rights claim policy. */
	repeated ern_RightsClaimPolicy rights_claim_policy = 14;
/* A Composite containing technical details of the Release. */
	optional ern_DealTermsTechnicalInstantiation technical_instantiation = 15;
/* A Territory in which the Deal applies. Either this Element or ExcludedTerritory must be present, but not both. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	repeated ern_CurrentTerritoryCode territory_code = 16;
/* A Composite containing details of a nature of a Service, or a Release, as used by a Consumer. The UseType is mandatory unless the terms of the Deal were communicated beforehand (possibly out of band) and then referenced using a DealReference. */
	repeated ern_DiscoverableUseType use_type = 17;
/* A Composite containing details of a physical interface by which a Consumer uses a Service or Release. */
	repeated ern_UserInterfaceType user_interface_type = 18;
/* A Composite containing details about a Period of Time during which the Deal is valid. To indicate a Deal that is valid at the time of sending of a NewReleaseMessage, the MessageSender should use a StartDate or StartDateTime set in the past. No EndDate in this Composite means that the Deal is valid until further notice. StartDate and EndDate are deprecated and StartDateTime/EndDateTime should be used instead. DDEX advises that StartDate and EndDate may be removed at a future date and therefore recommends against using them.Further Reading: https://kb.ddex.net/display/HBK/Dates%3A+exclusive+vs.+inclusiveFurther Reading: https://kb.ddex.net/display/HBK/Start+Dates%2C+End+Dates%2C+Start+Date-Times+and+End+Date-Times+of+Deals */
	repeated ern_PeriodWithStartDate validity_period = 19;
}

/* A Composite containing technical details of a Release. */
message ern_DealTermsTechnicalInstantiation {
/* A Composite containing the BitRate for the audio data and a UnitOfMeasure (the default is kbps). */
	optional ern_BitRate bit_rate = 1;
/* A Type of coding used to encode a Resource. */
	optional avs_CodingType coding_type = 2;
/* A Type of resolution (or definition) in which a Video is provided. */
	optional ern_VideoDefinitionType video_definition_type = 3;
}

/* A Composite containing details of a Deity. */
message ern_Deity {
/* A Territory to which the Deity applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
	optional string ext_value = 3;
}

/* A Composite containing details of the kinds of usage for which Rights have been delegated. */
message ern_DelegatedUsageRights {
/* A Composite containing details about a Period of Time for which the delegation of usage Rights applies. Periods are typically described by at least a StartDate or EndDate. */
	optional ern_Period period_of_rights_delegation = 1;
/* A Territory for which the delegation of usage rights applies. */
	repeated ern_AllTerritoryCode territory_of_rights_delegation = 2;
/* A Composite containing details of the use for which Rights are delegated. */
	repeated ern_UseType use_type = 3;
}

/* A Composite containing details of a Description.Explanatory Note: This Composite is named DescriptionWithTerritory to disambiguate it from the basic Description Composite. */
message ern_DescriptionWithTerritory {
/* A Territory to which the Description applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script of the Description as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	optional string ext_value = 4;
}

/* A Composite containing details of a Cue.Explanatory Note: This Composite is named DetailedCue to disambiguate it from the basic Cue Composite. */
message ern_DetailedCue {
/* A Composite containing details of an AdditionalTitle of the Work referenced in the Cue. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of the CLine for the Cue. */
	repeated ern_CLine c_line = 2;
/* A Composite containing details of a Contributor of the Work referenced in the Cue. */
	repeated ern_Contributor contributor = 3;
/* A Composite containing details of a CueOrigin for the Cue. It can be expected that this element will be contractually mandatory in many communications of cue sheets to music rights societies. */
	optional ern_CueOrigin cue_origin = 4;
/* A Composite containing details of a ThemeType for the Creation referenced in the Cue. */
	optional ern_CueThemeType cue_theme_type = 5;
/* A Composite containing details of a UseType of the Cue. It can be expected that this element will be contractually mandatory in many communications of cue sheets to music rights societies. */
	optional ern_CueUseType cue_use_type = 6;
/* A Composite containing details of a VisualPerceptionType for the Creation referenced in the Cue. */
	optional ern_CueVisualPerceptionType cue_visual_perception_type = 7;
/* A Composite containing details of a VocalType for the Creation referenced in the Cue. */
	optional ern_CueVocalType cue_vocal_type = 8;
/* A Composite containing details of a Title of the Work referenced in the Cue, as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 9;
/* A Composite containing details of a Title of the Work referenced in the Cue, as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 10;
/* The Duration of the use of the Creation that is referenced in the CueCreationReference (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration = 11;
/* The end time of the Creation, measured from the start of the Resource from which the CueSheet is referenced (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string end_time = 12;
/* A Flag indicating whether whether the Creation referenced in the Cue contains musical content such as a SoundRecording or a MusicalWork (=true) or not (=false). */
	optional bool has_musical_content = 13;
/* A Flag indicating whether a Creation contains dancing (=true) or not (=false). */
	optional bool is_dance = 14;
/* A Composite containing details of the PLine for the Cue. */
	repeated ern_PLine p_line = 15;
/* A Composite containing details of a ResourceId. */
	optional ern_ResourceId resource_id = 16;
/* The start time of the Creation, measured from the start of the Resource from which the CueSheet is referenced (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string start_time = 17;
/* A Composite containing details of a WorkId. */
	optional ern_MusicalWorkId work_id = 18;
}

/* A Composite containing details of a CueSheet. */
message ern_DetailedCueSheet {
/* A Composite containing details of a Cue. */
	repeated ern_DetailedCue cue = 1;
/* A Composite containing details of a CueSheetId of the CueSheet. */
	repeated ern_ProprietaryId cue_sheet_id = 2;
/* The Identifier (specific to the Message) of the CueSheet within the Release which contains it. This is a LocalCueSheetAnchor starting with the letter Q. */
	optional string cue_sheet_reference = 3;
/* A Composite containing details of a Type of the CueSheet. */
	optional ern_CueSheetType cue_sheet_type = 4;
}

/* A Composite containing details of one or more CueSheets. */
message ern_DetailedCueSheetList {
/* A Composite containing details of a CueSheet contained in a Resource. */
	repeated ern_DetailedCueSheet cue_sheet = 1;
}

/* A Composite containing details of a HashSum and its governing algorithm.Explanatory Note: This Composite is named DetailedHashSum to disambiguate it from the basic HashSum Composite. */
message ern_DetailedHashSum {
/* A Composite containing details of the Type of HashSumAlgorithm governing the HashSum. */
	optional ern_HashSumAlgorithmType algorithm = 1;
/* The datatype of the HashSum. */
	optional avs_BinaryDataType data_type = 2;
/* The value of the HashSum. */
	optional string hash_sum_value = 3;
/* A parameter of the HashSumAlgorithm. */
	optional string parameter = 4;
/* The Identifier of the Version of the HashSumAlgorithm. */
	optional string version = 5;
}

/* A Composite containing details of a PartyId.Explanatory Note: This Composite is named DetailedPartyId to disambiguate it from the basic PartyId Composite. */
message ern_DetailedPartyId {
/* A CISAC Society Identifier, a CISAC standard Identifier for music rights societies. */
	optional string cisac_society_id = 1;
/* An Identifier of a Party according to the DdexPartyId standard DDEX-DPID. */
	optional string d_p_i_d = 2;
/* An International Performer Number, an IPDA Identifier. */
	optional string i_p_n = 3;
/* An International Standard Name Identifier, the ISO 27729 Standard Identifier for names. DDEX will enforce the syntax [0-9]{15}[X0-9] using XML Schema in the future. */
	optional string i_s_n_i = 4;
/* An Interested Party Identifier, a CISAC standard Identifier. An IpiNameNumber comprises 11 digits. */
	optional string ipi_name_number = 5;
/* A Composite containing details of a ProprietaryIdentifier of the Party. */
	repeated ern_ProprietaryId proprietary_id = 6;
}

/* A Composite containing details of the Name, Identifier and Role(s) of a Contributor to a Resource.Explanatory Note: This Composite is named DetailedResourceContributor to disambiguate it from the basic ResourceContributor Composite. */
message ern_DetailedResourceContributor {
/* A Role for which the Party is credited. */
	repeated ern_DisplayCredits display_credits = 1;
/* A Flag indicating whether the Contributor is an Artist that has a contract for its part in creating the Resource (=true) or not (=false). */
	optional bool has_made_contracted_contribution = 2;
/* A Flag indicating whether the Contributor is a featured Artist (=true) or not (=false). */
	optional bool has_made_featured_contribution = 3;
/* A Type of musical Instrument played by the Artist. */
	repeated ern_InstrumentType instrument_type = 4;
/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, producers or other Creators. */
	repeated ern_DetailedPartyId party_id = 5;
/* A Composite containing details of the PartyName(s).Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
	repeated ern_PartyName party_name = 6;
/* A Composite containing details of a Role played by the Contributor. */
	repeated ern_ContributorRole role = 7;
/* The number indicating the order of the ResourceContributor in a group of ResourceContributors that have contributed to a Resource. This is represented in an XML schema as an XML Attribute. Further Reading: https://kb.ddex.net/display/HBK/Sequencing+Recording+Artists+and+Writers */
	optional int32 sequence_number = 8;
}

/* A Composite containing details of a UseType. */
message ern_DiscoverableUseType {
/* A Flag indicating whether the Deal allows the ReleaseDistributor to include the release(s) referenced in the Deal to be indexed and searchable by Consumers on the ReleaseDistributor’s platform (=true) or not (=false). If this Attribute is not provided, it is assumed that this is True. */
	optional bool is_discoverable = 1;
/* The Namespace of the UseType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 2;
/* A UserDefined value of the UseType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 3;
	optional avs_UseType_ERN ext_value = 4;
}

/* A Composite containing details of the Name, Identifier and Role(s) of a DisplayArtist of a Resource. */
message ern_DisplayArtist {
/* A Reference for a Party (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	optional string artist_party_reference = 1;
/* A Composite containing details of a ContributorRole played by the DisplayArtist. */
	repeated ern_ContributorRole artistic_role = 2;
/* A Composite containing details of a Role played by the DisplayArtist. */
	optional ern_DisplayArtistRole display_artist_role = 3;
/* The number indicating the order of the Resource DisplayArtist in a group of Artists that have contributed to a Resource. This is represented in an XML schema as an XML Attribute. Further Reading: https://kb.ddex.net/display/HBK/Sequencing+Recording+Artists+and+Writers */
	optional int32 sequence_number = 4;
/* A Composite containing information on how a RecordCompany wishes Artist information to be presented to Consumers as part of the Title (and in addition to displaying the DisplayArtist information). */
	repeated ern_TitleDisplayInformation title_display_information = 5;
}

/* A Composite containing details of a DisplayArtistName.Explanatory Note: This Composite is named DisplayArtistNameWithDefault to disambiguate it from the basic DisplayArtistName Composite. */
message ern_DisplayArtistNameWithDefault {
/* A Territory to which the Name applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script of the Name as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	optional string ext_value = 4;
}

/* A Composite containing details of a DisplayArtistRole. */
message ern_DisplayArtistRole {
/* The Namespace of the DisplayArtistRole. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the DisplayArtistRole. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_DisplayArtistRole ext_value = 3;
}

/* A Composite containing details of a Role and instrumentation for which a Party is credited. */
message ern_DisplayCredits {
/* A Territory to which this Element applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Reference for a Party credited with the display credit. */
	optional string display_credit_party = 2;
/* The textual portion of the display credit. */
	optional string display_credit_text = 3;
/* The Flag indicating whether this Element provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 4;
/* The Language and script of this Element as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
/* The Name for the Party as used in the DisplayCreditText. If no such element is present, the DisplayCreditText contains the Name of the credited Party as specified in the PartyName of the Party composite. */
	optional string name_used_in_display_credit = 6;
}

/* A Composite containing details of a SubTitle.Explanatory Note: This Composite is named DisplaySubTitle to disambiguate it from the basic SubTitle Composite. */
message ern_DisplaySubTitle {
/* A Flag indicating whether the SubTitle is displayed in the Title (=true) or not (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_displayed_in_title = 1;
/* The number indicating the order of the SubTitle in a group of SubTitles. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 2;
/* A Type of the SubTitle which defines its origin or the function it fulfils. This is represented in an XML schema as an XML Attribute. */
	optional avs_SubTitleType sub_title_type = 3;
	optional string ext_value = 4;
}

/* A Composite containing details of a Title as the MessageSender suggests it should be shown to the Consumer. */
message ern_DisplayTitle {
/* A Territory to which the Title applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script for the Elements of the Title as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* A Composite containing details of a SubTitle of the Title, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
	repeated ern_DisplaySubTitle sub_title = 4;
/* The text of the Title.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional string title_text = 5;
}

/* A Composite containing details of a Title as the MessageSender suggests it should be shown to the Consumer. */
message ern_DisplayTitleText {
/* A Territory to which the Title applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script for the Elements of the Title as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	optional string ext_value = 4;
}

/* A Composite containing details of a WebPage for a DistributionChannel. */
message ern_DistributionChannelPage {
/* A Composite containing the Name of the WebPage. */
	optional ern_Name page_name = 1;
/* A Composite containing details of the PartyId for a Party owning the WebPage. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, producers or other Creators. */
	repeated ern_DetailedPartyId party_id = 2;
/* A URL of the WebPage. */
	optional string u_r_l = 3;
/* An Identifier of a computer user who is granted maintenance access to the WebPage. */
	optional string user_name = 4;
}

/* A Composite containing details of the Date and Place of an Event. */
message ern_EventDate {
/* The Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_AllTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether the Event being described occurred sometime after the reported Date (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_after = 2;
/* The Flag indicating whether the reported Date is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 3;
/* The Flag indicating whether the Event being described occurred sometime before the reported Date (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_before = 4;
/* The Language and script for the LocationDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 6;
	optional ern_ddex_IsoDate ext_value = 7;
}

/* A Composite containing details of the DateTime and Place of an Event. */
message ern_EventDateTime {
/* The Flag indicating whether the Event being described occurred sometime after the reported DateTime (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_after = 1;
/* The Flag indicating whether the reported DateTime is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
/* The Flag indicating whether the Event being described occurred sometime before the reported DateTime (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_before = 3;
/* The Language and script for the LocationDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 5;
/* The Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_AllTerritoryCode territory_code = 6;
	optional uint64 ext_value = 7;
}

/* A Composite containing details of the DateTime and Place of an Event.Explanatory Note: This Composite is named EventDateTimeWithoutFlags to disambiguate it from the basic EventDateTime Composite. */
message ern_EventDateTimeWithoutFlags {
/* The Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether the reported DateTime is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
/* The Language and script for the LocationDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 4;
	optional uint64 ext_value = 5;
}

/* A Composite containing details of the Date and Place of an Event.Explanatory Note: This Composite is named EventDateWithCurrentTerritory to disambiguate it from the basic EventDate Composite. */
message ern_EventDateWithCurrentTerritory {
/* The main Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether the reported Date is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
/* The Language and script for the LocationDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 4;
	optional ern_ddex_IsoDate ext_value = 5;
}

/* A Composite containing details of the Date and Place of an Event.Explanatory Note: This Composite is named EventDateWithDefault to disambiguate it from the basic EventDate Composite. */
message ern_EventDateWithDefault {
/* The Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_AllTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether the reported Date is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 3;
	optional ern_ddex_IsoDate ext_value = 4;
}

/* A Composite containing details of the Date and Place of an Event.Explanatory Note: This Composite is named EventDateWithoutFlags to disambiguate it from the basic EventDate Composite. */
message ern_EventDateWithoutFlags {
/* The main Territory in which the Event occurred. This is represented in an XML schema as an XML Attribute. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_AllTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether the reported Date is approximate (=true) or exact (=false). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
/* The Language and script for the LocationDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 4;
	optional ern_ddex_IsoDate ext_value = 5;
}

/* A Composite containing an Extent and a UnitOfMeasure. */
message ern_Extent {
/* The UnitOfMeasure of the Extent. This is represented in an XML schema as an XML Attribute.  */
	optional avs_UnitOfExtent unit_of_measure = 1;
	optional double ext_value = 2;
}

/* A Composite containing details of promotional or other material in digital form related to a Release. */
message ern_ExternalResourceLink {
/* The Identifier which provides a communication link to the related external Resource. */
	optional string external_link = 1;
/* A Composite containing details of the Type of a Resource pointed to by the ExternalResourceLink. */
	repeated ern_ExternallyLinkedResourceType externally_linked_resource_type = 2;
/* The FileFormat of the external Resource. */
	optional string file_format = 3;
/* A URL of the linked external Resource. */
	repeated string u_r_l = 4;
/* A Composite containing details about the Period of Time during which the ExternalResourceLink is active. StartDate and EndDate are deprecated and StartDateTime/EndDateTime should be used instead. DDEX advises that StartDate and EndDate may be removed at a future date and therefore recommends against using them.Further Reading: https://kb.ddex.net/display/HBK/Dates%3A+exclusive+vs.+inclusive */
	optional ern_PeriodWithoutFlags validity_period = 5;
}

/* A Composite containing details of an ExternallyLinkedResourceType. */
message ern_ExternallyLinkedResourceType {
/* The Namespace of the ExternallyLinkedResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ExternallyLinkedResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ExternallyLinkedResourceType ext_value = 3;
}

/* A Composite containing details of a File. */
message ern_File {
/* The size of the File in kilobytes. */
	optional double file_size = 1;
/* A Composite containing a HashSum of the File and information about the algorithm with which it has been generated. */
	optional ern_DetailedHashSum hash_sum = 2;
/* A URI of the File (this can be a URL or another type of Identifier using a scheme identifier, e.g. http or ftp, as defined in RFC 3986). */
	optional string u_r_i = 3;
}

/* A Composite containing details of a Fingerprint and its governing algorithm. */
message ern_Fingerprint {
/* A Composite containing details of the Type of Algorithm governing the Fingerprint. */
	optional ern_FingerprintAlgorithmType algorithm = 1;
/* The datatype of the Fingerprint. */
	optional avs_BinaryDataType data_type = 2;
/* A Composite containing details of a File containing the Fingerprint. */
	optional ern_File file = 3;
/* The value of the Fingerprint. */
	optional string fingerprint_value = 4;
/* A parameter of the FingerprintAlgorithm. */
	optional string parameter = 5;
/* The Identifier of the Version of the FingerprintAlgorithm. */
	optional string version = 6;
}

/* A Composite containing details of a FingerprintAlgorithmType. */
message ern_FingerprintAlgorithmType {
/* The Namespace of the FingerprintAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the FingerprintAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_FingerprintAlgorithmType ext_value = 3;
}

/* A Composite containing details of a FirstPublicationDate. */
message ern_FirstPublicationDate {
/* A Territory to which the FirstPublicationDate applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
	optional ern_ddex_IsoDate ext_value = 3;
}

/* A Composite containing a FrameRate and a UnitOfMeasure. */
message ern_FrameRate {
/* The UnitOfMeasure of the FrameRate. This is represented in an XML schema as an XML Attribute.  */
	optional avs_UnitOfFrameRate unit_of_measure = 1;
	optional double ext_value = 2;
}

/* A Composite containing details of a FulfillmentDate.Explanatory Note: This Composite is named FulfillmentDateWithTerritory to disambiguate it from the basic FulfillmentDate Composite. */
message ern_FulfillmentDateWithTerritory {
/* A Territory to which the FulfillmentDate applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Date after which an end user can receive the Resource (in ISO 8601 format: YYYY-MM-DD). If no FulfillmentDate is provided the FulfillmentDate is the StartDate of the respective Deal.  */
	optional ern_ddex_IsoDate fulfillment_date = 2;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 3;
/* The Identifier (specific to the Message) of a Release for a Resource. This is a LocalReleaseAnchorReference starting with the letter R. */
	repeated string resource_release_reference = 4;
}

/* A Composite containing details of a Genre Category. */
message ern_GenreCategory {
/* A Territory to which the Genre Category applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing a Description of the Genre Category. */
	repeated ern_TextWithoutTerritory description = 2;
/* A Composite containing details of a Genre Category value. */
	optional ern_GenreCategoryValue value = 3;
}

/* A Composite containing details of a Genre Category value. */
message ern_GenreCategoryValue {
/* The Language and script of this Element as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* The Namespace of the element. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 2;
/* A UserDefined value of the element. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 3;
	optional avs_ClassifiedGenre ext_value = 4;
}

/* A Composite containing details of a Genre.Explanatory Note: This Composite is named GenreWithTerritory to disambiguate it from the basic Genre Composite. */
message ern_GenreWithTerritory {
/* A Territory to which the Genre applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing details of a Genre Category to which the Release belongs. */
	repeated ern_GenreCategory genre_category = 2;
/* A Description of a genre or style (such as Musical, literary or audio-visual) with which a Creation is associated. */
	optional string genre_text = 3;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 4;
/* The Language and script for the Elements of the Genre as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
/* A Description of a secondary genre or style with which a Creation is associated. */
	optional string sub_genre = 6;
/* A Composite containing details of a sub-genre of the Release. */
	repeated ern_SubGenreCategory sub_genre_category = 7;
}

/* A Composite containing details of a HashSumAlgorithmType. */
message ern_HashSumAlgorithmType {
/* The Namespace of the HashSumAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the HashSumAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_HashSumAlgorithmType ext_value = 3;
}

/* A Composite containing details of an Image.  */
message ern_Image {
/* A Composite containing details of an AdditionalTitle of the Image. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of the CLine for the Image. */
	repeated ern_CLineWithDefault c_line = 2;
/* The Flag indicating whether the Image contains content that is hidden in some way from the Consumer (=true) or not (=false). */
	optional bool contains_hidden_content = 3;
/* A Composite containing details of a Contributor to the Image. */
	repeated ern_Contributor contributor = 4;
/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for Artists or others featured on the Image. */
	repeated ern_CourtesyLineWithDefault courtesy_line = 5;
/* A Composite containing details of the Date and Place of the Event in which the Image was created. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags creation_date = 6;
/* A Composite containing a Description of the subject of the Image. */
	repeated ern_DescriptionWithTerritory description = 7;
/* A Composite containing details of the DisplayArtist for the Image. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 8;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtistNameWithDefault display_artist_name = 9;
/* A Composite containing details of a Title of the Image as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 10;
/* A Composite containing details of a Title of the Image as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 11;
/* A Composite containing details of the Date and Place of the Event in which the Image was first published, whether for physical or electronic/online distribution. This is a string with the syntax YYYY[-MM[-DD]]. */
	repeated ern_FulfillmentDateWithTerritory first_publication_date = 12;
/* The Flag indicating whether the Image is provided in a addition to the Resources that form part of the Release (=true) or not (=false). If the flag is set to false (or absent) the Image is part of at least one Release in the message. This is represented in an XML schema as an XML Attribute. */
	optional bool is_supplemental = 13;
/* The Language and script for the Elements of the Image as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 14;
/* A Composite containing details of the classification of the Image according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ern_ParentalWarningTypeWithTerritory parental_warning_type = 15;
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to current Image. */
	repeated ern_RelatedRelease related_release = 16;
/* A Composite containing details of a ResourceRelatedResourceReference referring to a Resource that is related to the current Image. */
	repeated ern_RelatedResource related_resource = 17;
/* A Composite containing details of Identifiers of the Image. */
	repeated ern_ResourceProprietaryId resource_id = 18;
/* The Identifier (specific to the Message) of the Image within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 19;
/* A Composite containing details of RightsController of Rights in the Image. */
	repeated ern_ResourceRightsController resource_rights_controller = 20;
/* A Composite containing technical details of the Image.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Binaries */
	repeated ern_TechnicalImageDetails technical_details = 21;
/* A Composite containing details of the Type of the Image. */
	optional ern_ImageType type = 22;
/* A Composite containing details of a Type of Version of the Image. */
	repeated ern_VersionType version_type = 23;
/* A Composite containing details of RightsController of Rights in the Work. */
	repeated ern_WorkRightsController work_rights_controller = 24;
}

/* A Composite containing details of an ImageCodecType. */
message ern_ImageCodecType {
/* The Namespace of the ImageCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ImageCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
/* The Identifier of the Version of the ImageCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional avs_ImageCodecType ext_value = 4;
}

/* A Composite containing details of an ImageType. */
message ern_ImageType {
/* The Namespace of the ImageType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ImageType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ImageType ext_value = 3;
}

/* A Composite containing details of an InstrumentType. */
message ern_InstrumentType {
/* The Namespace of the InstrumentType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the InstrumentType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_InstrumentType ext_value = 3;
}

/* A Composite containing details of a Flag indicating whether the Contributor is credited as having played a role in creating the Recording. */
message ern_IsCredited {
/* A Flag indicating whether this information may be shared (=true) or not (=false). If the Flag is not present, the Contributor may be credited. */
	optional bool may_be_shared = 1;
	optional bool ext_value = 2;
}

/* A Composite containing details of a Description containing Keywords.Explanatory Note: This Composite is named KeywordsWithTerritory to disambiguate it from the basic Keywords Composite. */
message ern_KeywordsWithTerritory {
/* A Territory to which the Keywords applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script of the Keywords as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	optional string ext_value = 4;
}

/* A Composite containing details of a LinkedReleaseResourceReference for a Resource which is linked to a ContentItem. */
message ern_LinkedReleaseResourceReference {
/* The Language and script for the LinkDescription as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* A description of the link for the ReleaseResourceReference. */
	optional avs_LinkDescription link_description = 2;
/* The Namespace of the LinkDescription. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 3;
/* A UserDefined value of the LinkDescription. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 4;
	optional ern_ddex_LocalResourceAnchorReference ext_value = 5;
}

/* A Composite containing details of a Session. */
message ern_LocationAndDateOfSession {
/* A Composite containing a human-readable Comment about the Session. */
	optional ern_TextWithFormat comment = 1;
/* A Composite containing details of a Contributor. */
	repeated ern_PartyWithRole contributor = 2;
/* A Composite containing details about a Period of the Session. Periods are typically described by at least a StartDate or EndDate. */
	optional ern_Period period = 3;
/* The Type of Session. */
	repeated ern_SessionType session_type = 4;
/* A Composite containing details of the venue where the Session took place. */
	repeated ern_Venue venue = 5;
}

/* A Composite containing details of a MarketingComment. */
message ern_MarketingComment {
/* A Territory to which the Comment applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script of the Comment as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	optional string ext_value = 4;
}

/* A Composite containing information about Parties in between the original MessageSender and ultimate MessageRecipient. */
message ern_MessageAuditTrail {
/* A Composite containing details of a Party handling the Message and the Time at which the handling took place. */
	repeated ern_MessageAuditTrailEvent message_audit_trail_event = 1;
}

/* A Composite containing details of a Party handling a Message and the Time at which the handling took place. */
message ern_MessageAuditTrailEvent {
/* The DateTime at which the Message was handled by the MessagingParty (the only allowed format is ISO 8601: YYYY-MM-DDThh:mm:ssTZD). */
	optional uint64 date_time = 1;
/* A Composite containing details of a MessagingParty. */
	optional ern_MessagingPartyWithoutCode messaging_party_descriptor = 2;
}

/* A Composite placed at the beginning of each DdexMessage providing information about the Message, such as MessageSender, MessageRecipient and a Message creation time stamp. */
message ern_MessageHeader {
/* A Composite containing information about Parties in between the original MessageSender and ultimate MessageRecipient. */
	optional ern_MessageAuditTrail message_audit_trail = 1;
/* The indicator used to distinguish a live Message from a test Message. */
	optional avs_MessageControlType message_control_type = 2;
/* The DateTime on which the Message was created (the only allowed format is ISO 8601: YYYY-MM-DDThh:mm:ssTZD). */
	optional uint64 message_created_date_time = 3;
/* The FileName, possibly including the FilePath, of the XML File containing the current Message. */
	optional string message_file_name = 4;
/* A xs:string used to uniquely identify the current Message. The MessageId shall be, in combination with the DdexPartyId (DPID) of the MessageSender, globally unique. Thus, a MessageSender shall never re-use a MessageId. */
	optional string message_id = 5;
/* A Composite containing details of the MessageRecipient. Note that if multiple MessageRecipients are provided, all of them will be able to read this information. */
	repeated ern_MessagingPartyWithoutCode message_recipient = 6;
/* A Composite containing details of the MessageSender. */
	optional ern_MessagingPartyWithoutCode message_sender = 7;
/* A xs:string used to uniquely identify the thread of Messages of which the current Message is a part. The MessageThreadId shall be, in combination with the DdexPartyId (DPID) of the MessageSender, globally unique. Thus, a MessageSender shall never re-use a MessageThreadId. One example of such a 'thread' is the chain of NewReleaseMessages being sent from ReleaseCreator to wholesale ReleaseDistributor 1 to retail DSP when communicating information about the same Release(s). A common MessageThreadId will allow all these messages to be tied together. */
	optional string message_thread_id = 8;
/* A Composite containing details of the Party on whose behalf the Message is sent. */
	optional ern_MessagingPartyWithoutCode sent_on_behalf_of = 9;
}

/* A Composite containing details of a MessagingParty.Explanatory Note: This Composite is named MessagingPartyWithoutCode to disambiguate it from the basic MessagingParty Composite. */
message ern_MessagingPartyWithoutCode {
/* An Identifier of a Party according to the DdexPartyId standard DDEX-DPID. */
	optional string party_id = 1;
/* A Composite containing details of the PartyNames for the Party handling the Message.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
	optional ern_PartyNameWithoutCode party_name = 2;
/* A Composite containing a TradingName for the Party handling the Message.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional string trading_name = 3;
}

/* A Composite containing details of a MusicalWorkId. */
message ern_MusicalWorkId {
/* A MusicalWorkId identifying a MusicalWork within the catalog of its Composer (typically of classical music) according to a standardized numbering (e.g. 'K' numbers for Koechel's catalog of Mozart). */
	repeated string composer_catalog_number = 1;
/* The ISWC (International Standard Musical Work Code defined in ISO 15707) identifying the MusicalWork. An ISWC comprises three parts: the letter 'T', followed by nine digits and then one check digit. DDEX will enforce the syntax [a-zA-Z][0-9]{10} using XML Schema in the future. */
	optional string i_s_w_c = 2;
/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=true) or not (=false). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 3;
/* The MusicalWorkId identifying the MusicalWork within the catalog of its Composer (typically of classical music) as an opus number. */
	optional string opus_number = 4;
/* A Composite containing details of a ProprietaryIdentifier of the MusicalWork. */
	repeated ern_ProprietaryId proprietary_id = 5;
}

/* A Composite containing details of a Name. */
message ern_Name {
/* The Language and script of the Name as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

message ern_NewReleaseMessage {
/* A Composite containing details of one or more Chapters contained in Releases for which data is provided in the NewReleaseMessage. */
	optional ern_ChapterList chapter_list = 1;
/* A Composite containing details of one or more CueSheets contained in Releases for which data is provided in the NewReleaseMessage. */
	optional ern_DetailedCueSheetList cue_sheet_list = 2;
/* A Composite containing details of one or more Deals governing the Usage of the Releases in the Message. */
	optional ern_DealList deal_list = 3;
/* The Language and script for the Elements of this Message as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
/* The MessageHeader for the NewReleaseMessage. */
	optional ern_MessageHeader message_header = 5;
/* A Composite containing details of one or more Parties relating to the reported MusicalWorks. */
	optional ern_PartyList party_list = 6;
/* A Composite containing details of Release administration. */
	repeated ern_ReleaseAdmin release_admin = 7;
/* A Composite containing details of one or more DDEX Releases contained in the NewReleaseMessage. */
	optional ern_ReleaseList release_list = 8;
/* The Identifier of the Version of the release profile variant used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional avs_ReleaseProfileVariantVersionId release_profile_variant_version_id = 9;
/* The Identifier of the Version of the release profile used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional avs_ReleaseProfileVersionId release_profile_version_id = 10;
/* A Composite containing details of one or more Resources.Further Reading: https://kb.ddex.net/display/HBK/Sequencing+Resources */
	optional ern_ResourceList resource_list = 11;
/* A Composite containing details of one or more XML documents communicated with the Message. */
	optional ern_SupplementalDocumentList supplemental_document_list = 12;
}

/* A Composite containing details of an OperatingSystemType. */
message ern_OperatingSystemType {
/* The Namespace of the OperatingSystemType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the OperatingSystemType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
/* The Identifier of the Version of the OperatingSystemType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional avs_OperatingSystemType ext_value = 4;
}

/* A Composite containing details of a PLine. */
message ern_PLine {
/* The Language and script of the PLineText as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* The Name of the company releasing the Creation. This may be an owner or a Licensee of the Creation. */
	optional string p_line_company = 2;
/* The text of the PLine. */
	optional string p_line_text = 3;
/* A Type of PLine. This is represented in an XML schema as an XML Attribute. If this Attribute is not provided, it is assumed that the PLine is an OriginalPLine. */
	optional avs_PLineType p_line_type = 4;
/* The Year of the PLine. */
	optional uint32 year = 5;
}

/* A Composite containing details of a PLine.Explanatory Note: This Composite is named PLineWithDefault to disambiguate it from the basic PLine Composite. */
message ern_PLineWithDefault {
/* A Territory to which the PLine applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Language and script of the PLineText as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
/* The Name of the company releasing the Creation. This may be an owner or a Licensee of the Creation. */
	optional string p_line_company = 4;
/* The text of the PLine. */
	optional string p_line_text = 5;
/* The Year of the PLine. */
	optional uint32 year = 6;
}

/* A Composite containing details of a ParentalWarningType.Explanatory Note: This Composite is named ParentalWarningTypeWithTerritory to disambiguate it from the basic ParentalWarningType Composite. */
message ern_ParentalWarningTypeWithTerritory {
/* A Territory to which the ParentalWarningType applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Namespace of the ParentalWarningType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 3;
/* A UserDefined value of the ParentalWarningType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 4;
	optional avs_ParentalWarningType ext_value = 5;
}

/* A Composite containing details of a Party. */
message ern_Party {
/* A Composite containing details of an affiliation for the Party. */
	repeated ern_Affiliation affiliation = 1;
/* A URL of a WebPage for the Artist. */
	repeated string artist_profile_page = 2;
/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, producers or other Creators. */
	repeated ern_DetailedPartyId party_id = 3;
/* A Composite containing details of the PartyName(s). */
	repeated ern_PartyNameWithTerritory party_name = 4;
/* The Identifier (specific to the Message) of the Party. This is a LocalPartyAnchor starting with the letter P. */
	optional string party_reference = 5;
/* A Composite containing details of a PartyRelatedPartyReference referring to a Party that is related to the current Party. This can be used to express, for instance, relationships between a band and its members or between a label and its parent company. */
	repeated ern_RelatedParty related_party = 6;
}

/* A Composite containing details of one or more Parties. */
message ern_PartyList {
/* A Composite containing details of a Party. */
	repeated ern_Party party = 1;
}

/* A Composite containing details of a PartyName. Name details for a Party typically either contain a FullName or a KeyName.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
message ern_PartyName {
/* A Composite containing a short version of the PartyName (e.g. for use on devices with a small display). */
	optional ern_Name abbreviated_name = 1;
/* A Composite containing the complete Name of the Party, in its normal form of presentation (e.g. John H. Smith, Acme Music Inc, the Beatles). */
	optional ern_Name full_name = 2;
/* The FullName transcribed using 7-bit ASCII code. */
	optional string full_name_ascii_transcribed = 3;
/* A Composite containing the complete Name of the Party in the form in which it normally appears in an alphabetic index, with the KeyName first (e.g. Smith, John H.; Beatles, The). */
	optional ern_Name full_name_indexed = 4;
/* A Composite containing the Part of a Name of the Party normally used to index an entry in an alphabetical list, such as 'Smith' (in John Smith) or 'Garcia Marquez' or 'Madonna' or 'Francis de Sales' (in Saint Francis de Sales). For persons, this normally corresponds to the 'family name' or names, which in Western name forms usually comes as a surname at the end of a FullName, and in Asian name forms often at the beginning of a FullName.  */
	optional ern_Name key_name = 5;
/* The Language and script for the Elements of the PartyName as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 6;
/* A Composite containing the Name(s) following the KeyName. Example:'Ibrahim' (in Anwar Ibrahim). This is common, e.g., in many Asian personal name forms where a FullName begins with the KeyName, which is followed by other names. */
	optional ern_Name names_after_key_name = 7;
/* A Composite containing the Name(s) preceding the KeyName in the FullName (and that is placed after it in a FullNameIndexed). Examples: 'George' in 'George Michael'; 'John Fitzgerald' in 'John Fitzgerald Kennedy'. Not all PartyNames have a NamesBeforeKeyName (e.g. Madonna, EMI Music Inc). */
	optional ern_Name names_before_key_name = 8;
}

/* A Composite containing details of a PartyName. Name details for a Party typically either contain a FullName or a KeyName.Explanatory Note: This Composite is named PartyNameWithTerritory to disambiguate it from the basic PartyName Composite. */
message ern_PartyNameWithTerritory {
/* A Composite containing a short version of the PartyName (e.g. for use on devices with a small display). */
	optional ern_Name abbreviated_name = 1;
/* A Territory to which the PartyName applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 2;
/* A Composite containing the complete Name of the Party, in its normal form of presentation (e.g. John H. Smith, Acme Music Inc, the Beatles). */
	optional ern_Name full_name = 3;
/* The FullName transcribed using 7-bit ASCII code. */
	optional string full_name_ascii_transcribed = 4;
/* A Composite containing the complete Name of the Party in the form in which it normally appears in an alphabetic index, with the KeyName first (e.g. Smith, John H.; Beatles, The). */
	optional ern_Name full_name_indexed = 5;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 6;
/* The Flag indicating whether this Name is a legal name (=true) or not (=false). */
	optional bool is_legal_name = 7;
/* The Flag indicating whether this Name is a nickname (=true) or not (=false). A nickname is a substitute for the proper name (e.g. an affective or diminutive name) and not to be confused with a pseudonym or a stage name. */
	optional bool is_nickname = 8;
/* The Flag indicating whether this Name is a stage name (=true) or not (=false). */
	optional bool is_stage_name = 9;
/* A Composite containing the Part of a Name of the Party normally used to index an entry in an alphabetical list, such as 'Smith' (in John Smith) or 'Garcia Marquez' or 'Madonna' or 'Francis de Sales' (in Saint Francis de Sales). For persons, this normally corresponds to the 'family name' or names, which in Western name forms usually comes as a surname at the end of a FullName, and in Asian name forms often at the beginning of a FullName.  */
	optional ern_Name key_name = 10;
/* The Language and script for the Elements of the PartyName as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 11;
/* A Composite containing the Name(s) following the KeyName. Example:'Ibrahim' (in Anwar Ibrahim). This is common, e.g., in many Asian personal name forms where a FullName begins with the KeyName, which is followed by other names. */
	optional ern_Name names_after_key_name = 12;
/* A Composite containing the Name(s) preceding the KeyName in the FullName (and that is placed after it in a FullNameIndexed). Examples: 'George' in 'George Michael'; 'John Fitzgerald' in 'John Fitzgerald Kennedy'. Not all PartyNames have a NamesBeforeKeyName (e.g. Madonna, EMI Music Inc). */
	optional ern_Name names_before_key_name = 13;
}

/* A Composite containing details of a PartyName. Name details for a Party typically either contain a FullName or a KeyName.Explanatory Note: This Composite is named PartyNameWithoutCode to disambiguate it from the basic PartyName Composite.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3FFurther Reading: https://kb.ddex.net/pages/viewpage.action?pageId=4882788 */
message ern_PartyNameWithoutCode {
/* A short version of the PartyName (e.g. for use on devices with a small display). */
	optional string abbreviated_name = 1;
/* The complete Name of the Party, in its normal form of presentation (e.g. John H. Smith, Acme Music Inc, the Beatles). */
	optional string full_name = 2;
/* The FullName transcribed using 7-bit ASCII code. */
	optional string full_name_ascii_transcribed = 3;
/* The complete Name of the Party in the form in which it normally appears in an alphabetic index, with the KeyName first (e.g. Smith, John H.; Beatles, The). */
	optional string full_name_indexed = 4;
/* The Part of a Name of the Party normally used to index an entry in an alphabetical list, such as 'Smith' (in John Smith) or 'Garcia Marquez' or 'Madonna' or 'Francis de Sales' (in Saint Francis de Sales). For persons, this normally corresponds to the 'family name' or names, which in Western name forms usually comes as a surname at the end of a FullName, and in Asian name forms often at the beginning of a FullName.  */
	optional string key_name = 5;
/* The Name(s) following the KeyName. Example: 'Ibrahim' (in Anwar Ibrahim). This is common, e.g., in many Asian personal name forms where a FullName begins with the KeyName, which is followed by other names. */
	optional string names_after_key_name = 6;
/* The Name(s) preceding the KeyName in the FullName (and that is placed after it in a FullNameIndexed). Examples: 'George' in 'George Michael'; 'John Fitzgerald' in 'John Fitzgerald Kennedy'. Not all PartyNames have a NamesBeforeKeyName (e.g. Madonna, EMI Music Inc). */
	optional string names_before_key_name = 7;
}

/* A Composite containing details of a PartyRelationshipType. */
message ern_PartyRelationshipType {
/* A Flag indicating whether this information may be shared (=true) or not (=false). If the Flag is not present, the information may be shared. */
	optional bool may_be_shared = 1;
/* The Namespace of the PartyRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 2;
/* A UserDefined value of the PartyRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 3;
	optional avs_PartyRelationshipType ext_value = 4;
}

/* A Composite containing details of a Party.Explanatory Note: This Composite is named PartyWithRole to disambiguate it from the basic mead:Party Composite. */
message ern_PartyWithRole {
/* An Identifier of the Party for which information is provided according to the DdexPartyId standard DDEX-DPID. */
	optional string d_p_i_d = 1;
/* An International Performer Number, an IPDA Identifier, of the Party for which information is provided. */
	optional string i_p_n = 2;
/* An International Standard Name Identifier, the ISO 27729 Standard Identifier for names, of the Party for which information is provided. DDEX will enforce the syntax [0-9]{15}[X0-9] using XML Schema in the future. */
	optional string i_s_n_i = 3;
/* An Interested Party Identifier, a CISAC standard Identifier, of the Party for which information is provided. An IpiNameNumber comprises 11 digits. */
	optional string ipi_name_number = 4;
/* A Composite containing details of a Name of the Contributor. */
	optional ern_PartyNameWithTerritory party_name = 5;
/* A Composite containing details of a ProprietaryIdentifier of the Party for which information is provided. */
	repeated ern_ProprietaryId proprietary_id = 6;
/* A Role played by the Contributor. */
	optional ern_ResourceContributorRole role = 7;
}

/* A Composite containing details of a PercentageRate. */
message ern_Percentage {
/* A Flag indicating whether a PercentageRate is given as a value in the range [0,1] (=true) instead of a value in the range [0,100] (=false). This is represented in an XML schema as an XML Attribute. Absence of this attribute is synonymous with false. */
	optional bool has_max_value_of_one = 1;
	optional double ext_value = 2;
}

/* A Composite containing details about a Period of Time. Periods are typically describedby at least a StartDate or EndDate (or StartDateTime or EndDateTime) where the StartDate(Time) and EndDate(Time) are included in the Period. Thus a one-day period can be described by using the same date in the StartDate and EndDate. If two subsequent Periods form a continuum (i.e. with no break in-between) there are two ways to express this: (a) if using dates, the EndDate of the first Period must be one day before the StartDate of the second Period; (b) if using date times, the EndDateTime of the first Period must be the same as the StartDateTime of the second Period. */
message ern_Period {
/* A Composite containing details of the Date and Place of an Event that marks the end of the Period (in ISO 8601 format: YYYY-MM-DD). The EndDate must not be earlier than the StartDate if both are provided. */
	optional ern_EventDate end_date = 1;
/* A Composite containing details of the DateTime and Place of an Event that marks the end of the Period (in ISO 8601 format: YYYY-MM-DDThh:mm:ss). The EndDateTime must not be earlier than the StartDateTime if both are provided. */
	optional ern_EventDateTime end_date_time = 2;
/* A Composite containing details of the Date and Place of an Event that marks the beginning of the Period (in ISO 8601 format: YYYY-MM-DD). The StartDate must be no later than the EndDate if both are provided. */
	optional ern_EventDate start_date = 3;
/* A Composite containing details of the DateTime and Place of an Event that marks the beginning of the Period (in ISO 8601 format: YYYY-MM-DDThh:mm:ss). The StartDateTime must be no later than the EndDateTime if both are provided. */
	optional ern_EventDateTime start_date_time = 4;
}

/* A Composite containing details about a Period of Time with a mandatory StartDate or StartDateTime.Explanatory Note: This Composite is named PeriodWithStartDate to disambiguate it from the basic Period Composite. */
message ern_PeriodWithStartDate {
/* A Composite containing details of the Date and Place of an Event that marks the end of the Period (in ISO 8601 format: YYYY-MM-DD). The EndDate must not be earlier than the StartDate if both are provided. StartDate and EndDate are deprecated and StartDateTime/EndDateTime should be used instead. DDEX advises that StartDate and EndDate may be removed at a future date and therefore recommends against using them. */
	optional ern_EventDateWithCurrentTerritory end_date = 1;
/* A Composite containing details of the DateTime and Place of an Event that marks the end of the Period (in ISO 8601 format: YYYY-MM-DDThh:mm:ss). The EndDateTime must not be earlier than the StartDateTime if both are provided. */
	optional ern_EventDateTimeWithoutFlags end_date_time = 2;
/* A Composite containing details of the Date and Place of an Event that marks the beginning of the Period (in ISO 8601 format: YYYY-MM-DD). The StartDate must be no later than the EndDate if both are provided. StartDate and EndDate are deprecated and StartDateTime/EndDateTime should be used instead. DDEX advises that StartDate and EndDate may be removed at a future date and therefore recommends against using them. */
	optional ern_EventDateWithCurrentTerritory start_date = 3;
/* A Composite containing details of the DateTime and Place of an Event that marks the beginning of the Period (in ISO 8601 format: YYYY-MM-DDThh:mm:ss). The StartDateTime must be no later than the EndDateTime if both are provided. */
	optional ern_EventDateTimeWithoutFlags start_date_time = 4;
}

/* A Composite containing details about a Period of Time. Periods are typically describedby at least a StartDate or EndDate (or StartDateTime or EndDateTime) where the StartDate(Time) and EndDate(Time) are included in the Period. Thus a one-day period can be described by using the same date in the StartDate and EndDate. If two subsequent Periods form a continuum (i.e. with no break in-between) there are two ways to express this: (a) if using dates, the EndDate of the first Period must be one day before the StartDate of the second Period; (b) if using date times, the EndDateTime of the first Period must be the same as the StartDateTime of the second Period.Explanatory Note: This Composite is named PeriodWithoutFlags to disambiguate it from the basic Period Composite. */
message ern_PeriodWithoutFlags {
/* A Composite containing details of the Date and Place of an Event that marks the end of the Period (in ISO 8601 format: YYYY-MM-DD). The EndDate must not be earlier than the StartDate if both are provided. StartDate and EndDate are deprecated and StartDateTime/EndDateTime should be used instead. DDEX advises that StartDate and EndDate may be removed at a future date and therefore recommends against using them. */
	optional ern_EventDateWithCurrentTerritory end_date = 1;
/* A Composite containing details of the DateTime and Place of an Event that marks the end of the Period (in ISO 8601 format: YYYY-MM-DDThh:mm:ss). The EndDateTime must not be earlier than the StartDateTime if both are provided. */
	optional ern_EventDateTimeWithoutFlags end_date_time = 2;
/* A Composite containing details of the Date and Place of an Event that marks the beginning of the Period (in ISO 8601 format: YYYY-MM-DD). The StartDate must be no later than the EndDate if both are provided. StartDate and EndDate are deprecated and StartDateTime/EndDateTime should be used instead. DDEX advises that StartDate and EndDate may be removed at a future date and therefore recommends against using them. */
	optional ern_EventDateWithCurrentTerritory start_date = 3;
/* A Composite containing details of the DateTime and Place of an Event that marks the beginning of the Period (in ISO 8601 format: YYYY-MM-DDThh:mm:ss). The StartDateTime must be no later than the EndDateTime if both are provided. */
	optional ern_EventDateTimeWithoutFlags start_date_time = 4;
}

/* A Composite containing details of physical returns. */
message ern_PhysicalReturns {
/* A Date which is the latest one for physical returns (in ISO 8601 format: YYYY-MM-DD). */
	optional ern_ddex_IsoDate latest_date_for_physical_returns = 1;
/* The Flag indicating whether physical returns are allowed (=true) or not (=false). */
	optional bool physical_returns_allowed = 2;
}

/* A Composite containing details of a Descriptor that precedes the display artist name when multiple display artist names are given. */
message ern_Prefix {
/* The Language and script of the Prefix as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a preview. */
message ern_PreviewDetails {
/* The position of the bottom right corner of the preview measured in Pixels from the top left corner of the Resource. The position is given as two coordinate values separated by a comma, the top left pixel being 0,0. */
	optional string bottom_right_corner = 1;
/* A Type of expression indicating how this should be perceived, e.g. as instruction (meaning that this has to be done to create the preview) or as information (meaning that this has been done to craete the preview). */
	optional avs_ExpressionType expression_type = 2;
/* The position of the top left corner of the preview measured in Pixels from the top left corner of the Resource. The position is given as two coordinate values separated by a comma, the top left pixel being 0,0. */
	optional string top_left_corner = 3;
}

/* A Composite containing details of a Price. */
message ern_Price {
/* The Currency of the Price (represented by an ISO 4217 CurrencyCode). This is represented in an XML schema as an XML Attribute.  */
	optional avs_CurrencyCode currency_code = 1;
	optional double ext_value = 2;
}

/* A Composite containing details of a Price.Explanatory Note: This Composite is named PriceInformationWithType to disambiguate it from the basic PriceInformation Composite. */
message ern_PriceInformationWithType {
/* A Composite containing details of a wholesale Price for a single unit, which informs the informs the DSP of the Price the Release should be offered at. Note that the size of a bulk order is defined in the contract between MessageSender and the MessageRecipient. This element should not be combined with PriceType. */
	optional ern_Price bulk_order_wholesale_price_per_unit = 1;
/* The Namespace of the PriceInformationType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 2;
/* A Composite containing further details of the Price, including a Price code that informs the DSP of the Price the Release should be offered at, often in combination with a rate card. This element should not be combined with WholesalePricePerUnit or BulkOrderWholesalePricePerUnit.Further Reading: https://kb.ddex.net/display/HBK/PriceInformation */
	optional ern_PriceType price_code = 3;
/* A Type of the Price. This is represented in an XML schema as an XML Attribute. If no value is provided, a StandardRetailPrice is assumed. */
	optional avs_PriceInformationType price_type = 4;
/* A Composite containing details of a suggested retail Price. */
	optional ern_Price suggested_retail_price = 5;
/* A UserDefined value of the PriceInformationType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 6;
/* A Composite containing details of a wholesale Price for a single unit of Usage, which informs the informs the DSP of the Price the Release should be offered at. Note that this Price applies to all UseTypes referenced in a DealTerm Composite. This element should not be combined with PriceType. */
	optional ern_Price wholesale_price_per_unit = 7;
}

/* A Composite containing details of a PriceType. */
message ern_PriceType {
/* The Namespace of the PriceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a PromotionalCode. */
message ern_PromotionalCode {
/* The Namespace of the PromotionalCode. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a ProprietaryIdentifier. */
message ern_ProprietaryId {
/* The Namespace of the ProprietaryIdentifier. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

message ern_PurgeReleaseMessage {
/* The Language and script for the Elements of this Message as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* The MessageHeader for the PurgeReleaseMessage. */
	optional ern_MessageHeader message_header = 2;
/* A Composite containing details of a DDEX Release to be purged. */
	optional ern_PurgedRelease purged_release = 3;
}

/* A Composite containing details of a DDEX Release to be purged. */
message ern_PurgedRelease {
/* A Composite containing details of a Contributor to the Release.Further Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DetailedResourceContributor contributor = 1;
/* A Composite containing details of ReleaseIds. If available, a GRid has to be used. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ern_ReleaseId release_id = 2;
/* A Composite containing details of a Title of the Release. */
	repeated ern_Title title = 3;
}

/* A Composite containing details of a Purpose. */
message ern_Purpose {
/* The Namespace of the Purpose. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the Purpose. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_Purpose ext_value = 3;
}

/* A Composite containing details of a Raga. */
message ern_Raga {
/* A Territory to which the Raga applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
	optional string ext_value = 3;
}

/* A Composite containing details of a RatingAgency. */
message ern_RatingAgency {
/* The Namespace of the RatingAgency. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the RatingAgency. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_RatingAgency ext_value = 3;
}

/* A Composite containing details of a RatingReason. */
message ern_RatingReason {
/* The Namespace of the RatingReason. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the RatingReason. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_RatingReason ext_value = 3;
}

/* A Composite containing details of a Reason. */
message ern_Reason {
/* The Language and script of the Reason as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* A Composite containing details of a PartyRelatedPartyReference for the case where one Party is related to another one. */
message ern_RelatedParty {
/* A Reference for a related Party (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	optional string party_related_party_reference = 1;
/* A Type of relationship between two Parties. */
	optional ern_PartyRelationshipType party_relationship_type = 2;
}

/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to a Resource, Release or Product. */
message ern_RelatedRelease {
/* A Composite containing details of an AdditionalTitle of the Release. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Release to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtistNameWithDefault display_artist_name = 2;
/* A Composite containing details of a Title of the Release as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 3;
/* A Composite containing details of a Title of the Release as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 4;
/* A Composite containing details of the Date and Place of the Event in which the collection of tracks for the Release (e.g. the equivalent physical album on vinyl) was or will be first made available for Usage, whether for physical or electronic/online distribution (in ISO 8601 format: YYYY-MM-DD). */
	optional ern_EventDateWithoutFlags original_release_date = 5;
/* A Composite containing details of the Date and Place of the Event in which the related Release was or will be first made available for Usage in its current form, whether for physical or electronic/online distribution (in ISO 8601 format: YYYY-MM-DD). */
	optional ern_EventDateWithoutFlags release_date = 6;
/* A Composite containing details of ReleaseIds. If available, a GRid shall always to be used. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ern_ReleaseId release_id = 7;
/* A Reference for a label of the Release (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	repeated ern_ReleaseLabelReference release_label_reference = 8;
/* A Composite containing details of the Type of the relationship between the two Releases. */
	optional ern_ReleaseRelationshipType release_relationship_type = 9;
}

/* A Composite containing details of a ResourceRelatedResourceReference for the case where one Resource is related to another one. */
message ern_RelatedResource {
/* A Composite containing details of ResourceIds, which allows referencing a related Resource that is not in this message. */
	optional ern_ResourceId resource_id = 1;
/* A Reference for a related Resource (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	optional string resource_related_resource_reference = 2;
/* A Type of relationship between two Resources. */
	optional avs_ResourceRelationshipType resource_relationship_type = 3;
/* A Composite containing details of a StartTime and/or a Duration of the related Resource. */
	repeated ern_Timing timing = 4;
}

/* A Composite containing details of a DDEX Release. */
message ern_Release {
/* A Composite containing details of an AdditionalTitle of the Release. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of the AdministratingRecordCompany for the Release.  */
	repeated ern_AdministratingRecordCompanyWithReference administrating_record_company = 2;
/* A Composite containing details of a rating for the Release. */
	repeated ern_AvRating av_rating = 3;
/* A Composite containing details of the CLine for the Release. */
	repeated ern_CLineWithDefault c_line = 4;
/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for guests Artists or others featured on the Release. */
	repeated ern_CourtesyLineWithDefault courtesy_line = 5;
/* A deity name relating to the Release. */
	repeated ern_Deity deity = 6;
/* A Composite containing details of the DisplayArtist for the Release. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 7;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Release to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtistNameWithDefault display_artist_name = 8;
/* A Composite containing details of a Title of the Release as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 9;
/* A Composite containing details of a Title of the Release as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 10;
/* The sum of the Durations of all Resources contained in the Release (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration = 11;
/* A Composite containing details of promotional or other material related to the Release. */
	repeated ern_ExternalResourceLink external_resource_link = 12;
/* A Composite containing details of a Genre to which the Release belongs. */
	repeated ern_GenreWithTerritory genre = 13;
/* A Description containing an explanation that is required if not all the Tracks are eligible for HiResMusic (e.g. if some tracks were up-sampled to 96 kHz/24 bit from a 44.1 kHz/24 bit source during mastering). */
	optional string hi_res_music_description = 14;
/* The Flag indicating whether the Release meets the criteria to carry the HiResMusic logo, provided the MessageRecipient meets all the other requirements to use it (note that an album with a majority of tracks being eligible but the remainder not being eligible can still carry the logo) (=true) or not (=false). */
	optional bool is_hi_res_music = 15;
/* The Flag indicating whether the Release is a multiartist Compilation (=true) or not (=false). */
	optional bool is_multi_artist_compilation = 16;
/* A Flag indicating whether the Release is a single-artist Compilation (=true) or not (=false). If this flag is set, the Release would typically be expected to be part of the discography of the main artist of the Release. */
	optional bool is_single_artist_compilation = 17;
/* The Flag indicating whether the Release is a Soundtrack (=true) or not (=false). */
	optional bool is_soundtrack = 18;
/* A Composite containing details of a Description of the Release containing Keywords. */
	repeated ern_KeywordsWithTerritory keywords = 19;
/* The Language and script for the Elements of the Release as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 20;
/* A Composite containing a Comment about the promotion and marketing of the Release. */
	repeated ern_MarketingComment marketing_comment = 21;
/* A Composite containing details of the Date and Place of the Event in which the collection of tracks for the Release (e.g. the equivalent physical album on vinyl) was or will be first made available for Usage, whether for physical or electronic/online distribution (in ISO 8601 format: YYYY[-MM[-DD]]). This Element is for display and cataloguing purposes only. */
	repeated ern_EventDateWithDefault original_release_date = 22;
/* A Composite containing details of the PLine for the Release. */
	repeated ern_PLineWithDefault p_line = 23;
/* A Composite containing details of the classification of the Release according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ern_ParentalWarningTypeWithTerritory parental_warning_type = 24;
/* A Description of the melodic mode of a MusicalWork in the Release. */
	repeated ern_Raga raga = 25;
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to this Release. */
	repeated ern_RelatedRelease related_release = 26;
/* A Composite containing details of a Resource which is related to this Release. */
	repeated ern_RelatedResource related_resource = 27;
/* A Composite containing details of the Date and Place of the Event in which the Release was or will be first made available for Usage in its current form, whether for physical or electronic/online distribution (in ISO 8601 format: YYYY[-MM[-DD]]). This Element is for display and cataloguing purposes only. */
	repeated ern_EventDateWithDefault release_date = 28;
/* A Composite containing details of ReleaseIds. If available, a GRid has to be used. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ern_ReleaseId release_id = 29;
/* A Reference for a label of the Release (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	repeated ern_ReleaseLabelReferenceWithParty release_label_reference = 30;
/* The Identifier (specific to the Message) of the Release. Used to link the Release to one or more Deal(s). This is a LocalReleaseAnchor starting with the letter R. */
	optional string release_reference = 31;
/* A Composite containing details of the form in which a ReleaseCreator anticipates offering the Release to Consumers. The RelaseType is a marketing term and more than one value may be provided.Further Reading: https://kb.ddex.net/display/HBK/Release+Types+for+TrackReleases */
	repeated ern_ReleaseTypeForReleaseNotification release_type = 32;
/* A Reference for a set of visibility dates (specific to this Message) that applies to this Release. This defines when the Release can be shown to Consumers, not when a Consumer can get access to the Release. This is a LocalVisibilityAnchorReference starting with the letter V. */
	optional string release_visibility_reference = 33;
/* A Composite containing details of a group of some or all of the Resources in the Release. ResourceGroups are used to signal groupings or sequences of Resources within a Release. Examples include individual carriers in a multi-carrier Release or classical Work groupings as well as the default order of Resources within a Release. ResourceGroups are typically not used with Releases that contain only one primary Resource such as TrackReleases.Further Reading: https://kb.ddex.net/display/HBK/Sequencing+Resources */
	optional ern_ResourceGroup resource_group = 34;
/* A Composite containing details of a Synopsis of the Release. */
	repeated ern_SynopsisWithTerritory synopsis = 35;
/* A Description of the rhythmic pattern of a MusicalWork in the Release. */
	repeated ern_Tala tala = 36;
/* A URL of a sub-site or channel in the DSP’s system, where the Release should be made available to Consumers.  */
	optional string target_u_r_l = 37;
}

/* A Composite containing details of Release administration. */
message ern_ReleaseAdmin {
/* A textual Description of the group of people that are to be given access to the DSP’s system. This information is auxiliary to the ReleaseAdminId element, which is the authoritative source of information for the DSP. */
	optional string personnel_description = 1;
/* An Identifier specified by the MessageSender that identifies a group of record company personnel to be granted access to the MessageRecipient’s systems to administer the Release. Note that the communication of user access credentials is out of scope for the NewReleaseMessage. */
	optional string release_admin_id = 2;
/* A textual Description indicating which system a person in the group identified by the Release is allowed to access. */
	repeated string system_description = 3;
}

/* A Composite containing details of one or more Deals pertaining to one or more Releases. */
message ern_ReleaseDeal {
/* A Composite containing details of a Deal governing the Usage of all Releases identified in the ReleaseDeal Composite.Further Reading: https://kb.ddex.net/display/HBK/No+Takedown+in+Initial+Deal */
	repeated ern_Deal deal = 1;
/* The Identifier (specific to the Message) of a Release in the Deal. This is a LocalReleaseAnchorReference starting with the letter R. */
	repeated string deal_release_reference = 2;
}

/* A Composite containing details of a ReleaseId. If available, a GRid should always to be used. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
message ern_ReleaseId {
/* A Composite containing details of the CatalogNumber of the Release. */
	optional ern_CatalogNumber catalog_number = 1;
/* The GRid identifying the Release. This is the preferred Element and is mandatory if a GRid is available. A GRid comprises four parts: the xs:string 'A1', followed by five alphanumeric characters, ten alphanumeric characters and and one alphanumeric character. DDEX will enforce the syntax [a-zA-Z0-9]{18} using XML Schema in the future. */
	optional string g_rid = 2;
/* An ICPN used as proxy for identification of the Release. Only applicable when the Release is an abstraction of a complete PhysicalProduct. An ICPN comprises 12 or 13 digits, depending whether it is an EAN (13) or a UPC (12). DDEX will enforce the syntax [0-9]{12,13} using XML Schema in the future. */
	optional string i_c_p_n = 3;
/* A Composite containing details of a ProprietaryIdentifier of the Release. */
	repeated ern_ProprietaryId proprietary_id = 4;
}

/* A Composite containing details of a Reference to a label of a specific Release. */
message ern_ReleaseLabelReference {
/* A Territory to which the LabelName applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* A Type of Label. This is represented in an XML schema as an XML Attribute. */
	optional avs_LabelType label_type = 3;
/* The Language and script of the LabelName as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
/* The Namespace of the LabelType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 5;
/* A UserDefined value of the LabelType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 6;
	optional ern_ddex_LocalPartyAnchorReference ext_value = 7;
}

/* A Composite containing details of a Reference to a label of a specific Release.Explanatory Note: This Composite is named ReleaseLabelReferenceWithParty to disambiguate it from the basic ReleaseLabelReference Composite. */
message ern_ReleaseLabelReferenceWithParty {
/* A Party who is allowed to administer a Release on a ReleaseDistributor’s system. ReleaseCreator and ReleaseDistributor shall agree what the access rules for those people are and the exchange of username and password (or other means of authentication) is left to ReleaseCreator and ReleaseDistributor. */
	optional string access_control_party = 1;
/* A Territory to which the LabelName applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 2;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 3;
/* A Type of Label. This is represented in an XML schema as an XML Attribute. */
	optional avs_LabelType label_type = 4;
/* The Language and script of the LabelName as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
/* The Namespace of the LabelType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 6;
/* A UserDefined value of the LabelType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 7;
	optional ern_ddex_LocalPartyAnchorReference ext_value = 8;
}

/* A Composite containing details of one or more Releases. */
message ern_ReleaseList {
/* A Composite containing details of a DDEX Release. */
	optional ern_Release release = 1;
/* A Composite containing details of a DDEX TrackRelease. */
	repeated ern_TrackRelease track_release = 2;
}

/* A Composite containing details of a ReleaseRelationshipType, e.g. between an AudioClipRelease and a VideoClipRelease. */
message ern_ReleaseRelationshipType {
/* The Namespace of the ReleaseRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ReleaseRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ReleaseRelationshipType ext_value = 3;
}

/* A Composite containing details of a ReleaseType.Explanatory Note: This Composite is named ReleaseTypeForReleaseNotification to disambiguate it from the basic ReleaseType Composite. The name indicates that it is ERN specific. */
message ern_ReleaseTypeForReleaseNotification {
/* The Namespace of the ReleaseType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the ReleaseType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ReleaseType_ERN4 ext_value = 3;
}

/* A Composite containing details of Dates specifying when a Release can be shown to Consumers. */
message ern_ReleaseVisibility {
/* A DateTime on which the cover art is made first available for display (it overrides the generic ReleaseDisplayStartDate if supplied). If no CoverArtPreviewStartDateTime is provided, the StartDate for the Deal is used instead. The CoverArtPreviewStartDateTime shall not be later than the StartDate of the Deal allowing the general availability of the referenced Release. This is a string in ISO 8601 format: YYYY-MM-DDThh:mm:ss. */
	optional uint64 cover_art_preview_start_date_time = 1;
/* A DateTime on which the full Track list is made first available for display (it overrides the generic ReleaseDisplayStartDate if supplied). If no TrackListingPreviewStartDateTime is provided, the StartDate for the Deal is used instead. The TrackListingPreviewStartDateTime shall not be later than the StartDate of the Deal allowing the general availability of the referenced Release. This element is not applicable on Track Releases. This is a string in ISO 8601 format: YYYY-MM-DDThh:mm:ss. */
	optional uint64 full_track_listing_preview_start_date_time = 2;
/* A DateTime on which the Release is made first available for display. If no ReleaseDisplayStartDateTime is provided, the StartDate for the Deal is used instead. The ReleaseDisplayStartDateTime may not be later than the StartDate for the Deal. If the MessageRecipient is not able to cater for such granular display policies, the MessageRecipient may be forced to not display any Release information until a much later date. This is a string in ISO 8601 format: YYYY-MM-DDThh:mm:ss. */
	optional uint64 release_display_start_date_time = 3;
/* The Identifier (specific to the Message) of the visibility date. This is a LocalVisibilityAnchor starting with the letter V. */
	optional string visibility_reference = 4;
}

/* A Composite containing details of a ResourceContainedResourceReference for the case where one Resource contains another one. */
message ern_ResourceContainedResourceReference {
/* The total Duration of the Resource that has been used in a specified context (this may be less than the total Duration of the Resource) (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration_used = 1;
/* A Composite containing details of the Purpose of the usage. */
	optional ern_Purpose purpose = 2;
/* A Reference for a Resource (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	optional string resource_contained_resource_reference = 3;
/* The start point of the preview given in seconds from the start of the referenced Resource. */
	optional double start_point = 4;
}

/* A Composite containing details of one or more ResourceContainedResourceReferences.  */
message ern_ResourceContainedResourceReferenceList {
/* A Composite containing details of a ResourceContainedResourceReference. */
	repeated ern_ResourceContainedResourceReference resource_contained_resource_reference = 1;
}

/* A Composite containing details of a StudioRole. */
message ern_ResourceContributorRole {
/* The Namespace of the StudioRole. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the StudioRole. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_ResourceContributorRole ext_value = 3;
}

/* A Composite containing details of a ResourceGroup. ResourceGroups are used to signal groupings or sequences of Resources within a Release. Examples include individual Carriers in a multi-carrier Release or classical Work groupings as well as the default order of Resources within a Release. */
message ern_ResourceGroup {
/* A Composite containing details of an AdditionalTitle of the ResourceGroup. Typically this will apply to 'sub' ResourceGroups within a hierarchy, e.g., different Albums in a Set. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of a Carrier. */
	repeated ern_CarrierType carrier_type = 2;
/* A Composite containing details of the DisplayArtist for the ResourceGroup. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 3;
/* A sequence Identifier used for display purposes, consisting of a string that corresponds to the SequenceNumber, e.g. 'Side B' corresponding to '2'. */
	optional string display_sequence = 4;
/* A Composite containing details of a Title of the ResourceGroup as the MessageSender suggests it should be shown to the Consumer. Typically this will apply to 'sub' ResourceGroups within a hierarchy, e.g., different Albums in a Set. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 5;
/* A Composite containing details of a Title of the ResourceGroup as the MessageSender suggests it should be shown to the Consumer. Typically this will apply to 'sub' ResourceGroups within a hierarchy, e.g., different Albums in a Set. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 6;
/* The Duration of the ResourceGroup, if it is a SoundRecording or Video (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration = 7;
/* A Composite containing details of a ReleaseResourceReference (specific to this Message) for a Resource which is linked to this Release. Example:cover art images associated with the ResourceGroup. This LocalAnchorReference is a xs:string starting with the letter A. */
	repeated ern_LinkedReleaseResourceReference linked_release_resource_reference = 8;
/* A Flag indicating whether a display sequence exists (=true) or not (=false). */
	optional bool no_display_sequence = 9;
/* A Composite containing details of ReleaseIds of a Release which has the same content as the ResourceGroup. If available, a GRid has to be used. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ern_ReleaseId release_id = 10;
/* A ResourceGroup contained within this ResourceGroup. ResourceGroups are used to signal groupings or sequences of Resources within a Release. Examples include individual Carriers in a multi-carrier Release or classical Work groupings as well as the default order of Resources within a Release.Further Reading: https://kb.ddex.net/display/HBK/Sequencing+Resources */
	repeated ern_ResourceSubGroup resource_group = 11;
/* A Composite containing details of a Resource contained in the ResourceGroup. */
	repeated ern_ResourceGroupContentItem resource_group_content_item = 12;
/* The Identifier (specific to the Message) of a Release which has the same content as the ResourceGroup. This is a LocalReleaseAnchorReference starting with the letter R. */
	optional string resource_group_release_reference = 13;
/* The number indicating the logical order of the ResourceGroup within all ResourceGroups at this level. The default value is 1, and the value must be incremented by 1 for each ResourceGroup occurring at a particular level. */
	optional int32 sequence_number = 14;
}

/* A Composite containing details of a Resource which is a ContentItem of a ResourceGroup. */
message ern_ResourceGroupContentItem {
/* A sequence Identifier used for display purposes, consisting of a string that corresponds to the SequenceNumber, e.g. 'Side B' corresponding to '2'. */
	optional string display_sequence = 1;
/* The Flag indicating whether a Resource in a Release is additional to those on the original Release of which this is a Version (=true) or not (=false). If this Element is not provided, it is assumed that this is False. */
	optional bool is_bonus_resource = 2;
/* The Flag indicating whether a Resource in a Release may be made available to consumers despite the distribution of the containing Release not having been permitted (=true) or not (=false). If this Element is not provided, it is assumed that this is False. The actual status of a Resource as an InstantGratificationResource is determined in the relevant Deal. */
	optional bool is_instant_gratification_resource = 3;
/* A Flag indicating whether a Resource that is only available when the Release is purchased during a pre-order period (delivery is typically at ReleaseDate) (=true) or not (=false). If this Element is not provided, it is assumed that this is False. The actual status of a Resource as an PreOrderIncentiveResource is determined in the relevant Deal. */
	optional bool is_pre_order_incentive_resource = 4;
/* A Composite containing details of a ReleaseResourceReference (specific to this Message) for a Resource which is linked to this ContentItem. Example: an Image, Text or NonMusicalWorkVideo associated with a SoundRecording. This LocalAnchorReference is a xs:string starting with the letter A. */
	repeated ern_LinkedReleaseResourceReference linked_release_resource_reference = 5;
/* A Flag indicating whether a display sequence exists (=true) or not (=false). */
	optional bool no_display_sequence = 6;
/* A ReleaseResourceReference for the ContentItem (specific to this Message). The LocalAnchorReference in this Composite is a xs:string starting with the letter A. */
	optional string release_resource_reference = 7;
/* The number indicating the logical order of the ContentItem in its ResourceGroup. */
	optional int32 sequence_number = 8;
}

/* A Composite containing details of ResourceIds. */
message ern_ResourceId {
/* A Composite containing details of the CatalogNumber of the Resource. */
	optional ern_CatalogNumber catalog_number = 1;
/* The ISAN (International Standard Audiovisual Number as defined in ISO 15706) for the Resource. An ISAN comprises four blocks of four hexadecimal charaters followed by a check character. DDEX will enforce the syntax [A-F0-9]{12} using XML Schema in the future. */
	optional string i_s_a_n = 2;
/* The ISBN (International Standard Book Number defined in ISO 2108) for the Resource. An ISBN is a 13-digit number. Pre-2007, ISBNs, which had 10-digits and are now deprecated, are converted by adding the prefix '978' and re-calculating the check character. DDEX will enforce the syntax 97[8-9][0-9]{9}[X0-9] using XML Schema in the future. */
	optional string i_s_b_n = 3;
/* The ISMN (International Standard Music Number defined in ISO 10957) for the Resource. An ISMN is a thirteen-digit number. Pre-2008 ISMNs, which had 10 characters and are now deprecated, are converted by replacing the initial letter ('M') with '979-0'. DDEX will enforce the syntax 979[0-9]{9}[X0-9] using XML Schema in the future. */
	optional string i_s_m_n = 4;
/* The ISRC (International Standard Recording Code as defined in ISO 3901) for the Resource. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits. DDEX will enforce the syntax [a-zA-Z]{2}[a-zA-Z0-9]{3}[0-9]{7} using XML Schema in the future. */
	optional string i_s_r_c = 5;
/* The ISSN (International Standard Serial Number defined in ISO 3297) for the Resource. An ISSN comprises two groups of four digits, separated by a hyphen and a control digit. DDEX will enforce the syntax [0-9]{4}-[0-9]{3}[X0-9] using XML Schema in the future. */
	optional string i_s_s_n = 6;
/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=true) or not (=false). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 7;
/* A Composite containing details of a ProprietaryIdentifier of the Resource. */
	repeated ern_ProprietaryId proprietary_id = 8;
/* The SICI (Serial Item and Contribution Identifier defined in ANSI/NISO Z39.56-199) for the Resource. DDEX will enforce the syntax [0-9]{4}-[0-9]{3}[X0-9].+ using XML Schema in the future. */
	optional string s_i_c_i = 9;
/* The V-ISAN (Version Identifier of a International Standard Audiovisual Number as defined in ISO 15706-2) for the Resource. A V-ISAN comprises four blocks of four hexadecimal charaters followed by a check character, followed by two further blocks of four hexadecimal characters, followed by a further check character. DDEX will enforce the syntax [A-F0-9]{24} using XML Schema in the future. */
	optional string v_i_s_a_n = 10;
}

/* A Composite containing details of one or more Resources. ResourceList provides a simple means of aggregating Resources without any explicit sequencing or grouping: if that is needed it is provided by the ResourceGroup Composite.  */
message ern_ResourceList {
/* A Composite containing details of an Image. */
	repeated ern_Image image = 1;
/* A Composite containing details of a SheetMusic. */
	repeated ern_SheetMusic sheet_music = 2;
/* A Composite containing details of an item of Software. */
	repeated ern_Software software = 3;
/* A Composite containing details of a SoundRecording. */
	repeated ern_SoundRecording sound_recording = 4;
/* A Composite containing details of a Text. */
	repeated ern_Text text = 5;
/* A Composite containing details of a Video. */
	repeated ern_Video video = 6;
}

/* A Composite containing details of ProprietaryIdentifiers of a Resource. */
message ern_ResourceProprietaryId {
/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=true) or not (=false). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 1;
/* A Composite containing details of a ProprietaryIdentifier of the Resource. */
	repeated ern_ProprietaryId proprietary_id = 2;
}

/* A Composite containing details of a RightsController for a Resource. RightsControllers are typically described by Name, Identifier and Role(s). */
message ern_ResourceRightsController {
/* A Composite containing details of the kinds of usage for which rights have been delegated. */
	repeated ern_DelegatedUsageRights delegated_usage_rights = 1;
/* The share of the licensed Rights owned by the RightsController. RightShare information is given as a xs:decimal value with up to 6 digits (e.g. '12.5' represents 12.5%). If no information is given, 100% is assumed.Further Reading: https://kb.ddex.net/display/HBK/Communication+of+Percentages+in+DDEX */
	optional ern_Percentage right_share_percentage = 2;
/* The Flag indicating whether the RightSharePercentage is unknown (=true) or not (=false). */
	optional bool right_share_unknown = 3;
/* A role that describes the Party involved in the administration of Rights. */
	repeated avs_RightsControllerRole rights_control_type = 4;
/* A Reference for a Party (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	optional string rights_controller_party_reference = 5;
/* The number indicating the order of the RightsController in a group of RightsControllers. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 6;
}

/* A Composite containing details of a ResourceGroup that is contained in another ResourceGroup. */
message ern_ResourceSubGroup {
/* A Composite containing details of an AdditionalTitle of the ResourceGroup. Typically this will apply to 'sub' ResourceGroups within a hierarchy, e.g., different Albums in a Set. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of a Carrier. */
	repeated ern_CarrierType carrier_type = 2;
/* A Composite containing details of the DisplayArtist for the ResourceGroup. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 3;
/* A sequence Identifier used for display purposes, consisting of a string that corresponds to the SequenceNumber, e.g. 'Side B' corresponding to '2'. */
	optional string display_sequence = 4;
/* A Composite containing details of a Title of the ResourceGroup as the MessageSender suggests it should be shown to the Consumer. Typically this will apply to 'sub' ResourceGroups within a hierarchy, e.g., different Albums in a Set. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 5;
/* A Composite containing details of a Title of the ResourceGroup as the MessageSender suggests it should be shown to the Consumer. Typically this will apply to 'sub' ResourceGroups within a hierarchy, e.g., different Albums in a Set. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 6;
/* The Duration of the ResourceGroup, if it is a SoundRecording or Video (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration = 7;
/* A Composite containing details of a ReleaseResourceReference (specific to this Message) for a Resource which is linked to this Release. Example:cover art images associated with the ResourceGroup. This LocalAnchorReference is a xs:string starting with the letter A. */
	repeated ern_LinkedReleaseResourceReference linked_release_resource_reference = 8;
/* A Flag indicating whether a display sequence exists (=true) or not (=false). */
	optional bool no_display_sequence = 9;
/* A Composite containing details of ReleaseIds of a Release which has the same content as the ResourceGroup. If available, a GRid has to be used. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ern_ReleaseId release_id = 10;
/* A ResourceGroup contained within this ResourceGroup. ResourceGroups are used to signal groupings or sequences of Resources within a Release. Examples include individual Carriers in a multi-carrier Release or classical Work groupings as well as the default order of Resources within a Release.Further Reading: https://kb.ddex.net/display/HBK/Sequencing+Resources */
	repeated ern_ResourceSubGroup resource_group = 11;
/* A Composite containing details of a Resource contained in the ResourceGroup. */
	repeated ern_ResourceGroupContentItem resource_group_content_item = 12;
/* The Identifier (specific to the Message) of a Release which has the same content as the ResourceGroup. This is a LocalReleaseAnchorReference starting with the letter R. */
	optional string resource_group_release_reference = 13;
/* A Type of ResourceGroup. */
	optional avs_ResourceGroupType resource_group_type = 14;
/* The number indicating the logical order of the ResourceGroup within all ResourceGroups at this level. The default value is 1, and the value must be incremented by 1 for each ResourceGroup occurring at a particular level. */
	optional int32 sequence_number = 15;
}

/* A Composite containing details of a rights claim policy. */
message ern_RightsClaimPolicy {
/* A Composite containing details of Conditions. If more than one Condition is specified, then all of them have to be fulfilled (i.e. they are combined using the logical operator AND). */
	repeated ern_ConditionForRightsClaimPolicy condition = 1;
/* A Type of rights claim policy. */
	optional avs_RightsClaimPolicyType rights_claim_policy_type = 2;
}

/* A Composite containing a SamplingRate and a UnitOfMeasure. */
message ern_SamplingRate {
/* The UnitOfMeasure of the SamplingRate. This is represented in an XML schema as an XML Attribute.  */
	optional avs_UnitOfFrequency unit_of_measure = 1;
	optional double ext_value = 2;
}

/* A Composite containing details of a SessionType. */
message ern_SessionType {
/* The Namespace of the SessionType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the SessionType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_SessionType ext_value = 3;
}

/* A Composite containing details of a SheetMusic. */
message ern_SheetMusic {
/* A Composite containing details of an AdditionalTitle of the SheetMusic. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of the CLine for the SheetMusic. */
	repeated ern_CLineWithDefault c_line = 2;
/* The Flag indicating whether the SheetMusic contains content that is hidden in some way from the Consumer (=true) or not (=false). */
	optional bool contains_hidden_content = 3;
/* A Composite containing details of a Contributor to the SheetMusic. */
	repeated ern_Contributor contributor = 4;
/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for Artists or others featured in the SheetMusic. */
	repeated ern_CourtesyLineWithDefault courtesy_line = 5;
/* A Composite containing details of the Date and Place of the Event in which the SheetMusic was created. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags creation_date = 6;
/* A Composite containing details of the DisplayArtist for the SheetMusic. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 7;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtistNameWithDefault display_artist_name = 8;
/* A Composite containing details of a Title of the SheetMusic as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 9;
/* A Composite containing details of a Title of the SheetMusic as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 10;
/* A Composite containing details of the Date and Place of the Event in which the SheetMusic was first published, whether for physical or electronic/online distribution. This is a string with the syntax YYYY[-MM[-DD]]. */
	repeated ern_FulfillmentDateWithTerritory first_publication_date = 11;
/* The Flag indicating whether the SheetMusic is provided in a addition to the Resources that form part of the Release (=true) or not (=false). If the flag is set to false (or absent) the SheetMusic is part of at least one Release in the message. This is represented in an XML schema as an XML Attribute. */
	optional bool is_supplemental = 12;
/* The Language and script for the Elements of the SheetMusic as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 13;
/* The Language of the Lyrics of the SheetMusic as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. */
	optional string language_of_lyrics = 14;
/* A Composite containing details of the classification of the SheetMusic according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ern_ParentalWarningTypeWithTerritory parental_warning_type = 15;
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to current SheetMusic. */
	repeated ern_RelatedRelease related_release = 16;
/* A Composite containing details of a ResourceRelatedResourceReference referring to a Resource that is related to the current SheetMusic. */
	repeated ern_RelatedResource related_resource = 17;
/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current SheetMusic. */
	optional ern_ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 18;
/* A Composite containing details of Identifiers of the SheetMusic. */
	repeated ern_SheetMusicId resource_id = 19;
/* The Identifier (specific to the Message) of the SheetMusic within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 20;
/* A Composite containing details of RightsController of Rights in the SheetMusic. */
	repeated ern_ResourceRightsController resource_rights_controller = 21;
/* A Composite containing technical details of the SheetMusic.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Binaries */
	repeated ern_TechnicalSheetMusicDetails technical_details = 22;
/* A Composite containing details of the Type of the SheetMusic. */
	optional ern_SheetMusicType type = 23;
/* A Composite containing details of a Type of Version of the SheetMusic.  */
	repeated ern_VersionType version_type = 24;
/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the SheetMusic. */
	repeated ern_MusicalWorkId work_id = 25;
/* A Composite containing details of RightsController of Rights in the Work. */
	repeated ern_WorkRightsController work_rights_controller = 26;
}

/* A Composite containing details of a SheetMusicCodecType. */
message ern_SheetMusicCodecType {
/* The Namespace of the SheetMusicCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the SheetMusicCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
/* The Identifier of the Version of the SheetMusicCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional avs_SheetMusicCodecType ext_value = 4;
}

/* A Composite containing details of Identifiers of a SheetMusic. */
message ern_SheetMusicId {
/* The ISMN (International Standard Music Number defined in ISO 10957) for the SheetMusic. An ISMN is a thirteen-digit number. Pre-2008 ISMNs, which had 10 characters and are now deprecated, are converted by replacing the initial letter ('M') with '979-0'. DDEX will enforce the syntax 979[0-9]{9}[X0-9] using XML Schema in the future. */
	optional string i_s_m_n = 1;
/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=true) or not (=false). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 2;
/* A Composite containing details of a ProprietaryIdentifier of the SheetMusic. */
	repeated ern_ProprietaryId proprietary_id = 3;
}

/* A Composite containing details of a SheetMusicType. */
message ern_SheetMusicType {
/* The Namespace of the SheetMusicType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the SheetMusicType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_SheetMusicType ext_value = 3;
}

/* A Composite containing details of a RightsType. */
message ern_SimpleRightsType {
/* The Namespace of the RightsType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the RightsType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_RightsCoverage ext_value = 3;
}

/* A Composite containing details of an item of Software. */
message ern_Software {
/* A Composite containing details of an AdditionalTitle of the Software. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of the CLine for the Software. */
	repeated ern_CLineWithDefault c_line = 2;
/* The Flag indicating whether the Software contains content that is hidden in some way from the Consumer (=true) or not (=false). */
	optional bool contains_hidden_content = 3;
/* A Composite containing details of a Contributor to the Software. */
	repeated ern_Contributor contributor = 4;
/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for Artists or others featured in the Software. */
	repeated ern_CourtesyLineWithDefault courtesy_line = 5;
/* A Composite containing details of the Date and Place of the Event in which the Software was created. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags creation_date = 6;
/* A Composite containing details of the DisplayArtist for the Software. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 7;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtistNameWithDefault display_artist_name = 8;
/* A Composite containing details of a Title of the Software as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 9;
/* A Composite containing details of a Title of the Software as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 10;
/* A Composite containing details of the Date and Place of the Event in which the Software was first published, whether for physical or electronic/online distribution. This is a string with the syntax YYYY[-MM[-DD]]. */
	repeated ern_FulfillmentDateWithTerritory first_publication_date = 11;
/* The Flag indicating whether the Software is provided in a addition to the Resources that form part of the Release (=true) or not (=false). If the flag is set to false (or absent) the Software is part of at least one Release in the message. This is represented in an XML schema as an XML Attribute. */
	optional bool is_supplemental = 12;
/* The Language and script for the Elements of the Software as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 13;
/* A Composite containing details of the PLine for the Software. */
	repeated ern_PLineWithDefault p_line = 14;
/* A Composite containing details of the classification of the Software according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ern_ParentalWarningTypeWithTerritory parental_warning_type = 15;
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to current Software. */
	repeated ern_RelatedRelease related_release = 16;
/* A Composite containing details of a ResourceRelatedResourceReference referring to a Resource that is related to the current Software. */
	repeated ern_RelatedResource related_resource = 17;
/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current Software. */
	optional ern_ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 18;
/* A Composite containing details of Identifiers of the Software. */
	repeated ern_ResourceProprietaryId resource_id = 19;
/* The Identifier (specific to the Message) of the Software within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 20;
/* A Composite containing details of RightsController of Rights in the Software. */
	repeated ern_ResourceRightsController resource_rights_controller = 21;
/* A Composite containing technical details of the Software.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Binaries */
	repeated ern_TechnicalSoftwareDetails technical_details = 22;
/* A Composite containing details of the Type of the Software. */
	optional ern_SoftwareType type = 23;
/* A Composite containing details of a Type of Version of the Software.  */
	repeated ern_VersionType version_type = 24;
/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the Software. */
	repeated ern_MusicalWorkId work_id = 25;
/* A Composite containing details of RightsController of Rights in the Work. */
	repeated ern_WorkRightsController work_rights_controller = 26;
}

/* A Composite containing details of a SoftwareType. */
message ern_SoftwareType {
/* The Namespace of the SoftwareType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the SoftwareType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_SoftwareType ext_value = 3;
}

/* A Composite containing details of a SoundRecording. */
message ern_SoundRecording {
/* A Composite containing details of an AdditionalTitle of the SoundRecording. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A configuration of audio channels. */
	optional avs_RecordingMode audio_channel_configuration = 2;
/* A Reference for a Chapter (specific to this Message). This is a LocalCollectionAnchorReference starting with the letter X. */
	repeated string audio_chapter_reference = 3;
/* A Composite containing details of a Character in the SoundRecording. A Character may be described through Name, Identifier and Roles. */
	repeated ern_Character character = 4;
/* A Type of the SoundRecording indicating whether it is a Medley or a Potpourri. */
	optional avs_CompositeMusicalWorkType composite_musical_work_type = 5;
/* The Flag indicating whether the SoundRecording contains content that is hidden in some way from the Consumer (=true) or not (=false). */
	optional bool contains_hidden_content = 6;
/* A Composite containing details of a Contributor to the SoundRecording. */
	repeated ern_Contributor contributor = 7;
/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for guests Artists or others featured on the SoundRecording. */
	repeated ern_CourtesyLineWithDefault courtesy_line = 8;
/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was created. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags creation_date = 9;
/* A deity name relating to the SoundRecording. */
	repeated ern_Deity deity = 10;
/* A Flag indicating to a DSP whether the SoundRecording should not be crossfaded from/into another SoundRecording (=true) or not (=false). */
	optional bool disable_crossfade = 11;
/* A Flag indicating to a DSP whether the SoundRecording should not be included in any search results (=true) or not (=false). Note that exclusion from search results implies that the SoundRecording should not appear in any recommendations. */
	optional bool disable_search = 12;
/* A Composite containing details of the DisplayArtist for the SoundRecording. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 13;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtistNameWithDefault display_artist_name = 14;
/* A Role and instrumentation for which a Party is credited. */
	repeated ern_DisplayCredits display_credits = 15;
/* A Composite containing details of a Title of the SoundRecording as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 16;
/* A Composite containing details of a Title of the SoundRecording as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 17;
/* The Duration of the SoundRecording (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration = 18;
/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was first published, whether for physical or electronic/online distribution. This is a string with the syntax YYYY[-MM[-DD]]. */
	repeated ern_FirstPublicationDate first_publication_date = 19;
/* A Flag indicating whether the SoundRecording is a Cover (=true) or not (=false). This is not legal information, but meant to help consumers to differentiate originals from covers. */
	optional bool is_cover = 20;
/* The Flag indicating whether the SoundRecording meets the criteria to carry the HiResMusic logo, provided the MessageRecipient meets all the other requirements to use it (=true) or not (=false). */
	optional bool is_hi_res_music = 21;
/* The Flag indicating whether the SoundRecording is instrumental (=true) or not (=false). */
	optional bool is_instrumental = 22;
/* The Flag indicating whether the SoundRecording is remastered (=true) or not (=false). */
	optional bool is_remastered = 23;
/* The Flag indicating whether the SoundRecording is provided in a addition to the Resources that form part of the Release (=true) or not (=false). If the flag is set to false (or absent) the SoundRecording is part of at least one Release in the message. This is represented in an XML schema as an XML Attribute. */
	optional bool is_supplemental = 24;
/* The Language and script for the Elements of the SoundRecording as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 25;
/* The Language of the Performance recorded in the SoundRecording as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. */
	repeated string language_of_performance = 26;
/* A Composite containing details of a RecordingSession. */
	repeated ern_LocationAndDateOfSession location_and_date_of_session = 27;
/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was originally mastered (in either analogue or digital form). This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags mastered_date = 28;
/* A Composite containing details of the PLine for the SoundRecording. */
	repeated ern_PLineWithDefault p_line = 29;
/* A Composite containing details of the classification of the SoundRecording according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ern_ParentalWarningTypeWithTerritory parental_warning_type = 30;
/* A Description of the melodic mode of a MusicalWork in the SoundRecording. */
	repeated ern_Raga raga = 31;
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to current SoundRecording. */
	repeated ern_RelatedRelease related_release = 32;
/* A Composite containing details of a ResourceRelatedResourceReference referring to a Resource that is related to the current SoundRecording. */
	repeated ern_RelatedResource related_resource = 33;
/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was re-mastered (usually digitally). This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags remastered_date = 34;
/* A Composite containing details of a SoundRecordingId. */
	repeated ern_SoundRecordingId resource_id = 35;
/* The Identifier (specific to the Message) of the SoundRecording within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 36;
/* A Composite containing details of RightsController of Rights in the SoundRecording. */
	repeated ern_ResourceRightsController resource_rights_controller = 37;
/* A Description of the rhythmic pattern of a MusicalWork in the SoundRecording. */
	repeated ern_Tala tala = 38;
/* A Composite containing technical details of the SoundRecording.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Binaries */
	repeated ern_TechnicalSoundRecordingDetails technical_details = 39;
/* A Composite containing details of the Type of the SoundRecording. */
	optional ern_SoundRecordingType type = 40;
/* A Composite containing details of a Type of Version of the SoundRecording.  */
	repeated ern_VersionType version_type = 41;
/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the SoundRecording. */
	repeated ern_MusicalWorkId work_id = 42;
/* A Composite containing details of RightsController of Rights in the Work. */
	repeated ern_WorkRightsController work_rights_controller = 43;
}

/* A Composite containing details of SoundRecordingIds. */
message ern_SoundRecordingId {
/* A Composite containing details of the CatalogNumber of the SoundRecording. */
	optional ern_CatalogNumber catalog_number = 1;
/* The ISRC (International Standard Recording Code as defined in ISO 3901) for the SoundRecording. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits. DDEX will enforce the syntax [a-zA-Z]{2}[a-zA-Z0-9]{3}[0-9]{7} using XML Schema in the future. */
	optional string i_s_r_c = 2;
/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=true) or not (=false). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 3;
/* A Composite containing details of a ProprietaryIdentifier of the SoundRecording (usually one per society involved in the messaging). */
	repeated ern_ProprietaryId proprietary_id = 4;
}

/* A Composite containing details of a preview. */
message ern_SoundRecordingPreviewDetails {
/* The position of the bottom right corner of the preview measured in Pixels from the top left corner of the Resource. The position is given as two coordinate values separated by a comma, the top left pixel being 0,0. */
	optional string bottom_right_corner = 1;
/* The Duration of the preview, measured from the StartPoint. */
	optional string duration = 2;
/* The end point of the preview given in seconds from the start of the Resource. */
	optional double end_point = 3;
/* A Type of expression indicating how this should be perceived, e.g. as instruction (meaning that this has to be done to create the preview) or as information (meaning that this has been done to craete the preview). */
	optional avs_ExpressionType expression_type = 4;
/* The start point of the preview given in seconds from the start of the Resource. */
	optional double start_point = 5;
/* The position of the top left corner of the preview measured in Pixels from the top left corner of the Resource. The position is given as two coordinate values separated by a comma, the top left pixel being 0,0. */
	optional string top_left_corner = 6;
}

/* A Composite containing details of a SoundRecordingType. */
message ern_SoundRecordingType {
/* The Namespace of the SoundRecordingType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the SoundRecordingType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_SoundRecordingType ext_value = 3;
}

/* A Composite containing details of a sub-genre within the classical genre. */
message ern_SubGenreCategory {
/* The text of the sub-genre. */
	repeated ern_SubGenreCategoryValue value = 1;
}

/* A Composite containing details of a sub-genre within the classical genre. */
message ern_SubGenreCategoryValue {
/* The Namespace of the classical sub-genre. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the vocal register. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_SubGenre ext_value = 3;
}

/* A Composite containing details of one or more supplemental documents. */
message ern_SupplementalDocumentList {
/* A Composite containing details of a supplemental document. */
	repeated ern_File supplemental_document = 1;
}

/* A Composite containing details of a Synopsis.Explanatory Note: This Composite is named SynopsisWithTerritory to disambiguate it from the basic Synopsis Composite. */
message ern_SynopsisWithTerritory {
/* A Territory to which the Synopsis applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
/* The Flag indicating whether the Synopsis is short (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_short_synopsis = 3;
/* The Language and script of the Synopsis as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
	optional string ext_value = 5;
}

/* A Composite containing details of a Tala. */
message ern_Tala {
/* A Territory to which the Tala applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 2;
	optional string ext_value = 3;
}

/* A Composite containing technical details of an Image. */
message ern_TechnicalImageDetails {
/* A Territory to which the TechnicalImageDetails apply. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing the ratio formed by dividing the ImageHeight by the ImageWidth. */
	optional ern_AspectRatio aspect_ratio = 2;
/* The BitDepth of the File. */
	optional int32 bit_depth = 3;
/* An amount of data determining the color of a Pixel of the Image (given in bits per pixel). */
	optional int32 color_depth = 4;
/* A Composite containing details of a File containing the Image that a DSP can obtain. */
	optional ern_File file = 5;
/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated ern_Fingerprint fingerprint = 6;
/* A Composite containing details of a Type of ImageCodec. */
	optional ern_ImageCodecType image_codec_type = 7;
/* A Composite containing the vertical Extent of an Image of the Image and a UnitOfMeasure (the default is Pixels). */
	optional ern_Extent image_height = 8;
/* A number of Pixels of the Image displayed in a specific spatial range (given in dpi). */
	optional int32 image_resolution = 9;
/* A Composite containing the horizontal Extent of an Image of the Image and a UnitOfMeasure (the default is Pixels). */
	optional ern_Extent image_width = 10;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 11;
/* The Flag indicating whether the Image is technically a preview of the parent Resource (=true) or not (=false). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 12;
/* A Flag indicating whether a File containing the Image is a provided in a delivery (=true) or not (=false). */
	optional bool is_provided_in_delivery = 13;
/* The Language and script for the Elements of the TechnicalImageDetails as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 14;
/* A Composite containing details of a preview.Further Reading: https://kb.ddex.net/display/HBK/Preview+Resources */
	optional ern_PreviewDetails preview_details = 15;
/* The Identifier (specific to the Message) of the TechnicalImageDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 16;
}

/* A Composite containing technical details of a SheetMusic. */
message ern_TechnicalSheetMusicDetails {
/* A Territory to which the TechnicalSheetMusicDetails apply. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The BitDepth of the File. */
	optional int32 bit_depth = 2;
/* A Composite containing details of a File containing the SheetMusic that a DSP can obtain. */
	optional ern_File file = 3;
/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated ern_Fingerprint fingerprint = 4;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 5;
/* The Flag indicating whether the SheetMusic is technically a preview of the parent Resource (=true) or not (=false). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 6;
/* A Flag indicating whether a File containing the SheetMusic is a provided in a delivery (=true) or not (=false). */
	optional bool is_provided_in_delivery = 7;
/* The Language and script for the Elements of the TechnicalSheetMusicDetails as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 8;
/* A Composite containing details of a preview.Further Reading: https://kb.ddex.net/display/HBK/Preview+Resources */
	optional ern_PreviewDetails preview_details = 9;
/* A Composite containing details of a Type of SheetMusic Codec. */
	optional ern_SheetMusicCodecType sheet_music_codec_type = 10;
/* The Identifier (specific to the Message) of the TechnicalSheetMusicDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 11;
}

/* A Composite containing technical details of a Software. */
message ern_TechnicalSoftwareDetails {
/* A Territory to which the TechnicalSoftwareDetails apply. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The BitDepth of the File. */
	optional int32 bit_depth = 2;
/* A Composite containing details of a File containing the Software that a DSP can obtain. */
	optional ern_File file = 3;
/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated ern_Fingerprint fingerprint = 4;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 5;
/* The Flag indicating whether the Software is technically a preview of the parent Resource (=true) or not (=false). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 6;
/* A Flag indicating whether a File containing the Software is a provided in a delivery (=true) or not (=false). */
	optional bool is_provided_in_delivery = 7;
/* The Language and script for the Elements of the TechnicalSoftwareDetails as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 8;
/* A Composite containing details of a Type of OperatingSystem. */
	optional ern_OperatingSystemType operating_system_type = 9;
/* A Composite containing details of a preview.Further Reading: https://kb.ddex.net/display/HBK/Preview+Resources */
	optional ern_PreviewDetails preview_details = 10;
/* The Identifier (specific to the Message) of the TechnicalSoftwareDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 11;
}

/* A Composite containing technical details of a SoundRecording. */
message ern_TechnicalSoundRecordingDetails {
/* A Territory to which the TechnicalSoundRecordingDetails apply. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing details of a Type of AudioCodec. */
	optional ern_AudioCodecType audio_codec_type = 2;
/* The BitDepth of the File. */
	optional int32 bit_depth = 3;
/* A Composite containing the BitRate for the audio data and a UnitOfMeasure (the default is kbps). */
	optional ern_BitRate bit_rate = 4;
/* An amount of audio data in a sample. */
	optional int32 bits_per_sample = 5;
/* The Duration of the instantiation of the SoundRecording if this differs from the Duration provided for the SoundRecording itself (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). This element must only be used if and when there are no royalty reporting implications on this change in duration and when the specific technical instantiation is a clip taken from a technical instantiation representing the whole SoundRecording. */
	optional string duration = 6;
/* A textual Description of the encoding. */
	optional string encoding_description = 7;
/* A Composite containing details of an identifier of the encoding. The default is that all encodings for a SoundRecording share a common identifier (as provided on the SoundRecording composite) and that, looking at the ISRC standard for instance, there should not be a different identifier for different encodings (unless there is a substantial difference). However, reality indicates that different identifiers have been allocated and therefore should be communicable. */
	optional ern_SoundRecordingId encoding_id = 8;
/* A Composite containing details of a File containing the SoundRecording that a DSP can obtain. */
	optional ern_File file = 9;
/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated ern_Fingerprint fingerprint = 10;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 11;
/* The Flag indicating whether the SoundRecording is technically a preview of the parent Resource (=true) or not (=false). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 12;
/* A Flag indicating whether a File containing the SoundRecording is a provided in a delivery (=true) or not (=false). */
	optional bool is_provided_in_delivery = 13;
/* The Language and script for the Elements of the TechnicalSoundRecordingDetails as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 14;
/* A number of audio channels. */
	optional int32 number_of_channels = 15;
/* A Composite containing the BitRate for the audio data recording and a UnitOfMeasure (the default is kbps). */
	optional ern_BitRate original_bit_rate = 16;
/* A Composite containing the sampling rate of the SoundRecording during the recording, and a UnitOfMeasure (the default is Hz). */
	optional ern_SamplingRate original_sampling_rate = 17;
/* A Composite containing details of a preview. */
	optional ern_SoundRecordingPreviewDetails preview_details = 18;
/* A Composite containing the sampling rate of the SoundRecording and a UnitOfMeasure (the default is Hz). */
	optional ern_SamplingRate sampling_rate = 19;
/* The Identifier (specific to the Message) of the TechnicalSoundRecordingDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 20;
}

/* A Composite containing technical details of a Text. */
message ern_TechnicalTextDetails {
/* A Territory to which the TechnicalTextDetails apply. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The BitDepth of the File. */
	optional int32 bit_depth = 2;
/* A Composite containing details of a File containing the Text that a DSP can obtain. */
	optional ern_File file = 3;
/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated ern_Fingerprint fingerprint = 4;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 5;
/* The Flag indicating whether the Text is technically a preview of the parent Resource (=true) or not (=false). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 6;
/* A Flag indicating whether a File containing the Text is a provided in a delivery (=true) or not (=false). */
	optional bool is_provided_in_delivery = 7;
/* The Language and script for the Elements of the TechnicalTextDetails as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 8;
/* A Composite containing details of a preview.Further Reading: https://kb.ddex.net/display/HBK/Preview+Resources */
	optional ern_PreviewDetails preview_details = 9;
/* The Identifier (specific to the Message) of the TechnicalTextDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 10;
/* A Composite containing details of a Type of TextCodec. */
	optional ern_TextCodecType text_codec_type = 11;
}

/* A Composite containing technical details of a Video. */
message ern_TechnicalVideoDetails {
/* A Territory to which the TechnicalVideoDetails apply. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* A Composite containing the ratio formed by dividing the ImageHeight by the ImageWidth. */
	optional ern_AspectRatio aspect_ratio = 2;
/* A Composite containing the BitRate for the audio data and a UnitOfMeasure (the default is kbps). */
	optional ern_BitRate audio_bit_rate = 3;
/* An amount of audio data in a sample. */
	optional int32 audio_bits_per_sample = 4;
/* A Composite containing details of a Type of AudioCodec. */
	optional ern_AudioCodecType audio_codec_type = 5;
/* A Composite containing the SamplingRate for the audio data and a UnitOfMeasure (the default is Hz). */
	optional ern_SamplingRate audio_sampling_rate = 6;
/* The BitDepth of the File. */
	optional int32 bit_depth = 7;
/* An amount of data determining the color of a pixel of an Image of the Video (given in bits per pixel). */
	optional int32 color_depth = 8;
/* A Composite containing details of a ContainerFormat. */
	optional ern_ContainerFormat container_format = 9;
/* A Composite containing details of the core part of the Video. */
	optional ern_CoreArea core_area = 10;
/* The Duration of the instantiation of the Video if this differs from the Duration provided for the Video itself (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). This element must only be used if and when there are no royalty reporting implications on this change in duration and when the specific technical instantiation is a clip taken from a technical instantiation representing the whole Video. */
	optional string duration = 11;
/* A textual Description of the encoding. */
	optional string encoding_description = 12;
/* A Composite containing details of an identifier of the encoding. The default is that all encodings for a Video share a common identifier (as provided on the Video composite) and that, looking at the ISRC standard for instance, there should not be a different identifier for different encodings (unless there is a substantial difference). However, reality indicates that different identifiers have been allocated and therefore should be communicable. */
	optional ern_VideoId encoding_id = 13;
/* A Composite containing details of a File containing the Video that a DSP can obtain. */
	optional ern_File file = 14;
/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated ern_Fingerprint fingerprint = 15;
/* A Composite containing the Rate for a number of frames shown in the Video in a specific Period of Time and a UnitOfMeasure (the default is Hz, interlaced). */
	optional ern_FrameRate frame_rate = 16;
/* A Composite containing the vertical Extent of an Image of the Video and a UnitOfMeasure (the default is Pixels). */
	optional ern_Extent image_height = 17;
/* A Composite containing the horizontal Extent of an Image of the Video and a UnitOfMeasure (the default is Pixels). */
	optional ern_Extent image_width = 18;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 19;
/* The Flag indicating whether the Video is technically a preview of the parent Resource (=true) or not (=false). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 20;
/* A Flag indicating whether a File containing the Video is a provided in a delivery (=true) or not (=false). */
	optional bool is_provided_in_delivery = 21;
/* The Language and script for the Elements of the TechnicalSoundRecordingDetails as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 22;
/* A number of audio channels. */
	optional int32 number_of_audio_channels = 23;
/* A Composite containing the overall BitRate and a UnitOfMeasure (the default is kbps). */
	optional ern_BitRate overall_bit_rate = 24;
/* A Composite containing details of a preview. */
	optional ern_SoundRecordingPreviewDetails preview_details = 25;
/* The Identifier (specific to the Message) of the TechnicalVideoDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 26;
/* A Composite containing the BitRate for the video data and a UnitOfMeasure (the default is kbps). */
	optional ern_BitRate video_bit_rate = 27;
/* A Composite containing details of a Type of VideoCodec. */
	optional ern_VideoCodecType video_codec_type = 28;
/* A Type of resolution (or definition) in which the Video is provided. */
	optional ern_VideoDefinitionType video_definition_type = 29;
}

/* A Composite containing details of a Text. */
message ern_Text {
/* A Composite containing details of an AdditionalTitle of the Text. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of the CLine for the Text. */
	repeated ern_CLineWithDefault c_line = 2;
/* The Flag indicating whether the Text contains content that is hidden in some way from the Consumer (=true) or not (=false). */
	optional bool contains_hidden_content = 3;
/* A Composite containing details of a Contributor to the Text. */
	repeated ern_Contributor contributor = 4;
/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for Artists or others featured in the Text. */
	repeated ern_CourtesyLineWithDefault courtesy_line = 5;
/* A Composite containing details of the Date and Place of the Event in which the Text was created. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags creation_date = 6;
/* A Composite containing details of the DisplayArtist for the Text. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 7;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtistNameWithDefault display_artist_name = 8;
/* A Composite containing details of a Title of the Text as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 9;
/* A Composite containing details of a Title of the Text as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 10;
/* A Composite containing details of the Date and Place of the Event in which the Text was first published, whether for physical or electronic/online distribution. This is a string with the syntax YYYY[-MM[-DD]]. */
	repeated ern_FulfillmentDateWithTerritory first_publication_date = 11;
/* The Flag indicating whether the Text is provided in a addition to the Resources that form part of the Release (=true) or not (=false). If the flag is set to false (or absent) the Text is part of at least one Release in the message. This is represented in an XML schema as an XML Attribute. */
	optional bool is_supplemental = 12;
/* The Language and script for the Elements of the Text as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 13;
/* A Composite containing details of the classification of the Text according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ern_ParentalWarningTypeWithTerritory parental_warning_type = 14;
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to current Text. */
	repeated ern_RelatedRelease related_release = 15;
/* A Composite containing details of a ResourceRelatedResourceReference referring to a Resource that is related to the current Text. */
	repeated ern_RelatedResource related_resource = 16;
/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current Text. */
	optional ern_ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 17;
/* A Composite containing details of an Identifier of the Text. */
	repeated ern_TextId resource_id = 18;
/* The Identifier (specific to the Message) of the Text within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 19;
/* A Composite containing details of RightsController of Rights in the Text. */
	repeated ern_ResourceRightsController resource_rights_controller = 20;
/* A Composite containing technical details of the Text.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Binaries */
	repeated ern_TechnicalTextDetails technical_details = 21;
/* A Composite containing details of the Type of the Text. */
	optional ern_TextType type = 22;
/* A Composite containing details of a Type of Version of the Text.  */
	repeated ern_VersionType version_type = 23;
/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the Text. */
	repeated ern_MusicalWorkId work_id = 24;
/* A Composite containing details of RightsController of Rights in the Work. */
	repeated ern_WorkRightsController work_rights_controller = 25;
}

/* A Composite containing details of a TextCodecType. */
message ern_TextCodecType {
/* The Namespace of the TextCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the TextCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
/* The Identifier of the Version of the TextCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional avs_TextCodecType ext_value = 4;
}

/* A Composite containing details of Identifiers of a Text. */
message ern_TextId {
/* The ISBN (International Standard Book Number defined in ISO 2108) for the Text. An ISBN is a 13-digit number. Pre-2007, ISBNs, which had 10-digits and are now deprecated, are converted by adding the prefix '978' and re-calculating the check character. DDEX will enforce the syntax 97[8-9][0-9]{9}[X0-9] using XML Schema in the future. */
	optional string i_s_b_n = 1;
/* The ISSN (International Standard Serial Number defined in ISO 3297) identifying the Text. An ISSN comprises two groups of four digits, separated by a hyphen and a control digit. DDEX will enforce the syntax [0-9]{4}-[0-9]{3}[X0-9] using XML Schema in the future. */
	optional string i_s_s_n = 2;
/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=true) or not (=false). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 3;
/* A Composite containing details of a ProprietaryIdentifier of the Text (usually one per society involved in the messaging). */
	repeated ern_ProprietaryId proprietary_id = 4;
/* The SICI (Serial Item and Contribution Identifier defined in ANSI/NISO Z39.56-199) for the Text. DDEX will enforce the syntax [0-9]{4}-[0-9]{3}[X0-9].+ using XML Schema in the future. */
	optional string s_i_c_i = 5;
}

/* A Composite containing details of a TextType. */
message ern_TextType {
/* The Namespace of the TextType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the TextType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_TextType ext_value = 3;
}

/* A Composite containing details of an Annotation, e.g. a Description or a Comment. */
message ern_TextWithFormat {
/* A Territory to which the Annotation applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The format of the Annotation. This is represented in an XML schema as an XML Attribute. */
	optional avs_TextCodecType format = 2;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 3;
/* The Language and script of the Annotation as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
/* The Namespace of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 5;
/* A UserDefined value of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 6;
	optional string ext_value = 7;
}

/* A Composite containing details of an Annotation, e.g. a Description or a Comment.Explanatory Note: This Composite is named TextWithoutTerritory to disambiguate it from the basic TextWithFormat Composite. */
message ern_TextWithoutTerritory {
/* A Territory to which the Annotation applies. The use of ISO TerritoryCodes (or the term 'Worldwide') is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard.  */
	optional avs_CurrentTerritoryCode applicable_territory_code = 1;
/* The format of the Annotation. This is represented in an XML schema as an XML Attribute. */
	optional avs_TextCodecType format = 2;
/* The Flag indicating whether this Composite provides default values (=true). This Flag should not be set if this is not the case. This is represented in an XML schema as an XML Attribute. */
	optional bool is_default = 3;
/* The Language and script of the Annotation as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
/* The Namespace of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 5;
/* A UserDefined value of the Format. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 6;
	optional string ext_value = 7;
}

/* A Composite containing details of a StartTime and a Duration of a Resource. */
message ern_Timing {
/* The total Duration of the related Resource that has been used (this may be less than the total Duration of the Resource) (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration_used = 1;
/* The start point of the related Resource from the start of the referencing Resource (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string start_point = 2;
}

/* A Composite containing details of a Title. */
message ern_Title {
/* The Language and script for the Elements of the Title as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
/* A SubTitle of the Title, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
	optional string sub_title = 2;
/* The text of the Title.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	optional string title_text = 3;
/* A Type of the Title which defines its origin or the function it fulfils in relation to a Creation. Note: A Title may fulfil more than one role. Example: 'Help' may be both the OriginalTitle and the DisplayTitle for the well-known Beatles song. This is represented in an XML schema as an XML Attribute. */
	optional avs_AdditionalTitleType title_type = 4;
}

/* A Composite containing information on how a RecordCompany wishes Artist information to be presented to Consumers as part of the Title (and in addition to displaying the DisplayArtist information). */
message ern_TitleDisplayInformation {
/* A Flag indicating whether the information is displayed in the Title of a Resource (=true) or not (=false). */
	optional bool is_displayed_in_title = 1;
/* The Language and script of the Information as defined in IETF RfC 5646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
/* A Descriptor that precedes the display artist name when multiple display artist names are given. */
	repeated ern_Prefix prefix = 3;
/* A number indicating the order of the display artist name in a group of display artist names, to allow sequencing different display artists. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 4;
}

/* A Composite containing details of a DDEX Release. */
message ern_TrackRelease {
/* A Composite containing details of an AdditionalTitle of the Release. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of a Title of the Release as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 2;
/* A Composite containing details of a Title of the Release as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 3;
/* A Composite containing details of a Genre to which the Release belongs. */
	repeated ern_GenreWithTerritory genre = 4;
/* The Flag indicating whether the Release is a main one as defined in the relevant Profile Standard (=true) or not (=false). This is represented in an XML schema as an XML Attribute. */
	optional bool is_main_release = 5;
/* A Composite containing details of a Description of the Release containing Keywords. */
	repeated ern_KeywordsWithTerritory keywords = 6;
/* A Composite containing details of a ReleaseResourceReference (specific to this Message) for a Resource which is linked to this Release. Example: an Image, Text or NonMusicalWorkVideo associated with a SoundRecording. This LocalAnchorReference is a xs:string starting with the letter A. */
	repeated ern_LinkedReleaseResourceReference linked_release_resource_reference = 7;
/* A Composite containing a Comment about the promotion and marketing of the Release. */
	repeated ern_MarketingComment marketing_comment = 8;
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to this Release. */
	repeated ern_RelatedRelease related_release = 9;
/* A Composite containing details of a Resource which is related to this Release. */
	repeated ern_RelatedResource related_resource = 10;
/* A Composite containing details of ReleaseIds. If available, a GRid has to be used. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ern_ReleaseId release_id = 11;
/* A Reference for a label of the Release (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	repeated ern_ReleaseLabelReferenceWithParty release_label_reference = 12;
/* The Identifier (specific to the Message) of the Release. Used to link the Release to one or more Deal(s). This is a LocalReleaseAnchor starting with the letter R. */
	optional string release_reference = 13;
/* A ReleaseResourceReference for the Release (specific to this Message). The LocalAnchorReference in this Composite is a xs:string starting with the letter A. */
	optional string release_resource_reference = 14;
/* A Reference for a set of visibility dates (specific to this Message) that applies to this Release. This defines when the Release can be shown to Consumers, not when a Consumer can get access to the Release. This is a LocalVisibilityAnchorReference starting with the letter V. */
	optional string release_visibility_reference = 15;
/* A Composite containing details of a Synopsis of the Release. */
	repeated ern_SynopsisWithTerritory synopsis = 16;
/* A URL of a sub-site or channel in the DSP’s system, where the Release should be made available to Consumers.  */
	optional string target_u_r_l = 17;
}

/* A Composite containing details of a Date specifying when a TrackRelease can be shown to Consumers. */
message ern_TrackReleaseVisibility {
/* A DateTime on which an audio or video clip is made first available for display (it overrides the generic ReleaseDisplayStartDate if supplied). If no ClipPreviewStartDateTime is provided, the StartDate for the Deal is used instead. The ClipPreviewStartDateTime shall not be later than the StartDate of the Deal allowing the general availability of the referenced Release. This is a string in ISO 8601 format: YYYY-MM-DDThh:mm:ss. */
	optional uint64 clip_preview_start_date_time = 1;
/* A DateTime on which the Track list is made first available for display (it overrides the generic ReleaseDisplayStartDate if supplied). If no TrackListingPreviewStartDateTime is provided, the StartDate for the Deal is used instead. The TrackListingPreviewStartDateTime shall not be later than the StartDate of the Deal allowing the general availability of the referenced Release. This element is not applicable on Track Releases. This is a string in ISO 8601 format: YYYY-MM-DDThh:mm:ss. */
	optional uint64 track_listing_preview_start_date_time = 2;
/* The Identifier (specific to the Message) of the visibility date. This is a LocalVisibilityAnchor starting with the letter V. */
	optional string visibility_reference = 3;
}

/* A Composite containing details of a UseType. */
message ern_UseType {
/* The Namespace of the UseType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the UseType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_UseType_ERN ext_value = 3;
}

/* A Composite containing details of a UserInterfaceType. */
message ern_UserInterfaceType {
/* The Namespace of the UserInterfaceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the UserInterfaceType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_UserInterfaceType_ERN ext_value = 3;
}

/* A Composite containing details about a ValidityPeriod of Time. Periods are typically describedby at least a StartDate or EndDate where the StartDate and EndDate are included in the Period. Thus a one-day period can be described by using the same date in the StartDate and EndDate. */
message ern_ValidityPeriod {
/* A Composite containing details of the Date and Place of an Event that marks the end of the Period (in ISO 8601 format: YYYY-MM-DD). The EndDate must not be earlier than the StartDate if both are provided. */
	optional ern_EventDate end_date = 1;
/* A Composite containing details of the Date and Place of an Event that marks the beginning of the Period (in ISO 8601 format: YYYY-MM-DD). The StartDate must be no later than the EndDate if both are provided. */
	optional ern_EventDate start_date = 2;
}

/* A Composite containing details of a venue. */
message ern_Venue {
/* An UN/Locode of the venue. */
	optional string location_code = 1;
/* A Territory of the VenueAddress. The use of ISO TerritoryCodes is strongly encouraged; TIS TerritoryCodes should only be used if both MessageSender and MessageRecipient are familiar with this standard. */
	optional ern_AllTerritoryCode territory_code = 2;
/* The Address of the venue. The level of description may be more or less granular, possibly including only the name of the city. */
	optional string venue_address = 3;
/* The Name of the venue. */
	optional string venue_name = 4;
/* A specific studio of the venue where a Session took place. */
	optional string venue_room = 5;
}

/* A Composite containing details of a VersionType. */
message ern_VersionType {
/* The Namespace of the VersionType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the VersionType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_VersionType ext_value = 3;
}

/* A Composite containing details of a Video. */
message ern_Video {
/* A Composite containing details of an AdditionalTitle of the Video. If multiple instances with an ApplicableTerritoryCode are provided, then the first one provides the default that is then superseded by subsequent instances. */
	repeated ern_AdditionalTitle additional_title = 1;
/* A Composite containing details of a rating for the Video. */
	repeated ern_AvRating av_rating = 2;
/* A Composite containing details of the CLine for the Video. */
	repeated ern_CLineWithDefault c_line = 3;
/* A Composite containing details of a Character in the Video. A Character may be described through Name, Identifier and Roles. */
	repeated ern_Character character = 4;
/* A Type of the Video indicating whether it is a Medley or a Potpourri. */
	optional avs_CompositeMusicalWorkType composite_musical_work_type = 5;
/* The Flag indicating whether the Video contains content that is hidden in some way from the Consumer (=true) or not (=false). */
	optional bool contains_hidden_content = 6;
/* A Composite containing details of a Contributor to the Video. */
	repeated ern_Contributor contributor = 7;
/* A Composite containing an Annotation Annotation which acknowledges record companies and/or other Parties giving permission for guests Artists or others featured on the Video. */
	repeated ern_CourtesyLineWithDefault courtesy_line = 8;
/* A Composite containing details of the Date and Place of the Event in which the Video was created. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags creation_date = 9;
/* A deity name relating to the Video. */
	repeated string deity = 10;
/* A Composite containing details of the DisplayArtist for the Video. The DisplayArtist may be described through Name, Identifier and Roles.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtist display_artist = 11;
/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Resource to a Consumer.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Display+Artist(s)+and+Display+Artist+Name(s)Further Reading: https://kb.ddex.net/display/HBK/DisplayArtistNames+for+Releases+and+ResourcesFurther Reading: https://kb.ddex.net/display/HBK/DisplayArtist%3F+DisplayArtistName%3F+Contributor%3F+IndirectContributor%3F+What+is+this+all+about%3F */
	repeated ern_DisplayArtistNameWithDefault display_artist_name = 12;
/* A Role and instrumentation for which a Party is credited. */
	repeated ern_DisplayCredits display_credits = 13;
/* A Composite containing details of a Title of the Video as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. */
	repeated ern_DisplayTitle display_title = 14;
/* A Composite containing details of a Title of the Video as the MessageSender suggests it should be shown to the Consumer. In many instances this is the only Title to be communicated for any given Creation. Multiple instances can be supplied with an ApplicableTerritoryCode and/or LanguageAndScriptCode. One such element is required for each DisplayTitle element and its content typically provides the same information as the concatenation of the DisplayTitle's sub-elements.Further Reading: https://kb.ddex.net/display/HBK/How+long+can+artist+names+and+titles+be%3F */
	repeated ern_DisplayTitleText display_title_text = 15;
/* The Duration of the Video (using the ISO 8601 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5 seconds would be PT1M30.5S). */
	optional string duration = 16;
/* A Composite containing details of the Date and Place of the Event in which the Video was first published, whether for physical or electronic/online distribution. This is a string with the syntax YYYY[-MM[-DD]]. */
	repeated ern_FulfillmentDateWithTerritory first_publication_date = 17;
/* A Flag indicating whether the Video is a Cover (=true) or not (=false). This is not legal information, but meant to help consumers to differentiate originals from covers. */
	optional bool is_cover = 18;
/* The Flag indicating whether the Video is instrumental (=true) or not (=false). */
	optional bool is_instrumental = 19;
/* The Flag indicating whether the Video is remastered (=true) or not (=false). */
	optional bool is_remastered = 20;
/* The Flag indicating whether the Video is provided in a addition to the Resources that form part of the Release (=true) or not (=false). If the flag is set to false (or absent) the Video is part of at least one Release in the message. This is represented in an XML schema as an XML Attribute. */
	optional bool is_supplemental = 21;
/* The Language and script for the Elements of the Video as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 22;
/* The Language of dubbing used in the Video as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. */
	repeated string language_of_dubbing = 23;
/* The original Language of the Performance as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. */
	repeated string language_of_performance = 24;
/* A Composite containing details of the Date and Place of the Event in which the Video was originally mastered (in either analogue or digital form). This is a string with the syntax YYYY[-MM[-DD]]. */
	optional ern_EventDateWithoutFlags mastered_date = 25;
/* A Composite containing details of the PLine for the Video. */
	repeated ern_PLineWithDefault p_line = 26;
/* A Composite containing details of the classification of the Video according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ern_ParentalWarningTypeWithTerritory parental_warning_type = 27;
/* A Description of the melodic mode of a MusicalWork in the Video. */
	repeated string raga = 28;
/* A Composite containing the textual Description of the reason for the Identifier being used as a proxy. */
	optional ern_Reason reason_for_cue_sheet_absence = 29;
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to current Video. */
	repeated ern_RelatedRelease related_release = 30;
/* A Composite containing details of a ResourceRelatedResourceReference referring to a Resource that is related to the current Video. */
	repeated ern_RelatedResource related_resource = 31;
/* A Composite containing details of the Date and Place of the Event in which the Video was re-mastered (usually digitally). This is a string with the syntax YYYY[-MM[-DD]]. */
	repeated ern_EventDateWithoutFlags remastered_date = 32;
/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current Video. */
	optional ern_ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 33;
/* A Composite containing details of an Identifier of the Video. */
	repeated ern_VideoId resource_id = 34;
/* The Identifier (specific to the Message) of the Video within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 35;
/* A Composite containing details of RightsController of Rights in the Video. */
	repeated ern_ResourceRightsController resource_rights_controller = 36;
/* The Language of SubTitles in the Video as defined in IETF RfC 5646. Language and Script are provided as lang[-script][-region][-variant]. */
	repeated string sub_title_language = 37;
/* A Description of the rhythmic pattern of a MusicalWork in the Video. */
	repeated string tala = 38;
/* A Composite containing technical details of the Video.Further Reading: https://kb.ddex.net/display/HBK/Communicating+Binaries */
	repeated ern_TechnicalVideoDetails technical_details = 39;
/* A Composite containing details of the Type of the Video. */
	optional ern_VideoType type = 40;
/* A Composite containing details of a Type of Version of the Video. */
	repeated ern_VersionType version_type = 41;
/* A Reference for a Chapter (specific to this Message). This is a LocalCollectionAnchorReference starting with the letter X. */
	repeated string video_chapter_reference = 42;
/* A Reference for a CueSheet (specific to this Message). This is a LocalCueSheetAnchorReference starting with the letter Q. */
	repeated string video_cue_sheet_reference = 43;
/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the Video. */
	repeated ern_MusicalWorkId work_id = 44;
/* A Composite containing details of RightsController of Rights in the Work. */
	repeated ern_WorkRightsController work_rights_controller = 45;
}

/* A Composite containing details of a VideoCodecType. */
message ern_VideoCodecType {
/* The Namespace of the VideoCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the VideoCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
/* The Identifier of the Version of the VideoCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional avs_VideoCodecType ext_value = 4;
}

/* A Composite containing details of a VideoDefinitionType. */
message ern_VideoDefinitionType {
/* The Namespace of the VideoDefinitionType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the VideoDefinitionType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_VideoDefinitionType ext_value = 3;
}

/* A Composite containing details of Identifiers of a Video. */
message ern_VideoId {
/* A Composite containing details of the CatalogNumber of the Video. */
	optional ern_CatalogNumber catalog_number = 1;
/* An Identifier of the Video assigned by the Entertainment Identifier Registry Association (EIDR). */
	repeated string e_i_d_r = 2;
/* The ISAN (International Standard Audiovisual Number as defined in ISO 15706) for the Video. An ISAN comprises four blocks of four hexadecimal charaters followed by a check character. DDEX will enforce the syntax [A-F0-9]{12} using XML Schema in the future. */
	optional string i_s_a_n = 3;
/* The ISRC (International Standard Recording Code as defined in ISO 3901) for the Video. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits. DDEX will enforce the syntax [a-zA-Z]{2}[a-zA-Z0-9]{3}[0-9]{7} using XML Schema in the future. */
	optional string i_s_r_c = 4;
/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=true) or not (=false). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 5;
/* A Composite containing details of a ProprietaryIdentifier of the Video (usually one per society involved in the messaging). */
	repeated ern_ProprietaryId proprietary_id = 6;
/* The V-ISAN (Version Identifier of a International Standard Audiovisual Number as defined in ISO 15706-2) for the Video. A V-ISAN comprises four blocks of four hexadecimal charaters followed by a check character, followed by two further blocks of four hexadecimal characters, followed by a further check character. DDEX will enforce the syntax [A-F0-9]{24} using XML Schema in the future. */
	optional string v_i_s_a_n = 7;
}

/* A Composite containing details of a VideoType. */
message ern_VideoType {
/* The Namespace of the VideoType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
/* A UserDefined value of the VideoType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional avs_VideoType ext_value = 3;
}

/* A Composite containing details of a RightsController for a Work. RightsControllers are typically described by Name, Identifier and Role(s). */
message ern_WorkRightsController {
/* The Date that marks the end of the title (in ISO 8601 format: YYYY-MM-DD). */
	optional ern_ddex_IsoDate end_date = 1;
/* The share of the licensed Rights owned by the RightsController. RightShare information is given as a xs:decimal value with up to 6 digits (e.g. '12.5' represents 12.5%). If no information is given, 100% is assumed.Further Reading: https://kb.ddex.net/display/HBK/Communication+of+Percentages+in+DDEX */
	optional double right_share_percentage = 2;
/* The Flag indicating whether the RightSharePercentage is unknown (=true) or not (=false). */
	optional bool right_share_unknown = 3;
/* A role that describes the Party involved in the administration of Rights. */
	repeated avs_RightsControllerRole rights_control_type = 4;
/* A Reference for a Party (specific to this Message). This is a LocalPartyAnchorReference starting with the letter P. */
	optional string rights_controller_party_reference = 5;
/* A type of the RightsController. */
	optional avs_RightsControllerType rights_controller_type = 6;
/* The Date that marks the beginning of the title (in ISO 8601 format: YYYY-MM-DD). */
	optional ern_ddex_IsoDate start_date = 7;
/* The country of registration. */
	repeated ern_AllTerritoryCode territory = 8;
}

message ern_ddex_IsoDate {
	optional string auto_value = 1;
}

message ern_ddex_LocalPartyAnchorReference {
	optional string auto_value = 1;
}

message ern_ddex_LocalResourceAnchorReference {
	optional string auto_value = 1;
}

message avs_AdditionalRightsClaimStatus {
	optional string enum_value = 1;
}

message avs_AdditionalTitleType {
	optional string enum_value = 1;
}

message avs_AdditionalUseType {
	optional string enum_value = 1;
}

message avs_AdditionalVideoType {
	optional string enum_value = 1;
}

message avs_AdministratingRecordCompanyRole {
	optional string enum_value = 1;
}

message avs_AffiliationType {
	optional string enum_value = 1;
}

message avs_AllTerritoryCode {
	optional string enum_value = 1;
}

message avs_ArtistRole {
	optional string enum_value = 1;
}

message avs_ArtistType {
	optional string enum_value = 1;
}

message avs_AspectRatioType {
	optional string enum_value = 1;
}

message avs_AsserterType {
	optional string enum_value = 1;
}

message avs_AssertionStatus {
	optional string enum_value = 1;
}

message avs_AudioCodecType {
	optional string enum_value = 1;
}

message avs_BasisForRevenueAllocation {
	optional string enum_value = 1;
}

message avs_BinaryDataType {
	optional string enum_value = 1;
}

message avs_BusinessMusicalWorkContributorRole {
	optional string enum_value = 1;
}

message avs_CarrierType {
	optional string enum_value = 1;
}

message avs_CatalogTransferType {
	optional string enum_value = 1;
}

message avs_CdProtectionType {
	optional string enum_value = 1;
}

message avs_CharacterType {
	optional string enum_value = 1;
}

message avs_ClaimStatus {
	optional string enum_value = 1;
}

message avs_ClassifiedGenre {
	optional string enum_value = 1;
}

message avs_CodingType {
	optional string enum_value = 1;
}

message avs_CollectionMandateType {
	optional string enum_value = 1;
}

message avs_CommentaryNoteType {
	optional string enum_value = 1;
}

message avs_CommercialModelType {
	optional string enum_value = 1;
}

message avs_CommercialModelType_ERN {
	optional string enum_value = 1;
}

message avs_CommercialModelType_MWNL {
	optional string enum_value = 1;
}

message avs_CompilationType {
	optional string enum_value = 1;
}

message avs_CompositeMusicalWorkType {
	optional string enum_value = 1;
}

message avs_ContainerFormat {
	optional string enum_value = 1;
}

message avs_ContributorClaimStatus {
	optional string enum_value = 1;
}

message avs_ContributorRole {
	optional string enum_value = 1;
}

message avs_CreativeMusicalWorkContributorRole {
	optional string enum_value = 1;
}

message avs_CueOrigin {
	optional string enum_value = 1;
}

message avs_CueSheetType {
	optional string enum_value = 1;
}

message avs_CueUseType {
	optional string enum_value = 1;
}

message avs_CurrencyCode {
	optional string enum_value = 1;
}

message avs_CurrentTerritoryCode {
	optional string enum_value = 1;
}

message avs_DanceStyle {
	optional string enum_value = 1;
}

message avs_DataCarrierFormat {
	optional string enum_value = 1;
}

message avs_DataCarrierType {
	optional string enum_value = 1;
}

message avs_DdexTerritoryCode {
	optional string enum_value = 1;
}

message avs_DeprecatedCurrencyCode {
	optional string enum_value = 1;
}

message avs_DeprecatedIsoTerritoryCode {
	optional string enum_value = 1;
}

message avs_DeprecatedReleaseType {
	optional string enum_value = 1;
}

message avs_DigitizationMode {
	optional string enum_value = 1;
}

message avs_DisplayArtistRole {
	optional string enum_value = 1;
}

message avs_DistributionChannelType {
	optional string enum_value = 1;
}

message avs_DocumentType_LoD {
	optional string enum_value = 1;
}

message avs_DocumentType_MWL {
	optional string enum_value = 1;
}

message avs_DpidStatus {
	optional string enum_value = 1;
}

message avs_DrmEnforcementType {
	optional string enum_value = 1;
}

message avs_ElementConfiguration {
	optional string enum_value = 1;
}

message avs_ElementDesignation {
	optional string enum_value = 1;
}

message avs_EncodingType {
	optional string enum_value = 1;
}

message avs_EquipmentType {
	optional string enum_value = 1;
}

message avs_ErnMessageType {
	optional string enum_value = 1;
}

message avs_ErnTestMessageType {
	optional string enum_value = 1;
}

message avs_ErncFileStatus {
	optional string enum_value = 1;
}

message avs_ErncProposedActionType {
	optional string enum_value = 1;
}

message avs_ErrorSeverity {
	optional string enum_value = 1;
}

message avs_ErrorType {
	optional string enum_value = 1;
}

message avs_ExceptionReason {
	optional string enum_value = 1;
}

message avs_ExpressionType {
	optional string enum_value = 1;
}

message avs_ExternallyLinkedResourceType {
	optional string enum_value = 1;
}

message avs_FileType {
	optional string enum_value = 1;
}

message avs_FingerprintAlgorithmType {
	optional string enum_value = 1;
}

message avs_Form {
	optional string enum_value = 1;
}

message avs_FrameRate {
	optional string enum_value = 1;
}

message avs_Gender {
	optional string enum_value = 1;
}

message avs_GoverningAgreementType {
	optional string enum_value = 1;
}

message avs_HashSumAlgorithmType {
	optional string enum_value = 1;
}

message avs_ImageCodecType {
	optional string enum_value = 1;
}

message avs_ImageType {
	optional string enum_value = 1;
}

message avs_InstrumentType {
	optional string enum_value = 1;
}

message avs_Iso639Part12LanguageCode {
	optional string enum_value = 1;
}

message avs_Iso639Part3LanguageCode {
	optional string enum_value = 1;
}

message avs_IsoCurrencyCode {
	optional string enum_value = 1;
}

message avs_IsoLanguageCode {
	optional string enum_value = 1;
}

message avs_IsoTerritoryCode {
	optional string enum_value = 1;
}

message avs_LabelNameType {
	optional string enum_value = 1;
}

message avs_LabelType {
	optional string enum_value = 1;
}

message avs_LanguageLocalizationType {
	optional string enum_value = 1;
}

message avs_LicenseRecord {
	optional string enum_value = 1;
}

message avs_LicenseRefusalReason {
	optional string enum_value = 1;
}

message avs_LicenseRejectionReason {
	optional string enum_value = 1;
}

message avs_LinkAcknowledgementStatus {
	optional string enum_value = 1;
}

message avs_LinkDescription {
	optional string enum_value = 1;
}

message avs_LyricsType {
	optional string enum_value = 1;
}

message avs_MeasurementType {
	optional string enum_value = 1;
}

message avs_MembershipType {
	optional string enum_value = 1;
}

message avs_MessageActionType {
	optional string enum_value = 1;
}

message avs_MessageControlType {
	optional string enum_value = 1;
}

message avs_MessagePurpose {
	optional string enum_value = 1;
}

message avs_MessageType {
	optional string enum_value = 1;
}

message avs_MetadataSourceType {
	optional string enum_value = 1;
}

message avs_MissingLinkReason {
	optional string enum_value = 1;
}

message avs_Mode {
	optional string enum_value = 1;
}

message avs_Mood {
	optional string enum_value = 1;
}

message avs_MoodOrThemeType {
	optional string enum_value = 1;
}

message avs_MusicalWorkContributorRole {
	optional string enum_value = 1;
}

message avs_MusicalWorkType {
	optional string enum_value = 1;
}

message avs_MwnlFileStatus {
	optional string enum_value = 1;
}

message avs_MwnlProposedActionType {
	optional string enum_value = 1;
}

message avs_NewStudioRole {
	optional string enum_value = 1;
}

message avs_OperatingSystemType {
	optional string enum_value = 1;
}

message avs_PLineType {
	optional string enum_value = 1;
}

message avs_ParentalWarningType {
	optional string enum_value = 1;
}

message avs_PartyRelationshipType {
	optional string enum_value = 1;
}

message avs_PercentageType {
	optional string enum_value = 1;
}

message avs_Period {
	optional string enum_value = 1;
}

message avs_PhysicalCarrierType {
	optional string enum_value = 1;
}

message avs_PriceInformationType {
	optional string enum_value = 1;
}

message avs_ProductType {
	optional string enum_value = 1;
}

message avs_ProfileId {
	optional string enum_value = 1;
}

message avs_Purpose {
	optional string enum_value = 1;
}

message avs_RatingAgency {
	optional string enum_value = 1;
}

message avs_RatingReason {
	optional string enum_value = 1;
}

message avs_RdrMessageType {
	optional string enum_value = 1;
}

message avs_RdrcFileStatus {
	optional string enum_value = 1;
}

message avs_RecipientRevenueType {
	optional string enum_value = 1;
}

message avs_RecordingMode {
	optional string enum_value = 1;
}

message avs_RecordingPartType {
	optional string enum_value = 1;
}

message avs_ReferenceCreation {
	optional string enum_value = 1;
}

message avs_ReferenceUnit {
	optional string enum_value = 1;
}

message avs_RegistrationStatus {
	optional string enum_value = 1;
}

message avs_RelatedResourceType {
	optional string enum_value = 1;
}

message avs_RelationalRelator {
	optional string enum_value = 1;
}

message avs_ReleaseProfileVariantVersionId {
	optional string enum_value = 1;
}

message avs_ReleaseProfileVersionId {
	optional string enum_value = 1;
}

message avs_ReleaseRelationshipType {
	optional string enum_value = 1;
}

message avs_ReleaseResourceType {
	optional string enum_value = 1;
}

message avs_ReleaseType {
	optional string enum_value = 1;
}

message avs_ReleaseType_ERN4 {
	optional string enum_value = 1;
}

message avs_ReleaseType_MCNOTIF {
	optional string enum_value = 1;
}

message avs_RequestMessagePurpose {
	optional string enum_value = 1;
}

message avs_RequestReason {
	optional string enum_value = 1;
}

message avs_ResourceContributorRole {
	optional string enum_value = 1;
}

message avs_ResourceGroupType {
	optional string enum_value = 1;
}

message avs_ResourceRelationshipType {
	optional string enum_value = 1;
}

message avs_ResourceType {
	optional string enum_value = 1;
}

message avs_ResourceType_MCNOTIF {
	optional string enum_value = 1;
}

message avs_ResourceType_RDRR {
	optional string enum_value = 1;
}

message avs_ResourceWorkRelationshipType {
	optional string enum_value = 1;
}

message avs_RevenueSourceType {
	optional string enum_value = 1;
}

message avs_RhythmStyle {
	optional string enum_value = 1;
}

message avs_RightShareType {
	optional string enum_value = 1;
}

message avs_RightsClaimPolicyType {
	optional string enum_value = 1;
}

message avs_RightsClaimStatus {
	optional string enum_value = 1;
}

message avs_RightsControlType {
	optional string enum_value = 1;
}

message avs_RightsControllerRole {
	optional string enum_value = 1;
}

message avs_RightsControllerType {
	optional string enum_value = 1;
}

message avs_RightsCoverage {
	optional string enum_value = 1;
}

message avs_RightsCoverage_MWNL {
	optional string enum_value = 1;
}

message avs_RightsStatementProfile {
	optional string enum_value = 1;
}

message avs_RootChordNote {
	optional string enum_value = 1;
}

message avs_RootChordQuality {
	optional string enum_value = 1;
}

message avs_RoyaltyRateCalculationType {
	optional string enum_value = 1;
}

message avs_RoyaltyRateType {
	optional string enum_value = 1;
}

message avs_SessionType {
	optional string enum_value = 1;
}

message avs_SheetMusicCodecType {
	optional string enum_value = 1;
}

message avs_SheetMusicType {
	optional string enum_value = 1;
}

message avs_SoftwareType {
	optional string enum_value = 1;
}

message avs_SoundRecordingType {
	optional string enum_value = 1;
}

message avs_Status {
	optional string enum_value = 1;
}

message avs_SubGenre {
	optional string enum_value = 1;
}

message avs_SubTitleType {
	optional string enum_value = 1;
}

message avs_SummaryType {
	optional string enum_value = 1;
}

message avs_SupplyChainStatus {
	optional string enum_value = 1;
}

message avs_Tempo {
	optional string enum_value = 1;
}

message avs_TerritoryCodeType {
	optional string enum_value = 1;
}

message avs_TerritoryCodeTypeIncludingDeprecatedCodes {
	optional string enum_value = 1;
}

message avs_TextCodecType {
	optional string enum_value = 1;
}

message avs_TextType {
	optional string enum_value = 1;
}

message avs_TextType_ATOM {
	optional string enum_value = 1;
}

message avs_Theme {
	optional string enum_value = 1;
}

message avs_ThemeType {
	optional string enum_value = 1;
}

message avs_TimecodeType {
	optional string enum_value = 1;
}

message avs_TisTerritoryCode {
	optional string enum_value = 1;
}

message avs_TitleType {
	optional string enum_value = 1;
}

message avs_TransferCategory {
	optional string enum_value = 1;
}

message avs_TransferType {
	optional string enum_value = 1;
}

message avs_UnitOfBitRate {
	optional string enum_value = 1;
}

message avs_UnitOfConditionValue {
	optional string enum_value = 1;
}

message avs_UnitOfCuePoints {
	optional string enum_value = 1;
}

message avs_UnitOfDuration {
	optional string enum_value = 1;
}

message avs_UnitOfExtent {
	optional string enum_value = 1;
}

message avs_UnitOfFrameRate {
	optional string enum_value = 1;
}

message avs_UnitOfFrequency {
	optional string enum_value = 1;
}

message avs_UnitTypeForRevenueAllocation {
	optional string enum_value = 1;
}

message avs_UseType {
	optional string enum_value = 1;
}

message avs_UseType_ERN {
	optional string enum_value = 1;
}

message avs_UseType_MWNL {
	optional string enum_value = 1;
}

message avs_UseType_RDR {
	optional string enum_value = 1;
}

message avs_UserInterfaceType {
	optional string enum_value = 1;
}

message avs_UserInterfaceType_ERN {
	optional string enum_value = 1;
}

message avs_VersionType {
	optional string enum_value = 1;
}

message avs_VideoCodecType {
	optional string enum_value = 1;
}

message avs_VideoDefinitionType {
	optional string enum_value = 1;
}

message avs_VideoType {
	optional string enum_value = 1;
}

message avs_VideoType_DSRF {
	optional string enum_value = 1;
}

message avs_VisualPerceptionType {
	optional string enum_value = 1;
}

message avs_VocalRegister {
	optional string enum_value = 1;
}

message avs_VocalType {
	optional string enum_value = 1;
}

message avs_WorkRelationshipType {
	optional string enum_value = 1;
}

