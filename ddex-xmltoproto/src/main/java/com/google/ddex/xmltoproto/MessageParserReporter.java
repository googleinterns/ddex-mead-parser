package com.google.ddex.xmltoproto;

import com.google.common.flogger.FluentLogger;
import java.util.ArrayList;
import java.util.List;

/**
 * The MessageParseReporter stores reports generated by the {@link
 * com.google.ddex.xmltoproto.MessageParser} (logs/warnings). The reporter should be instantiated
 * and passed in as a parameter to the parse function call.
 */
public interface MessageParserReporter {
  /**
   * Handle warnings generated by the {@link MessageParser}.
   *
   * @param warning Warning being passed into the reporter, such as encountering an unexpected
   *     field.
   */
  void addWarning(String warning);

  /**
   * Handle logs generated by the {@link MessageParser}.
   *
   * @param log Logs being passed into the reporter, such as logging a field being processed.
   */
  void addLog(String log);

  /**
   * Default implementation of the {@link MessageParserReporter} interface. Simply records and logs
   * all reports.
   */
  public static class DefaultMessageParserReporter implements MessageParserReporter {
    private static final FluentLogger logger = FluentLogger.forEnclosingClass();

    List<String> warnings;
    List<String> logs;

    /** Instantiates a new DefaultMessageParserReporter. */
    public DefaultMessageParserReporter() {
      warnings = new ArrayList<>();
      logs = new ArrayList<>();
    }

    /**
     * Record a warning.
     *
     * @param warning The warning
     */
    public void addWarning(String warning) {
      logger.atWarning().log(warning);
      warnings.add(warning);
    }

    /**
     * Record a log.
     *
     * @param log The log
     */
    public void addLog(String log) {
      logger.atFine().log(log);
      logs.add(log);
    }
  }
}
