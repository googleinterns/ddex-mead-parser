/* Generated schema for ern, version ern383 */
syntax = "proto2";
package ern383.ern;

import "avs.proto";

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an AdministratingRecordCompany. */
message AdministratingRecordCompany {
	/* First defined in: ern36 */
	/* The Namespace of the Role if it belongs to a proprietary scheme. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 3;
	/* First defined in: ern36 */
	/* The role played by the Party responsible for administering Rights in a Resource or a Release. */
	optional ern383.avs.AdministratingRecordCompanyRole role = 4;
	/* First defined in: ern36 */
	/* A UserDefined value of the Role. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 5;
}

/* Defined in: ern371 -> ern381 -> ern383 */
/* A Composite containing details of a
            TerritoryCode. */
message AllTerritoryCode {
	/* First defined in: ern371 */
	/* A standard used for the TerritoryCode.
                     This is represented in an XML schema as an XML Attribute. If this Attribute is
                     not provided, it is assumed that the code is a TerritoryCode in accordance with
                     ISO 3166-1 Alpha 2 standard (or Worldwide). */
	optional ern383.avs.TerritoryCodeTypeIncludingDeprecatedCodes identifier_type = 1;
	optional ern383.avs.AllTerritoryCode ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an Artist. An Artist may be described through Name, Identifier and Roles. */
message Artist {
	/* First defined in: ern36 */
	/* A Composite containing details of a role played by the Artist in relation to other Artists. */
	repeated ArtistRole artist_role = 1;
	/* First defined in: ern383 -> Updated in ern383 */
	/* The nationality of the
                  Artist. */
	repeated AllTerritoryCode nationality = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 4;
	/* First defined in: ern36 */
	/* The number indicating the order of the Artist in a group of Artists. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of the kinds of usage for which rights have been delegated by an Artist. */
message ArtistDelegatedUsageRights {
	/* First defined in: ern36 */
	/* A Type of membership of the Artist. */
	optional ern383.avs.MembershipType membership_type = 1;
	/* First defined in: ern36 */
	/* A Composite containing details about a Period of Time for which the delegation of usage rights applies. Periods are typically described by at least a StartDate or EndDate. */
	optional Period period_of_rights_delegation = 2;
	/* First defined in: ern383 -> Updated in ern383 */
	/* A Territory for which the delegation of
                  usage rights applies. */
	repeated AllTerritoryCode territory_of_rights_delegation = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of the use for which rights are delegated. */
	repeated UseType use_type = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a physical interface by which a Consumer uses a Service or Release. */
	repeated UserInterfaceType user_interface_type = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an ArtistRole. Note: This can be used in a DdexMessage in relation to any Performance or Fixation either of which may form the whole or part of the Resource itself. Example: if an 'AssociatedPerformer' is shown as a Contributor to a MusicalWork it refers to a Performer of a Resource (e.g. a SoundRecording) expressing the MusicalWork. */
message ArtistRole {
	/* First defined in: ern36 */
	/* The Namespace of the ArtistRole. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ArtistRole. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ArtistRole ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing an AspectRatio and an AspectRatioType. */
message AspectRatio {
	/* First defined in: ern36 */
	/* The Type of the AspectRatio. This is represented in an XML schema as an XML Attribute. If this Attribute is not provided, it is assumed that the AspectRatio is a PixelAspectRatio. */
	optional ern383.avs.UnitOfFrameRate aspect_ratio_type = 1;
	optional double ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an AudioCodecType. */
message AudioCodecType {
	/* First defined in: ern36 */
	/* The Namespace of the AudioCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the AudioCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the AudioCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional ern383.avs.AudioCodecType ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a rating for an audio-visual Creation. */
message AvRating {
	/* First defined in: ern36 */
	/* A Composite containing details of an Organization that issues the AvRating. */
	optional RatingAgency rating_agency = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the RatingText. */
	repeated Description rating_scheme_description = 2;
	/* First defined in: ern36 */
	/* The text of the AvRating. */
	optional string rating_text = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a BitRate and a UnitOfMeasure. */
message BitRate {
	/* First defined in: ern36 */
	/* The UnitOfMeasure of the BitRate. This is represented in an XML schema as an XML Attribute.  */
	optional ern383.avs.UnitOfBitRate unit_of_measure = 1;
	optional double ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CLine. */
message CLine {
	/* First defined in: ern36 */
	/* The Name of the company releasing the Creation. This may be an owner or a licensee of the Creation. */
	optional string c_line_company = 1;
	/* First defined in: ern36 */
	/* The text of the CLine. */
	optional string c_line_text = 2;
	/* First defined in: ern36 */
	/* The Language and script of the CLineText as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	/* First defined in: ern36 */
	/* The Year of the CLine. */
	optional uint32 year = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CarrierType. */
message CarrierType {
	/* First defined in: ern36 */
	/* The Namespace of the CarrierType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CarrierType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.CarrierType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Release which is an item of a catalog. */
message CatalogItem {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the Release. */
	repeated CLine c_line = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a Contributor to the catalog, i.e. to at least one of the included Releases. */
	repeated Name contributor_name = 2;
	/* First defined in: ern36 */
	/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Release to a Consumer. */
	optional Name display_artist_name = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a DisplayTitle of the Release. */
	optional ReferenceTitle display_title = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the Release belongs. */
	repeated Genre genre = 5;
	/* First defined in: ern36 */
	/* A Composite containing the Name of the Label for the Release. */
	repeated LabelName label_name = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of the PLine for the Release. */
	repeated PLine p_line = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Release was or will be first made available for Usage, whether for physical or electronic/online distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate release_date = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds. If available, a GRid has to be used. If the Release contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	repeated ReleaseId release_id = 9;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory for the Release. The use of
                  ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged; TIS
                  TerritoryCodes should only be used if both MessageSender and MessageRecipient are
                  familiar with this standard.  */
	repeated AllTerritoryCode territory_code = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Release. */
	optional Title title = 11;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
message CatalogListMessage {
	/* First defined in: ern36 */
	/* The Identifier of the Version of the business profile used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional string business_profile_version_id = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a Release which is an item of the catalog. */
	repeated CatalogItem catalog_item = 2;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the CatalogListMessage as defined in IETF RfC 4646. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	/* First defined in: ern36 */
	/* The MessageHeader for the CatalogListMessage. */
	optional MessageHeader message_header = 4;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the XML schema used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional string message_schema_version_id = 5;
	/* First defined in: ern36 */
	/* The DateTime at which the catalog will become available (the only allowed format is ISO 8601:2004: YYYY-MM-DDThh:mm:ssTZD). */
	optional string publication_date = 6;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the release profile used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional string release_profile_version_id = 7;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CatalogNumber. */
message CatalogNumber {
	/* First defined in: ern36 */
	/* The Namespace of the CatalogNumber. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of CatalogReleaseReferences. */
message CatalogReleaseReferenceList {
	/* First defined in: ern36 */
	/* A Reference for a Release (specific to this Message) that is part of the catalog. This is a LocalReleaseAnchorReference starting with the letter R. */
	repeated string catalog_release_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CatalogTransfer. */
message CatalogTransfer {
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Releases contained in the catalog that is or was transferred. */
	optional CatalogReleaseReferenceList catalog_release_reference_list = 1;
	/* First defined in: ern36 */
	/* A Flag indicating whether the CatalogTransfer has been made (=True) or still needs to be made (=False). */
	optional bool catalog_transfer_completed = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the catalog is or was transferred. */
	optional EventDate effective_transfer_date = 3;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the
                     CatalogTransfer does not apply. Either this Element or Territory must be
                     present, but not both. The use of ISO TerritoryCodes (or the term 'Worldwide”)
                     is strongly encouraged; TIS TerritoryCodes should only be used if both
                     MessageSender and MessageRecipient are familiar with this standard.
                   */
	repeated AllTerritoryCode excluded_territory_code = 4;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the
                     CatalogTransfer applies. Either this Element or ExcludedTerritory must be
                     present, but not both. The use of ISO TerritoryCodes (or the term 'Worldwide”)
                     is strongly encouraged; TIS TerritoryCodes should only be used if both
                     MessageSender and MessageRecipient are familiar with this standard.
                   */
	repeated AllTerritoryCode territory_code = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of the old RightsController. */
	optional PartyDescriptor transferring_from = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of the new RightsController. */
	optional PartyDescriptor transferring_to = 7;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Character. A Character may be described through Name, Identifier and Roles. */
message Character {
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 2;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of the
                  Name, Identifier and role(s) of a Contributor. */
	optional DetailedResourceContributor resource_contributor = 3;
	/* First defined in: ern36 */
	/* The number indicating the order of the Character in a group of Characters. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Collection. Collections referenced from Video Resources are of CollectionType VideoChapter . Collections referenced from a Release composite are of CollectionType Series, Season or Episode. */
message Collection {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the Collection. */
	repeated CLine c_line = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a Character in the Collection. A Character may be described through Name, Identifier and Roles. */
	repeated Character character = 2;
	/* First defined in: ern36 */
	/* A Composite containing a list of CollectionCollectionReferences for a Collection (specific to this Message). */
	optional CollectionCollectionReferenceList collection_collection_reference_list = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of Descriptors and other attributes of the Collection which may vary according to Territory of release. */
	repeated CollectionDetailsByTerritory collection_details_by_territory = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of an Identifier of the Collection. */
	repeated CollectionId collection_id = 5;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the Collection within the Release which contains it. This is a LocalCollectionAnchor starting with the letter X. */
	optional string collection_reference = 6;
	/* First defined in: ern36 */
	/* A Composite containing a list of CollectionResourceReferences for a Resource (specific to this Message). */
	optional CollectionResourceReferenceList collection_resource_reference_list = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the Collection. */
	repeated CollectionType collection_type = 8;
	/* First defined in: ern36 */
	/* A Composite containing a list of CollectionWorkReferences for a Work (specific to this Message). */
	optional CollectionWorkReferenceList collection_work_reference_list = 9;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details a
                  Contributor to the Collection. */
	repeated DetailedResourceContributor contributor = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Collection was created. */
	optional EventDate creation_date = 11;
	/* First defined in: ern36 */
	/* The sum of the Durations of all Resources contained in the Collection (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 12;
	/* First defined in: ern36 */
	/* The Duration of the musical content (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration_of_musical_content = 13;
	/* First defined in: ern371 */
	/* A Reference for a Release (specific to
                  this Message) that is represented by the Collection. This is a
                  LocalReleaseAnchorReference starting with the letter R. */
	optional string equivalent_release_reference = 14;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Collection is complete (=True) or not (=False). Only one of the Elements IsComplete here and in the CollectionDetailsByTerritory is valid for a given Collection. */
	optional bool is_complete = 15;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Collection as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 16;
	/* First defined in: ern36 */
	/* The orignal Language of the Collection (represented by an ISO 639-2 LanguageCode). */
	optional ern383.avs.IsoLanguageCode original_language = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Collection was or will be first made available for Usage, whether for physical or electronic/online distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate original_release_date = 18;
	/* First defined in: ern36 */
	/* A Composite containing details of the PLine for the Collection. */
	repeated PLine p_line = 19;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the Collection was or will be first made available
                  for Usage in its current form, whether for physical or electronic/online
                  distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate release_date = 20;
	/* First defined in: ern36 */
	/* A Reference for an Image (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	optional string representative_image_reference = 21;
	/* First defined in: ern371 */
	/* The number indicating the order of the
                  Collection within all Collections at this level. The default value is 1, and the
                  value must be incremented by 1 for each Collection occurring at a particular
                  level. */
	optional int32 sequence_number = 22;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Collection. */
	repeated Title title = 23;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a CollectionCollectionReference. */
message CollectionCollectionReference {
	/* First defined in: ern36 */
	/* A Reference for a Collection (specific to this Message). This is a LocalCollectionAnchorReference starting with the letter X. The referenced Collection has to be of CollectionType Series, Season or Episode. */
	optional string collection_collection_reference = 1;
	/* First defined in: ern36 */
	/* The Duration of the use of the Creation that is referenced in the CueCreationReference (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 2;
	/* First defined in: ern36 */
	/* The end time of the Creation, measured from the start of the Resource from which the CueSheet is referenced (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string end_time = 3;
	/* First defined in: ern36 */
	/* A Date on which the Collection or Resource was included in the parent Collection. */
	optional string inclusion_date = 4;
	/* First defined in: ern36 */
	/* The number indicating the order of the Collection in a group of Collections within a Medley, SoundRecording or other Collection. */
	optional int32 sequence_number = 5;
	/* First defined in: ern36 */
	/* The start time of the Creation, measured from the start of the Resource from which the CueSheet is referenced (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string start_time = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of CollectionCollectionReferences. */
message CollectionCollectionReferenceList {
	/* First defined in: ern36 */
	/* A Composite containing a CollectionCollectionReference for a Collection (specific to this Message). */
	repeated CollectionCollectionReference collection_collection_reference = 1;
	/* First defined in: ern36 */
	/* The number of referenced Collections (typically Chapters). */
	optional int32 number_of_collections = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors and other attributes of a Collection which may vary according to Territory of release.  */
message CollectionDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of a Character in the Collection. A Character may be described through Name, Identifier and Roles. */
	repeated Character character = 1;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the Collection. */
	repeated DetailedResourceContributor contributor = 2;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the Collection
                     details do not apply. Either this Element or Territory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 3;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Collection is complete (=True) or not (=False). Only one of the Elements IsComplete here and in the Collection is valid for a given Collection. */
	optional bool is_complete = 4;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the Collection
                     details apply. Either this Element or ExcludedTerritory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard.  */
	repeated CurrentTerritoryCode territory_code = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Collection. */
	repeated Title title = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CollectionId. */
message CollectionId {
	/* First defined in: ern36 */
	/* A Composite containing details of the CatalogNumber of the Collection. */
	optional CatalogNumber catalog_number = 1;
	/* First defined in: ern36 */
	/* The GRid identifying the Collection. This is the preferred Element and is mandatory if a GRid is available. A GRid comprises four parts: the xs:string 'A1', followed by five alphanumeric characters, ten alphanumeric characters and and one alphanumeric character. */
	optional string g_rid = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the ICPN used as proxy for identification of the Collection. Only applicable when the Collection is an abstraction of a complete PhysicalProduct. An ICPN comprises 12 or 13 digits, depending whether it is an EAN (13) or a UPC (12). */
	optional ICPN i_c_p_n = 3;
	/* First defined in: ern36 */
	/* The ISAN (International Standard Audiovisual Number as defined in ISO 15706) for the Collection. An ISAN comprises four blocks of four hexadecimal charaters followed by a check character. */
	optional string i_s_a_n = 4;
	/* First defined in: ern36 */
	/* The ISRC (International Standard Recording Code as defined in  ISO 3901) for the Collection. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits.  */
	optional string i_s_r_c = 5;
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the Collection (usually one per society involved in the messaging). */
	repeated ProprietaryId proprietary_id = 7;
	/* First defined in: ern36 */
	/* The V-ISAN (Version Identifier of a International Standard Audiovisual Number as defined in ISO 15706-2) for the Collection. A V-ISAN comprises four blocks of four hexadecimal charaters followed by a check character, followed by two further blocks of four hexadecimal characters, followed by a further check character. */
	optional string v_i_s_a_n = 8;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more Collections. */
message CollectionList {
	/* First defined in: ern36 */
	/* A Composite containing details of a Collection contained in a Resource. */
	repeated Collection collection = 1;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the CollectionList as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a CollectionResourceReference. */
message CollectionResourceReference {
	/* First defined in: ern36 */
	/* A Reference for a Resource (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	optional string collection_resource_reference = 1;
	/* First defined in: ern36 */
	/* The Duration of the use of the Resource that is referenced in the CollectionResourceReference (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 2;
	/* First defined in: ern371 */
	/* The number indicating the order of the
                  Resources in a group of Resources. */
	optional int32 sequence_number = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of CollectionResourceReferences. */
message CollectionResourceReferenceList {
	/* First defined in: ern36 */
	/* A Composite containing a CollectionResourceReference for a Collection (specific to this Message). */
	repeated CollectionResourceReference collection_resource_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CollectionType. Collections referenced from Video Resources are of CollectionType VideoChapter . Collections referenced from a Release composite are of CollectionType Series, Season or Episode. */
message CollectionType {
	/* First defined in: ern36 */
	/* The Namespace of the CollectionType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CollectionType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.CollectionType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a CollectionWorkReference. */
message CollectionWorkReference {
	/* First defined in: ern36 */
	/* A Reference for a Work (specific to this Message). This is a LocalMusicalWorkAnchorReference starting with the letter W. */
	optional string collection_work_reference = 1;
	/* First defined in: ern36 */
	/* The Duration of the use of the Work that is referenced in the CollectionWorkReference (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of CollectionWorkReferences. */
message CollectionWorkReferenceList {
	/* First defined in: ern36 */
	/* A Composite containing a CollectionWorkReference for a Collection (specific to this Message). */
	repeated CollectionWorkReference collection_work_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an Comment. */
message Comment {
	/* First defined in: ern36 */
	/* The Language and script of the Comment as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CommercialModelType. */
message CommercialModelType {
	/* First defined in: ern36 */
	/* The Namespace of the CommercialModelType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CommercialModelType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.CommercialModelType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a condition. */
message Condition {
	/* First defined in: ern383 */
	/* A Creation that is used as a reference
                  when the unit is Percent, so it can be expressed whether the value is a percentage
                  of the reference Resource for which rights are claimed or of a consumer's
                  UserGeneratedContent.  */
	optional ern383.avs.ReferenceCreation reference_creation = 1;
	/* First defined in: ern36 */
	/* A Relator expressing the accuracy of the condition value. */
	optional ern383.avs.RelationalRelator relational_relator = 2;
	/* First defined in: ern36 */
	/* A UnitOfMeasure for the condition value. */
	optional ern383.avs.UnitOfConditionValue unit = 3;
	/* First defined in: ern36 */
	/* The numeric value of the condition. */
	optional double value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Period a DSP may rent something to a Customer. */
message ConsumerRentalPeriod {
	/* First defined in: ern36 */
	/* A Flag indicating whether a Period can be extended after the end of a Deal (=True) or not (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_extensible = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of contact Identifiers of a Party. */
message ContactId {
	/* First defined in: ern36 */
	/* An EmailAddress of the Party. */
	repeated string email_address = 1;
	/* First defined in: ern36 */
	/* A FaxNumber of the Party. */
	repeated string fax_number = 2;
	/* First defined in: ern36 */
	/* A PhoneNumber of the Party. */
	repeated string phone_number = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ContainerFormat. */
message ContainerFormat {
	/* First defined in: ern36 */
	/* The Namespace of the ContainerFormat. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ContainerFormat. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ContainerFormat ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an CourtesyLine. */
message CourtesyLine {
	/* First defined in: ern36 */
	/* The Language and script of the CourtesyLine as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CreationIds. */
message CreationId {
	/* First defined in: ern36 */
	/* A Composite containing details of the CatalogNumber of the Resource. */
	optional CatalogNumber catalog_number = 1;
	/* First defined in: ern36 */
	/* A MusicalWorkId identifying a MusicalWork within the catalog of its Composer (typically of classical music) according to a standardized numbering (e.g. 'K' numbers for Koechel's catalog of Mozart). */
	repeated string composer_catalog_number = 2;
	/* First defined in: ern36 */
	/* The ISAN (International Standard Audiovisual Number as defined in ISO 15706) for the Resource. An ISAN comprises four blocks of four hexadecimal charaters followed by a check character. */
	optional string i_s_a_n = 3;
	/* First defined in: ern36 */
	/* The ISBN (International Standard Book Number defined in ISO 2108) for the Resource. An ISBN is a 13-digit number. Pre-2007, ISBNs, which had 10-digits and are now deprecated, are converted by adding the prefix '978' and re-calculating the check character. */
	optional string i_s_b_n = 4;
	/* First defined in: ern36 */
	/* The ISMN (International Standard Music Number defined in ISO 10957) for the Resource. An ISMN is a thirteen-digit number. Pre-2008 ISMNs, which had 10 characters and are now deprecated, are converted by replacing the initial letter ('M') with '979-0'. */
	optional string i_s_m_n = 5;
	/* First defined in: ern36 */
	/* The ISRC (International Standard Recording Code as defined in  ISO 3901) for the Resource. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits.  */
	optional string i_s_r_c = 6;
	/* First defined in: ern36 */
	/* The ISSN (International Standard Serial Number defined in ISO 3297) for the Resource. An ISSN comprises two groups of four digits, separated by a hyphen and a control digit. */
	optional string i_s_s_n = 7;
	/* First defined in: ern36 */
	/* The ISWC (International Standard Musical Work Code defined in ISO 15707) identifying the MusicalWork. An ISWC comprises three parts: the letter 'T', followed by nine digits and then one check digit. */
	optional string i_s_w_c = 8;
	/* First defined in: ern36 */
	/* The MusicalWorkId identifying the MusicalWork within the catalog of its Composer (typically of classical music) as an opus number. */
	optional string opus_number = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the Creation. */
	repeated ProprietaryId proprietary_id = 10;
	/* First defined in: ern36 */
	/* The SICI (Serial Item and Contribution Identifier defined in ANSI/NISO Z39.56-199)  for the Resource. */
	optional string s_i_c_i = 11;
	/* First defined in: ern36 */
	/* The V-ISAN (Version Identifier of a International Standard Audiovisual Number as defined in ISO 15706-2) for the Resource. A V-ISAN comprises four blocks of four hexadecimal charaters followed by a check character, followed by two further blocks of four hexadecimal characters, followed by a further check character. */
	optional string v_i_s_a_n = 12;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Cue. */
message Cue {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the Cue. */
	repeated CLine c_line = 1;
	/* First defined in: ern36 */
	/* A Composite containing a CueCreationReference for a Creation (specific to this Message). */
	repeated CueCreationReference cue_creation_reference = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a CueOrigin for the Cue. It can be expected that this element will be contractually mandatory in many communications of cue sheets to music rights societies. */
	optional CueOrigin cue_origin = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a ThemeType for the Creation referenced in the Cue. */
	optional CueThemeType cue_theme_type = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a UseType of the Cue. It can be expected that this element will be contractually mandatory in many communications of cue sheets to music rights societies. */
	optional CueUseType cue_use_type = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a VisualPerceptionType for the Creation referenced in the Cue. */
	optional CueVisualPerceptionType cue_visual_perception_type = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a VocalType for the Creation referenced in the Cue. */
	optional CueVocalType cue_vocal_type = 7;
	/* First defined in: ern36 */
	/* The Duration of the use of the Creation that is referenced in the CueCreationReference (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 8;
	/* First defined in: ern36 */
	/* The end time of the Creation, measured from the start of the Resource from which the CueSheet is referenced (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string end_time = 9;
	/* First defined in: ern36 */
	/* A Flag indicating whether whether the Creation referenced in the Cue contains musical content such as a SoundRecording or a MusicalWork (=True) or not (=False). */
	optional bool has_musical_content = 10;
	/* First defined in: ern36 */
	/* A Flag indicating whether a Creation contains dancing (=True) or not (=False). */
	optional bool is_dance = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of the PLine for the Cue. */
	repeated PLine p_line = 12;
	/* First defined in: ern36 */
	/* A Composite containing details of a Character in the Creation referenced in the Cue. A Character may be described through Name, Identifier and Roles. */
	repeated Character referenced_creation_character = 13;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                        Contributor of the Creation referenced in the Cue. */
	repeated DetailedResourceContributor referenced_creation_contributor = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of a CreationIds. */
	optional CreationId referenced_creation_id = 15;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Creation referenced in the Cue. */
	repeated Title referenced_creation_title = 16;
	/* First defined in: ern36 */
	/* A Type of the Creation referenced in the Cue. */
	optional ern383.avs.CreationType referenced_creation_type = 17;
	/* First defined in: ern371 */
	/* A Composite containing details of an
                        indirect Contributor of the Creation referenced in the
                        Cue. */
	repeated MusicalWorkContributor referenced_indirect_creation_contributor = 18;
	/* First defined in: ern36 */
	/* The start time of the Creation, measured from the start of the Resource from which the CueSheet is referenced (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string start_time = 19;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a CueCreationReference. */
message CueCreationReference {
	/* First defined in: ern36 */
	/* A Reference for a Resource (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	optional string cue_resource_reference = 1;
	/* First defined in: ern36 */
	/* A Reference for a Work (specific to this Message). This is a LocalMusicalWorkAnchorReference starting with the letter W. */
	optional string cue_work_reference = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CueOrigin. */
message CueOrigin {
	/* First defined in: ern36 */
	/* The Namespace of the CueOrigin. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CueOrigin. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.CueOrigin ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CueSheet. */
message CueSheet {
	/* First defined in: ern36 */
	/* A Composite containing details of a Cue. */
	repeated Cue cue = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a CueSheetId of the CueSheet. */
	repeated ProprietaryId cue_sheet_id = 2;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the CueSheet within the Release which contains it. This is a LocalCueSheetAnchor starting with the letter Q. */
	optional string cue_sheet_reference = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of the CueSheet. */
	optional CueSheetType cue_sheet_type = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more CueSheets. */
message CueSheetList {
	/* First defined in: ern36 */
	/* A Composite containing details of a CueSheet contained in a Resource. */
	repeated CueSheet cue_sheet = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CueSheetType. */
message CueSheetType {
	/* First defined in: ern36 */
	/* The Namespace of the CueSheetType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CueSheetType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.CueSheetType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ThemeType for a Creation referenced in a Cue. */
message CueThemeType {
	/* First defined in: ern36 */
	/* The Namespace of the CueThemeType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CueThemeType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ThemeType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a CueUseType. */
message CueUseType {
	/* First defined in: ern36 */
	/* The Namespace of the CueUseType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CueUseType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.CueUseType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a VisualPerceptionType for a Creation referenced in a Cue. */
message CueVisualPerceptionType {
	/* First defined in: ern36 */
	/* The Namespace of the CueVisualPerceptionType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CueVisualPerceptionType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.VisualPerceptionType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a VocalType for a Creation referenced in a Cue. */
message CueVocalType {
	/* First defined in: ern36 */
	/* The Namespace of the CueVocalType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the CueVocalType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.VocalType ext_value = 3;
}

/* Defined in: ern371 -> ern381 -> ern383 */
/* A Composite containing details of a
            TerritoryCode. */
message CurrentTerritoryCode {
	/* First defined in: ern371 */
	/* A standard used for the TerritoryCode.
                     This is represented in an XML schema as an XML Attribute. If this Attribute is
                     not provided, it is assumed that the code is a TerritoryCode in accordance with
                     ISO 3166-1 Alpha 2 standard (or Worldwide). */
	optional ern383.avs.TerritoryCodeType identifier_type = 1;
	optional ern383.avs.CurrentTerritoryCode ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a DSP acting as a Licensee in a commercial relationship. */
message DSP {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the DSP as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 3;
	/* First defined in: ern371 -> Updated in ern371 */
	/* The Territory from which the DSP operates.
                  This Territory may differ from the one in which SalesTransactions occur. The use
                  of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged; TIS
                  TerritoryCodes should only be used if both MessageSender and MessageRecipient are
                  familiar with this standard.  */
	optional CurrentTerritoryCode territory_code = 4;
	/* First defined in: ern36 */
	/* A Composite containing a TradingName of the DSP. */
	optional Name trading_name = 5;
	/* First defined in: ern36 */
	/* A URL for the DSP's web site. */
	repeated string u_r_l = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details (in full or in summary) of a Deal made between a DSP (as Licensee) and a Licensor of Works or Releases. When any new DealTerms are added or removed from an existing Deal (different UseTypes, Prices, Territories, DistributionChannels) then a new Deal is created, and (if appropriate) the ValidityPeriod of the existing Deal should be terminated. The only changes which should be made to the DealTerms of an existing Deal are corrections required because of an earlier error or omission, or the addition of an EndDate to the Deal's ValidityPeriod. */
message Deal {
	/* First defined in: ern36 */
	/* A Composite containing a Reference to a TextDocument containing details of the Deal (in the form of an Identifier, Name or Description). */
	repeated DealReference deal_reference = 1;
	/* First defined in: ern36 */
	/* A Composite containing a list of DealTechnicalResourceDetailsReferences for the Deal. */
	optional DealTechnicalResourceDetailsReferenceList deal_technical_resource_details_reference_list = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the terms of the Deal. */
	optional DealTerms deal_terms = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a WebPage for the DistributionChannel. */
	repeated WebPage distribution_channel_page = 4;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Deal as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Usages that govern a Resource in the Deal where the Usage of the Resource differs from the Usage of the other Resources in the same Release. */
	optional ResourceUsage resource_usage = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more Deals. */
message DealList {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the DealList as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Deals pertaining to one or more Releases. */
	repeated ReleaseDeal release_deal = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a DealReference. */
message DealReference {
	/* First defined in: ern36 */
	/* The Language and script of the DealReference as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more
            Resources relating to a Deal. */
message DealResourceReferenceList {
	/* First defined in: ern371 */
	/* A Reference for a Resource (specific to
                  this Message). This is a LocalResourceAnchorReference starting with the letter
                  A. */
	repeated string deal_resource_reference = 1;
	/* First defined in: ern371 */
	/* A Composite containing details about the
                  Period of Time applicable to the Resources. */
	optional Period period = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of DealTechnicalResourceDetailsReferences. */
message DealTechnicalResourceDetailsReferenceList {
	/* First defined in: ern36 */
	/* A Reference for a Composite specifying technical details of a Resource (specific to this Message). This is a LocalTechnicalResourceDetailsAnchorReference starting with the letter T. */
	repeated string deal_technical_resource_details_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of the terms of a Deal. */
message DealTerms {
	/* First defined in: ern36 */
	/* The Flag indicating whether all Deals are cancelled for the given Territories (=True) or not (=False). This Flag can be used in conjunction with a StartDate of a ValidityPeriod to indicate the point in time from which all Deals are cancelled. */
	optional bool all_deals_cancelled = 1;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Date on which an audio or video
                        clip is made first available for display (it overrides the generic
                        ReleaseDisplayStartDate if supplied). If no ClipPreviewStartDate is
                        provided, the StartDate for the Deal is used instead. The
                        ClipPreviewStartDate may not be later than the StartDate for the Deal. The
                        ClipPrevicePreviewStartDate shall not be later than the StartDate of the
                        Deal allowing the general availability of the referenced Release. This is a
                        string with the syntax YYYY[-MM[-DD]]. */
	optional ddex_IsoDate clip_preview_start_date = 2;
	/* First defined in: ern371 */
	/* A Date on which an audio or video
                        clip is made first available for display (it overrides the generic
                        ReleaseDisplayStartDate if supplied). If no ClipPreviewStartDate is
                        provided, the StartDate for the Deal is used instead. The
                        ClipPreviewStartDate may not be later than the StartDate for the Deal. The
                        ClipPrevicePreviewStartDate shall not be later than the StartDate of the
                        Deal allowing the general availability of the referenced Release. This is a
                        string with the syntax YYYY[-MM[-DD]]. */
	optional string clip_preview_start_date_time = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of the fundamental business model which applies to the Deal (e.g. SubscriptionModel and PayAsYouGoModel). The CommercialModelType indicates how the Consumer pays for the Service or Release. */
	repeated CommercialModelType commercial_model_type = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a Period the DSP may rent something to a Customer. */
	optional ConsumerRentalPeriod consumer_rental_period = 5;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Date on which the cover art is
                        made first available for display (it overrides the generic
                        ReleaseDisplayStartDate if supplied). If no CoverArtPreviewStartDate is
                        provided, the StartDate for the Deal is used instead. The
                        CoverArtPreviewStartDate may not be later than the StartDate for the Deal.
                        CoverArtPreviewStartDate shall not be later than the StartDate of the Deal
                        allowing the general availability of the referenced Release. This is a
                        string with the syntax YYYY[-MM[-DD]]. */
	optional ddex_IsoDate cover_art_preview_start_date = 6;
	/* First defined in: ern371 */
	/* A Date on which the cover art is
                        made first available for display (it overrides the generic
                        ReleaseDisplayStartDate if supplied). If no CoverArtPreviewStartDate is
                        provided, the StartDate for the Deal is used instead. The
                        CoverArtPreviewStartDate may not be later than the StartDate for the Deal.
                        CoverArtPreviewStartDate shall not be later than the StartDate of the Deal
                        allowing the general availability of the referenced Release. This is a
                        string with the syntax YYYY[-MM[-DD]]. */
	optional string cover_art_preview_start_date_time = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of the DSP through whose DistributionChannel the sales are permitted. If none are provided no limitations on the DistributionChannels are given. */
	repeated DSP distribution_channel = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of excluded DSP. This is used in an aggregator model where all agreed partners of the aggregators may use a ReleaseDeal, except those that are listed herein. */
	repeated DSP excluded_distribution_channel = 9;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory in which the Deal does not
                     apply. Either this Element or Territory must be present, but not both. The use
                     of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged; TIS
                     TerritoryCodes should only be used if both MessageSender and MessageRecipient
                     are familiar with this standard.  */
	repeated CurrentTerritoryCode excluded_territory_code = 10;
	/* First defined in: ern371 */
	/* A Composite containing details of one or
                  more Resources that are only available for download as soon as the Release is
                  purchased (i.e. before the ReleaseDate). */
	optional DealResourceReferenceList instant_gratification_resource_list = 11;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Deal is exclusive (=True) or not (=False) to the MessageRecipient with respect to the relevant Territory(ies), Time(s) and Release(s). For other Territory(ies), or Time(s), other DSPs might be able to sell the Release(s). The exclusivity is in accordance with the agreement between the MessageSender and MessageRecipient. */
	optional bool is_exclusive = 12;
	/* First defined in: ern371 */
	/* A Flag indicating whether the Deal is
                  covering only the period where the Release can be purchased by a consumer but not
                  yet fulfilled (=True) or not (=False). */
	optional bool is_pre_order_deal = 13;
	/* First defined in: ern36 */
	/* The Flag indicating whether a special Deal is made between the Licensor and the Licensee (=True) or not (=False) regarding the royalties or payments due to be paid for Releases distributed under this Deal. */
	optional bool is_promotional = 14;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the DealTerms as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 15;
	/* First defined in: ern36 */
	/* A number of Products per carton. This is the smallest number of Products that can be ordered. */
	optional int32 number_of_products_per_carton = 16;
	/* First defined in: ern36 */
	/* A Composite containing details of physical returns. */
	optional PhysicalReturns physical_returns = 17;
	/* First defined in: ern371 */
	/* A Composite containing details of one or
                  more Resources that are only available when the Release is purchased during a
                  pre-order period (delivery is typically at ReleaseDate). */
	optional DealResourceReferenceList pre_order_incentive_resource_list = 18;
	/* First defined in: ern381 -> Updated in ern381 */
	/* A Composite containing details of the Date and Place of the Event in which the pre-ordered Release is made first available for previewing (it overrides the generic ReleaseDisplayStartDate if supplied). If no PreOrderPreviewDate is provided, the StartDate for the Deal is used instead. The PreOrderPreviewDate may not be later than the StartDate for the Deal. This element has been deprecated and may be deleted in a future version of this message. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional EventDate pre_order_preview_date = 19;
	/* First defined in: ern381 -> Updated in ern381 */
	/* A Composite containing details of the Date and Place of the Event in which the pre-ordered Release is made first available for previewing (it overrides the generic ReleaseDisplayStartDate if supplied). If no PreOrderPreviewDate is provided, the StartDate for the Deal is used instead. The PreOrderPreviewDate may not be later than the StartDate for the Deal. This element has been deprecated and may be deleted in a future version of this message. This is a string with the syntax YYYY[-MM[-DD]]. */
	optional string pre_order_preview_date_time = 20;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the related Release is made available for pre-ordering. */
	optional EventDate pre_order_release_date = 21;
	/* First defined in: ern36 */
	/* A Composite containing details of a Price. Note that this Price applies to all UseTypes referenced in this Composite. */
	repeated PriceInformation price_information = 22;
	/* First defined in: ern36 */
	/* A Composite containing details of a PromotionalCode. */
	optional PromotionalCode promotional_code = 23;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more offers related to the Release. */
	repeated RelatedReleaseOfferSet related_release_offer_set = 24;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Date on which the Release is made
                        first available for display. If other Track list, cover art and clip preview
                        dates are not provided, then this date covers them as well (assuming clips
                        are available). If no ReleaseDisplayStartDate is provided, the StartDate for
                        the Deal is used instead. The ReleaseDisplayStartDate may not be later than
                        the StartDate for the Deal. If the MessageRecipient is not able to cater for
                        such granular display policies, the MessageRecipient may be forced to not
                        display any Release information until a much later date. This is a string
                        with the syntax YYYY[-MM[-DD]]. */
	optional ddex_IsoDate release_display_start_date = 25;
	/* First defined in: ern371 */
	/* A Date on which the Release is made
                        first available for display. If other Track list, cover art and clip preview
                        dates are not provided, then this date covers them as well (assuming clips
                        are available). If no ReleaseDisplayStartDate is provided, the StartDate for
                        the Deal is used instead. The ReleaseDisplayStartDate may not be later than
                        the StartDate for the Deal. If the MessageRecipient is not able to cater for
                        such granular display policies, the MessageRecipient may be forced to not
                        display any Release information until a much later date. This is a string
                        with the syntax YYYY[-MM[-DD]]. */
	optional string release_display_start_date_time = 26;
	/* First defined in: ern36 */
	/* A Composite containing details of a rights claim policy. */
	repeated RightsClaimPolicy rights_claim_policy = 27;
	/* First defined in: ern36 */
	/* The Flag indicating whether all Releases referred to are to be taken down by the MessageRecipient. This includes that all Deals referred to in a specific Composite are cancelled and no information about the Releases should be displayed to the end user on the DSP's website (=True) or not (=False). This Flag can be used in conjunction with a StartDate of a ValidityPeriod to indicate the point in time from which all Deals are cancelled. */
	optional bool take_down = 28;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory in which the Deal applies.
                     Either this Element or ExcludedTerritory must be present, but not both. The use
                     of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged; TIS
                     TerritoryCodes should only be used if both MessageSender and MessageRecipient
                     are familiar with this standard.  */
	repeated CurrentTerritoryCode territory_code = 29;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Date on which the Track list is
                        made first available for display (it overrides the generic
                        ReleaseDisplayStartDate if supplied). If no TrackListingPreviewStartDate is
                        provided, the StartDate for the Deal is used instead. The
                        TrackListingPreviewStartDate may not be later than the StartDate for the
                        Deal. The TrackListingPreviewStartDate shall not be later than the StartDate
                        of the Deal allowing the general availability of the referenced Release.
                        This element is not applicable on Track Releases. This is a string with the
                        syntax YYYY[-MM[-DD]]. */
	optional ddex_IsoDate track_listing_preview_start_date = 30;
	/* First defined in: ern371 */
	/* A Date on which the Track list is
                        made first available for display (it overrides the generic
                        ReleaseDisplayStartDate if supplied). If no TrackListingPreviewStartDate is
                        provided, the StartDate for the Deal is used instead. The
                        TrackListingPreviewStartDate may not be later than the StartDate for the
                        Deal. The TrackListingPreviewStartDate shall not be later than the StartDate
                        of the Deal allowing the general availability of the referenced Release.
                        This element is not applicable on Track Releases. This is a string with the
                        syntax YYYY[-MM[-DD]]. */
	optional string track_listing_preview_start_date_time = 31;
	/* First defined in: ern36 */
	/* A Composite containing the Types and number of Usages applicable to a Release to which the Deal applies. */
	repeated Usage usage = 32;
	/* First defined in: ern36 */
	/* A Composite containing details about a Period of Time during which the Deal is valid. No StartDate in this Composite means that the Deal is valid as per contractual relationship between MessageSender and MessageRecipient. No EndDate in this Composite means that the Deal is valid until further notice. */
	repeated Period validity_period = 33;
	/* First defined in: ern36 */
	/* A Composite containing details of UserGeneratedContent permissions. */
	repeated WebPolicy web_policy = 34;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an Description. */
message Description {
	/* First defined in: ern36 */
	/* The Language and script of the Description as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern371 -> ern381 -> ern383 */
/* A Composite containing details of the Name,
            Identifier and role(s) of a Contributor to a Resource. */
message DetailedResourceContributor {
	/* First defined in: ern371 */
	/* A Composite containing details of the
                  additional roles played by the Artist. */
	repeated ArtistRole additional_roles = 1;
	/* First defined in: ern371 */
	/* A Composite containing details of the
                  kinds of usage for which rights have been delegated by the
                  Artist. */
	optional ArtistDelegatedUsageRights artist_delegated_usage_rights = 2;
	/* First defined in: ern383 -> Updated in ern383 */
	/* The country of whose citizenship the
                  Artist has. */
	optional AllTerritoryCode citizenship = 3;
	/* First defined in: ern371 */
	/* A Composite containing details of contact
                  Identifiers of the Artist. */
	optional ContactId contact_information = 4;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of birth. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate date_and_place_of_birth = 5;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of death. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate date_and_place_of_death = 6;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                  typical or main Genre relating to the Artist. */
	repeated Genre genre = 7;
	/* First defined in: ern371 */
	/* A Composite containing details of a Type
                  of an agreement that covers the Artist's participation in making a
                  SoundRecording. */
	optional GoverningAgreementType governing_agreement_type = 8;
	/* First defined in: ern371 */
	/* A Type of musical instrument played by the
                  Artist. */
	repeated string instrument_type = 9;
	/* First defined in: ern371 */
	/* A Flag indicating whether the Contributor
                  is an Artist that has a contract for its part in creating the Resource (=True) or
                  not (=False). */
	optional bool is_contracted_artist = 10;
	/* First defined in: ern371 */
	/* A Flag indicating whether the Contributor
                  is a featured Artist (=True) or not (=False). */
	optional bool is_featured_artist = 11;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                  membership in a collective rights management organization. */
	repeated Membership membership = 12;
	/* First defined in: ern383 -> Updated in ern383 */
	/* The nationality of the
                  Contributor. */
	repeated AllTerritoryCode nationality = 13;
	/* First defined in: ern371 */
	/* A Composite containing details of
                        the PartyId for the Party. If no Namespace is given, the Identifier is a
                        DdexPartyId (DPID). Note that DPIDs are not normally used to identify
                        Artists, Producers or other Creators. */
	repeated PartyId party_id = 14;
	/* First defined in: ern371 */
	/* A Composite containing details of
                        the PartyName(s). */
	repeated PartyName party_name = 15;
	/* First defined in: ern381 */
	/* A Composite containing details of the Date and Place of a Performance. */
	repeated Performance performance = 16;
	/* First defined in: ern371 */
	/* A Type of (musical) instrument primarily
                  played by the Artist. */
	optional string primary_instrument_type = 17;
	/* First defined in: ern371 */
	/* A Composite containing details of the
                  primary role played by the Artist in relation to other Artists. */
	optional ArtistRole primary_role = 18;
	/* First defined in: ern371 */
	/* A Composite containing details of a role
                  played by the Contributor. */
	repeated ResourceContributorRole resource_contributor_role = 19;
	/* First defined in: ern371 */
	/* The number indicating the order of the
               ResourceContributor in a group of ResourceContributors that have contributed to a
               Resource. This is represented in an XML schema as an XML Attribute.
             */
	optional int32 sequence_number = 20;
	/* First defined in: ern371 */
	/* Sex */
	optional ern383.avs.Sex sex = 21;
	/* First defined in: ern371 */
	/* The country of main residency of the
                  Artist. */
	optional AllTerritoryCode territory_of_residency = 22;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a DistributionChannelType. */
message DistributionChannelType {
	/* First defined in: ern36 */
	/* The Namespace of the DistributionChannelType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the DistributionChannelType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.DistributionChannelType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a DrmPlatformType. */
message DrmPlatformType {
	/* First defined in: ern36 */
	/* The Namespace of the DrmPlatformType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the DrmPlatformType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the DrmPlatformType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional ern383.avs.DrmPlatformType ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of the Date and Place of an Event. */
message EventDate {
	/* First defined in: ern36 */
	/* The Flag indicating whether the Event being described occurred sometime after the reported Date (=True) or not (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_after = 1;
	/* First defined in: ern36 */
	/* The Flag indicating whether the reported Date is approximate (=True) or exact (=False). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Event being described occurred sometime before the reported Date (=True) or not (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_before = 3;
	/* First defined in: ern36 */
	/* The Language and script for the LocationDescription as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
	/* First defined in: ern36 */
	/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 5;
	/* First defined in: ern383 -> Updated in ern383 */
	/* The Territory in which the Event
                     occurred. This is represented in an XML schema as an XML Attribute. The use of
                     ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged; TIS
                     TerritoryCodes should only be used if both MessageSender and MessageRecipient
                     are familiar with this standard.  */
	optional ern383.avs.AllTerritoryCode territory_code = 6;
	/* First defined in: null -> Updated in ern371 */
	optional ddex_IsoDate ext_value = 7;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of the DateTime and Place of an Event. */
message EventDateTime {
	/* First defined in: ern36 */
	/* The Flag indicating whether the Event being described occurred sometime after the reported DateTime (=True) or not (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_after = 1;
	/* First defined in: ern36 */
	/* The Flag indicating whether the reported DateTime is approximate (=True) or exact (=False). This is represented in an XML schema as an XML Attribute.  */
	optional bool is_approximate = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Event being described occurred sometime before the reported DateTime (=True) or not (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_before = 3;
	/* First defined in: ern36 */
	/* The Language and script for the LocationDescription as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
	/* First defined in: ern36 */
	/* A Description of the location in which the Event occurred. It offers the opportunity to describe a place more precisely than using the TerritoryCode. This is represented in an XML schema as an XML Attribute. */
	optional string location_description = 5;
	/* First defined in: ern371 -> Updated in ern371 */
	/* The Territory in which the Event
                     occurred. This is represented in an XML schema as an XML Attribute. The use of
                     ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged; TIS
                     TerritoryCodes should only be used if both MessageSender and MessageRecipient
                     are familiar with this standard.  */
	optional string territory_code = 6;
	optional string ext_value = 7;
}

/* Defined in: ern371 -> Removed in ern381 -> Removed in ern383 */
/* A Composite containing details of a
            ResourceGroup. ResourceGroups are used to signal groupings or sequences of Resources
            within a Release. Examples include individual carriers in a multi-carrier Release or
            classical Work groupings as well as the default order of Resources within a
            Release. */
message ExtendedResourceGroup {
	/* First defined in: ern371 */
	/* A Composite containing details of a
                  Carrier. */
	repeated CarrierType carrier_type = 1;
	/* First defined in: ern371 */
	/* A Composite containing details of the
                  DisplayArtist for the ResourceGroup. The DisplayArtist may be described through
                  Name, Identifier and Roles. */
	repeated Artist display_artist = 2;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                  DisplayComposer for the ResourceGroup. A DisplayComposer may be described through
                  Name, Identifier and Roles. */
	repeated Artist display_composer = 3;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                  DisplayConductor for the ResourceGroup. A DisplayConductor may be described
                  through Name, Identifier and Roles. */
	repeated Artist display_conductor = 4;
	/* First defined in: ern371 */
	/* A Composite containing details of an
                  indirect Contributor to this ResourceGroup. */
	repeated IndirectResourceContributor indirect_resource_contributor = 5;
	/* First defined in: ern371 */
	/* The Language and script for the Elements of
               the ResourceGroup as defined in IETF RfC 5646. The default is the same as indicated
               for the containing composite. Language and Script are provided as
               lang[-scipt][-region][-variant]. This is represented in an XML schema as an XML
               Attribute. */
	optional string language_and_script_code = 6;
	/* First defined in: ern371 */
	/* A Composite containing details of
                     ReleaseIds of a Release which has the same content as the ResourceGroup. If
                     available, a GRid has to be used. If the Release contains only one
                     SoundRecording, the ISRC of the SoundRecording may be used instead. If the
                     Release is an abstraction of a complete PhysicalProduct (such as a CD Album),
                     the ICPN of the PhysicalProduct may be used instead. */
	optional ReleaseId release_id = 7;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                  Contributor to this ResourceGroup. This includes roles such as the compiler of the
                  ResourceGroup, and may summarize details of Contributors to individual
                  SoundRecordings or other content. */
	repeated ResourceContributor resource_contributor = 8;
	/* First defined in: ern371 */
	/* A ResourceGroup contained within this
                  ResourceGroup. ResourceGroups are used to signal groupings or sequences of
                  Resources within a Release. Examples include individual carriers in a
                  multi-carrier Release or classical Work groupings as well as the default order of
                  Resources within a Release. */
	repeated ExtendedResourceGroup resource_group = 9;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                     Resource contained in the ResourceGroup. */
	repeated ExtendedResourceGroupContentItem resource_group_content_item = 10;
	/* First defined in: ern371 */
	/* The Identifier (specific to the
                     Message) of a Release which has the same content as the ResourceGroup. This is
                     a LocalReleaseAnchorReference starting with the letter R. */
	optional string resource_group_release_reference = 11;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                     Resource contained in the ResourceGroup. */
	optional ResourceGroupResourceReferenceList resource_group_resource_reference_list = 12;
	/* First defined in: ern371 */
	/* The number indicating the order of the
                  ResourceGroup within all ResourceGroups at this level. The default value is 1, and
                  the value must be incremented by 1 for each ResourceGroup occurring at a
                  particular level. */
	optional int32 sequence_number = 13;
	/* First defined in: ern371 */
	/* A Composite containing details of a Title
                  of the ResourceGroup. Typically this will apply to 'sub' ResourceGroups within a
                  hierarchy, e.g., different Albums in a Set. */
	repeated Title title = 14;
}

/* Defined in: ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Resource
            which is a ContentItem of a ResourceGroup. */
message ExtendedResourceGroupContentItem {
	/* First defined in: ern371 */
	/* The Duration of the ContentItem featured,
                  if it is a SoundRecording or Video (using the ISO 8601:2004 PT[[hhH]mmM]ssS
                  format, where lower case characters indicate variables, upper case characters are
                  part of the xs:string, e.g. one hour, two minutes and three seconds would be
                  PT1H2M3S). The seconds section ss may include fractions (e.g. one minute and 30.5
                  seconds would be PT1M30.5S). This Duration may be less than the normal Duration of
                  the ContentItem, if only a part of it is included. */
	optional string duration = 1;
	/* First defined in: ern371 */
	/* The Flag indicating whether a Resource in
                  a Release is additional to those on the original Release of which this is a
                  Version (=True) or not (=False). If this Element is not provided, it is assumed
                  that this is False. */
	optional bool is_bonus_resource = 2;
	/* First defined in: ern371 */
	/* The Flag indicating whether a Resource in
                  a Release is hidden in some way from the Consumer (=True) or not (=False). If this
                  Element is not provided, it is assumed that this is False. */
	optional bool is_hidden_resource = 3;
	/* First defined in: ern371 */
	/* The Flag indicating whether a Resource in
                  a Release may be made available to consumers despite the distribution of the
                  containing Release not having been permitted (=True) or not (=False). If this
                  Element is not provided, it is assumed that this is False. The actual status of a
                  Resource as an InstantGratificationResource is determined in the relevant
                  Deal. */
	optional bool is_instant_gratification_resource = 4;
	/* First defined in: ern371 */
	/* A Flag indicating whether a Resource that
                  is only available when the Release is purchased during a pre-order period
                  (delivery is typically at ReleaseDate) (=True) or not (=False). If this Element is
                  not provided, it is assumed that this is False. The actual status of a Resource as
                  an PreOrderIncentiveResource is determined in the relevant
                  Deal. */
	optional bool is_pre_order_incentive_resource = 5;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                  ReleaseResourceReference (specific to this Message) for a Resource which is linked
                  to this ContentItem. Example: an Image, Text or NonMusicalWorkVideo associated
                  with a SoundRecording. This LocalAnchorReference is a xs:string starting with the
                  letter A. */
	repeated LinkedReleaseResourceReference linked_release_resource_reference = 6;
	/* First defined in: ern371 */
	/* A Composite containing details of
                     ReleaseIds of a Release which has the same content as the
                     ResourceGroupContentItem. If available, a GRid has to be used. If the Release
                     contains only one SoundRecording, the ISRC of the SoundRecording may be used
                     instead. If the Release is an abstraction of a complete PhysicalProduct (such
                     as a CD Album), the ICPN of the PhysicalProduct may be used
                     instead. */
	optional ReleaseId release_id = 7;
	/* First defined in: ern371 */
	/* A Composite containing a
                  ReleaseResourceReference for the ContentItem (specific to this Message). The
                  LocalAnchorReference in this Composite is a xs:string starting with the letter
                  A. */
	optional ReleaseResourceReference release_resource_reference = 8;
	/* First defined in: ern371 */
	/* The Identifier (specific to the
                     Message) of a Release which has the same content as the
                     ResourceGroupContentItem. This is a LocalReleaseAnchorReference starting with
                     the letter R. */
	optional string resource_group_content_item_release_reference = 9;
	/* First defined in: ern371 */
	/* A Composite containing details of the Type
                  of the ContentItem. */
	repeated ResourceType resource_type = 10;
	/* First defined in: ern371 */
	/* The number indicating the order of the
                  ContentItem among all Resources within this ResourceGroup. This is analogous to
                  the Track number on a SoundCarrier. Not all ResourceGroups necessarily have
                  SequenceNumbers (it is most applicable to SoundRecordings and
                  MusicalWorkVideos). */
	optional int32 sequence_number = 11;
	/* First defined in: ern371 */
	/* The SequenceNumber within the
                  SequenceNumber. Example: if a Track is subdivided into several numbered sections,
                  these are numbered with a SequenceSubNumber. The SequenceSubNumber is unique
                  within its SequenceNumber. */
	optional int32 sequence_sub_number = 12;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing an Extent and a UnitOfMeasure. */
message Extent {
	/* First defined in: ern36 */
	/* The UnitOfMeasure of the Extent. This is represented in an XML schema as an XML Attribute.  */
	optional ern383.avs.UnitOfExtent unit_of_measure = 1;
	optional double ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of promotional or other material in digital form related to a Release. */
message ExternalResourceLink {
	/* First defined in: ern36 */
	/* The Identifier which provides a communication link to the related external Resource. */
	optional string external_link = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of a Resource pointed to by the ExternalResourceLink. */
	repeated ExternallyLinkedResourceType externally_linked_resource_type = 2;
	/* First defined in: ern36 */
	/* The FileFormat of the external Resource. */
	optional string file_format = 3;
	/* First defined in: ern36 */
	/* A URL of the linked external Resource. */
	repeated string u_r_l = 4;
	/* First defined in: ern36 */
	/* A Composite containing details about the Period of Time during which the ExternalResourceLink is active. */
	optional Period validity_period = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an ExternallyLinkedResourceType. */
message ExternallyLinkedResourceType {
	/* First defined in: ern36 */
	/* The Namespace of the ExternallyLinkedResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ExternallyLinkedResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ExternallyLinkedResourceType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a File. */
message File {
	/* First defined in: ern36 */
	/* A Name of the File. */
	optional string file_name = 1;
	/* First defined in: ern36 */
	/* A location of the File. */
	optional string file_path = 2;
	/* First defined in: ern36 */
	/* A Composite containing a HashSum of the File and information about the algorithm with which it has been generated. */
	optional HashSum hash_sum = 3;
	/* First defined in: ern36 */
	/* A URL of the File. */
	optional string u_r_l = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Fingerprint and its governing algorithm. */
message Fingerprint {
	/* First defined in: ern36 */
	/* The value of the Fingerprint. */
	optional string fingerprint = 1;
	/* First defined in: ern36 */
	/* A parameter of the FingerprintAlgorithm. */
	optional string fingerprint_algorithm_parameter = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of FingerprintAlgorithm governing the Fingerprint. */
	optional FingerprintAlgorithmType fingerprint_algorithm_type = 3;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the FingerprintAlgorithm. */
	optional string fingerprint_algorithm_version = 4;
	/* First defined in: ern371 */
	/* The datatype of the
                  Fingerprint. */
	optional ern383.avs.BinaryDataType fingerprint_data_type = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a FingerprintAlgorithmType. */
message FingerprintAlgorithmType {
	/* First defined in: ern36 */
	/* The Namespace of the FingerprintAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the FingerprintAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.FingerprintAlgorithmType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a FrameRate and a UnitOfMeasure. */
message FrameRate {
	/* First defined in: ern36 */
	/* The UnitOfMeasure of the FrameRate. This is represented in an XML schema as an XML Attribute.  */
	optional ern383.avs.UnitOfFrameRate unit_of_measure = 1;
	optional double ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a FulfillmentDate. */
message FulfillmentDate {
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Date after which an end user can receive
                  the Resource (in ISO 8601:2004 format: YYYY-MM-DD). If no FulfillmentDate is
                  provided the FulfillmentDate is the StartDate of the respective Deal.
                */
	optional ddex_IsoDate fulfillment_date = 1;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of a Release for a Resource. This is a LocalReleaseAnchorReference starting with the letter R. */
	repeated string resource_release_reference = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Genre. */
message Genre {
	/* First defined in: ern36 */
	/* A Composite containing a Description of a genre or style (such as Musical, literary or audio-visual) with which a Creation is associated. */
	optional Description genre_text = 1;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Genre as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
	/* First defined in: ern36 */
	/* A Composite containing a Description of a secondary genre or style with which a Creation is associated. */
	optional Description sub_genre = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a GoverningAgreementType. */
message GoverningAgreementType {
	/* First defined in: ern36 */
	/* The Namespace of the GoverningAgreementType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the GoverningAgreementType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.GoverningAgreementType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a HashSum and its governing algorithm. */
message HashSum {
	/* First defined in: ern36 */
	/* The value of the HashSum. */
	optional string hash_sum = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of HashSumAlgorithm governing the HashSum. */
	optional HashSumAlgorithmType hash_sum_algorithm_type = 2;
	/* First defined in: ern371 */
	/* The datatype of the
                  HashSum. */
	optional ern383.avs.BinaryDataType hash_sum_data_type = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a HashSumAlgorithmType. */
message HashSumAlgorithmType {
	/* First defined in: ern36 */
	/* The Namespace of the HashSumAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the HashSumAlgorithmType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.HashSumAlgorithmType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a HostSoundCarrier of a SoundRecording. This Composite exists in the Release Notification Message Suite Standard to support the identification and matching of SoundRecording information. */
message HostSoundCarrier {
	/* First defined in: ern36 */
	/* A Composite containing details of the AdministratingRecordCompany for the Rights in the HostSoundCarrier. */
	repeated AdministratingRecordCompany administrating_record_company = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the DisplayArtist for the HostSoundCarrier. The DisplayArtist may be described through Name, Identifier and Roles. */
	repeated Artist display_artist = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds of the HostSoundCarrier. If available, a GRid has to be used. If the HostSoundCarrier contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. */
	repeated ReleaseId release_id = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the HostSoundCarrier. */
	optional RightsAgreementId rights_agreement_id = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the HostSoundCarrier. */
	repeated Title title = 5;
	/* First defined in: ern36 */
	/* The TrackNumber of the SoundRecording within the HostSoundCarrier. */
	optional string track_number = 6;
	/* First defined in: ern36 */
	/* The SequenceNumber within the Set of the volume containing the SoundRecording, where the HostSoundCarrier is a Set (such as a 'box set' of CDs). */
	optional string volume_number_in_set = 7;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an ICPN. */
message ICPN {
	/* First defined in: ern36 */
	/* The Flag indicating whether the ICPN is specifically an EAN (=True) or a UPC (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_ean = 1;
	/* First defined in: null -> Updated in ern381 */
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an Image.  */
message Image {
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Image was created. */
	optional EventDate creation_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the Image which may vary according to Territory of release. */
	repeated ImageDetailsByTerritory image_details_by_territory = 2;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of
                  Identifiers of the Image. */
	repeated ResourceProprietaryId image_id = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the Image. */
	optional ImageType image_type = 4;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Image is related to an Artist (=True) or not (=False). */
	optional bool is_artist_related = 5;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Image Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided Image data with the now provided data. */
	optional bool is_updated = 6;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Image as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 7;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the Image within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Image. */
	repeated Title title = 9;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an ImageCodecType. */
message ImageCodecType {
	/* First defined in: ern36 */
	/* The Namespace of the ImageCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ImageCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the ImageCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional ern383.avs.ImageCodecType ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors, Dates and other attributes of an Image which may vary according to Territory of release. */
message ImageDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the Image. */
	repeated CLine c_line = 1;
	/* First defined in: ern36 */
	/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for Artists or others featured on the Image. */
	optional CourtesyLine courtesy_line = 2;
	/* First defined in: ern36 */
	/* A Composite containing a Description of the subject of the Image. */
	optional Description description = 3;
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 4;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the Image details
                     do not apply. Either this Element or Territory shall be present, but not both.
                     The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged;
                     TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the Image belongs. */
	repeated Genre genre = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to the Image. */
	repeated IndirectResourceContributor indirect_resource_contributor = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the Image containing Keywords. */
	repeated Keywords keywords = 9;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ImageDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Image was originally published, whether for physical or electronic/online distribution. */
	optional EventDate original_resource_release_date = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the Image according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 12;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the Image. */
	repeated DetailedResourceContributor resource_contributor = 13;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the Image was published, whether for physical or
                  electronic/online distribution. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate resource_release_date = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of a Synopsis of the Image. */
	optional Synopsis synopsis = 15;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the Image. */
	repeated TechnicalImageDetails technical_image_details = 16;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the Image details
                     apply. Either this Element or ExcludedTerritory shall be present, but not both.
                     The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged;
                     TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode territory_code = 17;
	/* First defined in: ern371 */
	/* A Composite containing details of a Title
                  of the Image. */
	repeated Title title = 18;
}

/* Defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
/* A Composite containing details of Identifiers of an Image. */
message ImageId {
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the Image. */
	repeated ProprietaryId proprietary_id = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an ImageType. */
message ImageType {
	/* First defined in: ern36 */
	/* The Namespace of the ImageType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ImageType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ImageType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of the Name, Identifier and role(s) of an indirect Contributor to a Resource. */
message IndirectResourceContributor {
	/* First defined in: ern36 */
	/* A Composite containing details of a role played by the indirect Contributor. */
	repeated MusicalWorkContributorRole indirect_resource_contributor_role = 1;
	/* First defined in: ern381 */
	/* The nationality of the indirect Contributor. */
	repeated ddexC_CurrentTerritoryCode nationality = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 4;
	/* First defined in: ern36 */
	/* The number indicating the order of the indirect ResourceContributor in a group of ResourceContributors that have contributed to a Resource. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Description containing Keywords. */
message Keywords {
	/* First defined in: ern36 */
	/* The Language and script of the Keywords as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a LabelName. */
message LabelName {
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Type of LabelName. This is
                     represented in an XML schema as an XML Attribute. */
	optional ern383.avs.LabelNameType label_name_type = 1;
	/* First defined in: ern36 */
	/* The Language and script of the LabelName as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
	/* First defined in: ern371 */
	/* The Namespace of the ReleaseType. This
                     is represented in an XML schema as an XML Attribute. */
	optional string namespace = 3;
	/* First defined in: ern371 */
	/* A UserDefined value of the ReleaseType.
                     This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 4;
	optional string ext_value = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a LinkedReleaseResourceReference for a Resource which is linked to a ContentItem. */
message LinkedReleaseResourceReference {
	/* First defined in: ern36 */
	/* The Language and script for the LinkDescription as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing a  Description of the link for the ReleaseResourceReference. */
	optional string link_description = 2;
	optional ddex_LocalResourceAnchorReference ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a MIDI. */
message MIDI {
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the MIDI was created. */
	optional EventDate creation_date = 1;
	/* First defined in: ern36 */
	/* The Duration of the MIDI (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the MIDI. */
	repeated MusicalWorkId indirect_midi_id = 3;
	/* First defined in: ern36 */
	/* A Composite containing a Description of the Type of instrumentation of the MusicalWork(s) in the MIDI. */
	optional Description instrumentation_description = 4;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is related to an Artist (=True) or not (=False). */
	optional bool is_artist_related = 5;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is used as background to other audio or audiovisual material (=True) or not (=False). */
	optional bool is_background = 6;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is additional to those on the original Release of which this is a Version (=True) or not (=False). */
	optional bool is_bonus_resource = 7;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is generated by a computer (=True) or not (=False). */
	optional bool is_computer_generated = 8;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is hidden in some way from the Consumer (=True) or not (=False). */
	optional bool is_hidden_resource = 9;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is instrumental (=True) or not (=False). */
	optional bool is_instrumental = 10;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is a Medley (=True) or not (=False). */
	optional bool is_medley = 11;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is a Potpourri (=True) or not (=False). */
	optional bool is_potpourri = 12;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided MIDI data with the now provided data. */
	optional bool is_updated = 13;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the MIDI as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 14;
	/* First defined in: ern36 */
	/* The Language of the Performance recorded in the MIDI (represented by an ISO 639-2 LanguageCode). */
	optional ern383.avs.IsoLanguageCode language_of_performance = 15;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the MIDI was originally mastered (in either analogue or digital form). */
	optional EventDate mastered_date = 16;
	/* First defined in: ern36 */
	/* A Composite containing details of Descriptors and other attributes of the MIDI which may vary according to Territory of release.  */
	repeated MidiDetailsByTerritory midi_details_by_territory = 17;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of
                  Identifiers of the Midi. */
	repeated ResourceProprietaryId midi_id = 18;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the MIDI. */
	optional MidiType midi_type = 19;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is followed by a period of silence (=False) or not (=True).  */
	optional bool no_silence_after = 20;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is preceded by a period of silence (=False) or not (=True).  */
	optional bool no_silence_before = 21;
	/* First defined in: ern36 */
	/* A Flag indicating whether performer information is required (=True) or not (=False) when communicating details of the MIDI. */
	optional bool performer_information_required = 22;
	/* First defined in: ern36 */
	/* A Composite containing details of the ReferenceTitle of the MIDI. */
	optional ReferenceTitle reference_title = 23;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the MIDI was re-mastered (usually digitally). This
                  is a string with the syntax YYYY[-MM[-DD]]. This element is deprecated. DDEX
                  advises that it may be removed at a future date and therefore recommends against
                  using it. */
	optional EventDate remastered_date = 24;
	/* First defined in: ern36 */
	/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current MIDI. */
	optional ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 25;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more MusicalWorks contained in the MIDI. */
	optional ResourceMusicalWorkReferenceList resource_musical_work_reference_list = 26;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the MIDI within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 27;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the MIDI. */
	optional RightsAgreementId rights_agreement_id = 28;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a membership in a collective rights management organization. */
message Membership {
	/* First defined in: ern371 -> Updated in ern371 */
	/* The EndDate of the membership. This is a
                  string with the syntax YYYY[-MM[-DD]]. */
	optional ddex_IsoDate end_date = 1;
	/* First defined in: ern36 */
	/* A Type of membership. */
	optional ern383.avs.MembershipType membership_type = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the collective rights management organization. */
	optional PartyDescriptor organization = 3;
	/* First defined in: ern371 -> Updated in ern371 */
	/* The StartDate of the membership. This is a
                  string with the syntax YYYY[-MM[-DD]]. */
	optional ddex_IsoDate start_date = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing information about Parties in between the original MessageSender and ultimate MessageRecipient. */
message MessageAuditTrail {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the MessageAuditTrail as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a Party handling the Message and the Time at which the handling took place. */
	repeated MessageAuditTrailEvent message_audit_trail_event = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Party handling a Message and the Time at which the handling took place. */
message MessageAuditTrailEvent {
	/* First defined in: ern36 */
	/* The DateTime at which the Message was handled by the MessagingParty (the only allowed format is ISO 8601:2004: YYYY-MM-DDThh:mm:ssTZD). */
	optional string date_time = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a MessagingParty. */
	optional MessagingParty messaging_party_descriptor = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite placed at the beginning of each DdexMessage providing information about the Message, such as MessageSender, MessageRecipient and a Message creation time stamp. */
message MessageHeader {
	/* First defined in: ern36 */
	/* A Composite containing a human-readable Comment about the Message. */
	optional Comment comment = 1;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the MessageHeader as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
	/* First defined in: ern36 */
	/* A Composite containing information about Parties in between the original MessageSender and ultimate MessageRecipient. */
	optional MessageAuditTrail message_audit_trail = 3;
	/* First defined in: ern36 */
	/* The indicator used to distinguish a live Message from a test Message. */
	optional ern383.avs.MessageControlType message_control_type = 4;
	/* First defined in: ern36 */
	/* The DateTime on which the Message was created (the only allowed format is ISO 8601:2004: YYYY-MM-DDThh:mm:ssTZD). */
	optional string message_created_date_time = 5;
	/* First defined in: ern36 */
	/* The FileName, possibly including the FilePath, of the XML File containing the current Message. */
	optional string message_file_name = 6;
	/* First defined in: ern36 */
	/* A xs:string used to uniquely identify the current Message. */
	optional string message_id = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of the MessageRecipient. */
	optional MessagingParty message_recipient = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of the MessageSender. */
	optional MessagingParty message_sender = 9;
	/* First defined in: ern36 */
	/* A xs:string used to uniquely identify the thread of Messages of which the current Message is a part. One example of such a 'thread' is the chain of NewReleaseMessages being sent from ReleaseCreator to wholesale ReleaseDistributor 1 to retail DSP when communicating information about the same Release(s). A common MessageThreadId will allow all these messages to be tied together. */
	optional string message_thread_id = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the Party on whose behalf the Message is sent. */
	optional MessagingParty sent_on_behalf_of = 11;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a MessagingParty. */
message MessagingParty {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the MessagingParty as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party handling the Message. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyNames for the Party handling the Message. */
	optional PartyName party_name = 3;
	/* First defined in: ern36 */
	/* A Composite containing a TradingName for the Party handling the Message. */
	optional Name trading_name = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors and other attributes of a MIDI which may vary according to Territory of release. */
message MidiDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the MIDI. */
	repeated CLine c_line = 1;
	/* First defined in: ern36 */
	/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for guests Artists or others featured on the MIDI. */
	optional CourtesyLine courtesy_line = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the DisplayArtist for the MIDI. The DisplayArtist may be described through Name, Identifier and Roles. */
	repeated Artist display_artist = 3;
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 4;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the MIDI details
                     do not apply. Either this Element or Territory shall be present, but not both.
                     The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged;
                     TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the MIDI belongs. */
	repeated Genre genre = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a HostSoundCarrier on which the MIDI appears (e.g., the CD on which it was originally released). This Composite exists in the Release Notification Message Suite Standard, to support the identification and matching of MIDI information. */
	repeated HostSoundCarrier host_sound_carrier = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to the MIDI. */
	repeated IndirectResourceContributor indirect_resource_contributor = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the MIDI containing Keywords. */
	repeated Keywords keywords = 10;
	/* First defined in: ern36 */
	/* A Composite containing the Name of the Label under which the Release is to be marketed. */
	repeated LabelName label_name = 11;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the MidiDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 12;
	/* First defined in: ern36 */
	/* A Composite containing a Comment about the promotion and marketing of the MIDI. */
	optional Comment marketing_comment = 13;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the MIDI was originally published, whether for physical or electronic/online distribution. */
	optional EventDate original_resource_release_date = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the MIDI according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 15;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the MIDI was re-mastered (usually digitally). */
	optional EventDate remastered_date = 16;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the MIDI. */
	repeated DetailedResourceContributor resource_contributor = 17;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the MIDI was published, whether for physical or
                  electronic/online distribution. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate resource_release_date = 18;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the MIDI. */
	optional RightsAgreementId rights_agreement_id = 19;
	/* First defined in: ern36 */
	/* A Composite containing details of RightsController of Rights in the MIDI. */
	repeated TypedRightsController rights_controller = 20;
	/* First defined in: ern381 -> Updated in ern381 */
	/* The number indicating the order of the MIDI in a group of MIDIs in a Release. */
	optional int32 sequence_number = 21;
	/* First defined in: ern36 */
	/* A Composite containing details of a Synopsis of the MIDI. */
	optional Synopsis synopsis = 22;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the MIDI. */
	repeated TechnicalMidiDetails technical_midi_details = 23;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the MIDI details
                     apply. Either this Element or ExcludedTerritory shall be present, but not both.
                     The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged;
                     TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard.  */
	repeated CurrentTerritoryCode territory_code = 24;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the MIDI. */
	repeated Title title = 25;
}

/* Defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
/* A Composite containing details of Identifiers of a Midi. */
message MidiId {
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the Midi. */
	repeated ProprietaryId proprietary_id = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a MidiType. */
message MidiType {
	/* First defined in: ern36 */
	/* The Namespace of the MidiType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the MidiType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.MidiType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a MusicalWork. */
message MusicalWork {
	/* First defined in: ern36 */
	/* The Flag indicating whether the MusicalWork Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided MusicalWork data with the now provided data. */
	optional bool is_updated = 1;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the MusicalWork as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
	/* First defined in: ern36 */
	/* A Composite containing details a MusicalWorkContributor to the MusicalWork. */
	repeated MusicalWorkContributor musical_work_contributor = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of Descriptors and other attributes of the MusicalWork which may vary according to Territory of release.  */
	repeated MusicalWorkDetailsByTerritory musical_work_details_by_territory = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWorkId of the MusicalWork. */
	repeated MusicalWorkId musical_work_id = 5;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the MusicalWork within the Release which contains it. This is a LocalMusicalWorkAnchor starting with the letter W. */
	optional string musical_work_reference = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the MusicalWork. */
	repeated MusicalWorkType musical_work_type = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a ReferenceTitle of the MusicalWork. */
	repeated ReferenceTitle reference_title = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a RightShare for the MusicalWork. */
	repeated RightShare right_share = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork. */
	optional RightsAgreementId rights_agreement_id = 10;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details a MusicalWorkContributor. */
message MusicalWorkContributor {
	/* First defined in: ern36 */
	/* A Composite containing details of a role played by the Contributor in relation to the MusicalWork. Note: This can be used in a DdexMessage in relation to any Work, Performance or Fixation any of which may form the whole or part of the Resource itself. Example: if an 'AssociatedPerformer' is shown as a Contributor to a MusicalWork it refers to a performer of a Resource (e.g. a SoundRecording) expressing the MusicalWork. */
	repeated MusicalWorkContributorRole musical_work_contributor_role = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 3;
	/* First defined in: ern36 */
	/* The number indicating the order of the MusicalWorkContributor in a group of MusicalWorkContributors that have contributed to a MusicalWork. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a society affiliation for the MusicalWorkContributor. */
	repeated SocietyAffiliation society_affiliation = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a MusicalWorkContributorRole. Note: This can be used in a DdexMessage in relation to any Work, Performance or Fixation any of which may form the whole or part of the Resource itself. Example: if an 'AssociatedPerformer' is shown as a Contributor to a MusicalWork it refers to a performer of a Resource (e.g. a SoundRecording) expressing the MusicalWork. */
message MusicalWorkContributorRole {
	/* First defined in: ern36 */
	/* The Namespace of the MusicalWorkContributorRole. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the MusicalWorkContributorRole. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.MusicalWorkContributorRole ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors and other attributes of a MusicalWork which may vary according to Territory of release.  */
message MusicalWorkDetailsByTerritory {
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 1;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the MusicalWork
                     details do not apply. Either this Element or Territory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 2;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the MusicalWorkDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 3;
	/* First defined in: ern36 */
	/* A Composite containing details a MusicalWorkContributor to the MusicalWork. */
	repeated MusicalWorkContributor musical_work_contributor = 4;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the MusicalWork
                     details apply. Either this Element or ExcludedTerritory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard.  */
	repeated CurrentTerritoryCode territory_code = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a MusicalWorkId. */
message MusicalWorkId {
	/* First defined in: ern36 */
	/* A MusicalWorkId identifying a MusicalWork within the catalog of its Composer (typically of classical music) according to a standardized numbering (e.g. 'K' numbers for Koechel's catalog of Mozart). */
	repeated string composer_catalog_number = 1;
	/* First defined in: ern36 */
	/* The ISWC (International Standard Musical Work Code defined in ISO 15707) identifying the MusicalWork. An ISWC comprises three parts: the letter 'T', followed by nine digits and then one check digit. */
	optional string i_s_w_c = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 3;
	/* First defined in: ern36 */
	/* The MusicalWorkId identifying the MusicalWork within the catalog of its Composer (typically of classical music) as an opus number. */
	optional string opus_number = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the MusicalWork. */
	repeated ProprietaryId proprietary_id = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a MusicalWorkType. */
message MusicalWorkType {
	/* First defined in: ern36 */
	/* The Namespace of the MusicalWorkType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the MusicalWorkType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.MusicalWorkType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Name. */
message Name {
	/* First defined in: ern36 */
	/* The Language and script of the Name as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
message NewReleaseMessage {
	/* First defined in: ern36 */
	/* The Identifier of the Version of the business profile used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional string business_profile_version_id = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a Price change. */
	optional CatalogTransfer catalog_transfer = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Collections contained in Releases for which data is provided in the NewReleaseMessage. */
	optional CollectionList collection_list = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more CueSheets contained in Releases for which data is provided in the NewReleaseMessage. */
	optional CueSheetList cue_sheet_list = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Deals governing the Usage of the Releases in the Message. */
	optional DealList deal_list = 5;
	/* First defined in: ern36 */
	/* A Flag indicating whether the NewReleaseMessage is sent as part of a backfill activity (as opposed to providing ongoing deliveries of frontline Releases) (=True) or not (=False). When this element is not present, then no information on whether it is part of a backfill activity or not is provided. */
	optional bool is_backfill = 6;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the NewReleaseMessage as defined in IETF RfC 4646. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 7;
	/* First defined in: ern36 */
	/* The MessageHeader for the NewReleaseMessage. */
	optional MessageHeader message_header = 8;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the XML schema used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional string message_schema_version_id = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more DDEX Releases contained in the NewReleaseMessage. */
	optional ReleaseList release_list = 10;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the release profile used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional string release_profile_version_id = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Resources. */
	optional ResourceList resource_list = 12;
	/* First defined in: ern36 */
	/* The indicator which distinguishes whether the Message contains original data or updates to previously sent data. This element is deprecated. DDEX advises that it may be removed at a future date and therefore recommends against using it. */
	optional ern383.avs.UpdateIndicator update_indicator = 13;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more MusicalWorks, a Performance of which is contained in the Resources of the NewReleaseMessage. */
	optional WorkList work_list = 14;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an OperatingSystemType. */
message OperatingSystemType {
	/* First defined in: ern36 */
	/* The Namespace of the OperatingSystemType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the OperatingSystemType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the OperatingSystemType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional ern383.avs.OperatingSystemType ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a PLine. */
message PLine {
	/* First defined in: ern36 */
	/* The Language and script of the PLineText as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* The Name of the company releasing the Creation. This may be an owner or a licensee of the Creation. */
	optional string p_line_company = 2;
	/* First defined in: ern36 */
	/* The text of the PLine. */
	optional string p_line_text = 3;
	/* First defined in: ern36 */
	/* A Type of PLine. This is represented in an XML schema as an XML Attribute. If this Attribute is not provided, it is assumed that the PLine is a OriginalPLine. */
	optional ern383.avs.PLineType p_line_type = 4;
	/* First defined in: ern36 */
	/* The Year of the PLine. */
	optional uint32 year = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ParentalWarningType. */
message ParentalWarningType {
	/* First defined in: ern36 */
	/* The Namespace of the ParentalWarningType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ParentalWarningType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ParentalWarningType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Party. Parties are typically described through Names and/or Identifiers. */
message PartyDescriptor {
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a PartyId. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
message PartyId {
	/* First defined in: ern36 */
	/* The Flag indicating whether the PartyId is a DPID (=True) or not (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_d_p_i_d = 1;
	/* First defined in: ern36 */
	/* The Flag indicating whether the PartyId is an ISNI (=True) or not (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_i_s_n_i = 2;
	/* First defined in: ern36 */
	/* The Namespace of the PartyId if it belongs to a proprietary Party xs:ID scheme. If the PartyId is a DPID, the Namespace Element must not be used. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 3;
	optional string ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a PartyName. Name details for a Party typically either contain a FullName or a KeyName. */
message PartyName {
	/* First defined in: ern36 */
	/* A Composite containing a short version of the PartyName (e.g. for use on devices with a small display). */
	optional Name abbreviated_name = 1;
	/* First defined in: ern36 */
	/* A Composite containing the complete Name of the Party, in its normal form of presentation (e.g. John H. Smith, Acme Music Inc, A Composite containing the Beatles). */
	optional Name full_name = 2;
	/* First defined in: ern36 */
	/* The FullName transcribed using 7-bit ASCII code. */
	optional string full_name_ascii_transcribed = 3;
	/* First defined in: ern36 */
	/* A Composite containing the complete Name of the Party in the form in which it normally appears in an alphabetic index, with the KeyName first (e.g. Smith, John H.; Beatles, A Composite containing the). */
	optional Name full_name_indexed = 4;
	/* First defined in: ern36 */
	/* A Composite containing the Part of a Name of the Party normally used to index an entry in an alphabetical list, such as 'Smith' (in John Smith) or 'Garcia Marquez' or 'Madonna' or 'Francis de Sales' (in Saint Francis de Sales). For persons, this normally corresponds to the 'family name' or names, which in Western name forms usually comes as a surname at the end of a FullName, and in Asian name forms often at the beginning of a FullName.  */
	optional Name key_name = 5;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the PartyName as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 6;
	/* First defined in: ern36 */
	/* A Composite containing the Name(s) following the KeyName. Example:'Ibrahim' (in Anwar Ibrahim). This is common, e.g., in many Asian personal name forms where a FullName begins with the KeyName, which is followed by other names. */
	optional Name names_after_key_name = 7;
	/* First defined in: ern36 */
	/* A Composite containing the Name(s) preceding the KeyName in the FullName (and that is placed after it in a FullNameIndexed). Examples: 'George' in 'George Michael'; 'John Fitzgerald' in 'John Fitzgerald Kennedy'. Not all PartyNames have a NamesBeforeKeyName (e.g. Madonna, EMI Music Inc). */
	optional Name names_before_key_name = 8;
}

/* Defined in: ern381 -> ern383 */
/* A Composite containing details of a PercentageRate. */
message Percentage {
	/* First defined in: ern381 */
	/* A Flag indicating whether a PercentageRate is given as a value in the range [0,1] (=true) instead of a value in the range [0,100] (=false). This is represented in an XML schema as an XML Attribute. Absence of this attribute is synonymous with false. */
	optional bool has_max_value_of_one = 1;
	optional double ext_value = 2;
}

/* Defined in: ern381 -> ern383 */
/* A Composite containing details of a Performance. */
message Performance {
	/* First defined in: ern381 */
	/* A Composite containing details of the Date of the Performance. This is a string with the syntax YYYY[-MM[-DD]]. The Place of the Performance should not be specified in the TerritoryCode and LocationDescription attributes. Instead, the sibling Territory element should be used. */
	optional EventDate date = 1;
	/* First defined in: ern381 */
	/* The territory of the Performance. */
	optional AllTerritoryCode territory = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details about a Period of Time. Periods are typically describedby at least a StartDate or EndDate (or StartDateTime or EndDateTime) where the StartDate(Time) and EndDate(Time) are included in the Period. Thus a one-day period can be described by using the same date in the StartDate and EndDate. */
message Period {
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of an Event that marks the end of the Period (in ISO 8601:2004 format: YYYY-MM-DD). The EndDate must not be earlier than the StartDate if both are provided. */
	optional EventDate end_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the DateTime and Place of an Event that marks the end of the Period (in ISO 8601:2004 format: YYYY-DD-MMThh:mm:ss). The EndDateTime must not be earlier than the StartDateTime if both are provided. */
	optional EventDateTime end_date_time = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of an Event that marks the beginning of the Period (in ISO 8601:2004 format: YYYY-MM-DD). The StartDate must be earlier than the EndDate if both are provided. */
	optional EventDate start_date = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of the DateTime and Place of an Event that marks the beginning of the Period (in ISO 8601:2004 format: YYYY-DD-MMThh:mm:ss). The StartDateTime must be earlier than the EndDateTime if both are provided. */
	optional EventDateTime start_date_time = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of physical returns. */
message PhysicalReturns {
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Date which is the latest one for
                  physical returns (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional ddex_IsoDate latest_date_for_physical_returns = 1;
	/* First defined in: ern36 */
	/* The Flag indicating whether physical returns are allowed (=True) or not (=False). */
	optional bool physical_returns_allowed = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a preview. */
message PreviewDetails {
	/* First defined in: ern36 */
	/* The position of the preview measured in Pixels or millimetres  from the bottom right corner of the Resource. */
	optional double bottom_right_corner = 1;
	/* First defined in: ern36 */
	/* A Type of expression indicating how this should be perceived, e.g. as instruction (meaning that this has to be done to create the preview) or as information (meaning that this has been done to craete the preview). */
	optional ern383.avs.ExpressionType expression_type = 2;
	/* First defined in: ern36 */
	/* A Composite containing a Description of the Type of Part that the preview relates to, e.g. chorus or intro. */
	optional Description part_type = 3;
	/* First defined in: ern36 */
	/* The position of the preview measured in Pixels or millimetres from the top left corner of the Resource. */
	optional double top_left_corner = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Price. */
message Price {
	/* First defined in: ern36 */
	/* The Currency of the Price (represented by an ISO 4217 CurrencyCode). This is represented in an XML schema as an XML Attribute.  */
	optional ern383.avs.CurrencyCode currency_code = 1;
	optional double ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Price. */
message PriceInformation {
	/* First defined in: ern36 */
	/* A Composite containing details of a wholesale Price for a single unit, which informs the informs the DSP of the Price the Release should be offered at. Note that the size of a bulk order is defined in the contract between MessageSender and the MessageRecipient. This element should not be combined with PriceType. */
	optional Price bulk_order_wholesale_price_per_unit = 1;
	/* First defined in: ern36 */
	/* A Composite containing a Description of the differences between multiple PriceInformation Composites. */
	optional Description description = 2;
	/* First defined in: ern36 */
	/* A Composite containing a Type of Price according to its value range. Typical examples include 'budget' and 'front line'. This is an informative element which is not meant to be used to send instructions on the Price to be used by the DSP. */
	optional PriceRangeType price_range_type = 3;
	/* First defined in: ern36 */
	/* A Composite containing further details of the Price, including a Price code that informs the DSP of the Price the Release should be offered at, often in combination with a rate card. This element should not be combined with WholesalePricePerUnit or BulkOrderWholesalePricePerUnit. */
	optional PriceType price_type = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a suggested retail Price. */
	optional Price suggested_retail_price = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a wholesale Price for a single unit of Usage, which informs the informs the DSP of the Price the Release should be offered at. Note that this Price applies to all UseTypes referenced in a DealTerm Composite. This element should not be combined with PriceType. */
	optional Price wholesale_price_per_unit = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a PriceRangeType. */
message PriceRangeType {
	/* First defined in: ern36 */
	/* The Namespace of the PriceRangeType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional ern383.avs.PriceRangeType ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a PriceType. */
message PriceType {
	/* First defined in: ern36 */
	/* The Namespace of the PriceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional ern383.avs.PriceType ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a PromotionalCode. */
message PromotionalCode {
	/* First defined in: ern36 */
	/* The Namespace of the PromotionalCode. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ProprietaryIdentifier. */
message ProprietaryId {
	/* First defined in: ern36 */
	/* The Namespace of the ProprietaryId. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* Defined in: ern381 -> ern383 */
message PurgeReleaseMessage {
	/* First defined in: ern381 */
	/* The Language and script for the Elements of the CatalogListMessage as defined in IETF RfC 5646. Language and Script are provided as lang[-scipt][-region][-variant]. This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern381 */
	/* The MessageHeader for the NewReleaseMessage. */
	optional MessageHeader message_header = 2;
	/* First defined in: ern381 */
	/* The Identifier of the Version of the XML schema used for the Message. This is represented in an XML schema as an XML Attribute. */
	optional string message_schema_version_id = 3;
	/* First defined in: ern381 */
	/* A Composite containing details of a DDEX Release to be purged. */
	optional PurgedRelease purged_release = 4;
}

/* Defined in: ern381 -> ern383 */
/* A Composite containing details of a DDEX Release to be purged. */
message PurgedRelease {
	/* First defined in: ern381 */
	/* A Composite containing details of ReleaseIds. If available, a GRid has to be used. If the Release contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ReleaseId release_id = 1;
	/* First defined in: ern381 */
	/* A Composite containing details of a Contributor to the Release. */
	repeated DetailedResourceContributor resource_contributor = 2;
	/* First defined in: ern381 */
	/* A Composite containing details of a Title of the Release. */
	repeated Title title = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Purpose. */
message Purpose {
	/* First defined in: ern36 */
	/* The Namespace of the Purpose. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the Purpose. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.Purpose ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a RatingAgency. */
message RatingAgency {
	/* First defined in: ern36 */
	/* The Namespace of the RatingAgency. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the RatingAgency. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.RatingAgency ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Reason. */
message Reason {
	/* First defined in: ern36 */
	/* The Language and script of the Reason as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ReasonType. */
message ReasonType {
	/* First defined in: ern36 */
	/* The Namespace of the ReasonType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ReasonType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ReasonType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ReferenceTitle. */
message ReferenceTitle {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ReferenceTitle as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a SubTitle of the ReferenceTitle, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets (where the SubTitle is called Version Title). */
	optional SubTitle sub_title = 2;
	/* First defined in: ern36 */
	/* A Composite containing the text of the ReferenceTitle. */
	optional TitleText title_text = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to a Resource, Release or Product. */
message RelatedRelease {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ReleatedRelease as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the collection of tracks for the Release (e.g. the equivalent physical album on vinyl) was or will be first made available for Usage, whether for physical or electronic/online distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate original_release_date = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the ReferenceTitle of the Release. */
	optional ReferenceTitle reference_title = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the related Release was or will be first made available for Usage in its current form, whether for physical or electronic/online distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate release_date = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds. If available, a GRid shall always to be used. If the Release contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. More than one of these identifiers may be provided. */
	repeated ReleaseId release_id = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the relationship between the two Releases. */
	optional ReleaseRelationshipType release_relationship_type = 6;
	/* First defined in: ern36 */
	/* A Composite containing summary details of Descriptors and other attributes of the Release which may vary according to Territory of Release. Territory of Release may be the world. */
	repeated ReleaseSummaryDetailsByTerritory release_summary_details_by_territory = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the Release. */
	optional RightsAgreementId rights_agreement_id = 8;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more offers related to one or more Releases. */
message RelatedReleaseOfferSet {
	/* First defined in: ern36 */
	/* A Composite containing details of a Deal that is available as an offer related to the Release(s). If no Deal is provided, the parent Release and the Releases listed in the RelatedReleaseOfferSet are bundled and offered under the ReleaseOffer associated with the parent Release. */
	repeated Deal deal = 1;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the RelatedReleaseOfferSet as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
	/* First defined in: ern36 */
	/* A Composite containing a Description of the Release(s) for which the offer(s) are available.This Element is designed to be used to describe entire collections or repertoires, and is not to be used to list individual Releases by xs:ID or Title. */
	optional Description release_description = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds of the Release(s) for which the offer(s) are available. */
	repeated ReleaseId release_id = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a DDEX Release. */
message Release {
	/* First defined in: ern36 */
	/* A Composite containing details of a WebPage for the Artist. */
	repeated WebPage artist_profile_page = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the Release. */
	repeated CLine c_line = 2;
	/* First defined in: ern36 */
	/* The sum of the Durations of all Resources contained in the Release (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of promotional or other material related to the Release. */
	repeated ExternalResourceLink external_resource_link = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date of the Event in which the collection of tracks for the Release (e.g. the equivalent physical album on vinyl) was or will be first made globally available for Usage, whether for physical or electronic/online distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate global_original_release_date = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date of the Event in which the Release was or will be first made globally available for Usage in its current form, whether for physical or electronic/online distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate global_release_date = 6;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Release is a main one as defined in the relevant Profile Standard (=True) or not (=False). This is represented in an XML schema as an XML Attribute. */
	optional bool is_main_release = 7;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Release as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 8;
	/* First defined in: ern36 */
	/* The predominant Language of dubbing used in the  Resources (represented by an ISO 639-2 LanguageCode). */
	repeated ern383.avs.IsoLanguageCode language_of_dubbing = 9;
	/* First defined in: ern36 */
	/* The predominant original Language of the Performance recorded in the Resources (represented by an ISO 639-2 LanguageCode). */
	repeated ern383.avs.IsoLanguageCode language_of_performance = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the PLine for the Release. */
	repeated PLine p_line = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of the ReferenceTitle of the Release. */
	optional ReferenceTitle reference_title = 12;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Collections contained in the Release. */
	optional ReleaseCollectionReferenceList release_collection_reference_list = 13;
	/* First defined in: ern36 */
	/* A Composite containing details of Descriptors and other attributes of the Release which may vary according to Territory of release. */
	repeated ReleaseDetailsByTerritory release_details_by_territory = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds. If available, a GRid has to be used. If the Release contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	repeated ReleaseId release_id = 15;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the Release. Used to link the Release to one or more Deal(s). This is a LocalReleaseAnchor starting with the letter R. */
	repeated string release_reference = 16;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Resources contained in the Release. */
	optional ReleaseResourceReferenceList release_resource_reference_list = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of the form in which a ReleaseCreator anticipates offering the Release to Consumers. This may be overridden by the ReleaseType for specific Territories as specified in the ReleaseDetailsByTerritory Composite. */
	repeated ReleaseType release_type = 18;
	/* First defined in: ern36 */
	/* A Composite containing details of a ResourceOmissionReason. */
	optional ResourceOmissionReason resource_omission_reason = 19;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the Release. */
	optional RightsAgreementId rights_agreement_id = 20;
	/* First defined in: ern36 */
	/* A Composite containing details of the A Composite containing details of the SalesReportingProxyReleaseId. */
	repeated SalesReportingProxyReleaseId sales_reporting_proxy_release_id = 21;
	/* First defined in: ern36 */
	/* The predominant Language of SubTitles in the  Resources (represented by an ISO 639-2 LanguageCode). */
	repeated ern383.avs.IsoLanguageCode sub_title_language = 22;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ReleaseCollectionReference. */
message ReleaseCollectionReference {
	/* First defined in: ern36 */
	/* A Type of Collection in the context of a Release. This is represented in an XML schema as an XML Attribute. */
	optional ern383.avs.ReleaseResourceType release_resource_type = 1;
	optional ddex_LocalCollectionAnchorReference ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of ReleaseCollectionReferences. */
message ReleaseCollectionReferenceList {
	/* First defined in: ern36 */
	/* The number of referenced Collections (typically Chapters). */
	optional int32 number_of_collections = 1;
	/* First defined in: ern36 */
	/* A Composite containing a ReleaseCollectionReference for a Collection (specific to this Message). The referenced Collection has to be of CollectionType Series, Season or Episode. */
	repeated ReleaseCollectionReference release_collection_reference = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more Deals pertaining to one or more Releases. */
message ReleaseDeal {
	/* First defined in: ern36 */
	/* A Composite containing details of a Deal governing the Usage of all Releases identified in the ReleaseDeal Composite. */
	repeated Deal deal = 1;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of a Release in the Deal. This is a LocalReleaseAnchorReference starting with the letter R. */
	repeated string deal_release_reference = 2;
	/* First defined in: ern371 -> Updated in ern371 */
	/* The Date at which the MessageRecipient is
                  expected to cancel all Deals for the Release and replace them with the Deals
                  provided within the current Message. The EffectiveDate is typically the date on
                  which the NewReleaseMessage is being sent. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional ddex_IsoDate effective_date = 3;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ReleaseDeal as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors and other attributes of a Release which may vary according to Territory of release. */
message ReleaseDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of the AdministratingRecordCompany for the Release.  */
	repeated AdministratingRecordCompany administrating_record_company = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a rating for the Release. */
	repeated AvRating av_rating = 2;
	/* First defined in: ern371 */
	/* A Composite containing details of the
                  CLine for the Release. */
	repeated CLine c_line = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a Character in the Release. A Character may be described through Name, Identifier and Roles. */
	repeated Character character = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of the DisplayArtist for the Release. The DisplayArtist may be described through Name, Identifier and Roles. */
	repeated Artist display_artist = 5;
	/* First defined in: ern36 */
	/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Release to a Consumer. */
	repeated Name display_artist_name = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a DisplayConductor for the Release. A DisplayConductor may be described through Name, Identifier and Roles. */
	repeated Artist display_conductor = 7;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the
                     ReleaseSummaryDetailsByTerritory do not apply. Either this Element or Territory
                     shall be present, but not both. The use of ISO TerritoryCodes (or the term
                     'Worldwide”) is strongly encouraged; TIS TerritoryCodes should only be used if
                     both MessageSender and MessageRecipient are familiar with this
                     standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a related Release File that a DSP can obtain. */
	repeated File file = 9;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain any related Release File. */
	repeated Description file_availability_description = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the Release belongs. */
	repeated Genre genre = 11;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Release is a multiartist compilation (=True) or not (=False). */
	optional bool is_multi_artist_compilation = 12;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the Release containing Keywords. */
	repeated Keywords keywords = 13;
	/* First defined in: ern36 */
	/* A Composite containing the Name of the Label for the Release. */
	repeated LabelName label_name = 14;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ReleaseSummaryDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 15;
	/* First defined in: ern36 */
	/* A Composite containing a Comment about the promotion and marketing of the Release. */
	optional Comment marketing_comment = 16;
	/* First defined in: ern36 */
	/* A number of units (typically a CD or a DVD) contained in a physical Release. This Element is for boxed sets. */
	optional int32 number_of_units_per_physical_release = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Release was or will be first made available in electronic/online format for Usage (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate original_digital_release_date = 18;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the collection of tracks for the Release (e.g. the equivalent physical album on vinyl) was or will be first made available for Usage, whether for physical or electronic/online distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate original_release_date = 19;
	/* First defined in: ern371 */
	/* A Composite containing details of the
                  PLine for the Release. */
	repeated PLine p_line = 20;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the Release according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 21;
	/* First defined in: ern36 */
	/* A Composite containing details of a Release (or a PhysicalProduct or a DigitalProduct derived from such a Release) which is related to this Release. */
	repeated RelatedRelease related_release = 22;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Release was or will be first made available for Usage in its current form, whether for physical or electronic/online distribution (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional EventDate release_date = 23;
	/* First defined in: ern36 */
	/* A Composite containing details of the form in which a ReleaseCreator anticipates offering the Release to Consumers. This overrides the ReleaseType specified globally for the Release. */
	repeated ReleaseType release_type = 24;
	/* First defined in: ern36 */
	/* A Composite containing details of a group of some or all of the Resources in the Release. ResourceGroups are used to signal groupings or sequences of Resources within a Release. Examples include individual carriers in a multi-carrier Release or classical Work groupings as well as the default order of Resources within a Release. */
	repeated ResourceGroup resource_group = 25;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the Release. */
	optional RightsAgreementId rights_agreement_id = 26;
	/* First defined in: ern36 */
	/* A Composite containing details of a Synopsis of the Release. */
	optional Synopsis synopsis = 27;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the
                     ReleaseSummaryDetailsByTerritory apply. Either this Element or
                     ExcludedTerritory shall be present, but not both. The use of ISO TerritoryCodes
                     (or the term 'Worldwide”) is strongly encouraged; TIS TerritoryCodes should
                     only be used if both MessageSender and MessageRecipient are familiar with this
                     standard. */
	repeated CurrentTerritoryCode territory_code = 28;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Release. */
	repeated Title title = 29;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ReleaseId. If available, a GRid should always to be used. If the Release contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
message ReleaseId {
	/* First defined in: ern36 */
	/* A Composite containing details of the CatalogNumber of the Release. */
	optional CatalogNumber catalog_number = 1;
	/* First defined in: ern36 */
	/* The GRid identifying the Release. This is the preferred Element and is mandatory if a GRid is available. A GRid comprises four parts: the xs:string 'A1', followed by five alphanumeric characters, ten alphanumeric characters and and one alphanumeric character. */
	optional string g_rid = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the ICPN used as proxy for identification of the Release. Only applicable when the Release is an abstraction of a complete PhysicalProduct. An ICPN comprises 12 or 13 digits, depending whether it is an EAN (13) or a UPC (12). */
	optional ICPN i_c_p_n = 3;
	/* First defined in: ern36 */
	/* The ISRC (International Standard Recording Code as defined in  ISO 3901) used as proxy for identification of the Release. Only applicable when the Release only contains one SoundRecording or one MusicalWorkVideo. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits.  */
	optional string i_s_r_c = 4;
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the Release. */
	repeated ProprietaryId proprietary_id = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more Releases. */
message ReleaseList {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ReleaseList as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a DDEX Release. */
	repeated Release release = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ReleaseRelationshipType, e.g. between an AudioClipRelease and a VideoClipRelease. */
message ReleaseRelationshipType {
	/* First defined in: ern36 */
	/* The Namespace of the ReleaseRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ReleaseRelationshipType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ReleaseRelationshipType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ReleaseResourceReference. */
message ReleaseResourceReference {
	/* First defined in: ern36 */
	/* A Type of Resource in the context of a Release. This is represented in an XML schema as an XML Attribute. */
	optional ern383.avs.ReleaseResourceType release_resource_type = 1;
	optional ddex_LocalResourceAnchorReference ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of ReleaseResourceReferences. */
message ReleaseResourceReferenceList {
	/* First defined in: ern36 */
	/* A Composite containing a Reference for a Resource (specific to this Message). The LocalAnchorReference in this Composite is a xs:string starting with the letter A. */
	repeated ReleaseResourceReference release_resource_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing summary details of Descriptors and other attributes of a Release which may vary according to Territory of Release. */
message ReleaseSummaryDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing the Name to be used by a DSP when presenting Artist details of the Release to a Consumer. */
	repeated Name display_artist_name = 1;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the
                     ReleaseSummaryDetailsByTerritory do not apply. Either this Element or Territory
                     shall be present, but not both. The use of ISO TerritoryCodes (or the term
                     'Worldwide”) is strongly encouraged; TIS TerritoryCodes should only be used if
                     both MessageSender and MessageRecipient are familiar with this
                     standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 2;
	/* First defined in: ern36 */
	/* A Composite containing the Name of the Label for the Release. */
	repeated LabelName label_name = 3;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ReleaseSummaryDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the Release. */
	optional RightsAgreementId rights_agreement_id = 5;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the
                     ReleaseSummaryDetailsByTerritory apply. Either this Element or
                     ExcludedTerritory shall be present, but not both. The use of ISO TerritoryCodes
                     (or the term 'Worldwide”) is strongly encouraged; TIS TerritoryCodes should
                     only be used if both MessageSender and MessageRecipient are familiar with this
                     standard. */
	repeated CurrentTerritoryCode territory_code = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ReleaseType. */
message ReleaseType {
	/* First defined in: ern36 */
	/* The Namespace of the ReleaseType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ReleaseType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ReleaseType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ResourceContainedResourceReference for the case where one Resource contains another one. */
message ResourceContainedResourceReference {
	/* First defined in: ern36 */
	/* The total Duration of the Resource that has been used in a specified context (this may be less than the total Duration of the Resource) (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration_used = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the Purpose of the usage. */
	optional Purpose purpose = 2;
	/* First defined in: ern36 */
	/* A Reference for a Resource (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	optional string resource_contained_resource_reference = 3;
	/* First defined in: ern36 */
	/* The start point of the preview given in seconds from the start of the referenced Resource. */
	optional double start_point = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more ResourceContainedResourceReferences.  */
message ResourceContainedResourceReferenceList {
	/* First defined in: ern36 */
	/* A Composite containing details of a ResourceContainedResourceReference. */
	repeated ResourceContainedResourceReference resource_contained_resource_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of the Name, Identifier and role(s) of a Contributor to a Resource. */
message ResourceContributor {
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of the additional roles played by the Artist. */
	repeated ArtistRole additional_roles = 1 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of the kinds of usage for which rights have been delegated by the Artist. */
	optional ArtistDelegatedUsageRights artist_delegated_usage_rights = 2 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of contact Identifiers of the Artist. */
	optional ContactId contact_information = 3 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of the Date and Place of birth. */
	optional EventDate date_and_place_of_birth = 4 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of the Date and Place of death. */
	optional EventDate date_and_place_of_death = 5 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of a typical or main Genre relating to the Artist. */
	repeated Genre genre = 6 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of a Type of an agreement that covers the Artist's participation in making a SoundRecording. */
	optional GoverningAgreementType governing_agreement_type = 7 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Type of musical instrument played by the Artist. */
	repeated string instrument_type = 8 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Flag indicating whether the Contributor is an Artist that has a contract for its part in creating the Resource (=True) or not (=False). */
	optional bool is_contracted_artist = 9 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Flag indicating whether the Contributor is a featured Artist (=True) or not (=False). */
	optional bool is_featured_artist = 10 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of a membership in a collective rights management organization. */
	repeated Membership membership = 11 [deprecated = true];
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 12;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 13;
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Type of (musical) instrument primarily played by the Artist. */
	optional string primary_instrument_type = 14 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A Composite containing details of the primary role played by the Artist in relation to other Artists. */
	optional ArtistRole primary_role = 15 [deprecated = true];
	/* First defined in: ern36 */
	/* A Composite containing details of a role played by the Contributor. */
	repeated ResourceContributorRole resource_contributor_role = 16;
	/* First defined in: ern36 */
	/* The number indicating the order of the ResourceContributor in a group of ResourceContributors that have contributed to a Resource. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 17;
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* Sex */
	optional ern383.avs.Sex sex = 18 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* A country of performance (represented by an ISO 3166-1 TerritoryCode). */
	repeated ern383.avs.TerritoryCode territory_of_performance = 19 [deprecated = true];
	/* First defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
	/* The country of main residency of the Artist (represented by an ISO 3166-1 TerritoryCode). */
	optional ern383.avs.TerritoryCode territory_of_residency = 20 [deprecated = true];
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ResourceContributorRole. Note: This can be used in a DdexMessage in relation to any Work, Performance or Fixation any of which may form the whole or part of the Resource itself. */
message ResourceContributorRole {
	/* First defined in: ern36 */
	/* The Namespace of the ResourceContributorRole. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ResourceContributorRole. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ResourceContributorRole ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ResourceGroup. ResourceGroups are used to signal groupings or sequences of Resources within a Release. Examples include individual carriers in a multi-carrier Release or classical Work groupings as well as the default order of Resources within a Release. */
message ResourceGroup {
	/* First defined in: ern36 */
	/* A Composite containing details of a Carrier. */
	repeated CarrierType carrier_type = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the DisplayArtist for the ResourceGroup. The DisplayArtist may be described through Name, Identifier and Roles. */
	repeated Artist display_artist = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a DisplayComposer for the ResourceGroup. A DisplayComposer may be described through Name, Identifier and Roles. */
	repeated Artist display_composer = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a DisplayConductor for the ResourceGroup. A DisplayConductor may be described through Name, Identifier and Roles. */
	repeated Artist display_conductor = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to this ResourceGroup. */
	repeated IndirectResourceContributor indirect_resource_contributor = 5;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ResourceGroup as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds of a Release which has the same content as the ResourceGroup. If available, a GRid has to be used. If the Release contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ReleaseId release_id = 7;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to this ResourceGroup. This includes roles such as the compiler of the
                  ResourceGroup, and may summarize details of Contributors to individual
                  SoundRecordings or other content. */
	repeated DetailedResourceContributor resource_contributor = 8;
	/* First defined in: ern36 */
	/* A ResourceGroup contained within this ResourceGroup. ResourceGroups are used to signal groupings or sequences of Resources within a Release. Examples include individual carriers in a multi-carrier Release or classical Work groupings as well as the default order of Resources within a Release. */
	repeated ResourceGroup resource_group = 9;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                     Resource contained in the ResourceGroup. */
	repeated ExtendedResourceGroupContentItem resource_group_content_item = 10;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of a Release which has the same content as the ResourceGroup. This is a LocalReleaseAnchorReference starting with the letter R. */
	optional string resource_group_release_reference = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of a Resource contained in the ResourceGroup. */
	optional ResourceGroupResourceReferenceList resource_group_resource_reference_list = 12;
	/* First defined in: ern36 */
	/* The number indicating the order of the ResourceGroup within all ResourceGroups at this level. The default value is 1, and the value must be incremented by 1 for each ResourceGroup occurring at a particular level. The SequenceNumber is unique within its ResourceGroupLevelNumber. */
	optional int32 sequence_number = 13;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the ResourceGroup. Typically this will apply to 'sub' ResourceGroups within a hierarchy, e.g., different Albums in a Set. */
	repeated Title title = 14;
}

/* Defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
/* A Composite containing details of a Resource which is a ContentItem of a ResourceGroup. */
message ResourceGroupContentItem {
	/* First defined in: ern36 */
	/* The Duration of the ContentItem featured, if it is a SoundRecording or Video (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). This Duration may be less than the normal Duration of the ContentItem, if only a part of it is included. */
	optional string duration = 1;
	/* First defined in: ern36 */
	/* The Flag indicating whether a Resource in a Release is additional to those on the original Release of which this is a Version (=True) or not (=False). If this Element is not provided, it is assumed that this is False. */
	optional bool is_bonus_resource = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether a Resource in a Release is hidden in some way from the Consumer (=True) or not (=False). If this Element is not provided, it is assumed that this is False. */
	optional bool is_hidden_resource = 3;
	/* First defined in: ern36 */
	/* The Flag indicating whether a Resource in a Release may be made available to consumers despite the distribution of the containing Release not having been permitted (=True) or not (=False). If this Element is not provided, it is assumed that this is False. */
	optional bool is_instant_gratification_resource = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a ReleaseResourceReference (specific to this Message) for a Resource which is linked to this ContentItem. Example: an Image, Text or NonMusicalWorkVideo associated with a SoundRecording. This LocalAnchorReference is a xs:string starting with the letter A. */
	repeated LinkedReleaseResourceReference linked_release_resource_reference = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds of a Release which has the same content as the ResourceGroupContentItem. If available, a GRid has to be used. If the Release contains only one SoundRecording, the ISRC of the SoundRecording may be used instead. If the Release is an abstraction of a complete PhysicalProduct (such as a CD Album), the ICPN of the PhysicalProduct may be used instead. */
	optional ReleaseId release_id = 6;
	/* First defined in: ern36 */
	/* A Composite containing a ReleaseResourceReference for the ContentItem (specific to this Message). The LocalAnchorReference in this Composite is a xs:string starting with the letter A. */
	optional ReleaseResourceReference release_resource_reference = 7;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of a Release which has the same content as the ResourceGroupContentItem. This is a LocalReleaseAnchorReference starting with the letter R. */
	optional string resource_group_content_item_release_reference = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the ContentItem. */
	repeated ResourceType resource_type = 9;
	/* First defined in: ern36 */
	/* The number indicating the order of the ContentItem among all Resources within this ResourceGroup. This is analogous to the Track number on a SoundCarrier. Not all ResourceGroups necessarily have SequenceNumbers (it is most applicable to SoundRecordings and MusicalWorkVideos). The SequenceNumber is unique within its ResourceGroupLevelNumber. */
	optional int32 sequence_number = 10;
	/* First defined in: ern36 */
	/* The SequenceNumber within the SequenceNumber. Example: if a Track is subdivided into several numbered sections, these are numbered with a SequenceSubNumber. The SequenceSubNumber is unique within its SequenceNumber. */
	optional int32 sequence_sub_number = 11;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of ResourceGroupResourceReferences. */
message ResourceGroupResourceReferenceList {
	/* First defined in: ern36 */
	/* A Reference for a Resource (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	repeated string resource_group_resource_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more Resources. ResourceList provides a simple means of aggregating Resources without any explicit sequencing or grouping: if that is needed it is provided by the ResourceGroup Composite.  */
message ResourceList {
	/* First defined in: ern36 */
	/* A Composite containing details of an Image. */
	repeated Image image = 1;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the ResourceList as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a MIDI. */
	repeated MIDI m_i_d_i = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a Text. */
	repeated SheetMusic sheet_music = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of an item of Software. */
	repeated Software software = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a SoundRecording. */
	repeated SoundRecording sound_recording = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a Text. */
	repeated Text text = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a UserDefinedResource. */
	repeated UserDefinedResource user_defined_resource = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a Video. */
	repeated Video video = 9;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a ResourceMusicalWorkReference. */
message ResourceMusicalWorkReference {
	/* First defined in: ern36 */
	/* The total Duration of the MusicalWork that has been used in a specified context (this may be less than the total Duration of the MusicalWork) (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration_used = 1;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MusicalWork is a Fragment (=True) or not (=False). */
	optional bool is_fragment = 2;
	/* First defined in: ern36 */
	/* A Reference for a MusicalWork (specific to this Message). This is a LocalMusicalWorkAnchorReference starting with the letter W. */
	optional string resource_musical_work_reference = 3;
	/* First defined in: ern36 */
	/* The number indicating the order of the MusicalWork in a group of MusicalWorks within a Medley, SoundRecording or other Resource. */
	optional int32 sequence_number = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of ResourceMusicalWorkReferences. */
message ResourceMusicalWorkReferenceList {
	/* First defined in: ern36 */
	/* A Composite containing a ResourceMusicalWorkReference for a MusicalWork (specific to this Message). */
	repeated ResourceMusicalWorkReference resource_musical_work_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ResourceOmissionReason. */
message ResourceOmissionReason {
	/* First defined in: ern36 */
	/* The Namespace of the ResourceOmissionReason. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ResourceOmissionReason. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ResourceOmissionReason ext_value = 3;
}

/* Defined in: ern371 -> ern381 -> ern383 */
/* A Composite containing details of
            ProprietaryIdentifiers of a Resource. */
message ResourceProprietaryId {
	/* First defined in: ern371 */
	/* The Flag indicating whether this Identifier
               is old and has been replaced by a new one (=True) or not (=False). The Flag may only
               be set to True when the new Identifier is also provided. If the Flag is not set, this
               Identifier is deemed to be the current one. */
	optional bool is_replaced = 1;
	/* First defined in: ern371 */
	/* A Composite containing details of a
                  ProprietaryIdentifier of the Resource. */
	repeated ProprietaryId proprietary_id = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a ResourceType. For example a SoundRecording of a Performance of a MusicalWork or an Image of an Artist. */
message ResourceType {
	/* First defined in: ern36 */
	/* The Namespace of the ResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the ResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.ResourceType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more Usages that govern a Resource. */
message ResourceUsage {
	/* First defined in: ern36 */
	/* A Reference for a Resource (specific to this Message). This is a LocalResourceAnchorReference starting with the letter A. */
	repeated string deal_resource_reference = 1;
	/* First defined in: ern36 */
	/* A Composite containing the Types and number of Usages applicable to the Resource. */
	repeated Usage usage = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a RightShare. */
message RightShare {
	/* First defined in: ern36 */
	/* A Composite containing details of a Carrier. */
	repeated CarrierType carrier_type = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the fundamental business model which applies (e.g. SubscriptionModel and PayAsYouGoModel). The CommercialModelType indicates how the Consumer pays for the Service or Release. */
	repeated CommercialModelType commercial_model_type = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a distribution channel used to disseminate a Service or Release to a Consumer. */
	repeated DistributionChannelType distribution_channel_type = 3;
	/* First defined in: ern383 -> Updated in ern383 */
	/* A Territory to which the RightShare
                     does not apply. Either this Element or Territory shall be present, but not
                     both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated AllTerritoryCode excluded_territory_code = 4;
	/* First defined in: ern36 */
	/* The Flag indicating whether a RightsController retains the right of refusal regarding the granting of the first licence for creating a SoundRecording of a Musical Work (=True) or not (=False). */
	optional bool has_first_license_refusal = 5;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the RightShare as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 6;
	/* First defined in: ern36 */
	/* The legal status of a License for the RightShare. */
	optional ern383.avs.LicenseStatus license_status = 7;
	/* First defined in: ern36 */
	/* A Type of the RightsClaim related to a MusicalWork. */
	repeated ern383.avs.MusicalWorkRightsClaimType musical_work_rights_claim_type = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Creations contained in the RightShare. */
	optional RightShareCreationReferenceList right_share_creation_reference_list = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers for the RightShare. */
	optional RightsAgreementId right_share_id = 10;
	/* First defined in: ern381 -> Updated in ern381 */
	/* The share of the licensed Rights owned by the RightsController. RightShare information is given as a xs:decimal value with up to 6 digits (e.g. '12.5' represents 12.5%). */
	optional Percentage right_share_percentage = 11;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the RightShare within the Release which contains it. This is a LocalRightShareAnchor starting with the letter S. */
	optional string right_share_reference = 12;
	/* First defined in: ern36 */
	/* The Flag indicating whether the RightSharePercentage is unknown (=True) or not (=False). */
	optional bool right_share_unknown = 13;
	/* First defined in: ern36 */
	/* A Composite containing details of a RightsController of Rights in a Creation. */
	repeated RightsController rights_controller = 14;
	/* First defined in: ern36 */
	/* A Type of Right covered by the RightShare. One of the Elements RightsType and UseType must be present. The RightsType is defined according to the jurisdiction of the Territory indicated in the TerritoryCode XmlAttribute. */
	repeated RightsType rights_type = 15;
	/* First defined in: ern36 */
	/* A Composite containing details of a Reference to a TextDocument containing details of a Tariff (in the form of an Identifier, Name or Description) that is to be applied to the RightShare. */
	optional TariffReference tariff_reference = 16;
	/* First defined in: ern383 -> Updated in ern383 */
	/* A Territory to which the RightShare
                     applies. Either this Element or ExcludedTerritory shall be present, but not
                     both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated AllTerritoryCode territory_code = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of a nature of a Service, or a Release, as used by a Consumer. One of the Elements RightsType and UseType must be present. */
	repeated UseType use_type = 18;
	/* First defined in: ern36 */
	/* A Composite containing details of a physical interface by which a Consumer uses a Service or Release. */
	repeated UserInterfaceType user_interface_type = 19;
	/* First defined in: ern36 */
	/* A Composite containing details about the Period of Time for which the RightShare is valid. */
	optional Period validity_period = 20;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of RightShareCreationReferences. */
message RightShareCreationReferenceList {
	/* First defined in: ern36 */
	/* A Reference for a Release (specific to this Message) that is part of the RightShare. This is a LocalReleaseAnchorReference starting with the letter R. The RightShare covers the Works used in the Release(s). */
	repeated string right_share_release_reference = 1;
	/* First defined in: ern36 */
	/* A Reference for a Resource (specific to this Message) that is part of the RightShare. This is a LocalResourceAnchorReference starting with the letter A. The RightShare covers the Works used in the Resource(s). */
	repeated string right_share_resource_reference = 2;
	/* First defined in: ern36 */
	/* A Reference for a Work (specific to this Message) that is part of the RightShare. This is a LocalMusicalWorkAnchorReference starting with the letter W. */
	repeated string right_share_work_reference = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract. */
message RightsAgreementId {
	/* First defined in: ern36 */
	/* A MusicalWork License Identifier identifying a License. If the Composite is meant to describe a Claim, RightShare or contract, then the License relates to that Claim, RightShare or contract. A MWLI comprises four parts: one of the xs:strings 'M1' or 'M2' or 'M3' or 'M4', followed by five alphanumeric characters, ten alphanumeric characters and one alphanumeric check character. */
	repeated string m_w_l_i = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the License, Claim, RightShare or contract. */
	repeated ProprietaryId proprietary_id = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a rights claim policy. */
message RightsClaimPolicy {
	/* First defined in: ern36 */
	/* A Composite containing details of conditions. */
	optional Condition condition = 1;
	/* First defined in: ern36 */
	/* A Type of rights claim policy. */
	optional ern383.avs.RightsClaimPolicyType rights_claim_policy_type = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a RightsController. RightsControllers are typicallydescribed by Name, Identifier and role(s). */
message RightsController {
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 2;
	/* First defined in: ern381 -> Updated in ern381 */
	/* The share of the licensed Rights owned by the RightsController. RightShare information is given as a xs:decimal value with up to 6 digits (e.g. '12.5' represents 12.5%). If no information is given, 100% is assumed. */
	optional Percentage right_share_percentage = 3;
	/* First defined in: ern36 */
	/* The Flag indicating whether the RightSharePercentage is unknown (=True) or not (=False). */
	optional bool right_share_unknown = 4;
	/* First defined in: ern36 */
	/* A role that describes the Party involved in the administration of Rights. */
	repeated ern383.avs.RightsControllerRole rights_controller_role = 5;
	/* First defined in: ern371 */
	/* A type of the
                  RightsController. */
	optional ern383.avs.RightsControllerType rights_controller_type = 6;
	/* First defined in: ern36 */
	/* The number indicating the order of the RightsController in a group of RightsControllers. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 7;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a RightsType. */
message RightsType {
	/* First defined in: ern36 */
	/* The Namespace of the RightsType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the RightsType
                     applies. The RightsType is defined according to the jurisdiction of this
                     Territory. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard.  */
	optional string territory_code = 2;
	/* First defined in: ern36 */
	/* A UserDefined value of the RightsType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 3;
	optional ern383.avs.RightsCoverage ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SalesReportingProxyReleaseId. */
message SalesReportingProxyReleaseId {
	/* First defined in: ern36 */
	/* A Composite containing the textual Description of the reason for the Identifier being used as a proxy. */
	optional Reason reason = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a ReasonType. */
	optional ReasonType reason_type = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds. If available, a GRid should always be used. */
	optional ReleaseId release_id = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a SamplingRate and a UnitOfMeasure. */
message SamplingRate {
	/* First defined in: ern36 */
	/* The UnitOfMeasure of the SamplingRate. This is represented in an XML schema as an XML Attribute.  */
	optional ern383.avs.UnitOfFrequency unit_of_measure = 1;
	optional double ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SheetMusic. */
message SheetMusic {
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the SheetMusic was created. */
	optional EventDate creation_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the SheetMusic. */
	repeated MusicalWorkId indirect_sheet_music_id = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SheetMusic is related to an Artist (=True) or not (=False). */
	optional bool is_artist_related = 3;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SheetMusic Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided SheetMusic data with the now provided data. */
	optional bool is_updated = 4;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the SheetMusic as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
	/* First defined in: ern36 */
	/* The Language of the lyrics of the SheetMusic (represented by an ISO 639-2 LanguageCode). */
	optional ern383.avs.IsoLanguageCode language_of_lyrics = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of the ReferenceTitle of the SheetMusic. */
	optional ReferenceTitle reference_title = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current SheetMusic. */
	optional ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more MusicalWorks contained in the SheetMusic. */
	optional ResourceMusicalWorkReferenceList resource_musical_work_reference_list = 9;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the SheetMusic within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) related to the SheetMusic. */
	optional RightsAgreementId rights_agreement_id = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of the SheetMusic which may vary according to Territory of release. */
	repeated SheetMusicDetailsByTerritory sheet_music_details_by_territory = 12;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of the SheetMusic. */
	repeated SheetMusicId sheet_music_id = 13;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the SheetMusic. */
	optional SheetMusicType sheet_music_type = 14;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SheetMusicCodecType. */
message SheetMusicCodecType {
	/* First defined in: ern36 */
	/* The Namespace of the SheetMusicCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the SheetMusicCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the SheetMusicCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional ern383.avs.SheetMusicCodecType ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors, Dates and other attributes of a SheetMusic which may vary according to Territory of release. */
message SheetMusicDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the SheetMusic. */
	repeated CLine c_line = 1;
	/* First defined in: ern36 */
	/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for Artists or others featured in the SheetMusic. */
	optional CourtesyLine courtesy_line = 2;
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 3;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the SheetMusic
                     details do not apply. Either this Element or Territory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the SheetMusic belongs. */
	repeated Genre genre = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to the SheetMusic. */
	repeated IndirectResourceContributor indirect_resource_contributor = 7;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the SheetMusicDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the SheetMusic was originally published, whether for physical or electronic/online distribution. */
	optional EventDate original_resource_release_date = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the SheetMusic according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 10;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the SheetMusic. */
	repeated DetailedResourceContributor resource_contributor = 11;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the SheetMusic was published, whether for physical
                  or electronic/online distribution. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate resource_release_date = 12;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the SheetMusic. */
	repeated TechnicalSheetMusicDetails technical_sheet_music_details = 13;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the SheetMusic
                     details apply. Either this Element or ExcludedTerritory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode territory_code = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the SheetMusic. */
	repeated Title title = 15;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Identifiers of a SheetMusic. */
message SheetMusicId {
	/* First defined in: ern36 */
	/* The ISMN (International Standard Music Number defined in ISO 10957) for the SheetMusic. An ISMN is a thirteen-digit number. Pre-2008 ISMNs, which had 10 characters and are now deprecated, are converted by replacing the initial letter ('M') with '979-0'. */
	optional string i_s_m_n = 1;
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the SheetMusic. */
	repeated ProprietaryId proprietary_id = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SheetMusicType. */
message SheetMusicType {
	/* First defined in: ern36 */
	/* The Namespace of the SheetMusicType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the SheetMusicType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.SheetMusicType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a society affiliation. */
message SocietyAffiliation {
	/* First defined in: ern383 -> Updated in ern383 */
	/* A Territory to which the affiliation
                     details do not apply. Either this Element or Territory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated AllTerritoryCode excluded_territory_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicRightsSociety. */
	optional PartyDescriptor music_rights_society = 2;
	/* First defined in: ern383 -> Updated in ern383 */
	/* A Territory to which the affiliation
                     details apply. Either this Element or ExcludedTerritory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard.  */
	repeated AllTerritoryCode territory_code = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of an item of Software. */
message Software {
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Software was created. */
	optional EventDate creation_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the Software. */
	repeated MusicalWorkId indirect_software_id = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Software is related to an Artist (=True) or not (=False). */
	optional bool is_artist_related = 3;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Software Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided Software data with the now provided data. */
	optional bool is_updated = 4;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Software as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current Software. */
	optional ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more MusicalWorks contained in the Software. */
	optional ResourceMusicalWorkReferenceList resource_musical_work_reference_list = 7;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the Software within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of the Software which may vary according to Territory of release. */
	repeated SoftwareDetailsByTerritory software_details_by_territory = 9;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of
                  Identifiers of the Software. */
	repeated ResourceProprietaryId software_id = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the Software. */
	optional SoftwareType software_type = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Software. */
	repeated Title title = 12;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors, Dates and other attributes of a Software application which may vary according to Territory of release. */
message SoftwareDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the Software. */
	repeated CLine c_line = 1;
	/* First defined in: ern36 */
	/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for Artists or others featured in the Software. */
	optional CourtesyLine courtesy_line = 2;
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 3;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the Software
                     details do not apply. Either this Element or Territory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the Software belongs. */
	repeated Genre genre = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to the Software. */
	repeated IndirectResourceContributor indirect_resource_contributor = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the Software containing Keywords. */
	repeated Keywords keywords = 8;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the SoftwareDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Software was originally published, whether for physical or electronic/online distribution. */
	optional EventDate original_resource_release_date = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the PLine for the Software. */
	repeated PLine p_line = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the Software according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 12;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the Software. */
	repeated DetailedResourceContributor resource_contributor = 13;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the Software was published, whether for physical
                  or electronic/online distribution. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate resource_release_date = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of a Synopsis of the Software. */
	optional Synopsis synopsis = 15;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the Software. */
	repeated TechnicalSoftwareDetails technical_software_details = 16;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the Software
                     details apply. Either this Element or ExcludedTerritory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard.  */
	repeated CurrentTerritoryCode territory_code = 17;
	/* First defined in: ern371 */
	/* A Composite containing details of a Title
                  of the Software. */
	repeated Title title = 18;
}

/* Defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
/* A Composite containing details of Identifiers of a Software. */
message SoftwareId {
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the Software. */
	repeated ProprietaryId proprietary_id = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SoftwareType. */
message SoftwareType {
	/* First defined in: ern36 */
	/* The Namespace of the SoftwareType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the SoftwareType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.SoftwareType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SoundProcessorType. */
message SoundProcessorType {
	/* First defined in: ern36 */
	/* The Namespace of the SoundProcessorType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the SoundProcessorType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the SoundProcessorType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional ern383.avs.SoundProcessorType ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SoundRecording. */
message SoundRecording {
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was created. */
	optional EventDate creation_date = 1;
	/* First defined in: ern36 */
	/* The Duration of the SoundRecording (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 2;
	/* First defined in: ern36 */
	/* A Flag indicating whether a DSP shall (=True) or shall not (=False) make the SoundRecording available during the pre-oder period. If the Flag is not set or set to false, the SoundRecording shall not be made available. */
	optional bool has_pre_order_fulfillment = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the SoundRecording. */
	repeated MusicalWorkId indirect_sound_recording_id = 4;
	/* First defined in: ern36 */
	/* A Composite containing a Description of the Type of instrumentation of the MusicalWork(s) in the SoundRecording. */
	optional Description instrumentation_description = 5;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is related to an Artist (=True) or not (=False). */
	optional bool is_artist_related = 6;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is used as background to other audio or audiovisual material (=True) or not (=False). */
	optional bool is_background = 7;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is additional to those on the original Release of which this is a Version (=True) or not (=False). */
	optional bool is_bonus_resource = 8;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is generated by a computer (=True) or not (=False). */
	optional bool is_computer_generated = 9;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is hidden in some way from the Consumer (=True) or not (=False). */
	optional bool is_hidden_resource = 10;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is instrumental (=True) or not (=False). */
	optional bool is_instrumental = 11;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is a Medley (=True) or not (=False). */
	optional bool is_medley = 12;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is a Potpourri (=True) or not (=False). */
	optional bool is_potpourri = 13;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is remastered (=True) or not (=False). */
	optional bool is_remastered = 14;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided SoundRecording data with the now provided data. */
	optional bool is_updated = 15;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the SoundRecording as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 16;
	/* First defined in: ern36 */
	/* The Language of the Performance recorded in the SoundRecording (represented by an ISO 639-2 LanguageCode). */
	optional ern383.avs.IsoLanguageCode language_of_performance = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was originally mastered (in either analogue or digital form). */
	optional EventDate mastered_date = 18;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is followed by a period of silence (=False) or not (=True).  */
	optional bool no_silence_after = 19;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is preceded by a period of silence (=False) or not (=True).  */
	optional bool no_silence_before = 20;
	/* First defined in: ern36 */
	/* The number of ContractedArtists associated with the SoundRecording. */
	optional int32 number_of_contracted_artists = 21;
	/* First defined in: ern36 */
	/* The number of FeaturedArtists associated with the SoundRecording. */
	optional int32 number_of_featured_artists = 22;
	/* First defined in: ern36 */
	/* The number of NonContractedArtists associated with the SoundRecording. */
	optional int32 number_of_non_contracted_artists = 23;
	/* First defined in: ern36 */
	/* The number of NonFeaturedArtists associated with the SoundRecording. */
	optional int32 number_of_non_featured_artists = 24;
	/* First defined in: ern36 */
	/* A Flag indicating whether performer information is required (=True) or not (=False) when communicating details of the SoundRecording. */
	optional bool performer_information_required = 25;
	/* First defined in: ern36 */
	/* A Composite containing details of the ReferenceTitle of the SoundRecording. */
	optional ReferenceTitle reference_title = 26;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the SoundRecording was re-mastered (usually
                  digitally). This is a string with the syntax YYYY[-MM[-DD]]. */
	optional EventDate remastered_date = 27;
	/* First defined in: ern36 */
	/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current SoundRecording. */
	optional ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 28;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more MusicalWorks contained in the SoundRecording. */
	optional ResourceMusicalWorkReferenceList resource_musical_work_reference_list = 29;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the SoundRecording within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 30;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the SoundRecording. */
	optional RightsAgreementId rights_agreement_id = 31;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Collections. The referenced Collection has to be of CollectionType AudioChapter. */
	optional SoundRecordingCollectionReferenceList sound_recording_collection_reference_list = 32;
	/* First defined in: ern36 */
	/* A Composite containing details of Descriptors and other attributes of the SoundRecording which may vary according to Territory. */
	repeated SoundRecordingDetailsByTerritory sound_recording_details_by_territory = 33;
	/* First defined in: ern36 */
	/* A Composite containing details of a SoundRecordingId. */
	repeated SoundRecordingId sound_recording_id = 34;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the SoundRecording. */
	optional SoundRecordingType sound_recording_type = 35;
	/* First defined in: ern371 -> Updated in ern371 */
	/* The country of
                  commissioning. */
	optional AllTerritoryCode territory_of_commissioning = 36;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SoundRecordingCollectionReference. */
message SoundRecordingCollectionReference {
	/* First defined in: ern36 */
	/* The Duration of the use of the Creation that is referenced in the CueCreationReference (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 1;
	/* First defined in: ern36 */
	/* The end time of the Creation, measured from the start of the Resource from which the CueSheet is referenced (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string end_time = 2;
	/* First defined in: ern36 */
	/* A Type of Collection in the context of a Video. This is represented in an XML schema as an XML Attribute. */
	optional ern383.avs.ReleaseResourceType release_resource_type = 3;
	/* First defined in: ern36 */
	/* The number indicating the order of the Collection in a group of Collections within a Medley, SoundRecording or other Collection. */
	optional int32 sequence_number = 4;
	/* First defined in: ern36 */
	/* A Reference for a Collection (specific to this Message). This is a LocalCollectionAnchorReference starting with the letter X. The referenced Collection has to be of CollectionType Series, Season or Episode. */
	optional string sound_recording_collection_reference = 5;
	/* First defined in: ern36 */
	/* The start time of the Creation, measured from the start of the Resource from which the CueSheet is referenced (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string start_time = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a list of SoundRecordingCollectionReferences. */
message SoundRecordingCollectionReferenceList {
	/* First defined in: ern36 */
	/* The number of referenced Collections (typically Chapters). */
	optional int32 number_of_collections = 1;
	/* First defined in: ern36 */
	/* A Composite containing a SoundRecordingCollectionReference for a Collection (specific to this Message). */
	repeated SoundRecordingCollectionReference sound_recording_collection_reference = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors and other attributes of a SoundRecording which may vary according to Territory of release. */
message SoundRecordingDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of a rating for the SoundRecording. */
	repeated AvRating av_rating = 1;
	/* First defined in: ern36 */
	/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for guests Artists or others featured on the SoundRecording. */
	optional CourtesyLine courtesy_line = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the DisplayArtist for the SoundRecording. The DisplayArtist may be described through Name, Identifier and Roles. */
	repeated Artist display_artist = 3;
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a DisplayConductor for the SoundRecording. A DisplayConductor may be described through Name, Identifier and Roles. */
	repeated Artist display_conductor = 5;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the SoundRecording
                     details do not apply. Either this Element or Territory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the SoundRecording belongs. */
	repeated Genre genre = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a HostSoundCarrier on which the SoundRecording appears (e.g., the CD on which it was originally released). This Composite exists in the Release Notification Message Suite Standard, to support the identification and matching of SoundRecording information. */
	repeated HostSoundCarrier host_sound_carrier = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to the SoundRecording. */
	repeated IndirectResourceContributor indirect_resource_contributor = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the SoundRecording containing Keywords. */
	repeated Keywords keywords = 11;
	/* First defined in: ern36 */
	/* A Composite containing the Name of the Label under which the Release is to be marketed. */
	repeated LabelName label_name = 12;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the SoundRecordingDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 13;
	/* First defined in: ern36 */
	/* A Composite containing a Comment about the promotion and marketing of the SoundRecording. */
	optional Comment marketing_comment = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was originally published, whether for physical or electronic/online distribution. */
	optional EventDate original_resource_release_date = 15;
	/* First defined in: ern36 */
	/* A Composite containing details of the PLine for the SoundRecording. */
	repeated PLine p_line = 16;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the SoundRecording according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was re-mastered (usually digitally). */
	optional EventDate remastered_date = 18;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the SoundRecording. */
	repeated DetailedResourceContributor resource_contributor = 19;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the SoundRecording was published, whether for
                  physical or electronic/online distribution. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate resource_release_date = 20;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the SoundRecording. */
	optional RightsAgreementId rights_agreement_id = 21;
	/* First defined in: ern36 */
	/* A Composite containing details of RightsController of Rights in the SoundRecording. */
	repeated TypedRightsController rights_controller = 22;
	/* First defined in: ern381 -> Updated in ern381 */
	/* The number indicating the order of the SoundRecording in a group of SoundRecordings in a Release. */
	optional int32 sequence_number = 23;
	/* First defined in: ern36 */
	/* A Composite containing details of a Synopsis of the SoundRecording. */
	optional Synopsis synopsis = 24;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the SoundRecording. */
	repeated TechnicalSoundRecordingDetails technical_sound_recording_details = 25;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the SoundRecording
                     details apply. Either this Element or ExcludedTerritory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard.  */
	repeated CurrentTerritoryCode territory_code = 26;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the SoundRecording. */
	repeated Title title = 27;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of SoundRecordingIds. */
message SoundRecordingId {
	/* First defined in: ern36 */
	/* A Composite containing details of the CatalogNumber of the SoundRecording. */
	optional CatalogNumber catalog_number = 1;
	/* First defined in: ern36 */
	/* The ISRC (International Standard Recording Code as defined in  ISO 3901) for the SoundRecording. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits.  */
	optional string i_s_r_c = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the SoundRecording (usually one per society involved in the messaging). */
	repeated ProprietaryId proprietary_id = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a preview. */
message SoundRecordingPreviewDetails {
	/* First defined in: ern36 */
	/* The position of the preview measured in Pixels or millimetres  from the bottom right corner of the Resource. */
	optional double bottom_right_corner = 1;
	/* First defined in: ern36 */
	/* The Duration of the preview, measured from the StartPoint. */
	optional string duration = 2;
	/* First defined in: ern36 */
	/* The end point of the preview given in seconds from the start of the Resource. */
	optional double end_point = 3;
	/* First defined in: ern36 */
	/* A Type of expression indicating how this should be perceived, e.g. as instruction (meaning that this has to be done to create the preview) or as information (meaning that this has been done to craete the preview). */
	optional ern383.avs.ExpressionType expression_type = 4;
	/* First defined in: ern36 */
	/* A Composite containing a Description of the Type of Part that the preview relates to, e.g. chorus or intro. */
	optional Description part_type = 5;
	/* First defined in: ern36 */
	/* The start point of the preview given in seconds from the start of the Resource. */
	optional double start_point = 6;
	/* First defined in: ern36 */
	/* The position of the preview measured in Pixels or millimetres from the top left corner of the Resource. */
	optional double top_left_corner = 7;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SoundRecordingType. */
message SoundRecordingType {
	/* First defined in: ern36 */
	/* The Namespace of the SoundRecordingType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the SoundRecordingType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.SoundRecordingType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SubTitle, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
message SubTitle {
	/* First defined in: ern36 */
	/* The Language and script of the SubTitle as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Synopsis. */
message Synopsis {
	/* First defined in: ern36 */
	/* The Language and script of the Synopsis as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Reference to a TextDocument containing details of a Tariff. */
message TariffReference {
	/* First defined in: ern36 */
	/* The Language and script of the TariffReference (and the TariffSubReference if applicable) as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* The Reference to a TextDocument containing more specific details of a Tariff. This is represented in an XML schema as an XML Attribute. */
	optional string tariff_sub_reference = 2;
	optional string ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a Image. */
message TechnicalImageDetails {
	/* First defined in: ern36 */
	/* A Composite containing the ratio formed by dividing the ImageHeight by the ImageWidth. */
	optional AspectRatio aspect_ratio = 1;
	/* First defined in: ern36 */
	/* An amount of data determining the color of a pixel of the Image (given in bits per pixel). */
	optional int32 color_depth = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of when a consumer is able to get hold of the Image. */
	optional FulfillmentDate consumer_fulfillment_date = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a ContainerFormat. */
	optional ContainerFormat container_format = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of DrmPlatform. */
	optional DrmPlatformType drm_platform_type = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a File containing the Image that a DSP can obtain. */
	repeated File file = 6;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain a File that contains the Image. */
	repeated Description file_availability_description = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated Fingerprint fingerprint = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of ImageCodec. */
	optional ImageCodecType image_codec_type = 10;
	/* First defined in: ern36 */
	/* A Composite containing the vertical Extent of an Image of the Image and a UnitOfMeasure (the default is Pixels). */
	optional Extent image_height = 11;
	/* First defined in: ern36 */
	/* A number of pixels of the Image displayed in a specific spatial range (given in dpi). */
	optional int32 image_resolution = 12;
	/* First defined in: ern36 */
	/* A Composite containing the horizontal Extent of an Image of the Image and a UnitOfMeasure (the default is Pixels). */
	optional Extent image_width = 13;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Image is technically a preview of the parent Resource (=True) or not (=False). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 14;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TechnicalImageDetails as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 15;
	/* First defined in: ern36 */
	/* A Composite containing details of a preview. */
	optional PreviewDetails preview_details = 16;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the TechnicalImageDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 17;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a Release. */
message TechnicalInstantiation {
	/* First defined in: ern36 */
	/* A Composite containing the BitRate for the audio data and a UnitOfMeasure (the default is kbps). */
	optional BitRate bit_rate = 1;
	/* First defined in: ern36 */
	/* A Type of coding used to encode a Resource. */
	optional ern383.avs.CodingType coding_type = 2;
	/* First defined in: ern36 */
	/* A Type of DRM enforcement. */
	optional ern383.avs.DrmEnforcementType drm_enforcement_type = 3;
	/* First defined in: ern36 */
	/* A Type of resolution (or definition) in which a Video is provided. */
	optional ern383.avs.VideoDefinitionType video_definition_type = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a MIDI. */
message TechnicalMidiDetails {
	/* First defined in: ern36 */
	/* A Composite containing details of when a consumer is able to get hold of the MIDI. */
	optional FulfillmentDate consumer_fulfillment_date = 1;
	/* First defined in: ern36 */
	/* The Duration of the instantiation of the MIDI if this differs from the Duration provided for the MIDI itself (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). This element must only be used if and when there are no royalty reporting implications on this change in duration and when the specific technical instantiation is a clip taken from a technical instantiation representing the whole MIDI. */
	optional string duration = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a File containing the MIDI that a DSP can obtain. */
	repeated File file = 3;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain a File that contains the MIDI. */
	repeated Description file_availability_description = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated Fingerprint fingerprint = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 6;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI is technically a preview of the parent Resource (=True) or not (=False). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 7;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TechnicalMidiDetails as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 8;
	/* First defined in: ern36 */
	/* The number of voices. */
	optional int32 number_of_voices = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a preview. */
	optional SoundRecordingPreviewDetails preview_details = 10;
	/* First defined in: ern36 */
	/* The Flag indicating whether the MIDI needs to be processed (=True) or not (=False) (typically: transcoded) by the MessageRecipient before being delivered to Consumers. */
	optional bool resource_processing_required = 11;
	/* First defined in: ern36 */
	/* A Type of sound processor. */
	optional SoundProcessorType sound_processor_type = 12;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the TechnicalMidiDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 13;
	/* First defined in: ern36 */
	/* The Duration of the MIDI that may be sold to a Consumer if the MIDI provided is not intended to be provided to Consumers 'as is' but will need to be transcoded into an appropriate format by the MessageRecipient or any other DSP handling the Release before it is sold (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string usable_resource_duration = 14;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a SheetMusic. */
message TechnicalSheetMusicDetails {
	/* First defined in: ern36 */
	/* A Composite containing details of when a consumer is able to get hold of the SheetMusic. */
	optional FulfillmentDate consumer_fulfillment_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a ContainerFormat. */
	optional ContainerFormat container_format = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of DrmPlatform. */
	optional DrmPlatformType drm_platform_type = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a File containing the SheetMusic that a DSP can obtain. */
	repeated File file = 4;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain a File that contains the SheetMusic. */
	repeated Description file_availability_description = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated Fingerprint fingerprint = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 7;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SheetMusic is technically a preview of the parent Resource (=True) or not (=False). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 8;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TechnicalSheetMusicDetails as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a preview. */
	optional PreviewDetails preview_details = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of SheetMusicCodec. */
	optional SheetMusicCodecType sheet_music_codec_type = 11;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the TechnicalSheetMusicDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 12;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a Software. */
message TechnicalSoftwareDetails {
	/* First defined in: ern36 */
	/* A Composite containing details of when a consumer is able to get hold of the Software. */
	optional FulfillmentDate consumer_fulfillment_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of DrmPlatform. */
	optional DrmPlatformType drm_platform_type = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a File containing the Software that a DSP can obtain. */
	repeated File file = 3;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain a File that contains the Software. */
	repeated Description file_availability_description = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated Fingerprint fingerprint = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 6;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Software is technically a preview of the parent Resource (=True) or not (=False). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 7;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TechnicalSoftwareDetails as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of OperatingSystem. */
	optional OperatingSystemType operating_system_type = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a preview. */
	optional PreviewDetails preview_details = 10;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the TechnicalSoftwareDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 11;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a SoundRecording. */
message TechnicalSoundRecordingDetails {
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of AudioCodec. */
	optional AudioCodecType audio_codec_type = 1;
	/* First defined in: ern36 */
	/* A Composite containing the BitRate for the audio data and a UnitOfMeasure (the default is kbps). */
	optional BitRate bit_rate = 2;
	/* First defined in: ern36 */
	/* An amount of audio data in a sample. */
	optional int32 bits_per_sample = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of when a consumer is able to get hold of the SoundRecording. */
	optional FulfillmentDate consumer_fulfillment_date = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a ContainerFormat. */
	optional ContainerFormat container_format = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of DrmPlatform. */
	optional DrmPlatformType drm_platform_type = 6;
	/* First defined in: ern36 */
	/* The Duration of the instantiation of the SoundRecording if this differs from the Duration provided for the SoundRecording itself (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). This element must only be used if and when there are no royalty reporting implications on this change in duration and when the specific technical instantiation is a clip taken from a technical instantiation representing the whole SoundRecording. */
	optional string duration = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a File containing the SoundRecording that a DSP can obtain. */
	repeated File file = 8;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain a File that contains the SoundRecording. */
	repeated Description file_availability_description = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated Fingerprint fingerprint = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 11;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording is technically a preview of the parent Resource (=True) or not (=False). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 12;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TechnicalSoundRecordingDetails as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 13;
	/* First defined in: ern36 */
	/* A number of audio channels. */
	optional int32 number_of_channels = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of a preview. */
	optional SoundRecordingPreviewDetails preview_details = 15;
	/* First defined in: ern36 */
	/* The Flag indicating whether the SoundRecording needs to be processed (=True) or not (=False) (typically: transcoded) by the MessageRecipient before being delivered to Consumers. */
	optional bool resource_processing_required = 16;
	/* First defined in: ern36 */
	/* A Composite containing the sampling rate of the SoundRecording and a UnitOfMeasure (the default is Hz). */
	optional SamplingRate sampling_rate = 17;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the TechnicalSoundRecordingDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 18;
	/* First defined in: ern36 */
	/* The Duration of the SoundRecording that may be sold to a Consumer if the SoundRecording provided is not intended to be provided to Consumers 'as is' but will need to be transcoded into an appropriate format by the MessageRecipient or any other DSP handling the Release before it is sold (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string usable_resource_duration = 19;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a Text. */
message TechnicalTextDetails {
	/* First defined in: ern36 */
	/* A Composite containing details of when a consumer is able to get hold of the Text. */
	optional FulfillmentDate consumer_fulfillment_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a ContainerFormat. */
	optional ContainerFormat container_format = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of DrmPlatform. */
	optional DrmPlatformType drm_platform_type = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a File containing the Text that a DSP can obtain. */
	repeated File file = 4;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain a File that contains the Text. */
	repeated Description file_availability_description = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated Fingerprint fingerprint = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 7;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Text is technically a preview of the parent Resource (=True) or not (=False). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 8;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TechnicalTextDetails as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a preview. */
	optional PreviewDetails preview_details = 10;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the TechnicalTextDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of TextCodec. */
	optional TextCodecType text_codec_type = 12;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a UserDefinedResource. */
message TechnicalUserDefinedResourceDetails {
	/* First defined in: ern36 */
	/* A Composite containing details of when a consumer is able to get hold of the UserDefinedResource. */
	optional FulfillmentDate consumer_fulfillment_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a File containing the UserDefinedResource that a DSP can obtain. */
	repeated File file = 2;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain a File that contains the UserDefinedResource. */
	repeated Description file_availability_description = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated Fingerprint fingerprint = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 5;
	/* First defined in: ern36 */
	/* The Flag indicating whether the UserDefinedResource is technically a preview of the parent Resource (=True) or not (=False). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 6;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TechnicalUserDefinedResourceDetails as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a preview. */
	optional PreviewDetails preview_details = 8;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the TechnicalUserDefinedResourceDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a UserDefinedValue. */
	repeated UserDefinedValue user_defined_value = 10;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing technical details of a Video. */
message TechnicalVideoDetails {
	/* First defined in: ern36 */
	/* A Composite containing the ratio formed by dividing the ImageHeight by the ImageWidth. */
	optional AspectRatio aspect_ratio = 1;
	/* First defined in: ern36 */
	/* A Composite containing the BitRate for the audio data and a UnitOfMeasure (the default is kbps). */
	optional BitRate audio_bit_rate = 2;
	/* First defined in: ern36 */
	/* An amount of audio data in a sample. */
	optional int32 audio_bits_per_sample = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of AudioCodec. */
	optional AudioCodecType audio_codec_type = 4;
	/* First defined in: ern36 */
	/* A Composite containing the SamplingRate for the audio data and a UnitOfMeasure (the default is Hz). */
	optional SamplingRate audio_sampling_rate = 5;
	/* First defined in: ern36 */
	/* An amount of data determining the color of a pixel of an Image of the Video (given in bits per pixel). */
	optional int32 color_depth = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of when a consumer is able to get hold of the Video. */
	optional FulfillmentDate consumer_fulfillment_date = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a ContainerFormat. */
	optional ContainerFormat container_format = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of DrmPlatform. */
	optional DrmPlatformType drm_platform_type = 9;
	/* First defined in: ern36 */
	/* The Duration of the instantiation of the Video if this differs from the Duration provided for the Video itself (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). This element must only be used if and when there are no royalty reporting implications on this change in duration and when the specific technical instantiation is a clip taken from a technical instantiation representing the whole Video. */
	optional string duration = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of a File containing the Video that a DSP can obtain. */
	repeated File file = 11;
	/* First defined in: ern36 */
	/* A Composite containing a Description providing details of how a DSP can obtain a File that contains the Video. */
	repeated Description file_availability_description = 12;
	/* First defined in: ern36 */
	/* A Composite containing details of a Fingerprint and its governing algorithm. */
	repeated Fingerprint fingerprint = 13;
	/* First defined in: ern36 */
	/* A Composite containing the Rate for a number of frames shown in the Video in a specific Period of Time and a UnitOfMeasure (the default is Hz, interlaced). */
	optional FrameRate frame_rate = 14;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 15;
	/* First defined in: ern36 */
	/* A Composite containing the vertical Extent of an Image of the Video and a UnitOfMeasure (the default is Pixels). */
	optional Extent image_height = 16;
	/* First defined in: ern36 */
	/* A Composite containing the horizontal Extent of an Image of the Video and a UnitOfMeasure (the default is Pixels). */
	optional Extent image_width = 17;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is technically a preview of the parent Resource (=True) or not (=False). Note that nothing can be implied from this element as to the conditions under which the preview can be made available. */
	optional bool is_preview = 18;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TechnicalSoundRecordingDetails as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 19;
	/* First defined in: ern36 */
	/* A number of audio channels. */
	optional int32 number_of_audio_channels = 20;
	/* First defined in: ern36 */
	/* A Composite containing the overall BitRate and a UnitOfMeasure (the default is kbps). */
	optional BitRate overall_bit_rate = 21;
	/* First defined in: ern36 */
	/* A Composite containing details of a preview. */
	optional SoundRecordingPreviewDetails preview_details = 22;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video needs to be processed (=True) or not (=False) (typically: transcoded) by the MessageRecipient before being delivered to Consumers. */
	optional bool resource_processing_required = 23;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the TechnicalVideoDetails within the Release which contains it. This is a LocalTechnicalResourceDetailsAnchor starting with the letter T. */
	optional string technical_resource_details_reference = 24;
	/* First defined in: ern36 */
	/* The Duration of the Video that may be sold to a Consumer if the Video provided is not intended to be provided to Consumers 'as is' but will need to be transcoded into an appropriate format by the MessageRecipient or any other DSP handling the Release before it is sold (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string usable_resource_duration = 25;
	/* First defined in: ern36 */
	/* A Composite containing the BitRate for the video data and a UnitOfMeasure (the default is kbps). */
	optional BitRate video_bit_rate = 26;
	/* First defined in: ern36 */
	/* A Composite containing details of a Type of VideoCodec. */
	optional VideoCodecType video_codec_type = 27;
	/* First defined in: ern36 */
	/* A Type of resolution (or definition) in which the Video is provided. */
	optional ern383.avs.VideoDefinitionType video_definition_type = 28;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Text. */
message Text {
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Text was created. */
	optional EventDate creation_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the Text. */
	repeated MusicalWorkId indirect_text_id = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Text is related to an Artist (=True) or not (=False). */
	optional bool is_artist_related = 3;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Text Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided Text data with the now provided data. */
	optional bool is_updated = 4;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Text as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current Text. */
	optional ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more MusicalWorks contained in the Text. */
	optional ResourceMusicalWorkReferenceList resource_musical_work_reference_list = 7;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the Text within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of the Text which may vary according to Territory of release. */
	repeated TextDetailsByTerritory text_details_by_territory = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of an Identifier of the Text. */
	repeated TextId text_id = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the Text. */
	optional TextType text_type = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Text. */
	repeated Title title = 12;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a TextCodecType. */
message TextCodecType {
	/* First defined in: ern36 */
	/* The Namespace of the TextCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the TextCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the TextCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional ern383.avs.TextCodecType ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors, Dates and other attributes of a Text which may vary according to Territory of release. */
message TextDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the Text. */
	repeated CLine c_line = 1;
	/* First defined in: ern36 */
	/* A Composite containing an Annotation which acknowledges record companies and/or other Parties giving permission for Artists or others featured in the Text. */
	optional CourtesyLine courtesy_line = 2;
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 3;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the Text details
                     do not apply. Either this Element or Territory shall be present, but not both.
                     The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged;
                     TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the Text belongs. */
	repeated Genre genre = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to the Text. */
	repeated IndirectResourceContributor indirect_resource_contributor = 7;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the Text containing Keywords. */
	repeated Keywords keywords = 8;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the TextDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Text was originally published, whether for physical or electronic/online distribution. */
	optional EventDate original_resource_release_date = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the Text according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 11;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the Text. */
	repeated DetailedResourceContributor resource_contributor = 12;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the Text was published, whether for physical or
                  electronic/online distribution. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate resource_release_date = 13;
	/* First defined in: ern36 */
	/* A Composite containing details of a Synopsis of the Text. */
	optional Synopsis synopsis = 14;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the Text. */
	repeated TechnicalTextDetails technical_text_details = 15;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the Text details
                     apply. Either this Element or ExcludedTerritory shall be present, but not both.
                     The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly encouraged;
                     TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode territory_code = 16;
	/* First defined in: ern371 */
	/* A Composite containing details of a Title
                  of the Text. */
	repeated Title title = 17;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Identifiers of a Text. */
message TextId {
	/* First defined in: ern36 */
	/* The ISBN (International Standard Book Number defined in ISO 2108) for the Text. An ISBN is a 13-digit number. Pre-2007, ISBNs, which had 10-digits and are now deprecated, are converted by adding the prefix '978' and re-calculating the check character. */
	optional string i_s_b_n = 1;
	/* First defined in: ern36 */
	/* The ISSN (International Standard Serial Number defined in ISO 3297) identifying the Text. An ISSN comprises two groups of four digits, separated by a hyphen and a control digit. */
	optional string i_s_s_n = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the Text (usually one per society involved in the messaging). */
	repeated ProprietaryId proprietary_id = 4;
	/* First defined in: ern36 */
	/* The SICI (Serial Item and Contribution Identifier defined in ANSI/NISO Z39.56-199)  for the Text. */
	optional string s_i_c_i = 5;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a TextType. */
message TextType {
	/* First defined in: ern36 */
	/* The Namespace of the TextType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the TextType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.TextType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Title. */
message Title {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Title as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a SubTitle of the Title, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
	repeated TypedSubTitle sub_title = 2;
	/* First defined in: ern36 */
	/* A Composite containing the text of the Title. */
	optional TitleText title_text = 3;
	/* First defined in: ern36 */
	/* A Type of the Title which defines its origin or the function it fulfils in relation to a Creation. Note: A Title may fulfil more than one role. Example: 'Help' may be both the OriginalTitle and the DisplayTitle for the well-known Beatles song. This is represented in an XML schema as an XML Attribute. */
	optional ern383.avs.TitleType title_type = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a TitleText. */
message TitleText {
	/* First defined in: ern36 */
	/* The Language and script of the TitleText as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a RightsController. RightsControllers are typicallydescribed by Name, Identifier and role(s). */
message TypedRightsController {
	/* First defined in: ern371 -> Updated in ern371 */
	/* The Date that marks the end of the title
                  (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional ddex_IsoDate end_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for the Party. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyName(s). */
	repeated PartyName party_name = 3;
	/* First defined in: ern381 -> Updated in ern381 */
	/* The share of the licensed Rights owned by the RightsController. RightShare information is given as a xs:decimal value with up to 6 digits (e.g. '12.5' represents 12.5%). If no information is given, 100% is assumed. */
	optional Percentage right_share_percentage = 4;
	/* First defined in: ern36 */
	/* The Flag indicating whether the RightSharePercentage is unknown (=True) or not (=False). */
	optional bool right_share_unknown = 5;
	/* First defined in: ern36 */
	/* A role that describes the Party involved in the administration of Rights. */
	repeated ern383.avs.RightsControllerRole rights_controller_role = 6;
	/* First defined in: ern36 */
	/* A type of the RightsController. */
	optional ern383.avs.RightsControllerType rights_controller_type = 7;
	/* First defined in: ern36 */
	/* The number indicating the order of the RightsController in a group of RightsControllers. This is represented in an XML schema as an XML Attribute.  */
	optional int32 sequence_number = 8;
	/* First defined in: ern371 -> Updated in ern371 */
	/* The Date that marks the beginning of the
                  title (in ISO 8601:2004 format: YYYY-MM-DD). */
	optional ddex_IsoDate start_date = 9;
	/* First defined in: ern371 -> Updated in ern371 */
	/* The country of
                  registration. */
	optional AllTerritoryCode territory_of_registration = 10;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a SubTitle, including Titles of Versions used to differentiate different versions of the same Title, as required by the GRid and ISRC ReferenceDescriptiveMetadataSets. */
message TypedSubTitle {
	/* First defined in: ern36 */
	/* The Language and script of the SubTitle as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Type of the SubTitle which defines its origin or the function it fulfils. This is represented in an XML schema as an XML Attribute. */
	optional string sub_title_type = 2;
	optional string ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing Types and number of Usages of a Release. */
message Usage {
	/* First defined in: ern36 */
	/* A Composite containing details of a Carrier. */
	repeated CarrierType carrier_type = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a distribution channel intended to be used to disseminate a Service or Release to a Consumer. */
	repeated DistributionChannelType distribution_channel_type = 2;
	/* First defined in: ern36 */
	/* The number of times a Release can be used under the terms of the Deal. */
	optional int32 number_of_usages = 3;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the Release. */
	optional TechnicalInstantiation technical_instantiation = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a nature of a Service, or a Release, as used by a Consumer. */
	repeated UseType use_type = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a physical interface by which a Consumer is intended to use a Service or Release. */
	repeated UserInterfaceType user_interface_type = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a UseType. */
message UseType {
	/* First defined in: ern36 */
	/* The Namespace of the UseType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the UseType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.UseType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a UserDefinedResource. */
message UserDefinedResource {
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the UserDefinedResource was created. This is a
                  string with the syntax YYYY[-MM[-DD]]. */
	optional EventDate creation_date = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the UserDefinedResource. */
	repeated MusicalWorkId indirect_user_defined_resource_id = 2;
	/* First defined in: ern36 */
	/* The Flag indicating whether the UserDefinedResource is related to an Artist (=True) or not (=False). */
	optional bool is_artist_related = 3;
	/* First defined in: ern36 */
	/* The Flag indicating whether the UserDefinedResource Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided UserDefinedResource data with the now provided data. */
	optional bool is_updated = 4;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the UserDefinedResource as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current UserDefinedResource. */
	optional ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more MusicalWorks contained in the UserDefinedResource. */
	optional ResourceMusicalWorkReferenceList resource_musical_work_reference_list = 7;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the UserDefinedResource within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the UserDefinedResource. */
	repeated Title title = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of the UserDefinedResource which may vary according to Territory of release. */
	repeated UserDefinedResourceDetailsByTerritory user_defined_resource_details_by_territory = 10;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of
                  Identifiers of the UserDefinedResource. */
	repeated ResourceProprietaryId user_defined_resource_id = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the UserDefinedResource. */
	optional UserDefinedResourceType user_defined_resource_type = 12;
	/* First defined in: ern36 */
	/* A Composite containing details of a UserDefinedValue. */
	repeated UserDefinedValue user_defined_value = 13;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors, Dates and other attributes of a UserDefinedResource application which may vary according to Territory of release. */
message UserDefinedResourceDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the UserDefinedResource. */
	repeated CLine c_line = 1;
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 2;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the
                     UserDefinedResource details do not apply. Either this Element or Territory
                     shall be present, but not both. The use of ISO TerritoryCodes (or the term
                     'Worldwide”) is strongly encouraged; TIS TerritoryCodes should only be used if
                     both MessageSender and MessageRecipient are familiar with this
                     standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the UserDefinedResource belongs. */
	repeated Genre genre = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to the UserDefinedResource. */
	repeated IndirectResourceContributor indirect_resource_contributor = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the UserDefinedResource containing Keywords. */
	repeated Keywords keywords = 7;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the UserDefinedResourceDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the UserDefinedResource was originally published, whether for physical or electronic/online distribution. */
	optional EventDate original_resource_release_date = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of the PLine for the UserDefinedResource. */
	repeated PLine p_line = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the UserDefinedResource according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 11;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the UserDefinedResource. */
	repeated DetailedResourceContributor resource_contributor = 12;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the UserDefinedResource was published, whether for
                  physical or electronic/online distribution. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate resource_release_date = 13;
	/* First defined in: ern36 */
	/* A Composite containing details of a Synopsis of the UserDefinedResource. */
	optional Synopsis synopsis = 14;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the UserDefinedResource. */
	repeated TechnicalUserDefinedResourceDetails technical_user_defined_resource_details = 15;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the
                     UserDefinedResource details apply. Either this Element or ExcludedTerritory
                     shall be present, but not both. The use of ISO TerritoryCodes (or the term
                     'Worldwide”) is strongly encouraged; TIS TerritoryCodes should only be used if
                     both MessageSender and MessageRecipient are familiar with this standard.
                   */
	repeated CurrentTerritoryCode territory_code = 16;
	/* First defined in: ern371 */
	/* A Composite containing details of a Title
                  of the UserDefinedResource. */
	repeated Title title = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of a UserDefinedValue. */
	repeated UserDefinedValue user_defined_value = 18;
}

/* Defined in: ern36 -> Removed in ern371 -> Removed in ern381 -> Removed in ern383 */
/* A Composite containing details of Identifiers of a UserDefinedResource. */
message UserDefinedResourceId {
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the UserDefinedResource. */
	repeated ProprietaryId proprietary_id = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a UserDefinedResourceType. */
message UserDefinedResourceType {
	/* First defined in: ern36 */
	/* The Namespace of the UserDefinedResourceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	optional string ext_value = 2;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a UserDefinedValue. */
message UserDefinedValue {
	/* First defined in: ern36 */
	/* A textual Description of the Type or function of the UserDefinedValue. This is represented in an XML schema as an XML Attribute. */
	optional string description = 1;
	/* First defined in: ern36 */
	/* The Language and script of the Description as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 2;
	/* First defined in: ern36 */
	/* The Namespace of the UserDefinedValue. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 3;
	optional string ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a UserInterfaceType. */
message UserInterfaceType {
	/* First defined in: ern36 */
	/* The Namespace of the UserInterfaceType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the UserInterfaceType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.UserInterfaceType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Video. */
message Video {
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Video was created. */
	optional EventDate creation_date = 1;
	/* First defined in: ern36 */
	/* The Duration of the Video (using the ISO 8601:2004 PT[[hhH]mmM]ssS format, where lower case characters indicate variables, upper case characters are part of the xs:string, e.g. one hour, two minutes and three seconds would be PT1H2M3S). */
	optional string duration = 2;
	/* First defined in: ern36 */
	/* A Flag indicating whether a DSP shall (=True) or shall not (=False) make the Video available during the pre-oder period. If the Flag is not set or set to false, the Video shall not be made available. */
	optional bool has_pre_order_fulfillment = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWorkId of a MusicalWork used in the Video. */
	repeated MusicalWorkId indirect_video_id = 4;
	/* First defined in: ern36 */
	/* A Composite containing a Description of the Type of instrumentation of the MusicalWork(s) in the Video. */
	optional Description instrumentation_description = 5;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is related to an Artist (=True) or not (=False). */
	optional bool is_artist_related = 6;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is used as background to other audio or audiovisual material (=True) or not (=False). */
	optional bool is_background = 7;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is additional to those on the original Release of which this is a Version (=True) or not (=False). */
	optional bool is_bonus_resource = 8;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is hidden in some way from the Consumer (=True) or not (=False). */
	optional bool is_hidden_resource = 9;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is instrumental (=True) or not (=False). */
	optional bool is_instrumental = 10;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is a Medley (=True) or not (=False). */
	optional bool is_medley = 11;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is a Potpourri (=True) or not (=False). */
	optional bool is_potpourri = 12;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is remastered (=True) or not (=False). */
	optional bool is_remastered = 13;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video Element was updated (=True) or not (=False). The Flag may only be used when the UpdateIndicator is set to UpdateMessage. When this Boolean Flag is set to true, the MessageRecipient is expected to replace any previously provided Video data with the now provided data. */
	optional bool is_updated = 14;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the Video as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 15;
	/* First defined in: ern36 */
	/* The Language of dubbing used in the Video (represented by an ISO 639-2 LanguageCode). */
	repeated ern383.avs.IsoLanguageCode language_of_dubbing = 16;
	/* First defined in: ern36 */
	/* The original Language of the Performance recorded in the Video (represented by an ISO 639-2 LanguageCode). */
	repeated ern383.avs.IsoLanguageCode language_of_performance = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the Video was originally mastered (in either analogue or digital form). */
	optional EventDate mastered_date = 18;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is followed by a period of silence (=False) or not (=True).  */
	optional bool no_silence_after = 19;
	/* First defined in: ern36 */
	/* The Flag indicating whether the Video is preceded by a period of silence (=False) or not (=True).  */
	optional bool no_silence_before = 20;
	/* First defined in: ern36 */
	/* The number of ContractedArtists associated with the Video. */
	optional int32 number_of_contracted_artists = 21;
	/* First defined in: ern36 */
	/* The number of FeaturedArtists associated with the Video. */
	optional int32 number_of_featured_artists = 22;
	/* First defined in: ern36 */
	/* The number of NonContractedArtists associated with the Video. */
	optional int32 number_of_non_contracted_artists = 23;
	/* First defined in: ern36 */
	/* The number of NonFeaturedArtists associated with the Video. */
	optional int32 number_of_non_featured_artists = 24;
	/* First defined in: ern36 */
	/* A Flag indicating whether performer information is required (=True) or not (=False) when communicating details of the Video. */
	optional bool performer_information_required = 25;
	/* First defined in: ern36 */
	/* A Composite containing the textual Description of the reason for the Identifier being used as a proxy. */
	optional Reason reason_for_cue_sheet_absence = 26;
	/* First defined in: ern36 */
	/* A Composite containing details of the ReferenceTitle of the Video. */
	optional ReferenceTitle reference_title = 27;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the Video was re-mastered (usually digitally).
                  This is a string with the syntax YYYY[-MM[-DD]]. */
	optional EventDate remastered_date = 28;
	/* First defined in: ern36 */
	/* A Composite containing details of ResourceContainedResourceReferences referring to a Resource that is contained in the current Video. */
	optional ResourceContainedResourceReferenceList resource_contained_resource_reference_list = 29;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more MusicalWorks contained in the Video. */
	optional ResourceMusicalWorkReferenceList resource_musical_work_reference_list = 30;
	/* First defined in: ern36 */
	/* The Identifier (specific to the Message) of the Video within the Release which contains it. This is a LocalResourceAnchor starting with the letter A. */
	optional string resource_reference = 31;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the Video. */
	optional RightsAgreementId rights_agreement_id = 32;
	/* First defined in: ern36 */
	/* The Language of SubTitles in the Video (represented by an ISO 639-2 LanguageCode). */
	repeated ern383.avs.IsoLanguageCode sub_title_language = 33;
	/* First defined in: ern371 -> Updated in ern371 */
	/* The country of
                  commissioning. */
	optional AllTerritoryCode territory_of_commissioning = 34;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the Video. */
	repeated Title title = 35;
	/* First defined in: ern36 */
	/* A Composite containing details of one or more Collections. The referenced Collection has to be of CollectionType VideoChapter. */
	optional SoundRecordingCollectionReferenceList video_collection_reference_list = 36;
	/* First defined in: ern36 */
	/* A Composite containing a VideoCueSheetReference for a CueSheet (specific to this Message). */
	repeated VideoCueSheetReference video_cue_sheet_reference = 37;
	/* First defined in: ern36 */
	/* A Composite containing details of Descriptors and other attributes of the Video which may vary according to Territory of release.  */
	repeated VideoDetailsByTerritory video_details_by_territory = 38;
	/* First defined in: ern36 */
	/* A Composite containing details of an Identifier of the Video. */
	repeated VideoId video_id = 39;
	/* First defined in: ern36 */
	/* A Composite containing details of the Type of the Video. */
	optional VideoType video_type = 40;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a VideoCodecType. */
message VideoCodecType {
	/* First defined in: ern36 */
	/* The Namespace of the VideoCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the VideoCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	/* First defined in: ern36 */
	/* The Identifier of the Version of the VideoCodecType. This is represented in an XML schema as an XML Attribute. */
	optional string version = 3;
	optional ern383.avs.VideoCodecType ext_value = 4;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing a VideoCueSheetReference. */
message VideoCueSheetReference {
	/* First defined in: ern36 */
	/* A Reference for a CueSheet (specific to this Message). This is a LocalCueSheetAnchorReference starting with the letter Q. */
	optional string video_cue_sheet_reference = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Descriptors and other attributes of a Video which may vary according to Territory of release.  */
message VideoDetailsByTerritory {
	/* First defined in: ern36 */
	/* A Composite containing details of a rating for the Video. */
	repeated AvRating av_rating = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the CLine for the Video. */
	repeated CLine c_line = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of a Character in the Video. A Character may be described through Name, Identifier and Roles. */
	repeated Character character = 3;
	/* First defined in: ern36 */
	/* A Composite containing an Annotation Annotation which acknowledges record companies and/or other Parties giving permission for guests Artists or others featured on the Video. */
	optional CourtesyLine courtesy_line = 4;
	/* First defined in: ern36 */
	/* A Composite containing details of the DisplayArtist for the SoundRecording. The DisplayArtist may be described through Name, Identifier and Roles. */
	repeated Artist display_artist = 5;
	/* First defined in: ern371 */
	/* A Composite containing the Name to be used
                  by a DSP when presenting Artist details of the Resource to a Consumer. A
                  Resource-level DisplayArtistName shall only be provided if it differs from the
                  DisplayArtistName for a Release that contains the Resource and is communicated in
                  the same XML message. */
	repeated Name display_artist_name = 6;
	/* First defined in: ern36 */
	/* A Composite containing details of a DisplayConductor for the Video. A DisplayConductor may be described through Name, Identifier and Roles. */
	repeated Artist display_conductor = 7;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the SoundRecording
                     details do not apply. Either this Element or Territory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard. */
	repeated CurrentTerritoryCode excluded_territory_code = 8;
	/* First defined in: ern36 */
	/* A Composite containing details of a FulfillmentDate. */
	optional FulfillmentDate fulfillment_date = 9;
	/* First defined in: ern36 */
	/* A Composite containing details of a Genre to which the Video belongs. */
	repeated Genre genre = 10;
	/* First defined in: ern36 */
	/* A Composite containing details of a HostSoundCarrier on which the Video appears (e.g., the CD on which it was originally released). This Composite exists in the Release Notification Message Suite Standard, to support the identification and matching of Video information. */
	repeated HostSoundCarrier host_sound_carrier = 11;
	/* First defined in: ern36 */
	/* A Composite containing details of an indirect Contributor to the SoundRecording. */
	repeated IndirectResourceContributor indirect_resource_contributor = 12;
	/* First defined in: ern36 */
	/* A Composite containing details of a Description of the Video containing Keywords. */
	repeated Keywords keywords = 13;
	/* First defined in: ern36 */
	/* A Composite containing the Name of the Label under which the Release is to be marketed. */
	repeated LabelName label_name = 14;
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the SoundRecordingDetailsByTerritory as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 15;
	/* First defined in: ern36 */
	/* A Composite containing a Comment about the promotion and marketing of the Video. */
	optional Comment marketing_comment = 16;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was originally published, whether for physical or electronic/online distribution. */
	optional EventDate original_resource_release_date = 17;
	/* First defined in: ern36 */
	/* A Composite containing details of the PLine for the SoundRecording. */
	repeated PLine p_line = 18;
	/* First defined in: ern36 */
	/* A Composite containing details of the classification of the Video according to advice which it carries about the level of explicitness or offensiveness of its content. */
	repeated ParentalWarningType parental_warning_type = 19;
	/* First defined in: ern36 */
	/* A Composite containing details of the Date and Place of the Event in which the SoundRecording was re-mastered (usually digitally). */
	optional EventDate remastered_date = 20;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Composite containing details of a
                  Contributor to the Video. */
	repeated DetailedResourceContributor resource_contributor = 21;
	/* First defined in: ern371 */
	/* A Composite containing details of the Date
                  and Place of the Event in which the SoundRecording was published, whether for
                  physical or electronic/online distribution. This is a string with the syntax
                  YYYY[-MM[-DD]]. */
	optional EventDate resource_release_date = 22;
	/* First defined in: ern36 */
	/* A Composite containing details of Identifiers of a License, Claim, RightShare or contract for the MusicalWork(s) used in the SoundRecording. */
	optional RightsAgreementId rights_agreement_id = 23;
	/* First defined in: ern36 */
	/* A Composite containing details of RightsController of Rights in the Video. */
	repeated TypedRightsController rights_controller = 24;
	/* First defined in: ern381 -> Updated in ern381 */
	/* The number indicating the order of the Video in a group of Videos in a Release. */
	optional int32 sequence_number = 25;
	/* First defined in: ern36 */
	/* A Composite containing details of a Synopsis of the Video. */
	optional Synopsis synopsis = 26;
	/* First defined in: ern36 */
	/* A Composite containing technical details of the Video. */
	repeated TechnicalVideoDetails technical_video_details = 27;
	/* First defined in: ern371 -> Updated in ern371 */
	/* A Territory to which the SoundRecording
                     details apply. Either this Element or ExcludedTerritory shall be present, but
                     not both. The use of ISO TerritoryCodes (or the term 'Worldwide”) is strongly
                     encouraged; TIS TerritoryCodes should only be used if both MessageSender and
                     MessageRecipient are familiar with this standard.  */
	repeated CurrentTerritoryCode territory_code = 28;
	/* First defined in: ern36 */
	/* A Composite containing details of a Title of the SoundRecording. */
	repeated Title title = 29;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of Identifiers of a Video. */
message VideoId {
	/* First defined in: ern36 */
	/* A Composite containing details of the CatalogNumber of the Video. */
	optional CatalogNumber catalog_number = 1;
	/* First defined in: ern381 */
	/* An Identifier of the Video assigned by the Entertainment Identifier Registry Association (EIDR). */
	repeated string e_i_d_r = 2;
	/* First defined in: ern36 */
	/* The ISAN (International Standard Audiovisual Number as defined in ISO 15706) for the Video. An ISAN comprises four blocks of four hexadecimal charaters followed by a check character. */
	optional string i_s_a_n = 3;
	/* First defined in: ern36 */
	/* The ISRC (International Standard Recording Code as defined in  ISO 3901) for the Video. An ISRC comprises four parts: two characters, followed by three alphanumeric characters, then two digits and five digits.  */
	optional string i_s_r_c = 4;
	/* First defined in: ern36 */
	/* The Flag indicating whether this Identifier is old and has been replaced by a new one (=True) or not (=False). The Flag may only be set to True when the new Identifier is also provided. If the Flag is not set, this Identifier is deemed to be the current one. */
	optional bool is_replaced = 5;
	/* First defined in: ern36 */
	/* A Composite containing details of a ProprietaryIdentifier of the Video (usually one per society involved in the messaging). */
	repeated ProprietaryId proprietary_id = 6;
	/* First defined in: ern36 */
	/* The V-ISAN (Version Identifier of a International Standard Audiovisual Number as defined in ISO 15706-2) for the Video. A V-ISAN comprises four blocks of four hexadecimal charaters followed by a check character, followed by two further blocks of four hexadecimal characters, followed by a further check character. */
	optional string v_i_s_a_n = 7;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a VideoType. */
message VideoType {
	/* First defined in: ern36 */
	/* The Namespace of the VideoType. This is represented in an XML schema as an XML Attribute. */
	optional string namespace = 1;
	/* First defined in: ern36 */
	/* A UserDefined value of the VideoType. This is represented in an XML schema as an XML Attribute. */
	optional string user_defined_value = 2;
	optional ern383.avs.VideoType ext_value = 3;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a WebPage. */
message WebPage {
	/* First defined in: ern36 */
	/* A Composite containing the Name of the WebPage. */
	optional Name page_name = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of the PartyId for a Party owning the WebPage. If no Namespace is given, the Identifier is a DdexPartyId (DPID). Note that DPIDs are not normally used to identify Artists, Producers or other Creators. */
	repeated PartyId party_id = 2;
	/* First defined in: ern36 */
	/* A Password needed to grant a user maintenance access to the WebPage in combination with the UserName. */
	optional string password = 3;
	/* First defined in: ern36 */
	/* A Composite containing details of ReleaseIds. If available, a GRid should always be used. */
	repeated ReleaseId release_id = 4;
	/* First defined in: ern36 */
	/* A URL of the WebPage. */
	optional string u_r_l = 5;
	/* First defined in: ern36 */
	/* An Identifier of a computer user who is granted maintenance access to the WebPage. */
	optional string user_name = 6;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of a Web policy. */
message WebPolicy {
	/* First defined in: ern36 */
	/* A Flag indicating whether a MessageRecipient shall block all access to the Release (=True) or not (=False). */
	optional bool access_blocking_requested = 1;
	/* First defined in: ern36 */
	/* A Type of limitation on the access of the UgcSite. This governs whether the content of UgcSites is only accessible to members/friends of the site or not. */
	optional ern383.avs.AccessLimitation access_limitation = 2;
	/* First defined in: ern36 */
	/* A Composite containing details of conditions. */
	optional Condition condition = 3;
	/* First defined in: ern36 */
	/* A Flag indicating whether a user is allowed to embed a Release on his website outside the UgcSite (=True) or not (=False). */
	optional bool embedding_allowed = 4;
	/* First defined in: ern36 */
	/* A Flag indicating whether syndication is allowed (=True) or not (=False). */
	optional bool syndication_allowed = 5;
	/* First defined in: ern36 */
	/* A Flag indicating whether a user is allowed to provide a Comment for the Release on the UgcSite (=True) or not (=False). */
	optional bool user_comment_allowed = 6;
	/* First defined in: ern36 */
	/* A Flag indicating whether a user is allowed to provide a rating for the Release on the UgcSite (=True) or not (=False). */
	optional bool user_rating_allowed = 7;
	/* First defined in: ern36 */
	/* A Flag indicating whether a user is allowed to provide a response to a Comment for the Release on the UgcSite (=True) or not (=False). */
	optional bool user_responses_allowed = 8;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* A Composite containing details of one or more Works. */
message WorkList {
	/* First defined in: ern36 */
	/* The Language and script for the Elements of the WorkList as defined in IETF RfC 4646. The default is the same as indicated for the containing composite. Language and Script are provided as lang[-scipt][-region][-variant].  This is represented in an XML schema as an XML Attribute. */
	optional string language_and_script_code = 1;
	/* First defined in: ern36 */
	/* A Composite containing details of a MusicalWork contained in a Resource. */
	repeated MusicalWork musical_work = 2;
}

/* Defined in: ern381 -> ern383 */
/* SchemaConverter generated enum replacement message type */
message ddexC_CurrentTerritoryCode {
	optional string enum_value = 1;
}

/* Defined in: ern371 -> Removed in ern381 -> Removed in ern383 */
/* SchemaConverter generated base level auto field wrapper */
message ddex_ICPN {
	optional string auto_value = 1;
}

/* Defined in: ern371 -> ern381 -> ern383 */
/* SchemaConverter generated base level auto field wrapper */
message ddex_IsoDate {
	optional string auto_value = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* SchemaConverter generated base level auto field wrapper */
message ddex_LocalCollectionAnchorReference {
	optional string auto_value = 1;
}

/* Defined in: ern36 -> ern371 -> ern381 -> ern383 */
/* SchemaConverter generated base level auto field wrapper */
message ddex_LocalResourceAnchorReference {
	optional string auto_value = 1;
}

