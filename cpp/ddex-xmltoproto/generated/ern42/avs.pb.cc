// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ddex-xmltoproto/generated/ern42/avs.proto

#include "ddex-xmltoproto/generated/ern42/avs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace ern411 {
namespace avs {
class AdditionalTitleTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AdditionalTitleType> _instance;
} _AdditionalTitleType_default_instance_;
class AdministratingRecordCompanyRoleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AdministratingRecordCompanyRole> _instance;
} _AdministratingRecordCompanyRole_default_instance_;
class AffiliationTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AffiliationType> _instance;
} _AffiliationType_default_instance_;
class AllTerritoryCodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AllTerritoryCode> _instance;
} _AllTerritoryCode_default_instance_;
class AspectRatioTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AspectRatioType> _instance;
} _AspectRatioType_default_instance_;
class AudioCodecTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AudioCodecType> _instance;
} _AudioCodecType_default_instance_;
class BinaryDataTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BinaryDataType> _instance;
} _BinaryDataType_default_instance_;
class CarrierTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CarrierType> _instance;
} _CarrierType_default_instance_;
class CodingTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CodingType> _instance;
} _CodingType_default_instance_;
class CommercialModelTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommercialModelType> _instance;
} _CommercialModelType_default_instance_;
class CompositeMusicalWorkTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompositeMusicalWorkType> _instance;
} _CompositeMusicalWorkType_default_instance_;
class ContainerFormatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ContainerFormat> _instance;
} _ContainerFormat_default_instance_;
class ContributorRoleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ContributorRole> _instance;
} _ContributorRole_default_instance_;
class CueOriginDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CueOrigin> _instance;
} _CueOrigin_default_instance_;
class CueSheetTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CueSheetType> _instance;
} _CueSheetType_default_instance_;
class CueUseTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CueUseType> _instance;
} _CueUseType_default_instance_;
class CurrencyCodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CurrencyCode> _instance;
} _CurrencyCode_default_instance_;
class CurrentTerritoryCodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CurrentTerritoryCode> _instance;
} _CurrentTerritoryCode_default_instance_;
class DisplayArtistRoleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisplayArtistRole> _instance;
} _DisplayArtistRole_default_instance_;
class ExpressionTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpressionType> _instance;
} _ExpressionType_default_instance_;
class ExternallyLinkedResourceTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExternallyLinkedResourceType> _instance;
} _ExternallyLinkedResourceType_default_instance_;
class FingerprintAlgorithmTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FingerprintAlgorithmType> _instance;
} _FingerprintAlgorithmType_default_instance_;
class FrameRateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FrameRate> _instance;
} _FrameRate_default_instance_;
class HashSumAlgorithmTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HashSumAlgorithmType> _instance;
} _HashSumAlgorithmType_default_instance_;
class ImageCodecTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImageCodecType> _instance;
} _ImageCodecType_default_instance_;
class ImageTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImageType> _instance;
} _ImageType_default_instance_;
class InstrumentTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InstrumentType> _instance;
} _InstrumentType_default_instance_;
class IsoLanguageCodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IsoLanguageCode> _instance;
} _IsoLanguageCode_default_instance_;
class LabelTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LabelType> _instance;
} _LabelType_default_instance_;
class LinkDescriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LinkDescription> _instance;
} _LinkDescription_default_instance_;
class MessageControlTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageControlType> _instance;
} _MessageControlType_default_instance_;
class OperatingSystemTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperatingSystemType> _instance;
} _OperatingSystemType_default_instance_;
class PLineTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PLineType> _instance;
} _PLineType_default_instance_;
class ParentalWarningTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParentalWarningType> _instance;
} _ParentalWarningType_default_instance_;
class PartyRelationshipTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PartyRelationshipType> _instance;
} _PartyRelationshipType_default_instance_;
class PeriodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Period> _instance;
} _Period_default_instance_;
class PriceInformationTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PriceInformationType> _instance;
} _PriceInformationType_default_instance_;
class PriceTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PriceType> _instance;
} _PriceType_default_instance_;
class PurposeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Purpose> _instance;
} _Purpose_default_instance_;
class RatingAgencyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RatingAgency> _instance;
} _RatingAgency_default_instance_;
class RatingReasonDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RatingReason> _instance;
} _RatingReason_default_instance_;
class RecordingModeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecordingMode> _instance;
} _RecordingMode_default_instance_;
class ReferenceCreationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReferenceCreation> _instance;
} _ReferenceCreation_default_instance_;
class RelationalRelatorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RelationalRelator> _instance;
} _RelationalRelator_default_instance_;
class ReleaseProfileVariantVersionIdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReleaseProfileVariantVersionId> _instance;
} _ReleaseProfileVariantVersionId_default_instance_;
class ReleaseProfileVersionIdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReleaseProfileVersionId> _instance;
} _ReleaseProfileVersionId_default_instance_;
class ReleaseRelationshipTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReleaseRelationshipType> _instance;
} _ReleaseRelationshipType_default_instance_;
class ReleaseType_ERN4DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReleaseType_ERN4> _instance;
} _ReleaseType_ERN4_default_instance_;
class ResourceGroupTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceGroupType> _instance;
} _ResourceGroupType_default_instance_;
class ResourceRelationshipTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceRelationshipType> _instance;
} _ResourceRelationshipType_default_instance_;
class RightsClaimPolicyTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RightsClaimPolicyType> _instance;
} _RightsClaimPolicyType_default_instance_;
class RightsControllerRoleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RightsControllerRole> _instance;
} _RightsControllerRole_default_instance_;
class RightsControllerTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RightsControllerType> _instance;
} _RightsControllerType_default_instance_;
class RightsCoverageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RightsCoverage> _instance;
} _RightsCoverage_default_instance_;
class SheetMusicCodecTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SheetMusicCodecType> _instance;
} _SheetMusicCodecType_default_instance_;
class SheetMusicTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SheetMusicType> _instance;
} _SheetMusicType_default_instance_;
class SoftwareTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SoftwareType> _instance;
} _SoftwareType_default_instance_;
class SoundRecordingTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SoundRecordingType> _instance;
} _SoundRecordingType_default_instance_;
class SubTitleTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubTitleType> _instance;
} _SubTitleType_default_instance_;
class TerritoryCodeTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TerritoryCodeType> _instance;
} _TerritoryCodeType_default_instance_;
class TerritoryCodeTypeIncludingDeprecatedCodesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TerritoryCodeTypeIncludingDeprecatedCodes> _instance;
} _TerritoryCodeTypeIncludingDeprecatedCodes_default_instance_;
class TextCodecTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TextCodecType> _instance;
} _TextCodecType_default_instance_;
class TextTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TextType> _instance;
} _TextType_default_instance_;
class ThemeTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ThemeType> _instance;
} _ThemeType_default_instance_;
class TitleTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TitleType> _instance;
} _TitleType_default_instance_;
class UnitOfBitRateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnitOfBitRate> _instance;
} _UnitOfBitRate_default_instance_;
class UnitOfConditionValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnitOfConditionValue> _instance;
} _UnitOfConditionValue_default_instance_;
class UnitOfExtentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnitOfExtent> _instance;
} _UnitOfExtent_default_instance_;
class UnitOfFrameRateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnitOfFrameRate> _instance;
} _UnitOfFrameRate_default_instance_;
class UnitOfFrequencyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnitOfFrequency> _instance;
} _UnitOfFrequency_default_instance_;
class UseTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UseType> _instance;
} _UseType_default_instance_;
class VersionTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VersionType> _instance;
} _VersionType_default_instance_;
class VideoCodecTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VideoCodecType> _instance;
} _VideoCodecType_default_instance_;
class VideoDefinitionTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VideoDefinitionType> _instance;
} _VideoDefinitionType_default_instance_;
class VideoTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VideoType> _instance;
} _VideoType_default_instance_;
class VisualPerceptionTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VisualPerceptionType> _instance;
} _VisualPerceptionType_default_instance_;
class VocalTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VocalType> _instance;
} _VocalType_default_instance_;
}  // namespace avs
}  // namespace ern411
static void InitDefaultsscc_info_AdditionalTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_AdditionalTitleType_default_instance_;
    new (ptr) ::ern411::avs::AdditionalTitleType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::AdditionalTitleType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AdditionalTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AdditionalTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_AdministratingRecordCompanyRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_AdministratingRecordCompanyRole_default_instance_;
    new (ptr) ::ern411::avs::AdministratingRecordCompanyRole();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::AdministratingRecordCompanyRole::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AdministratingRecordCompanyRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AdministratingRecordCompanyRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_AffiliationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_AffiliationType_default_instance_;
    new (ptr) ::ern411::avs::AffiliationType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::AffiliationType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AffiliationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AffiliationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_AllTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_AllTerritoryCode_default_instance_;
    new (ptr) ::ern411::avs::AllTerritoryCode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::AllTerritoryCode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AllTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AllTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_AspectRatioType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_AspectRatioType_default_instance_;
    new (ptr) ::ern411::avs::AspectRatioType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::AspectRatioType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AspectRatioType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AspectRatioType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_AudioCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_AudioCodecType_default_instance_;
    new (ptr) ::ern411::avs::AudioCodecType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::AudioCodecType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AudioCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AudioCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_BinaryDataType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_BinaryDataType_default_instance_;
    new (ptr) ::ern411::avs::BinaryDataType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::BinaryDataType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BinaryDataType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BinaryDataType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CarrierType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CarrierType_default_instance_;
    new (ptr) ::ern411::avs::CarrierType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CarrierType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CarrierType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CarrierType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CodingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CodingType_default_instance_;
    new (ptr) ::ern411::avs::CodingType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CodingType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CodingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CodingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CommercialModelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CommercialModelType_default_instance_;
    new (ptr) ::ern411::avs::CommercialModelType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CommercialModelType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommercialModelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CommercialModelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CompositeMusicalWorkType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CompositeMusicalWorkType_default_instance_;
    new (ptr) ::ern411::avs::CompositeMusicalWorkType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CompositeMusicalWorkType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CompositeMusicalWorkType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CompositeMusicalWorkType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ContainerFormat_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ContainerFormat_default_instance_;
    new (ptr) ::ern411::avs::ContainerFormat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ContainerFormat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContainerFormat_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ContainerFormat_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ContributorRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ContributorRole_default_instance_;
    new (ptr) ::ern411::avs::ContributorRole();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ContributorRole::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContributorRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ContributorRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CueOrigin_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CueOrigin_default_instance_;
    new (ptr) ::ern411::avs::CueOrigin();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CueOrigin::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CueOrigin_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CueOrigin_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CueSheetType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CueSheetType_default_instance_;
    new (ptr) ::ern411::avs::CueSheetType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CueSheetType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CueSheetType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CueSheetType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CueUseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CueUseType_default_instance_;
    new (ptr) ::ern411::avs::CueUseType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CueUseType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CueUseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CueUseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CurrencyCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CurrencyCode_default_instance_;
    new (ptr) ::ern411::avs::CurrencyCode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CurrencyCode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CurrencyCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CurrencyCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_CurrentTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_CurrentTerritoryCode_default_instance_;
    new (ptr) ::ern411::avs::CurrentTerritoryCode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::CurrentTerritoryCode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CurrentTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CurrentTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_DisplayArtistRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_DisplayArtistRole_default_instance_;
    new (ptr) ::ern411::avs::DisplayArtistRole();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::DisplayArtistRole::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisplayArtistRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DisplayArtistRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ExpressionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ExpressionType_default_instance_;
    new (ptr) ::ern411::avs::ExpressionType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ExpressionType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpressionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExpressionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ExternallyLinkedResourceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ExternallyLinkedResourceType_default_instance_;
    new (ptr) ::ern411::avs::ExternallyLinkedResourceType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ExternallyLinkedResourceType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExternallyLinkedResourceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExternallyLinkedResourceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_FingerprintAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_FingerprintAlgorithmType_default_instance_;
    new (ptr) ::ern411::avs::FingerprintAlgorithmType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::FingerprintAlgorithmType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FingerprintAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FingerprintAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_FrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_FrameRate_default_instance_;
    new (ptr) ::ern411::avs::FrameRate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::FrameRate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_HashSumAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_HashSumAlgorithmType_default_instance_;
    new (ptr) ::ern411::avs::HashSumAlgorithmType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::HashSumAlgorithmType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HashSumAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HashSumAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ImageCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ImageCodecType_default_instance_;
    new (ptr) ::ern411::avs::ImageCodecType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ImageCodecType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImageCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImageCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ImageType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ImageType_default_instance_;
    new (ptr) ::ern411::avs::ImageType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ImageType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImageType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImageType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_InstrumentType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_InstrumentType_default_instance_;
    new (ptr) ::ern411::avs::InstrumentType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::InstrumentType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InstrumentType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InstrumentType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_IsoLanguageCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_IsoLanguageCode_default_instance_;
    new (ptr) ::ern411::avs::IsoLanguageCode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::IsoLanguageCode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IsoLanguageCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IsoLanguageCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_LabelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_LabelType_default_instance_;
    new (ptr) ::ern411::avs::LabelType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::LabelType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LabelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LabelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_LinkDescription_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_LinkDescription_default_instance_;
    new (ptr) ::ern411::avs::LinkDescription();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::LinkDescription::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LinkDescription_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LinkDescription_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_MessageControlType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_MessageControlType_default_instance_;
    new (ptr) ::ern411::avs::MessageControlType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::MessageControlType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessageControlType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MessageControlType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_OperatingSystemType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_OperatingSystemType_default_instance_;
    new (ptr) ::ern411::avs::OperatingSystemType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::OperatingSystemType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperatingSystemType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OperatingSystemType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_PLineType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_PLineType_default_instance_;
    new (ptr) ::ern411::avs::PLineType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::PLineType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PLineType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PLineType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ParentalWarningType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ParentalWarningType_default_instance_;
    new (ptr) ::ern411::avs::ParentalWarningType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ParentalWarningType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParentalWarningType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParentalWarningType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_PartyRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_PartyRelationshipType_default_instance_;
    new (ptr) ::ern411::avs::PartyRelationshipType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::PartyRelationshipType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PartyRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PartyRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_Period_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_Period_default_instance_;
    new (ptr) ::ern411::avs::Period();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::Period::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Period_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Period_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_PriceInformationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_PriceInformationType_default_instance_;
    new (ptr) ::ern411::avs::PriceInformationType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::PriceInformationType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PriceInformationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PriceInformationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_PriceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_PriceType_default_instance_;
    new (ptr) ::ern411::avs::PriceType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::PriceType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PriceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PriceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_Purpose_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_Purpose_default_instance_;
    new (ptr) ::ern411::avs::Purpose();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::Purpose::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Purpose_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Purpose_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_RatingAgency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_RatingAgency_default_instance_;
    new (ptr) ::ern411::avs::RatingAgency();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::RatingAgency::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RatingAgency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RatingAgency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_RatingReason_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_RatingReason_default_instance_;
    new (ptr) ::ern411::avs::RatingReason();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::RatingReason::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RatingReason_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RatingReason_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_RecordingMode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_RecordingMode_default_instance_;
    new (ptr) ::ern411::avs::RecordingMode();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::RecordingMode::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecordingMode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RecordingMode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ReferenceCreation_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ReferenceCreation_default_instance_;
    new (ptr) ::ern411::avs::ReferenceCreation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ReferenceCreation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReferenceCreation_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReferenceCreation_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_RelationalRelator_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_RelationalRelator_default_instance_;
    new (ptr) ::ern411::avs::RelationalRelator();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::RelationalRelator::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RelationalRelator_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RelationalRelator_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ReleaseProfileVariantVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ReleaseProfileVariantVersionId_default_instance_;
    new (ptr) ::ern411::avs::ReleaseProfileVariantVersionId();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ReleaseProfileVariantVersionId::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReleaseProfileVariantVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReleaseProfileVariantVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ReleaseProfileVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ReleaseProfileVersionId_default_instance_;
    new (ptr) ::ern411::avs::ReleaseProfileVersionId();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ReleaseProfileVersionId::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReleaseProfileVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReleaseProfileVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ReleaseRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ReleaseRelationshipType_default_instance_;
    new (ptr) ::ern411::avs::ReleaseRelationshipType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ReleaseRelationshipType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReleaseRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReleaseRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ReleaseType_ERN4_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ReleaseType_ERN4_default_instance_;
    new (ptr) ::ern411::avs::ReleaseType_ERN4();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ReleaseType_ERN4::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReleaseType_ERN4_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReleaseType_ERN4_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ResourceGroupType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ResourceGroupType_default_instance_;
    new (ptr) ::ern411::avs::ResourceGroupType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ResourceGroupType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceGroupType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResourceGroupType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ResourceRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ResourceRelationshipType_default_instance_;
    new (ptr) ::ern411::avs::ResourceRelationshipType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ResourceRelationshipType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResourceRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_RightsClaimPolicyType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_RightsClaimPolicyType_default_instance_;
    new (ptr) ::ern411::avs::RightsClaimPolicyType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::RightsClaimPolicyType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RightsClaimPolicyType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RightsClaimPolicyType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_RightsControllerRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_RightsControllerRole_default_instance_;
    new (ptr) ::ern411::avs::RightsControllerRole();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::RightsControllerRole::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RightsControllerRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RightsControllerRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_RightsControllerType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_RightsControllerType_default_instance_;
    new (ptr) ::ern411::avs::RightsControllerType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::RightsControllerType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RightsControllerType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RightsControllerType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_RightsCoverage_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_RightsCoverage_default_instance_;
    new (ptr) ::ern411::avs::RightsCoverage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::RightsCoverage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RightsCoverage_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RightsCoverage_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_SheetMusicCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_SheetMusicCodecType_default_instance_;
    new (ptr) ::ern411::avs::SheetMusicCodecType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::SheetMusicCodecType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SheetMusicCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SheetMusicCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_SheetMusicType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_SheetMusicType_default_instance_;
    new (ptr) ::ern411::avs::SheetMusicType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::SheetMusicType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SheetMusicType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SheetMusicType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_SoftwareType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_SoftwareType_default_instance_;
    new (ptr) ::ern411::avs::SoftwareType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::SoftwareType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SoftwareType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SoftwareType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_SoundRecordingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_SoundRecordingType_default_instance_;
    new (ptr) ::ern411::avs::SoundRecordingType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::SoundRecordingType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SoundRecordingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SoundRecordingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_SubTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_SubTitleType_default_instance_;
    new (ptr) ::ern411::avs::SubTitleType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::SubTitleType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SubTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SubTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_TerritoryCodeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_TerritoryCodeType_default_instance_;
    new (ptr) ::ern411::avs::TerritoryCodeType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::TerritoryCodeType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TerritoryCodeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TerritoryCodeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_TerritoryCodeTypeIncludingDeprecatedCodes_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_TerritoryCodeTypeIncludingDeprecatedCodes_default_instance_;
    new (ptr) ::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TerritoryCodeTypeIncludingDeprecatedCodes_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TerritoryCodeTypeIncludingDeprecatedCodes_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_TextCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_TextCodecType_default_instance_;
    new (ptr) ::ern411::avs::TextCodecType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::TextCodecType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TextCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TextCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_TextType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_TextType_default_instance_;
    new (ptr) ::ern411::avs::TextType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::TextType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TextType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TextType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_ThemeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_ThemeType_default_instance_;
    new (ptr) ::ern411::avs::ThemeType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::ThemeType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ThemeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ThemeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_TitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_TitleType_default_instance_;
    new (ptr) ::ern411::avs::TitleType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::TitleType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_UnitOfBitRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_UnitOfBitRate_default_instance_;
    new (ptr) ::ern411::avs::UnitOfBitRate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::UnitOfBitRate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnitOfBitRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnitOfBitRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_UnitOfConditionValue_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_UnitOfConditionValue_default_instance_;
    new (ptr) ::ern411::avs::UnitOfConditionValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::UnitOfConditionValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnitOfConditionValue_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnitOfConditionValue_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_UnitOfExtent_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_UnitOfExtent_default_instance_;
    new (ptr) ::ern411::avs::UnitOfExtent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::UnitOfExtent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnitOfExtent_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnitOfExtent_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_UnitOfFrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_UnitOfFrameRate_default_instance_;
    new (ptr) ::ern411::avs::UnitOfFrameRate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::UnitOfFrameRate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnitOfFrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnitOfFrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_UnitOfFrequency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_UnitOfFrequency_default_instance_;
    new (ptr) ::ern411::avs::UnitOfFrequency();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::UnitOfFrequency::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnitOfFrequency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnitOfFrequency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_UseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_UseType_default_instance_;
    new (ptr) ::ern411::avs::UseType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::UseType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_VersionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_VersionType_default_instance_;
    new (ptr) ::ern411::avs::VersionType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::VersionType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VersionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VersionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_VideoCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_VideoCodecType_default_instance_;
    new (ptr) ::ern411::avs::VideoCodecType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::VideoCodecType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VideoCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VideoCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_VideoDefinitionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_VideoDefinitionType_default_instance_;
    new (ptr) ::ern411::avs::VideoDefinitionType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::VideoDefinitionType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VideoDefinitionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VideoDefinitionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_VideoType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_VideoType_default_instance_;
    new (ptr) ::ern411::avs::VideoType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::VideoType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VideoType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VideoType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_VisualPerceptionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_VisualPerceptionType_default_instance_;
    new (ptr) ::ern411::avs::VisualPerceptionType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::VisualPerceptionType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VisualPerceptionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VisualPerceptionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static void InitDefaultsscc_info_VocalType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ern411::avs::_VocalType_default_instance_;
    new (ptr) ::ern411::avs::VocalType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ern411::avs::VocalType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VocalType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VocalType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto[77];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AdditionalTitleType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AdditionalTitleType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AdditionalTitleType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AdministratingRecordCompanyRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AdministratingRecordCompanyRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AdministratingRecordCompanyRole, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AffiliationType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AffiliationType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AffiliationType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AllTerritoryCode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AllTerritoryCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AllTerritoryCode, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AspectRatioType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AspectRatioType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AspectRatioType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AudioCodecType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AudioCodecType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::AudioCodecType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::BinaryDataType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::BinaryDataType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::BinaryDataType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CarrierType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CarrierType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CarrierType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CodingType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CodingType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CodingType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CommercialModelType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CommercialModelType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CommercialModelType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CompositeMusicalWorkType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CompositeMusicalWorkType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CompositeMusicalWorkType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ContainerFormat, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ContainerFormat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ContainerFormat, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ContributorRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ContributorRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ContributorRole, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueOrigin, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueOrigin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueOrigin, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueSheetType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueSheetType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueSheetType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueUseType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueUseType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CueUseType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CurrencyCode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CurrencyCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CurrencyCode, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CurrentTerritoryCode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CurrentTerritoryCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::CurrentTerritoryCode, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::DisplayArtistRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::DisplayArtistRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::DisplayArtistRole, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ExpressionType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ExpressionType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ExpressionType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ExternallyLinkedResourceType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ExternallyLinkedResourceType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ExternallyLinkedResourceType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::FingerprintAlgorithmType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::FingerprintAlgorithmType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::FingerprintAlgorithmType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::FrameRate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::FrameRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::FrameRate, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::HashSumAlgorithmType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::HashSumAlgorithmType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::HashSumAlgorithmType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ImageCodecType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ImageCodecType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ImageCodecType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ImageType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ImageType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ImageType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::InstrumentType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::InstrumentType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::InstrumentType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::IsoLanguageCode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::IsoLanguageCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::IsoLanguageCode, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::LabelType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::LabelType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::LabelType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::LinkDescription, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::LinkDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::LinkDescription, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::MessageControlType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::MessageControlType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::MessageControlType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::OperatingSystemType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::OperatingSystemType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::OperatingSystemType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PLineType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PLineType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PLineType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ParentalWarningType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ParentalWarningType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ParentalWarningType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PartyRelationshipType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PartyRelationshipType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PartyRelationshipType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::Period, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::Period, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::Period, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PriceInformationType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PriceInformationType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PriceInformationType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PriceType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PriceType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::PriceType, auto_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::Purpose, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::Purpose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::Purpose, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RatingAgency, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RatingAgency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RatingAgency, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RatingReason, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RatingReason, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RatingReason, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RecordingMode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RecordingMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RecordingMode, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReferenceCreation, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReferenceCreation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReferenceCreation, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RelationalRelator, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RelationalRelator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RelationalRelator, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseProfileVariantVersionId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseProfileVariantVersionId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseProfileVariantVersionId, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseProfileVersionId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseProfileVersionId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseProfileVersionId, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseRelationshipType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseRelationshipType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseRelationshipType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseType_ERN4, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseType_ERN4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ReleaseType_ERN4, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ResourceGroupType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ResourceGroupType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ResourceGroupType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ResourceRelationshipType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ResourceRelationshipType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ResourceRelationshipType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsClaimPolicyType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsClaimPolicyType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsClaimPolicyType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsControllerRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsControllerRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsControllerRole, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsControllerType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsControllerType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsControllerType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsCoverage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsCoverage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::RightsCoverage, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SheetMusicCodecType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SheetMusicCodecType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SheetMusicCodecType, auto_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SheetMusicType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SheetMusicType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SheetMusicType, auto_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SoftwareType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SoftwareType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SoftwareType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SoundRecordingType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SoundRecordingType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SoundRecordingType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SubTitleType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SubTitleType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::SubTitleType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TerritoryCodeType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TerritoryCodeType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TerritoryCodeType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TextCodecType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TextCodecType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TextCodecType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TextType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TextType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TextType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ThemeType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ThemeType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::ThemeType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TitleType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TitleType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::TitleType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfBitRate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfBitRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfBitRate, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfConditionValue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfConditionValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfConditionValue, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfExtent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfExtent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfExtent, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfFrameRate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfFrameRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfFrameRate, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfFrequency, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfFrequency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UnitOfFrequency, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UseType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UseType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::UseType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VersionType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VersionType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VersionType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoCodecType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoCodecType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoCodecType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoDefinitionType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoDefinitionType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoDefinitionType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VideoType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VisualPerceptionType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VisualPerceptionType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VisualPerceptionType, enum_value_),
  0,
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VocalType, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VocalType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ern411::avs::VocalType, enum_value_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::ern411::avs::AdditionalTitleType)},
  { 7, 13, sizeof(::ern411::avs::AdministratingRecordCompanyRole)},
  { 14, 20, sizeof(::ern411::avs::AffiliationType)},
  { 21, 27, sizeof(::ern411::avs::AllTerritoryCode)},
  { 28, 34, sizeof(::ern411::avs::AspectRatioType)},
  { 35, 41, sizeof(::ern411::avs::AudioCodecType)},
  { 42, 48, sizeof(::ern411::avs::BinaryDataType)},
  { 49, 55, sizeof(::ern411::avs::CarrierType)},
  { 56, 62, sizeof(::ern411::avs::CodingType)},
  { 63, 69, sizeof(::ern411::avs::CommercialModelType)},
  { 70, 76, sizeof(::ern411::avs::CompositeMusicalWorkType)},
  { 77, 83, sizeof(::ern411::avs::ContainerFormat)},
  { 84, 90, sizeof(::ern411::avs::ContributorRole)},
  { 91, 97, sizeof(::ern411::avs::CueOrigin)},
  { 98, 104, sizeof(::ern411::avs::CueSheetType)},
  { 105, 111, sizeof(::ern411::avs::CueUseType)},
  { 112, 118, sizeof(::ern411::avs::CurrencyCode)},
  { 119, 125, sizeof(::ern411::avs::CurrentTerritoryCode)},
  { 126, 132, sizeof(::ern411::avs::DisplayArtistRole)},
  { 133, 139, sizeof(::ern411::avs::ExpressionType)},
  { 140, 146, sizeof(::ern411::avs::ExternallyLinkedResourceType)},
  { 147, 153, sizeof(::ern411::avs::FingerprintAlgorithmType)},
  { 154, 160, sizeof(::ern411::avs::FrameRate)},
  { 161, 167, sizeof(::ern411::avs::HashSumAlgorithmType)},
  { 168, 174, sizeof(::ern411::avs::ImageCodecType)},
  { 175, 181, sizeof(::ern411::avs::ImageType)},
  { 182, 188, sizeof(::ern411::avs::InstrumentType)},
  { 189, 195, sizeof(::ern411::avs::IsoLanguageCode)},
  { 196, 202, sizeof(::ern411::avs::LabelType)},
  { 203, 209, sizeof(::ern411::avs::LinkDescription)},
  { 210, 216, sizeof(::ern411::avs::MessageControlType)},
  { 217, 223, sizeof(::ern411::avs::OperatingSystemType)},
  { 224, 230, sizeof(::ern411::avs::PLineType)},
  { 231, 237, sizeof(::ern411::avs::ParentalWarningType)},
  { 238, 244, sizeof(::ern411::avs::PartyRelationshipType)},
  { 245, 251, sizeof(::ern411::avs::Period)},
  { 252, 258, sizeof(::ern411::avs::PriceInformationType)},
  { 259, 265, sizeof(::ern411::avs::PriceType)},
  { 266, 272, sizeof(::ern411::avs::Purpose)},
  { 273, 279, sizeof(::ern411::avs::RatingAgency)},
  { 280, 286, sizeof(::ern411::avs::RatingReason)},
  { 287, 293, sizeof(::ern411::avs::RecordingMode)},
  { 294, 300, sizeof(::ern411::avs::ReferenceCreation)},
  { 301, 307, sizeof(::ern411::avs::RelationalRelator)},
  { 308, 314, sizeof(::ern411::avs::ReleaseProfileVariantVersionId)},
  { 315, 321, sizeof(::ern411::avs::ReleaseProfileVersionId)},
  { 322, 328, sizeof(::ern411::avs::ReleaseRelationshipType)},
  { 329, 335, sizeof(::ern411::avs::ReleaseType_ERN4)},
  { 336, 342, sizeof(::ern411::avs::ResourceGroupType)},
  { 343, 349, sizeof(::ern411::avs::ResourceRelationshipType)},
  { 350, 356, sizeof(::ern411::avs::RightsClaimPolicyType)},
  { 357, 363, sizeof(::ern411::avs::RightsControllerRole)},
  { 364, 370, sizeof(::ern411::avs::RightsControllerType)},
  { 371, 377, sizeof(::ern411::avs::RightsCoverage)},
  { 378, 384, sizeof(::ern411::avs::SheetMusicCodecType)},
  { 385, 391, sizeof(::ern411::avs::SheetMusicType)},
  { 392, 398, sizeof(::ern411::avs::SoftwareType)},
  { 399, 405, sizeof(::ern411::avs::SoundRecordingType)},
  { 406, 412, sizeof(::ern411::avs::SubTitleType)},
  { 413, 419, sizeof(::ern411::avs::TerritoryCodeType)},
  { 420, 426, sizeof(::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes)},
  { 427, 433, sizeof(::ern411::avs::TextCodecType)},
  { 434, 440, sizeof(::ern411::avs::TextType)},
  { 441, 447, sizeof(::ern411::avs::ThemeType)},
  { 448, 454, sizeof(::ern411::avs::TitleType)},
  { 455, 461, sizeof(::ern411::avs::UnitOfBitRate)},
  { 462, 468, sizeof(::ern411::avs::UnitOfConditionValue)},
  { 469, 475, sizeof(::ern411::avs::UnitOfExtent)},
  { 476, 482, sizeof(::ern411::avs::UnitOfFrameRate)},
  { 483, 489, sizeof(::ern411::avs::UnitOfFrequency)},
  { 490, 496, sizeof(::ern411::avs::UseType)},
  { 497, 503, sizeof(::ern411::avs::VersionType)},
  { 504, 510, sizeof(::ern411::avs::VideoCodecType)},
  { 511, 517, sizeof(::ern411::avs::VideoDefinitionType)},
  { 518, 524, sizeof(::ern411::avs::VideoType)},
  { 525, 531, sizeof(::ern411::avs::VisualPerceptionType)},
  { 532, 538, sizeof(::ern411::avs::VocalType)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_AdditionalTitleType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_AdministratingRecordCompanyRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_AffiliationType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_AllTerritoryCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_AspectRatioType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_AudioCodecType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_BinaryDataType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CarrierType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CodingType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CommercialModelType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CompositeMusicalWorkType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ContainerFormat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ContributorRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CueOrigin_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CueSheetType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CueUseType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CurrencyCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_CurrentTerritoryCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_DisplayArtistRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ExpressionType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ExternallyLinkedResourceType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_FingerprintAlgorithmType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_FrameRate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_HashSumAlgorithmType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ImageCodecType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ImageType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_InstrumentType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_IsoLanguageCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_LabelType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_LinkDescription_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_MessageControlType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_OperatingSystemType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_PLineType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ParentalWarningType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_PartyRelationshipType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_Period_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_PriceInformationType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_PriceType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_Purpose_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_RatingAgency_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_RatingReason_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_RecordingMode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ReferenceCreation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_RelationalRelator_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ReleaseProfileVariantVersionId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ReleaseProfileVersionId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ReleaseRelationshipType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ReleaseType_ERN4_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ResourceGroupType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ResourceRelationshipType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_RightsClaimPolicyType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_RightsControllerRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_RightsControllerType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_RightsCoverage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_SheetMusicCodecType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_SheetMusicType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_SoftwareType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_SoundRecordingType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_SubTitleType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_TerritoryCodeType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_TerritoryCodeTypeIncludingDeprecatedCodes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_TextCodecType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_TextType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_ThemeType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_TitleType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_UnitOfBitRate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_UnitOfConditionValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_UnitOfExtent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_UnitOfFrameRate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_UnitOfFrequency_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_UseType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_VersionType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_VideoCodecType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_VideoDefinitionType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_VideoType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_VisualPerceptionType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ern411::avs::_VocalType_default_instance_),
};

const char descriptor_table_protodef_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n)ddex-xmltoproto/generated/ern42/avs.pr"
  "oto\022\nern411.avs\")\n\023AdditionalTitleType\022\022"
  "\n\nenum_value\030\001 \001(\t\"5\n\037AdministratingReco"
  "rdCompanyRole\022\022\n\nenum_value\030\001 \001(\t\"%\n\017Aff"
  "iliationType\022\022\n\nenum_value\030\001 \001(\t\"&\n\020AllT"
  "erritoryCode\022\022\n\nenum_value\030\001 \001(\t\"%\n\017Aspe"
  "ctRatioType\022\022\n\nenum_value\030\001 \001(\t\"$\n\016Audio"
  "CodecType\022\022\n\nenum_value\030\001 \001(\t\"$\n\016BinaryD"
  "ataType\022\022\n\nenum_value\030\001 \001(\t\"!\n\013CarrierTy"
  "pe\022\022\n\nenum_value\030\001 \001(\t\" \n\nCodingType\022\022\n\n"
  "enum_value\030\001 \001(\t\")\n\023CommercialModelType\022"
  "\022\n\nenum_value\030\001 \001(\t\".\n\030CompositeMusicalW"
  "orkType\022\022\n\nenum_value\030\001 \001(\t\"%\n\017Container"
  "Format\022\022\n\nenum_value\030\001 \001(\t\"%\n\017Contributo"
  "rRole\022\022\n\nenum_value\030\001 \001(\t\"\037\n\tCueOrigin\022\022"
  "\n\nenum_value\030\001 \001(\t\"\"\n\014CueSheetType\022\022\n\nen"
  "um_value\030\001 \001(\t\" \n\nCueUseType\022\022\n\nenum_val"
  "ue\030\001 \001(\t\"\"\n\014CurrencyCode\022\022\n\nenum_value\030\001"
  " \001(\t\"*\n\024CurrentTerritoryCode\022\022\n\nenum_val"
  "ue\030\001 \001(\t\"\'\n\021DisplayArtistRole\022\022\n\nenum_va"
  "lue\030\001 \001(\t\"$\n\016ExpressionType\022\022\n\nenum_valu"
  "e\030\001 \001(\t\"2\n\034ExternallyLinkedResourceType\022"
  "\022\n\nenum_value\030\001 \001(\t\".\n\030FingerprintAlgori"
  "thmType\022\022\n\nenum_value\030\001 \001(\t\"\037\n\tFrameRate"
  "\022\022\n\nenum_value\030\001 \001(\t\"*\n\024HashSumAlgorithm"
  "Type\022\022\n\nenum_value\030\001 \001(\t\"$\n\016ImageCodecTy"
  "pe\022\022\n\nenum_value\030\001 \001(\t\"\037\n\tImageType\022\022\n\ne"
  "num_value\030\001 \001(\t\"$\n\016InstrumentType\022\022\n\nenu"
  "m_value\030\001 \001(\t\"%\n\017IsoLanguageCode\022\022\n\nenum"
  "_value\030\001 \001(\t\"\037\n\tLabelType\022\022\n\nenum_value\030"
  "\001 \001(\t\"%\n\017LinkDescription\022\022\n\nenum_value\030\001"
  " \001(\t\"(\n\022MessageControlType\022\022\n\nenum_value"
  "\030\001 \001(\t\")\n\023OperatingSystemType\022\022\n\nenum_va"
  "lue\030\001 \001(\t\"\037\n\tPLineType\022\022\n\nenum_value\030\001 \001"
  "(\t\")\n\023ParentalWarningType\022\022\n\nenum_value\030"
  "\001 \001(\t\"+\n\025PartyRelationshipType\022\022\n\nenum_v"
  "alue\030\001 \001(\t\"\034\n\006Period\022\022\n\nenum_value\030\001 \001(\t"
  "\"*\n\024PriceInformationType\022\022\n\nenum_value\030\001"
  " \001(\t\"\037\n\tPriceType\022\022\n\nauto_value\030\001 \001(\t\"\035\n"
  "\007Purpose\022\022\n\nenum_value\030\001 \001(\t\"\"\n\014RatingAg"
  "ency\022\022\n\nenum_value\030\001 \001(\t\"\"\n\014RatingReason"
  "\022\022\n\nenum_value\030\001 \001(\t\"#\n\rRecordingMode\022\022\n"
  "\nenum_value\030\001 \001(\t\"\'\n\021ReferenceCreation\022\022"
  "\n\nenum_value\030\001 \001(\t\"\'\n\021RelationalRelator\022"
  "\022\n\nenum_value\030\001 \001(\t\"4\n\036ReleaseProfileVar"
  "iantVersionId\022\022\n\nenum_value\030\001 \001(\t\"-\n\027Rel"
  "easeProfileVersionId\022\022\n\nenum_value\030\001 \001(\t"
  "\"-\n\027ReleaseRelationshipType\022\022\n\nenum_valu"
  "e\030\001 \001(\t\"&\n\020ReleaseType_ERN4\022\022\n\nenum_valu"
  "e\030\001 \001(\t\"\'\n\021ResourceGroupType\022\022\n\nenum_val"
  "ue\030\001 \001(\t\".\n\030ResourceRelationshipType\022\022\n\n"
  "enum_value\030\001 \001(\t\"+\n\025RightsClaimPolicyTyp"
  "e\022\022\n\nenum_value\030\001 \001(\t\"*\n\024RightsControlle"
  "rRole\022\022\n\nenum_value\030\001 \001(\t\"*\n\024RightsContr"
  "ollerType\022\022\n\nenum_value\030\001 \001(\t\"$\n\016RightsC"
  "overage\022\022\n\nenum_value\030\001 \001(\t\")\n\023SheetMusi"
  "cCodecType\022\022\n\nauto_value\030\001 \001(\t\"$\n\016SheetM"
  "usicType\022\022\n\nauto_value\030\001 \001(\t\"\"\n\014Software"
  "Type\022\022\n\nenum_value\030\001 \001(\t\"(\n\022SoundRecordi"
  "ngType\022\022\n\nenum_value\030\001 \001(\t\"\"\n\014SubTitleTy"
  "pe\022\022\n\nenum_value\030\001 \001(\t\"\'\n\021TerritoryCodeT"
  "ype\022\022\n\nenum_value\030\001 \001(\t\"\?\n)TerritoryCode"
  "TypeIncludingDeprecatedCodes\022\022\n\nenum_val"
  "ue\030\001 \001(\t\"#\n\rTextCodecType\022\022\n\nenum_value\030"
  "\001 \001(\t\"\036\n\010TextType\022\022\n\nenum_value\030\001 \001(\t\"\037\n"
  "\tThemeType\022\022\n\nenum_value\030\001 \001(\t\"\037\n\tTitleT"
  "ype\022\022\n\nenum_value\030\001 \001(\t\"#\n\rUnitOfBitRate"
  "\022\022\n\nenum_value\030\001 \001(\t\"*\n\024UnitOfConditionV"
  "alue\022\022\n\nenum_value\030\001 \001(\t\"\"\n\014UnitOfExtent"
  "\022\022\n\nenum_value\030\001 \001(\t\"%\n\017UnitOfFrameRate\022"
  "\022\n\nenum_value\030\001 \001(\t\"%\n\017UnitOfFrequency\022\022"
  "\n\nenum_value\030\001 \001(\t\"\035\n\007UseType\022\022\n\nenum_va"
  "lue\030\001 \001(\t\"!\n\013VersionType\022\022\n\nenum_value\030\001"
  " \001(\t\"$\n\016VideoCodecType\022\022\n\nenum_value\030\001 \001"
  "(\t\")\n\023VideoDefinitionType\022\022\n\nenum_value\030"
  "\001 \001(\t\"\037\n\tVideoType\022\022\n\nenum_value\030\001 \001(\t\"*"
  "\n\024VisualPerceptionType\022\022\n\nenum_value\030\001 \001"
  "(\t\"\037\n\tVocalType\022\022\n\nenum_value\030\001 \001(\t"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto_sccs[77] = {
  &scc_info_AdditionalTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_AdministratingRecordCompanyRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_AffiliationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_AllTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_AspectRatioType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_AudioCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_BinaryDataType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CarrierType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CodingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CommercialModelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CompositeMusicalWorkType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ContainerFormat_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ContributorRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CueOrigin_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CueSheetType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CueUseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CurrencyCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_CurrentTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_DisplayArtistRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ExpressionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ExternallyLinkedResourceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_FingerprintAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_FrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_HashSumAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ImageCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ImageType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_InstrumentType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_IsoLanguageCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_LabelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_LinkDescription_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_MessageControlType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_OperatingSystemType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_PLineType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ParentalWarningType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_PartyRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_Period_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_PriceInformationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_PriceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_Purpose_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_RatingAgency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_RatingReason_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_RecordingMode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ReferenceCreation_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_RelationalRelator_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ReleaseProfileVariantVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ReleaseProfileVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ReleaseRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ReleaseType_ERN4_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ResourceGroupType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ResourceRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_RightsClaimPolicyType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_RightsControllerRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_RightsControllerType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_RightsCoverage_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_SheetMusicCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_SheetMusicType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_SoftwareType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_SoundRecordingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_SubTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_TerritoryCodeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_TerritoryCodeTypeIncludingDeprecatedCodes_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_TextCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_TextType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_ThemeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_TitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_UnitOfBitRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_UnitOfConditionValue_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_UnitOfExtent_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_UnitOfFrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_UnitOfFrequency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_UseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_VersionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_VideoCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_VideoDefinitionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_VideoType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_VisualPerceptionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
  &scc_info_VocalType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto = {
  false, false, descriptor_table_protodef_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto, "ddex-xmltoproto/generated/ern42/avs.proto", 3115,
  &descriptor_table_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto_once, descriptor_table_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto_sccs, descriptor_table_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto_deps, 77, 0,
  schemas, file_default_instances, TableStruct_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto::offsets,
  file_level_metadata_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto, 77, file_level_enum_descriptors_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto, file_level_service_descriptors_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto)), true);
namespace ern411 {
namespace avs {

// ===================================================================

void AdditionalTitleType::InitAsDefaultInstance() {
}
class AdditionalTitleType::_Internal {
 public:
  using HasBits = decltype(std::declval<AdditionalTitleType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AdditionalTitleType::AdditionalTitleType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.AdditionalTitleType)
}
AdditionalTitleType::AdditionalTitleType(const AdditionalTitleType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.AdditionalTitleType)
}

void AdditionalTitleType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AdditionalTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AdditionalTitleType::~AdditionalTitleType() {
  // @@protoc_insertion_point(destructor:ern411.avs.AdditionalTitleType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AdditionalTitleType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AdditionalTitleType::ArenaDtor(void* object) {
  AdditionalTitleType* _this = reinterpret_cast< AdditionalTitleType* >(object);
  (void)_this;
}
void AdditionalTitleType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AdditionalTitleType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdditionalTitleType& AdditionalTitleType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AdditionalTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void AdditionalTitleType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.AdditionalTitleType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdditionalTitleType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.AdditionalTitleType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AdditionalTitleType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.AdditionalTitleType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.AdditionalTitleType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.AdditionalTitleType)
  return target;
}

size_t AdditionalTitleType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.AdditionalTitleType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdditionalTitleType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.AdditionalTitleType)
  GOOGLE_DCHECK_NE(&from, this);
  const AdditionalTitleType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AdditionalTitleType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.AdditionalTitleType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.AdditionalTitleType)
    MergeFrom(*source);
  }
}

void AdditionalTitleType::MergeFrom(const AdditionalTitleType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.AdditionalTitleType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void AdditionalTitleType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.AdditionalTitleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdditionalTitleType::CopyFrom(const AdditionalTitleType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.AdditionalTitleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdditionalTitleType::IsInitialized() const {
  return true;
}

void AdditionalTitleType::InternalSwap(AdditionalTitleType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AdditionalTitleType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AdministratingRecordCompanyRole::InitAsDefaultInstance() {
}
class AdministratingRecordCompanyRole::_Internal {
 public:
  using HasBits = decltype(std::declval<AdministratingRecordCompanyRole>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AdministratingRecordCompanyRole::AdministratingRecordCompanyRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.AdministratingRecordCompanyRole)
}
AdministratingRecordCompanyRole::AdministratingRecordCompanyRole(const AdministratingRecordCompanyRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.AdministratingRecordCompanyRole)
}

void AdministratingRecordCompanyRole::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AdministratingRecordCompanyRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AdministratingRecordCompanyRole::~AdministratingRecordCompanyRole() {
  // @@protoc_insertion_point(destructor:ern411.avs.AdministratingRecordCompanyRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AdministratingRecordCompanyRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AdministratingRecordCompanyRole::ArenaDtor(void* object) {
  AdministratingRecordCompanyRole* _this = reinterpret_cast< AdministratingRecordCompanyRole* >(object);
  (void)_this;
}
void AdministratingRecordCompanyRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AdministratingRecordCompanyRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AdministratingRecordCompanyRole& AdministratingRecordCompanyRole::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AdministratingRecordCompanyRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void AdministratingRecordCompanyRole::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.AdministratingRecordCompanyRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AdministratingRecordCompanyRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.AdministratingRecordCompanyRole.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AdministratingRecordCompanyRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.AdministratingRecordCompanyRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.AdministratingRecordCompanyRole.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.AdministratingRecordCompanyRole)
  return target;
}

size_t AdministratingRecordCompanyRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.AdministratingRecordCompanyRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AdministratingRecordCompanyRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.AdministratingRecordCompanyRole)
  GOOGLE_DCHECK_NE(&from, this);
  const AdministratingRecordCompanyRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AdministratingRecordCompanyRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.AdministratingRecordCompanyRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.AdministratingRecordCompanyRole)
    MergeFrom(*source);
  }
}

void AdministratingRecordCompanyRole::MergeFrom(const AdministratingRecordCompanyRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.AdministratingRecordCompanyRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void AdministratingRecordCompanyRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.AdministratingRecordCompanyRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdministratingRecordCompanyRole::CopyFrom(const AdministratingRecordCompanyRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.AdministratingRecordCompanyRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdministratingRecordCompanyRole::IsInitialized() const {
  return true;
}

void AdministratingRecordCompanyRole::InternalSwap(AdministratingRecordCompanyRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AdministratingRecordCompanyRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AffiliationType::InitAsDefaultInstance() {
}
class AffiliationType::_Internal {
 public:
  using HasBits = decltype(std::declval<AffiliationType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AffiliationType::AffiliationType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.AffiliationType)
}
AffiliationType::AffiliationType(const AffiliationType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.AffiliationType)
}

void AffiliationType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AffiliationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AffiliationType::~AffiliationType() {
  // @@protoc_insertion_point(destructor:ern411.avs.AffiliationType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AffiliationType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AffiliationType::ArenaDtor(void* object) {
  AffiliationType* _this = reinterpret_cast< AffiliationType* >(object);
  (void)_this;
}
void AffiliationType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AffiliationType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AffiliationType& AffiliationType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AffiliationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void AffiliationType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.AffiliationType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AffiliationType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.AffiliationType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AffiliationType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.AffiliationType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.AffiliationType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.AffiliationType)
  return target;
}

size_t AffiliationType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.AffiliationType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AffiliationType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.AffiliationType)
  GOOGLE_DCHECK_NE(&from, this);
  const AffiliationType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AffiliationType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.AffiliationType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.AffiliationType)
    MergeFrom(*source);
  }
}

void AffiliationType::MergeFrom(const AffiliationType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.AffiliationType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void AffiliationType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.AffiliationType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AffiliationType::CopyFrom(const AffiliationType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.AffiliationType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AffiliationType::IsInitialized() const {
  return true;
}

void AffiliationType::InternalSwap(AffiliationType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AffiliationType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AllTerritoryCode::InitAsDefaultInstance() {
}
class AllTerritoryCode::_Internal {
 public:
  using HasBits = decltype(std::declval<AllTerritoryCode>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AllTerritoryCode::AllTerritoryCode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.AllTerritoryCode)
}
AllTerritoryCode::AllTerritoryCode(const AllTerritoryCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.AllTerritoryCode)
}

void AllTerritoryCode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AllTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AllTerritoryCode::~AllTerritoryCode() {
  // @@protoc_insertion_point(destructor:ern411.avs.AllTerritoryCode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AllTerritoryCode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AllTerritoryCode::ArenaDtor(void* object) {
  AllTerritoryCode* _this = reinterpret_cast< AllTerritoryCode* >(object);
  (void)_this;
}
void AllTerritoryCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AllTerritoryCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AllTerritoryCode& AllTerritoryCode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AllTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void AllTerritoryCode::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.AllTerritoryCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AllTerritoryCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.AllTerritoryCode.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AllTerritoryCode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.AllTerritoryCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.AllTerritoryCode.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.AllTerritoryCode)
  return target;
}

size_t AllTerritoryCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.AllTerritoryCode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllTerritoryCode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.AllTerritoryCode)
  GOOGLE_DCHECK_NE(&from, this);
  const AllTerritoryCode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AllTerritoryCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.AllTerritoryCode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.AllTerritoryCode)
    MergeFrom(*source);
  }
}

void AllTerritoryCode::MergeFrom(const AllTerritoryCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.AllTerritoryCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void AllTerritoryCode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.AllTerritoryCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllTerritoryCode::CopyFrom(const AllTerritoryCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.AllTerritoryCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllTerritoryCode::IsInitialized() const {
  return true;
}

void AllTerritoryCode::InternalSwap(AllTerritoryCode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AllTerritoryCode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AspectRatioType::InitAsDefaultInstance() {
}
class AspectRatioType::_Internal {
 public:
  using HasBits = decltype(std::declval<AspectRatioType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AspectRatioType::AspectRatioType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.AspectRatioType)
}
AspectRatioType::AspectRatioType(const AspectRatioType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.AspectRatioType)
}

void AspectRatioType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AspectRatioType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AspectRatioType::~AspectRatioType() {
  // @@protoc_insertion_point(destructor:ern411.avs.AspectRatioType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AspectRatioType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AspectRatioType::ArenaDtor(void* object) {
  AspectRatioType* _this = reinterpret_cast< AspectRatioType* >(object);
  (void)_this;
}
void AspectRatioType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AspectRatioType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AspectRatioType& AspectRatioType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AspectRatioType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void AspectRatioType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.AspectRatioType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AspectRatioType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.AspectRatioType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AspectRatioType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.AspectRatioType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.AspectRatioType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.AspectRatioType)
  return target;
}

size_t AspectRatioType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.AspectRatioType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AspectRatioType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.AspectRatioType)
  GOOGLE_DCHECK_NE(&from, this);
  const AspectRatioType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AspectRatioType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.AspectRatioType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.AspectRatioType)
    MergeFrom(*source);
  }
}

void AspectRatioType::MergeFrom(const AspectRatioType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.AspectRatioType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void AspectRatioType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.AspectRatioType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AspectRatioType::CopyFrom(const AspectRatioType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.AspectRatioType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AspectRatioType::IsInitialized() const {
  return true;
}

void AspectRatioType::InternalSwap(AspectRatioType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AspectRatioType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AudioCodecType::InitAsDefaultInstance() {
}
class AudioCodecType::_Internal {
 public:
  using HasBits = decltype(std::declval<AudioCodecType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AudioCodecType::AudioCodecType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.AudioCodecType)
}
AudioCodecType::AudioCodecType(const AudioCodecType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.AudioCodecType)
}

void AudioCodecType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AudioCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AudioCodecType::~AudioCodecType() {
  // @@protoc_insertion_point(destructor:ern411.avs.AudioCodecType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AudioCodecType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AudioCodecType::ArenaDtor(void* object) {
  AudioCodecType* _this = reinterpret_cast< AudioCodecType* >(object);
  (void)_this;
}
void AudioCodecType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AudioCodecType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AudioCodecType& AudioCodecType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AudioCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void AudioCodecType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.AudioCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AudioCodecType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.AudioCodecType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AudioCodecType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.AudioCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.AudioCodecType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.AudioCodecType)
  return target;
}

size_t AudioCodecType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.AudioCodecType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AudioCodecType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.AudioCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioCodecType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AudioCodecType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.AudioCodecType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.AudioCodecType)
    MergeFrom(*source);
  }
}

void AudioCodecType::MergeFrom(const AudioCodecType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.AudioCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void AudioCodecType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.AudioCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioCodecType::CopyFrom(const AudioCodecType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.AudioCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioCodecType::IsInitialized() const {
  return true;
}

void AudioCodecType::InternalSwap(AudioCodecType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AudioCodecType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BinaryDataType::InitAsDefaultInstance() {
}
class BinaryDataType::_Internal {
 public:
  using HasBits = decltype(std::declval<BinaryDataType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

BinaryDataType::BinaryDataType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.BinaryDataType)
}
BinaryDataType::BinaryDataType(const BinaryDataType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.BinaryDataType)
}

void BinaryDataType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BinaryDataType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BinaryDataType::~BinaryDataType() {
  // @@protoc_insertion_point(destructor:ern411.avs.BinaryDataType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BinaryDataType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BinaryDataType::ArenaDtor(void* object) {
  BinaryDataType* _this = reinterpret_cast< BinaryDataType* >(object);
  (void)_this;
}
void BinaryDataType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BinaryDataType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BinaryDataType& BinaryDataType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BinaryDataType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void BinaryDataType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.BinaryDataType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BinaryDataType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.BinaryDataType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BinaryDataType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.BinaryDataType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.BinaryDataType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.BinaryDataType)
  return target;
}

size_t BinaryDataType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.BinaryDataType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BinaryDataType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.BinaryDataType)
  GOOGLE_DCHECK_NE(&from, this);
  const BinaryDataType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BinaryDataType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.BinaryDataType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.BinaryDataType)
    MergeFrom(*source);
  }
}

void BinaryDataType::MergeFrom(const BinaryDataType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.BinaryDataType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void BinaryDataType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.BinaryDataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryDataType::CopyFrom(const BinaryDataType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.BinaryDataType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinaryDataType::IsInitialized() const {
  return true;
}

void BinaryDataType::InternalSwap(BinaryDataType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata BinaryDataType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CarrierType::InitAsDefaultInstance() {
}
class CarrierType::_Internal {
 public:
  using HasBits = decltype(std::declval<CarrierType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CarrierType::CarrierType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CarrierType)
}
CarrierType::CarrierType(const CarrierType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CarrierType)
}

void CarrierType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CarrierType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CarrierType::~CarrierType() {
  // @@protoc_insertion_point(destructor:ern411.avs.CarrierType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CarrierType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CarrierType::ArenaDtor(void* object) {
  CarrierType* _this = reinterpret_cast< CarrierType* >(object);
  (void)_this;
}
void CarrierType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CarrierType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CarrierType& CarrierType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CarrierType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CarrierType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CarrierType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CarrierType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CarrierType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CarrierType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CarrierType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CarrierType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CarrierType)
  return target;
}

size_t CarrierType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CarrierType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CarrierType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CarrierType)
  GOOGLE_DCHECK_NE(&from, this);
  const CarrierType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CarrierType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CarrierType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CarrierType)
    MergeFrom(*source);
  }
}

void CarrierType::MergeFrom(const CarrierType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CarrierType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CarrierType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CarrierType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarrierType::CopyFrom(const CarrierType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CarrierType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarrierType::IsInitialized() const {
  return true;
}

void CarrierType::InternalSwap(CarrierType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CarrierType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CodingType::InitAsDefaultInstance() {
}
class CodingType::_Internal {
 public:
  using HasBits = decltype(std::declval<CodingType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CodingType::CodingType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CodingType)
}
CodingType::CodingType(const CodingType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CodingType)
}

void CodingType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CodingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CodingType::~CodingType() {
  // @@protoc_insertion_point(destructor:ern411.avs.CodingType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CodingType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CodingType::ArenaDtor(void* object) {
  CodingType* _this = reinterpret_cast< CodingType* >(object);
  (void)_this;
}
void CodingType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CodingType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CodingType& CodingType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CodingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CodingType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CodingType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CodingType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CodingType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CodingType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CodingType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CodingType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CodingType)
  return target;
}

size_t CodingType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CodingType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CodingType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CodingType)
  GOOGLE_DCHECK_NE(&from, this);
  const CodingType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CodingType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CodingType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CodingType)
    MergeFrom(*source);
  }
}

void CodingType::MergeFrom(const CodingType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CodingType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CodingType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CodingType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodingType::CopyFrom(const CodingType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CodingType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodingType::IsInitialized() const {
  return true;
}

void CodingType::InternalSwap(CodingType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CodingType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CommercialModelType::InitAsDefaultInstance() {
}
class CommercialModelType::_Internal {
 public:
  using HasBits = decltype(std::declval<CommercialModelType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CommercialModelType::CommercialModelType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CommercialModelType)
}
CommercialModelType::CommercialModelType(const CommercialModelType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CommercialModelType)
}

void CommercialModelType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommercialModelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CommercialModelType::~CommercialModelType() {
  // @@protoc_insertion_point(destructor:ern411.avs.CommercialModelType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommercialModelType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CommercialModelType::ArenaDtor(void* object) {
  CommercialModelType* _this = reinterpret_cast< CommercialModelType* >(object);
  (void)_this;
}
void CommercialModelType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommercialModelType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommercialModelType& CommercialModelType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommercialModelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CommercialModelType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CommercialModelType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommercialModelType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CommercialModelType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommercialModelType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CommercialModelType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CommercialModelType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CommercialModelType)
  return target;
}

size_t CommercialModelType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CommercialModelType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommercialModelType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CommercialModelType)
  GOOGLE_DCHECK_NE(&from, this);
  const CommercialModelType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommercialModelType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CommercialModelType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CommercialModelType)
    MergeFrom(*source);
  }
}

void CommercialModelType::MergeFrom(const CommercialModelType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CommercialModelType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CommercialModelType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CommercialModelType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommercialModelType::CopyFrom(const CommercialModelType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CommercialModelType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommercialModelType::IsInitialized() const {
  return true;
}

void CommercialModelType::InternalSwap(CommercialModelType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CommercialModelType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CompositeMusicalWorkType::InitAsDefaultInstance() {
}
class CompositeMusicalWorkType::_Internal {
 public:
  using HasBits = decltype(std::declval<CompositeMusicalWorkType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CompositeMusicalWorkType::CompositeMusicalWorkType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CompositeMusicalWorkType)
}
CompositeMusicalWorkType::CompositeMusicalWorkType(const CompositeMusicalWorkType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CompositeMusicalWorkType)
}

void CompositeMusicalWorkType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CompositeMusicalWorkType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CompositeMusicalWorkType::~CompositeMusicalWorkType() {
  // @@protoc_insertion_point(destructor:ern411.avs.CompositeMusicalWorkType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CompositeMusicalWorkType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CompositeMusicalWorkType::ArenaDtor(void* object) {
  CompositeMusicalWorkType* _this = reinterpret_cast< CompositeMusicalWorkType* >(object);
  (void)_this;
}
void CompositeMusicalWorkType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompositeMusicalWorkType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompositeMusicalWorkType& CompositeMusicalWorkType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompositeMusicalWorkType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CompositeMusicalWorkType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CompositeMusicalWorkType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompositeMusicalWorkType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CompositeMusicalWorkType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CompositeMusicalWorkType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CompositeMusicalWorkType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CompositeMusicalWorkType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CompositeMusicalWorkType)
  return target;
}

size_t CompositeMusicalWorkType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CompositeMusicalWorkType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompositeMusicalWorkType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CompositeMusicalWorkType)
  GOOGLE_DCHECK_NE(&from, this);
  const CompositeMusicalWorkType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompositeMusicalWorkType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CompositeMusicalWorkType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CompositeMusicalWorkType)
    MergeFrom(*source);
  }
}

void CompositeMusicalWorkType::MergeFrom(const CompositeMusicalWorkType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CompositeMusicalWorkType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CompositeMusicalWorkType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CompositeMusicalWorkType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompositeMusicalWorkType::CopyFrom(const CompositeMusicalWorkType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CompositeMusicalWorkType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompositeMusicalWorkType::IsInitialized() const {
  return true;
}

void CompositeMusicalWorkType::InternalSwap(CompositeMusicalWorkType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CompositeMusicalWorkType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ContainerFormat::InitAsDefaultInstance() {
}
class ContainerFormat::_Internal {
 public:
  using HasBits = decltype(std::declval<ContainerFormat>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ContainerFormat::ContainerFormat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ContainerFormat)
}
ContainerFormat::ContainerFormat(const ContainerFormat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ContainerFormat)
}

void ContainerFormat::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ContainerFormat_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ContainerFormat::~ContainerFormat() {
  // @@protoc_insertion_point(destructor:ern411.avs.ContainerFormat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ContainerFormat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ContainerFormat::ArenaDtor(void* object) {
  ContainerFormat* _this = reinterpret_cast< ContainerFormat* >(object);
  (void)_this;
}
void ContainerFormat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ContainerFormat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContainerFormat& ContainerFormat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ContainerFormat_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ContainerFormat::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ContainerFormat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ContainerFormat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ContainerFormat.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ContainerFormat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ContainerFormat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ContainerFormat.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ContainerFormat)
  return target;
}

size_t ContainerFormat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ContainerFormat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContainerFormat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ContainerFormat)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerFormat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ContainerFormat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ContainerFormat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ContainerFormat)
    MergeFrom(*source);
  }
}

void ContainerFormat::MergeFrom(const ContainerFormat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ContainerFormat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ContainerFormat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ContainerFormat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerFormat::CopyFrom(const ContainerFormat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ContainerFormat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerFormat::IsInitialized() const {
  return true;
}

void ContainerFormat::InternalSwap(ContainerFormat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ContainerFormat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ContributorRole::InitAsDefaultInstance() {
}
class ContributorRole::_Internal {
 public:
  using HasBits = decltype(std::declval<ContributorRole>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ContributorRole::ContributorRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ContributorRole)
}
ContributorRole::ContributorRole(const ContributorRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ContributorRole)
}

void ContributorRole::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ContributorRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ContributorRole::~ContributorRole() {
  // @@protoc_insertion_point(destructor:ern411.avs.ContributorRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ContributorRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ContributorRole::ArenaDtor(void* object) {
  ContributorRole* _this = reinterpret_cast< ContributorRole* >(object);
  (void)_this;
}
void ContributorRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ContributorRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContributorRole& ContributorRole::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ContributorRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ContributorRole::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ContributorRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ContributorRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ContributorRole.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ContributorRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ContributorRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ContributorRole.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ContributorRole)
  return target;
}

size_t ContributorRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ContributorRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContributorRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ContributorRole)
  GOOGLE_DCHECK_NE(&from, this);
  const ContributorRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ContributorRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ContributorRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ContributorRole)
    MergeFrom(*source);
  }
}

void ContributorRole::MergeFrom(const ContributorRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ContributorRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ContributorRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ContributorRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContributorRole::CopyFrom(const ContributorRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ContributorRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContributorRole::IsInitialized() const {
  return true;
}

void ContributorRole::InternalSwap(ContributorRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ContributorRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CueOrigin::InitAsDefaultInstance() {
}
class CueOrigin::_Internal {
 public:
  using HasBits = decltype(std::declval<CueOrigin>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CueOrigin::CueOrigin(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CueOrigin)
}
CueOrigin::CueOrigin(const CueOrigin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CueOrigin)
}

void CueOrigin::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CueOrigin_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CueOrigin::~CueOrigin() {
  // @@protoc_insertion_point(destructor:ern411.avs.CueOrigin)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CueOrigin::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CueOrigin::ArenaDtor(void* object) {
  CueOrigin* _this = reinterpret_cast< CueOrigin* >(object);
  (void)_this;
}
void CueOrigin::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CueOrigin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CueOrigin& CueOrigin::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CueOrigin_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CueOrigin::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CueOrigin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CueOrigin::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CueOrigin.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CueOrigin::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CueOrigin)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CueOrigin.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CueOrigin)
  return target;
}

size_t CueOrigin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CueOrigin)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CueOrigin::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CueOrigin)
  GOOGLE_DCHECK_NE(&from, this);
  const CueOrigin* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CueOrigin>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CueOrigin)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CueOrigin)
    MergeFrom(*source);
  }
}

void CueOrigin::MergeFrom(const CueOrigin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CueOrigin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CueOrigin::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CueOrigin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CueOrigin::CopyFrom(const CueOrigin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CueOrigin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CueOrigin::IsInitialized() const {
  return true;
}

void CueOrigin::InternalSwap(CueOrigin* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CueOrigin::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CueSheetType::InitAsDefaultInstance() {
}
class CueSheetType::_Internal {
 public:
  using HasBits = decltype(std::declval<CueSheetType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CueSheetType::CueSheetType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CueSheetType)
}
CueSheetType::CueSheetType(const CueSheetType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CueSheetType)
}

void CueSheetType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CueSheetType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CueSheetType::~CueSheetType() {
  // @@protoc_insertion_point(destructor:ern411.avs.CueSheetType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CueSheetType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CueSheetType::ArenaDtor(void* object) {
  CueSheetType* _this = reinterpret_cast< CueSheetType* >(object);
  (void)_this;
}
void CueSheetType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CueSheetType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CueSheetType& CueSheetType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CueSheetType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CueSheetType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CueSheetType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CueSheetType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CueSheetType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CueSheetType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CueSheetType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CueSheetType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CueSheetType)
  return target;
}

size_t CueSheetType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CueSheetType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CueSheetType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CueSheetType)
  GOOGLE_DCHECK_NE(&from, this);
  const CueSheetType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CueSheetType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CueSheetType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CueSheetType)
    MergeFrom(*source);
  }
}

void CueSheetType::MergeFrom(const CueSheetType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CueSheetType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CueSheetType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CueSheetType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CueSheetType::CopyFrom(const CueSheetType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CueSheetType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CueSheetType::IsInitialized() const {
  return true;
}

void CueSheetType::InternalSwap(CueSheetType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CueSheetType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CueUseType::InitAsDefaultInstance() {
}
class CueUseType::_Internal {
 public:
  using HasBits = decltype(std::declval<CueUseType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CueUseType::CueUseType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CueUseType)
}
CueUseType::CueUseType(const CueUseType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CueUseType)
}

void CueUseType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CueUseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CueUseType::~CueUseType() {
  // @@protoc_insertion_point(destructor:ern411.avs.CueUseType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CueUseType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CueUseType::ArenaDtor(void* object) {
  CueUseType* _this = reinterpret_cast< CueUseType* >(object);
  (void)_this;
}
void CueUseType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CueUseType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CueUseType& CueUseType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CueUseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CueUseType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CueUseType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CueUseType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CueUseType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CueUseType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CueUseType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CueUseType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CueUseType)
  return target;
}

size_t CueUseType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CueUseType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CueUseType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CueUseType)
  GOOGLE_DCHECK_NE(&from, this);
  const CueUseType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CueUseType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CueUseType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CueUseType)
    MergeFrom(*source);
  }
}

void CueUseType::MergeFrom(const CueUseType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CueUseType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CueUseType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CueUseType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CueUseType::CopyFrom(const CueUseType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CueUseType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CueUseType::IsInitialized() const {
  return true;
}

void CueUseType::InternalSwap(CueUseType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CueUseType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CurrencyCode::InitAsDefaultInstance() {
}
class CurrencyCode::_Internal {
 public:
  using HasBits = decltype(std::declval<CurrencyCode>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CurrencyCode::CurrencyCode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CurrencyCode)
}
CurrencyCode::CurrencyCode(const CurrencyCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CurrencyCode)
}

void CurrencyCode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CurrencyCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CurrencyCode::~CurrencyCode() {
  // @@protoc_insertion_point(destructor:ern411.avs.CurrencyCode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CurrencyCode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CurrencyCode::ArenaDtor(void* object) {
  CurrencyCode* _this = reinterpret_cast< CurrencyCode* >(object);
  (void)_this;
}
void CurrencyCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CurrencyCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CurrencyCode& CurrencyCode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CurrencyCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CurrencyCode::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CurrencyCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CurrencyCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CurrencyCode.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CurrencyCode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CurrencyCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CurrencyCode.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CurrencyCode)
  return target;
}

size_t CurrencyCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CurrencyCode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CurrencyCode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CurrencyCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrencyCode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CurrencyCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CurrencyCode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CurrencyCode)
    MergeFrom(*source);
  }
}

void CurrencyCode::MergeFrom(const CurrencyCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CurrencyCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CurrencyCode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CurrencyCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrencyCode::CopyFrom(const CurrencyCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CurrencyCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrencyCode::IsInitialized() const {
  return true;
}

void CurrencyCode::InternalSwap(CurrencyCode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CurrencyCode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CurrentTerritoryCode::InitAsDefaultInstance() {
}
class CurrentTerritoryCode::_Internal {
 public:
  using HasBits = decltype(std::declval<CurrentTerritoryCode>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CurrentTerritoryCode::CurrentTerritoryCode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.CurrentTerritoryCode)
}
CurrentTerritoryCode::CurrentTerritoryCode(const CurrentTerritoryCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.CurrentTerritoryCode)
}

void CurrentTerritoryCode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CurrentTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CurrentTerritoryCode::~CurrentTerritoryCode() {
  // @@protoc_insertion_point(destructor:ern411.avs.CurrentTerritoryCode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CurrentTerritoryCode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CurrentTerritoryCode::ArenaDtor(void* object) {
  CurrentTerritoryCode* _this = reinterpret_cast< CurrentTerritoryCode* >(object);
  (void)_this;
}
void CurrentTerritoryCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CurrentTerritoryCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CurrentTerritoryCode& CurrentTerritoryCode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CurrentTerritoryCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void CurrentTerritoryCode::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.CurrentTerritoryCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CurrentTerritoryCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.CurrentTerritoryCode.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CurrentTerritoryCode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.CurrentTerritoryCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.CurrentTerritoryCode.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.CurrentTerritoryCode)
  return target;
}

size_t CurrentTerritoryCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.CurrentTerritoryCode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CurrentTerritoryCode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.CurrentTerritoryCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CurrentTerritoryCode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CurrentTerritoryCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.CurrentTerritoryCode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.CurrentTerritoryCode)
    MergeFrom(*source);
  }
}

void CurrentTerritoryCode::MergeFrom(const CurrentTerritoryCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.CurrentTerritoryCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void CurrentTerritoryCode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.CurrentTerritoryCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CurrentTerritoryCode::CopyFrom(const CurrentTerritoryCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.CurrentTerritoryCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CurrentTerritoryCode::IsInitialized() const {
  return true;
}

void CurrentTerritoryCode::InternalSwap(CurrentTerritoryCode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CurrentTerritoryCode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisplayArtistRole::InitAsDefaultInstance() {
}
class DisplayArtistRole::_Internal {
 public:
  using HasBits = decltype(std::declval<DisplayArtistRole>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DisplayArtistRole::DisplayArtistRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.DisplayArtistRole)
}
DisplayArtistRole::DisplayArtistRole(const DisplayArtistRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.DisplayArtistRole)
}

void DisplayArtistRole::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisplayArtistRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DisplayArtistRole::~DisplayArtistRole() {
  // @@protoc_insertion_point(destructor:ern411.avs.DisplayArtistRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DisplayArtistRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DisplayArtistRole::ArenaDtor(void* object) {
  DisplayArtistRole* _this = reinterpret_cast< DisplayArtistRole* >(object);
  (void)_this;
}
void DisplayArtistRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DisplayArtistRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisplayArtistRole& DisplayArtistRole::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisplayArtistRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void DisplayArtistRole::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.DisplayArtistRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DisplayArtistRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.DisplayArtistRole.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisplayArtistRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.DisplayArtistRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.DisplayArtistRole.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.DisplayArtistRole)
  return target;
}

size_t DisplayArtistRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.DisplayArtistRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisplayArtistRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.DisplayArtistRole)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayArtistRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisplayArtistRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.DisplayArtistRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.DisplayArtistRole)
    MergeFrom(*source);
  }
}

void DisplayArtistRole::MergeFrom(const DisplayArtistRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.DisplayArtistRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void DisplayArtistRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.DisplayArtistRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayArtistRole::CopyFrom(const DisplayArtistRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.DisplayArtistRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayArtistRole::IsInitialized() const {
  return true;
}

void DisplayArtistRole::InternalSwap(DisplayArtistRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DisplayArtistRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExpressionType::InitAsDefaultInstance() {
}
class ExpressionType::_Internal {
 public:
  using HasBits = decltype(std::declval<ExpressionType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ExpressionType::ExpressionType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ExpressionType)
}
ExpressionType::ExpressionType(const ExpressionType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ExpressionType)
}

void ExpressionType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExpressionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ExpressionType::~ExpressionType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ExpressionType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExpressionType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExpressionType::ArenaDtor(void* object) {
  ExpressionType* _this = reinterpret_cast< ExpressionType* >(object);
  (void)_this;
}
void ExpressionType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExpressionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpressionType& ExpressionType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpressionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ExpressionType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ExpressionType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExpressionType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ExpressionType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpressionType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ExpressionType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ExpressionType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ExpressionType)
  return target;
}

size_t ExpressionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ExpressionType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpressionType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ExpressionType)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpressionType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpressionType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ExpressionType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ExpressionType)
    MergeFrom(*source);
  }
}

void ExpressionType::MergeFrom(const ExpressionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ExpressionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ExpressionType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ExpressionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpressionType::CopyFrom(const ExpressionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ExpressionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpressionType::IsInitialized() const {
  return true;
}

void ExpressionType::InternalSwap(ExpressionType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpressionType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExternallyLinkedResourceType::InitAsDefaultInstance() {
}
class ExternallyLinkedResourceType::_Internal {
 public:
  using HasBits = decltype(std::declval<ExternallyLinkedResourceType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ExternallyLinkedResourceType::ExternallyLinkedResourceType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ExternallyLinkedResourceType)
}
ExternallyLinkedResourceType::ExternallyLinkedResourceType(const ExternallyLinkedResourceType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ExternallyLinkedResourceType)
}

void ExternallyLinkedResourceType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExternallyLinkedResourceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ExternallyLinkedResourceType::~ExternallyLinkedResourceType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ExternallyLinkedResourceType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExternallyLinkedResourceType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExternallyLinkedResourceType::ArenaDtor(void* object) {
  ExternallyLinkedResourceType* _this = reinterpret_cast< ExternallyLinkedResourceType* >(object);
  (void)_this;
}
void ExternallyLinkedResourceType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExternallyLinkedResourceType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExternallyLinkedResourceType& ExternallyLinkedResourceType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExternallyLinkedResourceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ExternallyLinkedResourceType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ExternallyLinkedResourceType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExternallyLinkedResourceType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ExternallyLinkedResourceType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExternallyLinkedResourceType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ExternallyLinkedResourceType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ExternallyLinkedResourceType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ExternallyLinkedResourceType)
  return target;
}

size_t ExternallyLinkedResourceType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ExternallyLinkedResourceType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExternallyLinkedResourceType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ExternallyLinkedResourceType)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternallyLinkedResourceType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExternallyLinkedResourceType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ExternallyLinkedResourceType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ExternallyLinkedResourceType)
    MergeFrom(*source);
  }
}

void ExternallyLinkedResourceType::MergeFrom(const ExternallyLinkedResourceType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ExternallyLinkedResourceType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ExternallyLinkedResourceType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ExternallyLinkedResourceType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternallyLinkedResourceType::CopyFrom(const ExternallyLinkedResourceType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ExternallyLinkedResourceType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternallyLinkedResourceType::IsInitialized() const {
  return true;
}

void ExternallyLinkedResourceType::InternalSwap(ExternallyLinkedResourceType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ExternallyLinkedResourceType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FingerprintAlgorithmType::InitAsDefaultInstance() {
}
class FingerprintAlgorithmType::_Internal {
 public:
  using HasBits = decltype(std::declval<FingerprintAlgorithmType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

FingerprintAlgorithmType::FingerprintAlgorithmType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.FingerprintAlgorithmType)
}
FingerprintAlgorithmType::FingerprintAlgorithmType(const FingerprintAlgorithmType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.FingerprintAlgorithmType)
}

void FingerprintAlgorithmType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FingerprintAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FingerprintAlgorithmType::~FingerprintAlgorithmType() {
  // @@protoc_insertion_point(destructor:ern411.avs.FingerprintAlgorithmType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FingerprintAlgorithmType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FingerprintAlgorithmType::ArenaDtor(void* object) {
  FingerprintAlgorithmType* _this = reinterpret_cast< FingerprintAlgorithmType* >(object);
  (void)_this;
}
void FingerprintAlgorithmType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FingerprintAlgorithmType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FingerprintAlgorithmType& FingerprintAlgorithmType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FingerprintAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void FingerprintAlgorithmType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.FingerprintAlgorithmType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FingerprintAlgorithmType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.FingerprintAlgorithmType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FingerprintAlgorithmType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.FingerprintAlgorithmType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.FingerprintAlgorithmType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.FingerprintAlgorithmType)
  return target;
}

size_t FingerprintAlgorithmType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.FingerprintAlgorithmType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FingerprintAlgorithmType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.FingerprintAlgorithmType)
  GOOGLE_DCHECK_NE(&from, this);
  const FingerprintAlgorithmType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FingerprintAlgorithmType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.FingerprintAlgorithmType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.FingerprintAlgorithmType)
    MergeFrom(*source);
  }
}

void FingerprintAlgorithmType::MergeFrom(const FingerprintAlgorithmType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.FingerprintAlgorithmType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void FingerprintAlgorithmType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.FingerprintAlgorithmType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FingerprintAlgorithmType::CopyFrom(const FingerprintAlgorithmType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.FingerprintAlgorithmType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FingerprintAlgorithmType::IsInitialized() const {
  return true;
}

void FingerprintAlgorithmType::InternalSwap(FingerprintAlgorithmType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FingerprintAlgorithmType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FrameRate::InitAsDefaultInstance() {
}
class FrameRate::_Internal {
 public:
  using HasBits = decltype(std::declval<FrameRate>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

FrameRate::FrameRate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.FrameRate)
}
FrameRate::FrameRate(const FrameRate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.FrameRate)
}

void FrameRate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FrameRate::~FrameRate() {
  // @@protoc_insertion_point(destructor:ern411.avs.FrameRate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrameRate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FrameRate::ArenaDtor(void* object) {
  FrameRate* _this = reinterpret_cast< FrameRate* >(object);
  (void)_this;
}
void FrameRate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrameRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FrameRate& FrameRate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void FrameRate::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.FrameRate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameRate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.FrameRate.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrameRate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.FrameRate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.FrameRate.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.FrameRate)
  return target;
}

size_t FrameRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.FrameRate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameRate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.FrameRate)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameRate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrameRate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.FrameRate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.FrameRate)
    MergeFrom(*source);
  }
}

void FrameRate::MergeFrom(const FrameRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.FrameRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void FrameRate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.FrameRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameRate::CopyFrom(const FrameRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.FrameRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameRate::IsInitialized() const {
  return true;
}

void FrameRate::InternalSwap(FrameRate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameRate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HashSumAlgorithmType::InitAsDefaultInstance() {
}
class HashSumAlgorithmType::_Internal {
 public:
  using HasBits = decltype(std::declval<HashSumAlgorithmType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

HashSumAlgorithmType::HashSumAlgorithmType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.HashSumAlgorithmType)
}
HashSumAlgorithmType::HashSumAlgorithmType(const HashSumAlgorithmType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.HashSumAlgorithmType)
}

void HashSumAlgorithmType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HashSumAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HashSumAlgorithmType::~HashSumAlgorithmType() {
  // @@protoc_insertion_point(destructor:ern411.avs.HashSumAlgorithmType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HashSumAlgorithmType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HashSumAlgorithmType::ArenaDtor(void* object) {
  HashSumAlgorithmType* _this = reinterpret_cast< HashSumAlgorithmType* >(object);
  (void)_this;
}
void HashSumAlgorithmType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HashSumAlgorithmType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HashSumAlgorithmType& HashSumAlgorithmType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HashSumAlgorithmType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void HashSumAlgorithmType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.HashSumAlgorithmType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HashSumAlgorithmType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.HashSumAlgorithmType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HashSumAlgorithmType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.HashSumAlgorithmType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.HashSumAlgorithmType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.HashSumAlgorithmType)
  return target;
}

size_t HashSumAlgorithmType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.HashSumAlgorithmType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HashSumAlgorithmType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.HashSumAlgorithmType)
  GOOGLE_DCHECK_NE(&from, this);
  const HashSumAlgorithmType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HashSumAlgorithmType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.HashSumAlgorithmType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.HashSumAlgorithmType)
    MergeFrom(*source);
  }
}

void HashSumAlgorithmType::MergeFrom(const HashSumAlgorithmType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.HashSumAlgorithmType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void HashSumAlgorithmType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.HashSumAlgorithmType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HashSumAlgorithmType::CopyFrom(const HashSumAlgorithmType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.HashSumAlgorithmType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashSumAlgorithmType::IsInitialized() const {
  return true;
}

void HashSumAlgorithmType::InternalSwap(HashSumAlgorithmType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata HashSumAlgorithmType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ImageCodecType::InitAsDefaultInstance() {
}
class ImageCodecType::_Internal {
 public:
  using HasBits = decltype(std::declval<ImageCodecType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ImageCodecType::ImageCodecType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ImageCodecType)
}
ImageCodecType::ImageCodecType(const ImageCodecType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ImageCodecType)
}

void ImageCodecType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImageCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ImageCodecType::~ImageCodecType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ImageCodecType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImageCodecType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImageCodecType::ArenaDtor(void* object) {
  ImageCodecType* _this = reinterpret_cast< ImageCodecType* >(object);
  (void)_this;
}
void ImageCodecType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImageCodecType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImageCodecType& ImageCodecType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImageCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ImageCodecType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ImageCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImageCodecType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ImageCodecType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImageCodecType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ImageCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ImageCodecType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ImageCodecType)
  return target;
}

size_t ImageCodecType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ImageCodecType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageCodecType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ImageCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageCodecType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImageCodecType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ImageCodecType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ImageCodecType)
    MergeFrom(*source);
  }
}

void ImageCodecType::MergeFrom(const ImageCodecType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ImageCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ImageCodecType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ImageCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageCodecType::CopyFrom(const ImageCodecType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ImageCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageCodecType::IsInitialized() const {
  return true;
}

void ImageCodecType::InternalSwap(ImageCodecType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ImageCodecType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ImageType::InitAsDefaultInstance() {
}
class ImageType::_Internal {
 public:
  using HasBits = decltype(std::declval<ImageType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ImageType::ImageType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ImageType)
}
ImageType::ImageType(const ImageType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ImageType)
}

void ImageType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImageType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ImageType::~ImageType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ImageType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ImageType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImageType::ArenaDtor(void* object) {
  ImageType* _this = reinterpret_cast< ImageType* >(object);
  (void)_this;
}
void ImageType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ImageType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImageType& ImageType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImageType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ImageType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ImageType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ImageType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ImageType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImageType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ImageType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ImageType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ImageType)
  return target;
}

size_t ImageType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ImageType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ImageType)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImageType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ImageType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ImageType)
    MergeFrom(*source);
  }
}

void ImageType::MergeFrom(const ImageType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ImageType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ImageType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ImageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageType::CopyFrom(const ImageType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ImageType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageType::IsInitialized() const {
  return true;
}

void ImageType::InternalSwap(ImageType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ImageType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InstrumentType::InitAsDefaultInstance() {
}
class InstrumentType::_Internal {
 public:
  using HasBits = decltype(std::declval<InstrumentType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

InstrumentType::InstrumentType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.InstrumentType)
}
InstrumentType::InstrumentType(const InstrumentType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.InstrumentType)
}

void InstrumentType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InstrumentType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InstrumentType::~InstrumentType() {
  // @@protoc_insertion_point(destructor:ern411.avs.InstrumentType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InstrumentType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InstrumentType::ArenaDtor(void* object) {
  InstrumentType* _this = reinterpret_cast< InstrumentType* >(object);
  (void)_this;
}
void InstrumentType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InstrumentType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InstrumentType& InstrumentType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InstrumentType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void InstrumentType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.InstrumentType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InstrumentType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.InstrumentType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InstrumentType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.InstrumentType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.InstrumentType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.InstrumentType)
  return target;
}

size_t InstrumentType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.InstrumentType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstrumentType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.InstrumentType)
  GOOGLE_DCHECK_NE(&from, this);
  const InstrumentType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InstrumentType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.InstrumentType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.InstrumentType)
    MergeFrom(*source);
  }
}

void InstrumentType::MergeFrom(const InstrumentType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.InstrumentType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void InstrumentType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.InstrumentType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstrumentType::CopyFrom(const InstrumentType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.InstrumentType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstrumentType::IsInitialized() const {
  return true;
}

void InstrumentType::InternalSwap(InstrumentType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata InstrumentType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IsoLanguageCode::InitAsDefaultInstance() {
}
class IsoLanguageCode::_Internal {
 public:
  using HasBits = decltype(std::declval<IsoLanguageCode>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

IsoLanguageCode::IsoLanguageCode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.IsoLanguageCode)
}
IsoLanguageCode::IsoLanguageCode(const IsoLanguageCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.IsoLanguageCode)
}

void IsoLanguageCode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IsoLanguageCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IsoLanguageCode::~IsoLanguageCode() {
  // @@protoc_insertion_point(destructor:ern411.avs.IsoLanguageCode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IsoLanguageCode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IsoLanguageCode::ArenaDtor(void* object) {
  IsoLanguageCode* _this = reinterpret_cast< IsoLanguageCode* >(object);
  (void)_this;
}
void IsoLanguageCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IsoLanguageCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IsoLanguageCode& IsoLanguageCode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IsoLanguageCode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void IsoLanguageCode::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.IsoLanguageCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsoLanguageCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.IsoLanguageCode.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IsoLanguageCode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.IsoLanguageCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.IsoLanguageCode.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.IsoLanguageCode)
  return target;
}

size_t IsoLanguageCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.IsoLanguageCode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IsoLanguageCode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.IsoLanguageCode)
  GOOGLE_DCHECK_NE(&from, this);
  const IsoLanguageCode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IsoLanguageCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.IsoLanguageCode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.IsoLanguageCode)
    MergeFrom(*source);
  }
}

void IsoLanguageCode::MergeFrom(const IsoLanguageCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.IsoLanguageCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void IsoLanguageCode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.IsoLanguageCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsoLanguageCode::CopyFrom(const IsoLanguageCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.IsoLanguageCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsoLanguageCode::IsInitialized() const {
  return true;
}

void IsoLanguageCode::InternalSwap(IsoLanguageCode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IsoLanguageCode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LabelType::InitAsDefaultInstance() {
}
class LabelType::_Internal {
 public:
  using HasBits = decltype(std::declval<LabelType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

LabelType::LabelType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.LabelType)
}
LabelType::LabelType(const LabelType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.LabelType)
}

void LabelType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LabelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LabelType::~LabelType() {
  // @@protoc_insertion_point(destructor:ern411.avs.LabelType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LabelType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LabelType::ArenaDtor(void* object) {
  LabelType* _this = reinterpret_cast< LabelType* >(object);
  (void)_this;
}
void LabelType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LabelType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LabelType& LabelType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LabelType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void LabelType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.LabelType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LabelType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.LabelType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LabelType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.LabelType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.LabelType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.LabelType)
  return target;
}

size_t LabelType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.LabelType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabelType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.LabelType)
  GOOGLE_DCHECK_NE(&from, this);
  const LabelType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LabelType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.LabelType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.LabelType)
    MergeFrom(*source);
  }
}

void LabelType::MergeFrom(const LabelType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.LabelType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void LabelType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.LabelType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabelType::CopyFrom(const LabelType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.LabelType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabelType::IsInitialized() const {
  return true;
}

void LabelType::InternalSwap(LabelType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LabelType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LinkDescription::InitAsDefaultInstance() {
}
class LinkDescription::_Internal {
 public:
  using HasBits = decltype(std::declval<LinkDescription>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

LinkDescription::LinkDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.LinkDescription)
}
LinkDescription::LinkDescription(const LinkDescription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.LinkDescription)
}

void LinkDescription::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LinkDescription_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LinkDescription::~LinkDescription() {
  // @@protoc_insertion_point(destructor:ern411.avs.LinkDescription)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LinkDescription::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LinkDescription::ArenaDtor(void* object) {
  LinkDescription* _this = reinterpret_cast< LinkDescription* >(object);
  (void)_this;
}
void LinkDescription::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LinkDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LinkDescription& LinkDescription::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LinkDescription_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void LinkDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.LinkDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LinkDescription::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.LinkDescription.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LinkDescription::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.LinkDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.LinkDescription.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.LinkDescription)
  return target;
}

size_t LinkDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.LinkDescription)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinkDescription::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.LinkDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const LinkDescription* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LinkDescription>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.LinkDescription)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.LinkDescription)
    MergeFrom(*source);
  }
}

void LinkDescription::MergeFrom(const LinkDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.LinkDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void LinkDescription::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.LinkDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinkDescription::CopyFrom(const LinkDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.LinkDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinkDescription::IsInitialized() const {
  return true;
}

void LinkDescription::InternalSwap(LinkDescription* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LinkDescription::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageControlType::InitAsDefaultInstance() {
}
class MessageControlType::_Internal {
 public:
  using HasBits = decltype(std::declval<MessageControlType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MessageControlType::MessageControlType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.MessageControlType)
}
MessageControlType::MessageControlType(const MessageControlType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.MessageControlType)
}

void MessageControlType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageControlType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MessageControlType::~MessageControlType() {
  // @@protoc_insertion_point(destructor:ern411.avs.MessageControlType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessageControlType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MessageControlType::ArenaDtor(void* object) {
  MessageControlType* _this = reinterpret_cast< MessageControlType* >(object);
  (void)_this;
}
void MessageControlType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessageControlType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageControlType& MessageControlType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageControlType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void MessageControlType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.MessageControlType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageControlType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.MessageControlType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageControlType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.MessageControlType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.MessageControlType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.MessageControlType)
  return target;
}

size_t MessageControlType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.MessageControlType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageControlType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.MessageControlType)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageControlType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageControlType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.MessageControlType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.MessageControlType)
    MergeFrom(*source);
  }
}

void MessageControlType::MergeFrom(const MessageControlType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.MessageControlType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void MessageControlType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.MessageControlType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageControlType::CopyFrom(const MessageControlType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.MessageControlType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageControlType::IsInitialized() const {
  return true;
}

void MessageControlType::InternalSwap(MessageControlType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageControlType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OperatingSystemType::InitAsDefaultInstance() {
}
class OperatingSystemType::_Internal {
 public:
  using HasBits = decltype(std::declval<OperatingSystemType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

OperatingSystemType::OperatingSystemType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.OperatingSystemType)
}
OperatingSystemType::OperatingSystemType(const OperatingSystemType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.OperatingSystemType)
}

void OperatingSystemType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OperatingSystemType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

OperatingSystemType::~OperatingSystemType() {
  // @@protoc_insertion_point(destructor:ern411.avs.OperatingSystemType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OperatingSystemType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OperatingSystemType::ArenaDtor(void* object) {
  OperatingSystemType* _this = reinterpret_cast< OperatingSystemType* >(object);
  (void)_this;
}
void OperatingSystemType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OperatingSystemType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperatingSystemType& OperatingSystemType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperatingSystemType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void OperatingSystemType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.OperatingSystemType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperatingSystemType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.OperatingSystemType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperatingSystemType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.OperatingSystemType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.OperatingSystemType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.OperatingSystemType)
  return target;
}

size_t OperatingSystemType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.OperatingSystemType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperatingSystemType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.OperatingSystemType)
  GOOGLE_DCHECK_NE(&from, this);
  const OperatingSystemType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperatingSystemType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.OperatingSystemType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.OperatingSystemType)
    MergeFrom(*source);
  }
}

void OperatingSystemType::MergeFrom(const OperatingSystemType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.OperatingSystemType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void OperatingSystemType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.OperatingSystemType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatingSystemType::CopyFrom(const OperatingSystemType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.OperatingSystemType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperatingSystemType::IsInitialized() const {
  return true;
}

void OperatingSystemType::InternalSwap(OperatingSystemType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata OperatingSystemType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PLineType::InitAsDefaultInstance() {
}
class PLineType::_Internal {
 public:
  using HasBits = decltype(std::declval<PLineType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PLineType::PLineType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.PLineType)
}
PLineType::PLineType(const PLineType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.PLineType)
}

void PLineType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PLineType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PLineType::~PLineType() {
  // @@protoc_insertion_point(destructor:ern411.avs.PLineType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PLineType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PLineType::ArenaDtor(void* object) {
  PLineType* _this = reinterpret_cast< PLineType* >(object);
  (void)_this;
}
void PLineType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PLineType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PLineType& PLineType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PLineType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void PLineType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.PLineType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PLineType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.PLineType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PLineType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.PLineType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.PLineType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.PLineType)
  return target;
}

size_t PLineType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.PLineType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PLineType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.PLineType)
  GOOGLE_DCHECK_NE(&from, this);
  const PLineType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PLineType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.PLineType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.PLineType)
    MergeFrom(*source);
  }
}

void PLineType::MergeFrom(const PLineType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.PLineType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void PLineType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.PLineType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PLineType::CopyFrom(const PLineType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.PLineType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PLineType::IsInitialized() const {
  return true;
}

void PLineType::InternalSwap(PLineType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PLineType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParentalWarningType::InitAsDefaultInstance() {
}
class ParentalWarningType::_Internal {
 public:
  using HasBits = decltype(std::declval<ParentalWarningType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ParentalWarningType::ParentalWarningType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ParentalWarningType)
}
ParentalWarningType::ParentalWarningType(const ParentalWarningType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ParentalWarningType)
}

void ParentalWarningType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParentalWarningType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ParentalWarningType::~ParentalWarningType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ParentalWarningType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParentalWarningType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ParentalWarningType::ArenaDtor(void* object) {
  ParentalWarningType* _this = reinterpret_cast< ParentalWarningType* >(object);
  (void)_this;
}
void ParentalWarningType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParentalWarningType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParentalWarningType& ParentalWarningType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParentalWarningType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ParentalWarningType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ParentalWarningType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParentalWarningType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ParentalWarningType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParentalWarningType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ParentalWarningType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ParentalWarningType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ParentalWarningType)
  return target;
}

size_t ParentalWarningType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ParentalWarningType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParentalWarningType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ParentalWarningType)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentalWarningType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParentalWarningType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ParentalWarningType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ParentalWarningType)
    MergeFrom(*source);
  }
}

void ParentalWarningType::MergeFrom(const ParentalWarningType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ParentalWarningType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ParentalWarningType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ParentalWarningType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentalWarningType::CopyFrom(const ParentalWarningType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ParentalWarningType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentalWarningType::IsInitialized() const {
  return true;
}

void ParentalWarningType::InternalSwap(ParentalWarningType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ParentalWarningType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PartyRelationshipType::InitAsDefaultInstance() {
}
class PartyRelationshipType::_Internal {
 public:
  using HasBits = decltype(std::declval<PartyRelationshipType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PartyRelationshipType::PartyRelationshipType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.PartyRelationshipType)
}
PartyRelationshipType::PartyRelationshipType(const PartyRelationshipType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.PartyRelationshipType)
}

void PartyRelationshipType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PartyRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PartyRelationshipType::~PartyRelationshipType() {
  // @@protoc_insertion_point(destructor:ern411.avs.PartyRelationshipType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PartyRelationshipType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PartyRelationshipType::ArenaDtor(void* object) {
  PartyRelationshipType* _this = reinterpret_cast< PartyRelationshipType* >(object);
  (void)_this;
}
void PartyRelationshipType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PartyRelationshipType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PartyRelationshipType& PartyRelationshipType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PartyRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void PartyRelationshipType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.PartyRelationshipType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PartyRelationshipType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.PartyRelationshipType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PartyRelationshipType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.PartyRelationshipType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.PartyRelationshipType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.PartyRelationshipType)
  return target;
}

size_t PartyRelationshipType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.PartyRelationshipType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PartyRelationshipType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.PartyRelationshipType)
  GOOGLE_DCHECK_NE(&from, this);
  const PartyRelationshipType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PartyRelationshipType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.PartyRelationshipType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.PartyRelationshipType)
    MergeFrom(*source);
  }
}

void PartyRelationshipType::MergeFrom(const PartyRelationshipType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.PartyRelationshipType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void PartyRelationshipType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.PartyRelationshipType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartyRelationshipType::CopyFrom(const PartyRelationshipType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.PartyRelationshipType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartyRelationshipType::IsInitialized() const {
  return true;
}

void PartyRelationshipType::InternalSwap(PartyRelationshipType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PartyRelationshipType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Period::InitAsDefaultInstance() {
}
class Period::_Internal {
 public:
  using HasBits = decltype(std::declval<Period>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Period::Period(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.Period)
}
Period::Period(const Period& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.Period)
}

void Period::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Period_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Period::~Period() {
  // @@protoc_insertion_point(destructor:ern411.avs.Period)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Period::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Period::ArenaDtor(void* object) {
  Period* _this = reinterpret_cast< Period* >(object);
  (void)_this;
}
void Period::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Period::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Period& Period::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Period_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void Period::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.Period)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Period::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.Period.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Period::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.Period)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.Period.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.Period)
  return target;
}

size_t Period::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.Period)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Period::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.Period)
  GOOGLE_DCHECK_NE(&from, this);
  const Period* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Period>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.Period)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.Period)
    MergeFrom(*source);
  }
}

void Period::MergeFrom(const Period& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.Period)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void Period::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.Period)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Period::CopyFrom(const Period& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.Period)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Period::IsInitialized() const {
  return true;
}

void Period::InternalSwap(Period* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Period::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PriceInformationType::InitAsDefaultInstance() {
}
class PriceInformationType::_Internal {
 public:
  using HasBits = decltype(std::declval<PriceInformationType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PriceInformationType::PriceInformationType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.PriceInformationType)
}
PriceInformationType::PriceInformationType(const PriceInformationType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.PriceInformationType)
}

void PriceInformationType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PriceInformationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PriceInformationType::~PriceInformationType() {
  // @@protoc_insertion_point(destructor:ern411.avs.PriceInformationType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PriceInformationType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PriceInformationType::ArenaDtor(void* object) {
  PriceInformationType* _this = reinterpret_cast< PriceInformationType* >(object);
  (void)_this;
}
void PriceInformationType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PriceInformationType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PriceInformationType& PriceInformationType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PriceInformationType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void PriceInformationType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.PriceInformationType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PriceInformationType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.PriceInformationType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PriceInformationType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.PriceInformationType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.PriceInformationType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.PriceInformationType)
  return target;
}

size_t PriceInformationType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.PriceInformationType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriceInformationType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.PriceInformationType)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceInformationType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PriceInformationType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.PriceInformationType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.PriceInformationType)
    MergeFrom(*source);
  }
}

void PriceInformationType::MergeFrom(const PriceInformationType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.PriceInformationType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void PriceInformationType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.PriceInformationType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceInformationType::CopyFrom(const PriceInformationType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.PriceInformationType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceInformationType::IsInitialized() const {
  return true;
}

void PriceInformationType::InternalSwap(PriceInformationType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PriceInformationType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PriceType::InitAsDefaultInstance() {
}
class PriceType::_Internal {
 public:
  using HasBits = decltype(std::declval<PriceType>()._has_bits_);
  static void set_has_auto_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PriceType::PriceType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.PriceType)
}
PriceType::PriceType(const PriceType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  auto_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_auto_value()) {
    auto_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_auto_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.PriceType)
}

void PriceType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PriceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  auto_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PriceType::~PriceType() {
  // @@protoc_insertion_point(destructor:ern411.avs.PriceType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PriceType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  auto_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PriceType::ArenaDtor(void* object) {
  PriceType* _this = reinterpret_cast< PriceType* >(object);
  (void)_this;
}
void PriceType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PriceType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PriceType& PriceType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PriceType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void PriceType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.PriceType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    auto_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PriceType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string auto_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_auto_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.PriceType.auto_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PriceType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.PriceType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string auto_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_auto_value().data(), static_cast<int>(this->_internal_auto_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.PriceType.auto_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_auto_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.PriceType)
  return target;
}

size_t PriceType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.PriceType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string auto_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_auto_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriceType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.PriceType)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PriceType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.PriceType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.PriceType)
    MergeFrom(*source);
  }
}

void PriceType::MergeFrom(const PriceType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.PriceType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auto_value()) {
    _internal_set_auto_value(from._internal_auto_value());
  }
}

void PriceType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.PriceType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceType::CopyFrom(const PriceType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.PriceType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceType::IsInitialized() const {
  return true;
}

void PriceType::InternalSwap(PriceType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  auto_value_.Swap(&other->auto_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PriceType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Purpose::InitAsDefaultInstance() {
}
class Purpose::_Internal {
 public:
  using HasBits = decltype(std::declval<Purpose>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Purpose::Purpose(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.Purpose)
}
Purpose::Purpose(const Purpose& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.Purpose)
}

void Purpose::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Purpose_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Purpose::~Purpose() {
  // @@protoc_insertion_point(destructor:ern411.avs.Purpose)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Purpose::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Purpose::ArenaDtor(void* object) {
  Purpose* _this = reinterpret_cast< Purpose* >(object);
  (void)_this;
}
void Purpose::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Purpose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Purpose& Purpose::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Purpose_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void Purpose::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.Purpose)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Purpose::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.Purpose.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Purpose::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.Purpose)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.Purpose.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.Purpose)
  return target;
}

size_t Purpose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.Purpose)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Purpose::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.Purpose)
  GOOGLE_DCHECK_NE(&from, this);
  const Purpose* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Purpose>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.Purpose)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.Purpose)
    MergeFrom(*source);
  }
}

void Purpose::MergeFrom(const Purpose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.Purpose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void Purpose::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.Purpose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Purpose::CopyFrom(const Purpose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.Purpose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Purpose::IsInitialized() const {
  return true;
}

void Purpose::InternalSwap(Purpose* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Purpose::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RatingAgency::InitAsDefaultInstance() {
}
class RatingAgency::_Internal {
 public:
  using HasBits = decltype(std::declval<RatingAgency>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RatingAgency::RatingAgency(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.RatingAgency)
}
RatingAgency::RatingAgency(const RatingAgency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.RatingAgency)
}

void RatingAgency::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RatingAgency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RatingAgency::~RatingAgency() {
  // @@protoc_insertion_point(destructor:ern411.avs.RatingAgency)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RatingAgency::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RatingAgency::ArenaDtor(void* object) {
  RatingAgency* _this = reinterpret_cast< RatingAgency* >(object);
  (void)_this;
}
void RatingAgency::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RatingAgency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RatingAgency& RatingAgency::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RatingAgency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void RatingAgency::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.RatingAgency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RatingAgency::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.RatingAgency.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RatingAgency::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.RatingAgency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.RatingAgency.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.RatingAgency)
  return target;
}

size_t RatingAgency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.RatingAgency)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RatingAgency::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.RatingAgency)
  GOOGLE_DCHECK_NE(&from, this);
  const RatingAgency* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RatingAgency>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.RatingAgency)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.RatingAgency)
    MergeFrom(*source);
  }
}

void RatingAgency::MergeFrom(const RatingAgency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.RatingAgency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void RatingAgency::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.RatingAgency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RatingAgency::CopyFrom(const RatingAgency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.RatingAgency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RatingAgency::IsInitialized() const {
  return true;
}

void RatingAgency::InternalSwap(RatingAgency* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RatingAgency::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RatingReason::InitAsDefaultInstance() {
}
class RatingReason::_Internal {
 public:
  using HasBits = decltype(std::declval<RatingReason>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RatingReason::RatingReason(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.RatingReason)
}
RatingReason::RatingReason(const RatingReason& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.RatingReason)
}

void RatingReason::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RatingReason_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RatingReason::~RatingReason() {
  // @@protoc_insertion_point(destructor:ern411.avs.RatingReason)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RatingReason::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RatingReason::ArenaDtor(void* object) {
  RatingReason* _this = reinterpret_cast< RatingReason* >(object);
  (void)_this;
}
void RatingReason::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RatingReason::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RatingReason& RatingReason::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RatingReason_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void RatingReason::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.RatingReason)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RatingReason::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.RatingReason.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RatingReason::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.RatingReason)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.RatingReason.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.RatingReason)
  return target;
}

size_t RatingReason::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.RatingReason)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RatingReason::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.RatingReason)
  GOOGLE_DCHECK_NE(&from, this);
  const RatingReason* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RatingReason>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.RatingReason)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.RatingReason)
    MergeFrom(*source);
  }
}

void RatingReason::MergeFrom(const RatingReason& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.RatingReason)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void RatingReason::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.RatingReason)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RatingReason::CopyFrom(const RatingReason& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.RatingReason)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RatingReason::IsInitialized() const {
  return true;
}

void RatingReason::InternalSwap(RatingReason* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RatingReason::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecordingMode::InitAsDefaultInstance() {
}
class RecordingMode::_Internal {
 public:
  using HasBits = decltype(std::declval<RecordingMode>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RecordingMode::RecordingMode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.RecordingMode)
}
RecordingMode::RecordingMode(const RecordingMode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.RecordingMode)
}

void RecordingMode::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecordingMode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RecordingMode::~RecordingMode() {
  // @@protoc_insertion_point(destructor:ern411.avs.RecordingMode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecordingMode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecordingMode::ArenaDtor(void* object) {
  RecordingMode* _this = reinterpret_cast< RecordingMode* >(object);
  (void)_this;
}
void RecordingMode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecordingMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecordingMode& RecordingMode::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecordingMode_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void RecordingMode::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.RecordingMode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecordingMode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.RecordingMode.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecordingMode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.RecordingMode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.RecordingMode.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.RecordingMode)
  return target;
}

size_t RecordingMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.RecordingMode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecordingMode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.RecordingMode)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordingMode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecordingMode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.RecordingMode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.RecordingMode)
    MergeFrom(*source);
  }
}

void RecordingMode::MergeFrom(const RecordingMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.RecordingMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void RecordingMode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.RecordingMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordingMode::CopyFrom(const RecordingMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.RecordingMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordingMode::IsInitialized() const {
  return true;
}

void RecordingMode::InternalSwap(RecordingMode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RecordingMode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReferenceCreation::InitAsDefaultInstance() {
}
class ReferenceCreation::_Internal {
 public:
  using HasBits = decltype(std::declval<ReferenceCreation>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ReferenceCreation::ReferenceCreation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ReferenceCreation)
}
ReferenceCreation::ReferenceCreation(const ReferenceCreation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ReferenceCreation)
}

void ReferenceCreation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReferenceCreation_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReferenceCreation::~ReferenceCreation() {
  // @@protoc_insertion_point(destructor:ern411.avs.ReferenceCreation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReferenceCreation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReferenceCreation::ArenaDtor(void* object) {
  ReferenceCreation* _this = reinterpret_cast< ReferenceCreation* >(object);
  (void)_this;
}
void ReferenceCreation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReferenceCreation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReferenceCreation& ReferenceCreation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReferenceCreation_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ReferenceCreation::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ReferenceCreation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReferenceCreation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ReferenceCreation.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReferenceCreation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ReferenceCreation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ReferenceCreation.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ReferenceCreation)
  return target;
}

size_t ReferenceCreation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ReferenceCreation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferenceCreation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ReferenceCreation)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferenceCreation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReferenceCreation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ReferenceCreation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ReferenceCreation)
    MergeFrom(*source);
  }
}

void ReferenceCreation::MergeFrom(const ReferenceCreation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ReferenceCreation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ReferenceCreation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ReferenceCreation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferenceCreation::CopyFrom(const ReferenceCreation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ReferenceCreation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferenceCreation::IsInitialized() const {
  return true;
}

void ReferenceCreation::InternalSwap(ReferenceCreation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReferenceCreation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RelationalRelator::InitAsDefaultInstance() {
}
class RelationalRelator::_Internal {
 public:
  using HasBits = decltype(std::declval<RelationalRelator>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RelationalRelator::RelationalRelator(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.RelationalRelator)
}
RelationalRelator::RelationalRelator(const RelationalRelator& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.RelationalRelator)
}

void RelationalRelator::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RelationalRelator_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RelationalRelator::~RelationalRelator() {
  // @@protoc_insertion_point(destructor:ern411.avs.RelationalRelator)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RelationalRelator::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RelationalRelator::ArenaDtor(void* object) {
  RelationalRelator* _this = reinterpret_cast< RelationalRelator* >(object);
  (void)_this;
}
void RelationalRelator::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RelationalRelator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RelationalRelator& RelationalRelator::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RelationalRelator_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void RelationalRelator::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.RelationalRelator)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RelationalRelator::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.RelationalRelator.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RelationalRelator::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.RelationalRelator)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.RelationalRelator.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.RelationalRelator)
  return target;
}

size_t RelationalRelator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.RelationalRelator)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelationalRelator::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.RelationalRelator)
  GOOGLE_DCHECK_NE(&from, this);
  const RelationalRelator* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RelationalRelator>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.RelationalRelator)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.RelationalRelator)
    MergeFrom(*source);
  }
}

void RelationalRelator::MergeFrom(const RelationalRelator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.RelationalRelator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void RelationalRelator::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.RelationalRelator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelationalRelator::CopyFrom(const RelationalRelator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.RelationalRelator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelationalRelator::IsInitialized() const {
  return true;
}

void RelationalRelator::InternalSwap(RelationalRelator* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RelationalRelator::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReleaseProfileVariantVersionId::InitAsDefaultInstance() {
}
class ReleaseProfileVariantVersionId::_Internal {
 public:
  using HasBits = decltype(std::declval<ReleaseProfileVariantVersionId>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ReleaseProfileVariantVersionId::ReleaseProfileVariantVersionId(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ReleaseProfileVariantVersionId)
}
ReleaseProfileVariantVersionId::ReleaseProfileVariantVersionId(const ReleaseProfileVariantVersionId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ReleaseProfileVariantVersionId)
}

void ReleaseProfileVariantVersionId::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReleaseProfileVariantVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReleaseProfileVariantVersionId::~ReleaseProfileVariantVersionId() {
  // @@protoc_insertion_point(destructor:ern411.avs.ReleaseProfileVariantVersionId)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReleaseProfileVariantVersionId::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReleaseProfileVariantVersionId::ArenaDtor(void* object) {
  ReleaseProfileVariantVersionId* _this = reinterpret_cast< ReleaseProfileVariantVersionId* >(object);
  (void)_this;
}
void ReleaseProfileVariantVersionId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReleaseProfileVariantVersionId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReleaseProfileVariantVersionId& ReleaseProfileVariantVersionId::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReleaseProfileVariantVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ReleaseProfileVariantVersionId::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ReleaseProfileVariantVersionId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReleaseProfileVariantVersionId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ReleaseProfileVariantVersionId.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReleaseProfileVariantVersionId::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ReleaseProfileVariantVersionId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ReleaseProfileVariantVersionId.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ReleaseProfileVariantVersionId)
  return target;
}

size_t ReleaseProfileVariantVersionId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ReleaseProfileVariantVersionId)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseProfileVariantVersionId::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ReleaseProfileVariantVersionId)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseProfileVariantVersionId* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReleaseProfileVariantVersionId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ReleaseProfileVariantVersionId)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ReleaseProfileVariantVersionId)
    MergeFrom(*source);
  }
}

void ReleaseProfileVariantVersionId::MergeFrom(const ReleaseProfileVariantVersionId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ReleaseProfileVariantVersionId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ReleaseProfileVariantVersionId::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ReleaseProfileVariantVersionId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseProfileVariantVersionId::CopyFrom(const ReleaseProfileVariantVersionId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ReleaseProfileVariantVersionId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseProfileVariantVersionId::IsInitialized() const {
  return true;
}

void ReleaseProfileVariantVersionId::InternalSwap(ReleaseProfileVariantVersionId* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReleaseProfileVariantVersionId::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReleaseProfileVersionId::InitAsDefaultInstance() {
}
class ReleaseProfileVersionId::_Internal {
 public:
  using HasBits = decltype(std::declval<ReleaseProfileVersionId>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ReleaseProfileVersionId::ReleaseProfileVersionId(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ReleaseProfileVersionId)
}
ReleaseProfileVersionId::ReleaseProfileVersionId(const ReleaseProfileVersionId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ReleaseProfileVersionId)
}

void ReleaseProfileVersionId::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReleaseProfileVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReleaseProfileVersionId::~ReleaseProfileVersionId() {
  // @@protoc_insertion_point(destructor:ern411.avs.ReleaseProfileVersionId)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReleaseProfileVersionId::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReleaseProfileVersionId::ArenaDtor(void* object) {
  ReleaseProfileVersionId* _this = reinterpret_cast< ReleaseProfileVersionId* >(object);
  (void)_this;
}
void ReleaseProfileVersionId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReleaseProfileVersionId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReleaseProfileVersionId& ReleaseProfileVersionId::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReleaseProfileVersionId_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ReleaseProfileVersionId::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ReleaseProfileVersionId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReleaseProfileVersionId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ReleaseProfileVersionId.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReleaseProfileVersionId::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ReleaseProfileVersionId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ReleaseProfileVersionId.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ReleaseProfileVersionId)
  return target;
}

size_t ReleaseProfileVersionId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ReleaseProfileVersionId)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseProfileVersionId::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ReleaseProfileVersionId)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseProfileVersionId* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReleaseProfileVersionId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ReleaseProfileVersionId)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ReleaseProfileVersionId)
    MergeFrom(*source);
  }
}

void ReleaseProfileVersionId::MergeFrom(const ReleaseProfileVersionId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ReleaseProfileVersionId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ReleaseProfileVersionId::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ReleaseProfileVersionId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseProfileVersionId::CopyFrom(const ReleaseProfileVersionId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ReleaseProfileVersionId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseProfileVersionId::IsInitialized() const {
  return true;
}

void ReleaseProfileVersionId::InternalSwap(ReleaseProfileVersionId* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReleaseProfileVersionId::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReleaseRelationshipType::InitAsDefaultInstance() {
}
class ReleaseRelationshipType::_Internal {
 public:
  using HasBits = decltype(std::declval<ReleaseRelationshipType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ReleaseRelationshipType::ReleaseRelationshipType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ReleaseRelationshipType)
}
ReleaseRelationshipType::ReleaseRelationshipType(const ReleaseRelationshipType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ReleaseRelationshipType)
}

void ReleaseRelationshipType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReleaseRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReleaseRelationshipType::~ReleaseRelationshipType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ReleaseRelationshipType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReleaseRelationshipType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReleaseRelationshipType::ArenaDtor(void* object) {
  ReleaseRelationshipType* _this = reinterpret_cast< ReleaseRelationshipType* >(object);
  (void)_this;
}
void ReleaseRelationshipType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReleaseRelationshipType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReleaseRelationshipType& ReleaseRelationshipType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReleaseRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ReleaseRelationshipType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ReleaseRelationshipType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReleaseRelationshipType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ReleaseRelationshipType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReleaseRelationshipType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ReleaseRelationshipType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ReleaseRelationshipType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ReleaseRelationshipType)
  return target;
}

size_t ReleaseRelationshipType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ReleaseRelationshipType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseRelationshipType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ReleaseRelationshipType)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseRelationshipType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReleaseRelationshipType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ReleaseRelationshipType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ReleaseRelationshipType)
    MergeFrom(*source);
  }
}

void ReleaseRelationshipType::MergeFrom(const ReleaseRelationshipType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ReleaseRelationshipType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ReleaseRelationshipType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ReleaseRelationshipType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseRelationshipType::CopyFrom(const ReleaseRelationshipType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ReleaseRelationshipType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseRelationshipType::IsInitialized() const {
  return true;
}

void ReleaseRelationshipType::InternalSwap(ReleaseRelationshipType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReleaseRelationshipType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReleaseType_ERN4::InitAsDefaultInstance() {
}
class ReleaseType_ERN4::_Internal {
 public:
  using HasBits = decltype(std::declval<ReleaseType_ERN4>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ReleaseType_ERN4::ReleaseType_ERN4(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ReleaseType_ERN4)
}
ReleaseType_ERN4::ReleaseType_ERN4(const ReleaseType_ERN4& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ReleaseType_ERN4)
}

void ReleaseType_ERN4::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReleaseType_ERN4_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReleaseType_ERN4::~ReleaseType_ERN4() {
  // @@protoc_insertion_point(destructor:ern411.avs.ReleaseType_ERN4)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReleaseType_ERN4::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReleaseType_ERN4::ArenaDtor(void* object) {
  ReleaseType_ERN4* _this = reinterpret_cast< ReleaseType_ERN4* >(object);
  (void)_this;
}
void ReleaseType_ERN4::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReleaseType_ERN4::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReleaseType_ERN4& ReleaseType_ERN4::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReleaseType_ERN4_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ReleaseType_ERN4::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ReleaseType_ERN4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReleaseType_ERN4::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ReleaseType_ERN4.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReleaseType_ERN4::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ReleaseType_ERN4)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ReleaseType_ERN4.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ReleaseType_ERN4)
  return target;
}

size_t ReleaseType_ERN4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ReleaseType_ERN4)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseType_ERN4::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ReleaseType_ERN4)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseType_ERN4* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReleaseType_ERN4>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ReleaseType_ERN4)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ReleaseType_ERN4)
    MergeFrom(*source);
  }
}

void ReleaseType_ERN4::MergeFrom(const ReleaseType_ERN4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ReleaseType_ERN4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ReleaseType_ERN4::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ReleaseType_ERN4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseType_ERN4::CopyFrom(const ReleaseType_ERN4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ReleaseType_ERN4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseType_ERN4::IsInitialized() const {
  return true;
}

void ReleaseType_ERN4::InternalSwap(ReleaseType_ERN4* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReleaseType_ERN4::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResourceGroupType::InitAsDefaultInstance() {
}
class ResourceGroupType::_Internal {
 public:
  using HasBits = decltype(std::declval<ResourceGroupType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ResourceGroupType::ResourceGroupType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ResourceGroupType)
}
ResourceGroupType::ResourceGroupType(const ResourceGroupType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ResourceGroupType)
}

void ResourceGroupType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResourceGroupType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResourceGroupType::~ResourceGroupType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ResourceGroupType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResourceGroupType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResourceGroupType::ArenaDtor(void* object) {
  ResourceGroupType* _this = reinterpret_cast< ResourceGroupType* >(object);
  (void)_this;
}
void ResourceGroupType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResourceGroupType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceGroupType& ResourceGroupType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResourceGroupType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ResourceGroupType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ResourceGroupType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceGroupType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ResourceGroupType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResourceGroupType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ResourceGroupType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ResourceGroupType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ResourceGroupType)
  return target;
}

size_t ResourceGroupType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ResourceGroupType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceGroupType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ResourceGroupType)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceGroupType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResourceGroupType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ResourceGroupType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ResourceGroupType)
    MergeFrom(*source);
  }
}

void ResourceGroupType::MergeFrom(const ResourceGroupType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ResourceGroupType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ResourceGroupType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ResourceGroupType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceGroupType::CopyFrom(const ResourceGroupType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ResourceGroupType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceGroupType::IsInitialized() const {
  return true;
}

void ResourceGroupType::InternalSwap(ResourceGroupType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceGroupType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResourceRelationshipType::InitAsDefaultInstance() {
}
class ResourceRelationshipType::_Internal {
 public:
  using HasBits = decltype(std::declval<ResourceRelationshipType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ResourceRelationshipType::ResourceRelationshipType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ResourceRelationshipType)
}
ResourceRelationshipType::ResourceRelationshipType(const ResourceRelationshipType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ResourceRelationshipType)
}

void ResourceRelationshipType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResourceRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResourceRelationshipType::~ResourceRelationshipType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ResourceRelationshipType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResourceRelationshipType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResourceRelationshipType::ArenaDtor(void* object) {
  ResourceRelationshipType* _this = reinterpret_cast< ResourceRelationshipType* >(object);
  (void)_this;
}
void ResourceRelationshipType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResourceRelationshipType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceRelationshipType& ResourceRelationshipType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResourceRelationshipType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ResourceRelationshipType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ResourceRelationshipType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceRelationshipType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ResourceRelationshipType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResourceRelationshipType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ResourceRelationshipType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ResourceRelationshipType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ResourceRelationshipType)
  return target;
}

size_t ResourceRelationshipType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ResourceRelationshipType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceRelationshipType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ResourceRelationshipType)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceRelationshipType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResourceRelationshipType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ResourceRelationshipType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ResourceRelationshipType)
    MergeFrom(*source);
  }
}

void ResourceRelationshipType::MergeFrom(const ResourceRelationshipType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ResourceRelationshipType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ResourceRelationshipType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ResourceRelationshipType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceRelationshipType::CopyFrom(const ResourceRelationshipType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ResourceRelationshipType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceRelationshipType::IsInitialized() const {
  return true;
}

void ResourceRelationshipType::InternalSwap(ResourceRelationshipType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceRelationshipType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RightsClaimPolicyType::InitAsDefaultInstance() {
}
class RightsClaimPolicyType::_Internal {
 public:
  using HasBits = decltype(std::declval<RightsClaimPolicyType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RightsClaimPolicyType::RightsClaimPolicyType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.RightsClaimPolicyType)
}
RightsClaimPolicyType::RightsClaimPolicyType(const RightsClaimPolicyType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.RightsClaimPolicyType)
}

void RightsClaimPolicyType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RightsClaimPolicyType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RightsClaimPolicyType::~RightsClaimPolicyType() {
  // @@protoc_insertion_point(destructor:ern411.avs.RightsClaimPolicyType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RightsClaimPolicyType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RightsClaimPolicyType::ArenaDtor(void* object) {
  RightsClaimPolicyType* _this = reinterpret_cast< RightsClaimPolicyType* >(object);
  (void)_this;
}
void RightsClaimPolicyType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RightsClaimPolicyType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RightsClaimPolicyType& RightsClaimPolicyType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RightsClaimPolicyType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void RightsClaimPolicyType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.RightsClaimPolicyType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RightsClaimPolicyType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.RightsClaimPolicyType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RightsClaimPolicyType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.RightsClaimPolicyType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.RightsClaimPolicyType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.RightsClaimPolicyType)
  return target;
}

size_t RightsClaimPolicyType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.RightsClaimPolicyType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RightsClaimPolicyType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.RightsClaimPolicyType)
  GOOGLE_DCHECK_NE(&from, this);
  const RightsClaimPolicyType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RightsClaimPolicyType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.RightsClaimPolicyType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.RightsClaimPolicyType)
    MergeFrom(*source);
  }
}

void RightsClaimPolicyType::MergeFrom(const RightsClaimPolicyType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.RightsClaimPolicyType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void RightsClaimPolicyType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.RightsClaimPolicyType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RightsClaimPolicyType::CopyFrom(const RightsClaimPolicyType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.RightsClaimPolicyType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RightsClaimPolicyType::IsInitialized() const {
  return true;
}

void RightsClaimPolicyType::InternalSwap(RightsClaimPolicyType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RightsClaimPolicyType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RightsControllerRole::InitAsDefaultInstance() {
}
class RightsControllerRole::_Internal {
 public:
  using HasBits = decltype(std::declval<RightsControllerRole>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RightsControllerRole::RightsControllerRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.RightsControllerRole)
}
RightsControllerRole::RightsControllerRole(const RightsControllerRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.RightsControllerRole)
}

void RightsControllerRole::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RightsControllerRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RightsControllerRole::~RightsControllerRole() {
  // @@protoc_insertion_point(destructor:ern411.avs.RightsControllerRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RightsControllerRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RightsControllerRole::ArenaDtor(void* object) {
  RightsControllerRole* _this = reinterpret_cast< RightsControllerRole* >(object);
  (void)_this;
}
void RightsControllerRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RightsControllerRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RightsControllerRole& RightsControllerRole::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RightsControllerRole_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void RightsControllerRole::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.RightsControllerRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RightsControllerRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.RightsControllerRole.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RightsControllerRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.RightsControllerRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.RightsControllerRole.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.RightsControllerRole)
  return target;
}

size_t RightsControllerRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.RightsControllerRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RightsControllerRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.RightsControllerRole)
  GOOGLE_DCHECK_NE(&from, this);
  const RightsControllerRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RightsControllerRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.RightsControllerRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.RightsControllerRole)
    MergeFrom(*source);
  }
}

void RightsControllerRole::MergeFrom(const RightsControllerRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.RightsControllerRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void RightsControllerRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.RightsControllerRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RightsControllerRole::CopyFrom(const RightsControllerRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.RightsControllerRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RightsControllerRole::IsInitialized() const {
  return true;
}

void RightsControllerRole::InternalSwap(RightsControllerRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RightsControllerRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RightsControllerType::InitAsDefaultInstance() {
}
class RightsControllerType::_Internal {
 public:
  using HasBits = decltype(std::declval<RightsControllerType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RightsControllerType::RightsControllerType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.RightsControllerType)
}
RightsControllerType::RightsControllerType(const RightsControllerType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.RightsControllerType)
}

void RightsControllerType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RightsControllerType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RightsControllerType::~RightsControllerType() {
  // @@protoc_insertion_point(destructor:ern411.avs.RightsControllerType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RightsControllerType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RightsControllerType::ArenaDtor(void* object) {
  RightsControllerType* _this = reinterpret_cast< RightsControllerType* >(object);
  (void)_this;
}
void RightsControllerType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RightsControllerType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RightsControllerType& RightsControllerType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RightsControllerType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void RightsControllerType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.RightsControllerType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RightsControllerType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.RightsControllerType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RightsControllerType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.RightsControllerType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.RightsControllerType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.RightsControllerType)
  return target;
}

size_t RightsControllerType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.RightsControllerType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RightsControllerType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.RightsControllerType)
  GOOGLE_DCHECK_NE(&from, this);
  const RightsControllerType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RightsControllerType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.RightsControllerType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.RightsControllerType)
    MergeFrom(*source);
  }
}

void RightsControllerType::MergeFrom(const RightsControllerType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.RightsControllerType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void RightsControllerType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.RightsControllerType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RightsControllerType::CopyFrom(const RightsControllerType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.RightsControllerType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RightsControllerType::IsInitialized() const {
  return true;
}

void RightsControllerType::InternalSwap(RightsControllerType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RightsControllerType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RightsCoverage::InitAsDefaultInstance() {
}
class RightsCoverage::_Internal {
 public:
  using HasBits = decltype(std::declval<RightsCoverage>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RightsCoverage::RightsCoverage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.RightsCoverage)
}
RightsCoverage::RightsCoverage(const RightsCoverage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.RightsCoverage)
}

void RightsCoverage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RightsCoverage_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RightsCoverage::~RightsCoverage() {
  // @@protoc_insertion_point(destructor:ern411.avs.RightsCoverage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RightsCoverage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RightsCoverage::ArenaDtor(void* object) {
  RightsCoverage* _this = reinterpret_cast< RightsCoverage* >(object);
  (void)_this;
}
void RightsCoverage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RightsCoverage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RightsCoverage& RightsCoverage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RightsCoverage_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void RightsCoverage::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.RightsCoverage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RightsCoverage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.RightsCoverage.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RightsCoverage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.RightsCoverage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.RightsCoverage.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.RightsCoverage)
  return target;
}

size_t RightsCoverage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.RightsCoverage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RightsCoverage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.RightsCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  const RightsCoverage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RightsCoverage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.RightsCoverage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.RightsCoverage)
    MergeFrom(*source);
  }
}

void RightsCoverage::MergeFrom(const RightsCoverage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.RightsCoverage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void RightsCoverage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.RightsCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RightsCoverage::CopyFrom(const RightsCoverage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.RightsCoverage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RightsCoverage::IsInitialized() const {
  return true;
}

void RightsCoverage::InternalSwap(RightsCoverage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RightsCoverage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SheetMusicCodecType::InitAsDefaultInstance() {
}
class SheetMusicCodecType::_Internal {
 public:
  using HasBits = decltype(std::declval<SheetMusicCodecType>()._has_bits_);
  static void set_has_auto_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SheetMusicCodecType::SheetMusicCodecType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.SheetMusicCodecType)
}
SheetMusicCodecType::SheetMusicCodecType(const SheetMusicCodecType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  auto_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_auto_value()) {
    auto_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_auto_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.SheetMusicCodecType)
}

void SheetMusicCodecType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SheetMusicCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  auto_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SheetMusicCodecType::~SheetMusicCodecType() {
  // @@protoc_insertion_point(destructor:ern411.avs.SheetMusicCodecType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SheetMusicCodecType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  auto_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SheetMusicCodecType::ArenaDtor(void* object) {
  SheetMusicCodecType* _this = reinterpret_cast< SheetMusicCodecType* >(object);
  (void)_this;
}
void SheetMusicCodecType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SheetMusicCodecType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SheetMusicCodecType& SheetMusicCodecType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SheetMusicCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void SheetMusicCodecType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.SheetMusicCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    auto_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SheetMusicCodecType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string auto_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_auto_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.SheetMusicCodecType.auto_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SheetMusicCodecType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.SheetMusicCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string auto_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_auto_value().data(), static_cast<int>(this->_internal_auto_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.SheetMusicCodecType.auto_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_auto_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.SheetMusicCodecType)
  return target;
}

size_t SheetMusicCodecType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.SheetMusicCodecType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string auto_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_auto_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SheetMusicCodecType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.SheetMusicCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  const SheetMusicCodecType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SheetMusicCodecType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.SheetMusicCodecType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.SheetMusicCodecType)
    MergeFrom(*source);
  }
}

void SheetMusicCodecType::MergeFrom(const SheetMusicCodecType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.SheetMusicCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auto_value()) {
    _internal_set_auto_value(from._internal_auto_value());
  }
}

void SheetMusicCodecType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.SheetMusicCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SheetMusicCodecType::CopyFrom(const SheetMusicCodecType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.SheetMusicCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SheetMusicCodecType::IsInitialized() const {
  return true;
}

void SheetMusicCodecType::InternalSwap(SheetMusicCodecType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  auto_value_.Swap(&other->auto_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SheetMusicCodecType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SheetMusicType::InitAsDefaultInstance() {
}
class SheetMusicType::_Internal {
 public:
  using HasBits = decltype(std::declval<SheetMusicType>()._has_bits_);
  static void set_has_auto_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SheetMusicType::SheetMusicType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.SheetMusicType)
}
SheetMusicType::SheetMusicType(const SheetMusicType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  auto_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_auto_value()) {
    auto_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_auto_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.SheetMusicType)
}

void SheetMusicType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SheetMusicType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  auto_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SheetMusicType::~SheetMusicType() {
  // @@protoc_insertion_point(destructor:ern411.avs.SheetMusicType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SheetMusicType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  auto_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SheetMusicType::ArenaDtor(void* object) {
  SheetMusicType* _this = reinterpret_cast< SheetMusicType* >(object);
  (void)_this;
}
void SheetMusicType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SheetMusicType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SheetMusicType& SheetMusicType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SheetMusicType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void SheetMusicType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.SheetMusicType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    auto_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SheetMusicType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string auto_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_auto_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.SheetMusicType.auto_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SheetMusicType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.SheetMusicType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string auto_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_auto_value().data(), static_cast<int>(this->_internal_auto_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.SheetMusicType.auto_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_auto_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.SheetMusicType)
  return target;
}

size_t SheetMusicType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.SheetMusicType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string auto_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_auto_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SheetMusicType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.SheetMusicType)
  GOOGLE_DCHECK_NE(&from, this);
  const SheetMusicType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SheetMusicType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.SheetMusicType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.SheetMusicType)
    MergeFrom(*source);
  }
}

void SheetMusicType::MergeFrom(const SheetMusicType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.SheetMusicType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auto_value()) {
    _internal_set_auto_value(from._internal_auto_value());
  }
}

void SheetMusicType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.SheetMusicType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SheetMusicType::CopyFrom(const SheetMusicType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.SheetMusicType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SheetMusicType::IsInitialized() const {
  return true;
}

void SheetMusicType::InternalSwap(SheetMusicType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  auto_value_.Swap(&other->auto_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SheetMusicType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SoftwareType::InitAsDefaultInstance() {
}
class SoftwareType::_Internal {
 public:
  using HasBits = decltype(std::declval<SoftwareType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SoftwareType::SoftwareType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.SoftwareType)
}
SoftwareType::SoftwareType(const SoftwareType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.SoftwareType)
}

void SoftwareType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SoftwareType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SoftwareType::~SoftwareType() {
  // @@protoc_insertion_point(destructor:ern411.avs.SoftwareType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SoftwareType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SoftwareType::ArenaDtor(void* object) {
  SoftwareType* _this = reinterpret_cast< SoftwareType* >(object);
  (void)_this;
}
void SoftwareType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SoftwareType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SoftwareType& SoftwareType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SoftwareType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void SoftwareType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.SoftwareType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SoftwareType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.SoftwareType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SoftwareType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.SoftwareType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.SoftwareType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.SoftwareType)
  return target;
}

size_t SoftwareType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.SoftwareType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SoftwareType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.SoftwareType)
  GOOGLE_DCHECK_NE(&from, this);
  const SoftwareType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SoftwareType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.SoftwareType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.SoftwareType)
    MergeFrom(*source);
  }
}

void SoftwareType::MergeFrom(const SoftwareType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.SoftwareType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void SoftwareType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.SoftwareType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoftwareType::CopyFrom(const SoftwareType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.SoftwareType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoftwareType::IsInitialized() const {
  return true;
}

void SoftwareType::InternalSwap(SoftwareType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SoftwareType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SoundRecordingType::InitAsDefaultInstance() {
}
class SoundRecordingType::_Internal {
 public:
  using HasBits = decltype(std::declval<SoundRecordingType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SoundRecordingType::SoundRecordingType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.SoundRecordingType)
}
SoundRecordingType::SoundRecordingType(const SoundRecordingType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.SoundRecordingType)
}

void SoundRecordingType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SoundRecordingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SoundRecordingType::~SoundRecordingType() {
  // @@protoc_insertion_point(destructor:ern411.avs.SoundRecordingType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SoundRecordingType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SoundRecordingType::ArenaDtor(void* object) {
  SoundRecordingType* _this = reinterpret_cast< SoundRecordingType* >(object);
  (void)_this;
}
void SoundRecordingType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SoundRecordingType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SoundRecordingType& SoundRecordingType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SoundRecordingType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void SoundRecordingType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.SoundRecordingType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SoundRecordingType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.SoundRecordingType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SoundRecordingType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.SoundRecordingType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.SoundRecordingType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.SoundRecordingType)
  return target;
}

size_t SoundRecordingType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.SoundRecordingType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SoundRecordingType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.SoundRecordingType)
  GOOGLE_DCHECK_NE(&from, this);
  const SoundRecordingType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SoundRecordingType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.SoundRecordingType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.SoundRecordingType)
    MergeFrom(*source);
  }
}

void SoundRecordingType::MergeFrom(const SoundRecordingType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.SoundRecordingType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void SoundRecordingType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.SoundRecordingType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoundRecordingType::CopyFrom(const SoundRecordingType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.SoundRecordingType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoundRecordingType::IsInitialized() const {
  return true;
}

void SoundRecordingType::InternalSwap(SoundRecordingType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SoundRecordingType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubTitleType::InitAsDefaultInstance() {
}
class SubTitleType::_Internal {
 public:
  using HasBits = decltype(std::declval<SubTitleType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SubTitleType::SubTitleType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.SubTitleType)
}
SubTitleType::SubTitleType(const SubTitleType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.SubTitleType)
}

void SubTitleType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubTitleType::~SubTitleType() {
  // @@protoc_insertion_point(destructor:ern411.avs.SubTitleType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubTitleType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubTitleType::ArenaDtor(void* object) {
  SubTitleType* _this = reinterpret_cast< SubTitleType* >(object);
  (void)_this;
}
void SubTitleType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubTitleType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubTitleType& SubTitleType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubTitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void SubTitleType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.SubTitleType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubTitleType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.SubTitleType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubTitleType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.SubTitleType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.SubTitleType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.SubTitleType)
  return target;
}

size_t SubTitleType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.SubTitleType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubTitleType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.SubTitleType)
  GOOGLE_DCHECK_NE(&from, this);
  const SubTitleType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubTitleType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.SubTitleType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.SubTitleType)
    MergeFrom(*source);
  }
}

void SubTitleType::MergeFrom(const SubTitleType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.SubTitleType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void SubTitleType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.SubTitleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubTitleType::CopyFrom(const SubTitleType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.SubTitleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubTitleType::IsInitialized() const {
  return true;
}

void SubTitleType::InternalSwap(SubTitleType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubTitleType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TerritoryCodeType::InitAsDefaultInstance() {
}
class TerritoryCodeType::_Internal {
 public:
  using HasBits = decltype(std::declval<TerritoryCodeType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TerritoryCodeType::TerritoryCodeType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.TerritoryCodeType)
}
TerritoryCodeType::TerritoryCodeType(const TerritoryCodeType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.TerritoryCodeType)
}

void TerritoryCodeType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TerritoryCodeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TerritoryCodeType::~TerritoryCodeType() {
  // @@protoc_insertion_point(destructor:ern411.avs.TerritoryCodeType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TerritoryCodeType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TerritoryCodeType::ArenaDtor(void* object) {
  TerritoryCodeType* _this = reinterpret_cast< TerritoryCodeType* >(object);
  (void)_this;
}
void TerritoryCodeType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TerritoryCodeType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TerritoryCodeType& TerritoryCodeType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TerritoryCodeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void TerritoryCodeType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.TerritoryCodeType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TerritoryCodeType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.TerritoryCodeType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TerritoryCodeType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.TerritoryCodeType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.TerritoryCodeType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.TerritoryCodeType)
  return target;
}

size_t TerritoryCodeType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.TerritoryCodeType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TerritoryCodeType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.TerritoryCodeType)
  GOOGLE_DCHECK_NE(&from, this);
  const TerritoryCodeType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TerritoryCodeType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.TerritoryCodeType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.TerritoryCodeType)
    MergeFrom(*source);
  }
}

void TerritoryCodeType::MergeFrom(const TerritoryCodeType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.TerritoryCodeType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void TerritoryCodeType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.TerritoryCodeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerritoryCodeType::CopyFrom(const TerritoryCodeType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.TerritoryCodeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerritoryCodeType::IsInitialized() const {
  return true;
}

void TerritoryCodeType::InternalSwap(TerritoryCodeType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TerritoryCodeType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TerritoryCodeTypeIncludingDeprecatedCodes::InitAsDefaultInstance() {
}
class TerritoryCodeTypeIncludingDeprecatedCodes::_Internal {
 public:
  using HasBits = decltype(std::declval<TerritoryCodeTypeIncludingDeprecatedCodes>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TerritoryCodeTypeIncludingDeprecatedCodes::TerritoryCodeTypeIncludingDeprecatedCodes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
}
TerritoryCodeTypeIncludingDeprecatedCodes::TerritoryCodeTypeIncludingDeprecatedCodes(const TerritoryCodeTypeIncludingDeprecatedCodes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
}

void TerritoryCodeTypeIncludingDeprecatedCodes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TerritoryCodeTypeIncludingDeprecatedCodes_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TerritoryCodeTypeIncludingDeprecatedCodes::~TerritoryCodeTypeIncludingDeprecatedCodes() {
  // @@protoc_insertion_point(destructor:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TerritoryCodeTypeIncludingDeprecatedCodes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TerritoryCodeTypeIncludingDeprecatedCodes::ArenaDtor(void* object) {
  TerritoryCodeTypeIncludingDeprecatedCodes* _this = reinterpret_cast< TerritoryCodeTypeIncludingDeprecatedCodes* >(object);
  (void)_this;
}
void TerritoryCodeTypeIncludingDeprecatedCodes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TerritoryCodeTypeIncludingDeprecatedCodes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TerritoryCodeTypeIncludingDeprecatedCodes& TerritoryCodeTypeIncludingDeprecatedCodes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TerritoryCodeTypeIncludingDeprecatedCodes_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void TerritoryCodeTypeIncludingDeprecatedCodes::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TerritoryCodeTypeIncludingDeprecatedCodes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TerritoryCodeTypeIncludingDeprecatedCodes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  return target;
}

size_t TerritoryCodeTypeIncludingDeprecatedCodes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TerritoryCodeTypeIncludingDeprecatedCodes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  GOOGLE_DCHECK_NE(&from, this);
  const TerritoryCodeTypeIncludingDeprecatedCodes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TerritoryCodeTypeIncludingDeprecatedCodes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
    MergeFrom(*source);
  }
}

void TerritoryCodeTypeIncludingDeprecatedCodes::MergeFrom(const TerritoryCodeTypeIncludingDeprecatedCodes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void TerritoryCodeTypeIncludingDeprecatedCodes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerritoryCodeTypeIncludingDeprecatedCodes::CopyFrom(const TerritoryCodeTypeIncludingDeprecatedCodes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.TerritoryCodeTypeIncludingDeprecatedCodes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerritoryCodeTypeIncludingDeprecatedCodes::IsInitialized() const {
  return true;
}

void TerritoryCodeTypeIncludingDeprecatedCodes::InternalSwap(TerritoryCodeTypeIncludingDeprecatedCodes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TerritoryCodeTypeIncludingDeprecatedCodes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TextCodecType::InitAsDefaultInstance() {
}
class TextCodecType::_Internal {
 public:
  using HasBits = decltype(std::declval<TextCodecType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TextCodecType::TextCodecType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.TextCodecType)
}
TextCodecType::TextCodecType(const TextCodecType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.TextCodecType)
}

void TextCodecType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TextCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TextCodecType::~TextCodecType() {
  // @@protoc_insertion_point(destructor:ern411.avs.TextCodecType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TextCodecType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TextCodecType::ArenaDtor(void* object) {
  TextCodecType* _this = reinterpret_cast< TextCodecType* >(object);
  (void)_this;
}
void TextCodecType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TextCodecType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TextCodecType& TextCodecType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TextCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void TextCodecType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.TextCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TextCodecType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.TextCodecType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TextCodecType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.TextCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.TextCodecType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.TextCodecType)
  return target;
}

size_t TextCodecType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.TextCodecType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextCodecType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.TextCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  const TextCodecType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TextCodecType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.TextCodecType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.TextCodecType)
    MergeFrom(*source);
  }
}

void TextCodecType::MergeFrom(const TextCodecType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.TextCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void TextCodecType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.TextCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextCodecType::CopyFrom(const TextCodecType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.TextCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextCodecType::IsInitialized() const {
  return true;
}

void TextCodecType::InternalSwap(TextCodecType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TextCodecType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TextType::InitAsDefaultInstance() {
}
class TextType::_Internal {
 public:
  using HasBits = decltype(std::declval<TextType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TextType::TextType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.TextType)
}
TextType::TextType(const TextType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.TextType)
}

void TextType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TextType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TextType::~TextType() {
  // @@protoc_insertion_point(destructor:ern411.avs.TextType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TextType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TextType::ArenaDtor(void* object) {
  TextType* _this = reinterpret_cast< TextType* >(object);
  (void)_this;
}
void TextType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TextType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TextType& TextType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TextType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void TextType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.TextType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TextType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.TextType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TextType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.TextType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.TextType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.TextType)
  return target;
}

size_t TextType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.TextType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.TextType)
  GOOGLE_DCHECK_NE(&from, this);
  const TextType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TextType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.TextType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.TextType)
    MergeFrom(*source);
  }
}

void TextType::MergeFrom(const TextType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.TextType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void TextType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.TextType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextType::CopyFrom(const TextType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.TextType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextType::IsInitialized() const {
  return true;
}

void TextType::InternalSwap(TextType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TextType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ThemeType::InitAsDefaultInstance() {
}
class ThemeType::_Internal {
 public:
  using HasBits = decltype(std::declval<ThemeType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ThemeType::ThemeType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.ThemeType)
}
ThemeType::ThemeType(const ThemeType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.ThemeType)
}

void ThemeType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ThemeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ThemeType::~ThemeType() {
  // @@protoc_insertion_point(destructor:ern411.avs.ThemeType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ThemeType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ThemeType::ArenaDtor(void* object) {
  ThemeType* _this = reinterpret_cast< ThemeType* >(object);
  (void)_this;
}
void ThemeType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ThemeType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ThemeType& ThemeType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ThemeType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void ThemeType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.ThemeType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ThemeType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.ThemeType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ThemeType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.ThemeType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.ThemeType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.ThemeType)
  return target;
}

size_t ThemeType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.ThemeType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ThemeType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.ThemeType)
  GOOGLE_DCHECK_NE(&from, this);
  const ThemeType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ThemeType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.ThemeType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.ThemeType)
    MergeFrom(*source);
  }
}

void ThemeType::MergeFrom(const ThemeType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.ThemeType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void ThemeType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.ThemeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThemeType::CopyFrom(const ThemeType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.ThemeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThemeType::IsInitialized() const {
  return true;
}

void ThemeType::InternalSwap(ThemeType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ThemeType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TitleType::InitAsDefaultInstance() {
}
class TitleType::_Internal {
 public:
  using HasBits = decltype(std::declval<TitleType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TitleType::TitleType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.TitleType)
}
TitleType::TitleType(const TitleType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.TitleType)
}

void TitleType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TitleType::~TitleType() {
  // @@protoc_insertion_point(destructor:ern411.avs.TitleType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TitleType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TitleType::ArenaDtor(void* object) {
  TitleType* _this = reinterpret_cast< TitleType* >(object);
  (void)_this;
}
void TitleType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TitleType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TitleType& TitleType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TitleType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void TitleType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.TitleType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TitleType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.TitleType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TitleType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.TitleType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.TitleType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.TitleType)
  return target;
}

size_t TitleType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.TitleType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TitleType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.TitleType)
  GOOGLE_DCHECK_NE(&from, this);
  const TitleType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TitleType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.TitleType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.TitleType)
    MergeFrom(*source);
  }
}

void TitleType::MergeFrom(const TitleType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.TitleType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void TitleType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.TitleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TitleType::CopyFrom(const TitleType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.TitleType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TitleType::IsInitialized() const {
  return true;
}

void TitleType::InternalSwap(TitleType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TitleType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnitOfBitRate::InitAsDefaultInstance() {
}
class UnitOfBitRate::_Internal {
 public:
  using HasBits = decltype(std::declval<UnitOfBitRate>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UnitOfBitRate::UnitOfBitRate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.UnitOfBitRate)
}
UnitOfBitRate::UnitOfBitRate(const UnitOfBitRate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.UnitOfBitRate)
}

void UnitOfBitRate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnitOfBitRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnitOfBitRate::~UnitOfBitRate() {
  // @@protoc_insertion_point(destructor:ern411.avs.UnitOfBitRate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnitOfBitRate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnitOfBitRate::ArenaDtor(void* object) {
  UnitOfBitRate* _this = reinterpret_cast< UnitOfBitRate* >(object);
  (void)_this;
}
void UnitOfBitRate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnitOfBitRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnitOfBitRate& UnitOfBitRate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnitOfBitRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void UnitOfBitRate::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.UnitOfBitRate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnitOfBitRate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.UnitOfBitRate.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnitOfBitRate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.UnitOfBitRate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.UnitOfBitRate.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.UnitOfBitRate)
  return target;
}

size_t UnitOfBitRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.UnitOfBitRate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnitOfBitRate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.UnitOfBitRate)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitOfBitRate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnitOfBitRate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.UnitOfBitRate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.UnitOfBitRate)
    MergeFrom(*source);
  }
}

void UnitOfBitRate::MergeFrom(const UnitOfBitRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.UnitOfBitRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void UnitOfBitRate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.UnitOfBitRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitOfBitRate::CopyFrom(const UnitOfBitRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.UnitOfBitRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitOfBitRate::IsInitialized() const {
  return true;
}

void UnitOfBitRate::InternalSwap(UnitOfBitRate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnitOfBitRate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnitOfConditionValue::InitAsDefaultInstance() {
}
class UnitOfConditionValue::_Internal {
 public:
  using HasBits = decltype(std::declval<UnitOfConditionValue>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UnitOfConditionValue::UnitOfConditionValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.UnitOfConditionValue)
}
UnitOfConditionValue::UnitOfConditionValue(const UnitOfConditionValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.UnitOfConditionValue)
}

void UnitOfConditionValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnitOfConditionValue_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnitOfConditionValue::~UnitOfConditionValue() {
  // @@protoc_insertion_point(destructor:ern411.avs.UnitOfConditionValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnitOfConditionValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnitOfConditionValue::ArenaDtor(void* object) {
  UnitOfConditionValue* _this = reinterpret_cast< UnitOfConditionValue* >(object);
  (void)_this;
}
void UnitOfConditionValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnitOfConditionValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnitOfConditionValue& UnitOfConditionValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnitOfConditionValue_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void UnitOfConditionValue::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.UnitOfConditionValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnitOfConditionValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.UnitOfConditionValue.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnitOfConditionValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.UnitOfConditionValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.UnitOfConditionValue.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.UnitOfConditionValue)
  return target;
}

size_t UnitOfConditionValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.UnitOfConditionValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnitOfConditionValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.UnitOfConditionValue)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitOfConditionValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnitOfConditionValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.UnitOfConditionValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.UnitOfConditionValue)
    MergeFrom(*source);
  }
}

void UnitOfConditionValue::MergeFrom(const UnitOfConditionValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.UnitOfConditionValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void UnitOfConditionValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.UnitOfConditionValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitOfConditionValue::CopyFrom(const UnitOfConditionValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.UnitOfConditionValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitOfConditionValue::IsInitialized() const {
  return true;
}

void UnitOfConditionValue::InternalSwap(UnitOfConditionValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnitOfConditionValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnitOfExtent::InitAsDefaultInstance() {
}
class UnitOfExtent::_Internal {
 public:
  using HasBits = decltype(std::declval<UnitOfExtent>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UnitOfExtent::UnitOfExtent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.UnitOfExtent)
}
UnitOfExtent::UnitOfExtent(const UnitOfExtent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.UnitOfExtent)
}

void UnitOfExtent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnitOfExtent_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnitOfExtent::~UnitOfExtent() {
  // @@protoc_insertion_point(destructor:ern411.avs.UnitOfExtent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnitOfExtent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnitOfExtent::ArenaDtor(void* object) {
  UnitOfExtent* _this = reinterpret_cast< UnitOfExtent* >(object);
  (void)_this;
}
void UnitOfExtent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnitOfExtent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnitOfExtent& UnitOfExtent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnitOfExtent_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void UnitOfExtent::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.UnitOfExtent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnitOfExtent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.UnitOfExtent.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnitOfExtent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.UnitOfExtent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.UnitOfExtent.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.UnitOfExtent)
  return target;
}

size_t UnitOfExtent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.UnitOfExtent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnitOfExtent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.UnitOfExtent)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitOfExtent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnitOfExtent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.UnitOfExtent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.UnitOfExtent)
    MergeFrom(*source);
  }
}

void UnitOfExtent::MergeFrom(const UnitOfExtent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.UnitOfExtent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void UnitOfExtent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.UnitOfExtent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitOfExtent::CopyFrom(const UnitOfExtent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.UnitOfExtent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitOfExtent::IsInitialized() const {
  return true;
}

void UnitOfExtent::InternalSwap(UnitOfExtent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnitOfExtent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnitOfFrameRate::InitAsDefaultInstance() {
}
class UnitOfFrameRate::_Internal {
 public:
  using HasBits = decltype(std::declval<UnitOfFrameRate>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UnitOfFrameRate::UnitOfFrameRate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.UnitOfFrameRate)
}
UnitOfFrameRate::UnitOfFrameRate(const UnitOfFrameRate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.UnitOfFrameRate)
}

void UnitOfFrameRate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnitOfFrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnitOfFrameRate::~UnitOfFrameRate() {
  // @@protoc_insertion_point(destructor:ern411.avs.UnitOfFrameRate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnitOfFrameRate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnitOfFrameRate::ArenaDtor(void* object) {
  UnitOfFrameRate* _this = reinterpret_cast< UnitOfFrameRate* >(object);
  (void)_this;
}
void UnitOfFrameRate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnitOfFrameRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnitOfFrameRate& UnitOfFrameRate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnitOfFrameRate_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void UnitOfFrameRate::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.UnitOfFrameRate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnitOfFrameRate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.UnitOfFrameRate.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnitOfFrameRate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.UnitOfFrameRate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.UnitOfFrameRate.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.UnitOfFrameRate)
  return target;
}

size_t UnitOfFrameRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.UnitOfFrameRate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnitOfFrameRate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.UnitOfFrameRate)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitOfFrameRate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnitOfFrameRate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.UnitOfFrameRate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.UnitOfFrameRate)
    MergeFrom(*source);
  }
}

void UnitOfFrameRate::MergeFrom(const UnitOfFrameRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.UnitOfFrameRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void UnitOfFrameRate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.UnitOfFrameRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitOfFrameRate::CopyFrom(const UnitOfFrameRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.UnitOfFrameRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitOfFrameRate::IsInitialized() const {
  return true;
}

void UnitOfFrameRate::InternalSwap(UnitOfFrameRate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnitOfFrameRate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnitOfFrequency::InitAsDefaultInstance() {
}
class UnitOfFrequency::_Internal {
 public:
  using HasBits = decltype(std::declval<UnitOfFrequency>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UnitOfFrequency::UnitOfFrequency(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.UnitOfFrequency)
}
UnitOfFrequency::UnitOfFrequency(const UnitOfFrequency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.UnitOfFrequency)
}

void UnitOfFrequency::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnitOfFrequency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnitOfFrequency::~UnitOfFrequency() {
  // @@protoc_insertion_point(destructor:ern411.avs.UnitOfFrequency)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnitOfFrequency::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnitOfFrequency::ArenaDtor(void* object) {
  UnitOfFrequency* _this = reinterpret_cast< UnitOfFrequency* >(object);
  (void)_this;
}
void UnitOfFrequency::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnitOfFrequency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnitOfFrequency& UnitOfFrequency::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnitOfFrequency_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void UnitOfFrequency::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.UnitOfFrequency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnitOfFrequency::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.UnitOfFrequency.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnitOfFrequency::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.UnitOfFrequency)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.UnitOfFrequency.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.UnitOfFrequency)
  return target;
}

size_t UnitOfFrequency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.UnitOfFrequency)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnitOfFrequency::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.UnitOfFrequency)
  GOOGLE_DCHECK_NE(&from, this);
  const UnitOfFrequency* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnitOfFrequency>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.UnitOfFrequency)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.UnitOfFrequency)
    MergeFrom(*source);
  }
}

void UnitOfFrequency::MergeFrom(const UnitOfFrequency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.UnitOfFrequency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void UnitOfFrequency::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.UnitOfFrequency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitOfFrequency::CopyFrom(const UnitOfFrequency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.UnitOfFrequency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitOfFrequency::IsInitialized() const {
  return true;
}

void UnitOfFrequency::InternalSwap(UnitOfFrequency* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnitOfFrequency::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UseType::InitAsDefaultInstance() {
}
class UseType::_Internal {
 public:
  using HasBits = decltype(std::declval<UseType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UseType::UseType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.UseType)
}
UseType::UseType(const UseType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.UseType)
}

void UseType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UseType::~UseType() {
  // @@protoc_insertion_point(destructor:ern411.avs.UseType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UseType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UseType::ArenaDtor(void* object) {
  UseType* _this = reinterpret_cast< UseType* >(object);
  (void)_this;
}
void UseType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UseType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UseType& UseType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UseType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void UseType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.UseType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UseType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.UseType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UseType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.UseType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.UseType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.UseType)
  return target;
}

size_t UseType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.UseType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UseType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.UseType)
  GOOGLE_DCHECK_NE(&from, this);
  const UseType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UseType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.UseType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.UseType)
    MergeFrom(*source);
  }
}

void UseType::MergeFrom(const UseType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.UseType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void UseType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.UseType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseType::CopyFrom(const UseType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.UseType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseType::IsInitialized() const {
  return true;
}

void UseType::InternalSwap(UseType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UseType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VersionType::InitAsDefaultInstance() {
}
class VersionType::_Internal {
 public:
  using HasBits = decltype(std::declval<VersionType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VersionType::VersionType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.VersionType)
}
VersionType::VersionType(const VersionType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.VersionType)
}

void VersionType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VersionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VersionType::~VersionType() {
  // @@protoc_insertion_point(destructor:ern411.avs.VersionType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VersionType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VersionType::ArenaDtor(void* object) {
  VersionType* _this = reinterpret_cast< VersionType* >(object);
  (void)_this;
}
void VersionType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VersionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VersionType& VersionType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VersionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void VersionType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.VersionType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VersionType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.VersionType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VersionType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.VersionType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.VersionType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.VersionType)
  return target;
}

size_t VersionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.VersionType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VersionType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.VersionType)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VersionType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.VersionType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.VersionType)
    MergeFrom(*source);
  }
}

void VersionType::MergeFrom(const VersionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.VersionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void VersionType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.VersionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionType::CopyFrom(const VersionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.VersionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionType::IsInitialized() const {
  return true;
}

void VersionType::InternalSwap(VersionType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VersionType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VideoCodecType::InitAsDefaultInstance() {
}
class VideoCodecType::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoCodecType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VideoCodecType::VideoCodecType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.VideoCodecType)
}
VideoCodecType::VideoCodecType(const VideoCodecType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.VideoCodecType)
}

void VideoCodecType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VideoCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VideoCodecType::~VideoCodecType() {
  // @@protoc_insertion_point(destructor:ern411.avs.VideoCodecType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VideoCodecType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VideoCodecType::ArenaDtor(void* object) {
  VideoCodecType* _this = reinterpret_cast< VideoCodecType* >(object);
  (void)_this;
}
void VideoCodecType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VideoCodecType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VideoCodecType& VideoCodecType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VideoCodecType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void VideoCodecType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.VideoCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VideoCodecType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.VideoCodecType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VideoCodecType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.VideoCodecType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.VideoCodecType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.VideoCodecType)
  return target;
}

size_t VideoCodecType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.VideoCodecType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VideoCodecType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.VideoCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoCodecType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VideoCodecType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.VideoCodecType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.VideoCodecType)
    MergeFrom(*source);
  }
}

void VideoCodecType::MergeFrom(const VideoCodecType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.VideoCodecType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void VideoCodecType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.VideoCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoCodecType::CopyFrom(const VideoCodecType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.VideoCodecType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoCodecType::IsInitialized() const {
  return true;
}

void VideoCodecType::InternalSwap(VideoCodecType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VideoCodecType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VideoDefinitionType::InitAsDefaultInstance() {
}
class VideoDefinitionType::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoDefinitionType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VideoDefinitionType::VideoDefinitionType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.VideoDefinitionType)
}
VideoDefinitionType::VideoDefinitionType(const VideoDefinitionType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.VideoDefinitionType)
}

void VideoDefinitionType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VideoDefinitionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VideoDefinitionType::~VideoDefinitionType() {
  // @@protoc_insertion_point(destructor:ern411.avs.VideoDefinitionType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VideoDefinitionType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VideoDefinitionType::ArenaDtor(void* object) {
  VideoDefinitionType* _this = reinterpret_cast< VideoDefinitionType* >(object);
  (void)_this;
}
void VideoDefinitionType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VideoDefinitionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VideoDefinitionType& VideoDefinitionType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VideoDefinitionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void VideoDefinitionType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.VideoDefinitionType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VideoDefinitionType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.VideoDefinitionType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VideoDefinitionType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.VideoDefinitionType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.VideoDefinitionType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.VideoDefinitionType)
  return target;
}

size_t VideoDefinitionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.VideoDefinitionType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VideoDefinitionType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.VideoDefinitionType)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoDefinitionType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VideoDefinitionType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.VideoDefinitionType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.VideoDefinitionType)
    MergeFrom(*source);
  }
}

void VideoDefinitionType::MergeFrom(const VideoDefinitionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.VideoDefinitionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void VideoDefinitionType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.VideoDefinitionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoDefinitionType::CopyFrom(const VideoDefinitionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.VideoDefinitionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoDefinitionType::IsInitialized() const {
  return true;
}

void VideoDefinitionType::InternalSwap(VideoDefinitionType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VideoDefinitionType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VideoType::InitAsDefaultInstance() {
}
class VideoType::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VideoType::VideoType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.VideoType)
}
VideoType::VideoType(const VideoType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.VideoType)
}

void VideoType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VideoType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VideoType::~VideoType() {
  // @@protoc_insertion_point(destructor:ern411.avs.VideoType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VideoType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VideoType::ArenaDtor(void* object) {
  VideoType* _this = reinterpret_cast< VideoType* >(object);
  (void)_this;
}
void VideoType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VideoType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VideoType& VideoType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VideoType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void VideoType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.VideoType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VideoType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.VideoType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VideoType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.VideoType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.VideoType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.VideoType)
  return target;
}

size_t VideoType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.VideoType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VideoType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.VideoType)
  GOOGLE_DCHECK_NE(&from, this);
  const VideoType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VideoType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.VideoType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.VideoType)
    MergeFrom(*source);
  }
}

void VideoType::MergeFrom(const VideoType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.VideoType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void VideoType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.VideoType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VideoType::CopyFrom(const VideoType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.VideoType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VideoType::IsInitialized() const {
  return true;
}

void VideoType::InternalSwap(VideoType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VideoType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VisualPerceptionType::InitAsDefaultInstance() {
}
class VisualPerceptionType::_Internal {
 public:
  using HasBits = decltype(std::declval<VisualPerceptionType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VisualPerceptionType::VisualPerceptionType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.VisualPerceptionType)
}
VisualPerceptionType::VisualPerceptionType(const VisualPerceptionType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.VisualPerceptionType)
}

void VisualPerceptionType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VisualPerceptionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VisualPerceptionType::~VisualPerceptionType() {
  // @@protoc_insertion_point(destructor:ern411.avs.VisualPerceptionType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VisualPerceptionType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VisualPerceptionType::ArenaDtor(void* object) {
  VisualPerceptionType* _this = reinterpret_cast< VisualPerceptionType* >(object);
  (void)_this;
}
void VisualPerceptionType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VisualPerceptionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VisualPerceptionType& VisualPerceptionType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VisualPerceptionType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void VisualPerceptionType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.VisualPerceptionType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VisualPerceptionType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.VisualPerceptionType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VisualPerceptionType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.VisualPerceptionType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.VisualPerceptionType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.VisualPerceptionType)
  return target;
}

size_t VisualPerceptionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.VisualPerceptionType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VisualPerceptionType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.VisualPerceptionType)
  GOOGLE_DCHECK_NE(&from, this);
  const VisualPerceptionType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VisualPerceptionType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.VisualPerceptionType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.VisualPerceptionType)
    MergeFrom(*source);
  }
}

void VisualPerceptionType::MergeFrom(const VisualPerceptionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.VisualPerceptionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void VisualPerceptionType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.VisualPerceptionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisualPerceptionType::CopyFrom(const VisualPerceptionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.VisualPerceptionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisualPerceptionType::IsInitialized() const {
  return true;
}

void VisualPerceptionType::InternalSwap(VisualPerceptionType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VisualPerceptionType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VocalType::InitAsDefaultInstance() {
}
class VocalType::_Internal {
 public:
  using HasBits = decltype(std::declval<VocalType>()._has_bits_);
  static void set_has_enum_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VocalType::VocalType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ern411.avs.VocalType)
}
VocalType::VocalType(const VocalType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_enum_value()) {
    enum_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enum_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ern411.avs.VocalType)
}

void VocalType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VocalType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  enum_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VocalType::~VocalType() {
  // @@protoc_insertion_point(destructor:ern411.avs.VocalType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VocalType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  enum_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VocalType::ArenaDtor(void* object) {
  VocalType* _this = reinterpret_cast< VocalType* >(object);
  (void)_this;
}
void VocalType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VocalType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VocalType& VocalType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VocalType_ddex_2dxmltoproto_2fgenerated_2fern42_2favs_2eproto.base);
  return *internal_default_instance();
}


void VocalType::Clear() {
// @@protoc_insertion_point(message_clear_start:ern411.avs.VocalType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    enum_value_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VocalType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string enum_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_enum_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ern411.avs.VocalType.enum_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VocalType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ern411.avs.VocalType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string enum_value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_enum_value().data(), static_cast<int>(this->_internal_enum_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ern411.avs.VocalType.enum_value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_enum_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ern411.avs.VocalType)
  return target;
}

size_t VocalType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ern411.avs.VocalType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string enum_value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enum_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VocalType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ern411.avs.VocalType)
  GOOGLE_DCHECK_NE(&from, this);
  const VocalType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VocalType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ern411.avs.VocalType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ern411.avs.VocalType)
    MergeFrom(*source);
  }
}

void VocalType::MergeFrom(const VocalType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ern411.avs.VocalType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_enum_value()) {
    _internal_set_enum_value(from._internal_enum_value());
  }
}

void VocalType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ern411.avs.VocalType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VocalType::CopyFrom(const VocalType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ern411.avs.VocalType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VocalType::IsInitialized() const {
  return true;
}

void VocalType::InternalSwap(VocalType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  enum_value_.Swap(&other->enum_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VocalType::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace avs
}  // namespace ern411
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ern411::avs::AdditionalTitleType* Arena::CreateMaybeMessage< ::ern411::avs::AdditionalTitleType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::AdditionalTitleType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::AdministratingRecordCompanyRole* Arena::CreateMaybeMessage< ::ern411::avs::AdministratingRecordCompanyRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::AdministratingRecordCompanyRole >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::AffiliationType* Arena::CreateMaybeMessage< ::ern411::avs::AffiliationType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::AffiliationType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::AllTerritoryCode* Arena::CreateMaybeMessage< ::ern411::avs::AllTerritoryCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::AllTerritoryCode >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::AspectRatioType* Arena::CreateMaybeMessage< ::ern411::avs::AspectRatioType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::AspectRatioType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::AudioCodecType* Arena::CreateMaybeMessage< ::ern411::avs::AudioCodecType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::AudioCodecType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::BinaryDataType* Arena::CreateMaybeMessage< ::ern411::avs::BinaryDataType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::BinaryDataType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CarrierType* Arena::CreateMaybeMessage< ::ern411::avs::CarrierType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CarrierType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CodingType* Arena::CreateMaybeMessage< ::ern411::avs::CodingType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CodingType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CommercialModelType* Arena::CreateMaybeMessage< ::ern411::avs::CommercialModelType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CommercialModelType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CompositeMusicalWorkType* Arena::CreateMaybeMessage< ::ern411::avs::CompositeMusicalWorkType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CompositeMusicalWorkType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ContainerFormat* Arena::CreateMaybeMessage< ::ern411::avs::ContainerFormat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ContainerFormat >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ContributorRole* Arena::CreateMaybeMessage< ::ern411::avs::ContributorRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ContributorRole >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CueOrigin* Arena::CreateMaybeMessage< ::ern411::avs::CueOrigin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CueOrigin >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CueSheetType* Arena::CreateMaybeMessage< ::ern411::avs::CueSheetType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CueSheetType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CueUseType* Arena::CreateMaybeMessage< ::ern411::avs::CueUseType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CueUseType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CurrencyCode* Arena::CreateMaybeMessage< ::ern411::avs::CurrencyCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CurrencyCode >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::CurrentTerritoryCode* Arena::CreateMaybeMessage< ::ern411::avs::CurrentTerritoryCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::CurrentTerritoryCode >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::DisplayArtistRole* Arena::CreateMaybeMessage< ::ern411::avs::DisplayArtistRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::DisplayArtistRole >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ExpressionType* Arena::CreateMaybeMessage< ::ern411::avs::ExpressionType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ExpressionType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ExternallyLinkedResourceType* Arena::CreateMaybeMessage< ::ern411::avs::ExternallyLinkedResourceType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ExternallyLinkedResourceType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::FingerprintAlgorithmType* Arena::CreateMaybeMessage< ::ern411::avs::FingerprintAlgorithmType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::FingerprintAlgorithmType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::FrameRate* Arena::CreateMaybeMessage< ::ern411::avs::FrameRate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::FrameRate >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::HashSumAlgorithmType* Arena::CreateMaybeMessage< ::ern411::avs::HashSumAlgorithmType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::HashSumAlgorithmType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ImageCodecType* Arena::CreateMaybeMessage< ::ern411::avs::ImageCodecType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ImageCodecType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ImageType* Arena::CreateMaybeMessage< ::ern411::avs::ImageType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ImageType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::InstrumentType* Arena::CreateMaybeMessage< ::ern411::avs::InstrumentType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::InstrumentType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::IsoLanguageCode* Arena::CreateMaybeMessage< ::ern411::avs::IsoLanguageCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::IsoLanguageCode >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::LabelType* Arena::CreateMaybeMessage< ::ern411::avs::LabelType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::LabelType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::LinkDescription* Arena::CreateMaybeMessage< ::ern411::avs::LinkDescription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::LinkDescription >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::MessageControlType* Arena::CreateMaybeMessage< ::ern411::avs::MessageControlType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::MessageControlType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::OperatingSystemType* Arena::CreateMaybeMessage< ::ern411::avs::OperatingSystemType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::OperatingSystemType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::PLineType* Arena::CreateMaybeMessage< ::ern411::avs::PLineType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::PLineType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ParentalWarningType* Arena::CreateMaybeMessage< ::ern411::avs::ParentalWarningType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ParentalWarningType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::PartyRelationshipType* Arena::CreateMaybeMessage< ::ern411::avs::PartyRelationshipType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::PartyRelationshipType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::Period* Arena::CreateMaybeMessage< ::ern411::avs::Period >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::Period >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::PriceInformationType* Arena::CreateMaybeMessage< ::ern411::avs::PriceInformationType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::PriceInformationType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::PriceType* Arena::CreateMaybeMessage< ::ern411::avs::PriceType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::PriceType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::Purpose* Arena::CreateMaybeMessage< ::ern411::avs::Purpose >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::Purpose >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::RatingAgency* Arena::CreateMaybeMessage< ::ern411::avs::RatingAgency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::RatingAgency >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::RatingReason* Arena::CreateMaybeMessage< ::ern411::avs::RatingReason >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::RatingReason >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::RecordingMode* Arena::CreateMaybeMessage< ::ern411::avs::RecordingMode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::RecordingMode >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ReferenceCreation* Arena::CreateMaybeMessage< ::ern411::avs::ReferenceCreation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ReferenceCreation >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::RelationalRelator* Arena::CreateMaybeMessage< ::ern411::avs::RelationalRelator >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::RelationalRelator >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ReleaseProfileVariantVersionId* Arena::CreateMaybeMessage< ::ern411::avs::ReleaseProfileVariantVersionId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ReleaseProfileVariantVersionId >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ReleaseProfileVersionId* Arena::CreateMaybeMessage< ::ern411::avs::ReleaseProfileVersionId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ReleaseProfileVersionId >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ReleaseRelationshipType* Arena::CreateMaybeMessage< ::ern411::avs::ReleaseRelationshipType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ReleaseRelationshipType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ReleaseType_ERN4* Arena::CreateMaybeMessage< ::ern411::avs::ReleaseType_ERN4 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ReleaseType_ERN4 >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ResourceGroupType* Arena::CreateMaybeMessage< ::ern411::avs::ResourceGroupType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ResourceGroupType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ResourceRelationshipType* Arena::CreateMaybeMessage< ::ern411::avs::ResourceRelationshipType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ResourceRelationshipType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::RightsClaimPolicyType* Arena::CreateMaybeMessage< ::ern411::avs::RightsClaimPolicyType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::RightsClaimPolicyType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::RightsControllerRole* Arena::CreateMaybeMessage< ::ern411::avs::RightsControllerRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::RightsControllerRole >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::RightsControllerType* Arena::CreateMaybeMessage< ::ern411::avs::RightsControllerType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::RightsControllerType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::RightsCoverage* Arena::CreateMaybeMessage< ::ern411::avs::RightsCoverage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::RightsCoverage >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::SheetMusicCodecType* Arena::CreateMaybeMessage< ::ern411::avs::SheetMusicCodecType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::SheetMusicCodecType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::SheetMusicType* Arena::CreateMaybeMessage< ::ern411::avs::SheetMusicType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::SheetMusicType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::SoftwareType* Arena::CreateMaybeMessage< ::ern411::avs::SoftwareType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::SoftwareType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::SoundRecordingType* Arena::CreateMaybeMessage< ::ern411::avs::SoundRecordingType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::SoundRecordingType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::SubTitleType* Arena::CreateMaybeMessage< ::ern411::avs::SubTitleType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::SubTitleType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::TerritoryCodeType* Arena::CreateMaybeMessage< ::ern411::avs::TerritoryCodeType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::TerritoryCodeType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes* Arena::CreateMaybeMessage< ::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::TerritoryCodeTypeIncludingDeprecatedCodes >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::TextCodecType* Arena::CreateMaybeMessage< ::ern411::avs::TextCodecType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::TextCodecType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::TextType* Arena::CreateMaybeMessage< ::ern411::avs::TextType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::TextType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::ThemeType* Arena::CreateMaybeMessage< ::ern411::avs::ThemeType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::ThemeType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::TitleType* Arena::CreateMaybeMessage< ::ern411::avs::TitleType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::TitleType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::UnitOfBitRate* Arena::CreateMaybeMessage< ::ern411::avs::UnitOfBitRate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::UnitOfBitRate >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::UnitOfConditionValue* Arena::CreateMaybeMessage< ::ern411::avs::UnitOfConditionValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::UnitOfConditionValue >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::UnitOfExtent* Arena::CreateMaybeMessage< ::ern411::avs::UnitOfExtent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::UnitOfExtent >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::UnitOfFrameRate* Arena::CreateMaybeMessage< ::ern411::avs::UnitOfFrameRate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::UnitOfFrameRate >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::UnitOfFrequency* Arena::CreateMaybeMessage< ::ern411::avs::UnitOfFrequency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::UnitOfFrequency >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::UseType* Arena::CreateMaybeMessage< ::ern411::avs::UseType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::UseType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::VersionType* Arena::CreateMaybeMessage< ::ern411::avs::VersionType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::VersionType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::VideoCodecType* Arena::CreateMaybeMessage< ::ern411::avs::VideoCodecType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::VideoCodecType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::VideoDefinitionType* Arena::CreateMaybeMessage< ::ern411::avs::VideoDefinitionType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::VideoDefinitionType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::VideoType* Arena::CreateMaybeMessage< ::ern411::avs::VideoType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::VideoType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::VisualPerceptionType* Arena::CreateMaybeMessage< ::ern411::avs::VisualPerceptionType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::VisualPerceptionType >(arena);
}
template<> PROTOBUF_NOINLINE ::ern411::avs::VocalType* Arena::CreateMaybeMessage< ::ern411::avs::VocalType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ern411::avs::VocalType >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
